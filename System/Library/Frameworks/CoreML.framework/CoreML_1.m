uint64_t sub_19C52D34C(char **a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  char *v16;
  char **v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint8_t *v20;
  void (*v21)(char *, char **, _QWORD *);
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t **, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD **);
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  char **v75;
  os_signpost_type_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  _QWORD *v81;
  const char *v82;
  char *v83;
  uint8_t *v84;
  os_signpost_id_t v85;
  void (*v86)(char *, _QWORD *);
  uint64_t result;
  id v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char **, _QWORD *);
  uint64_t v96;
  char **v97;
  _QWORD *v98;
  void (*v99)(char *, char **, _QWORD *);
  char *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  _QWORD *v106;

  v101 = a2;
  v92 = sub_19CAA9764();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)sub_19CAA9740();
  v5 = (uint64_t *)*(v4 - 1);
  v6 = MEMORY[0x1E0C80A78](v4);
  v97 = (char **)((char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v6);
  v100 = (char *)&v89 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char **)((char *)&v89 - v10);
  if (qword_1EE422E60 != -1)
    goto LABEL_82;
  while (1)
  {
    v12 = sub_19CAA9758();
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EE4317F0);
    sub_19CAA9734();
    v94 = v13;
    v14 = sub_19CAA974C();
    v15 = sub_19CAA9D64();
    if ((sub_19CAA9DDC() & 1) != 0)
    {
      v99 = (void (*)(char *, char **, _QWORD *))v5[2];
      v16 = v100;
      v99(v100, v11, v4);
      v17 = a1;
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = sub_19CAA9728();
      _os_signpost_emit_with_name_impl(&dword_19C486000, v14, v15, v19, "GPU :: Storage recycle", "", v18, 2u);
      v20 = v18;
      a1 = v17;
      MEMORY[0x1A1AD7790](v20, -1, -1);

      ((void (*)(char *, _QWORD *))v5[1])(v16, v4);
      v21 = v99;
    }
    else
    {

      v21 = (void (*)(char *, char **, _QWORD *))v5[2];
      v16 = v100;
    }
    v99 = v21;
    v21(v16, v11, v4);
    sub_19CAA9788();
    swift_allocObject();
    v22 = sub_19CAA977C();
    v95 = (void (*)(char **, _QWORD *))v5[1];
    v95(v11, v4);
    v23 = *a1;
    a1 = &selRef_calculateDistancesForNodesBetweenLeft_andRight_toQueryPoint_;
    v24 = objc_msgSend(objc_msgSend(v101, sel_device), sel_registryID);
    swift_unknownObjectRelease();
    swift_beginAccess();
    v25 = *((_QWORD *)v23 + 2);
    if (!*(_QWORD *)(v25 + 16))
      goto LABEL_86;
    v26 = sub_19C552148((uint64_t)v24);
    if ((v27 & 1) == 0)
      goto LABEL_86;
    v28 = *(_QWORD **)(*(_QWORD *)(v25 + 56) + 8 * v26);
    swift_endAccess();
    swift_retain();
    v29 = (uint64_t)objc_msgSend(v101, sel_length);
    v30 = v29 & 0xF;
    if (v29 <= 0)
      v30 = -(-v29 & 0xF);
    v98 = v4;
    v96 = v22;
    if (v30)
      break;
    v93 = v29;
LABEL_14:
    swift_beginAccess();
    v34 = v28[7];
    v32 = __OFSUB__(v34, 1);
    v35 = v34 - 1;
    if (!v32)
    {
      v36 = v28 + 6;
      v11 = &selRef_encodeWaitForEvent_value_;
      do
      {
        if (v28[10] < v35)
        {
LABEL_66:
          swift_beginAccess();
          v70 = v101;
          sub_19C52DD4C((uint64_t)v101, v93);
          swift_endAccess();
          v71 = (char *)objc_msgSend(v70, sel_allocatedSize);
          v72 = v28[11];
          v32 = __OFADD__(v72, v71);
          v73 = &v71[v72];
          if (!v32)
          {
            v28[11] = v73;
            swift_release();
            v74 = sub_19CAA974C();
            v75 = v97;
            sub_19CAA9770();
            v76 = sub_19CAA9D58();
            if ((sub_19CAA9DDC() & 1) != 0)
            {
              swift_retain();
              v77 = v90;
              sub_19CAA9794();
              swift_release();
              v78 = v91;
              v79 = v92;
              v80 = (*(uint64_t (**)(char *, uint64_t))(v91 + 88))(v77, v92);
              v81 = v98;
              if (v80 == *MEMORY[0x1E0DF2190])
              {
                v82 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
                v82 = "";
              }
              v83 = v100;
              v99(v100, v75, v81);
              v84 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v84 = 0;
              v85 = sub_19CAA9728();
              _os_signpost_emit_with_name_impl(&dword_19C486000, v74, v76, v85, "GPU :: Storage recycle", v82, v84, 2u);
              MEMORY[0x1A1AD7790](v84, -1, -1);

              v86 = (void (*)(char *, _QWORD *))v95;
              v95(v75, v81);
              v86(v83, v81);
            }
            else
            {

              v95(v75, v98);
            }
            return swift_release();
          }
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        swift_beginAccess();
        if (*(uint64_t *)(*v36 + 24) < 1)
          goto LABEL_17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_19C551690();
        v38 = (_QWORD *)*v36;
        v39 = *(_QWORD *)(*v36 + 24);
        v32 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v32)
          goto LABEL_75;
        v41 = v38[4] + v40;
        v42 = v38[2];
        if (v41 < v42)
          v42 = 0;
        v43 = v38[v41 - v42 + 5];
        v38[3] = v40;
        v105 = v43;
        v45 = sub_19C52F040(&v103, v43);
        if (!*(_QWORD *)v44 || *(uint64_t *)(*(_QWORD *)v44 + 24) <= 0)
        {
          v45((uint64_t **)&v103, 0);
LABEL_17:
          swift_endAccess();
          goto LABEL_18;
        }
        v46 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_19C5516A4();
        v47 = *(_QWORD **)v46;
        v48 = *(_QWORD *)(*(_QWORD *)v46 + 24);
        v32 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v32)
          goto LABEL_76;
        v50 = v47[4] + v49;
        v51 = v47[2];
        if (v50 < v51)
          v51 = 0;
        v4 = (_QWORD *)v47[v50 - v51 + 5];
        v47[3] = v49;
        v45((uint64_t **)&v103, 0);
        v53 = v28[3];
        v52 = (_QWORD *)v28[4];
        v54 = v28[5];
        v55 = v52 + 4;
        v56 = v52[2];
        if (v53)
        {
          v57 = sub_19C52F874(v105, (uint64_t)v55, v56, (uint64_t *)(v53 + 16));
          if ((v58 & 1) == 0)
          {
            if ((v57 & 0x8000000000000000) != 0)
            {
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
            goto LABEL_40;
          }
        }
        else if (v56)
        {
          if (*v55 == v105)
          {
            v57 = 0;
            goto LABEL_40;
          }
          if (v56 != 1)
          {
            if (v52[5] == v105)
            {
              v57 = 1;
              goto LABEL_40;
            }
            if (v56 != 2)
            {
              if (v52[6] == v105)
              {
                v57 = 2;
                goto LABEL_40;
              }
              if (v56 != 3)
              {
                if (v52[7] == v105)
                {
                  v57 = 3;
LABEL_40:
                  if (v57 >= *(_QWORD *)(v54 + 16))
                    goto LABEL_79;
                  if (!*(_QWORD *)(*(_QWORD *)(v54 + 8 * v57 + 32) + 24))
                  {
                    v5 = &v89;
                    MEMORY[0x1E0C80A78](v57);
                    v59 = v102;
                    v60 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530C6C);
                    a1 = *(char ***)(*v36 + 24);
                    if ((uint64_t)a1 < v60)
                      goto LABEL_80;
                    if (v60 < 0)
                      goto LABEL_81;
                    v102 = v59;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      sub_19C551690();
                    sub_19C52FCE8((char *)v60, (uint64_t)a1, (uint64_t *)(*v36 + 16), (char *)(*v36 + 40));
                  }
                  goto LABEL_48;
                }
                v67 = 0;
                v68 = v52 + 8;
                while (v56 - 4 != v67)
                {
                  v69 = v68[v67++];
                  if (v69 == v105)
                  {
                    v57 = v67 + 3;
                    if (((v67 + 3) & 0x8000000000000000) == 0)
                      goto LABEL_40;
                    goto LABEL_65;
                  }
                }
              }
            }
          }
        }
LABEL_48:
        v61 = v28[10];
        v32 = __OFSUB__(v61, 1);
        v62 = v61 - 1;
        if (v32)
          goto LABEL_77;
        v28[10] = v62;
        v106 = v4;
        v63 = (void (*)(_QWORD **))v28[8];
        if (v63)
        {
          swift_retain();
          v63(&v106);
          sub_19C530F14((uint64_t)v63);
        }
        swift_endAccess();
        v64 = objc_msgSend(v4, sel_allocatedSize);
        swift_unknownObjectRelease();
        v65 = v28[11];
        v32 = __OFSUB__(v65, v64);
        v66 = v65 - (_QWORD)v64;
        if (v32)
          goto LABEL_78;
        v28[11] = v66;
LABEL_18:
        v37 = v28[7];
        v32 = __OFSUB__(v37, 1);
        v35 = v37 - 1;
      }
      while (!v32);
    }
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    swift_once();
  }
  v31 = v29 + 16;
  if (__OFADD__(v29, 16))
    goto LABEL_84;
  v32 = __OFSUB__(v31, v30);
  v33 = v31 - v30;
  if (!v32)
  {
    v93 = v33;
    goto LABEL_14;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  swift_endAccess();
  v103 = 0;
  v104 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v88 = objc_msgSend(objc_msgSend(v101, a1[268]), sel_name);
  swift_unknownObjectRelease();
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v103 = 0;
    v104 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MetalBufferAllocator()
{
  return objc_opt_self();
}

void sub_19C52DD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;

  v6 = (_QWORD *)v2;
  v9 = sub_19C52F3DC(a2, *(_QWORD *)v2, *(_QWORD **)(v2 + 8));
  if ((v10 & 1) == 0)
  {
    v11 = v9;
    v12 = *(_QWORD **)(v2 + 16);
    goto LABEL_7;
  }
  sub_19C52F4F4(a2);
  v13 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 16);
  v3 = *(_QWORD *)sub_19CAA96F8();
  v14 = (unint64_t *)(v2 + 16);
  v12 = (_QWORD *)v6[2];
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[2] = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_19C55721C(0, v12[2] + 1, 1);
    v12 = (_QWORD *)*v14;
  }
  v11 = v13 - 1;
  v5 = v12[2];
  v16 = v12[3];
  v4 = v5 + 1;
  if (v5 < v16 >> 1)
    goto LABEL_6;
LABEL_38:
  sub_19C55721C(v16 > 1, v4, 1);
  v12 = (_QWORD *)*v14;
LABEL_6:
  v12[2] = v4;
  v12[v5 + 4] = v3;
  *v14 = (unint64_t)v12;
LABEL_7:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = (_QWORD *)sub_19C52F3B4(v12);
  v14 = (unint64_t *)v12[v11 + 4];
  v6[2] = v12;
  v32 = v14;
  v16 = v14[3];
  v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v18 = swift_isUniquelyReferenced_nonNull_native();
  if ((uint64_t)v14[2] >= v17 && (v18 & 1) != 0)
  {
    v19 = v14[4];
    if (v19)
      goto LABEL_13;
  }
  else
  {
    while (1)
    {
      sub_19C5350F8(v17);
      v14 = v32;
      v19 = v32[4];
      if (!v19)
        break;
LABEL_13:
      v20 = __OFSUB__(v19, 1);
      v21 = v19 - 1;
      if (!v20)
      {
LABEL_18:
        v14[v21 + 5] = a1;
        v14[4] = v21;
        v23 = v14[3];
        v20 = __OFADD__(v23, 1);
        v16 = v23 + 1;
        if (v20)
          goto LABEL_34;
        v14[3] = v16;
        v24 = (_QWORD *)v6[2];
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = (_QWORD *)sub_19C52F3B4(v24);
        v24[v11 + 4] = v14;
        v6[2] = v24;
        v14 = v6 + 3;
        v16 = *(_QWORD *)(v6[3] + 24);
        a1 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_35;
        v25 = swift_isUniquelyReferenced_nonNull_native();
        v16 = *v14;
        if (*(_QWORD *)(*v14 + 16) >= a1 && (v25 & 1) != 0)
        {
          v26 = *(_QWORD *)(v16 + 32);
          if (!v26)
            goto LABEL_29;
          goto LABEL_25;
        }
        while (1)
        {
          sub_19C534F2C(a1);
          v16 = *v14;
          v26 = *(_QWORD *)(*v14 + 32);
          if (!v26)
            break;
LABEL_25:
          v20 = __OFSUB__(v26, 1);
          v27 = v26 - 1;
          if (!v20)
            goto LABEL_30;
          __break(1u);
        }
LABEL_29:
        v28 = *(_QWORD *)(v16 + 16);
        v20 = __OFSUB__(v28, 1);
        v27 = v28 - 1;
        if (v20)
          goto LABEL_40;
LABEL_30:
        *(_QWORD *)(v16 + 8 * v27 + 40) = a2;
        *(_QWORD *)(v16 + 32) = v27;
        v29 = *(_QWORD *)(v16 + 24);
        v20 = __OFADD__(v29, 1);
        v30 = v29 + 1;
        if (v20)
          goto LABEL_36;
        *(_QWORD *)(v16 + 24) = v30;
        v31 = v6[7];
        v20 = __OFADD__(v31, 1);
        v16 = v31 + 1;
        if (!v20)
        {
          v6[7] = v16;
          sub_19C52EA14();
          return;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      __break(1u);
    }
  }
  v22 = v14[2];
  v20 = __OFSUB__(v22, 1);
  v21 = v22 - 1;
  if (!v20)
    goto LABEL_18;
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_19C52DFC8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;

  v6 = (_QWORD *)v2;
  v9 = sub_19C52F3DC(a2, *(_QWORD *)v2, *(_QWORD **)(v2 + 8));
  if ((v10 & 1) == 0)
  {
    v11 = v9;
    v12 = *(_QWORD **)(v2 + 16);
    goto LABEL_7;
  }
  sub_19C52F4F4(a2);
  v13 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 16);
  v3 = *(_QWORD *)sub_19CAA96F8();
  v14 = (unint64_t *)(v2 + 16);
  v12 = (_QWORD *)v6[2];
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[2] = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_19C557264(0, v12[2] + 1, 1);
    v12 = (_QWORD *)*v14;
  }
  v11 = v13 - 1;
  v5 = v12[2];
  v16 = v12[3];
  v4 = v5 + 1;
  if (v5 < v16 >> 1)
    goto LABEL_6;
LABEL_38:
  sub_19C557264(v16 > 1, v4, 1);
  v12 = (_QWORD *)*v14;
LABEL_6:
  v12[2] = v4;
  v12[v5 + 4] = v3;
  *v14 = (unint64_t)v12;
LABEL_7:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = (_QWORD *)sub_19C52F3C8(v12);
  v14 = (unint64_t *)v12[v11 + 4];
  v6[2] = v12;
  v33 = v14;
  v16 = v14[3];
  v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v18 = swift_isUniquelyReferenced_nonNull_native();
  if ((uint64_t)v14[2] >= v17 && (v18 & 1) != 0)
  {
    v19 = v14[4];
    if (v19)
      goto LABEL_13;
  }
  else
  {
    while (1)
    {
      sub_19C5354CC(v17, 0);
      v14 = v33;
      v19 = v33[4];
      if (!v19)
        break;
LABEL_13:
      v20 = __OFSUB__(v19, 1);
      v21 = v19 - 1;
      if (!v20)
      {
LABEL_18:
        v14[v21 + 5] = (unint64_t)a1;
        v14[4] = v21;
        v23 = v14[3];
        v20 = __OFADD__(v23, 1);
        v16 = v23 + 1;
        if (v20)
          goto LABEL_34;
        v14[3] = v16;
        v24 = (_QWORD *)v6[2];
        v25 = a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = (_QWORD *)sub_19C52F3C8(v24);
        v24[v11 + 4] = v14;
        v6[2] = v24;
        v14 = v6 + 3;
        v16 = *(_QWORD *)(v6[3] + 24);
        a1 = (void *)(v16 + 1);
        if (__OFADD__(v16, 1))
          goto LABEL_35;
        v26 = swift_isUniquelyReferenced_nonNull_native();
        v16 = *v14;
        if (*(_QWORD *)(*v14 + 16) >= (uint64_t)a1 && (v26 & 1) != 0)
        {
          v27 = *(_QWORD *)(v16 + 32);
          if (!v27)
            goto LABEL_29;
          goto LABEL_25;
        }
        while (1)
        {
          sub_19C534F2C((uint64_t)a1);
          v16 = *v14;
          v27 = *(_QWORD *)(*v14 + 32);
          if (!v27)
            break;
LABEL_25:
          v20 = __OFSUB__(v27, 1);
          v28 = v27 - 1;
          if (!v20)
            goto LABEL_30;
          __break(1u);
        }
LABEL_29:
        v29 = *(_QWORD *)(v16 + 16);
        v20 = __OFSUB__(v29, 1);
        v28 = v29 - 1;
        if (v20)
          goto LABEL_40;
LABEL_30:
        *(_QWORD *)(v16 + 8 * v28 + 40) = a2;
        *(_QWORD *)(v16 + 32) = v28;
        v30 = *(_QWORD *)(v16 + 24);
        v20 = __OFADD__(v30, 1);
        v31 = v30 + 1;
        if (v20)
          goto LABEL_36;
        *(_QWORD *)(v16 + 24) = v31;
        v32 = v6[7];
        v20 = __OFADD__(v32, 1);
        v16 = v32 + 1;
        if (!v20)
        {
          v6[7] = v16;
          sub_19C52ED2C();
          return;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      __break(1u);
    }
  }
  v22 = v14[2];
  v20 = __OFSUB__(v22, 1);
  v21 = v22 - 1;
  if (!v20)
    goto LABEL_18;
  __break(1u);
LABEL_40:
  __break(1u);
}

unint64_t sub_19C52E240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v6;
  void (*v7)(uint64_t **, uint64_t);
  unint64_t result;
  unint64_t *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[5];

  v3 = v2;
  v7 = sub_19C52F040(v25, a1);
  result = *v6;
  if (!*v6)
  {
    v7((uint64_t **)v25, 0);
    return 0;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(_QWORD *)(result + 24) <= a2)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v6;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    result = sub_19C5516A4();
  v10 = *v9;
  if (*(_QWORD *)(v10 + 24) <= a2)
    goto LABEL_24;
  v11 = (char *)(*(_QWORD *)(v10 + 32) + a2);
  v12 = *(_QWORD *)(v10 + 16);
  if ((uint64_t)v11 < v12)
    v12 = 0;
  v13 = *(_QWORD *)(v10 + 40 + 8 * (_QWORD)&v11[-v12]);
  swift_retain();
  swift_unknownObjectRetain();
  sub_19C52FA58((char *)a2, a2 + 1, (uint64_t *)(v10 + 16), (char *)(v10 + 40));
  swift_release();
  v7((uint64_t **)v25, 0);
  v14 = *(_QWORD *)(v3 + 16);
  result = sub_19C52F3DC(a1, *(_QWORD *)v3, *(_QWORD **)(v3 + 8));
  if ((v15 & 1) != 0)
    goto LABEL_18;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(_QWORD *)(v14 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (*(_QWORD *)(*(_QWORD *)(v14 + 8 * result + 32) + 24))
    goto LABEL_18;
  MEMORY[0x1E0C80A78](result);
  v16 = (_QWORD *)(v3 + 24);
  v17 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530F40);
  result = *(_QWORD *)(v3 + 24);
  v18 = *(_QWORD *)(result + 24);
  if (v18 < v17)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C551690();
    v19 = *v16;
    v20 = (uint64_t *)(*v16 + 16);
    v21 = (char *)(v19 + 40);
    sub_19C52FC70(v17, v18, v20, v19 + 40, (uint64_t)v25);
    result = (unint64_t)sub_19C52FCE8((char *)v17, v18, v20, v21);
LABEL_18:
    v22 = *(_QWORD *)(v3 + 56);
    v23 = __OFSUB__(v22, 1);
    v24 = v22 - 1;
    if (!v23)
    {
      *(_QWORD *)(v3 + 56) = v24;
      return v13;
    }
    goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_19C52E450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v6;
  void (*v7)(uint64_t **, uint64_t);
  unint64_t result;
  unint64_t *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[5];

  v3 = v2;
  v7 = sub_19C52F0BC(v26, a1);
  result = *v6;
  if (!*v6)
  {
    v7((uint64_t **)v26, 0);
    return 0;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(_QWORD *)(result + 24) <= a2)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v6;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    result = sub_19C5516CC();
  v10 = *v9;
  if (*(_QWORD *)(v10 + 24) <= a2)
    goto LABEL_24;
  v11 = (char *)(*(_QWORD *)(v10 + 32) + a2);
  v12 = *(_QWORD *)(v10 + 16);
  if ((uint64_t)v11 < v12)
    v12 = 0;
  v13 = *(void **)(v10 + 40 + 8 * (_QWORD)&v11[-v12]);
  swift_retain();
  v14 = v13;
  sub_19C52FB68((char *)a2, a2 + 1, (uint64_t *)(v10 + 16), (char *)(v10 + 40));
  swift_release();
  v7((uint64_t **)v26, 0);
  v15 = *(_QWORD *)(v3 + 16);
  result = sub_19C52F3DC(a1, *(_QWORD *)v3, *(_QWORD **)(v3 + 8));
  if ((v16 & 1) != 0)
    goto LABEL_18;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(_QWORD *)(v15 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (*(_QWORD *)(*(_QWORD *)(v15 + 8 * result + 32) + 24))
    goto LABEL_18;
  MEMORY[0x1E0C80A78](result);
  v17 = (_QWORD *)(v3 + 24);
  v18 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530C6C);
  result = *(_QWORD *)(v3 + 24);
  v19 = *(_QWORD *)(result + 24);
  if (v19 < v18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C551690();
    v20 = *v17;
    v21 = (uint64_t *)(*v17 + 16);
    v22 = (char *)(v20 + 40);
    sub_19C52FC70(v18, v19, v21, v20 + 40, (uint64_t)v26);
    result = (unint64_t)sub_19C52FCE8((char *)v18, v19, v21, v22);
LABEL_18:
    v23 = *(_QWORD *)(v3 + 56);
    v24 = __OFSUB__(v23, 1);
    v25 = v23 - 1;
    if (!v24)
    {
      *(_QWORD *)(v3 + 56) = v25;
      return (unint64_t)v14;
    }
    goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_19C52E660()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t *v2;
  unint64_t result;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t **, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = v0 + 3;
  if (*(uint64_t *)(v0[3] + 24) < 1)
  {
LABEL_48:
    swift_release();
    v33 = MEMORY[0x1E0DEE9D8];
    v1[1] = MEMORY[0x1E0DEE9D8];
    swift_release();
    *v1 = 0;
    result = swift_release();
    v1[2] = v33;
    return result;
  }
  while (1)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_19C551690();
    v4 = (_QWORD *)*v2;
    v5 = *(_QWORD *)(*v2 + 24);
    v6 = __OFSUB__(v5, 1);
    v7 = v5 - 1;
    if (v6)
      break;
    v8 = v4[4] + v7;
    v9 = v4[2];
    if (v8 < v9)
      v9 = 0;
    v10 = v4[v8 - v9 + 5];
    v4[3] = v7;
    v35 = v10;
    v12 = sub_19C52F040(v34, v10);
    if (!*(_QWORD *)v11 || *(uint64_t *)(*(_QWORD *)v11 + 24) <= 0)
      goto LABEL_47;
    v13 = v11;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_19C5516A4();
    v14 = *(_QWORD **)v13;
    v15 = *(_QWORD *)(*(_QWORD *)v13 + 24);
    v6 = __OFSUB__(v15, 1);
    v16 = v15 - 1;
    if (v6)
      goto LABEL_50;
    v17 = v14[4] + v16;
    v18 = v14[2];
    if (v17 < v18)
      v18 = 0;
    v19 = v14[v17 - v18 + 5];
    v14[3] = v16;
    v12((uint64_t **)v34, 0);
    v20 = (_QWORD *)v1[1];
    v21 = v1[2];
    result = v35;
    v22 = v20 + 4;
    v23 = v20[2];
    if (*v1)
    {
      result = sub_19C52F874(v35, (uint64_t)v22, v23, (uint64_t *)(*v1 + 16));
      if ((v24 & 1) != 0)
        goto LABEL_31;
      if ((result & 0x8000000000000000) != 0)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        v12((uint64_t **)v34, 0);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v23)
        goto LABEL_31;
      if (*v22 == v35)
      {
        result = 0;
      }
      else
      {
        if (v23 == 1)
          goto LABEL_31;
        if (v20[5] == v35)
        {
          result = 1;
        }
        else
        {
          if (v23 == 2)
            goto LABEL_31;
          if (v20[6] == v35)
          {
            result = 2;
          }
          else
          {
            if (v23 == 3)
              goto LABEL_31;
            if (v20[7] != v35)
            {
              v30 = 0;
              v31 = v20 + 8;
              while (v23 - 4 != v30)
              {
                v32 = v31[v30++];
                if (v32 == v35)
                {
                  result = v30 + 3;
                  if (((v30 + 3) & 0x8000000000000000) == 0)
                    goto LABEL_23;
                  goto LABEL_46;
                }
              }
              goto LABEL_31;
            }
            result = 3;
          }
        }
      }
    }
LABEL_23:
    if (result >= *(_QWORD *)(v21 + 16))
      goto LABEL_52;
    if (!*(_QWORD *)(*(_QWORD *)(v21 + 8 * result + 32) + 24))
    {
      MEMORY[0x1E0C80A78](result);
      v25 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530F40);
      result = *v2;
      v26 = *(_QWORD *)(*v2 + 24);
      if (v26 < v25)
        goto LABEL_53;
      if (v25 < 0)
        goto LABEL_54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_19C551690();
      result = (unint64_t)sub_19C52FCE8((char *)v25, v26, (uint64_t *)(*v2 + 16), (char *)(*v2 + 40));
    }
LABEL_31:
    v27 = v1[7];
    v6 = __OFSUB__(v27, 1);
    v28 = v27 - 1;
    if (v6)
      goto LABEL_51;
    v1[7] = v28;
    v36 = v19;
    v29 = (void (*)(uint64_t *))v1[5];
    if (v29)
    {
      swift_retain();
      v29(&v36);
      sub_19C530F14((uint64_t)v29);
    }
    swift_unknownObjectRelease();
    if (*(uint64_t *)(*v2 + 24) <= 0)
      goto LABEL_48;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_19C52E98C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19C530F14(v1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalBufferAllocator.DeviceBufferAllocator()
{
  return objc_opt_self();
}

void sub_19C52EA14()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t **, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD v33[4];
  uint64_t v34;
  uint64_t v35;

  if (v0[4] >= v0[7])
    return;
  v1 = v0;
  v2 = v0 + 3;
  if (*(uint64_t *)(v0[3] + 24) < 1)
    return;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C551690();
    v3 = (_QWORD *)*v2;
    v4 = *(_QWORD *)(*v2 + 24);
    v5 = __OFSUB__(v4, 1);
    v6 = v4 - 1;
    if (v5)
      break;
    v7 = v3[4] + v6;
    v8 = v3[2];
    if (v7 < v8)
      v8 = 0;
    v9 = v3[v7 - v8 + 5];
    v3[3] = v6;
    v34 = v9;
    v11 = sub_19C52F040(v33, v9);
    if (!*(_QWORD *)v10 || *(uint64_t *)(*(_QWORD *)v10 + 24) <= 0)
      goto LABEL_49;
    v12 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516A4();
    v13 = *(_QWORD **)v12;
    v14 = *(_QWORD *)(*(_QWORD *)v12 + 24);
    v5 = __OFSUB__(v14, 1);
    v15 = v14 - 1;
    if (v5)
      goto LABEL_52;
    v16 = v13[4] + v15;
    v17 = v13[2];
    if (v16 < v17)
      v17 = 0;
    v18 = v13[v16 - v17 + 5];
    v13[3] = v15;
    v11((uint64_t **)v33, 0);
    v19 = (_QWORD *)v1[1];
    v20 = v1[2];
    v21 = v19 + 4;
    v22 = v19[2];
    if (*v1)
    {
      v23 = sub_19C52F874(v34, (uint64_t)v21, v22, (uint64_t *)(*v1 + 16));
      if ((v24 & 1) != 0)
        goto LABEL_30;
      if ((v23 & 0x8000000000000000) != 0)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        v11((uint64_t **)v33, 0);
        return;
      }
    }
    else
    {
      if (!v22)
        goto LABEL_30;
      if (*v21 == v34)
      {
        v23 = 0;
      }
      else
      {
        if (v22 == 1)
          goto LABEL_30;
        if (v19[5] == v34)
        {
          v23 = 1;
        }
        else
        {
          if (v22 == 2)
            goto LABEL_30;
          if (v19[6] == v34)
          {
            v23 = 2;
          }
          else
          {
            if (v22 == 3)
              goto LABEL_30;
            if (v19[7] != v34)
            {
              v30 = 0;
              v31 = v19 + 8;
              while (v22 - 4 != v30)
              {
                v32 = v31[v30++];
                if (v32 == v34)
                {
                  v23 = v30 + 3;
                  if (((v30 + 3) & 0x8000000000000000) == 0)
                    goto LABEL_22;
                  goto LABEL_48;
                }
              }
              goto LABEL_30;
            }
            v23 = 3;
          }
        }
      }
    }
LABEL_22:
    if (v23 >= *(_QWORD *)(v20 + 16))
      goto LABEL_54;
    if (!*(_QWORD *)(*(_QWORD *)(v20 + 8 * v23 + 32) + 24))
    {
      MEMORY[0x1E0C80A78](v23);
      v25 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530F40);
      v26 = *(_QWORD *)(*v2 + 24);
      if (v26 < v25)
        goto LABEL_55;
      if (v25 < 0)
        goto LABEL_56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_19C551690();
      sub_19C52FCE8((char *)v25, v26, (uint64_t *)(*v2 + 16), (char *)(*v2 + 40));
    }
LABEL_30:
    v27 = v1[7];
    v28 = v27 - 1;
    if (__OFSUB__(v27, 1))
      goto LABEL_53;
    v1[7] = v28;
    v35 = v18;
    v29 = (void (*)(uint64_t *))v1[5];
    if (v29)
    {
      swift_retain();
      v29(&v35);
      sub_19C530F14((uint64_t)v29);
    }
    swift_unknownObjectRelease();
    if (v1[4] >= v28 || *(uint64_t *)(*v2 + 24) <= 0)
      return;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
}

void sub_19C52ED2C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t **, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void **);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD v33[4];
  uint64_t v34;
  void *v35;

  if (v0[4] >= v0[7])
    return;
  v1 = v0;
  v2 = v0 + 3;
  if (*(uint64_t *)(v0[3] + 24) < 1)
    return;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C551690();
    v3 = (_QWORD *)*v2;
    v4 = *(_QWORD *)(*v2 + 24);
    v5 = __OFSUB__(v4, 1);
    v6 = v4 - 1;
    if (v5)
      break;
    v7 = v3[4] + v6;
    v8 = v3[2];
    if (v7 < v8)
      v8 = 0;
    v9 = v3[v7 - v8 + 5];
    v3[3] = v6;
    v34 = v9;
    v11 = sub_19C52F0BC(v33, v9);
    if (!*(_QWORD *)v10 || *(uint64_t *)(*(_QWORD *)v10 + 24) <= 0)
      goto LABEL_49;
    v12 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516CC();
    v13 = *(_QWORD **)v12;
    v14 = *(_QWORD *)(*(_QWORD *)v12 + 24);
    v5 = __OFSUB__(v14, 1);
    v15 = v14 - 1;
    if (v5)
      goto LABEL_52;
    v16 = v13[4] + v15;
    v17 = v13[2];
    if (v16 < v17)
      v17 = 0;
    v18 = (void *)v13[v16 - v17 + 5];
    v13[3] = v15;
    v11((uint64_t **)v33, 0);
    v19 = (_QWORD *)v1[1];
    v20 = v1[2];
    v21 = v19 + 4;
    v22 = v19[2];
    if (*v1)
    {
      v23 = sub_19C52F874(v34, (uint64_t)v21, v22, (uint64_t *)(*v1 + 16));
      if ((v24 & 1) != 0)
        goto LABEL_30;
      if ((v23 & 0x8000000000000000) != 0)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        v11((uint64_t **)v33, 0);
        return;
      }
    }
    else
    {
      if (!v22)
        goto LABEL_30;
      if (*v21 == v34)
      {
        v23 = 0;
      }
      else
      {
        if (v22 == 1)
          goto LABEL_30;
        if (v19[5] == v34)
        {
          v23 = 1;
        }
        else
        {
          if (v22 == 2)
            goto LABEL_30;
          if (v19[6] == v34)
          {
            v23 = 2;
          }
          else
          {
            if (v22 == 3)
              goto LABEL_30;
            if (v19[7] != v34)
            {
              v30 = 0;
              v31 = v19 + 8;
              while (v22 - 4 != v30)
              {
                v32 = v31[v30++];
                if (v32 == v34)
                {
                  v23 = v30 + 3;
                  if (((v30 + 3) & 0x8000000000000000) == 0)
                    goto LABEL_22;
                  goto LABEL_48;
                }
              }
              goto LABEL_30;
            }
            v23 = 3;
          }
        }
      }
    }
LABEL_22:
    if (v23 >= *(_QWORD *)(v20 + 16))
      goto LABEL_54;
    if (!*(_QWORD *)(*(_QWORD *)(v20 + 8 * v23 + 32) + 24))
    {
      MEMORY[0x1E0C80A78](v23);
      v25 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530F24);
      v26 = *(_QWORD *)(*v2 + 24);
      if (v26 < v25)
        goto LABEL_55;
      if (v25 < 0)
        goto LABEL_56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_19C551690();
      sub_19C52FCE8((char *)v25, v26, (uint64_t *)(*v2 + 16), (char *)(*v2 + 40));
    }
LABEL_30:
    v27 = v1[7];
    v28 = v27 - 1;
    if (__OFSUB__(v27, 1))
      goto LABEL_53;
    v1[7] = v28;
    v35 = v18;
    v29 = (void (*)(void **))v1[5];
    if (v29)
    {
      swift_retain();
      v29(&v35);
      sub_19C530F14((uint64_t)v29);
    }

    if (v1[4] >= v28 || *(uint64_t *)(*v2 + 24) <= 0)
      return;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
}

void (*sub_19C52F040(_QWORD *a1, uint64_t a2))(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[1] = a2;
  v5[2] = v2;
  *v5 = 0;
  v6 = sub_19C52F988(a2, v5, (uint64_t (*)(unint64_t))sub_19C52F3B4);
  *((_BYTE *)v5 + 40) = v7;
  v5[3] = v6;
  v5[4] = v8;
  return sub_19C52F0A8;
}

void sub_19C52F0A8(uint64_t **a1, uint64_t a2)
{
  sub_19C52F138(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_19C55721C, (uint64_t (*)(unint64_t))sub_19C52F3B4);
}

void (*sub_19C52F0BC(_QWORD *a1, uint64_t a2))(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[1] = a2;
  v5[2] = v2;
  *v5 = 0;
  v6 = sub_19C52F988(a2, v5, (uint64_t (*)(unint64_t))sub_19C52F3C8);
  *((_BYTE *)v5 + 40) = v7;
  v5[3] = v6;
  v5[4] = v8;
  return sub_19C52F124;
}

void sub_19C52F124(uint64_t **a1, uint64_t a2)
{
  sub_19C52F138(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_19C557264, (uint64_t (*)(unint64_t))sub_19C52F3C8);
}

void sub_19C52F138(uint64_t **a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t), uint64_t (*a4)(unint64_t))
{
  uint64_t *v4;

  v4 = *a1;
  sub_19C5301C0((*a1)[1], (*a1)[3], (*a1)[5] & 1, (*a1)[4], *a1, a3, a4);
  swift_release();
  free(v4);
}

uint64_t sub_19C52F180(uint64_t (*a1)(uint64_t *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v4 = (_QWORD *)*v1;
  v5 = *(_QWORD *)(*v1 + 24);
  if (v5)
  {
    result = swift_retain();
    v8 = 0;
    while (1)
    {
      if (v8 >= v5)
      {
        __break(1u);
        goto LABEL_38;
      }
      v9 = v4[4];
      if (v8 + v9 >= v4[2])
        v10 = v4[2];
      else
        v10 = 0;
      v26 = v4[v8 + 5 + v9 - v10];
      result = a1(&v26);
      if (v3)
      {
        swift_release();
        return v8;
      }
      if ((result & 1) != 0)
        break;
      ++v8;
      v5 = v4[3];
      if (v8 == v5)
      {
        swift_release();
        return *(_QWORD *)(*v1 + 24);
      }
    }
    result = swift_release();
    v11 = *v1;
    v12 = *(_QWORD *)(*v1 + 24);
    if (v12 - 1 == v8)
      return v8;
    v13 = v8 + 1;
    while (v13 < v12)
    {
      v14 = *(_QWORD *)(v11 + 32);
      if (v13 + v14 >= *(_QWORD *)(v11 + 16))
        v15 = *(_QWORD *)(v11 + 16);
      else
        v15 = 0;
      v26 = *(_QWORD *)(v11 + 8 * (v13 + v14 - v15) + 40);
      result = a1(&v26);
      if ((result & 1) == 0)
      {
        if (v8 < 0)
          goto LABEL_39;
        result = *v1;
        v16 = *(_QWORD *)(*v1 + 24);
        if (v8 >= v16)
          goto LABEL_40;
        if (v13 >= v16)
          goto LABEL_41;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
          result = sub_19C551690();
        v17 = *(_QWORD *)(*v1 + 32);
        v18 = *(_QWORD *)(*v1 + 16);
        if (v17 + v8 >= v18)
          v19 = *(_QWORD *)(*v1 + 16);
        else
          v19 = 0;
        v20 = v17 + v8 - v19;
        if (v13 + v17 < v18)
          v18 = 0;
        v21 = v13 + v17 - v18;
        if (v21 != v20)
        {
          v22 = *v1 + 40;
          v23 = 8 * v20;
          v24 = 8 * v21;
          v25 = *(_QWORD *)(v22 + v23);
          *(_QWORD *)(v22 + v23) = *(_QWORD *)(v22 + v24);
          *(_QWORD *)(v22 + v24) = v25;
        }
        ++v8;
      }
      ++v13;
      v11 = *v1;
      v12 = *(_QWORD *)(*v1 + 24);
      if (v13 == v12)
        return v8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_19C52F38C(uint64_t a1)
{
  return sub_19C5577E0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19C52F3A0(uint64_t a1)
{
  return sub_19C557380(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_19C52F3B4(_QWORD *a1)
{
  return sub_19C558AD8(0, a1[2], 0, a1);
}

uint64_t sub_19C52F3C8(_QWORD *a1)
{
  return sub_19C558CD4(0, a1[2], 0, a1);
}

uint64_t sub_19C52F3DC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v5 = a3 + 4;
  v6 = a3[2];
  if (a2)
    return sub_19C52F874(a1, (uint64_t)v5, v6, (uint64_t *)(a2 + 16));
  if (!v6)
    return 0;
  if (*v5 == a1)
    return 0;
  if (v6 == 1)
    return 0;
  if (a3[5] == a1)
    return 1;
  if (v6 == 2)
    return 0;
  if (a3[6] == a1)
    return 2;
  if (v6 == 3)
    return 0;
  if (a3[7] == a1)
    return 3;
  v8 = 0;
  v9 = a3 + 8;
  while (v6 - 4 != v8)
  {
    v10 = v9[v8++];
    if (v10 == a1)
      return v8 + 3;
  }
  return 0;
}

uint64_t sub_19C52F4F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v6 = v1[1];
  v4 = v1 + 1;
  v5 = v6;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v6;
  if ((result & 1) == 0)
  {
    result = sub_19C556FD0(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v5 = *v4;
  }
  v9 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  if (v9 >= v8 >> 1)
  {
    result = sub_19C556FD0(v8 > 1, v9 + 1, 1);
    v5 = *v4;
  }
  *(_QWORD *)(v5 + 16) = v9 + 1;
  *(_QWORD *)(v5 + 8 * v9 + 32) = a1;
  v2[1] = v5;
  v10 = *(_QWORD *)(v5 + 16);
  v11 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (MEMORY[0x1A1AD41D8](*(_QWORD *)(v11 + 16) & 0x3FLL) >= v10)
    {
      result = swift_isUniquelyReferenced_native();
      v12 = *v2;
      if (!(_DWORD)result)
      {
        if (!v12)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v12 = sub_19CAA96C8();
        result = swift_release();
        *v2 = v12;
      }
      if (v12)
        return sub_19CAA9680();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v10 < 0x10)
  {
    return result;
  }
  return sub_19C52F660();
}

uint64_t sub_19C52F660()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24) & 0x3FLL;
    v4 = *(_QWORD *)(v2 + 16);
    if (v3)
      goto LABEL_7;
  }
  else
  {
    v3 = 0;
    v4 = *(_QWORD *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v6 = MEMORY[0x1A1AD41FC](v4);
  if (v3 <= v6)
    v7 = v6;
  else
    v7 = v3;
  v5 = sub_19C52F700(v2, v7, 0, v3);
LABEL_11:
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_19C52F700(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x1A1AD41FC](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x1A1AD4208]();
    sub_19C52F790(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

uint64_t sub_19C52F790(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v4 = (uint64_t *)result;
    v5 = 0;
    while (1)
    {
      v6 = *v4;
      result = sub_19CAAA28C();
      if (__OFSUB__(1 << v6, 1))
        break;
      if (sub_19CAA9668())
      {
        while (1)
          sub_19CAA96A4();
      }
      result = sub_19CAA9698();
      if (++v5 == v3)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19C52F874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  char v8;
  char v9;

  v6 = *a4;
  result = sub_19CAAA28C();
  if (__OFSUB__(1 << v6, 1))
  {
    __break(1u);
  }
  else
  {
    sub_19CAA9668();
    result = sub_19CAA968C();
    if ((v8 & 1) == 0 && *(_QWORD *)(a2 + 8 * result) != a1)
    {
      do
      {
        sub_19CAA96A4();
        result = sub_19CAA968C();
      }
      while ((v9 & 1) == 0 && *(_QWORD *)(a2 + 8 * result) != a1);
    }
  }
  return result;
}

uint64_t sub_19C52F988(uint64_t a1, _QWORD *a2, uint64_t (*a3)(unint64_t))
{
  uint64_t v3;
  unint64_t v6;
  char v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_19C52F3DC(a1, *(_QWORD *)v3, *(_QWORD **)(v3 + 8));
  if ((v7 & 1) != 0)
    return v6;
  swift_release();
  v9 = *(_QWORD *)(v3 + 16);
  v8 = (unint64_t *)(v3 + 16);
  result = sub_19C52C3F4(v6, *(_QWORD *)(v9 + 16) - 1, a3);
  v11 = *v8;
  if (*(_QWORD *)(*v8 + 16))
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = a3(v11);
      v11 = result;
    }
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = v12 - 1;
      v14 = *(_QWORD *)(v11 + 8 * v13 + 32);
      *(_QWORD *)(v11 + 16) = v13;
      *v8 = v11;
      *a2 = v14;
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_19C52FA58(char *a1, uint64_t a2, uint64_t *a3, char *a4)
{
  char v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  _BYTE v16[8];
  uint64_t v17;

  sub_19C52FC70((uint64_t)a1, a2, a3, (uint64_t)a4, (uint64_t)&v11);
  v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0))
    v9 = 0;
  else
    v9 = v12;
  v15 = v11;
  sub_19C4DCE08((uint64_t)&v15, (uint64_t)v16, &qword_1EE423CB8);
  sub_19C4DCE08((uint64_t)v16, (uint64_t)&v17, &qword_1EE423CB8);
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
    swift_arrayDestroy();
  }
  return sub_19C52FCE8(a1, a2, a3, a4);
}

char *sub_19C52FB68(char *a1, uint64_t a2, uint64_t *a3, char *a4)
{
  char v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  _BYTE v16[8];
  uint64_t v17;

  sub_19C52FC70((uint64_t)a1, a2, a3, (uint64_t)a4, (uint64_t)&v11);
  v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0))
    v9 = 0;
  else
    v9 = v12;
  v15 = v11;
  sub_19C4DCE08((uint64_t)&v15, (uint64_t)v16, (uint64_t *)&unk_1EE423CD0);
  sub_19C4DCE08((uint64_t)v16, (uint64_t)&v17, (uint64_t *)&unk_1EE423CD0);
  if (v17)
  {
    type metadata accessor for IOSurfaceRef(0);
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    type metadata accessor for IOSurfaceRef(0);
    swift_arrayDestroy();
  }
  return sub_19C52FCE8(a1, a2, a3, a4);
}

uint64_t sub_19C52FC70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  uint64_t v16;

  v5 = a3[2];
  v6 = v5 + result;
  v7 = *a3;
  if (v5 + result >= *a3)
    v8 = *a3;
  else
    v8 = 0;
  v9 = v5 + a2;
  if (v5 + a2 >= v7)
    v10 = *a3;
  else
    v10 = 0;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v12 = v6 - v8;
    v13 = v9 - v10;
    if (v11)
      v14 = v12 < v13;
    else
      v14 = 1;
    v15 = v14;
    if (v15 == 1)
    {
      v16 = 0;
      v13 = 0;
LABEL_18:
      *(_QWORD *)a5 = a4 + 8 * v12;
      *(_QWORD *)(a5 + 8) = v11;
      *(_QWORD *)(a5 + 16) = v16;
      *(_QWORD *)(a5 + 24) = v13;
      *(_BYTE *)(a5 + 32) = v15;
      return result;
    }
    v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

char *sub_19C52FCE8(char *result, uint64_t a2, uint64_t *a3, char *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int64_t v20;
  char *v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  BOOL v30;
  uint64_t v31;
  char *v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char *v37;
  BOOL v38;
  uint64_t v39;
  char *v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  BOOL v47;
  uint64_t v48;

  v5 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
  if (v5 < 1)
    return result;
  v7 = (uint64_t)result;
  v9 = a3[1];
  v8 = a3[2];
  v10 = &result[v8];
  v11 = *a3;
  if ((uint64_t)&result[v8] >= *a3)
    v12 = *a3;
  else
    v12 = 0;
  v13 = v8 + a2;
  if (v8 + a2 >= v11)
    v14 = *a3;
  else
    v14 = 0;
  v15 = v9 - a2;
  if (__OFSUB__(v9, a2))
    goto LABEL_144;
  v17 = (uint64_t)&v10[-v12];
  v18 = v13 - v14;
  if (v15 <= (uint64_t)result)
    goto LABEL_31;
  v15 = v8 + v5;
  if (__OFADD__(v8, v5))
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  v19 = __OFSUB__(v15, v11);
  if (v15 >= v11)
  {
    v15 -= v11;
    if (v19)
      goto LABEL_149;
  }
  if (!result)
    goto LABEL_118;
  if (v18 <= 0)
    v9 = *a3;
  else
    v9 = v13 - v14;
  if (v17 <= 0)
    v20 = *a3;
  else
    v20 = (int64_t)&v10[-v12];
  if (v8 < v20)
  {
    if (v9 >= v15)
    {
      if ((uint64_t)result <= 0)
        goto LABEL_118;
      result = &__src[8 * v15];
      v40 = &__src[8 * v8];
      if (v15 >= v8 && result < &v40[8 * v7] && v15 == v8)
        goto LABEL_118;
      v41 = 8 * v7;
      goto LABEL_117;
    }
    if (v18 > 0)
    {
      v21 = &__src[8 * (v11 - v5)];
      if (v11 - v5 > 0 || (v8 = (int64_t)&v21[8 * v18], v8 <= (unint64_t)__src) || v11 != v5)
        result = (char *)memmove(__src, v21, 8 * v18);
    }
    v11 = v7 - v18;
    if (!__OFSUB__(v7, v18))
      goto LABEL_112;
    __break(1u);
LABEL_31:
    v4 = v8 + v9;
    if (!__OFADD__(v8, v9))
    {
      if ((v9 & 0x8000000000000000) == 0)
      {
        v22 = __OFSUB__(v4, v11);
        if (v4 < v11)
          goto LABEL_39;
        v4 -= v11;
        if (!v22)
          goto LABEL_39;
        __break(1u);
      }
      if (v4 < 0)
      {
        v19 = __OFADD__(v4, v11);
        v4 += v11;
        if (v19)
          goto LABEL_156;
      }
LABEL_39:
      v19 = __OFSUB__(v9, v5);
      v23 = v9 - v5;
      if (!v19)
      {
        v24 = v23 + v8;
        if (v24 >= v11)
          v25 = v11;
        else
          v25 = 0;
        if (!v15)
          goto LABEL_140;
        v7 = v24 - v25;
        if (v24 - v25 <= 0)
          v26 = v11;
        else
          v26 = v24 - v25;
        if (v4 <= 0)
          v27 = v11;
        else
          v27 = v4;
        if (v18 < v27)
        {
          if (v26 >= v17)
            goto LABEL_121;
          v28 = v11 - v17;
          if (__OFSUB__(v11, v17))
          {
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          if (v28 > 0)
          {
            result = &__src[8 * v17];
            v29 = &__src[8 * v18];
            if (v17 != v18 || result >= &v29[8 * v28])
              result = (char *)memmove(result, v29, 8 * v28);
            v19 = __OFADD__(v18, v28);
            v18 += v28;
            if (v19)
              goto LABEL_157;
            v30 = __OFSUB__(v18, *a3);
            if (v18 >= *a3)
            {
              v18 -= *a3;
              if (v30)
                goto LABEL_161;
            }
          }
          v31 = v15 - v28;
          if (__OFSUB__(v15, v28))
            goto LABEL_151;
          if (v31 < 1)
            goto LABEL_140;
          v32 = &__src[8 * v18];
          if (v18 <= 0 && &v32[8 * v31] > __src && !v18)
            goto LABEL_140;
          v33 = 8 * v31;
LABEL_99:
          result = __src;
LABEL_139:
          result = (char *)memmove(result, v32, v33);
          goto LABEL_140;
        }
LABEL_76:
        v35 = v11 - v18;
        v36 = __OFSUB__(v11, v18);
        if (v26 >= v17)
        {
          if (v36)
          {
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
            return result;
          }
          if (v35 > 0)
          {
            result = &__src[8 * v17];
            v46 = &__src[8 * v18];
            if (v17 != v18 || result >= &v46[8 * v35])
              result = (char *)memmove(result, v46, 8 * v35);
            v19 = __OFADD__(v17, v35);
            v17 += v35;
            if (v19)
              goto LABEL_159;
            v47 = __OFSUB__(v17, *a3);
            if (v17 >= *a3)
            {
              v17 -= *a3;
              if (v47)
                goto LABEL_163;
            }
          }
          if (v4 >= 1)
          {
            result = &__src[8 * v17];
            if (v17 < 0 || v17 >= v4 || v17)
            {
              v33 = 8 * v4;
              v32 = __src;
              goto LABEL_139;
            }
          }
          goto LABEL_140;
        }
        if (v36)
        {
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (v35 > 0)
        {
          result = &__src[8 * v17];
          v37 = &__src[8 * v18];
          if (v17 != v18 || result >= &v37[8 * v35])
            result = (char *)memmove(result, v37, 8 * v35);
          v19 = __OFADD__(v17, v35);
          v17 += v35;
          if (v19)
            goto LABEL_158;
          v38 = __OFSUB__(v17, *a3);
          if (v17 >= *a3)
          {
            v17 -= *a3;
            if (v38)
              goto LABEL_162;
          }
        }
        result = &__src[8 * v17];
        if (v17 < 0 || v17 >= v5 || v17)
          result = (char *)memmove(result, __src, 8 * v5);
        v39 = v5;
        if (v5 >= *a3)
        {
          v39 = v5 - *a3;
          if (__OFSUB__(v5, *a3))
            goto LABEL_160;
        }
        if (v7 < 1)
          goto LABEL_140;
        v32 = &__src[8 * v39];
        if (v39 <= 0 && &v32[8 * v7] > __src && !v39)
          goto LABEL_140;
        v33 = 8 * v7;
        goto LABEL_99;
      }
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  if (v9 >= v15)
  {
    if (__OFSUB__(0, v17))
    {
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }
    if (v17 > 0)
    {
      v42 = v18 - v17;
      result = &__src[8 * (v18 - v17)];
      if (v18 - v17 < 0 || v42 >= v17 || v42)
        result = (char *)memmove(result, __src, 8 * v17);
    }
    v11 = v7 - v17;
    if (__OFSUB__(v7, v17))
      goto LABEL_154;
    goto LABEL_112;
  }
  if (v17 > 0)
    result = (char *)memmove(&__src[8 * v5], __src, 8 * v17);
  v26 = *a3;
  v34 = *a3 - v5;
  if (*a3 < 1 || v34 > 0 || v26 != v5)
    result = (char *)memmove(__src, &__src[8 * v34], 8 * v5);
  v11 = v7 - v18;
  if (__OFSUB__(v7, v18))
  {
    __break(1u);
    goto LABEL_76;
  }
LABEL_112:
  if (v11 < 1)
    goto LABEL_118;
  v43 = a3[2];
  result = &__src[8 * v15];
  v40 = &__src[8 * v43];
  if (v15 >= v43 && result < &v40[8 * v11] && v15 == v43)
    goto LABEL_118;
  v41 = 8 * v11;
LABEL_117:
  result = (char *)memmove(result, v40, v41);
LABEL_118:
  a3[2] = v15;
  v44 = a3[1];
  v19 = __OFSUB__(v44, v5);
  v45 = v44 - v5;
  if (!v19)
    goto LABEL_141;
  __break(1u);
LABEL_121:
  if (v15 > 0)
  {
    result = &__src[8 * v17];
    v32 = &__src[8 * v18];
    if (v17 < v18 || result >= &v32[8 * v15] || v17 != v18)
    {
      v33 = 8 * v15;
      goto LABEL_139;
    }
  }
LABEL_140:
  v48 = a3[1];
  v19 = __OFSUB__(v48, v5);
  v45 = v48 - v5;
  if (v19)
  {
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
LABEL_141:
  a3[1] = v45;
  return result;
}

unint64_t sub_19C5301C0(unint64_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(BOOL, uint64_t, uint64_t), uint64_t (*a7)(unint64_t))
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v9 = v7;
  v11 = *a5;
  if ((a3 & 1) != 0)
  {
    if (v11)
    {
      v19 = result;
      swift_retain();
      sub_19C52F4F4(v19);
      v22 = *(_QWORD *)(v9 + 16);
      v21 = (uint64_t *)(v9 + 16);
      v20 = v22;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v21 = v22;
      if ((result & 1) == 0)
      {
        result = a6(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = *v21;
      }
      v24 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      if (v24 >= v23 >> 1)
      {
        result = a6(v23 > 1, v24 + 1, 1);
        v20 = *v21;
      }
      *(_QWORD *)(v20 + 16) = v24 + 1;
      *(_QWORD *)(v20 + 8 * v24 + 32) = v11;
      *v21 = v20;
    }
  }
  else
  {
    v14 = (uint64_t *)(v7 + 16);
    v15 = *(_QWORD *)(v9 + 16);
    if (v11)
    {
      swift_retain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v14 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        a6(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = *v14;
      }
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        a6(v17 > 1, v18 + 1, 1);
        v15 = *v14;
      }
      *(_QWORD *)(v15 + 16) = v18 + 1;
      *(_QWORD *)(v15 + 8 * v18 + 32) = v11;
      *v14 = v15;
      sub_19C52C3F4(a2, v18, a7);
      return swift_release();
    }
    else
    {
      if (*(_QWORD *)(v15 + 16) > a2)
      {
        v25 = sub_19C5304C8(a2, (uint64_t (*)(uint64_t))a7);
        v26 = *v14;
        swift_retain();
        v27 = swift_isUniquelyReferenced_nonNull_native();
        *v14 = v26;
        if ((v27 & 1) == 0)
        {
          a6(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = *v14;
        }
        v28 = *(_QWORD *)(v26 + 16);
        v29 = *(_QWORD *)(v26 + 24);
        v30 = v28 + 1;
        if (v28 >= v29 >> 1)
        {
          v31 = *(_QWORD *)(v26 + 16);
          a6(v29 > 1, v28 + 1, 1);
          v28 = v31;
          v26 = *v14;
        }
        *(_QWORD *)(v26 + 16) = v30;
        *(_QWORD *)(v26 + 8 * v28 + 32) = v25;
        swift_release();
        *v14 = v26;
      }
      return sub_19C530598(a2, a4);
    }
  }
  return result;
}

uint64_t sub_19C5303FC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_19C52F3A0(v3);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = v3 + 8 * a1;
      v8 = *(_QWORD *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 40), 8 * v6);
      *(_QWORD *)(v3 + 16) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5304C8(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = a2(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      *v2 = v5;
      return v10;
    }
  }
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

unint64_t sub_19C530598(int64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v2[1] + 16);
  v5 = *v2;
  if (!*v2)
  {
    if (v4)
      return sub_19C5303FC(a1);
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(_QWORD *)(v5 + 16) & 0x3FLL) == (*(_QWORD *)(v5 + 24) & 0x3FLL))
  {
    if (!v4)
      goto LABEL_15;
  }
  else if (v4 <= sub_19CAA96BC())
  {
LABEL_15:
    v10 = sub_19C5303FC(a1);
    sub_19C52F660();
    return v10;
  }
  result = swift_isUniquelyReferenced_native();
  v8 = *v2;
  if (!(_DWORD)result)
  {
    if (!v8)
      goto LABEL_20;
    v8 = sub_19CAA96C8();
    result = swift_release();
    *v2 = v8;
  }
  if (v8)
  {
    result = sub_19C5306D8(a2, (uint64_t *)(v8 + 16), v8 + 32, (uint64_t)v2);
    v9 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v9 >= a1)
    {
      sub_19C530874(a1, v9, v2[1], (uint64_t *)(v8 + 16));
      return sub_19C5303FC(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_19C5306D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v16;

  v6 = a1;
  v16 = sub_19CAA9668();
  sub_19CAA96A4();
  if (!v16)
    return sub_19CAA9680();
  v7 = a1;
  v8 = sub_19CAA9674();
  while (1)
  {
    result = sub_19CAA968C();
    if ((v10 & 1) != 0)
      break;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      break;
    }
    if (result >= *(_QWORD *)(*(_QWORD *)(a4 + 8) + 16))
      goto LABEL_21;
    v11 = *a2;
    result = sub_19CAAA28C();
    if (__OFSUB__(1 << v11, 1))
      goto LABEL_22;
    v12 = result & ((1 << v11) - 1);
    if (v6 >= v8)
    {
      if (v12 >= v8 && v6 >= v12)
      {
LABEL_18:
        sub_19CAA968C();
        sub_19CAA9680();
        v6 = v7;
      }
    }
    else if (v12 >= v8 || v6 >= v12)
    {
      goto LABEL_18;
    }
    sub_19CAA96A4();
    v7 = a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C530874(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  v5 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v5 >= 1)
  {
    v7 = result;
    v8 = *(_QWORD *)(a3 + 16);
    v9 = v8 - v5;
    if ((uint64_t)v8 < v5)
      ++v9;
    if (result < v9 >> 1)
    {
      result = MEMORY[0x1A1AD41D8](*a4 & 0x3F);
      if (result / 3 > v7)
      {
        if (v7 < 0)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v8 < v7)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v7)
        {
          v10 = 0;
          while (1)
          {
            v11 = *a4;
            result = sub_19CAAA28C();
            if (__OFSUB__(1 << v11, 1))
              break;
            if (sub_19CAA9668())
            {
              while (1)
              {
                v12 = sub_19CAA968C();
                if ((v13 & 1) == 0 && v12 == v10)
                  break;
                sub_19CAA96A4();
              }
            }
            result = v10 + v5;
            if (__OFADD__(v10, v5))
              goto LABEL_53;
            ++v10;
            result = sub_19CAA9698();
            if (v10 == v7)
              goto LABEL_19;
          }
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        goto LABEL_19;
      }
      sub_19CAA9668();
      v23 = sub_19CAA968C();
      if ((v24 & 1) != 0 || v23 >= v7)
      {
LABEL_40:
        result = sub_19CAA96A4();
LABEL_19:
        v14 = a4[1];
        if (__OFSUB__(v14 >> 6, v5))
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        v15 = 1 << *a4;
        v16 = __OFSUB__(v15, 1);
        v17 = v15 - 1;
        if (v16)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        v18 = (v17 & (((v14 >> 6) - v5) >> 63)) + (v14 >> 6) - v5;
        if (v18 < v17)
          v17 = 0;
        a4[1] = a4[1] & 0x3F | ((v18 - v17) << 6);
        return result;
      }
      if (!__OFADD__(v23, v5))
      {
        sub_19CAA9698();
        goto LABEL_40;
      }
      __break(1u);
LABEL_46:
      sub_19CAA9668();
      v25 = sub_19CAA968C();
      if ((v26 & 1) == 0 && v25 >= v4)
      {
        v16 = __OFSUB__(v25, v5);
        result = v25 - v5;
        if (v16)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        sub_19CAA9698();
      }
      return sub_19CAA96A4();
    }
    v4 = a2;
    v19 = v8 - a2;
    if (__OFSUB__(v8, a2))
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    result = MEMORY[0x1A1AD41D8](*a4 & 0x3F);
    if (v19 >= result / 3)
      goto LABEL_46;
    if ((uint64_t)v8 < v4)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v4 < 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v8 != v4)
    {
      if (v8 <= v4)
      {
LABEL_65:
        __break(1u);
        return result;
      }
      while (1)
      {
        v20 = *a4;
        result = sub_19CAAA28C();
        if (__OFSUB__(1 << v20, 1))
          goto LABEL_55;
        if (sub_19CAA9668())
        {
          while (1)
          {
            v21 = sub_19CAA968C();
            if ((v22 & 1) == 0 && v21 == v4)
              break;
            sub_19CAA96A4();
          }
        }
        result = v4 - v5;
        if (__OFSUB__(v4, v5))
          goto LABEL_56;
        ++v4;
        result = sub_19CAA9698();
        if (v4 == v8)
          return result;
      }
    }
  }
  return result;
}

BOOL sub_19C530C6C(_QWORD *a1)
{
  uint64_t v1;

  return *a1 == **(_QWORD **)(v1 + 16);
}

void sub_19C530C84(uint64_t a1)
{
  _QWORD *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;

  if (qword_1EE422E90 != -1)
    swift_once();
  v2 = off_1EE423CB0;
  v3 = (os_unfair_lock_s *)((char *)off_1EE423CB0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1EE423CB0 + 6);
  v4 = v2[2];
  v5 = objc_msgSend(*(id *)(a1 + 24), sel_registryID);
  swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_19C552148((uint64_t)v5), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_endAccess();
    swift_beginAccess();
    swift_retain();
    sub_19C52E660();
    swift_endAccess();
    *(_QWORD *)(v9 + 88) = 0;
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  os_unfair_lock_unlock(v3);
}

_QWORD *sub_19C530D8C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  float v8;
  _QWORD *result;
  float v10;

  v2[2] = 16;
  v2[11] = 0;
  v5 = *(_QWORD *)sub_19CAA96F8();
  v6 = MEMORY[0x1E0DEE9D8];
  v2[3] = 0;
  v2[4] = v6;
  v2[5] = v6;
  v2[6] = v5;
  v2[9] = 0;
  v2[10] = 0;
  v2[7] = a2;
  v2[8] = 0;
  v7 = *(void **)(a1 + 24);
  swift_retain();
  if (objc_msgSend(v7, sel_hasUnifiedMemory))
    v8 = 1.4;
  else
    v8 = 1.0;
  result = objc_msgSend(v7, sel_recommendedMaxWorkingSetSize);
  v10 = v8 * (float)(unint64_t)result;
  if ((~LODWORD(v10) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 <= -9.2234e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v10 < 9.2234e18)
  {
    v2[12] = (uint64_t)v10;
    v2[13] = objc_msgSend(v7, sel_registryID);
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_19C530E8C()
{
  return swift_deallocObject();
}

BOOL sub_19C530E9C(_QWORD *a1)
{
  uint64_t v1;

  return *a1 >= *(_QWORD *)(v1 + 16);
}

uint64_t sub_19C530EB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19C530ED4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  uint64_t v6;

  v4 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v6 = *a1;
  result = v4(&v6);
  *a2 = result & 1;
  return result;
}

uint64_t sub_19C530F14(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

BOOL sub_19C530F24(_QWORD *a1)
{
  uint64_t v1;

  return sub_19C50BDE4(a1, *(_QWORD **)(v1 + 16));
}

BOOL sub_19C530F40(_QWORD *a1)
{
  return sub_19C530C6C(a1);
}

unint64_t sub_19C530F5C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C530F80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C530F80()
{
  unint64_t result;

  result = qword_1EE423FF0;
  if (!qword_1EE423FF0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE88EC, &type metadata for ScatterOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423FF0);
  }
  return result;
}

unint64_t sub_19C530FC4(uint64_t a1)
{
  unint64_t result;

  result = sub_19C530FE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C530FE8()
{
  unint64_t result;

  result = qword_1EE423CE0;
  if (!qword_1EE423CE0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8998, &type metadata for GatherOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423CE0);
  }
  return result;
}

void *sub_19C53102C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v9 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    v13 = (id)MEMORY[0x1A1AD4A9C](1, a2);
    if ((a5 & 1) == 0)
      goto LABEL_5;
    goto LABEL_7;
  }
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v10)
  {
    if (v10 != 1)
    {
      v11 = *(void **)(a2 + 40);
      v12 = *(id *)(a2 + 32);
      v13 = v11;
      if ((a5 & 1) == 0)
      {
LABEL_5:
        v14 = (void *)sub_19CAA98F0();
        v15 = objc_msgSend(v9, sel_gatherWithUpdatesTensor_indicesTensor_axis_batchDimensions_name_, v12, v13, a3, a4, v14);
LABEL_8:
        v16 = v15;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
        v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_19CAEA690;
        *(_QWORD *)(v17 + 32) = v16;
        v18 = v17;
        sub_19CAA9A10();

        return (void *)v18;
      }
LABEL_7:
      v14 = (void *)sub_19CAA98F0();
      v15 = objc_msgSend(v9, sel_gatherNDWithUpdatesTensor_indicesTensor_batchDimensions_name_, v12, v13, a3, v14);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_19C5311A8(void *result, uint64_t a2, uint64_t a3, char a4)
{
  void *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v7 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    v12 = (id)MEMORY[0x1A1AD4A9C](1, a2);
    v13 = (id)MEMORY[0x1A1AD4A9C](2, a2);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v8 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v8 >= 3)
  {
    v9 = *(void **)(a2 + 40);
    v10 = *(void **)(a2 + 48);
    v11 = *(id *)(a2 + 32);
    v12 = v9;
    v13 = v10;
LABEL_6:
    v14 = v13;
    v15 = qword_19CAEAFE8[a4];
    v16 = (void *)sub_19CAA98F0();
    v17 = objc_msgSend(v7, sel_scatterAlongAxis_withDataTensor_updatesTensor_indicesTensor_mode_name_, a3, v11, v12, v14, v15, v16);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v18 + 32) = v17;
    v19 = v18;
    sub_19CAA9A10();

    return (void *)v19;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_19C531328(uint64_t a1)
{
  unint64_t result;

  result = sub_19C53134C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C53134C()
{
  unint64_t result;

  result = qword_1EE4240C0;
  if (!qword_1EE4240C0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9A64, &type metadata for StatelessRandomOperator);
    atomic_store(result, (unint64_t *)&qword_1EE4240C0);
  }
  return result;
}

uint64_t sub_19C531390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  unint64_t v22;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 40);
  v6 = (os_unfair_lock_s *)(v5 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v8 = *(_QWORD *)(v5 + 16);
  v7 = (uint64_t *)(v5 + 16);
  if (*(_QWORD *)(v8 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C55167C();
    v9 = (_QWORD *)*v7;
    v10 = *(_QWORD *)(*v7 + 24);
    v11 = __OFSUB__(v10, 1);
    v12 = v10 - 1;
    if (v11)
    {
      __break(1u);
      goto LABEL_12;
    }
    v13 = v9[4] + v12;
    v14 = v9[2];
    if (v13 < v14)
      v14 = 0;
    v15 = (_QWORD *)v9[v13 - v14 + 5];
    v9[3] = v12;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v16 = swift_retain();
    v15 = sub_19C53424C(v16);
  }
  os_unfair_lock_unlock(v6);
  if (v15)
  {
    v17 = v15[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
    sub_19C5346A0((uint64_t *)(v17 + 16), (uint64_t)v15, &v21);
    os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
    v18 = v21;
    swift_release();
    sub_19C5316CC(v18, a1, v2, &v21);
    swift_release();
    os_unfair_lock_lock(v6);
    sub_19C534120(v7, (uint64_t)v15);
    os_unfair_lock_unlock(v6);
    swift_release_n();
    return v21;
  }
LABEL_12:
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v20 = objc_msgSend(*(id *)(v4 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5316CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t result;
  _QWORD v50[4];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[7];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v59 = a2;
  v60 = a1;
  v58 = a4;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 33);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = (void *)MEMORY[0x1A1AD6338]();
  if (qword_1EE422E90 != -1)
    swift_once();
  v11 = (_QWORD *)((char *)off_1EE423CB0 + 16);
  v12 = (os_unfair_lock_s *)((char *)off_1EE423CB0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1EE423CB0 + 6);
  if (v8)
    v13 = 256;
  else
    v13 = 0;
  sub_19C52C540(v11, v9, v6, v13 | v7, 0, 1, v67);
  if (v4)
  {
    os_unfair_lock_unlock(v12);
    __break(1u);
    os_unfair_lock_unlock((os_unfair_lock_t)a3);
    __break(1u);
    goto LABEL_25;
  }
  v14 = v9;
  os_unfair_lock_unlock(v12);
  v15 = v67[0];
  objc_autoreleasePoolPop(v10);
  type metadata accessor for MetalBufferStorage();
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 48) = v7;
  *(_BYTE *)(v16 + 49) = v8;
  *(_QWORD *)(v16 + 16) = v15;
  v17 = v60;
  *(_QWORD *)(v16 + 24) = v60;
  *(_QWORD *)(v16 + 32) = &off_1E3D45330;
  *(_QWORD *)(v16 + 40) = v6;
  v18 = qword_1EE422E48;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v18 != -1)
    swift_once();
  if (byte_1EE4317CB)
    v19 = sub_19C541310;
  else
    v19 = 0;
  *(_QWORD *)(v16 + 56) = v19;
  *(_QWORD *)(v16 + 64) = 0;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424080);
  inited = swift_initStackObject();
  v57 = xmmword_19CAE8180;
  *(_OWORD *)(inited + 16) = xmmword_19CAE8180;
  *(_QWORD *)(inited + 32) = v16;
  sub_19C532288(v59);
  swift_retain();
  sub_19C53AD08(v59, MEMORY[0x1E0DEE9D8], inited, v67);
  v22 = *(_QWORD *)(a3 + 24);
  v23 = (os_unfair_lock_s *)(*(_QWORD *)(v22 + 16) + 16);
  os_unfair_lock_lock(v23);
  v24 = sub_19C54B6E4(v22, v67);
  os_unfair_lock_unlock(v23);
  if (!v24)
  {
    v51 = v22;
    v52 = v20;
    v56 = 0;
    v53 = v16;
    v54 = v14;
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v50[3] = v50;
    v27 = v70;
    v64[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v28 = *(_QWORD *)(v27 + 16);
    v55 = v27;
    swift_bridgeObjectRetain();
    v63 = v28;
    if (v28)
    {
      v62 = v55 + 32;
      v29 = *(_QWORD *)(v55 + 32);
      v30 = *(unsigned __int8 *)(v55 + 40);
      v61 = *(unsigned __int8 *)(v55 + 41);
      v31 = *(_QWORD *)(v29 + 16);
      if (v31)
      {
        v65 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v32 = v29 + 32;
        do
        {
          v32 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v31;
        }
        while (v31);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C4E8EF8();
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v33 = v64[0];
    swift_bridgeObjectRelease();
    v34 = v56;
    v35 = sub_19C5322BC(v26);
    v56 = v34;
    if (!v34)
    {
      v36 = v35;
      v37 = v68;
      v38 = v69;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 24);
      v40 = v26;
      v65 = v39(v37, v38);
      v66 = v41;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v67, v68);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v42 = v65;
      v43 = v66;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      swift_allocObject();
      v44 = sub_19C54B4C0(v40, v33, v36, v42, v43);
      sub_19C5325B8((uint64_t)v67, (uint64_t)&v65);
      v45 = v51;
      v46 = (os_unfair_lock_s *)(*(_QWORD *)(v51 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v46);
      sub_19C5325B8((uint64_t)&v65, (uint64_t)v64);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v71 = *(_QWORD *)(v45 + 24);
      *(_QWORD *)(v45 + 24) = 0x8000000000000000;
      sub_19C550D60((uint64_t)v44, v64, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v45 + 24) = v71;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v64);
      swift_endAccess();
      os_unfair_lock_unlock(v46);
      sub_19C5325F4((uint64_t)&v65);

      swift_release();
      v25 = v58;
      v17 = v60;
      v16 = v53;
      v14 = v54;
      goto LABEL_23;
    }
LABEL_25:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C531F04);
  }
  v25 = v58;
LABEL_23:
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v57;
  *(_QWORD *)(v48 + 32) = v16;
  swift_retain();
  sub_19C53B390(v14, MEMORY[0x1E0DEE9D8], v48, v17);
  swift_release();
  swift_bridgeObjectRelease();
  result = sub_19C5325F4((uint64_t)v67);
  *v25 = v16;
  return result;
}

void sub_19C531F34()
{
  __asm { BR              X10 }
}

void *sub_19C531F74(uint64_t *a1)
{
  int v1;
  int v2;
  id v3;
  double v4;
  void *v5;
  double v6;
  const char *v7;
  int v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  int v15;
  int v16;
  char v17;
  uint64_t v18[9];

  sub_19C50E8D4(a1, (uint64_t)v18);
  sub_19C50E8D4(v18, (uint64_t)&v15);
  if (v17)
  {
    if (v17 == 1)
    {
      v2 = v15;
      v1 = v16;
      v3 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithDistribution_dataType_, 0, 8);
      v5 = v3;
      if (v3)
      {
        LODWORD(v4) = v2;
        objc_msgSend(v3, sel_setMin_, v4);
        v7 = sel_setMax_;
LABEL_7:
        LODWORD(v6) = v1;
        objc_msgSend(v5, v7, v6);
      }
    }
    else
    {
      v12 = v15;
      v11 = v16;
      v13 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithDistribution_dataType_, 0, 8);
      v5 = v13;
      if (v13)
      {
        objc_msgSend(v13, sel_setMinInteger_, v12);
        objc_msgSend(v5, sel_setMaxInteger_, v11);
      }
    }
  }
  else
  {
    v8 = v15;
    v1 = v16;
    v9 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithDistribution_dataType_, 1, 8);
    v5 = v9;
    if (v9)
    {
      LODWORD(v10) = v8;
      objc_msgSend(v9, sel_setMean_, v10);
      v7 = sel_setStandardDeviation_;
      goto LABEL_7;
    }
  }
  return v5;
}

void sub_19C532138()
{
  sub_19CAA9F2C();
  sub_19CAA992C();
  sub_19C59EBA4(0xBu);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAAA064();
  sub_19CAA992C();
  sub_19CAAA0B8();
  __break(1u);
  JUMPOUT(0x19C532238);
}

uint64_t sub_19C532268(uint64_t a1)
{
  return sub_19C531390(a1);
}

uint64_t sub_19C532288(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19C5322BC(void *a1)
{
  uint64_t *v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_19C531F34();
  if (v3)
  {
    v4 = v3;
    sub_19C524A44(v1[2]);
    sub_19C4E8EF8();
    v5 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    v6 = v1[3];
    if ((v6 & 0x8000000000000000) == 0)
    {
      sub_19C50E8D4(v1, (uint64_t)&v14);
      sub_19C50E8D4(&v14, (uint64_t)v12);
      v7 = (void *)sub_19CAA98F0();
      swift_bridgeObjectRelease();
      v8 = objc_msgSend(a1, sel_randomTensorWithShape_descriptor_seed_name_, v5, v4, v6, v7);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_19CAEA690;
      *(_QWORD *)(v9 + 32) = v8;
      v13 = v9;
      sub_19CAA9A10();
      v10 = v13;

      return v10;
    }
    __break(1u);
  }
  sub_19C50E8D4(v1, (uint64_t)&v13);
  sub_19C50E8D4(&v13, (uint64_t)&v14);
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    v15 = 1;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5325B8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for OperationDescriptor(a2, a1);
  return a2;
}

uint64_t sub_19C5325F4(uint64_t a1)
{
  destroy for OperationDescriptor(a1);
  return a1;
}

unint64_t sub_19C532628(uint64_t a1)
{
  unint64_t result;

  result = sub_19C53264C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C53264C()
{
  unint64_t result;

  result = qword_1EE423CE8;
  if (!qword_1EE423CE8)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8FA4, &type metadata for ArgumentSortOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423CE8);
  }
  return result;
}

unint64_t sub_19C532690(uint64_t a1)
{
  unint64_t result;

  result = sub_19C5326B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C5326B4()
{
  unint64_t result;

  result = qword_1EE424010;
  if (!qword_1EE424010)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9050, &type metadata for PadOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424010);
  }
  return result;
}

unint64_t sub_19C5326F8(uint64_t a1)
{
  unint64_t result;

  result = sub_19C53271C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C53271C()
{
  unint64_t result;

  result = qword_1EE423CF0;
  if (!qword_1EE423CF0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE90FC, &type metadata for TopKOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423CF0);
  }
  return result;
}

unint64_t sub_19C532760(uint64_t a1)
{
  unint64_t result;

  result = sub_19C532784();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C532784()
{
  unint64_t result;

  result = qword_1EE424020;
  if (!qword_1EE424020)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE91A8, &type metadata for CumulativeOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424020);
  }
  return result;
}

unint64_t sub_19C5327C8(uint64_t a1)
{
  unint64_t result;

  result = sub_19C5327EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C5327EC()
{
  unint64_t result;

  result = qword_1EE423CF8;
  if (!qword_1EE423CF8)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9254, &type metadata for BandPartOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423CF8);
  }
  return result;
}

unint64_t sub_19C532830(uint64_t a1)
{
  unint64_t result;

  result = sub_19C532854();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C532854()
{
  unint64_t result;

  result = qword_1EE424030;
  if (!qword_1EE424030)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9300, &type metadata for TileOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424030);
  }
  return result;
}

uint64_t sub_19C532898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v3 = 32;
    do
    {
      sub_19CAA9BB4();
      sub_19CAA9FBC();
      sub_19CAAA004();
      sub_19CAAA010();
      sub_19CAA9FC8();
      v3 += 16;
      --v1;
    }
    while (v1);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_19C532954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v3 = 40;
    do
    {
      sub_19CAA9BB4();
      sub_19CAA9FBC();
      sub_19CAAA004();
      sub_19CAAA010();
      sub_19CAA9FC8();
      v3 += 16;
      --v1;
    }
    while (v1);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

void *sub_19C532A10(void *result, uint64_t a2)
{
  uint64_t v2;
  float v3;
  int v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  double v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v3 = *(float *)(v2 + 32);
  v4 = *(unsigned __int8 *)(v2 + 36);
  v16 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1A1AD4A9C](0);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v5 = *(id *)(a2 + 32);
  }
  v6 = 1;
  if (v3 != 0.0)
    v6 = 2;
  v14 = v6;
  v15 = v5;
  sub_19C532898();
  sub_19C4E8EF8();
  v13 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  sub_19C532954();
  v7 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  if (v4)
    v8 = v14;
  else
    v8 = 0;
  if (v4)
    v9 = 0.0;
  else
    v9 = v3;
  v10 = (void *)sub_19CAA98F0();
  v11 = objc_msgSend(v16, sel_padTensor_withPaddingMode_leftPadding_rightPadding_constantValue_name_, v15, v8, v13, v7, v10, v9);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19CAEA690;
  *(_QWORD *)(v12 + 32) = v11;
  v17 = v12;
  sub_19CAA9A10();
  return (void *)v17;
}

void *sub_19C532BD0(void *result, uint64_t a2, char a3, uint64_t a4)
{
  void *v5;
  unint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = a2 & 0xC000000000000001;
  if ((a3 & 1) == 0)
  {
    if (v6)
    {
      v7 = (id)MEMORY[0x1A1AD4A9C](0);
      goto LABEL_5;
    }
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(a2 + 32);
LABEL_5:
      v8 = v7;
      v9 = (void *)sub_19CAA98F0();
      v10 = objc_msgSend(v5, sel_cumulativeSumWithTensor_axis_name_, v8, a4, v9);
LABEL_10:
      v12 = v10;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_19CAEA690;
      *(_QWORD *)(v13 + 32) = v12;
      v14 = v13;
      sub_19CAA9A10();
      return (void *)v14;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v6)
  {
LABEL_13:
    v11 = (id)MEMORY[0x1A1AD4A9C](0);
    goto LABEL_9;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(a2 + 32);
LABEL_9:
    v8 = v11;
    v9 = (void *)sub_19CAA98F0();
    v10 = objc_msgSend(v5, sel_cumulativeProductWithTensor_axis_name_, v8, a4, v9);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_19C532D0C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C532D30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C532D30()
{
  unint64_t result;

  result = qword_1EE423FE0;
  if (!qword_1EE423FE0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8794, &type metadata for ActivationOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423FE0);
  }
  return result;
}

void *sub_19C532D74(void *result, uint64_t a2, uint64_t a3, char a4)
{
  void *v6;
  id v7;
  void *v8;
  float v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v6 = result;
  if ((a4 & 1) == 0)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v8 = (void *)MEMORY[0x1A1AD4A9C](0, a2);
      v7 = (id)MEMORY[0x1A1AD4A9C](0, a2);
      goto LABEL_5;
    }
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(a2 + 32);
      v8 = v7;
LABEL_5:
      v9 = *((float *)&a3 + 1);
      v10 = *(float *)&a3;
      v11 = objc_msgSend(v7, sel_dataType);

      v12 = objc_msgSend(v6, sel_constantWithScalar_dataType_, v11, v10);
      if ((a2 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1A1AD4A9C](0, a2);
      else
        v13 = *(id *)(a2 + 32);
      v18 = v13;
      v19 = objc_msgSend(v13, sel_dataType);

      v15 = objc_msgSend(v6, sel_constantWithScalar_dataType_, v19, v9);
      v16 = (void *)sub_19CAA98F0();
      v17 = objc_msgSend(v6, sel_clampWithTensor_minValueTensor_maxValueTensor_name_, v8, v12, v15, v16);

      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_16;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v14 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    goto LABEL_10;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(a2 + 32);
LABEL_10:
    v15 = v14;
    v16 = (void *)sub_19CAA98F0();
    v17 = objc_msgSend(v6, sel_softMaxWithTensor_axis_name_, v15, a3, v16);
LABEL_13:

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v20 + 32) = v17;
    v21 = v20;
    sub_19CAA9A10();
    return (void *)v21;
  }
  __break(1u);
  return result;
}

unint64_t sub_19C532FC0(uint64_t a1)
{
  unint64_t result;

  result = sub_19C532FE4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C532FE4()
{
  unint64_t result;

  result = qword_1EE423D00;
  if (!qword_1EE423D00)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE965C, &type metadata for ConvolutionOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423D00);
  }
  return result;
}

void *sub_19C533028(void *result, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    v7 = (id)MEMORY[0x1A1AD4A9C](1, a2);
    goto LABEL_5;
  }
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 == 1)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v5 = *(void **)(a2 + 40);
  v6 = *(id *)(a2 + 32);
  v7 = v5;
LABEL_5:
  v8 = v7;
  if ((sub_19C533274(v6, v7) & 1) != 0)
  {
    v9 = (void *)sub_19CAA98F0();
    v10 = objc_msgSend(v3, sel_transposeTensor_dimension_withDimension_name_, v8, -3, -4, v9);

    v11 = (void *)sub_19C533438();
    v12 = (void *)sub_19CAA98F0();
    v13 = objc_msgSend(v3, sel_depthwiseConvolution3DWithSourceTensor_weightsTensor_descriptor_name_, v6, v10, v11, v12);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v14 + 32) = v13;
    v20 = v14;
    sub_19CAA9A10();
    v15 = v20;

  }
  else
  {
    v16 = sub_19C533794();
    v17 = (void *)sub_19CAA98F0();
    v18 = objc_msgSend(v3, sel_convolution2DWithSourceTensor_weightsTensor_descriptor_name_, v6, v8, v16, v17);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v19 + 32) = v18;
    v21 = v19;
    sub_19CAA9A10();
    v15 = v21;

  }
  return (void *)v15;
}

id sub_19C533274(void *a1, void *a2)
{
  uint64_t v2;
  id result;
  void *v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  result = objc_msgSend(a1, sel_shape);
  if (!result)
    return result;
  v5 = result;
  sub_19C4E8EF8();
  v6 = sub_19CAA99F8();

  v7 = objc_msgSend(a2, sel_shape);
  if (!v7)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = v7;
  v9 = sub_19CAA99F8();

  if (*(uint64_t *)(v2 + 48) <= 1)
    goto LABEL_12;
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x1A1AD4A9C](1, v9);
  }
  else
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_20;
    }
    v10 = *(id *)(v9 + 40);
  }
  v11 = v10;
  v12 = (void *)sub_19CAA9DA0();
  v13 = sub_19CAA9DB8();

  if ((v13 & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v6 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v14 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  swift_bridgeObjectRelease();
  if (v14 <= 3)
    goto LABEL_13;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return (id)(v15 > 3);
}

uint64_t sub_19C533438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_19CAEB100;
  *(_QWORD *)(v0 + 32) = sub_19CAA9BB4();
  *(_QWORD *)(v0 + 40) = sub_19CAA9BB4();
  *(_QWORD *)(v0 + 48) = sub_19CAA9BB4();
  sub_19CAA9A10();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_19CAEB100;
  *(_QWORD *)(v1 + 32) = sub_19CAA9BB4();
  *(_QWORD *)(v1 + 40) = sub_19CAA9BB4();
  *(_QWORD *)(v1 + 48) = sub_19CAA9BB4();
  sub_19CAA9A10();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19CAEB110;
  *(_QWORD *)(v2 + 32) = sub_19CAA9BB4();
  *(_QWORD *)(v2 + 40) = sub_19CAA9BB4();
  *(_QWORD *)(v2 + 48) = sub_19CAA9BB4();
  *(_QWORD *)(v2 + 56) = sub_19CAA9BB4();
  *(_QWORD *)(v2 + 64) = sub_19CAA9BB4();
  *(_QWORD *)(v2 + 72) = sub_19CAA9BB4();
  sub_19CAA9A10();
  sub_19C4E8EF8();
  v3 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithStrides_dilationRates_paddingValues_paddingStyle_, v3, v4, v5, 0);

  if (v6)
  {
    objc_msgSend(v6, sel_setChannelDimensionIndex_, -3);
    return (uint64_t)v6;
  }
  else
  {
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAAA064();
      sub_19CAA992C();
    }
    result = sub_19CAAA0B8();
    __break(1u);
  }
  return result;
}

id sub_19C533794()
{
  _QWORD *v0;
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_descriptorWithStrideInX_strideInY_dilationRateInX_dilationRateInY_groups_paddingLeft_paddingRight_paddingTop_paddingBottom_paddingStyle_dataLayout_weightsLayout_, v0[1], *v0, v0[5], v0[4], v0[6], v0[3], v0[3], v0[2], v0[2], 0, 0, 2);
  if (!result)
  {
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAAA064();
      sub_19CAA992C();
    }
    result = (id)sub_19CAAA0B8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19C533970(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  void *ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  os_unfair_lock_s *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v55;

  v2 = v1;
  v4 = *(_QWORD *)sub_19CAA96F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423E18);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  v55 = &unk_1EE465348;
  v6 = swift_dynamicCastObjCProtocolConditional();
  if (!v6)
    goto LABEL_14;
  v7 = (os_unfair_lock_s *)v6;
  v8 = qword_1EE422E40;
  swift_retain();
  swift_unknownObjectRetain();
  if (v8 != -1)
    swift_once();
  if (byte_1EE4317CA == 1)
  {
    *(_QWORD *)(v2 + 16) = v7;
    *(_QWORD *)(v2 + 24) = v7;
    sub_19C535F80(0, (unint64_t *)&unk_1EE423E20);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain_n();
    v10 = objc_msgSend(ObjCClassFromMetadata, sel_deviceWithMTLDevice_, v7);
    swift_unknownObjectRelease();
    *(_QWORD *)(v2 + 48) = v10;
    v11 = -[os_unfair_lock_s newCommandQueue](v7, sel_newCommandQueue);
    if (!v11)
    {
      if (qword_1EE422E58 == -1)
      {
LABEL_19:
        v38 = sub_19CAA97AC();
        __swift_project_value_buffer(v38, (uint64_t)qword_1EE4317D8);
        swift_unknownObjectRetain_n();
        v39 = sub_19CAA97A0();
        v40 = sub_19CAA9D1C();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          v52 = swift_slowAlloc();
          v42 = v52;
          *(_DWORD *)v41 = 136315138;
          v43 = -[os_unfair_lock_s name](v7, sel_name);
          v44 = sub_19CAA98FC();
          v46 = v45;

          v54 = sub_19C5348EC(v44, v46, &v52);
          sub_19CAA9E60();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          MEMORY[0x1A1AD7790](v42, -1, -1);
          MEMORY[0x1A1AD7790](v41, -1, -1);

        }
        else
        {

        }
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease();
        swift_release();

LABEL_31:
        swift_deallocPartialClassInstance();
        return 0;
      }
LABEL_36:
      swift_once();
      goto LABEL_19;
    }
    v12 = v11;
    v52 = 0;
    v53 = 0xE000000000000000;
    v13 = -[os_unfair_lock_s name](v7, sel_name);
    sub_19CAA98FC();

    sub_19CAA992C();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    v54 = (uint64_t)v12;
    sub_19CAAA064();
    v14 = (void *)sub_19CAA98F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setLabel_, v14);

    *(_QWORD *)(v2 + 32) = v12;
    v15 = *(os_unfair_lock_s **)(v2 + 40);
    v7 = v15 + 4;
    v16 = v15 + 6;
    swift_unknownObjectRetain();
    os_unfair_lock_lock(v16);
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v17 = swift_retain();
    v18 = sub_19C53424C(v17);
    if (!v18)
    {
LABEL_27:
      v50 = *(_QWORD *)(*(_QWORD *)&v7->_os_unfair_lock_opaque + 24);
      os_unfair_lock_unlock(v16);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      if (v50 >= 1)
        return v2;
      swift_release();
      return 0;
    }
    v19 = v18;
    v20 = *(_QWORD *)(*(_QWORD *)&v7->_os_unfair_lock_opaque + 24);
    v21 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *(_QWORD **)&v7->_os_unfair_lock_opaque;
    if (*(_QWORD *)(*(_QWORD *)&v7->_os_unfair_lock_opaque + 16) >= v21
      && (isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v25 = v24[4];
      if (v25)
      {
LABEL_11:
        v26 = __OFSUB__(v25, 1);
        v27 = v25 - 1;
        if (!v26)
        {
LABEL_25:
          v24[v27 + 5] = v19;
          v24[4] = v27;
          v48 = v24[3];
          v26 = __OFADD__(v48, 1);
          v49 = v48 + 1;
          if (!v26)
          {
            v24[3] = v49;
            goto LABEL_27;
          }
          goto LABEL_35;
        }
        __break(1u);
LABEL_14:
        v28 = qword_1EE422E58;
        swift_retain();
        if (v28 != -1)
          swift_once();
        v29 = sub_19CAA97AC();
        __swift_project_value_buffer(v29, (uint64_t)qword_1EE4317D8);
        swift_unknownObjectRetain_n();
        v30 = sub_19CAA97A0();
        v31 = sub_19CAA9D1C();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          v33 = swift_slowAlloc();
          v52 = v33;
          *(_DWORD *)v32 = 136315138;
          v34 = objc_msgSend(a1, sel_name);
          v35 = sub_19CAA98FC();
          v37 = v36;

          v54 = sub_19C5348EC(v35, v37, &v52);
          sub_19CAA9E60();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_arrayDestroy();
          MEMORY[0x1A1AD7790](v33, -1, -1);
          MEMORY[0x1A1AD7790](v32, -1, -1);

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        swift_release();
        goto LABEL_31;
      }
    }
    else
    {
      sub_19C5352E4(v21, 0, v23, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent, &qword_1EE423DF8);
      v24 = *(_QWORD **)&v7->_os_unfair_lock_opaque;
      v25 = *(_QWORD *)(*(_QWORD *)&v7->_os_unfair_lock_opaque + 32);
      if (v25)
        goto LABEL_11;
    }
    v47 = v24[2];
    v26 = __OFSUB__(v47, 1);
    v27 = v47 - 1;
    if (!v26)
      goto LABEL_25;
    __break(1u);
  }
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v52 = 0;
    v53 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    LOBYTE(v54) = 1;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C534120(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = *a1;
  v4 = *(_QWORD *)(result + 24);
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  v8 = (_QWORD *)*a1;
  if (*(_QWORD *)(*a1 + 16) < v5 || (result & 1) == 0)
    goto LABEL_8;
  v9 = v8[4];
  if (v9)
  {
    while (1)
    {
      v10 = __OFSUB__(v9, 1);
      v11 = v9 - 1;
      if (!v10)
        break;
      __break(1u);
LABEL_8:
      result = sub_19C5352E4(v5, 0, v7, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent, &qword_1EE423DF8);
      v8 = (_QWORD *)*a1;
      v9 = *(_QWORD *)(*a1 + 32);
      if (!v9)
        goto LABEL_9;
    }
LABEL_10:
    v8[v11 + 5] = a2;
    v8[4] = v11;
    v13 = v8[3];
    v10 = __OFADD__(v13, 1);
    v14 = v13 + 1;
    if (!v10)
    {
      v8[3] = v14;
      return swift_retain();
    }
    goto LABEL_13;
  }
LABEL_9:
  v12 = v8[2];
  v10 = __OFSUB__(v12, 1);
  v11 = v12 - 1;
  if (!v10)
    goto LABEL_10;
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_19C5341F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalDevice()
{
  return objc_opt_self();
}

_QWORD *sub_19C53424C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[5];
  uint64_t v30;

  v2 = v1;
  v4 = *v1;
  v5 = sub_19CAA9D40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_19CAA9D34();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_19CAA97C4();
  MEMORY[0x1E0C80A78](v10);
  sub_19C535F80(0, (unint64_t *)&qword_1EE423DE0);
  sub_19CAA97B8();
  sub_19CAA9D28();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D8], v5);
  v2[2] = sub_19CAA9D4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244A0);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  v2[7] = v11;
  if (objc_msgSend(*(id *)(a1 + 24), sel_newSharedEvent))
  {
    v29[3] = &unk_1EE4656B0;
    v12 = swift_dynamicCastObjCProtocolConditional();
    if (v12)
    {
      v13 = (void *)v12;
      v2[4] = v12;
      swift_unknownObjectRetain_n();
      v14 = (void *)sub_19CAA98F0();
      objc_msgSend(v13, sel_setLabel_, v14);
      swift_unknownObjectRelease();

      v2[6] = v2[4];
      v2[3] = a1;
      v15 = v2[2];
      v16 = objc_allocWithZone(MEMORY[0x1E0CC6B88]);
      swift_unownedRetain();
      v17 = objc_msgSend(v16, sel_initWithDispatchQueue_, v15);
      swift_release();
      swift_unknownObjectRelease();
      v2[5] = v17;
      return v2;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1EE422E58 != -1)
    swift_once();
  v18 = sub_19CAA97AC();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EE4317D8);
  swift_retain_n();
  v19 = sub_19CAA97A0();
  v20 = sub_19CAA9D1C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v21 = 136315138;
    v30 = v22;
    v29[1] = v21 + 4;
    v23 = objc_msgSend(*(id *)(a1 + 24), sel_name);
    v29[2] = v4;
    v24 = v23;
    v25 = sub_19CAA98FC();
    v27 = v26;

    v29[4] = sub_19C5348EC(v25, v27, &v30);
    sub_19CAA9E60();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x1A1AD7790](v22, -1, -1);
    MEMORY[0x1A1AD7790](v21, -1, -1);
    swift_release();

  }
  else
  {

    swift_release_n();
  }

  swift_release();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t *sub_19C5346A0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v4 = *result + 1;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    *result = v4;
    type metadata accessor for MetalAsyncEvent();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = v4;
    *a3 = v6;
    return (uint64_t *)swift_unownedRetain();
  }
  return result;
}

uint64_t sub_19C534708()
{
  uint64_t v0;

  swift_unownedRelease();
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalDevice.SharedEvent()
{
  return objc_opt_self();
}

uint64_t sub_19C53476C()
{
  sub_19CAAA298();
  sub_19CAAA2A4();
  swift_unownedRetainStrong();
  swift_release();
  sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

uint64_t sub_19C5347CC()
{
  return sub_19C53476C();
}

uint64_t sub_19C5347EC()
{
  sub_19CAAA2A4();
  swift_unownedRetainStrong();
  swift_release();
  return sub_19CAAA2A4();
}

uint64_t sub_19C53483C()
{
  sub_19CAAA298();
  sub_19CAAA2A4();
  swift_unownedRetainStrong();
  swift_release();
  sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

BOOL sub_19C534898(uint64_t *a1, uint64_t *a2)
{
  return sub_19C535F18(*a1, *a2);
}

unint64_t sub_19C5348A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE423DD8;
  if (!qword_1EE423DD8)
  {
    v1 = type metadata accessor for MetalDevice.SharedEvent();
    result = MEMORY[0x1A1AD76AC](&unk_19CAEB1E0, v1);
    atomic_store(result, (unint64_t *)&qword_1EE423DD8);
  }
  return result;
}

uint64_t sub_19C5348EC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_19C5349BC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_19C4D8980((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_19C4D8980((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_19C5349BC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_19CAA9E84();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_19C534B74(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_19CAA9FA4();
  if (!v8)
  {
    sub_19CAAA0AC();
    __break(1u);
LABEL_17:
    result = sub_19CAAA118();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_19C534B74(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_19C534C08(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19C534DE0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_19C534DE0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_19C534C08(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_19C534D7C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_19CAA9F38();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_19CAAA0AC();
      __break(1u);
LABEL_10:
      v2 = sub_19CAA9938();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_19CAAA118();
    __break(1u);
LABEL_14:
    result = sub_19CAAA0AC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_19C534D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423DF0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_19C534DE0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423DF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C534F2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  __int128 v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v2 = *v1;
  v3 = (uint64_t *)(*v1 + 16);
  v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423E00);
    v8 = swift_allocObject();
    v11 = *(_OWORD *)(v2 + 24);
    *(_QWORD *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1)
      sub_19C535A80(v8 + 16, (char *)(v8 + 40), v3, (char *)(v2 + 40));
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v1;
    sub_19CAA9704();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v7 = *(_QWORD *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423E00);
      v8 = swift_allocObject();
      v9 = _swift_stdlib_malloc_size((const void *)v8);
      v10 = v9 - 40;
      if (v9 < 40)
        v10 = v9 - 33;
      *(_QWORD *)(v8 + 16) = v10 >> 3;
      *(_QWORD *)(v8 + 24) = v7;
      *(_QWORD *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_19C5354E4(v8 + 16, (char *)(v8 + 40), (_QWORD *)(v6 + 16), (char *)(v6 + 40));
        *(_QWORD *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423E00);
      v8 = swift_allocObject();
      v12 = _swift_stdlib_malloc_size((const void *)v8);
      v13 = v12 - 40;
      if (v12 < 40)
        v13 = v12 - 33;
      v14 = *(_QWORD *)(v6 + 24);
      *(_QWORD *)(v8 + 16) = v13 >> 3;
      *(_QWORD *)(v8 + 24) = v14;
      *(_QWORD *)(v8 + 32) = 0;
      if (v14 >= 1)
        sub_19C535600(v8 + 16, (char *)(v8 + 40), (_QWORD *)(v6 + 16), (char *)(v6 + 40));
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_19C5350F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  __int128 v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v2 = *v1;
  v3 = (uint64_t *)(*v1 + 16);
  v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423FC0);
    v8 = swift_allocObject();
    v11 = *(_OWORD *)(v2 + 24);
    *(_QWORD *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1)
      sub_19C535BD4(v8 + 16, v8 + 40, v3, v2 + 40);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
    sub_19CAA9704();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v7 = *(_QWORD *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423FC0);
      v8 = swift_allocObject();
      v9 = _swift_stdlib_malloc_size((const void *)v8);
      v10 = v9 - 40;
      if (v9 < 40)
        v10 = v9 - 33;
      *(_QWORD *)(v8 + 16) = v10 >> 3;
      *(_QWORD *)(v8 + 24) = v7;
      *(_QWORD *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_19C5354E4(v8 + 16, (char *)(v8 + 40), (_QWORD *)(v6 + 16), (char *)(v6 + 40));
        *(_QWORD *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423FC0);
      v8 = swift_allocObject();
      v12 = _swift_stdlib_malloc_size((const void *)v8);
      v13 = v12 - 40;
      if (v12 < 40)
        v13 = v12 - 33;
      v14 = *(_QWORD *)(v6 + 24);
      *(_QWORD *)(v8 + 16) = v13 >> 3;
      *(_QWORD *)(v8 + 24) = v14;
      *(_QWORD *)(v8 + 32) = 0;
      if (v14 >= 1)
        sub_19C535764(v8 + 16, v8 + 40, (_QWORD *)(v6 + 16), v6 + 40);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_19C5352CC(uint64_t a1, uint64_t a2)
{
  return sub_19C5352E4(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for BNNSDevice.SharedEvent, &qword_1EE423E10);
}

uint64_t sub_19C5352E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  __int128 v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v9 = *v5;
  v10 = (uint64_t *)(*v5 + 16);
  v11 = *v10;
  if (*v10 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v15 = swift_allocObject();
    v18 = *(_OWORD *)(v9 + 24);
    *(_QWORD *)(v15 + 16) = v11;
    *(_OWORD *)(v15 + 24) = v18;
    if ((uint64_t)v18 >= 1)
      sub_19C535D94(v15 + 16, v15 + 40, v10, v9 + 40, a3, a4);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v5;
    a4(a3);
    sub_19CAA9704();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v14 = *(_QWORD *)(v13 + 24);
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v15 = swift_allocObject();
      v16 = _swift_stdlib_malloc_size((const void *)v15);
      v17 = v16 - 40;
      if (v16 < 40)
        v17 = v16 - 33;
      *(_QWORD *)(v15 + 16) = v17 >> 3;
      *(_QWORD *)(v15 + 24) = v14;
      *(_QWORD *)(v15 + 32) = 0;
      if (v14 >= 1)
      {
        swift_retain();
        sub_19C5354E4(v15 + 16, (char *)(v15 + 40), (_QWORD *)(v13 + 16), (char *)(v13 + 40));
        *(_QWORD *)(v13 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v15 = swift_allocObject();
      v19 = _swift_stdlib_malloc_size((const void *)v15);
      v20 = v19 - 40;
      if (v19 < 40)
        v20 = v19 - 33;
      v21 = *(_QWORD *)(v13 + 24);
      *(_QWORD *)(v15 + 16) = v20 >> 3;
      *(_QWORD *)(v15 + 24) = v21;
      *(_QWORD *)(v15 + 32) = 0;
      if (v21 >= 1)
        sub_19C5358E0(v15 + 16, v15 + 40, (_QWORD *)(v13 + 16), v13 + 40, a3, a4);
    }
  }
  result = swift_release();
  *v5 = v15;
  return result;
}

uint64_t sub_19C5354CC(uint64_t a1, uint64_t a2)
{
  return sub_19C5352E4(a1, a2, 0, type metadata accessor for IOSurfaceRef, &qword_1EE423E08);
}

void sub_19C5354E4(int a1, char *__dst, _QWORD *a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BOOL4 v11;
  _BOOL4 v12;
  BOOL v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_28;
  }
  v7 = a3[1];
  if (v5 < v7)
  {
    v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v9 = *a3 - v4;
      v10 = a4;
      goto LABEL_6;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = 0;
  v8 = 0;
  v9 = a3[1];
LABEL_6:
  v11 = v5 < v7;
  v12 = v8 != 0;
  v13 = v11 && v12;
  if (v11 && v12)
    v14 = v10;
  else
    v14 = 0;
  if (v11 && v12)
    v15 = v8;
  else
    v15 = 0;
  if (v9 < 1)
  {
    v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v16 = &a4[8 * v4];
  if (v16 != __dst || &v16[8 * v9] <= __dst)
    memmove(__dst, v16, 8 * v9);
LABEL_18:
  if (!v13 || v15 <= 0)
    return;
  if (!v14)
  {
LABEL_30:
    __break(1u);
    return;
  }
  v17 = &__dst[8 * v9];
  if (v17 != v14 || v17 >= &v14[8 * v15])
    memmove(v17, v14, 8 * v15);
}

void sub_19C535600(int a1, char *__dst, _QWORD *a3, char *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v14;
  size_t v15;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_5;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = *a3 - v4;
  v10 = __src;
  if (v5 < 1)
  {
LABEL_5:
    v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!__src)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    sub_19CAAA118();
    __break(1u);
    return;
  }
  v11 = &__src[8 * v4];
  if (v11 < &__dst[8 * v9] && &v11[8 * v9] > __dst)
    goto LABEL_27;
  memcpy(__dst, v11, 8 * v9);
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      v14 = &__dst[8 * v9];
      v15 = 8 * v8;
      if (&v14[8 * v8] <= v10 || v14 >= &v10[v15])
      {
        memcpy(v14, v10, v15);
        return;
      }
      goto LABEL_27;
    }
    goto LABEL_26;
  }
}

uint64_t sub_19C535764(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v15;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_23;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_5;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = *a3 - v4;
  v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = a4 + 8 * v4;
  if (v11 < a2 + 8 * v9 && v11 + 8 * v9 > a2)
    goto LABEL_26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
  result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      v15 = a2 + 8 * v9;
      if (v15 + 8 * v8 <= v10 || v15 >= v10 + 8 * v8)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
        return swift_arrayInitWithCopy();
      }
LABEL_26:
      result = sub_19CAAA118();
      __break(1u);
      return result;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_19C5358E0(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v15)(uint64_t);
  uint64_t result;
  unint64_t v18;

  v6 = a3[2];
  v7 = *a3 - v6;
  if (__OFSUB__(*a3, v6))
  {
    __break(1u);
    goto LABEL_24;
  }
  v9 = a3[1];
  if (v7 < v9)
  {
    v10 = v9 - v7;
    if (!__OFSUB__(v9, v7))
    {
      v11 = *a3 - v6;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = 0;
  v10 = 0;
  v11 = a3[1];
LABEL_6:
  if (v11 < 1)
  {
    v15 = a6;
    v11 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v13 = a4 + 8 * v6;
  if (v13 < a2 + 8 * v11 && v13 + 8 * v11 > a2)
    goto LABEL_27;
  v15 = a6;
  a6(a5);
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v7 < v9 && v10 >= 1)
  {
    if (v12)
    {
      v18 = a2 + 8 * v11;
      if (v18 + 8 * v10 <= v12 || v18 >= v12 + 8 * v10)
      {
        v15(a5);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      result = sub_19CAAA118();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_19C535A64(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4, uint64_t a5)
{
  return sub_19C535D94(a1, a2, a3, a4, a5, (void (*)(uint64_t))type metadata accessor for MetalDevice.SharedEvent);
}

void sub_19C535A80(int a1, char *__dst, _QWORD *a3, char *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v18;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_25;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *a3 - v4;
  v10 = __src;
  if (v5 < 1)
    goto LABEL_14;
LABEL_7:
  if (!__src)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_19CAAA118();
    __break(1u);
    return;
  }
  v11 = &__src[8 * v4];
  v12 = &__dst[8 * v4];
  v13 = 8 * v9;
  v14 = &v12[8 * v9];
  v15 = &v11[8 * v9];
  if (v11 < v14 && v12 < v15)
    goto LABEL_28;
  memcpy(v12, v11, v13);
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      v18 = 8 * v8;
      if (&__dst[8 * v8] <= v10 || &v10[v18] <= __dst)
      {
        memcpy(__dst, v10, v18);
        return;
      }
      goto LABEL_28;
    }
    goto LABEL_27;
  }
}

uint64_t sub_19C535BD4(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = *a3 - v4;
  v10 = a4;
  if (v5 < 1)
    goto LABEL_14;
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v11 = a4 + 8 * v4;
  v12 = a2 + 8 * v4;
  if (v11 < v12 + 8 * v9 && v12 < v11 + 8 * v9)
    goto LABEL_27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 8 * v8 <= v10 || v10 + 8 * v8 <= a2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423CC0);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      result = sub_19CAAA118();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_19C535D54(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  return sub_19C535D94(a1, a2, a3, a4, 0, (void (*)(uint64_t))type metadata accessor for BNNSDevice.SharedEvent);
}

uint64_t sub_19C535D74(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  return sub_19C535D94(a1, a2, a3, a4, 0, type metadata accessor for IOSurfaceRef);
}

uint64_t sub_19C535D94(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v6 = a3[2];
  v7 = *a3 - v6;
  if (__OFSUB__(*a3, v6))
  {
    __break(1u);
    goto LABEL_24;
  }
  v9 = a3[1];
  if (v7 >= v9)
  {
    v12 = 0;
    v10 = 0;
    v11 = a3[1];
    if (v9 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v10 = v9 - v7;
  if (__OFSUB__(v9, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = *a3 - v6;
  v12 = a4;
  if (v7 < 1)
    goto LABEL_14;
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v13 = a4 + 8 * v6;
  v14 = a2 + 8 * v6;
  if (v13 < v14 + 8 * v11 && v14 < v13 + 8 * v11)
    goto LABEL_27;
  a6(a5);
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v7 < v9 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + 8 * v10 <= v12 || v12 + 8 * v10 <= a2)
      {
        a6(a5);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      result = sub_19CAAA118();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

BOOL sub_19C535F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(swift_unownedRetainStrong() + 16);
  swift_release();
  v5 = *(_QWORD *)(swift_unownedRetainStrong() + 16);
  swift_release();
  return v4 == v5 && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
}

uint64_t sub_19C535F80(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_19C535FB8(uint64_t a1)
{
  unint64_t result;

  result = sub_19C535FDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C535FDC()
{
  unint64_t result;

  result = qword_1EE424060;
  if (!qword_1EE424060)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9860, &type metadata for ReductionLogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424060);
  }
  return result;
}

unint64_t sub_19C536020(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536044();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536044()
{
  unint64_t result;

  result = qword_1EE423E30;
  if (!qword_1EE423E30)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE990C, &type metadata for BinaryLogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E30);
  }
  return result;
}

unint64_t sub_19C536088(uint64_t a1)
{
  unint64_t result;

  result = sub_19C5360AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C5360AC()
{
  unint64_t result;

  result = qword_1EE424070;
  if (!qword_1EE424070)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE99B8, &type metadata for UnaryLogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424070);
  }
  return result;
}

void *sub_19C5360F0(void *result, uint64_t a2, char a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v4 = result;
  if (!a3)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
LABEL_22:
      v7 = (id)MEMORY[0x1A1AD4A9C](0, a2);
      v14 = (id)MEMORY[0x1A1AD4A9C](1, a2);
      goto LABEL_12;
    }
    v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
    {
      if (v12 != 1)
      {
        v13 = *(void **)(a2 + 40);
        v7 = *(id *)(a2 + 32);
        v14 = v13;
LABEL_12:
        v9 = v14;
        v10 = (void *)sub_19CAA98F0();
        v11 = objc_msgSend(v4, sel_logicalANDWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (a3 == 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v7 = (id)MEMORY[0x1A1AD4A9C](0, a2);
      v8 = (id)MEMORY[0x1A1AD4A9C](1, a2);
      goto LABEL_7;
    }
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      if (v5 != 1)
      {
        v6 = *(void **)(a2 + 40);
        v7 = *(id *)(a2 + 32);
        v8 = v6;
LABEL_7:
        v9 = v8;
        v10 = (void *)sub_19CAA98F0();
        v11 = objc_msgSend(v4, sel_logicalORWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
LABEL_18:
        v18 = v11;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
        v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_19CAEA690;
        *(_QWORD *)(v19 + 32) = v18;
        v20 = v19;
        sub_19CAA9A10();
        return (void *)v20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_25:
    v7 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    v17 = (id)MEMORY[0x1A1AD4A9C](1, a2);
    goto LABEL_17;
  }
  v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v15)
  {
    if (v15 != 1)
    {
      v16 = *(void **)(a2 + 40);
      v7 = *(id *)(a2 + 32);
      v17 = v16;
LABEL_17:
      v9 = v17;
      v10 = (void *)sub_19CAA98F0();
      v11 = objc_msgSend(v4, sel_logicalXORWithPrimaryTensor_secondaryTensor_name_, v7, v9, v10);
      goto LABEL_18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_19C536328(void *result, uint64_t a2, char a3, uint64_t a4)
{
  void *v5;
  unint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  v6 = a2 & 0xC000000000000001;
  if ((a3 & 1) == 0)
  {
    if (v6)
    {
      v7 = (id)MEMORY[0x1A1AD4A9C](0);
      goto LABEL_5;
    }
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(a2 + 32);
LABEL_5:
      v8 = v7;
      sub_19C524A44(a4);
      sub_19C4E8EF8();
      v9 = (void *)sub_19CAA99EC();
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v5, sel_reductionAndWithTensor_axes_name_, v8, v9, 0);
LABEL_10:
      v12 = v10;

      v13 = (void *)sub_19CAA98F0();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v5, sel_castTensor_toType_name_, v12, 2147483656, v13);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_19CAEA690;
      *(_QWORD *)(v15 + 32) = v14;
      v16 = v15;
      sub_19CAA9A10();

      return (void *)v16;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v6)
  {
LABEL_13:
    v11 = (id)MEMORY[0x1A1AD4A9C](0);
    goto LABEL_9;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(a2 + 32);
LABEL_9:
    v8 = v11;
    sub_19C524A44(a4);
    sub_19C4E8EF8();
    v9 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v5, sel_reductionOrWithTensor_axes_name_, v8, v9, 0);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_19C536508(uint64_t a1)
{
  unint64_t result;

  result = sub_19C53652C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C53652C()
{
  unint64_t result;

  result = qword_1EE423E38;
  if (!qword_1EE423E38)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE93AC, &type metadata for ReductionOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E38);
  }
  return result;
}

void sub_19C536570(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

unint64_t sub_19C536A24(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536A48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536A48()
{
  unint64_t result;

  result = qword_1EE423E40;
  if (!qword_1EE423E40)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8A44, &type metadata for ReverseOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E40);
  }
  return result;
}

unint64_t sub_19C536A8C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536AB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536AB0()
{
  unint64_t result;

  result = qword_1EE424040;
  if (!qword_1EE424040)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8AF0, &type metadata for SplitOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424040);
  }
  return result;
}

unint64_t sub_19C536AF4(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536B18();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536B18()
{
  unint64_t result;

  result = qword_1EE423E48;
  if (!qword_1EE423E48)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8B9C, &type metadata for ConcatOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E48);
  }
  return result;
}

unint64_t sub_19C536B5C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536B80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536B80()
{
  unint64_t result;

  result = qword_1EE424050;
  if (!qword_1EE424050)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8C48, &type metadata for SelectOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424050);
  }
  return result;
}

unint64_t sub_19C536BC4(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536BE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536BE8()
{
  unint64_t result;

  result = qword_1EE423E50;
  if (!qword_1EE423E50)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8CF4, &type metadata for SliceOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E50);
  }
  return result;
}

unint64_t sub_19C536C2C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536C50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536C50()
{
  unint64_t result;

  result = qword_1EE423E58;
  if (!qword_1EE423E58)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8DA0, &type metadata for TransposeOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E58);
  }
  return result;
}

unint64_t sub_19C536C94(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536CB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536CB8()
{
  unint64_t result;

  result = qword_1EE423E60;
  if (!qword_1EE423E60)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8E4C, &type metadata for ReshapeOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E60);
  }
  return result;
}

unint64_t sub_19C536CFC(uint64_t a1)
{
  unint64_t result;

  result = sub_19C536D20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C536D20()
{
  unint64_t result;

  result = qword_1EE424090;
  if (!qword_1EE424090)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8EF8, &type metadata for CastOperator);
    atomic_store(result, (unint64_t *)&qword_1EE424090);
  }
  return result;
}

void *sub_19C536D64(void *result, uint64_t a2)
{
  uint64_t *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1A1AD4A9C](0);
    goto LABEL_4;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(a2 + 32);
LABEL_4:
    v5 = v4;
    sub_19C524A44(v2[4]);
    sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
    v6 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    sub_19C524A44(v2[5]);
    v7 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    sub_19C524A44(v2[6]);
    v8 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_19CAA98F0();
    v10 = objc_msgSend(v3, sel_sliceTensor_starts_ends_strides_name_, v5, v6, v7, v8, v9);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v11 + 32) = v10;
    v12 = v11;
    sub_19CAA9A10();
    return (void *)v12;
  }
  __break(1u);
  return result;
}

void *sub_19C536EE0(void *result, uint64_t a2)
{
  void *v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v7 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    v8 = (id)MEMORY[0x1A1AD4A9C](1, a2);
    v9 = (id)MEMORY[0x1A1AD4A9C](2, a2);
    goto LABEL_6;
  }
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 3)
  {
    v5 = *(void **)(a2 + 40);
    v6 = *(void **)(a2 + 48);
    v7 = *(id *)(a2 + 32);
    v8 = v5;
    v9 = v6;
LABEL_6:
    v10 = v9;
    v11 = (void *)sub_19CAA98F0();
    v12 = objc_msgSend(v3, sel_selectWithPredicateTensor_truePredicateTensor_falsePredicateTensor_name_, v7, v8, v10, v11);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v13 + 32) = v12;
    v14 = v13;
    sub_19CAA9A10();
    return (void *)v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_19C53702C(void *result, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;

  v8 = result;
  if ((a4 & 1) == 0)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v16 = (id)MEMORY[0x1A1AD4A9C](0, a2);
LABEL_6:
      v9 = v16;
      v10 = (void *)sub_19CAA98F0();
      v11 = objc_msgSend(v8, sel_splitTensor_numSplits_axis_name_, v9, a3, a5, v10);
LABEL_11:

      sub_19C535F80(0, &qword_1EE423E68);
      v15 = sub_19CAA99F8();

      return (void *)v15;
    }
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *(id *)(a2 + 32);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_13;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v13 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    goto LABEL_10;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(void **)(a2 + 32);
    sub_19C50E9CC(a3, 1);
    v13 = v12;
LABEL_10:
    v14 = v13;
    sub_19C524A44(a3);
    sub_19C50E9E8(a3, 1);
    sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
    v9 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_19CAA98F0();
    v11 = objc_msgSend(v8, sel_splitTensor_splitSizes_axis_name_, v14, v9, a5, v10);

    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t sub_19C537200(uint64_t a1)
{
  unint64_t result;

  result = sub_19C537224();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C537224()
{
  unint64_t result;

  result = qword_1EE423E70;
  if (!qword_1EE423E70)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE97B4, &type metadata for MatrixMultiplicationOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E70);
  }
  return result;
}

void *sub_19C537268(void *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;

  v3 = v2;
  v5 = result;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1A1AD4A9C](0, a2);
    v9 = (id)MEMORY[0x1A1AD4A9C](1, a2);
    goto LABEL_5;
  }
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v7 = *(void **)(a2 + 40);
  v8 = *(id *)(a2 + 32);
  v9 = v7;
LABEL_5:
  v10 = v9;
  if ((*(_BYTE *)v3 & 1) != 0)
  {
    v11 = v8;
    sub_19CAA9F2C();
    v13 = *(_QWORD *)(v3 + 24);
    v12 = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    v14 = (void *)sub_19CAA98F0();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v5, sel_transposeTensor_dimension_withDimension_name_, v11, -1, -2, v14, v13, v12);

  }
  if ((*(_BYTE *)(v3 + 1) & 1) != 0)
  {
    v15 = v10;
    sub_19CAA9F2C();
    v17 = *(_QWORD *)(v3 + 24);
    v16 = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    v18 = (void *)sub_19CAA98F0();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v5, sel_transposeTensor_dimension_withDimension_name_, v15, -1, -2, v18, v17, v16);

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_19CAEA690;
  v20 = v8;
  v21 = v10;
  v22 = (void *)sub_19CAA98F0();
  v23 = objc_msgSend(v5, sel_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_, v20, v21, v22);

  *(_QWORD *)(v19 + 32) = v23;
  sub_19CAA9A10();

  return (void *)v19;
}

unint64_t sub_19C537534(uint64_t a1)
{
  unint64_t result;

  result = sub_19C537558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C537558()
{
  unint64_t result;

  result = qword_1EE4240B0;
  if (!qword_1EE4240B0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9504, &type metadata for UnaryFloatingPointArithmeticOperator);
    atomic_store(result, (unint64_t *)&qword_1EE4240B0);
  }
  return result;
}

unint64_t sub_19C53759C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C5375C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C5375C0()
{
  unint64_t result;

  result = qword_1EE423E78;
  if (!qword_1EE423E78)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE95B0, &type metadata for UnaryArithmeticOperator);
    atomic_store(result, (unint64_t *)&qword_1EE423E78);
  }
  return result;
}

void sub_19C537604(uint64_t a1, uint64_t a2, char a3)
{
  id v4;

  if ((a2 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1A1AD4A9C](0);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x19C5377B4);
    }
    v4 = *(id *)(a2 + 32);
  }
  __asm { BR              X10 }
}

void sub_19C5377CC(uint64_t a1, uint64_t a2, char a3)
{
  id v4;

  if ((a2 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1A1AD4A9C](0);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x19C537B20);
    }
    v4 = *(id *)(a2 + 32);
  }
  __asm { BR              X10 }
}

unint64_t sub_19C537B6C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C537B90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19C537B90()
{
  unint64_t result;

  result = qword_1EE423E80[0];
  if (!qword_1EE423E80[0])
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE8840, &type metadata for ResizeOperator);
    atomic_store(result, qword_1EE423E80);
  }
  return result;
}

void *sub_19C537BD4(void *result, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  int v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _BOOL8 v9;
  char v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = result;
  v4 = *(unsigned __int8 *)(v2 + 32);
  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1A1AD4A9C](0);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v5 = *(id *)(a2 + 32);
  }
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19CAEB400;
  *(_QWORD *)(v7 + 32) = sub_19CAA9BB4();
  *(_QWORD *)(v7 + 40) = sub_19CAA9BB4();
  sub_19CAA9A10();
  sub_19C4E8EF8();
  v8 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v9 = v4 != 2;
  if (v4 == 2)
    v10 = 0;
  else
    v10 = v4 & 1;
  v11 = (void *)sub_19CAA98F0();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v3, sel_resizeTensor_size_mode_centerResult_alignCorners_layout_name_, v6, v8, v9, 1, v10 & 1, 0, v11);

  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_19CAEA690;
  *(_QWORD *)(v13 + 32) = v12;
  v14 = v13;
  sub_19CAA9A10();
  return (void *)v14;
}

uint64_t sub_19C537DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int64_t v5;
  int64_t v6;
  uint64_t result;

  a3[3] = &type metadata for UnaryLogicalOperator;
  a3[4] = sub_19C5360AC();
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    sub_19C5570D4(0, v5, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a3[5] = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    sub_19C5570D4(0, v6, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a3[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C538060@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  char v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t result;

  v13 = a1 & 1;
  a7[3] = (uint64_t)&type metadata for ReductionLogicalOperator;
  a7[4] = sub_19C535FDC();
  v14 = swift_allocObject();
  *a7 = v14;
  *(_BYTE *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = *(_QWORD *)(a5 + 16);
  if (v15)
  {
    sub_19C5570D4(0, v15, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a7[5] = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a6 + 16);
  if (v16)
  {
    sub_19C5570D4(0, v16, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a7[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C538334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  __int128 v9;
  int64_t v10;
  int64_t v11;
  uint64_t result;

  a4[3] = (uint64_t)&type metadata for CastOperator;
  a4[4] = sub_19C536D20();
  v8 = swift_allocObject();
  *a4 = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_WORD *)(v8 + 48) = *(_WORD *)(a1 + 32);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a4[5] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a4[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C538600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  _QWORD *v14;
  int64_t v15;
  int64_t v16;
  uint64_t result;

  a7[3] = &type metadata for SelectOperator;
  a7[4] = sub_19C536B80();
  v14 = (_QWORD *)swift_allocObject();
  *a7 = v14;
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v15 = *(_QWORD *)(a5 + 16);
  if (v15)
  {
    sub_19C5570D4(0, v15, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a7[5] = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a6 + 16);
  if (v16)
  {
    sub_19C5570D4(0, v16, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a7[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C5388D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  __int128 v9;
  int64_t v10;
  int64_t v11;
  uint64_t result;

  a4[3] = (uint64_t)&type metadata for ResizeOperator;
  a4[4] = sub_19C537B90();
  v8 = swift_allocObject();
  *a4 = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(a1 + 32);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a4[5] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a4[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C538B9C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int64_t v10;
  int64_t v11;
  uint64_t result;

  *(_QWORD *)(a5 + 24) = &type metadata for ActivationOperator;
  *(_QWORD *)(a5 + 32) = sub_19C532D30();
  *(_QWORD *)a5 = a1;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 40) = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a4 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 48) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C538E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  __int128 v11;
  int64_t v12;
  int64_t v13;
  uint64_t result;

  a6[3] = a4;
  a6[4] = a5();
  v10 = swift_allocObject();
  *a6 = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 48) = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    sub_19C5570D4(0, v12, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a6[5] = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    sub_19C5570D4(0, v13, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a6[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C539114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  char v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t result;

  v13 = a3 & 1;
  a7[3] = (uint64_t)&type metadata for CumulativeOperator;
  a7[4] = sub_19C532784();
  v14 = swift_allocObject();
  *a7 = v14;
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = *(_QWORD *)(a5 + 16);
  if (v15)
  {
    sub_19C5570D4(0, v15, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a7[5] = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a6 + 16);
  if (v16)
  {
    sub_19C5570D4(0, v16, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a7[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C5393E8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, _QWORD *a6@<X8>)
{
  _OWORD *v10;
  __int128 v11;
  int64_t v12;
  int64_t v13;
  uint64_t result;

  a6[3] = a4;
  a6[4] = a5();
  v10 = (_OWORD *)swift_allocObject();
  *a6 = v10;
  v11 = a1[1];
  v10[1] = *a1;
  v10[2] = v11;
  v10[3] = a1[2];
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    sub_19C5570D4(0, v12, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a6[5] = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    sub_19C5570D4(0, v13, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a6[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C5396AC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _OWORD *v8;
  __int128 v9;
  int64_t v10;
  int64_t v11;
  uint64_t result;

  a4[3] = &type metadata for ArgumentSortOperator;
  a4[4] = sub_19C53264C();
  v8 = (_OWORD *)swift_allocObject();
  *a4 = v8;
  v9 = a1[1];
  v8[1] = *a1;
  v8[2] = v9;
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)a1 + 25);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a4[5] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a4[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C539978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int64_t v12;
  int64_t v13;
  uint64_t result;

  *(_QWORD *)(a6 + 24) = &type metadata for GatherOperator;
  *(_QWORD *)(a6 + 32) = sub_19C530FE8();
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3 & 1;
  v12 = *(_QWORD *)(a4 + 16);
  if (v12)
  {
    sub_19C5570D4(0, v12, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 40) = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a5 + 16);
  if (v13)
  {
    sub_19C5570D4(0, v13, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 48) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C539C30@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int64_t v10;
  int64_t v11;
  uint64_t result;

  *(_QWORD *)(a5 + 24) = &type metadata for ScatterOperator;
  *(_QWORD *)(a5 + 32) = sub_19C530F80();
  *(_QWORD *)a5 = a1;
  *(_BYTE *)(a5 + 8) = a2;
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 40) = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a4 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 48) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C539EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  __int128 v11;
  int64_t v12;
  int64_t v13;
  uint64_t result;

  a6[3] = a4;
  a6[4] = a5();
  v10 = swift_allocObject();
  *a6 = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v10 + 64) = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    sub_19C5570D4(0, v12, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a6[5] = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    sub_19C5570D4(0, v13, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a6[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C53A1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t result;

  a7[3] = (uint64_t)&type metadata for ReductionOperator;
  a7[4] = sub_19C53652C();
  v14 = swift_allocObject();
  *a7 = v14;
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_BYTE *)(v14 + 40) = a4;
  v15 = *(_QWORD *)(a5 + 16);
  if (v15)
  {
    sub_19C5570D4(0, v15, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a7[5] = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a6 + 16);
  if (v16)
  {
    sub_19C5570D4(0, v16, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a7[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C53A480@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  int64_t v10;
  int64_t v11;
  uint64_t result;

  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5();
  *(_BYTE *)a6 = a1;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 40) = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 48) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C53A720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  int64_t v11;
  int64_t v12;
  uint64_t result;
  __int128 v14;
  __int128 v15;

  a4[3] = (uint64_t)&type metadata for MatrixMultiplicationOperator;
  a4[4] = sub_19C537224();
  v8 = swift_allocObject();
  *a4 = v8;
  v9 = *(_OWORD *)(a1 + 8);
  v14 = *(_OWORD *)(a1 + 24);
  v15 = v9;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    sub_19C551C5C((uint64_t)&v15);
    sub_19C551C5C((uint64_t)&v14);
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  sub_19C551C5C((uint64_t)&v15);
  sub_19C551C5C((uint64_t)&v14);
  swift_bridgeObjectRelease();
  a4[5] = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    sub_19C5570D4(0, v12, 0);
    __asm { BR              X9 }
  }
  sub_19C551C84((uint64_t)&v15);
  sub_19C551C84((uint64_t)&v14);
  result = swift_bridgeObjectRelease();
  a4[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C53AA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  __int128 v9;
  int64_t v10;
  int64_t v11;
  uint64_t result;

  a4[3] = (uint64_t)&type metadata for ConvolutionOperator;
  a4[4] = sub_19C532FE4();
  v8 = swift_allocObject();
  *a4 = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  a4[5] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  result = swift_bridgeObjectRelease();
  a4[6] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_19C53AD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  __int128 v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;

  a4[3] = (uint64_t)&type metadata for StatelessRandomOperator;
  a4[4] = sub_19C53134C();
  v8 = swift_allocObject();
  *a4 = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_19C532288(a1);
    sub_19C5570D4(0, v10, 0);
    __asm { BR              X9 }
  }
  sub_19C532288(a1);
  swift_bridgeObjectRelease();
  a4[5] = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    sub_19C5570D4(0, v11, 0);
    __asm { BR              X9 }
  }
  sub_19C552088(a1);
  v12 = MEMORY[0x1E0DEE9D8];
  result = swift_bridgeObjectRelease();
  a4[6] = v12;
  return result;
}

unint64_t sub_19C53AFEC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  void *v15;
  char v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424130);
  v2 = sub_19CAAA10C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19C552104(v6, (uint64_t)&v15, (uint64_t *)&unk_1EE424140);
    v7 = v15;
    v8 = v16;
    result = sub_19C54B840(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = v3[6] + 16 * result;
    *(_QWORD *)v11 = v7;
    *(_BYTE *)(v11 + 8) = v8;
    result = sub_19C4F0F68(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19C53B134(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423F50);
  v2 = (_QWORD *)sub_19CAAA10C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19C552104(v4, (uint64_t)v14, &qword_1EE424128);
    result = sub_19C54B8C0(v14);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 56 * result;
    v8 = v14[0];
    v9 = v14[1];
    v10 = v14[2];
    *(_QWORD *)(v7 + 48) = v15;
    *(_OWORD *)(v7 + 16) = v9;
    *(_OWORD *)(v7 + 32) = v10;
    *(_OWORD *)v7 = v8;
    *(_QWORD *)(v2[7] + 8 * result) = v16;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_19C53B264(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4240D0);
  v2 = sub_19CAAA10C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_19C552104(v6, (uint64_t)&v13, &qword_1EE4240D8);
    v7 = v13;
    result = sub_19C54BAB8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_19C4D8970(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_19C53B390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(id, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD aBlock[6];
  uint64_t v53;

  v48 = objc_msgSend((id)objc_opt_self(), sel_commandBufferFromCommandQueue_, *(_QWORD *)(a1 + 32));
  aBlock[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v5 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v46 = a2;
  if (v5)
    __asm { BR              X9 }
  v6 = swift_bridgeObjectRetain();
  v7 = sub_19C4D4894(v6);
  swift_bridgeObjectRelease_n();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = sub_19C535F80(0, &qword_1EE423F18);
    v10 = (uint64_t *)(v7 + 40);
    do
    {
      v11 = *v10;
      ObjectType = swift_getObjectType();
      v13 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v11 + 64);
      swift_unknownObjectRetain();
      v13(v48, v9, ObjectType, v11);
      swift_unknownObjectRelease();
      v10 += 2;
      --v8;
    }
    while (v8);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423F20);
  sub_19CAA9818();
  aBlock[0] = MEMORY[0x1E0DEE9E0];
  v14 = *(_QWORD *)(a3 + 16);
  sub_19CAA9818();
  v15 = aBlock[0];
  if (v14)
  {
    v16 = 0;
    v50 = v49[4];
    do
    {
      if ((v50 & 0xC000000000000001) != 0)
      {
        v18 = (id)MEMORY[0x1A1AD4A9C](v16, v50);
      }
      else
      {
        if (v16 >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_34;
        v18 = *(id *)(v50 + 8 * v16 + 32);
      }
      v19 = v18;
      v20 = *(_QWORD *)(a3 + 32 + 8 * v16);
      swift_retain();
      v21 = v19;
      sub_19C59F9F0(a1, 0, v20);
      v23 = v22;
      if ((v15 & 0xC000000000000001) != 0)
      {
        if (v15 >= 0)
          v15 &= 0xFFFFFFFFFFFFFF8uLL;
        v24 = sub_19CAAA094();
        if (__OFADD__(v24, 1))
          goto LABEL_32;
        v15 = sub_19C55088C(v15, v24 + 1);
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = v15;
      v27 = sub_19C54BA6C((uint64_t)v21);
      v28 = *(_QWORD *)(v15 + 16);
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
        __break(1u);
LABEL_32:
        __break(1u);
        __break(1u);
LABEL_33:
        __break(1u);
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x19C53BD8CLL);
      }
      v31 = v26;
      if (*(_QWORD *)(v15 + 24) >= v30)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_19C54FC64(&qword_1EE423F48);
      }
      else
      {
        sub_19C54D83C(v30, isUniquelyReferenced_nonNull_native, &qword_1EE423F48);
        v32 = sub_19C54BA6C((uint64_t)v21);
        if ((v31 & 1) != (v33 & 1))
        {
          sub_19C535F80(0, &qword_1EE423E68);
          sub_19CAAA244();
          __break(1u);
          JUMPOUT(0x19C53BDB4);
        }
        v27 = v32;
      }
      v15 = v53;
      if ((v31 & 1) != 0)
      {
        v17 = *(_QWORD *)(v53 + 56);

        *(_QWORD *)(v17 + 8 * v27) = v23;
      }
      else
      {
        *(_QWORD *)(v53 + 8 * (v27 >> 6) + 64) |= 1 << v27;
        *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v27) = v21;
        *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27) = v23;
        v34 = *(_QWORD *)(v15 + 16);
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_33;
        *(_QWORD *)(v15 + 16) = v36;
        v37 = v21;
      }
      ++v16;
      swift_release();

      swift_bridgeObjectRelease();
    }
    while (v14 != v16);
  }
  v38 = (void *)v49[2];
  sub_19C535F80(0, &qword_1EE423E68);
  sub_19C535F80(0, &qword_1EE423F30);
  sub_19C551BA8();
  v39 = (void *)sub_19CAA97F4();
  swift_bridgeObjectRelease();
  v40 = (void *)sub_19CAA97F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v38, sel_encodeToCommandBuffer_feeds_targetOperations_resultsDictionary_executionDescriptor_, v48, v39, 0, v40, v49[7]);

  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v46;
  *(_QWORD *)(v41 + 24) = a3;
  aBlock[4] = sub_19C551C2C;
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19C54B5E8;
  aBlock[3] = &block_descriptor_3;
  v42 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v48, sel_addCompletedHandler_, v42);
  _Block_release(v42);
  if (a4)
  {
    v43 = *(_QWORD *)(a4 + 16);
    swift_unownedRetainStrong();
    v44 = *(_QWORD *)(v43 + 32);
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v48, sel_encodeSignalEvent_value_, v44, *(_QWORD *)(a4 + 24));
    swift_unknownObjectRelease();
  }
  objc_msgSend(v48, sel_commit, a4);

}

uint64_t sub_19C53BDD4()
{
  uint64_t v0;

  sub_19C530C84(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalComputeStream()
{
  return objc_opt_self();
}

void sub_19C53BE34(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
  sub_19C53BE58(a1, a2 & 0x1FF, a3);
}

void sub_19C53BE58(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  os_unfair_lock_s *v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  void (*v23)(char *, char *);
  void *v24;

  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a1 + 32);
    v11 = 1;
    while (1)
    {
      v12 = *v10++;
      v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
        break;
      v11 = v13;
      if (!--v9)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v13 = 1;
LABEL_7:
    if (a2 > 0xAu)
      v14 = 8;
    else
      v14 = qword_19CAEB578[(char)a2];
    v5 = v13 * v14;
    if ((unsigned __int128)(v13 * (__int128)v14) >> 64 == (v13 * v14) >> 63)
    {
      v23 = a3;
      v6 = v3[2];
      v3 = (_QWORD *)MEMORY[0x1A1AD6338]();
      if (qword_1EE422E90 == -1)
        goto LABEL_12;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  swift_once();
LABEL_12:
  v15 = (_QWORD *)((char *)off_1EE423CB0 + 16);
  v16 = (os_unfair_lock_s *)((char *)off_1EE423CB0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1EE423CB0 + 6);
  sub_19C52C540(v15, v6, a1, a2 & 0x1FF, 0, 1, (uint64_t *)&v24);
  if (v4)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v16);
    v17 = v24;
    objc_autoreleasePoolPop(v3);
    v18 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    v19 = v17;
    v23(v18, &v18[v5]);
    type metadata accessor for MetalBufferStorage();
    v20 = swift_allocObject();
    *(_BYTE *)(v20 + 48) = a2;
    *(_BYTE *)(v20 + 49) = HIBYTE(a2) & 1;
    *(_QWORD *)(v20 + 32) = 0;
    *(_QWORD *)(v20 + 40) = a1;
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = 0;
    v21 = qword_1EE422E48;
    swift_bridgeObjectRetain();
    if (v21 != -1)
      swift_once();
    if (byte_1EE4317CB)
      v22 = sub_19C541310;
    else
      v22 = 0;
    *(_QWORD *)(v20 + 56) = v22;
    *(_QWORD *)(v20 + 64) = 0;
  }
}

uint64_t sub_19C53C088(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C54027C(a1, a2, a3, (uint64_t)&type metadata for UnaryArithmeticOperator, (uint64_t (*)(void))sub_19C5375C0, (uint64_t (*)(id, uint64_t, _QWORD))sub_19C537604);
}

uint64_t sub_19C53C0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  id v23;
  uint64_t v24;
  unint64_t v25;

  v3 = v2;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v6 + 40);
  v8 = (os_unfair_lock_s *)(v7 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  v10 = *(_QWORD *)(v7 + 16);
  v9 = (uint64_t *)(v7 + 16);
  if (*(_QWORD *)(v10 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v11 = (_QWORD *)*v9;
    v12 = *(_QWORD *)(*v9 + 24);
    v13 = __OFSUB__(v12, 1);
    v14 = v12 - 1;
    if (v13)
    {
      __break(1u);
      goto LABEL_12;
    }
    v15 = v11[4] + v14;
    v16 = v11[2];
    if (v15 < v16)
      v16 = 0;
    v17 = (_QWORD *)v11[v15 - v16 + 5];
    v11[3] = v14;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v18 = swift_retain();
    v17 = sub_19C53424C(v18);
  }
  os_unfair_lock_unlock(v8);
  if (v17)
  {
    v19 = v17[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
    sub_19C5346A0((uint64_t *)(v19 + 16), (uint64_t)v17, &v24);
    os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
    v20 = v24;
    swift_release();
    v21 = sub_19C541394(v20, a2, v3, a1);
    swift_release();
    os_unfair_lock_lock(v8);
    sub_19C534120(v9, (uint64_t)v17);
    os_unfair_lock_unlock(v8);
    swift_release_n();
    return v21;
  }
LABEL_12:
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v23 = objc_msgSend(*(id *)(v6 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53C404(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v12 = *(_QWORD *)(v6 + 16);
  v13 = *(_QWORD *)(v12 + 40);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v16 = *(_QWORD *)(v13 + 16);
  v15 = (uint64_t *)(v13 + 16);
  v33 = a2;
  v34 = v6;
  if (*(_QWORD *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v17 = (_QWORD *)*v15;
    v18 = *(_QWORD *)(*v15 + 24);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    v21 = v17[4] + v20;
    v22 = v17[2];
    if (v21 < v22)
      v22 = 0;
    v23 = (_QWORD *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v24 = swift_retain();
    v23 = sub_19C53424C(v24);
  }
  v25 = a3;
  v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19C5346A0((uint64_t *)(v27 + 16), (uint64_t)v23, &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    v28 = v35;
    swift_release();
    v29 = sub_19C541AF8(v28, a6, v34, a1 & 1, v33, v25, a4, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19C534120(v15, (uint64_t)v23);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53C798(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = *a1;
  v29 = a1[1];
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C542220(v23, a3, v4, (uint64_t)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53CB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = v3;
  v31 = *(_QWORD *)a1;
  v8 = *(_OWORD *)(a1 + 8);
  v29 = *(_OWORD *)(a1 + 24);
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C4EA73C((uint64_t)&v31);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C542B24(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C4CF9C0((uint64_t)&v31);
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53CE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v12 = *(_QWORD *)(v6 + 16);
  v13 = *(_QWORD *)(v12 + 40);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v16 = *(_QWORD *)(v13 + 16);
  v15 = (uint64_t *)(v13 + 16);
  v33 = v6;
  v34 = a3;
  if (*(_QWORD *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v17 = (_QWORD *)*v15;
    v18 = *(_QWORD *)(*v15 + 24);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    v21 = v17[4] + v20;
    v22 = v17[2];
    if (v21 < v22)
      v22 = 0;
    v23 = (_QWORD *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v24 = swift_retain();
    v23 = sub_19C53424C(v24);
  }
  v25 = a6;
  v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19C5346A0((uint64_t *)(v27 + 16), (uint64_t)v23, &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    v28 = v35;
    swift_release();
    v29 = sub_19C543304(v28, v25, v33, a1, a2, v34, a4, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19C534120(v15, (uint64_t)v23);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53D228(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = *a1;
  v29 = a1[1];
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C543A10(v23, a3, v4, (uint64_t)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53D59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[16];

  v4 = v3;
  sub_19C50E8D4((uint64_t *)a1, (uint64_t)v31);
  v8 = *(_OWORD *)(a1 + 24);
  v29 = *(_OWORD *)(a1 + 40);
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551DFC((uint64_t)v31);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C5441A0(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551E28((uint64_t)v31);
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53D92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  unint64_t v27;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v8 + 40);
  v10 = (os_unfair_lock_s *)(v9 + 24);
  sub_19C551C5C(a1);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  v12 = *(_QWORD *)(v9 + 16);
  v11 = (uint64_t *)(v9 + 16);
  if (*(_QWORD *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v13 = (_QWORD *)*v11;
    v14 = *(_QWORD *)(*v11 + 24);
    v15 = __OFSUB__(v14, 1);
    v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    v17 = v13[4] + v16;
    v18 = v13[2];
    if (v17 < v18)
      v18 = 0;
    v19 = (_QWORD *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v20 = swift_retain();
    v19 = sub_19C53424C(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19C5346A0((uint64_t *)(v21 + 16), (uint64_t)v19, &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    v22 = v26;
    swift_release();
    v23 = sub_19C5448D0(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19C534120(v11, (uint64_t)v19);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    sub_19C551C84(a1);
    return v23;
  }
LABEL_12:
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53DC84(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v5 = v4;
  v10 = *(_QWORD *)(v4 + 16);
  v11 = *(_QWORD *)(v10 + 40);
  v12 = (os_unfair_lock_s *)(v11 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  v14 = *(_QWORD *)(v11 + 16);
  v13 = (uint64_t *)(v11 + 16);
  v29 = a1;
  if (*(_QWORD *)(v14 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v15 = (_QWORD *)*v13;
    v16 = *(_QWORD *)(*v13 + 24);
    v17 = __OFSUB__(v16, 1);
    v18 = v16 - 1;
    if (v17)
    {
      __break(1u);
      goto LABEL_12;
    }
    v19 = v15[4] + v18;
    v20 = v15[2];
    if (v19 < v20)
      v20 = 0;
    v21 = (_QWORD *)v15[v19 - v20 + 5];
    v15[3] = v18;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v22 = swift_retain();
    v21 = sub_19C53424C(v22);
  }
  v23 = a3;
  os_unfair_lock_unlock(v12);
  if (v21)
  {
    v24 = v21[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
    sub_19C5346A0((uint64_t *)(v24 + 16), (uint64_t)v21, &v30);
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
    v25 = v30;
    swift_release();
    v26 = sub_19C544FD4(v25, a4, v5, v29, a2 & 1, v23);
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C534120(v13, (uint64_t)v21);
    os_unfair_lock_unlock(v12);
    swift_release_n();
    return v26;
  }
LABEL_12:
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v28 = objc_msgSend(*(id *)(v10 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53DFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, SEL *a7)
{
  uint64_t v7;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  SEL *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v44 = *(_QWORD *)a1;
  v14 = *(_OWORD *)(a1 + 8);
  v42 = *(_OWORD *)(a1 + 24);
  v43 = v14;
  v15 = *(_QWORD *)(v7 + 16);
  v16 = *(_QWORD *)(v15 + 40);
  v17 = (os_unfair_lock_s *)(v16 + 24);
  sub_19C4EA73C((uint64_t)&v44);
  sub_19C551C5C((uint64_t)&v43);
  sub_19C551C5C((uint64_t)&v42);
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
  v19 = *(_QWORD *)(v16 + 16);
  v18 = (uint64_t *)(v16 + 16);
  v38 = a2;
  v39 = a4;
  if (*(_QWORD *)(v19 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v20 = (_QWORD *)*v18;
    v21 = *(_QWORD *)(*v18 + 24);
    v22 = __OFSUB__(v21, 1);
    v23 = v21 - 1;
    if (v22)
    {
      __break(1u);
      goto LABEL_12;
    }
    v24 = a7;
    v25 = v20[4] + v23;
    v26 = v20[2];
    if (v25 < v26)
      v26 = 0;
    v27 = (_QWORD *)v20[v25 - v26 + 5];
    v20[3] = v23;
  }
  else
  {
    v24 = a7;
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v28 = swift_retain();
    v27 = sub_19C53424C(v28);
  }
  v29 = a5;
  v30 = a6;
  os_unfair_lock_unlock(v17);
  if (v27)
  {
    v31 = v27[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v31 + 24));
    sub_19C5346A0((uint64_t *)(v31 + 16), (uint64_t)v27, &v40);
    os_unfair_lock_unlock((os_unfair_lock_t)(v31 + 24));
    v32 = v40;
    swift_release();
    v33 = sub_19C545DC4(v32, a3, v37, a1, v38, v39, v29, v30, v24);
    swift_release();
    os_unfair_lock_lock(v17);
    sub_19C534120(v18, (uint64_t)v27);
    os_unfair_lock_unlock(v17);
    swift_release_n();
    sub_19C4CF9C0((uint64_t)&v44);
    sub_19C551C84((uint64_t)&v43);
    sub_19C551C84((uint64_t)&v42);
    return v33;
  }
LABEL_12:
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v35 = objc_msgSend(*(id *)(v15 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53E39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = *(_OWORD *)(a1 + 16);
  v29 = *(_OWORD *)(a1 + 32);
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C5465A8(v23, a3, v4, (uint64_t *)a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53E710(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v12 = *(_QWORD *)(v6 + 16);
  v13 = *(_QWORD *)(v12 + 40);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v16 = *(_QWORD *)(v13 + 16);
  v15 = (uint64_t *)(v13 + 16);
  v33 = a6;
  v34 = v6;
  if (*(_QWORD *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v17 = (_QWORD *)*v15;
    v18 = *(_QWORD *)(*v15 + 24);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    v21 = v17[4] + v20;
    v22 = v17[2];
    if (v21 < v22)
      v22 = 0;
    v23 = (_QWORD *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v24 = swift_retain();
    v23 = sub_19C53424C(v24);
  }
  v25 = a4;
  v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19C5346A0((uint64_t *)(v27 + 16), (uint64_t)v23, &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    v28 = v35;
    swift_release();
    v29 = sub_19C546D44(v28, v33, v34, a1, a2, a3 & 1, v25, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19C534120(v15, (uint64_t)v23);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53EA90(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = *a1;
  v29 = a1[1];
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C54745C(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53EE04(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  unint64_t v27;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v8 + 40);
  v10 = (os_unfair_lock_s *)(v9 + 24);
  sub_19C551CD8((uint64_t)a1);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  v12 = *(_QWORD *)(v9 + 16);
  v11 = (uint64_t *)(v9 + 16);
  if (*(_QWORD *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v13 = (_QWORD *)*v11;
    v14 = *(_QWORD *)(*v11 + 24);
    v15 = __OFSUB__(v14, 1);
    v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    v17 = v13[4] + v16;
    v18 = v13[2];
    if (v17 < v18)
      v18 = 0;
    v19 = (_QWORD *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v20 = swift_retain();
    v19 = sub_19C53424C(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19C5346A0((uint64_t *)(v21 + 16), (uint64_t)v19, &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    v22 = v26;
    swift_release();
    v23 = sub_19C547BF4(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19C534120(v11, (uint64_t)v19);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    sub_19C551D20((uint64_t)a1);
    return v23;
  }
LABEL_12:
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53F15C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = *(_OWORD *)a1;
  v29 = *((_OWORD *)a1 + 1);
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C548310(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53F4D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v6 = v5;
  v12 = *(_QWORD *)(v5 + 16);
  v13 = *(_QWORD *)(v12 + 40);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v16 = *(_QWORD *)(v13 + 16);
  v15 = (uint64_t *)(v13 + 16);
  v32 = a1;
  v33 = a5;
  if (*(_QWORD *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v17 = (_QWORD *)*v15;
    v18 = *(_QWORD *)(*v15 + 24);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    v21 = v17[4] + v20;
    v22 = v17[2];
    if (v21 < v22)
      v22 = 0;
    v23 = (_QWORD *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v24 = swift_retain();
    v23 = sub_19C53424C(v24);
  }
  v25 = a2;
  v26 = a4;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19C5346A0((uint64_t *)(v27 + 16), (uint64_t)v23, &v34);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    v28 = v34;
    swift_release();
    v29 = sub_19C548A9C(v28, v33, v6, v32, v25, a3 & 1, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19C534120(v15, (uint64_t)v23);
    os_unfair_lock_unlock(v14);
    swift_release_n();
    return v29;
  }
LABEL_12:
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53F838(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v5 = v4;
  v10 = *(_QWORD *)(v4 + 16);
  v11 = *(_QWORD *)(v10 + 40);
  v12 = (os_unfair_lock_s *)(v11 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  v14 = *(_QWORD *)(v11 + 16);
  v13 = (uint64_t *)(v11 + 16);
  v29 = a1;
  if (*(_QWORD *)(v14 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v15 = (_QWORD *)*v13;
    v16 = *(_QWORD *)(*v13 + 24);
    v17 = __OFSUB__(v16, 1);
    v18 = v16 - 1;
    if (v17)
    {
      __break(1u);
      goto LABEL_12;
    }
    v19 = v15[4] + v18;
    v20 = v15[2];
    if (v19 < v20)
      v20 = 0;
    v21 = (_QWORD *)v15[v19 - v20 + 5];
    v15[3] = v18;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v22 = swift_retain();
    v21 = sub_19C53424C(v22);
  }
  v23 = a3;
  os_unfair_lock_unlock(v12);
  if (v21)
  {
    v24 = v21[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
    sub_19C5346A0((uint64_t *)(v24 + 16), (uint64_t)v21, &v30);
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
    v25 = v30;
    swift_release();
    v26 = sub_19C549194(v25, a4, v5, v29, a2, v23);
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C534120(v13, (uint64_t)v21);
    os_unfair_lock_unlock(v12);
    swift_release_n();
    return v26;
  }
LABEL_12:
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v28 = objc_msgSend(*(id *)(v10 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53FB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  unint64_t v27;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v8 + 40);
  v10 = (os_unfair_lock_s *)(v9 + 24);
  sub_19C551E9C(a1);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  v12 = *(_QWORD *)(v9 + 16);
  v11 = (uint64_t *)(v9 + 16);
  if (*(_QWORD *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v13 = (_QWORD *)*v11;
    v14 = *(_QWORD *)(*v11 + 24);
    v15 = __OFSUB__(v14, 1);
    v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    v17 = v13[4] + v16;
    v18 = v13[2];
    if (v17 < v18)
      v18 = 0;
    v19 = (_QWORD *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v20 = swift_retain();
    v19 = sub_19C53424C(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19C5346A0((uint64_t *)(v21 + 16), (uint64_t)v19, &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    v22 = v26;
    swift_release();
    v23 = sub_19C549894(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19C534120(v11, (uint64_t)v19);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    sub_19C515110(a1);
    return v23;
  }
LABEL_12:
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C53FEEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;

  v12 = *(_QWORD *)(v6 + 16);
  v13 = *(_QWORD *)(v12 + 40);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v16 = *(_QWORD *)(v13 + 16);
  v15 = (uint64_t *)(v13 + 16);
  v34 = a4;
  v33 = v6;
  if (*(_QWORD *)(v16 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v17 = (_QWORD *)*v15;
    v18 = *(_QWORD *)(*v15 + 24);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_12;
    }
    v21 = v17[4] + v20;
    v22 = v17[2];
    if (v21 < v22)
      v22 = 0;
    v23 = (_QWORD *)v17[v21 - v22 + 5];
    v17[3] = v20;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v24 = swift_retain();
    v23 = sub_19C53424C(v24);
  }
  v25 = a6;
  v26 = a5;
  os_unfair_lock_unlock(v14);
  if (v23)
  {
    v27 = v23[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_19C5346A0((uint64_t *)(v27 + 16), (uint64_t)v23, &v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    v28 = v35;
    swift_release();
    v29 = sub_19C549FAC(v28, v25, v33, a1, a2, a3, v34, v26);
    swift_release();
    os_unfair_lock_lock(v14);
    sub_19C534120(v15, (uint64_t)v23);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    return v29;
  }
LABEL_12:
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v31 = objc_msgSend(*(id *)(v12 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C54027C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(id, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t (*v27)(id, uint64_t, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  id v32;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v10 = v6;
  v13 = *(_QWORD *)(v6 + 16);
  v14 = *(_QWORD *)(v13 + 40);
  v15 = (os_unfair_lock_s *)(v14 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
  v17 = *(_QWORD *)(v14 + 16);
  v16 = (uint64_t *)(v14 + 16);
  v35 = a2;
  v34 = a1;
  if (*(_QWORD *)(v17 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v18 = (_QWORD *)*v16;
    v19 = *(_QWORD *)(*v16 + 24);
    v20 = __OFSUB__(v19, 1);
    v21 = v19 - 1;
    if (v20)
    {
      __break(1u);
      goto LABEL_12;
    }
    v22 = v18[4] + v21;
    v23 = v18[2];
    if (v22 < v23)
      v23 = 0;
    v24 = (_QWORD *)v18[v22 - v23 + 5];
    v18[3] = v21;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v25 = swift_retain();
    v24 = sub_19C53424C(v25);
  }
  v26 = a5;
  v27 = a6;
  os_unfair_lock_unlock(v15);
  if (v24)
  {
    v28 = v24[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v28 + 24));
    sub_19C5346A0((uint64_t *)(v28 + 16), (uint64_t)v24, &v36);
    os_unfair_lock_unlock((os_unfair_lock_t)(v28 + 24));
    v29 = v36;
    swift_release();
    v30 = sub_19C5456B8(v29, a3, v10, v34, v35, a4, v26, v27);
    swift_release();
    os_unfair_lock_lock(v15);
    sub_19C534120(v16, (uint64_t)v24);
    os_unfair_lock_unlock(v15);
    swift_release_n();
    return v30;
  }
LABEL_12:
  v36 = 0;
  v37 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v32 = objc_msgSend(*(id *)(v13 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5405F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;

  v4 = v3;
  v8 = *(_OWORD *)(a1 + 8);
  v29 = *(_OWORD *)(a1 + 24);
  v30 = v8;
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v9 + 40);
  v11 = (os_unfair_lock_s *)(v10 + 24);
  sub_19C551C5C((uint64_t)&v30);
  sub_19C551C5C((uint64_t)&v29);
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v13 = *(_QWORD *)(v10 + 16);
  v12 = (uint64_t *)(v10 + 16);
  if (*(_QWORD *)(v13 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v14 = (_QWORD *)*v12;
    v15 = *(_QWORD *)(*v12 + 24);
    v16 = __OFSUB__(v15, 1);
    v17 = v15 - 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_12;
    }
    v18 = v14[4] + v17;
    v19 = v14[2];
    if (v18 < v19)
      v19 = 0;
    v20 = (_QWORD *)v14[v18 - v19 + 5];
    v14[3] = v17;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v21 = swift_retain();
    v20 = sub_19C53424C(v21);
  }
  os_unfair_lock_unlock(v11);
  if (v20)
  {
    v22 = v20[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
    sub_19C5346A0((uint64_t *)(v22 + 16), (uint64_t)v20, &v27);
    os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
    v23 = v27;
    swift_release();
    v24 = sub_19C54A6B0(v23, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C534120(v12, (uint64_t)v20);
    os_unfair_lock_unlock(v11);
    swift_release_n();
    sub_19C551C84((uint64_t)&v30);
    sub_19C551C84((uint64_t)&v29);
    return v24;
  }
LABEL_12:
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v26 = objc_msgSend(*(id *)(v9 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C540968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  unint64_t v27;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v8 + 40);
  v10 = (os_unfair_lock_s *)(v9 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  v12 = *(_QWORD *)(v9 + 16);
  v11 = (uint64_t *)(v9 + 16);
  if (*(_QWORD *)(v12 + 24))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
    v13 = (_QWORD *)*v11;
    v14 = *(_QWORD *)(*v11 + 24);
    v15 = __OFSUB__(v14, 1);
    v16 = v14 - 1;
    if (v15)
    {
      __break(1u);
      goto LABEL_12;
    }
    v17 = v13[4] + v16;
    v18 = v13[2];
    if (v17 < v18)
      v18 = 0;
    v19 = (_QWORD *)v13[v17 - v18 + 5];
    v13[3] = v16;
  }
  else
  {
    type metadata accessor for MetalDevice.SharedEvent();
    swift_allocObject();
    v20 = swift_retain();
    v19 = sub_19C53424C(v20);
  }
  os_unfair_lock_unlock(v10);
  if (v19)
  {
    v21 = v19[7];
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_19C5346A0((uint64_t *)(v21 + 16), (uint64_t)v19, &v26);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    v22 = v26;
    swift_release();
    v23 = sub_19C54ADC4(v22, a3, v4, a1, a2);
    swift_release();
    os_unfair_lock_lock(v10);
    sub_19C534120(v11, (uint64_t)v19);
    os_unfair_lock_unlock(v10);
    swift_release_n();
    return v23;
  }
LABEL_12:
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  v25 = objc_msgSend(*(id *)(v8 + 24), sel_name);
  sub_19CAA98FC();

  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if (byte_1EE4317C9 == 1)
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C540CB4(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C54027C(a1, a2, a3, (uint64_t)&type metadata for UnaryFloatingPointArithmeticOperator, (uint64_t (*)(void))sub_19C537558, (uint64_t (*)(id, uint64_t, _QWORD))sub_19C5377CC);
}

uint64_t sub_19C540CEC(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C54027C(a1, a2, a3, (uint64_t)&type metadata for BinaryArithmeticOperator, (uint64_t (*)(void))sub_19C52BB8C, (uint64_t (*)(id, uint64_t, _QWORD))sub_19C52BBD0);
}

uint64_t sub_19C540D24(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C54027C(a1, a2, a3, (uint64_t)&type metadata for BinaryComparisonOperator, (uint64_t (*)(void))sub_19C552018, (uint64_t (*)(id, uint64_t, _QWORD))sub_19C552170);
}

uint64_t sub_19C540D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C5405F0(a1, a2, a3);
}

uint64_t sub_19C540D7C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53C798(a1, a2, a3);
}

uint64_t sub_19C540D9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_19C53FEEC(a1, a2, a3, a4, a5, a6);
}

void sub_19C540DBC(uint64_t a1, uint64_t a2)
{
  sub_19C540DDC(a1, a2);
}

void sub_19C540DDC(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x19C540FE0);
}

uint64_t sub_19C540FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53CB0C(a1, a2, a3);
}

uint64_t sub_19C541010(uint64_t a1, uint64_t a2)
{
  return sub_19C53C0C0(a1, a2);
}

uint64_t sub_19C541030(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C54027C(a1, a2, a3, (uint64_t)&type metadata for BinaryLogicalOperator, (uint64_t (*)(void))sub_19C536044, (uint64_t (*)(id, uint64_t, _QWORD))sub_19C5360F0);
}

uint64_t sub_19C541068(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C53C404(a1 & 1, a2, a3, a4, a5, a6);
}

uint64_t sub_19C54108C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53FB94(a1, a2, a3);
}

uint64_t sub_19C5410AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C53CE9C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19C5410CC(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53D228(a1, a2, a3);
}

uint64_t sub_19C5410EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53D59C(a1, a2, a3);
}

uint64_t sub_19C54110C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53DFE4(a1, a2, a3, (uint64_t)&type metadata for ReverseOperator, (uint64_t (*)(void))sub_19C536A48, (uint64_t)&unk_1E3D5E2C0, (SEL *)&selRef_reverseTensor_axes_name_);
}

uint64_t sub_19C54114C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53DFE4(a1, a2, a3, (uint64_t)&type metadata for TileOperator, (uint64_t (*)(void))sub_19C532854, (uint64_t)&unk_1E3D5E298, (SEL *)&selRef_tileTensor_withMultiplier_name_);
}

uint64_t sub_19C54118C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53E39C(a1, a2, a3);
}

uint64_t sub_19C5411AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C53E710(a1, a2, a3 & 1, a4, a5, a6);
}

uint64_t sub_19C5411D0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53EA90(a1, a2, a3);
}

uint64_t sub_19C5411F0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  __int128 v5[3];

  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return sub_19C53EE04(v5, a2, a3);
}

uint64_t sub_19C54122C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C53F15C(a1, a2, a3);
}

uint64_t sub_19C54124C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_19C53F4D0(a1, a2, a3 & 1, a4, a5);
}

uint64_t sub_19C541270(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_19C53F838(a1, a2, a3, a4);
}

uint64_t sub_19C541290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  _OWORD v5[2];
  char v6;

  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v6 = *(_BYTE *)(a1 + 32);
  return sub_19C53D92C((uint64_t)v5, a2, a3);
}

uint64_t sub_19C5412CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_19C53DC84(a1, a2 & 1, a3, a4);
}

uint64_t sub_19C5412F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C540968(a1, a2, a3);
}

void sub_19C541314(void *a1)
{
  char **v2;
  os_unfair_lock_s *v3;

  if (qword_1EE422E90 != -1)
    swift_once();
  v2 = (char **)((char *)off_1EE423CB0 + 16);
  v3 = (os_unfair_lock_s *)((char *)off_1EE423CB0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1EE423CB0 + 6);
  sub_19C52D34C(v2, a1);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_19C541394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  _QWORD v53[7];
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v10 = v9;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C537DC0(a4, v10, v56);
  v11 = *(_QWORD *)(a3 + 24);
  v12 = (os_unfair_lock_s *)(*(_QWORD *)(v11 + 16) + 16);
  os_unfair_lock_lock(v12);
  v13 = sub_19C54B6E4(v11, v56);
  if (v4)
  {
    os_unfair_lock_unlock(v12);
    __break(1u);
    JUMPOUT(0x19C541AC8);
  }
  v14 = v13;
  os_unfair_lock_unlock(v12);
  if (!v14)
  {
    v46 = v11;
    v47 = 0;
    v41 = v10;
    v42 = a3;
    v43 = a1;
    v44 = a4;
    v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v45 = &v40;
    v15 = v59;
    v53[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v16 = *(_QWORD *)(v15 + 16);
    v48 = v15;
    swift_bridgeObjectRetain();
    v50 = v16;
    if (v16)
    {
      v49 = v48 + 32;
      v17 = *(_QWORD *)(v48 + 32);
      v18 = *(unsigned __int8 *)(v48 + 40);
      v19 = *(_QWORD *)(v17 + 16);
      if (v19)
      {
        v54 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v20 = v17 + 32;
        do
        {
          v20 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v19;
        }
        while (v19);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v21 = v53[0];
    swift_bridgeObjectRelease();
    v50 = v21;
    if ((v21 & 0xC000000000000001) != 0)
    {
      v23 = (id)MEMORY[0x1A1AD4A9C](0, v21);
      v22 = v46;
    }
    else
    {
      v22 = v46;
      if (!*(_QWORD *)(v21 + 16))
      {
        __break(1u);
        JUMPOUT(0x19C5419C0);
      }
      v23 = *(id *)(v21 + 32);
    }
    v24 = (void *)sub_19CAA98F0();
    v25 = v51;
    v26 = objc_msgSend(v51, sel_notWithTensor_name_, v23, v24);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v27 + 32) = v26;
    v54 = v27;
    sub_19CAA9A10();
    v28 = v54;
    v29 = v57;
    v30 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 24);
    v32 = v25;
    v54 = v31(v29, v30);
    v55 = v33;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v56, v57);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v34 = v54;
    v35 = v55;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v36 = swift_allocObject();
    sub_19C54B4C0(v32, v50, v28, v34, v35);
    sub_19C5325B8((uint64_t)v56, (uint64_t)&v54);
    v37 = (os_unfair_lock_s *)(*(_QWORD *)(v22 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v37);
    sub_19C5325B8((uint64_t)&v54, (uint64_t)v53);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v22 + 24) = 0x8000000000000000;
    sub_19C550D60(v36, v53, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v22 + 24) = v52;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v53);
    swift_endAccess();
    os_unfair_lock_unlock(v37);
    sub_19C5325F4((uint64_t)&v54);

    swift_release();
    a1 = v43;
    a4 = v44;
    v10 = v41;
    a3 = v42;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a4, v10, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v56);
  return v10;
}

uint64_t sub_19C541AF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v16 = a4 & 1;
  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = v16;
  sub_19C538060(v16, a5, a6, a7, a8, v18, v63);
  v19 = *(_QWORD *)(a3 + 24);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  v21 = sub_19C54B6E4(v19, v63);
  if (v8)
  {
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_14;
  }
  v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    v47 = a5;
    v48 = v19;
    v49 = 0;
    v50 = v18;
    v51 = a3;
    v52 = a1;
    v53 = a8;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v46[2] = v46;
    v24 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v25 = *(_QWORD *)(v24 + 16);
    v54 = v24;
    swift_bridgeObjectRetain();
    v58 = v25;
    if (v25)
    {
      v57 = v54 + 32;
      v26 = *(_QWORD *)(v54 + 32);
      v27 = *(unsigned __int8 *)(v54 + 40);
      v56 = *(unsigned __int8 *)(v54 + 41);
      v28 = *(_QWORD *)(v26 + 16);
      if (v28)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v29 = v26 + 32;
        do
        {
          v29 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v28;
        }
        while (v28);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v30 = v60[0];
    swift_bridgeObjectRelease();
    v31 = v49;
    v32 = sub_19C536328(v23, v30, v55, v47);
    if (!v31)
    {
      v33 = (uint64_t)v32;
      v34 = v64;
      v35 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
      v37 = v23;
      v61 = v36(v34, v35);
      v62 = v38;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v63, v64);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v39 = v61;
      v40 = v62;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v41 = swift_allocObject();
      sub_19C54B4C0(v37, v30, v33, v39, v40);
      sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
      v42 = v48;
      v43 = (os_unfair_lock_s *)(*(_QWORD *)(v48 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v43);
      sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v42 + 24) = 0x8000000000000000;
      sub_19C550D60(v41, v60, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v42 + 24) = v59;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v60);
      swift_endAccess();
      os_unfair_lock_unlock(v43);
      sub_19C5325F4((uint64_t)&v61);

      swift_release();
      a1 = v52;
      a8 = v53;
      v18 = v50;
      a3 = v51;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C5421F0);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v18;
}

uint64_t sub_19C542220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD v27[8];
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[7];
  __int128 v40;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v40 = *(_OWORD *)a4;
  v13 = *(_QWORD *)(a4 + 24);
  v32 = *(_QWORD *)(a4 + 16);
  sub_19C551C5C((uint64_t)&v40);
  v31 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C538334(a4, a5, v12, v39);
  v30 = *(unsigned __int8 *)(a4 + 32);
  v29 = *(unsigned __int8 *)(a4 + 33);
  v14 = *(_QWORD *)(a3 + 24);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  v33 = v14;
  v16 = sub_19C54B6E4(v14, v39);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    __break(1u);
    goto LABEL_18;
  }
  v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    v27[2] = v12;
    v27[3] = 0;
    v27[4] = a3;
    v27[5] = a1;
    v27[6] = a5;
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v27[7] = v27;
    v18 = v39[5];
    v37 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v19 = *(_QWORD *)(v18 + 16);
    v28 = v18;
    swift_bridgeObjectRetain();
    v35 = v19;
    if (v19)
    {
      v34 = v28 + 32;
      v20 = *(_QWORD *)(v28 + 32);
      v21 = *(unsigned __int8 *)(v28 + 40);
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v38 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v23 = v20 + 32;
        do
        {
          v23 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v22;
        }
        while (v22);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v24 = v37;
    swift_bridgeObjectRelease();
    if ((v24 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1A1AD4A9C](0, v24);
LABEL_13:
      __asm { BR              X9 }
    }
    if (*(_QWORD *)(v24 + 16))
    {
      v25 = *(id *)(v24 + 32);
      goto LABEL_13;
    }
    __break(1u);
LABEL_18:
    JUMPOUT(0x19C542908);
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v39);
  return v12;
}

void sub_19C542A10()
{
  sub_19CAA9F2C();
  sub_19CAA992C();
  sub_19C59EBA4(0xBu);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  JUMPOUT(0x19C5429B4);
}

uint64_t sub_19C542B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  _QWORD v61[7];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[3];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v13 = *(_QWORD *)a4;
  v68 = *(_OWORD *)(a4 + 8);
  v14 = *(_QWORD *)(a4 + 32);
  v56 = *(_QWORD *)(a4 + 24);
  v54 = v13;
  swift_bridgeObjectRetain();
  sub_19C551C5C((uint64_t)&v68);
  v55 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C538E50(a4, a5, v12, (uint64_t)&type metadata for TransposeOperator, (uint64_t (*)(void))sub_19C536C50, v64);
  v15 = *(_QWORD *)(a3 + 24);
  v16 = (os_unfair_lock_s *)(*(_QWORD *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  v17 = sub_19C54B6E4(v15, v64);
  if (v5)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
    JUMPOUT(0x19C5432D4);
  }
  v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    v51 = v15;
    v52 = 0;
    v46 = v12;
    v47 = a3;
    v48 = a1;
    v49 = a5;
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v50 = &v45;
    v19 = v67;
    v61[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v20 = *(_QWORD *)(v19 + 16);
    v53 = v19;
    swift_bridgeObjectRetain();
    v58 = v20;
    if (v20)
    {
      v57 = v53 + 32;
      v21 = *(_QWORD *)(v53 + 32);
      v22 = *(unsigned __int8 *)(v53 + 40);
      v23 = *(_QWORD *)(v21 + 16);
      if (v23)
      {
        v62 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v24 = v21 + 32;
        do
        {
          v24 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v23;
        }
        while (v23);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v25 = v61[0];
    swift_bridgeObjectRelease();
    v58 = v25;
    if ((v25 & 0xC000000000000001) != 0)
    {
      v27 = (id)MEMORY[0x1A1AD4A9C](0, v25);
      v26 = v51;
    }
    else
    {
      v26 = v51;
      if (!*(_QWORD *)(v25 + 16))
      {
        __break(1u);
        JUMPOUT(0x19C5431CCLL);
      }
      v27 = *(id *)(v25 + 32);
    }
    sub_19C524A44(v54);
    sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
    v28 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    v29 = (void *)sub_19CAA98F0();
    v30 = v59;
    v31 = objc_msgSend(v59, sel_transposeTensor_permutation_name_, v27, v28, v29);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v32 + 32) = v31;
    v62 = v32;
    sub_19CAA9A10();
    v33 = v62;
    v34 = v65;
    v35 = v66;
    __swift_project_boxed_opaque_existential_1(v64, v65);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
    v37 = v30;
    v62 = v36(v34, v35);
    v63 = v38;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v64, v65);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v39 = v62;
    v40 = v63;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v41 = swift_allocObject();
    sub_19C54B4C0(v37, v58, v33, v39, v40);
    sub_19C5325B8((uint64_t)v64, (uint64_t)&v62);
    v42 = (os_unfair_lock_s *)(*(_QWORD *)(v26 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v42);
    sub_19C5325B8((uint64_t)&v62, (uint64_t)v61);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v60 = *(_QWORD *)(v26 + 24);
    *(_QWORD *)(v26 + 24) = 0x8000000000000000;
    sub_19C550D60(v41, v61, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v26 + 24) = v60;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v61);
    swift_endAccess();
    os_unfair_lock_unlock(v42);
    sub_19C5325F4((uint64_t)&v62);

    swift_release();
    a1 = v48;
    a5 = v49;
    v12 = v46;
    a3 = v47;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v64);
  return v12;
}

uint64_t sub_19C543304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v46[5];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[7];
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54 = a6;
  sub_19C538600(a4, a5, a6, a7, a8, v18, v62);
  v19 = *(_QWORD *)(a3 + 24);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  v21 = sub_19C54B6E4(v19, v62);
  if (v8)
  {
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_14;
  }
  v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    v46[4] = a7;
    v47 = v19;
    v48 = 0;
    v49 = v18;
    v50 = a3;
    v51 = a1;
    v52 = a8;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v46[3] = v46;
    v24 = v65;
    v59[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v25 = *(_QWORD *)(v24 + 16);
    v53 = v24;
    swift_bridgeObjectRetain();
    v57 = v25;
    if (v25)
    {
      v56 = v53 + 32;
      v26 = *(_QWORD *)(v53 + 32);
      v27 = *(unsigned __int8 *)(v53 + 40);
      v55 = *(unsigned __int8 *)(v53 + 41);
      v28 = *(_QWORD *)(v26 + 16);
      if (v28)
      {
        v60 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v29 = v26 + 32;
        do
        {
          v29 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v28;
        }
        while (v28);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v30 = v59[0];
    swift_bridgeObjectRelease();
    v31 = v48;
    v32 = sub_19C536EE0(v23, v30);
    if (!v31)
    {
      v33 = (uint64_t)v32;
      v34 = v63;
      v35 = v64;
      __swift_project_boxed_opaque_existential_1(v62, v63);
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
      v37 = v23;
      v60 = v36(v34, v35);
      v61 = v38;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v62, v63);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v39 = v60;
      v40 = v61;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v41 = swift_allocObject();
      sub_19C54B4C0(v37, v30, v33, v39, v40);
      sub_19C5325B8((uint64_t)v62, (uint64_t)&v60);
      v42 = v47;
      v43 = (os_unfair_lock_s *)(*(_QWORD *)(v47 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v43);
      sub_19C5325B8((uint64_t)&v60, (uint64_t)v59);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v58 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v42 + 24) = 0x8000000000000000;
      sub_19C550D60(v41, v59, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v42 + 24) = v58;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v59);
      swift_endAccess();
      os_unfair_lock_unlock(v43);
      sub_19C5325F4((uint64_t)&v60);

      swift_release();
      a1 = v51;
      a8 = v52;
      v18 = v49;
      a3 = v50;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C5439E0);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v62);
  return v18;
}

uint64_t sub_19C543A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v43[5];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  _QWORD v57[7];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v64 = *(_OWORD *)a4;
  v13 = *(_QWORD *)(a4 + 24);
  v51 = *(_QWORD *)(a4 + 16);
  sub_19C551C5C((uint64_t)&v64);
  v50 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C538E50(a4, a5, v12, (uint64_t)&type metadata for ConcatOperator, (uint64_t (*)(void))sub_19C536B18, v60);
  v49 = *(_QWORD *)(a4 + 32);
  v14 = *(_QWORD *)(a3 + 24);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  v52 = v14;
  v16 = sub_19C54B6E4(v14, v60);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    __break(1u);
    JUMPOUT(0x19C544170);
  }
  v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    v43[4] = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v43[3] = v43;
    v18 = v63;
    v57[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v19 = *(_QWORD *)(v18 + 16);
    v48 = v18;
    swift_bridgeObjectRetain();
    v54 = v19;
    if (v19)
    {
      v53 = v48 + 32;
      v20 = *(_QWORD *)(v48 + 32);
      v21 = *(unsigned __int8 *)(v48 + 40);
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v58 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v23 = v20 + 32;
        do
        {
          v23 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v22;
        }
        while (v22);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v24 = v57[0];
    swift_bridgeObjectRelease();
    sub_19C535F80(0, &qword_1EE423E68);
    v25 = (void *)sub_19CAA99EC();
    v26 = (void *)sub_19CAA98F0();
    v27 = v55;
    v28 = objc_msgSend(v55, sel_concatTensors_dimension_name_, v25, v49, v26);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v29 + 32) = v28;
    v58 = v29;
    sub_19CAA9A10();
    v30 = v58;
    v31 = v61;
    v32 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 24);
    v34 = v27;
    v58 = v33(v31, v32);
    v59 = v35;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v60, v61);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v36 = v58;
    v37 = v59;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v38 = swift_allocObject();
    sub_19C54B4C0(v34, v24, v30, v36, v37);
    sub_19C5325B8((uint64_t)v60, (uint64_t)&v58);
    v39 = v52;
    v40 = (os_unfair_lock_s *)(*(_QWORD *)(v52 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_19C5325B8((uint64_t)&v58, (uint64_t)v57);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = *(_QWORD *)(v39 + 24);
    *(_QWORD *)(v39 + 24) = 0x8000000000000000;
    sub_19C550D60(v38, v57, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v39 + 24) = v56;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v57);
    swift_endAccess();
    os_unfair_lock_unlock(v40);
    sub_19C5325F4((uint64_t)&v58);

    swift_release();
    a1 = v46;
    a5 = v47;
    v12 = v44;
    a3 = v45;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v60);
  return v12;
}

uint64_t sub_19C5441A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v43[4];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v13 = *(_QWORD *)a4;
  v14 = *(unsigned __int8 *)(a4 + 8);
  v15 = *(_QWORD *)(a4 + 32);
  v54 = *(_QWORD *)(a4 + 24);
  v67 = *(_OWORD *)(a4 + 40);
  v52 = v13;
  v51 = v14;
  sub_19C50E9CC(v13, v14);
  v53 = v15;
  swift_bridgeObjectRetain();
  sub_19C551C5C((uint64_t)&v67);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = a4;
  sub_19C539EE0(a4, a5, v12, (uint64_t)&type metadata for SplitOperator, (uint64_t (*)(void))sub_19C536AB0, v63);
  v16 = *(_QWORD *)(a3 + 24);
  v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 16) + 16);
  os_unfair_lock_lock(v17);
  v18 = sub_19C54B6E4(v16, v63);
  if (v5)
  {
    os_unfair_lock_unlock(v17);
    __break(1u);
    goto LABEL_14;
  }
  v19 = v18;
  os_unfair_lock_unlock(v17);
  if (!v19)
  {
    v44 = v16;
    v45 = 0;
    v46 = v12;
    v47 = a3;
    v48 = a1;
    v49 = a5;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v43[3] = v43;
    v21 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v22 = *(_QWORD *)(v21 + 16);
    v50 = v21;
    swift_bridgeObjectRetain();
    v58 = v22;
    if (v22)
    {
      v57 = v50 + 32;
      v23 = *(_QWORD *)(v50 + 32);
      v24 = *(unsigned __int8 *)(v50 + 40);
      v56 = *(unsigned __int8 *)(v50 + 41);
      v25 = *(_QWORD *)(v23 + 16);
      if (v25)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v26 = v23 + 32;
        do
        {
          v26 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v25;
        }
        while (v25);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v27 = v60[0];
    swift_bridgeObjectRelease();
    v28 = v45;
    v29 = sub_19C53702C(v20, v27, v52, v51, *(_QWORD *)(v55 + 16));
    if (!v28)
    {
      v30 = (uint64_t)v29;
      v31 = v64;
      v32 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 24);
      v34 = v20;
      v61 = v33(v31, v32);
      v62 = v35;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v63, v64);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v36 = v61;
      v37 = v62;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v38 = swift_allocObject();
      sub_19C54B4C0(v34, v27, v30, v36, v37);
      sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
      v39 = v44;
      v40 = (os_unfair_lock_s *)(*(_QWORD *)(v44 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v40);
      sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *(_QWORD *)(v39 + 24);
      *(_QWORD *)(v39 + 24) = 0x8000000000000000;
      sub_19C550D60(v38, v60, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v39 + 24) = v59;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v60);
      swift_endAccess();
      os_unfair_lock_unlock(v40);
      sub_19C5325F4((uint64_t)&v61);

      swift_release();
      a1 = v48;
      a5 = v49;
      v12 = v46;
      a3 = v47;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C5448A0);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v12;
}

uint64_t sub_19C5448D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v41[4];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[7];
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  char v58;
  uint64_t v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  sub_19C551C5C(a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C5388D0(a4, a5, v12, v59);
  v13 = *(_OWORD *)(a4 + 16);
  v56 = *(_OWORD *)a4;
  v57 = v13;
  v58 = *(_BYTE *)(a4 + 32);
  v14 = *(_QWORD *)(a3 + 24);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  v16 = sub_19C54B6E4(v14, v59);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    v42 = v14;
    v43 = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v41[3] = v41;
    v19 = v62;
    v53[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v20 = *(_QWORD *)(v19 + 16);
    v48 = v19;
    swift_bridgeObjectRetain();
    v51 = v20;
    if (v20)
    {
      v50 = v48 + 32;
      v21 = *(_QWORD *)(v48 + 32);
      v22 = *(unsigned __int8 *)(v48 + 40);
      v49 = *(unsigned __int8 *)(v48 + 41);
      v23 = *(_QWORD *)(v21 + 16);
      if (v23)
      {
        v54 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v24 = v21 + 32;
        do
        {
          v24 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v23;
        }
        while (v23);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v25 = v53[0];
    swift_bridgeObjectRelease();
    v26 = v43;
    v27 = sub_19C537BD4(v18, v25);
    if (!v26)
    {
      v28 = (uint64_t)v27;
      v29 = v60;
      v30 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 24);
      v32 = v18;
      v54 = v31(v29, v30);
      v55 = v33;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v59, v60);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v34 = v54;
      v35 = v55;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v36 = swift_allocObject();
      sub_19C54B4C0(v32, v25, v28, v34, v35);
      sub_19C5325B8((uint64_t)v59, (uint64_t)&v54);
      v37 = v42;
      v38 = (os_unfair_lock_s *)(*(_QWORD *)(v42 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v38);
      sub_19C5325B8((uint64_t)&v54, (uint64_t)v53);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v52 = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v37 + 24) = 0x8000000000000000;
      sub_19C550D60(v36, v53, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v37 + 24) = v52;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v53);
      swift_endAccess();
      os_unfair_lock_unlock(v38);
      sub_19C5325F4((uint64_t)&v54);

      swift_release();
      a1 = v46;
      a5 = v47;
      v12 = v44;
      a3 = v45;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C544FA4);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v59);
  return v12;
}

uint64_t sub_19C544FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v42[4];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[7];
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v12 = a5 & 1;
  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v14 = v13;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = a4;
  v50 = v12;
  sub_19C538B9C(a4, v12, a6, v14, (uint64_t)v59);
  v15 = *(_QWORD *)(a3 + 24);
  v16 = (os_unfair_lock_s *)(*(_QWORD *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  v17 = sub_19C54B6E4(v15, v59);
  if (v6)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
    goto LABEL_14;
  }
  v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    v43 = v15;
    v44 = 0;
    v45 = v14;
    v46 = a3;
    v47 = a1;
    v48 = a6;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v42[3] = v42;
    v20 = v62;
    v56[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v21 = *(_QWORD *)(v20 + 16);
    v49 = v20;
    swift_bridgeObjectRetain();
    v54 = v21;
    if (v21)
    {
      v53 = v49 + 32;
      v22 = *(_QWORD *)(v49 + 32);
      v23 = *(unsigned __int8 *)(v49 + 40);
      v52 = *(unsigned __int8 *)(v49 + 41);
      v24 = *(_QWORD *)(v22 + 16);
      if (v24)
      {
        v57 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v25 = v22 + 32;
        do
        {
          v25 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v24;
        }
        while (v24);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v26 = v56[0];
    swift_bridgeObjectRelease();
    v27 = v44;
    v28 = sub_19C532D74(v19, v26, v51, v50);
    if (!v27)
    {
      v29 = (uint64_t)v28;
      v30 = v60;
      v31 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 24);
      v33 = v19;
      v57 = v32(v30, v31);
      v58 = v34;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v59, v60);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v35 = v57;
      v36 = v58;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v37 = swift_allocObject();
      sub_19C54B4C0(v33, v26, v29, v35, v36);
      sub_19C5325B8((uint64_t)v59, (uint64_t)&v57);
      v38 = v43;
      v39 = (os_unfair_lock_s *)(*(_QWORD *)(v43 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v39);
      sub_19C5325B8((uint64_t)&v57, (uint64_t)v56);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v55 = *(_QWORD *)(v38 + 24);
      *(_QWORD *)(v38 + 24) = 0x8000000000000000;
      sub_19C550D60(v37, v56, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v38 + 24) = v55;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v56);
      swift_endAccess();
      os_unfair_lock_unlock(v39);
      sub_19C5325F4((uint64_t)&v57);

      swift_release();
      a1 = v47;
      a6 = v48;
      v14 = v45;
      a3 = v46;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C545688);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a6, v14, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v59);
  return v14;
}

uint64_t sub_19C5456B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(id, uint64_t, _QWORD))
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v46[3];
  uint64_t (*v47)(id, uint64_t, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = a4;
  sub_19C53A480(a4, a5, v18, a6, a7, (uint64_t)v63);
  v19 = *(_QWORD *)(a3 + 24);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  v21 = sub_19C54B6E4(v19, v63);
  if (v8)
  {
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_14;
  }
  v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    v47 = a8;
    v48 = v19;
    v49 = 0;
    v50 = v18;
    v51 = a3;
    v52 = a1;
    v53 = a5;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v46[2] = v46;
    v24 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v25 = *(_QWORD *)(v24 + 16);
    v54 = v24;
    swift_bridgeObjectRetain();
    v58 = v25;
    if (v25)
    {
      v57 = v54 + 32;
      v26 = *(_QWORD *)(v54 + 32);
      v27 = *(unsigned __int8 *)(v54 + 40);
      v56 = *(unsigned __int8 *)(v54 + 41);
      v28 = *(_QWORD *)(v26 + 16);
      if (v28)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v29 = v26 + 32;
        do
        {
          v29 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v28;
        }
        while (v28);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v30 = v60[0];
    swift_bridgeObjectRelease();
    v31 = v49;
    v32 = v47(v23, v30, v55);
    if (!v31)
    {
      v33 = v32;
      v34 = v64;
      v35 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
      v37 = v23;
      v61 = v36(v34, v35);
      v62 = v38;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v63, v64);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v39 = v61;
      v40 = v62;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v41 = swift_allocObject();
      sub_19C54B4C0(v37, v30, v33, v39, v40);
      sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
      v42 = v48;
      v43 = (os_unfair_lock_s *)(*(_QWORD *)(v48 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v43);
      sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v42 + 24) = 0x8000000000000000;
      sub_19C550D60(v41, v60, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v42 + 24) = v59;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v60);
      swift_endAccess();
      os_unfair_lock_unlock(v43);
      sub_19C5325F4((uint64_t)&v61);

      swift_release();
      a1 = v52;
      a5 = v53;
      v18 = v50;
      a3 = v51;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C545D94);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v18, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v18;
}

uint64_t sub_19C545DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t a8, SEL *a9)
{
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  _QWORD v68[7];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v18 = v17;
  v19 = v9;
  swift_release();
  swift_release();
  v20 = *(_QWORD *)a4;
  v63 = *(_QWORD *)(a4 + 8);
  v21 = *(_QWORD *)(a4 + 16);
  v75 = *(_OWORD *)(a4 + 24);
  v61 = v20;
  swift_bridgeObjectRetain();
  v62 = v21;
  swift_bridgeObjectRetain();
  sub_19C551C5C((uint64_t)&v75);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C538E50(a4, a5, v18, a6, a7, v71);
  v22 = *(_QWORD *)(a3 + 24);
  v23 = (os_unfair_lock_s *)(*(_QWORD *)(v22 + 16) + 16);
  os_unfair_lock_lock(v23);
  v24 = sub_19C54B6E4(v22, v71);
  if (v19)
  {
    os_unfair_lock_unlock(v23);
    __break(1u);
    JUMPOUT(0x19C546578);
  }
  v25 = v24;
  os_unfair_lock_unlock(v23);
  if (!v25)
  {
    v53 = v22;
    v54 = 0;
    v58 = v18;
    v59 = a3;
    v55 = a1;
    v56 = a5;
    v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v57 = &v52;
    v26 = v74;
    v68[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v27 = *(_QWORD *)(v26 + 16);
    v60 = v26;
    swift_bridgeObjectRetain();
    v65 = v27;
    if (v27)
    {
      v64 = v60 + 32;
      v28 = *(_QWORD *)(v60 + 32);
      v29 = *(unsigned __int8 *)(v60 + 40);
      v30 = *(_QWORD *)(v28 + 16);
      if (v30)
      {
        v69 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v31 = v28 + 32;
        do
        {
          v31 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v30;
        }
        while (v30);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v32 = v68[0];
    swift_bridgeObjectRelease();
    v65 = v32;
    if ((v32 & 0xC000000000000001) != 0)
    {
      v33 = (id)MEMORY[0x1A1AD4A9C](0, v32);
      v18 = v58;
      a3 = v59;
    }
    else
    {
      v18 = v58;
      a3 = v59;
      if (!*(_QWORD *)(v32 + 16))
      {
        __break(1u);
        JUMPOUT(0x19C546470);
      }
      v33 = *(id *)(v32 + 32);
    }
    sub_19C524A44(v61);
    sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
    v34 = (void *)sub_19CAA99EC();
    swift_bridgeObjectRelease();
    v35 = (void *)sub_19CAA98F0();
    v36 = v66;
    v37 = objc_msgSend(v66, *a9, v33, v34, v35);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v38 + 32) = v37;
    v69 = v38;
    sub_19CAA9A10();
    v39 = v69;
    v40 = v72;
    v41 = v73;
    __swift_project_boxed_opaque_existential_1(v71, v72);
    v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 24);
    v43 = v36;
    v69 = v42(v40, v41);
    v70 = v44;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v71, v72);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v45 = v69;
    v46 = v70;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v47 = swift_allocObject();
    sub_19C54B4C0(v43, v65, v39, v45, v46);
    sub_19C5325B8((uint64_t)v71, (uint64_t)&v69);
    v48 = v53;
    v49 = (os_unfair_lock_s *)(*(_QWORD *)(v53 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v49);
    sub_19C5325B8((uint64_t)&v69, (uint64_t)v68);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67 = *(_QWORD *)(v48 + 24);
    *(_QWORD *)(v48 + 24) = 0x8000000000000000;
    sub_19C550D60(v47, v68, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v48 + 24) = v67;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v68);
    swift_endAccess();
    os_unfair_lock_unlock(v49);
    sub_19C5325F4((uint64_t)&v69);

    swift_release();
    a1 = v55;
    a5 = v56;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v18, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v71);
  return v18;
}

uint64_t sub_19C5465A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_unfair_lock_s *v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  _QWORD v61[7];
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v13 = a4[2];
  v54 = a4[3];
  v55 = v13;
  v68 = *((_OWORD *)a4 + 2);
  swift_bridgeObjectRetain();
  sub_19C551C5C((uint64_t)&v68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C5393E8(a4, a5, v12, (uint64_t)&type metadata for BandPartOperator, (uint64_t (*)(void))sub_19C5327EC, v64);
  v14 = *a4;
  v52 = a4[1];
  v53 = v14;
  v15 = *(_QWORD *)(a3 + 24);
  v16 = (os_unfair_lock_s *)(*(_QWORD *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  v56 = v15;
  v17 = sub_19C54B6E4(v15, v64);
  if (v5)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
    JUMPOUT(0x19C546D14);
  }
  v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    v50 = 0;
    v45 = v12;
    v46 = a3;
    v47 = a1;
    v48 = a5;
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v49 = &v44;
    v19 = v67;
    v61[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v20 = *(_QWORD *)(v19 + 16);
    v51 = v19;
    swift_bridgeObjectRetain();
    v58 = v20;
    if (v20)
    {
      v57 = v51 + 32;
      v21 = *(_QWORD *)(v51 + 32);
      v22 = *(unsigned __int8 *)(v51 + 40);
      v23 = *(_QWORD *)(v21 + 16);
      if (v23)
      {
        v62 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v24 = v21 + 32;
        do
        {
          v24 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v23;
        }
        while (v23);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v25 = v61[0];
    swift_bridgeObjectRelease();
    if ((v25 & 0xC000000000000001) != 0)
    {
      v26 = (id)MEMORY[0x1A1AD4A9C](0, v25);
    }
    else
    {
      if (!*(_QWORD *)(v25 + 16))
      {
        __break(1u);
        JUMPOUT(0x19C546C0CLL);
      }
      v26 = *(id *)(v25 + 32);
    }
    v27 = (void *)sub_19CAA98F0();
    v28 = v59;
    v29 = objc_msgSend(v59, sel_bandPartWithTensor_numLower_numUpper_name_, v26, v53, v52, v27);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v30 + 32) = v29;
    v62 = v30;
    sub_19CAA9A10();
    v31 = v62;
    v32 = v65;
    v33 = v66;
    __swift_project_boxed_opaque_existential_1(v64, v65);
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 24);
    v35 = v28;
    v62 = v34(v32, v33);
    v63 = v36;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v64, v65);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v37 = v62;
    v38 = v63;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v39 = swift_allocObject();
    sub_19C54B4C0(v35, v25, v31, v37, v38);
    sub_19C5325B8((uint64_t)v64, (uint64_t)&v62);
    v40 = v56;
    v41 = (os_unfair_lock_s *)(*(_QWORD *)(v56 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v41);
    sub_19C5325B8((uint64_t)&v62, (uint64_t)v61);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v60 = *(_QWORD *)(v40 + 24);
    *(_QWORD *)(v40 + 24) = 0x8000000000000000;
    sub_19C550D60(v39, v61, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v40 + 24) = v60;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v61);
    swift_endAccess();
    os_unfair_lock_unlock(v41);
    sub_19C5325F4((uint64_t)&v62);

    swift_release();
    a1 = v47;
    a5 = v48;
    v12 = v45;
    a3 = v46;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v64);
  return v12;
}

uint64_t sub_19C546D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v16 = a6 & 1;
  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = v16;
  sub_19C539114(a4, a5, v16, a7, a8, v18, v63);
  v19 = *(_QWORD *)(a3 + 24);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  v21 = sub_19C54B6E4(v19, v63);
  if (v8)
  {
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_14;
  }
  v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    v47 = a7;
    v48 = v19;
    v49 = 0;
    v50 = v18;
    v51 = a3;
    v52 = a1;
    v53 = a8;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v46[2] = v46;
    v24 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v25 = *(_QWORD *)(v24 + 16);
    v54 = v24;
    swift_bridgeObjectRetain();
    v58 = v25;
    if (v25)
    {
      v57 = v54 + 32;
      v26 = *(_QWORD *)(v54 + 32);
      v27 = *(unsigned __int8 *)(v54 + 40);
      v56 = *(unsigned __int8 *)(v54 + 41);
      v28 = *(_QWORD *)(v26 + 16);
      if (v28)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v29 = v26 + 32;
        do
        {
          v29 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v28;
        }
        while (v28);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v30 = v60[0];
    swift_bridgeObjectRelease();
    v31 = v49;
    v32 = sub_19C532BD0(v23, v30, v55, v47);
    if (!v31)
    {
      v33 = (uint64_t)v32;
      v34 = v64;
      v35 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
      v37 = v23;
      v61 = v36(v34, v35);
      v62 = v38;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v63, v64);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v39 = v61;
      v40 = v62;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v41 = swift_allocObject();
      sub_19C54B4C0(v37, v30, v33, v39, v40);
      sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
      v42 = v48;
      v43 = (os_unfair_lock_s *)(*(_QWORD *)(v48 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v43);
      sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v42 + 24) = 0x8000000000000000;
      sub_19C550D60(v41, v60, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v42 + 24) = v59;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v60);
      swift_endAccess();
      os_unfair_lock_unlock(v43);
      sub_19C5325F4((uint64_t)&v61);

      swift_release();
      a1 = v52;
      a8 = v53;
      v18 = v50;
      a3 = v51;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C54742CLL);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v18;
}

uint64_t sub_19C54745C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v67 = *a4;
  v13 = *((_QWORD *)a4 + 3);
  v54 = *((_QWORD *)a4 + 2);
  sub_19C551C5C((uint64_t)&v67);
  v53 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C5393E8(a4, a5, v12, (uint64_t)&type metadata for TopKOperator, (uint64_t (*)(void))sub_19C53271C, v63);
  v14 = *((_QWORD *)a4 + 4);
  v51 = *((_QWORD *)a4 + 5);
  v52 = v14;
  v15 = *(_QWORD *)(a3 + 24);
  v16 = (os_unfair_lock_s *)(*(_QWORD *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  v55 = v15;
  v17 = sub_19C54B6E4(v15, v63);
  if (v5)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
    JUMPOUT(0x19C547BC4);
  }
  v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    v49 = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v48 = &v43;
    v19 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v20 = *(_QWORD *)(v19 + 16);
    v50 = v19;
    swift_bridgeObjectRetain();
    v57 = v20;
    if (v20)
    {
      v56 = v50 + 32;
      v21 = *(_QWORD *)(v50 + 32);
      v22 = *(unsigned __int8 *)(v50 + 40);
      v23 = *(_QWORD *)(v21 + 16);
      if (v23)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v24 = v21 + 32;
        do
        {
          v24 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v23;
        }
        while (v23);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v25 = v60[0];
    swift_bridgeObjectRelease();
    if ((v25 & 0xC000000000000001) != 0)
    {
      v26 = (id)MEMORY[0x1A1AD4A9C](0, v25);
    }
    else
    {
      if (!*(_QWORD *)(v25 + 16))
      {
        __break(1u);
        JUMPOUT(0x19C547ABCLL);
      }
      v26 = *(id *)(v25 + 32);
    }
    v27 = (void *)sub_19CAA98F0();
    v28 = v58;
    v29 = objc_msgSend(v58, sel_topKWithSourceTensor_axis_k_name_, v26, v51, v52, v27);

    sub_19C535F80(0, &qword_1EE423E68);
    v30 = sub_19CAA99F8();

    v31 = v64;
    v32 = v65;
    __swift_project_boxed_opaque_existential_1(v63, v64);
    v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 24);
    v34 = v28;
    v61 = v33(v31, v32);
    v62 = v35;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v63, v64);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v36 = v61;
    v37 = v62;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v38 = swift_allocObject();
    sub_19C54B4C0(v34, v25, v30, v36, v37);
    sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
    v39 = v55;
    v40 = (os_unfair_lock_s *)(*(_QWORD *)(v55 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = *(_QWORD *)(v39 + 24);
    *(_QWORD *)(v39 + 24) = 0x8000000000000000;
    sub_19C550D60(v38, v60, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v39 + 24) = v59;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v60);
    swift_endAccess();
    os_unfair_lock_unlock(v40);
    sub_19C5325F4((uint64_t)&v61);

    swift_release();
    a1 = v46;
    a5 = v47;
    v12 = v44;
    a3 = v45;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v12;
}

uint64_t sub_19C547BF4(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v41[4];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[7];
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  sub_19C551CD8((uint64_t)a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C5393E8(a4, a5, v12, (uint64_t)&type metadata for PadOperator, (uint64_t (*)(void))sub_19C5326B4, v59);
  v13 = a4[1];
  v56 = *a4;
  v57 = v13;
  v58 = a4[2];
  v14 = *(_QWORD *)(a3 + 24);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  v16 = sub_19C54B6E4(v14, v59);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    v42 = v14;
    v43 = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v41[3] = v41;
    v19 = v62;
    v53[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v20 = *(_QWORD *)(v19 + 16);
    v48 = v19;
    swift_bridgeObjectRetain();
    v51 = v20;
    if (v20)
    {
      v50 = v48 + 32;
      v21 = *(_QWORD *)(v48 + 32);
      v22 = *(unsigned __int8 *)(v48 + 40);
      v49 = *(unsigned __int8 *)(v48 + 41);
      v23 = *(_QWORD *)(v21 + 16);
      if (v23)
      {
        v54 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v24 = v21 + 32;
        do
        {
          v24 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v23;
        }
        while (v23);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v25 = v53[0];
    swift_bridgeObjectRelease();
    v26 = v43;
    v27 = sub_19C532A10(v18, v25);
    if (!v26)
    {
      v28 = (uint64_t)v27;
      v29 = v60;
      v30 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 24);
      v32 = v18;
      v54 = v31(v29, v30);
      v55 = v33;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v59, v60);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v34 = v54;
      v35 = v55;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v36 = swift_allocObject();
      sub_19C54B4C0(v32, v25, v28, v34, v35);
      sub_19C5325B8((uint64_t)v59, (uint64_t)&v54);
      v37 = v42;
      v38 = (os_unfair_lock_s *)(*(_QWORD *)(v42 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v38);
      sub_19C5325B8((uint64_t)&v54, (uint64_t)v53);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v52 = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v37 + 24) = 0x8000000000000000;
      sub_19C550D60(v36, v53, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v37 + 24) = v52;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v53);
      swift_endAccess();
      os_unfair_lock_unlock(v38);
      sub_19C5325F4((uint64_t)&v54);

      swift_release();
      a1 = v46;
      a5 = v47;
      v12 = v44;
      a3 = v45;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C5482E0);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v59);
  return v12;
}

uint64_t sub_19C548310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v13 = *a4;
  v53 = a4[1];
  v54 = v13;
  v67 = *((_OWORD *)a4 + 1);
  swift_bridgeObjectRetain();
  sub_19C551C5C((uint64_t)&v67);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C5396AC(a4, a5, v12, v63);
  v52 = a4[4];
  v51 = *((unsigned __int8 *)a4 + 40);
  v14 = *(_QWORD *)(a3 + 24);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  v55 = v14;
  v16 = sub_19C54B6E4(v14, v63);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    __break(1u);
    JUMPOUT(0x19C548A6CLL);
  }
  v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    v49 = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v48 = &v43;
    v18 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v19 = *(_QWORD *)(v18 + 16);
    v50 = v18;
    swift_bridgeObjectRetain();
    v57 = v19;
    if (v19)
    {
      v56 = v50 + 32;
      v20 = *(_QWORD *)(v50 + 32);
      v21 = *(unsigned __int8 *)(v50 + 40);
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v23 = v20 + 32;
        do
        {
          v23 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v22;
        }
        while (v22);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v24 = v60[0];
    swift_bridgeObjectRelease();
    if ((v24 & 0xC000000000000001) != 0)
    {
      v25 = (id)MEMORY[0x1A1AD4A9C](0, v24);
    }
    else
    {
      if (!*(_QWORD *)(v24 + 16))
      {
        __break(1u);
        JUMPOUT(0x19C548964);
      }
      v25 = *(id *)(v24 + 32);
    }
    v26 = (void *)sub_19CAA98F0();
    v27 = v58;
    v28 = objc_msgSend(v58, sel_argSortWithTensor_axis_descending_name_, v25, v52, v51, v26);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_19CAEA690;
    *(_QWORD *)(v29 + 32) = v28;
    v61 = v29;
    sub_19CAA9A10();
    v30 = v61;
    v31 = v64;
    v32 = v65;
    __swift_project_boxed_opaque_existential_1(v63, v64);
    v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 24);
    v34 = v27;
    v61 = v33(v31, v32);
    v62 = v35;
    sub_19CAA992C();
    __swift_project_boxed_opaque_existential_1(v63, v64);
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    v36 = v61;
    v37 = v62;
    type metadata accessor for MetalComputeStream.MPSGraphOperation();
    v38 = swift_allocObject();
    sub_19C54B4C0(v34, v24, v30, v36, v37);
    sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
    v39 = v55;
    v40 = (os_unfair_lock_s *)(*(_QWORD *)(v55 + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = *(_QWORD *)(v39 + 24);
    *(_QWORD *)(v39 + 24) = 0x8000000000000000;
    sub_19C550D60(v38, v60, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v39 + 24) = v59;
    swift_bridgeObjectRelease();
    sub_19C5325F4((uint64_t)v60);
    swift_endAccess();
    os_unfair_lock_unlock(v40);
    sub_19C5325F4((uint64_t)&v61);

    swift_release();
    a1 = v46;
    a5 = v47;
    v12 = v44;
    a3 = v45;
  }
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v12;
}

uint64_t sub_19C548A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v14 = a6 & 1;
  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v16 = v15;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54 = a4;
  v55 = a5;
  v53 = v14;
  sub_19C539978(a4, a5, v14, a7, v16, (uint64_t)v63);
  v17 = *(_QWORD *)(a3 + 24);
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + 16) + 16);
  os_unfair_lock_lock(v18);
  v19 = sub_19C54B6E4(v17, v63);
  if (v7)
  {
    os_unfair_lock_unlock(v18);
    __break(1u);
    goto LABEL_14;
  }
  v20 = v19;
  os_unfair_lock_unlock(v18);
  if (!v20)
  {
    v46 = v17;
    v47 = 0;
    v48 = v16;
    v49 = a3;
    v50 = a1;
    v51 = a7;
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v45[2] = v45;
    v22 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v23 = *(_QWORD *)(v22 + 16);
    v52 = v22;
    swift_bridgeObjectRetain();
    v58 = v23;
    if (v23)
    {
      v57 = v52 + 32;
      v24 = *(_QWORD *)(v52 + 32);
      v25 = *(unsigned __int8 *)(v52 + 40);
      v56 = *(unsigned __int8 *)(v52 + 41);
      v26 = *(_QWORD *)(v24 + 16);
      if (v26)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v27 = v24 + 32;
        do
        {
          v27 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v26;
        }
        while (v26);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v28 = v60[0];
    swift_bridgeObjectRelease();
    v29 = v47;
    v30 = sub_19C53102C(v21, v28, v54, v55, v53);
    if (!v29)
    {
      v31 = (uint64_t)v30;
      v32 = v21;
      v33 = v64;
      v34 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 24);
      v36 = v32;
      v61 = v35(v33, v34);
      v62 = v37;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v63, v64);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v38 = v61;
      v39 = v62;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v40 = swift_allocObject();
      sub_19C54B4C0(v36, v28, v31, v38, v39);
      sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
      v41 = v46;
      v42 = (os_unfair_lock_s *)(*(_QWORD *)(v46 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v42);
      sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *(_QWORD *)(v41 + 24);
      *(_QWORD *)(v41 + 24) = 0x8000000000000000;
      sub_19C550D60(v40, v60, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v41 + 24) = v59;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v60);
      swift_endAccess();
      os_unfair_lock_unlock(v42);
      sub_19C5325F4((uint64_t)&v61);

      swift_release();
      a1 = v50;
      a7 = v51;
      v16 = v48;
      a3 = v49;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C549164);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a7, v16, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v16;
}

uint64_t sub_19C549194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[7];
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v14 = v13;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = a4;
  v51 = a5;
  sub_19C539C30(a4, a5, a6, v14, (uint64_t)v59);
  v15 = *(_QWORD *)(a3 + 24);
  v16 = (os_unfair_lock_s *)(*(_QWORD *)(v15 + 16) + 16);
  os_unfair_lock_lock(v16);
  v17 = sub_19C54B6E4(v15, v59);
  if (v6)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
    goto LABEL_14;
  }
  v18 = v17;
  os_unfair_lock_unlock(v16);
  if (!v18)
  {
    v43 = v15;
    v44 = 0;
    v45 = v14;
    v46 = a3;
    v47 = a1;
    v48 = a6;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v42[2] = v42;
    v20 = v62;
    v56[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v21 = *(_QWORD *)(v20 + 16);
    v49 = v20;
    swift_bridgeObjectRetain();
    v54 = v21;
    if (v21)
    {
      v53 = v49 + 32;
      v22 = *(_QWORD *)(v49 + 32);
      v23 = *(unsigned __int8 *)(v49 + 40);
      v52 = *(unsigned __int8 *)(v49 + 41);
      v24 = *(_QWORD *)(v22 + 16);
      if (v24)
      {
        v57 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v25 = v22 + 32;
        do
        {
          v25 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v24;
        }
        while (v24);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v26 = v56[0];
    swift_bridgeObjectRelease();
    v27 = v44;
    v28 = sub_19C5311A8(v19, v26, v50, v51);
    if (!v27)
    {
      v29 = (uint64_t)v28;
      v30 = v60;
      v31 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 24);
      v33 = v19;
      v57 = v32(v30, v31);
      v58 = v34;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v59, v60);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v35 = v57;
      v36 = v58;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v37 = swift_allocObject();
      sub_19C54B4C0(v33, v26, v29, v35, v36);
      sub_19C5325B8((uint64_t)v59, (uint64_t)&v57);
      v38 = v43;
      v39 = (os_unfair_lock_s *)(*(_QWORD *)(v43 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v39);
      sub_19C5325B8((uint64_t)&v57, (uint64_t)v56);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v55 = *(_QWORD *)(v38 + 24);
      *(_QWORD *)(v38 + 24) = 0x8000000000000000;
      sub_19C550D60(v37, v56, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v38 + 24) = v55;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v56);
      swift_endAccess();
      os_unfair_lock_unlock(v39);
      sub_19C5325F4((uint64_t)&v57);

      swift_release();
      a1 = v47;
      a6 = v48;
      v14 = v45;
      a3 = v46;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C549864);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a6, v14, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v59);
  return v14;
}

uint64_t sub_19C549894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[7];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  sub_19C551E9C(a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = a4;
  sub_19C539EE0(a4, a5, v12, (uint64_t)&type metadata for SliceOperator, (uint64_t (*)(void))sub_19C536BE8, v56);
  v13 = *(_QWORD *)(a3 + 24);
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v13 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = sub_19C54B6E4(v13, v56);
  if (v5)
  {
    os_unfair_lock_unlock(v14);
    __break(1u);
    goto LABEL_14;
  }
  v16 = v15;
  os_unfair_lock_unlock(v14);
  if (!v16)
  {
    v41 = v13;
    v42 = 0;
    v43 = v12;
    v44 = a3;
    v45 = a1;
    v46 = a5;
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v40[2] = v40;
    v18 = v59;
    v53[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v19 = *(_QWORD *)(v18 + 16);
    v47 = v18;
    swift_bridgeObjectRetain();
    v51 = v19;
    if (v19)
    {
      v50 = v47 + 32;
      v20 = *(_QWORD *)(v47 + 32);
      v21 = *(unsigned __int8 *)(v47 + 40);
      v49 = *(unsigned __int8 *)(v47 + 41);
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v54 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v23 = v20 + 32;
        do
        {
          v23 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v22;
        }
        while (v22);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v24 = v53[0];
    swift_bridgeObjectRelease();
    v25 = v42;
    v26 = sub_19C536D64(v17, v24);
    if (!v25)
    {
      v27 = (uint64_t)v26;
      v28 = v57;
      v29 = v58;
      __swift_project_boxed_opaque_existential_1(v56, v57);
      v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 24);
      v31 = v17;
      v54 = v30(v28, v29);
      v55 = v32;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v56, v57);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v33 = v54;
      v34 = v55;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v35 = swift_allocObject();
      sub_19C54B4C0(v31, v24, v27, v33, v34);
      sub_19C5325B8((uint64_t)v56, (uint64_t)&v54);
      v36 = v41;
      v37 = (os_unfair_lock_s *)(*(_QWORD *)(v41 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v37);
      sub_19C5325B8((uint64_t)&v54, (uint64_t)v53);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v52 = *(_QWORD *)(v36 + 24);
      *(_QWORD *)(v36 + 24) = 0x8000000000000000;
      sub_19C550D60(v35, v53, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v36 + 24) = v52;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v53);
      swift_endAccess();
      os_unfair_lock_unlock(v37);
      sub_19C5325F4((uint64_t)&v54);

      swift_release();
      a1 = v45;
      a5 = v46;
      v12 = v43;
      a3 = v44;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C549F7CLL);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v56);
  return v12;
}

uint64_t sub_19C549FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v46[4];
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[7];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v18 = v17;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = a6;
  sub_19C53A1AC(a4, a5, a6, a7, a8, v18, v63);
  v19 = *(_QWORD *)(a3 + 24);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v19 + 16) + 16);
  os_unfair_lock_lock(v20);
  v21 = sub_19C54B6E4(v19, v63);
  if (v8)
  {
    os_unfair_lock_unlock(v20);
    __break(1u);
    goto LABEL_14;
  }
  v22 = v21;
  os_unfair_lock_unlock(v20);
  if (!v22)
  {
    v47 = a7;
    v48 = v19;
    v49 = 0;
    v50 = v18;
    v51 = a3;
    v52 = a1;
    v53 = a8;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v46[3] = v46;
    v24 = v66;
    v60[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v25 = *(_QWORD *)(v24 + 16);
    v54 = v24;
    swift_bridgeObjectRetain();
    v58 = v25;
    if (v25)
    {
      v57 = v54 + 32;
      v26 = *(_QWORD *)(v54 + 32);
      v27 = *(unsigned __int8 *)(v54 + 40);
      v56 = *(unsigned __int8 *)(v54 + 41);
      v28 = *(_QWORD *)(v26 + 16);
      if (v28)
      {
        v61 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v29 = v26 + 32;
        do
        {
          v29 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v28;
        }
        while (v28);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v30 = v60[0];
    swift_bridgeObjectRelease();
    v31 = v49;
    sub_19C536570((uint64_t)v23, v30, v55, v47);
    if (!v31)
    {
      v33 = v32;
      v34 = v64;
      v35 = v65;
      __swift_project_boxed_opaque_existential_1(v63, v64);
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 24);
      v37 = v23;
      v61 = v36(v34, v35);
      v62 = v38;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v63, v64);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v39 = v61;
      v40 = v62;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v41 = swift_allocObject();
      sub_19C54B4C0(v37, v30, v33, v39, v40);
      sub_19C5325B8((uint64_t)v63, (uint64_t)&v61);
      v42 = v48;
      v43 = (os_unfair_lock_s *)(*(_QWORD *)(v48 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v43);
      sub_19C5325B8((uint64_t)&v61, (uint64_t)v60);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *(_QWORD *)(v42 + 24);
      *(_QWORD *)(v42 + 24) = 0x8000000000000000;
      sub_19C550D60(v41, v60, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v42 + 24) = v59;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v60);
      swift_endAccess();
      os_unfair_lock_unlock(v43);
      sub_19C5325F4((uint64_t)&v61);

      swift_release();
      a1 = v52;
      a8 = v53;
      v18 = v50;
      a3 = v51;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C54A680);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a8, v18, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v63);
  return v18;
}

uint64_t sub_19C54A6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v41[4];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[7];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  v13 = *(_OWORD *)(a4 + 8);
  v61 = *(_OWORD *)(a4 + 24);
  v62 = v13;
  sub_19C551C5C((uint64_t)&v62);
  sub_19C551C5C((uint64_t)&v61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = a4;
  sub_19C53A720(a4, a5, v12, v57);
  v14 = *(_QWORD *)(a3 + 24);
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(v14 + 16) + 16);
  os_unfair_lock_lock(v15);
  v16 = sub_19C54B6E4(v14, v57);
  if (v5)
  {
    os_unfair_lock_unlock(v15);
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  os_unfair_lock_unlock(v15);
  if (!v17)
  {
    v42 = v14;
    v43 = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v41[3] = v41;
    v19 = v60;
    v54[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v20 = *(_QWORD *)(v19 + 16);
    v48 = v19;
    swift_bridgeObjectRetain();
    v52 = v20;
    if (v20)
    {
      v51 = v48 + 32;
      v21 = *(_QWORD *)(v48 + 32);
      v22 = *(unsigned __int8 *)(v48 + 40);
      v50 = *(unsigned __int8 *)(v48 + 41);
      v23 = *(_QWORD *)(v21 + 16);
      if (v23)
      {
        v55 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v24 = v21 + 32;
        do
        {
          v24 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v23;
        }
        while (v23);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v25 = v54[0];
    swift_bridgeObjectRelease();
    v26 = v43;
    v27 = sub_19C537268(v18, v25);
    if (!v26)
    {
      v28 = (uint64_t)v27;
      v29 = v58;
      v30 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 24);
      v32 = v18;
      v55 = v31(v29, v30);
      v56 = v33;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v57, v58);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v34 = v55;
      v35 = v56;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v36 = swift_allocObject();
      sub_19C54B4C0(v32, v25, v28, v34, v35);
      sub_19C5325B8((uint64_t)v57, (uint64_t)&v55);
      v37 = v42;
      v38 = (os_unfair_lock_s *)(*(_QWORD *)(v42 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v38);
      sub_19C5325B8((uint64_t)&v55, (uint64_t)v54);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v37 + 24) = 0x8000000000000000;
      sub_19C550D60(v36, v54, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v37 + 24) = v53;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v54);
      swift_endAccess();
      os_unfair_lock_unlock(v38);
      sub_19C5325F4((uint64_t)&v55);

      swift_release();
      a1 = v46;
      a5 = v47;
      v12 = v44;
      a3 = v45;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C54AD94);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v57);
  return v12;
}

uint64_t sub_19C54ADC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[7];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  swift_retain();
  swift_retain();
  sub_19C55186C(a2, a3, a1);
  v12 = v11;
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = a4;
  sub_19C53AA34(a4, a5, v12, v57);
  v13 = *(_QWORD *)(a3 + 24);
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v13 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = sub_19C54B6E4(v13, v57);
  if (v5)
  {
    os_unfair_lock_unlock(v14);
    __break(1u);
    goto LABEL_14;
  }
  v16 = v15;
  os_unfair_lock_unlock(v14);
  if (!v16)
  {
    v42 = v13;
    v43 = 0;
    v44 = v12;
    v45 = a3;
    v46 = a1;
    v47 = a5;
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC75F8]), sel_init);
    v41[2] = v41;
    v18 = v60;
    v54[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v19 = *(_QWORD *)(v18 + 16);
    v48 = v18;
    swift_bridgeObjectRetain();
    v52 = v19;
    if (v19)
    {
      v51 = v48 + 32;
      v20 = *(_QWORD *)(v48 + 32);
      v21 = *(unsigned __int8 *)(v48 + 40);
      v50 = *(unsigned __int8 *)(v48 + 41);
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v55 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_19CAA9FE0();
        v23 = v20 + 32;
        do
        {
          v23 += 8;
          sub_19CAA9BB4();
          sub_19CAA9FBC();
          sub_19CAAA004();
          sub_19CAAA010();
          sub_19CAA9FC8();
          --v22;
        }
        while (v22);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
      sub_19CAA99EC();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    swift_bridgeObjectRelease();
    v24 = v54[0];
    swift_bridgeObjectRelease();
    v25 = v43;
    v26 = sub_19C533028(v17, v24);
    if (!v25)
    {
      v27 = (uint64_t)v26;
      v28 = v17;
      v29 = v58;
      v30 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 24);
      v32 = v28;
      v55 = v31(v29, v30);
      v56 = v33;
      sub_19CAA992C();
      __swift_project_boxed_opaque_existential_1(v57, v58);
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      v34 = v55;
      v35 = v56;
      type metadata accessor for MetalComputeStream.MPSGraphOperation();
      v36 = swift_allocObject();
      sub_19C54B4C0(v32, v24, v27, v34, v35);
      sub_19C5325B8((uint64_t)v57, (uint64_t)&v55);
      v37 = v42;
      v38 = (os_unfair_lock_s *)(*(_QWORD *)(v42 + 16) + 16);
      swift_retain();
      os_unfair_lock_lock(v38);
      sub_19C5325B8((uint64_t)&v55, (uint64_t)v54);
      swift_beginAccess();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v37 + 24) = 0x8000000000000000;
      sub_19C550D60(v36, v54, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v37 + 24) = v53;
      swift_bridgeObjectRelease();
      sub_19C5325F4((uint64_t)v54);
      swift_endAccess();
      os_unfair_lock_unlock(v38);
      sub_19C5325F4((uint64_t)&v55);

      swift_release();
      a1 = v46;
      a5 = v47;
      v12 = v44;
      a3 = v45;
      goto LABEL_12;
    }
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x19C54B490);
  }
LABEL_12:
  sub_19C53B390(*(_QWORD *)(a3 + 16), a5, v12, a1);
  swift_release();
  sub_19C5325F4((uint64_t)v57);
  return v12;
}

_QWORD *sub_19C54B4C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  v7 = objc_allocWithZone(MEMORY[0x1E0CC7600]);
  v8 = a1;
  v9 = objc_msgSend(v7, sel_init);
  objc_msgSend(v9, sel_setWaitForCompilationCompletion_, 0);
  objc_msgSend(v9, sel_setAllowedComputeDevices_, 1);
  objc_msgSend(v9, sel_setCompilerOptions_, 0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC7640]), sel_init);
  v5[7] = v10;
  v11 = v10;
  v12 = v9;
  objc_msgSend(v11, sel_setCompilationDescriptor_, v12);

  return v5;
}

uint64_t sub_19C54B5A4()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  v0 = swift_bridgeObjectRetain();
  sub_19C503DCC(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19C54B5E8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_19C54B630()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalComputeStream.MPSGraphOperation()
{
  return objc_opt_self();
}

uint64_t sub_19C54B694()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19C54B6E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_19C54B8C0(a2), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    v7 = 0;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_19C54B76C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalComputeStream.Cache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetalComputeStream.Cache);
}

unint64_t sub_19C54B7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_19CAAA298();
  sub_19CAA9920();
  v4 = sub_19CAAA2C8();
  return sub_19C54BBB0(a1, a2, v4);
}

unint64_t sub_19C54B808(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CAAA28C();
  return sub_19C54C220(a1, v2);
}

unint64_t sub_19C54B840(void *a1, char a2)
{
  id v4;
  uint64_t v5;

  sub_19CAAA298();
  sub_19CAAA2A4();
  sub_19CAAA2A4();
  v4 = a1;
  sub_19CAA9DC4();

  v5 = sub_19CAAA2C8();
  return sub_19C54BC90(a1, a2, v5);
}

uint64_t sub_19C54B8C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_19CAAA298();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19CAA983C();
  v2 = a1[5];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = v2 + 32;
    do
    {
      v6 = *(_QWORD *)(v5 + 16 * v4);
      sub_19CAAA2A4();
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        v8 = v6 + 32;
        do
        {
          v8 += 8;
          sub_19CAAA2A4();
          --v7;
        }
        while (v7);
      }
      ++v4;
      sub_19CAAA2A4();
    }
    while (v4 != v3);
  }
  v9 = a1[6];
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = 0;
    v12 = v9 + 32;
    do
    {
      v13 = *(_QWORD *)(v12 + 16 * v11);
      sub_19CAAA2A4();
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = v13 + 32;
        do
        {
          v15 += 8;
          sub_19CAAA2A4();
          --v14;
        }
        while (v14);
      }
      ++v11;
      sub_19CAAA2A4();
    }
    while (v11 != v10);
  }
  v16 = sub_19CAAA2C8();
  return sub_19C54BDCC(a1, v16);
}

unint64_t sub_19C54BA20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CAA9DAC();
  return sub_19C54C2BC(a1, v2, (unint64_t *)&qword_1EE422D90);
}

unint64_t sub_19C54BA6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CAA9DAC();
  return sub_19C54C2BC(a1, v2, &qword_1EE423E68);
}

unint64_t sub_19C54BAB8(uint64_t a1)
{
  uint64_t v2;

  sub_19CAAA298();
  type metadata accessor for CFString(0);
  sub_19C5520BC();
  sub_19CAA9650();
  v2 = sub_19CAAA2C8();
  return sub_19C54C3CC(a1, v2);
}

unint64_t sub_19C54BB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_19CAAA298();
  sub_19CAAA2A4();
  sub_19CAAA2B0();
  if (a2)
    sub_19CAAA2A4();
  v4 = sub_19CAAA2C8();
  return sub_19C54C4F4(a1, a2, v4);
}

unint64_t sub_19C54BBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_19CAAA1E4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_19CAAA1E4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_19C54BC90(void *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  int v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = v3;
    v10 = ~v5;
    do
    {
      v14 = *(_QWORD *)(v7 + 48) + 16 * v6;
      v15 = *(void **)v14;
      v16 = *(unsigned __int8 *)(v14 + 8);
      if (v16)
      {
        if (v16 == 1)
        {
          if (a2 == 1)
            goto LABEL_3;
        }
        else if (a2 == 2)
        {
LABEL_3:
          sub_19C535F80(0, (unint64_t *)&qword_1EE423BB0);
          v11 = v15;
          v12 = a1;
          v13 = sub_19CAA9DB8();

          if ((v13 & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        goto LABEL_3;
      }
      v6 = (v6 + 1) & v10;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_19C54BDCC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  uint64_t result;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  uint64_t v53;
  uint64_t v54;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
    return v5;
  v7 = ~v4;
  v49 = ~v4;
  while (1)
  {
    sub_19C5325B8(*(_QWORD *)(v2 + 48) + 56 * v5, (uint64_t)v52);
    v8 = v53;
    v9 = a1[5];
    if (*(_QWORD *)(v53 + 16) == *(_QWORD *)(v9 + 16))
    {
      v10 = v54;
      v11 = a1[6];
      if (*(_QWORD *)(v54 + 16) == *(_QWORD *)(v11 + 16))
        break;
    }
    sub_19C5325F4((uint64_t)v52);
LABEL_4:
    v5 = (v5 + 1) & v7;
    if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      return v5;
  }
  __swift_project_boxed_opaque_existential_1(v52, v52[3]);
  v12 = sub_19CAA9848();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v12 != sub_19CAA9848())
  {
LABEL_51:
    sub_19C5325F4((uint64_t)v52);
    v3 = v50;
    v2 = v51;
    v7 = v49;
    goto LABEL_4;
  }
  v47 = *(_QWORD *)(v8 + 16);
  if (v47 && *(_QWORD *)(v9 + 16))
  {
    v13 = *(_QWORD **)(v8 + 32);
    v14 = *(_QWORD **)(v9 + 32);
    v15 = v13[2];
    if (v15 == v14[2])
    {
      v45 = *(unsigned __int8 *)(v8 + 40);
      v16 = *(unsigned __int8 *)(v9 + 40);
      v46 = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRetain_n();
      result = swift_bridgeObjectRetain_n();
      v18 = v45;
      v19 = 1;
      do
      {
        if (v15 && v13 != v14)
        {
          if (v13[4] != v14[4])
            break;
          if (v15 != 1)
          {
            if (v13[5] != v14[5])
              break;
            v23 = v13 + 6;
            v24 = v14 + 6;
            v25 = v15 - 2;
            while (v25)
            {
              v27 = *v23++;
              v26 = v27;
              v28 = *v24++;
              --v25;
              if (v26 != v28)
                goto LABEL_48;
            }
          }
        }
        if (v18 != v16)
          break;
        if (v19 == v47)
          goto LABEL_28;
        if (v19 >= *(_QWORD *)(v8 + 16))
          goto LABEL_58;
        if (v19 == v46)
        {
LABEL_28:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_29;
        }
        if (v19 >= *(_QWORD *)(v9 + 16))
          goto LABEL_59;
        v20 = 16 * v19;
        v21 = (unsigned __int8 *)(v8 + 32 + 16 * v19);
        v13 = *(_QWORD **)v21;
        v18 = v21[8];
        ++v19;
        v22 = (unsigned __int8 *)(v9 + 32 + v20);
        v14 = *(_QWORD **)v22;
        v16 = v22[8];
        v15 = *(_QWORD *)(*(_QWORD *)v21 + 16);
      }
      while (v15 == *(_QWORD *)(*(_QWORD *)v22 + 16));
LABEL_48:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_51;
  }
LABEL_29:
  v29 = *(_QWORD *)(v10 + 16);
  if (!v29 || !*(_QWORD *)(v11 + 16))
  {
LABEL_54:
    sub_19C5325F4((uint64_t)v52);
    return v5;
  }
  v30 = *(_QWORD **)(v10 + 32);
  v31 = *(_QWORD **)(v11 + 32);
  v32 = v30[2];
  if (v32 != v31[2])
    goto LABEL_51;
  v33 = *(unsigned __int8 *)(v10 + 40);
  v34 = *(unsigned __int8 *)(v11 + 40);
  v48 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRetain_n();
  result = swift_bridgeObjectRetain_n();
  v35 = 1;
  while (1)
  {
    if (v32 && v30 != v31)
    {
      if (v30[4] != v31[4])
        goto LABEL_48;
      if (v32 != 1)
      {
        if (v30[5] != v31[5])
          goto LABEL_48;
        v39 = v30 + 6;
        v40 = v31 + 6;
        v41 = v32 - 2;
        while (v41)
        {
          v43 = *v39++;
          v42 = v43;
          v44 = *v40++;
          --v41;
          if (v42 != v44)
            goto LABEL_48;
        }
      }
    }
    if (v33 != v34)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_51;
    }
    if (v35 == v29)
    {
LABEL_53:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_54;
    }
    if (v35 >= *(_QWORD *)(v10 + 16))
      break;
    if (v35 == v48)
      goto LABEL_53;
    if (v35 >= *(_QWORD *)(v11 + 16))
      goto LABEL_57;
    v36 = 16 * v35;
    v37 = (unsigned __int8 *)(v10 + 32 + 16 * v35);
    v30 = *(_QWORD **)v37;
    v33 = v37[8];
    ++v35;
    v38 = (unsigned __int8 *)(v11 + 32 + v36);
    v31 = *(_QWORD **)v38;
    v34 = v38[8];
    v32 = *(_QWORD *)(*(_QWORD *)v37 + 16);
    if (v32 != *(_QWORD *)(*(_QWORD *)v38 + 16))
      goto LABEL_48;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

unint64_t sub_19C54C220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_19C54C2BC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_19C535F80(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_19CAA9DB8();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_19CAA9DB8();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_19C54C3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_19C5520BC();
    v7 = v6;
    v8 = sub_19CAA9644();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_19CAA9644();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_19C54C4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * result);
      if (*v8 == a1)
      {
        v9 = v8[1];
        if (v9)
        {
          if (a2 && v9 == a2)
            return result;
        }
        else if (!a2)
        {
          return result;
        }
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_19C54C580(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  __int128 *v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424130);
  v6 = (_QWORD *)sub_19CAAA0F4();
  if (*(_QWORD *)(v5 + 16))
  {
    v25 = v3;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        if (__OFADD__(v13++, 1))
          goto LABEL_30;
        if (v13 >= v11)
        {
LABEL_21:
          swift_release();
          if ((a2 & 1) != 0)
          {
            v24 = 1 << *(_BYTE *)(v5 + 32);
            if (v24 >= 64)
              bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            else
              *v8 = -1 << v24;
            *(_QWORD *)(v5 + 16) = 0;
          }
          result = swift_release();
          v3 = v25;
          goto LABEL_28;
        }
        v18 = v8[v13];
        if (!v18)
        {
          v19 = v13 + 1;
          if (v13 + 1 >= v11)
            goto LABEL_21;
          v18 = v8[v19];
          if (!v18)
          {
            while (1)
            {
              v13 = v19 + 1;
              if (__OFADD__(v19, 1))
                break;
              if (v13 >= v11)
                goto LABEL_21;
              v18 = v8[v13];
              ++v19;
              if (v18)
                goto LABEL_18;
            }
            __break(1u);
LABEL_30:
            __break(1u);
            return result;
          }
          ++v13;
        }
LABEL_18:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(v5 + 48) + 16 * v16;
      v21 = *(void **)v20;
      v22 = *(_BYTE *)(v20 + 8);
      v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v16);
      if ((a2 & 1) != 0)
      {
        sub_19C4F0F68(v23, (uint64_t)v26);
      }
      else
      {
        sub_19C4F0F24((uint64_t)v23, (uint64_t)v26);
        v14 = v21;
      }
      result = sub_19C54ED50(v21, v22, v26, v6);
    }
  }
  result = swift_release();
LABEL_28:
  *v3 = v6;
  return result;
}

uint64_t sub_19C54C77C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423438);
  result = sub_19CAAA0F4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_19CAAA28C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_19C54CA24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424150);
  v37 = a2;
  v6 = sub_19CAAA0F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_19CAAA298();
    sub_19CAA9920();
    result = sub_19CAAA2C8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54CD28(uint64_t a1, char a2)
{
  return sub_19C54D83C(a1, a2, &qword_1EE423440);
}

uint64_t sub_19C54CD34(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F40);
  result = sub_19CAAA0F4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v30;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v29;
              v3 = v30;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_unknownObjectRetain();
      result = sub_19CAAA28C();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

void sub_19C54CFF4(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD v24[3];
  uint64_t v25;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423F50);
  v6 = (_QWORD *)sub_19CAAA0F4();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (v16 >= v11)
          goto LABEL_23;
        v17 = v8[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_23;
          v17 = v8[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v23 = 1 << *(_BYTE *)(v5 + 32);
                if (v23 >= 64)
                  bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v23;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_30;
                if (v12 >= v11)
                  goto LABEL_23;
                v17 = v8[v12];
                ++v18;
                if (v17)
                  goto LABEL_20;
              }
            }
            v12 = v18;
          }
        }
LABEL_20:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(v5 + 48) + 56 * v15;
      if ((a2 & 1) != 0)
      {
        v20 = *(_OWORD *)v19;
        v21 = *(_OWORD *)(v19 + 16);
        v22 = *(_OWORD *)(v19 + 32);
        v25 = *(_QWORD *)(v19 + 48);
        v24[1] = v21;
        v24[2] = v22;
        v24[0] = v20;
        v13 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
      }
      else
      {
        sub_19C5325B8(v19, (uint64_t)v24);
        v13 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
        swift_retain();
      }
      sub_19C54EE3C((uint64_t)v24, v13, v6);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_19C54D20C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424118);
  v40 = a2;
  v6 = sub_19CAAA0F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_33;
      v24 = *(_QWORD *)(v39 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v24 = *(_QWORD *)(v39 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = (__int128 *)(*(_QWORD *)(v5 + 56) + 48 * v21);
    v43 = v33[1];
    v41 = *v33;
    v42 = v33[2];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = (id)v42;
      v35 = *((id *)&v42 + 1);
    }
    sub_19CAAA298();
    sub_19CAA9920();
    result = sub_19CAAA2C8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 48 * v17);
    *v19 = v41;
    v19[1] = v43;
    v19[2] = v42;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54D588(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423FD0);
  result = sub_19CAAA0F4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_19CAAA28C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54D83C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_19CAAA0F4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    result = sub_19CAA9DAC();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_19C54DB08(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424108);
  v38 = a2;
  v6 = sub_19CAAA0F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_19CAAA298();
    sub_19CAA9920();
    result = sub_19CAAA2C8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54DE14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424100);
  v41 = a2;
  v6 = sub_19CAAA0F4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v39)
          goto LABEL_33;
        v24 = v40[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v39)
            goto LABEL_33;
          v24 = v40[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v39)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v41 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v40[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v13 >= v39)
                  goto LABEL_33;
                v24 = v40[v13];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v13 = v25;
          }
        }
LABEL_30:
        v10 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v34 = *(_QWORD *)(v5 + 56) + v30;
      v36 = *(void **)v34;
      v35 = *(_QWORD *)(v34 + 8);
      if ((v41 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v37 = v36;
      }
      sub_19CAAA298();
      sub_19CAA9920();
      result = sub_19CAAA2C8();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 16 * v17;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
      *v19 = v33;
      v19[1] = v32;
      v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
      *v20 = v36;
      v20[1] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54E128(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4240F8);
  v6 = sub_19CAAA0F4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_19C4D8970(v24, v35);
      }
      else
      {
        sub_19C4D8980((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_19CAAA298();
      sub_19CAA9920();
      result = sub_19CAAA2C8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_19C4D8970(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54E424(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4240F0);
  v37 = a2;
  v6 = sub_19CAAA0F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_19CAAA298();
    sub_19CAA9920();
    result = sub_19CAAA2C8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_19C54E734(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  char v33;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424110);
  v33 = a2;
  result = sub_19CAAA0F4();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v32 = (_QWORD *)(v4 + 64);
    v8 = 1 << *(_BYTE *)(v4 + 32);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 64);
    v31 = (unint64_t)(v8 + 63) >> 6;
    v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v7 << 6);
      }
      else
      {
        v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = v4 + 64;
        if (v16 >= v31)
          goto LABEL_35;
        v17 = v32[v16];
        ++v7;
        if (!v17)
        {
          v7 = v16 + 1;
          if (v16 + 1 >= v31)
            goto LABEL_35;
          v17 = v32[v7];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v31)
            {
LABEL_35:
              if ((v33 & 1) != 0)
              {
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 >= 64)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v17 = v32[v18];
            if (!v17)
            {
              while (1)
              {
                v7 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_43;
                if (v7 >= v31)
                  goto LABEL_35;
                v17 = v32[v7];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v7 = v18;
          }
        }
LABEL_21:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      v22 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15);
      if ((v33 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_19CAAA298();
      sub_19CAAA2A4();
      sub_19CAAA2B0();
      if (v20)
        sub_19CAAA2A4();
      result = sub_19CAAA2C8();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v12) = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v2 = v6;
  return result;
}

uint64_t sub_19C54EA3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424120);
  v6 = a2;
  v7 = sub_19CAAA0F4();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_33;
        v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_33;
          v24 = v37[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v36)
                  goto LABEL_33;
                v24 = v37[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v38 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34 = *((id *)&v38 + 1);
      }
      sub_19CAAA298();
      sub_19CAA9920();
      result = sub_19CAAA2C8();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v38;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_19C54ED50(void *a1, char a2, __int128 *a3, _QWORD *a4)
{
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  sub_19CAAA298();
  sub_19CAAA2A4();
  sub_19CAAA2A4();
  v8 = a1;
  sub_19CAA9DC4();

  sub_19CAAA2C8();
  v9 = sub_19CAA9EF0();
  *(_QWORD *)((char *)a4 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  v10 = a4[6] + 16 * v9;
  *(_QWORD *)v10 = a1;
  *(_BYTE *)(v10 + 8) = a2;
  result = sub_19C4F0F68(a3, a4[7] + 40 * v9);
  ++a4[2];
  return result;
}

__n128 sub_19C54EE3C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 result;
  __int128 v23;
  __int128 v24;

  sub_19CAAA298();
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, *(_QWORD *)(a1 + 24));
  sub_19CAA983C();
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = v6 + 32;
    do
    {
      v10 = *(_QWORD *)(v9 + 16 * v8);
      sub_19CAAA2A4();
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        v12 = v10 + 32;
        do
        {
          v12 += 8;
          sub_19CAAA2A4();
          --v11;
        }
        while (v11);
      }
      ++v8;
      sub_19CAAA2A4();
    }
    while (v8 != v7);
  }
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = 0;
    v16 = v13 + 32;
    do
    {
      v17 = *(_QWORD *)(v16 + 16 * v15);
      sub_19CAAA2A4();
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v19 = v17 + 32;
        do
        {
          v19 += 8;
          sub_19CAAA2A4();
          --v18;
        }
        while (v18);
      }
      ++v15;
      sub_19CAAA2A4();
    }
    while (v15 != v14);
  }
  sub_19CAAA2C8();
  v20 = sub_19CAA9EF0();
  *(_QWORD *)((char *)a3 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
  v21 = a3[6] + 56 * v20;
  result = *(__n128 *)a1;
  v23 = *(_OWORD *)(a1 + 16);
  v24 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = v24;
  *(__n128 *)v21 = result;
  *(_QWORD *)(a3[7] + 8 * v20) = a2;
  ++a3[2];
  return result;
}

id sub_19C54F00C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424130);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (id)swift_release();
LABEL_26:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_28;
    if (v9 >= v13)
    {
LABEL_24:
      result = (id)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v23 = *(_QWORD *)(v6 + 8 * v9);
    if (!v23)
      break;
LABEL_23:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(void **)v17;
    v19 = *(_BYTE *)(v17 + 8);
    v20 = 40 * v15;
    sub_19C4F0F24(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v19;
    sub_19C4F0F68(v26, *(_QWORD *)(v4 + 56) + v20);
    result = v18;
  }
  v24 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19C54F1E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423438);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19C54F36C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424150);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19C54F518()
{
  return sub_19C54FC64(&qword_1EE423440);
}

void *sub_19C54F524()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F40);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19C54F6CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _OWORD v26[3];
  uint64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423F50);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 56 * v15;
    sub_19C5325B8(*(_QWORD *)(v2 + 48) + 56 * v15, (uint64_t)v26);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v19 = *(_QWORD *)(v4 + 48) + v17;
    v20 = v27;
    v21 = v26[2];
    v22 = v26[1];
    *(_OWORD *)v19 = v26[0];
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)(v19 + 32) = v21;
    *(_QWORD *)(v19 + 48) = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19C54F8AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  _QWORD *v22;
  __int128 v23;
  _OWORD *v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424118);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    v21 = (__int128 *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v23 = *v21;
    v29 = v21[1];
    v30 = v21[2];
    *v22 = v19;
    v22[1] = v18;
    v24 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v24 = v23;
    v24[1] = v29;
    v24[2] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = (id)v30;
    result = *((id *)&v30 + 1);
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19C54FAC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423FD0);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19C54FC64(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_19CAAA0E8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19C54FE00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424108);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19C54FFB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424100);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v22 = *(void **)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v18;
    v23[1] = v19;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v22;
    v24[1] = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    result = v22;
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19C550178()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4240F8);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_19C4D8980(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_19C4D8970(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_19C55035C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4240F0);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_19C550514()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424110);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_19C5506C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424120);
  v2 = *v0;
  v3 = sub_19CAAA0E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = *((id *)&v24 + 1);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19C55088C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F48);
    v2 = sub_19CAAA100();
    v18 = v2;
    sub_19CAAA088();
    v3 = sub_19CAAA0A0();
    if (v3)
    {
      v4 = v3;
      sub_19C535F80(0, &qword_1EE423E68);
      do
      {
        swift_dynamicCast();
        sub_19C535F80(0, &qword_1EE423F30);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_19C54D83C(v12 + 1, 1, &qword_1EE423F48);
          v2 = v18;
        }
        result = sub_19CAA9DAC();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_19CAAA0A0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

id sub_19C550AE4(__int128 *a1, void *a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v9 = (_QWORD *)*v4;
  v11 = sub_19C54B840(a2, a3);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = v9[3];
    if (v16 >= v14 && (a4 & 1) != 0)
    {
LABEL_7:
      v17 = *v5;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v18 = v17[7] + 40 * v11;
        __swift_destroy_boxed_opaque_existential_0(v18);
        return (id)sub_19C4F0F68(a1, v18);
      }
      goto LABEL_11;
    }
    if (v16 >= v14 && (a4 & 1) == 0)
    {
      sub_19C54F00C();
      goto LABEL_7;
    }
    sub_19C54C580(v14, a4 & 1);
    v20 = sub_19C54B840(a2, a3);
    if ((v15 & 1) == (v21 & 1))
    {
      v11 = v20;
      v17 = *v5;
      if ((v15 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19C551550(v11, (uint64_t)a2, a3, a1, v17);
      return a2;
    }
  }
  result = (id)sub_19CAAA244();
  __break(1u);
  return result;
}

uint64_t sub_19C550C24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19C54B808(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_19C54F524();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_unknownObjectRelease();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_19C54CD34(result, a4 & 1);
  result = sub_19C54B808(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CAAA244();
  __break(1u);
  return result;
}

uint64_t sub_19C550D60(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _OWORD v28[3];
  uint64_t v29;

  v4 = v3;
  v8 = *v3;
  v10 = sub_19C54B8C0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_19C54F6CC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_19C54CFF4(v13, a3 & 1);
  v19 = sub_19C54B8C0(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    result = sub_19CAAA244();
    __break(1u);
    return result;
  }
  v10 = v19;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  result = sub_19C5325B8((uint64_t)a2, (uint64_t)v28);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v21 = v16[6] + 56 * v10;
  v22 = v29;
  v23 = v28[2];
  v24 = v28[1];
  *(_OWORD *)v21 = v28[0];
  *(_OWORD *)(v21 + 16) = v24;
  *(_OWORD *)(v21 + 32) = v23;
  *(_QWORD *)(v21 + 48) = v22;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v25 = v16[2];
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v27;
  return result;
}

uint64_t sub_19C550EC8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_19C54B808(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_19C54FAC4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_19C54D588(result, a3 & 1);
  result = sub_19C54B808(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CAAA244();
  __break(1u);
  return result;
}

uint64_t sub_19C551000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_19C54B7A4(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_19C54FFB0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 16 * v14;

      result = swift_release();
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19C54DE14(v17, a5 & 1);
  v23 = sub_19C54B7A4(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CAAA244();
  __break(1u);
  return result;
}

_OWORD *sub_19C55117C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_19C54B7A4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_19C4D8970(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_19C550178();
      goto LABEL_7;
    }
    sub_19C54E128(v15, a4 & 1);
    v21 = sub_19C54B7A4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_19C5515C0(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_19CAAA244();
  __break(1u);
  return result;
}

uint64_t sub_19C5512AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19C54B7A4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_19C55035C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_19C54E424(v15, a4 & 1);
  v21 = sub_19C54B7A4(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CAAA244();
  __break(1u);
  return result;
}

uint64_t sub_19C55140C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_19C54BB28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_19C550514();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (uint64_t *)(v18[6] + 16 * v12);
    *v21 = a2;
    v21[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_19C54E734(result, a4 & 1);
  result = sub_19C54BB28(a2, a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_19CAAA244();
  __break(1u);
  return result;
}

uint64_t sub_19C551550(unint64_t a1, uint64_t a2, char a3, __int128 *a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = a5[6] + 16 * a1;
  *(_QWORD *)v6 = a2;
  *(_BYTE *)(v6 + 8) = a3;
  result = sub_19C4F0F68(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_19C5515C0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_19C4D8970(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_19C551628(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_19C551670@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  return result;
}

uint64_t sub_19C55167C()
{
  return sub_19C5516E0(&qword_1EE423DF8, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A64);
}

uint64_t sub_19C551690()
{
  return sub_19C5516E0(&qword_1EE423E00, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535A80);
}

uint64_t sub_19C5516A4()
{
  return sub_19C5516E0((uint64_t *)&unk_1EE423FC0, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535BD4);
}

uint64_t sub_19C5516B8()
{
  return sub_19C5516E0(&qword_1EE423E10, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535D54);
}

uint64_t sub_19C5516CC()
{
  return sub_19C5516E0(&qword_1EE423E08, (void (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_19C535D74);
}

uint64_t sub_19C5516E0(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t result;

  v4 = *v2;
  v5 = (uint64_t *)(*v2 + 16);
  v6 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v7 = swift_allocObject();
  v8 = *(_OWORD *)(v4 + 24);
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  if ((uint64_t)v8 >= 1)
    a2(v7 + 16, v7 + 40, v5, v4 + 40);
  result = swift_release();
  *v2 = v7;
  return result;
}

unint64_t sub_19C551770(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423FD0);
  v3 = (_QWORD *)sub_19CAAA10C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_19C54B808(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_19C54B808(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_19C55186C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v6;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  os_unfair_lock_s *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_19C5570B8(0, v6, 0);
    v8 = v29;
    v9 = (unsigned __int8 *)(a1 + 41);
    v25 = *(_QWORD *)(a2 + 16);
    while (1)
    {
      v27 = v8;
      v10 = v4;
      v11 = *(_QWORD *)(v9 - 9);
      v12 = *(v9 - 1);
      v13 = *v9;
      v14 = swift_bridgeObjectRetain();
      v15 = (void *)MEMORY[0x1A1AD6338](v14);
      if (qword_1EE422E90 != -1)
        swift_once();
      v16 = (_QWORD *)((char *)off_1EE423CB0 + 16);
      v17 = (os_unfair_lock_s *)((char *)off_1EE423CB0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)off_1EE423CB0 + 6);
      v18 = v13 ? 256 : 0;
      sub_19C52C540(v16, v25, v11, v18 | v12, 0, 1, &v28);
      if (v10)
        break;
      v4 = 0;
      os_unfair_lock_unlock(v17);
      v19 = v28;
      objc_autoreleasePoolPop(v15);
      type metadata accessor for MetalBufferStorage();
      v20 = swift_allocObject();
      *(_BYTE *)(v20 + 48) = v12;
      *(_BYTE *)(v20 + 49) = v13;
      *(_QWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = a3;
      *(_QWORD *)(v20 + 40) = v11;
      *(_QWORD *)(v20 + 32) = &off_1E3D45330;
      v21 = qword_1EE422E48;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v21 != -1)
        swift_once();
      v22 = sub_19C541310;
      if (!byte_1EE4317CB)
        v22 = 0;
      *(_QWORD *)(v20 + 56) = v22;
      *(_QWORD *)(v20 + 64) = 0;
      swift_bridgeObjectRelease();
      v8 = v27;
      v29 = v27;
      v24 = *(_QWORD *)(v27 + 16);
      v23 = *(_QWORD *)(v27 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_19C5570B8(v23 > 1, v24 + 1, 1);
        v8 = v29;
      }
      *(_QWORD *)(v8 + 16) = v24 + 1;
      *(_QWORD *)(v8 + 8 * v24 + 32) = v20;
      v9 += 16;
      if (!--v6)
        return;
    }
    os_unfair_lock_unlock(v17);
    __break(1u);
  }
}

unint64_t sub_19C551A9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  __int128 v6;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _OWORD *v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F40);
  v3 = (_QWORD *)sub_19CAAA10C();
  v4 = *(_QWORD *)(a1 + 32);
  v14 = *(_OWORD *)(a1 + 40);
  result = sub_19C54B808(v4);
  v6 = v14;
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = (_OWORD *)((char *)v8 + 24);
    v4 = *((_QWORD *)v8 - 1);
    v15 = *v8;
    swift_unknownObjectRetain();
    result = sub_19C54B808(v4);
    v8 = v12;
    v6 = v15;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_19C551BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE423F38;
  if (!qword_1EE423F38)
  {
    v1 = sub_19C535F80(255, &qword_1EE423E68);
    result = MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE423F38);
  }
  return result;
}

uint64_t sub_19C551C00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551C2C()
{
  return sub_19C54B5A4();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_19C551C4C()
{
  return swift_deallocObject();
}

uint64_t sub_19C551C5C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19C551C84(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19C551CAC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551CD0()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C551CD8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19C551D20(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19C551D68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551D9C()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C551DA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551DC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551DFC(uint64_t a1)
{
  sub_19C50E9CC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_19C551E28(uint64_t a1)
{
  sub_19C50E9E8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_19C551E54()
{
  uint64_t v0;

  sub_19C50E9E8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551E8C()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C551E94()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C551E9C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19C551EFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551F40()
{
  return objectdestroy_23Tm();
}

uint64_t objectdestroy_53Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551F80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551FAC()
{
  return objectdestroy_23Tm();
}

uint64_t objectdestroy_23Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C551FEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_19C552018()
{
  unint64_t result;

  result = qword_1EE4240A0;
  if (!qword_1EE4240A0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAE9458, &type metadata for BinaryComparisonOperator);
    atomic_store(result, (unint64_t *)&qword_1EE4240A0);
  }
  return result;
}

uint64_t sub_19C55205C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C552088(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_19C5520BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE4240E0;
  if (!qword_1EE4240E0)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1A1AD76AC](&unk_19CAE78FC, v1);
    atomic_store(result, (unint64_t *)&qword_1EE4240E0);
  }
  return result;
}

uint64_t sub_19C552104(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_19C55214C(uint64_t a1)
{
  unint64_t result;

  result = sub_19C552018();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_19C552170(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

CoreML::MLOptimizationHints __swiftcall MLOptimizationHints.init()()
{
  uint64_t v0;
  CoreML::MLOptimizationHints result;

  *(_BYTE *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0x3FF0000000000000;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

CoreML::MLOptimizationHints::ReshapeFrequency_optional __swiftcall MLOptimizationHints.ReshapeFrequency.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (CoreML::MLOptimizationHints::ReshapeFrequency_optional)rawValue;
}

uint64_t MLOptimizationHints.ReshapeFrequency.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void MLOptimizationHints.reshapeFrequency.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *MLOptimizationHints.reshapeFrequency.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*MLOptimizationHints.reshapeFrequency.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

double MLOptimizationHints.hotHandDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void MLOptimizationHints.hotHandDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*MLOptimizationHints.hotHandDuration.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void MLOptimizationHints.specializationStrategy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *MLOptimizationHints.specializationStrategy.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MLOptimizationHints.specializationStrategy.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t _s6CoreML19MLOptimizationHintsV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1])
    return (*((unsigned __int8 *)a2 + 16) ^ *((unsigned __int8 *)a1 + 16) ^ 1) & 1;
  else
    return 0;
}

unint64_t sub_19C552630()
{
  unint64_t result;

  result = qword_1EE424158;
  if (!qword_1EE424158)
  {
    result = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLOptimizationHints.ReshapeFrequency, &type metadata for MLOptimizationHints.ReshapeFrequency);
    atomic_store(result, (unint64_t *)&qword_1EE424158);
  }
  return result;
}

unint64_t sub_19C552678()
{
  unint64_t result;

  result = qword_1EE424160;
  if (!qword_1EE424160)
  {
    result = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLOptimizationHints.SpecializationStrategy, &type metadata for MLOptimizationHints.SpecializationStrategy);
    atomic_store(result, (unint64_t *)&qword_1EE424160);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MLOptimizationHints(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MLOptimizationHints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLOptimizationHints()
{
  return &type metadata for MLOptimizationHints;
}

ValueMetadata *type metadata accessor for MLOptimizationHints.ReshapeFrequency()
{
  return &type metadata for MLOptimizationHints.ReshapeFrequency;
}

uint64_t _s6CoreML19MLOptimizationHintsV16ReshapeFrequencyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19C5527B4 + 4 * byte_19CAEB5F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19C5527E8 + 4 * byte_19CAEB5F0[v4]))();
}

uint64_t sub_19C5527E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19C5527F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19C5527F8);
  return result;
}

uint64_t sub_19C552804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19C55280CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19C552810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19C552818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLOptimizationHints.SpecializationStrategy()
{
  return &type metadata for MLOptimizationHints.SpecializationStrategy;
}

uint64_t sub_19C55283C(uint64_t a1)
{
  sub_19CAA9AA0();
  return a1;
}

uint64_t sub_19C552864(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;

  v2 = *(_QWORD *)(result + 16);
  v3 = a2[2];
  if (v3 < v2)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (!v2)
    return 0;
  v4 = result;
  v5 = *(_QWORD *)(result + 32);
  v6 = a2[4];
  result = v5 * v6;
  if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
    goto LABEL_21;
  if (v2 != 1 && v3 != 1)
  {
    v7 = (uint64_t *)(v4 + 40);
    if (v3 <= 1)
      v8 = 1;
    else
      v8 = a2[2];
    v9 = a2 + 5;
    v10 = v3 - 2;
    v11 = v8 - 1;
    v12 = v2 - 2;
    while (v11)
    {
      v13 = v10;
      v14 = *v7 * *v9;
      if ((unsigned __int128)(*v7 * (__int128)*v9) >> 64 != v14 >> 63)
        goto LABEL_18;
      v15 = __OFADD__(result, v14);
      result += v14;
      if (v15)
        goto LABEL_19;
      if (v12)
      {
        ++v9;
        ++v7;
        v10 = v13 - 1;
        --v11;
        --v12;
        if (v13)
          continue;
      }
      return result;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t MLShapedArray.init(bytesNoCopy:shape:strides:deallocator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v31 = a7;
  v13 = sub_19CAA9608();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DataStorage(0, a5, a6, v17);
  v29 = a3;
  v18 = sub_19C5937DC(a2, a3);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v30 = a4;
  v19(v16, a4, v13);
  sub_19CAA95FC();
  if (v18)
  {
    sub_19CAA95B4();
    swift_allocObject();
    swift_retain();
    v20 = sub_19CAA9584();
    v18 = sub_19C559C6C(v20, v18);
    v22 = v21;
    swift_release();
  }
  else
  {
    v23 = (void (*)(uint64_t, _QWORD))sub_19CAA95FC();
    v23(a1, 0);
    swift_release();
    swift_release();
    v22 = 0xC000000000000000;
  }
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v16, v13);
  v25 = sub_19C5938FC(v18, v22, a2, v29);
  result = ((uint64_t (*)(uint64_t, uint64_t))v24)(v30, v13);
  v27 = v31;
  *v31 = v25;
  v27[1] = (uint64_t)&off_1E3D43E30;
  return result;
}

uint64_t MLShapedArray.init(unsafeUninitializedShape:initializingWith:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    v10 = sub_19CAA9A58();
    *(_QWORD *)(v10 + 16) = v9;
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v17 = 0;
  v16[0] = v10 + 32;
  v16[1] = v9;
  sub_19C59373C(v16, &v17, a1);
  if (!v4)
  {
    if (v9 >= v17)
    {
      *(_QWORD *)(v10 + 16) = v17;
      swift_bridgeObjectRelease();
      v12 = type metadata accessor for StandardStorage(0, a2, a3, v11);
      MEMORY[0x1E0C80A78](v12);
      swift_bridgeObjectRetain();
      v13 = sub_19C528138(a1, v10);
      result = swift_bridgeObjectRelease();
      *a4 = v13;
      a4[1] = (uint64_t)&off_1E3D456D0;
      return result;
    }
    __break(1u);
  }
  v15 = v17;
  if (v9 < v17)
    __break(1u);
  *(_QWORD *)(v10 + 16) = v15;
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t MLShapedArray.init(scalar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  type metadata accessor for StandardStorage(0, a2, a3, a4);
  sub_19C556F60(a2, a2);
  v8 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v9 = sub_19CAA9A1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  v11 = sub_19CAA9AA0();
  v14 = v9;
  MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEAF38], v11);
  v12 = sub_19C528948(MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], (uint64_t)&v14, v11);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  *a5 = v12;
  a5[1] = (uint64_t)&off_1E3D456D0;
  return result;
}

uint64_t MLShapedArray.init(data:shape:strides:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t result;

  type metadata accessor for DataStorage(0, a5, a6, a4);
  result = sub_19C5938FC(a1, a2, a3, a4);
  *a7 = result;
  a7[1] = (uint64_t)&off_1E3D43E30;
  return result;
}

uint64_t MLShapedArray.init<A>(scalars:shape:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  uint64_t v20;

  v12 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    v13 = sub_19CAA9A58();
    *(_QWORD *)(v13 + 16) = v12;
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v19[1] = v12;
  v20 = 0;
  v19[0] = v13 + 32;
  sub_19C59373C(v19, &v20, a2);
  v14 = v20;
  v15 = v12 < v20;
  if (v12 < v20)
  {
    __break(1u);
    if (v15)
      __break(1u);
    *(_QWORD *)(v13 + 16) = v14;
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + 16) = v20;
    swift_bridgeObjectRelease();
    type metadata accessor for StandardStorage(0, a3, a5, v16);
    v17 = sub_19C528948(a2, v13, a1, a4);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
    *a6 = v17;
    a6[1] = (uint64_t)&off_1E3D456D0;
  }
  return result;
}

uint64_t sub_19C552F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v17[2] = a3;
  v17[3] = a4;
  v17[4] = a5;
  v8 = sub_19C535F80(0, (unint64_t *)&qword_1EE424440);
  v10 = sub_19C4D1248((void (*)(char *, char *))sub_19C55AFD8, (uint64_t)v17, a3, v8, MEMORY[0x1E0DEDCE8], a4, MEMORY[0x1E0DEDD18], v9);
  if (v10 >> 62)
  {
    result = sub_19CAAA0DC();
    if (result)
      goto LABEL_3;
  }
  else
  {
    result = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
    {
LABEL_3:
      swift_getAssociatedTypeWitness();
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
      v15 = (void *)sub_19CAA99EC();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend((id)objc_opt_self(), sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v15, a2, v14);

      return (uint64_t)v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t MLShapedArray.init<A>(reshaping:to:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  type metadata accessor for ReshapedStorage(0, a3, a4, a3);
  v9 = sub_19C4EB790(a1, a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  *a5 = v9;
  a5[1] = (uint64_t)&off_1E3D45458;
  return result;
}

uint64_t sub_19C553138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;

  v30 = a4;
  v28 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 64);
  v29 = v6;
  v12 = v10(v11, v9);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = (uint64_t *)(v12 + 32);
    v15 = MEMORY[0x1E0DEE9D8];
    do
    {
      v19 = *v14++;
      v18 = v19;
      if (v19 != 1)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v31 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19C556FD0(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v31;
        }
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_19C556FD0(v16 > 1, v17 + 1, 1);
          v15 = v31;
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        *(_QWORD *)(v15 + 8 * v17 + 32) = v18;
      }
      --v13;
    }
    while (v13);
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v21 = v28;
  v22 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v8, v29, a2);
  type metadata accessor for ReshapedStorage(0, a2, a3, v23);
  v24 = sub_19C4EB790((uint64_t)v8, v15);
  v25 = *(void (**)(char *, uint64_t))(v21 + 8);
  v25(v8, a2);
  result = ((uint64_t (*)(uint64_t, uint64_t))v25)(v22, a2);
  v27 = v30;
  *v30 = v24;
  v27[1] = (uint64_t)&off_1E3D45458;
  return result;
}

uint64_t sub_19C5532E4@<X0>(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  unint64_t v21;

  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(v14, v13);
  v21 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) >= a2)
  {
    sub_19C50358C(a2, a2, 1);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, a1, a3);
    v16 = v21;
    type metadata accessor for ReshapedStorage(0, a3, a4, v17);
    swift_bridgeObjectRetain();
    v18 = sub_19C4EB790((uint64_t)v12, v16);
    v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v12, a3);
    v19(a1, a3);
    result = swift_bridgeObjectRelease();
    *a5 = v18;
    a5[1] = (uint64_t)&off_1E3D45458;
    return result;
  }
  __break(1u);
  return result;
}

double sub_19C553414@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  double result;
  __int128 v19;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v12, v11) + 16);
  swift_bridgeObjectRelease();
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    *(_QWORD *)&v19 = MEMORY[0x1E0DEE9D8];
    sub_19C556FD0(0, v13, 0);
    v14 = v19;
    v15 = v13 - 1;
    do
    {
      *(_QWORD *)&v19 = v14;
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_19C556FD0(v16 > 1, v17 + 1, 1);
        v14 = v19;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      *(_QWORD *)(v14 + 8 * v17 + 32) = v15--;
    }
    while (v15 != -1);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  sub_19C55356C((uint64_t)v10, v14, a2, a3, (uint64_t *)&v19);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  result = *(double *)&v19;
  *a4 = v19;
  return result;
}

uint64_t sub_19C55356C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  type metadata accessor for TransposedStorage(0, a3, a4, a3);
  v9 = sub_19C5241D8(a1, a2);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  *a5 = v9;
  a5[1] = (uint64_t)&off_1E3D46260;
  return result;
}

uint64_t MLShapedArray.init(mutating:shape:)@<X0>(__CVBuffer *a1@<X0>, uint64_t a2@<X1>, size_t *a3@<X8>)
{
  size_t v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424170);
  swift_allocObject();
  v6 = sub_19C559EFC(a1, a2, 1);

  result = swift_bridgeObjectRelease();
  *a3 = v6;
  a3[1] = (size_t)&off_1E3D468D0;
  return result;
}

uint64_t MLShapedArray.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, size_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  __CVBuffer *v34;
  __CVBuffer *v35;
  size_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  size_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  size_t *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56[2];

  v8 = sub_19CAA9608();
  v52 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v51 = (uint64_t *)((char *)&v46 - v12);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  if ((id)v13 == objc_msgSend(a1, sel_dataType))
  {
    v14 = objc_msgSend(a1, sel_shape);
    v54 = sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
    v13 = sub_19CAA99F8();

    v47 = v11;
    if (!(v13 >> 62))
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v15 = sub_19CAAA0DC();
  swift_bridgeObjectRelease();
LABEL_4:
  v53 = a4;
  v55 = a1;
  v49 = a3;
  v50 = v8;
  v48 = a2;
  if (v15)
  {
    v56[0] = MEMORY[0x1E0DEE9D8];
    result = sub_19C556FD0(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_35;
    }
    v17 = 0;
    v18 = v56[0];
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1A1AD4A9C](v17, v13);
      else
        v19 = *(id *)(v13 + 8 * v17 + 32);
      v20 = v19;
      v21 = objc_msgSend(v19, sel_integerValue);

      v56[0] = v18;
      v23 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_19C556FD0(v22 > 1, v23 + 1, 1);
        v18 = v56[0];
      }
      ++v17;
      *(_QWORD *)(v18 + 16) = v23 + 1;
      *(_QWORD *)(v18 + 8 * v23 + 32) = v21;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    a1 = v55;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v24 = objc_msgSend(a1, sel_strides);
  v25 = sub_19CAA99F8();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
    if (v26)
    {
LABEL_17:
      v56[0] = MEMORY[0x1E0DEE9D8];
      result = sub_19C556FD0(0, v26 & ~(v26 >> 63), 0);
      if ((v26 & 0x8000000000000000) == 0)
      {
        v27 = 0;
        v28 = v56[0];
        do
        {
          if ((v25 & 0xC000000000000001) != 0)
            v29 = (id)MEMORY[0x1A1AD4A9C](v27, v25);
          else
            v29 = *(id *)(v25 + 8 * v27 + 32);
          v30 = v29;
          v31 = objc_msgSend(v29, sel_integerValue);

          v56[0] = v28;
          v33 = *(_QWORD *)(v28 + 16);
          v32 = *(_QWORD *)(v28 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_19C556FD0(v32 > 1, v33 + 1, 1);
            v28 = v56[0];
          }
          ++v27;
          *(_QWORD *)(v28 + 16) = v33 + 1;
          *(_QWORD *)(v28 + 8 * v33 + 32) = v31;
        }
        while (v26 != v27);
        swift_bridgeObjectRelease();
        a1 = v55;
        goto LABEL_30;
      }
LABEL_35:
      __break(1u);
      return result;
    }
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v26)
      goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  v28 = MEMORY[0x1E0DEE9D8];
LABEL_30:
  v34 = (__CVBuffer *)objc_msgSend(a1, sel_pixelBuffer);
  if (v34)
  {
    v35 = v34;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424170);
    swift_allocObject();
    v36 = sub_19C559EFC(v35, v18, 0);

    result = swift_bridgeObjectRelease();
    v37 = &off_1E3D468D0;
  }
  else
  {
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = a1;
    v40 = v51;
    v39 = v52;
    *v51 = nullsub_1;
    v40[1] = v38;
    v41 = v50;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v39 + 104))(v40, *MEMORY[0x1E0CB00D8], v50);
    v42 = objc_retainAutorelease(a1);
    v43 = objc_msgSend(v42, sel_bytes);
    v44 = (uint64_t)v47;
    (*(void (**)(char *, _QWORD *, uint64_t))(v39 + 16))(v47, v40, v41);
    MLShapedArray.init(bytesNoCopy:shape:strides:deallocator:)((uint64_t)v43, v18, v28, v44, v48, v49, v56);

    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v39 + 8))(v40, v41);
    v36 = v56[0];
    v37 = (_UNKNOWN **)v56[1];
  }
  v45 = v53;
  *v53 = v36;
  v45[1] = (size_t)v37;
  return result;
}

uint64_t MLShapedArray.shape.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_19C553B6C(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;

  v2 = *(_QWORD *)(result + 16);
  if (a2[2] >= v2)
  {
    v3 = a2;
    v13 = result + 32;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = v2 == 0;
    if (v2)
      goto LABEL_4;
LABEL_3:
    v16 = 0u;
    v17 = 0u;
    v4 = v2;
    v15 = 0u;
    while (1)
    {
      sub_19C55AF90((uint64_t)&v15, (uint64_t)&v18);
      if (!v20)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v3;
      }
      v6 = v18;
      sub_19C4F0F68(&v19, (uint64_t)&v15);
      v7 = *((_QWORD *)&v16 + 1);
      v8 = v17;
      result = (uint64_t)__swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
      if ((v6 & 0x8000000000000000) != 0)
        break;
      if (v6 >= v3[2])
        goto LABEL_16;
      v9 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v8 + 8))(v3[2 * v6 + 4], v3[2 * v6 + 5], v7, v8);
      v11 = v10;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503564(v3);
        v3 = (_QWORD *)result;
      }
      if (v6 >= v3[2])
        goto LABEL_17;
      v12 = &v3[2 * v6];
      v12[4] = v9;
      v12[5] = v11;
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v15);
      v5 = v4 >= v2;
      if (v4 == v2)
        goto LABEL_3;
LABEL_4:
      if (v5)
        goto LABEL_18;
      sub_19C4F0F24(v13 + 40 * v4, (uint64_t)v14);
      *(_QWORD *)&v15 = v4;
      sub_19C4F0F68(v14, (uint64_t)&v15 + 8);
      ++v4;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MLShapedArray.strides.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

BOOL sub_19C553D50(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >= *(_QWORD *)(a1 + 8);
}

uint64_t MLShapedArray.withUnsafeShapedBufferPointer<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = *(_QWORD *)(v4 + 8);
  ObjectType = swift_getObjectType();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
  v12 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(a3 + 16);
  v17 = a4;
  v18 = v12;
  v19 = a1;
  v20 = a2;
  v21 = v10;
  v22 = v11;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), _BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 32))(sub_19C55A054, v15, a4, ObjectType, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19C553E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1) & 1) != 0)
    return swift_isUniquelyReferenced_nonNull() ^ 1;
  else
    return 1;
}

uint64_t MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t ObjectType;
  void (*v19)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD v21[10];

  v6 = v5;
  v21[9] = a5;
  if ((sub_19C553E44() & 1) != 0)
  {
    v12 = *(_QWORD *)(a3 + 16);
    v13 = *(_QWORD *)(a3 + 24);
    type metadata accessor for StandardStorage(0, v12, v13, v11);
    v14 = v5[1];
    v15 = swift_unknownObjectRetain();
    v16 = sub_19C5289B0(v15, v14, 0);
    swift_unknownObjectRelease_n();
    v17 = &off_1E3D456D0;
    *v6 = v16;
    v6[1] = (uint64_t)&off_1E3D456D0;
  }
  else
  {
    v17 = (_UNKNOWN **)v5[1];
    v12 = *(_QWORD *)(a3 + 16);
    v13 = *(_QWORD *)(a3 + 24);
  }
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  v21[2] = v12;
  v21[3] = a4;
  v21[4] = v13;
  v21[5] = v6;
  v21[6] = a1;
  v21[7] = a2;
  v19 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v17[5];
  swift_unknownObjectRetain();
  v19(sub_19C55A0BC, v21, a4, ObjectType, v17);
  return swift_unknownObjectRelease();
}

uint64_t MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(using:_:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t result;
  uint64_t v36;
  _QWORD v37[9];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;

  v7 = v5;
  v39 = a2;
  v11 = *a1;
  v12 = v5[1];
  ObjectType = swift_getObjectType();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
  v15 = v14;
  v40 = a3;
  if (!v11)
    goto LABEL_10;
  v38 = v6;
  if (v11 != 1)
  {
    v18 = (_QWORD *)v11;
    goto LABEL_19;
  }
  v16 = *(_QWORD *)(v14 + 16);
  if (!v16)
  {
    v19 = 0;
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  v17 = sub_19CAA9A58();
  v18 = (_QWORD *)v17;
  *(_QWORD *)(v17 + 16) = v16;
  v19 = *(_QWORD *)(v15 + 16);
  if (!v19)
  {
LABEL_18:
    v18[2] = v19;
LABEL_19:
    sub_19C4D5950(v11);
    swift_bridgeObjectRelease();
    if ((sub_19C553E44() & 1) != 0
      || (v24 = (_UNKNOWN **)v7[1],
          v25 = swift_getObjectType(),
          v26 = (_QWORD *)((uint64_t (*)(uint64_t, _UNKNOWN **))v24[2])(v25, v24),
          v27 = sub_19C4D4494(v26, v18),
          swift_bridgeObjectRelease(),
          !v27))
    {
      v28 = *(_QWORD *)(a4 + 16);
      v29 = *(_QWORD *)(a4 + 24);
      type metadata accessor for StandardStorage(0, v28, v29, v23);
      v30 = v7[1];
      v31 = swift_unknownObjectRetain();
      v32 = sub_19C5289B0(v31, v30, (uint64_t)v18);
      swift_unknownObjectRelease_n();
      v24 = &off_1E3D456D0;
      *v7 = v32;
      v7[1] = (uint64_t)&off_1E3D456D0;
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(a4 + 16);
      v29 = *(_QWORD *)(a4 + 24);
    }
    v33 = swift_getObjectType();
    MEMORY[0x1E0C80A78](v33);
    v37[2] = v28;
    v37[3] = a5;
    v37[4] = v29;
    v37[5] = v7;
    v37[6] = v39;
    v37[7] = v40;
    v34 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v24[5];
    swift_unknownObjectRetain();
    v34(sub_19C55A0BC, v37, a5, v33, v24);
    return swift_unknownObjectRelease();
  }
  v20 = 0;
  v21 = 1;
  do
  {
    *(_QWORD *)(v17 + 8 * v20 + 32) = v21;
    v22 = *(_QWORD *)(v15 + 32 + 8 * v20);
    if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
    {
      __break(1u);
      goto LABEL_25;
    }
    ++v20;
    v21 *= v22;
  }
  while (v19 != v20);
  if (v16 >= v19)
    goto LABEL_18;
  __break(1u);
LABEL_10:
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v18 = (_QWORD *)sub_19CAA9A58();
    v18[2] = v16;
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v42 = 0;
  v41[0] = v18 + 4;
  v41[1] = v16;
  sub_19C59373C(v41, &v42, v15);
  if (!v6)
  {
    v19 = v42;
    if (v16 >= v42)
    {
      v38 = 0;
      goto LABEL_18;
    }
LABEL_25:
    __break(1u);
  }
  v36 = v42;
  if (v16 < v42)
    __break(1u);
  v18[2] = v36;
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_19C5542A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a5;
  v27 = a6;
  v10 = *(_QWORD *)(a7 - 8);
  result = MEMORY[0x1E0C80A78]();
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v15 < 0)
    goto LABEL_20;
  if (!a4)
    return result;
  if (v12[2] < 2uLL)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  v16 = 0;
  v17 = v12[5];
  v24 = v12[4];
  while (2)
  {
    if (v16 == a4)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v18 = v16 * v24;
    if ((unsigned __int128)(v16 * (__int128)v24) >> 64 != (v16 * v24) >> 63)
    {
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v19 = 0;
    v25 = v16 + 1;
    do
    {
      v20 = v19 * v17;
      if ((unsigned __int128)(v19 * (__int128)v17) >> 64 != (v19 * v17) >> 63)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      v21 = v18 + v20;
      if (__OFADD__(v18, v20))
        goto LABEL_17;
      v22 = v19 + 1;
      if (v16 == v19)
        v23 = v27;
      else
        v23 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v23, a7);
      result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 40))(a1 + *(_QWORD *)(v10 + 72) * v21, v14, a7);
      v19 = v22;
    }
    while (a4 != v22);
    v16 = v25;
    if (v25 != a4)
      continue;
    return result;
  }
}

uint64_t MLShapedArray.withPixelBufferIfAvailable<A>(_:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  type metadata accessor for PixelBufferStorage(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  if (!swift_dynamicCastClass())
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  swift_unknownObjectRetain();
  sub_19C52BA7C(a1);
  if (!v4)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 0, 1, a3);
  return swift_unknownObjectRelease();
}

double MLShapedArray.init<A>(concatenating:alongAxis:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  void *v11;
  uint64_t AssociatedConformanceWitness;
  double result;
  __int128 v14;

  v11 = (void *)sub_19C552F20(a1, a2, a4, a5, a6);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MLShapedArray.init(_:)(v11, a3, AssociatedConformanceWitness, (size_t *)&v14);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  result = *(double *)&v14;
  *a7 = v14;
  return result;
}

double MLShapedArray.init<A>(squeezing:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double result;
  __int128 v12;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v10, a1);
  sub_19C553138((uint64_t)v10, a2, a3, (uint64_t *)&v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  result = *(double *)&v12;
  *a4 = v12;
  return result;
}

double MLShapedArray.init<A>(expandingDimensionsOf:alongAxis:)@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  __int128 v15;

  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v13);
  sub_19C5532E4(v12, a2, a3, a4, (uint64_t *)&v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a3);
  result = *(double *)&v15;
  *a5 = v15;
  return result;
}

void sub_19C554704(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v4 + 16) = a1;
  v5 = *a2;
  type metadata accessor for MLShapedArrayTensorStorageView(0, a3, a4, a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v6;
  *v6 = v4;
  v6[1] = sub_19C55476C;
  sub_19C59FFF0(v5);
}

uint64_t sub_19C55476C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5547C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  *v1 = *(_QWORD *)(v0 + 32);
  v1[1] = &off_1E3D47CD8;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MLShapedArray.withMutablePixelBufferIfAvailable<A>(_:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = v5;
  if ((sub_19C553E44() & 1) != 0)
  {
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    type metadata accessor for StandardStorage(0, v11, v12, v10);
    v19 = a3;
    v13 = a4;
    v14 = v5;
    v15 = v4[1];
    v16 = swift_unknownObjectRetain();
    v17 = sub_19C5289B0(v16, v15, 0);
    v6 = v14;
    a4 = v13;
    a3 = v19;
    swift_unknownObjectRelease_n();
    *v4 = v17;
    v4[1] = (uint64_t)&off_1E3D456D0;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
  }
  type metadata accessor for PixelBufferStorage(0, v11, v12, v10);
  if (!swift_dynamicCastClass())
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  swift_unknownObjectRetain();
  sub_19C52BA7C(a1);
  if (!v6)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 0, 1, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_19C554954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  return MLShapedArray.init(bytesNoCopy:shape:strides:deallocator:)(a1, a2, a3, a4, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), a6);
}

uint64_t sub_19C554960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  return MLShapedArray.init(unsafeUninitializedShape:initializingWith:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

double sub_19C554984@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _OWORD *a3@<X8>)
{
  return MLShapedArray.subscript.getter(a1, a2, a3);
}

double MLShapedArray.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  MEMORY[0x1E0C80A78](a1);
  v10 = *v3;
  v11 = v10;
  (*(void (**)(char *))(v7 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424180);
  v8 = sub_19CAA9AAC();
  return sub_19C4D0F78(&v11, v8, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  MEMORY[0x1E0C80A78](a1);
  v10 = *v3;
  v11 = v10;
  (*(void (**)(char *))(v7 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unknownObjectRetain();
  v8 = sub_19CAA9AAC();
  return sub_19C4D0270(&v11, v8, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_19C554A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C4D2478(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_19C55A2BC);
}

uint64_t MLShapedArray.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19C4D24D0(a1, a2, a3, a4, a5, (void (*)(void))sub_19C55A2BC);
}

{
  return sub_19C4D24D0(a1, a2, a3, a4, a5, (void (*)(void))sub_19C55A0F0);
}

{
  sub_19C55A74C(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a2, a4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a1);
}

uint64_t (*sub_19C554A74(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = MLShapedArray.subscript.modify(v10, a2, a5, a3, a4);
  return sub_19C4D2280;
}

void (*MLShapedArray.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(_QWORD **a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;

  v11 = malloc(0x60uLL);
  *a1 = v11;
  v11[8] = a5;
  v11[9] = v5;
  v11[6] = a3;
  v11[7] = a4;
  v12 = *(_QWORD *)(a4 - 8);
  v11[10] = v12;
  v11[11] = malloc(*(_QWORD *)(v12 + 64));
  (*(void (**)(void))(v12 + 16))();
  MLShapedArray.subscript.getter(a2, a3, v11);
  return sub_19C554BA0;
}

{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;

  v11 = malloc(0x60uLL);
  *a1 = v11;
  v11[8] = a5;
  v11[9] = v5;
  v11[6] = a3;
  v11[7] = a4;
  v12 = *(_QWORD *)(a4 - 8);
  v11[10] = v12;
  v11[11] = malloc(*(_QWORD *)(v12 + 64));
  (*(void (**)(void))(v12 + 16))();
  MLShapedArray.subscript.getter(a2, a3, v11);
  return sub_19C554DC4;
}

void sub_19C554BA0(_QWORD **a1, char a2)
{
  sub_19C4D264C(a1, a2, (void (*)(_QWORD *, void *, uint64_t, uint64_t, uint64_t))sub_19C55A2BC);
}

double sub_19C554BAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _OWORD *a3@<X8>)
{
  return MLShapedArray.subscript.getter(a1, a2, a3);
}

uint64_t sub_19C554C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C4D2478(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_19C55A0F0);
}

uint64_t (*sub_19C554C98(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = MLShapedArray.subscript.modify(v10, a2, a5, a3, a4);
  return sub_19C4D2280;
}

void sub_19C554DC4(_QWORD **a1, char a2)
{
  sub_19C4D264C(a1, a2, (void (*)(_QWORD *, void *, uint64_t, uint64_t, uint64_t))sub_19C55A0F0);
}

uint64_t sub_19C554DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MLShapedArray.subscript.getter(a1, a4, a2, a3, a5);
}

uint64_t MLShapedArray.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];

  v32[0] = a5;
  MEMORY[0x1E0C80A78](a1);
  v12 = *v5;
  v11 = v5[1];
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v14 = sub_19CAA9AAC();
  v15 = *(_QWORD *)(v14 + 16);
  ObjectType = swift_getObjectType();
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  v18 = *(_QWORD *)(v17(ObjectType, v11) + 16);
  result = swift_bridgeObjectRelease();
  if (v15 == v18)
  {
    v20 = swift_getObjectType();
    v21 = v17(v20, v11);
    v22 = *(_QWORD *)(v14 + 16);
    if (!v22 || (v23 = *(_QWORD *)(v21 + 16)) == 0)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      v29 = swift_bridgeObjectRelease();
      v32[1] = v12;
      v32[2] = v11;
      MEMORY[0x1E0C80A78](v29);
      v30 = *(_QWORD *)(a2 + 16);
      v31 = *(_QWORD *)(a2 + 24);
      v32[-8] = v30;
      v32[-7] = a3;
      v32[-6] = v31;
      v32[-5] = a4;
      v32[-4] = a1;
      v32[-3] = v12;
      v32[-2] = v11;
      return MLShapedArray.withUnsafeShapedBufferPointer<A>(_:)((uint64_t)sub_19C55A590, (uint64_t)&v32[-10], a2, v30);
    }
    v24 = v23 - 1;
    v25 = v22 - 1;
    if (v24 < v25)
      v25 = v24;
    v26 = ~v25;
    v27 = 4;
    while (1)
    {
      v28 = *(_QWORD *)(v14 + 8 * v27);
      if (v28 < 0 || v28 >= *(_QWORD *)(v21 + 8 * v27))
        break;
      ++v27;
      if (v26 + v27 == 4)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C554F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19C55A74C(a1, a2, a5, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a5 + 16) - 8) + 8))(a1);
}

uint64_t (*sub_19C555068(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = MLShapedArray.subscript.modify(v10, a2, a5, a3, a4);
  return sub_19C4D2280;
}

void (*MLShapedArray.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;
  uint64_t v16;

  v11 = malloc(0x50uLL);
  *a1 = v11;
  v11[2] = a5;
  v11[3] = v5;
  *v11 = a3;
  v11[1] = a4;
  v12 = *(_QWORD *)(a3 + 16);
  v11[4] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v11[5] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[6] = malloc(v14);
  v15 = malloc(v14);
  v16 = *(_QWORD *)(a4 - 8);
  v11[7] = v15;
  v11[8] = v16;
  v11[9] = malloc(*(_QWORD *)(v16 + 64));
  (*(void (**)(void))(v16 + 16))();
  MLShapedArray.subscript.getter(a2, a3, a4, a5, (uint64_t)v15);
  return sub_19C5551C0;
}

void sub_19C5551C0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t);
  uint64_t v12;

  v2 = *a1;
  v3 = (void *)(*a1)[9];
  v12 = (*a1)[8];
  v4 = (void *)(*a1)[6];
  v5 = (void *)(*a1)[7];
  v6 = (*a1)[4];
  v7 = (*a1)[5];
  v8 = (*a1)[2];
  v10 = **a1;
  v9 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2[6], v2[7], v2[4]);
    sub_19C55A74C((uint64_t)v4, (uint64_t)v3, v10, v9, v8);
    (*(void (**)(void *, uint64_t))(v12 + 8))(v3, v9);
    v11 = *(void (**)(void *, uint64_t))(v7 + 8);
    v11(v4, v6);
  }
  else
  {
    sub_19C55A74C(v2[7], (uint64_t)v3, *v2, v2[1], v2[2]);
    (*(void (**)(void *, uint64_t))(v12 + 8))(v3, v9);
    v11 = *(void (**)(void *, uint64_t))(v7 + 8);
  }
  v11(v5, v6);
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t sub_19C5552CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MLShapedArray.withUnsafeShapedBufferPointer<A>(_:)(a1, a2, a4, a3);
}

uint64_t sub_19C5552EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)(a1, a2, a4, a3, a5);
}

uint64_t sub_19C55530C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  return MLShapedArray.subscript.setter(a1, *a2, a3);
}

uint64_t MLShapedArray.subscript.setter(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _OWORD v12[3];

  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19CAE8180;
  *(_QWORD *)(v6 + 32) = a2;
  v7 = a1[1];
  v12[0] = *a1;
  v12[1] = v7;
  v12[2] = a1[2];
  v11 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424190);
  v9 = sub_19C55AE88(&qword_1EE423578, MEMORY[0x1E0DEAF50]);
  sub_19C55A0F0((uint64_t)v12, (uint64_t)&v11, a3, v8, v9);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_19C5553D4(_QWORD *a1, uint64_t *a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = MLShapedArray.subscript.modify(v6, *a2, a3);
  return sub_19C4D2280;
}

void (*MLShapedArray.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x48uLL);
  *a1 = v7;
  v7[7] = a3;
  v7[8] = v3;
  v7[6] = a2;
  MLShapedArray.subscript.getter(a2, a3, v7);
  return sub_19C5554AC;
}

void sub_19C5554AC(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  v3 = (*a1)[1];
  v4 = (*a1)[2];
  v5 = (*a1)[3];
  v7 = (*a1)[4];
  v6 = (*a1)[5];
  v8 = (*a1)[7];
  v9 = (*a1)[6];
  *(_QWORD *)&v10 = **a1;
  *((_QWORD *)&v10 + 1) = v3;
  v11 = v4;
  v12 = v5;
  v13 = v7;
  v14 = v6;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MLShapedArray.subscript.setter(&v10, v9, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    MLShapedArray.subscript.setter(&v10, v9, v8);
  }
  free(v2);
}

uint64_t sub_19C555594(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a3);
  return MLShapedArrayProtocol.subscript.setter(a1, v5, v6, a3, v7);
}

uint64_t (*sub_19C5555EC(_QWORD *a1, uint64_t *a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v8 = *a2;
  v7 = a2[1];
  v9 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a3);
  v6[4] = MLShapedArrayProtocol.subscript.modify(v6, v8, v7, a3, v9);
  return sub_19C4D2280;
}

uint64_t sub_19C555668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a3);
  return sub_19CAA989C();
}

uint64_t sub_19C5556D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>);
  return MLShapedArrayProtocol.init(arrayLiteral:)(a1, a2, v4);
}

uint64_t sub_19C555720()
{
  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>);
  return sub_19CAA9BD8();
}

uint64_t sub_19C555770(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>);
  result = sub_19CAA9BD8();
  *a1 = v3;
  return result;
}

uint64_t sub_19C5557D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a4);
  return sub_19CAA9BCC();
}

uint64_t sub_19C555834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a3);
  return sub_19CAA9BF0();
}

uint64_t MLShapedArray.startIndex.getter()
{
  return 0;
}

uint64_t sub_19C555890@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = MLShapedArray.endIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t MLShapedArray.endIndex.getter(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  return MLShapedArrayProtocol.count.getter(a1, v2);
}

uint64_t (*sub_19C555900(_QWORD *a1, uint64_t *a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_19C55595C(v6, *a2, a3);
  return sub_19C4D2280;
}

void (*sub_19C55595C(_QWORD *a1, uint64_t a2, uint64_t a3))(void **a1)
{
  _OWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  MLShapedArray.subscript.getter(a2, a3, v6);
  return sub_19C4EC128;
}

uint64_t sub_19C5559BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = a1[1];
  v5 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>);
  return MLShapedArrayProtocol.subscript.getter(v3, v4, a2, v5);
}

uint64_t sub_19C555A10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = MLShapedArray.indices.getter(a1);
  *a2 = 0;
  a2[1] = v4;
  return result;
}

uint64_t MLShapedArray.indices.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  result = MLShapedArrayProtocol.count.getter(a1, v2);
  if ((result & 0x8000000000000000) == 0)
    return 0;
  __break(1u);
  return result;
}

uint64_t sub_19C555A90(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  return MLShapedArrayProtocol.count.getter(a1, v2);
}

uint64_t sub_19C555AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19C5599FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_19C555AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19C5599FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

__n128 sub_19C555B0C@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_19C555B1C(uint64_t a1)
{
  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  return sub_19CAA9C44();
}

uint64_t sub_19C555B50(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  v1 = sub_19C559BA8();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t MLShapedArray.description.getter(uint64_t a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](a1);
  v13 = 0;
  v14 = 0xE000000000000000;
  v12 = *v1;
  v6 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  v7 = MLShapedArrayProtocol.scalars.getter(a1, v6);
  if (MEMORY[0x1A1AD45BC](v7, v3))
  {
    v8 = 0;
    while (1)
    {
      v9 = sub_19CAA9A70();
      sub_19CAA9A28();
      if ((v9 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v8, v3);
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_10;
      }
      else
      {
        result = sub_19CAA9F68();
        if (v5 != 8)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)&v12 = result;
        (*(void (**)(__int128 *, __int128 *, uint64_t))(v4 + 16))(&v12 - 1, &v12, v3);
        swift_unknownObjectRelease();
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          swift_bridgeObjectRelease();
          return v13;
        }
      }
      *(_QWORD *)&v12 = 0;
      *((_QWORD *)&v12 + 1) = 0xE000000000000000;
      sub_19CAAA1C0();
      sub_19CAA992C();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
      ++v8;
      if (v10 == MEMORY[0x1A1AD45BC](v7, v3))
        goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t MLShapedArray.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_19CAE8180;
  *(_QWORD *)(v7 + 32) = a1;
  v10 = *v3;
  v9 = v7;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424190);
  sub_19C55AE88(&qword_1EE423578, MEMORY[0x1E0DEAF50]);
  MLShapedArray.subscript.getter((uint64_t)&v9, a2, a3);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_19C555E50@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  double result;
  _OWORD v9[2];
  __int128 v10;

  v5 = *a1;
  v6 = type metadata accessor for MLShapedArray(0, *(uint64_t *)((char *)a1 + a2 - 16), *(uint64_t *)((char *)a1 + a2 - 8), a3);
  MLShapedArray.subscript.getter(v5, v6, v9);
  v7 = v9[1];
  *a4 = v9[0];
  a4[1] = v7;
  result = *(double *)&v10;
  a4[2] = v10;
  return result;
}

uint64_t sub_19C555EC0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(uint64_t *)((char *)a3 + a4 - 16);
  v5 = *(uint64_t *)((char *)a3 + a4 - 8);
  v6 = *a3;
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v12 = *a1;
  v13 = *(_OWORD *)(a1 + 1);
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v10 = type metadata accessor for MLShapedArray(0, v4, v5, a4);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MLShapedArray.subscript.setter(&v12, v6, v10);
}

uint64_t sub_19C555F78(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __int128 v10;
  uint64_t v11;
  _QWORD v13[12];
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v10 = a4[1];
  v14 = *a4;
  v15 = v10;
  v16 = a4[2];
  v13[2] = a7;
  v13[3] = a8;
  v13[4] = a9;
  v13[5] = a10;
  v13[6] = a5;
  v13[7] = a3;
  v13[8] = a2;
  v13[9] = a6;
  v13[10] = a1;
  v11 = type metadata accessor for MLShapedArraySlice(0, a7, a9, (uint64_t)a4);
  return MLShapedArraySlice.withUnsafeShapedBufferPointer<A>(_:)((uint64_t)sub_19C55AE4C, (uint64_t)v13, v11, MEMORY[0x1E0DEE9C0] + 8);
}

uint64_t sub_19C55600C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  result = sub_19CAA98CC();
  v44 = result;
  if (result)
  {
    v43 = sub_19C552864(a5, a6);
    swift_bridgeObjectRetain();
    v15 = sub_19CAA9C08();
    v17 = sub_19C4D0F34(v15, a7);
    v19 = v18;
    v21 = v20;
    if ((v20 & 1) != 0)
    {
      v41 = v16;
      v42 = a3;
      sub_19CAAA1FC();
      swift_unknownObjectRetain_n();
      v23 = swift_dynamicCastClass();
      if (!v23)
      {
        swift_unknownObjectRelease();
        v23 = MEMORY[0x1E0DEE9D8];
      }
      v24 = *(_QWORD *)(v23 + 16);
      swift_release();
      if (__OFSUB__(v21 >> 1, v19))
        goto LABEL_24;
      if (v24 != (v21 >> 1) - v19)
        goto LABEL_25;
      v22 = (_QWORD *)swift_dynamicCastClass();
      if (!v22)
      {
        swift_unknownObjectRelease();
        v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_10;
    }
    while (1)
    {
      v22 = (_QWORD *)sub_19C4D45C4(v17, v16, v19, v21);
LABEL_10:
      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      v25 = sub_19CAA9C08();
      v26 = sub_19C4D0F34(v25, a6);
      v28 = v27;
      v30 = v29;
      v21 = v31;
      if ((v31 & 1) == 0)
        goto LABEL_11;
      v33 = a3;
      sub_19CAAA1FC();
      swift_unknownObjectRetain_n();
      v34 = swift_dynamicCastClass();
      if (!v34)
      {
        swift_unknownObjectRelease();
        v34 = MEMORY[0x1E0DEE9D8];
      }
      v35 = *(_QWORD *)(v34 + 16);
      swift_release();
      if (__OFSUB__(v21 >> 1, v30))
        break;
      if (v35 != (v21 >> 1) - v30)
        goto LABEL_27;
      v32 = (_QWORD *)swift_dynamicCastClass();
      a3 = v33;
      if (!v32)
      {
        swift_unknownObjectRelease();
        v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
LABEL_18:
      v19 = a9;
      swift_unknownObjectRelease();
      result = sub_19CAA98CC();
      v17 = (uint64_t)a4;
      if (!result)
        goto LABEL_29;
      v36 = *(_QWORD *)(a3 + 16);
      if (v36 == a4[2])
      {
        v19 = result;
        v21 = *(_QWORD *)(*(_QWORD *)(a10 - 8) + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v37 = sub_19C500C0C(0, v36);
        v38 = v22[2];
        if (v38 == v32[2])
        {
          v39 = v37;
          v40 = sub_19C500C0C(0, v38);
          sub_19C591D40(v39, a3, a4, v40, v22, v32, v44, v19 + v21 * v43, a10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      swift_unknownObjectRelease();
      v16 = v41;
      a3 = v42;
    }
    __break(1u);
LABEL_27:
    swift_unknownObjectRelease();
    a3 = v33;
LABEL_11:
    v32 = (_QWORD *)sub_19C4D45C4(v26, v28, v30, v21);
    goto LABEL_18;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_19C556330@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a2 + a1 - 24);
  v7 = *(_QWORD *)(a2 + a1 - 8);
  v8 = type metadata accessor for MLShapedArray(0, *(_QWORD *)(a2 + a1 - 32), *(_QWORD *)(a2 + a1 - 16), a3);
  return MLShapedArray.subscript.getter(a1, v8, v6, v7, a4);
}

uint64_t sub_19C5563A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a4 + a3 - 24);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v8 = type metadata accessor for MLShapedArray(0, *(_QWORD *)(a4 + a3 - 32), *(_QWORD *)(a4 + a3 - 16), a4);
  return sub_19C55A74C(a1, a3, v8, v6, v7);
}

uint64_t sub_19C556400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v9 + 16))((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_19CAA9AAC();
  ObjectType = swift_getObjectType();
  v12 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  v13 = sub_19C552864(v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a4, a1 + *(_QWORD *)(*(_QWORD *)(a3 - 8) + 72) * v13, a3);
}

double sub_19C556510@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (*a3)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  double result;
  _OWORD v12[2];
  __int128 v13;

  v7 = *(_QWORD *)(a2 + a1 - 24);
  v8 = *(_QWORD *)(a2 + a1 - 8);
  v9 = type metadata accessor for MLShapedArray(0, *(_QWORD *)(a2 + a1 - 32), *(_QWORD *)(a2 + a1 - 16), (uint64_t)a3);
  a3(v12, a1, v9, v7, v8);
  v10 = v12[1];
  *a4 = v12[0];
  a4[1] = v10;
  result = *(double *)&v13;
  a4[2] = v13;
  return result;
}

uint64_t sub_19C556594(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = a4 + a3;
  v8 = *(_QWORD *)(a4 + a3 - 32);
  v9 = *(_QWORD *)(a4 + a3 - 24);
  v10 = *(_QWORD *)(a4 + a3 - 16);
  v11 = *(_QWORD *)(v7 - 8);
  v12 = a1[3];
  v13 = a1[4];
  v14 = a1[5];
  v17 = *a1;
  v18 = *(_OWORD *)(a1 + 1);
  v19 = v12;
  v20 = v13;
  v21 = v14;
  v15 = type metadata accessor for MLShapedArray(0, v8, v10, a4);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a5(&v17, a3, v15, v9, v11);
}

uint64_t sub_19C556664(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = sub_19CAA98CC();
  if (!result)
    goto LABEL_10;
  v16 = result;
  result = sub_19CAA98CC();
  if (result)
  {
    v17 = a3[2];
    if (v17 == a4[2])
    {
      v21 = result;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_19C500C0C(0, v17);
      result = sub_19C4EB7D8((void (*)(char *, char *))sub_19C5567F0, 0, a9, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEDCE8], a11, MEMORY[0x1E0DEDD18], v19);
      if (v17 == *(_QWORD *)(result + 16))
      {
        if (v17 == a7[2])
        {
          v20 = result;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_19C5919D4(v18, a3, a4, v20, a3, a7, v16, v21, a8, a8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_19C5567F0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t MLShapedArray.init(data:shape:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];
  uint64_t v19;

  v12 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    v13 = sub_19CAA9A58();
    *(_QWORD *)(v13 + 16) = v12;
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v18[1] = v12;
  v19 = 0;
  v18[0] = v13 + 32;
  sub_19C59373C(v18, &v19, a3);
  v14 = v19;
  v15 = v12 < v19;
  if (v12 < v19)
  {
    __break(1u);
    if (v15)
      __break(1u);
    *(_QWORD *)(v13 + 16) = v14;
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + 16) = v19;
    swift_bridgeObjectRelease();
    type metadata accessor for DataStorage(0, a4, a5, v16);
    result = sub_19C5938FC(a1, a2, a3, v13);
    *a6 = result;
    a6[1] = (uint64_t)&off_1E3D43E30;
  }
  return result;
}

uint64_t MLShapedArray.reshaped(to:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;

  v11 = *v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a2);
  type metadata accessor for ReshapedStorage(0, a2, v7, v8);
  v9 = sub_19C4EB790((uint64_t)&v11, a1);
  result = (*(uint64_t (**)(__int128 *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(&v11, a2);
  *a3 = v9;
  a3[1] = (uint64_t)&off_1E3D45458;
  return result;
}

uint64_t MLShapedArray.squeezingShape()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  __int128 v7;

  v7 = *v2;
  swift_unknownObjectRetain();
  v5 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  return sub_19C553138((uint64_t)&v7, a1, v5, a2);
}

uint64_t MLShapedArray.expandingShape(at:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  __int128 v9;

  v9 = *v3;
  swift_unknownObjectRetain();
  v7 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a2);
  return sub_19C5532E4((char *)&v9, a1, a2, v7, a3);
}

double MLShapedArray.transposed()@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  __int128 v7;

  v7 = *v2;
  swift_unknownObjectRetain();
  v5 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a1);
  return sub_19C553414((uint64_t)&v7, a1, v5, a2);
}

uint64_t MLShapedArray.transposed(permutation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  __int128 v9;

  v9 = *v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a2);
  return sub_19C55356C((uint64_t)&v9, a1, a2, v7, a3);
}

uint64_t MLShapedArray.changingLayout(to:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  unint64_t v6;
  uint64_t v7;
  _UNKNOWN **v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;

  v6 = *a1;
  v7 = *v3;
  v8 = (_UNKNOWN **)v3[1];
  ObjectType = swift_getObjectType();
  v10 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v8[1])(ObjectType, v8);
  v11 = v10;
  if (!v6)
    goto LABEL_10;
  if (v6 != 1)
  {
    v14 = (_QWORD *)v6;
LABEL_17:
    sub_19C4D5950(v6);
    swift_bridgeObjectRelease();
    v23 = swift_getObjectType();
    v24 = (_QWORD *)((uint64_t (*)(uint64_t, _UNKNOWN **))v8[2])(v23, v8);
    v25 = sub_19C4D4494(v14, v24);
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRetain();
    }
    else
    {
      type metadata accessor for StandardStorage(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v26);
      v28 = swift_unknownObjectRetain();
      v29 = sub_19C5289B0(v28, (uint64_t)v8, (uint64_t)v14);
      result = swift_unknownObjectRelease();
      v8 = &off_1E3D456D0;
      v7 = v29;
    }
    *a3 = v7;
    a3[1] = (uint64_t)v8;
    return result;
  }
  v12 = *(_QWORD *)(v10 + 16);
  if (!v12)
  {
    v15 = 0;
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v13 = sub_19CAA9A58();
  v14 = (_QWORD *)v13;
  *(_QWORD *)(v13 + 16) = v12;
  v15 = *(_QWORD *)(v11 + 16);
  if (!v15)
  {
LABEL_16:
    v14[2] = v15;
    goto LABEL_17;
  }
  v16 = 0;
  v17 = 1;
  do
  {
    *(_QWORD *)(v13 + 8 * v16 + 32) = v17;
    v18 = *(_QWORD *)(v11 + 32 + 8 * v16);
    v19 = v17 * v18;
    v20 = (unsigned __int128)(v17 * (__int128)v18) >> 64;
    v21 = v20 < v19 >> 63;
    if (v20 != v19 >> 63)
    {
      __break(1u);
      goto LABEL_22;
    }
    ++v16;
    v17 = v19;
  }
  while (v15 != v16);
  if (v12 >= v15)
    goto LABEL_16;
  __break(1u);
LABEL_10:
  v22 = *(_QWORD *)(v11 + 16);
  if (v22)
  {
    v14 = (_QWORD *)sub_19CAA9A58();
    v14[2] = v22;
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v30[1] = v22;
  v31 = 0;
  v30[0] = v14 + 4;
  sub_19C59373C(v30, &v31, v11);
  v15 = v31;
  v21 = v22 < v31;
  if (v22 >= v31)
    goto LABEL_16;
LABEL_22:
  __break(1u);
  if (v21)
    __break(1u);
  v14[2] = v15;
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_19C556D84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v10 = *(_QWORD *)(a3 + 8);
  ObjectType = swift_getObjectType();
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  swift_unknownObjectRetain();
  v13 = v12(ObjectType, v10);
  swift_unknownObjectRelease();
  v14 = *(_QWORD *)(a3 + 8);
  v15 = swift_getObjectType();
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  swift_unknownObjectRetain();
  v17 = v16(v15, v14);
  result = swift_unknownObjectRelease();
  if (!a1)
  {
    v20 = 0;
    goto LABEL_7;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(a6 - 8) + 72);
  if (v19)
  {
    if (a2 - a1 != 0x8000000000000000 || v19 != -1)
    {
      v20 = (a2 - a1) / v19;
LABEL_7:
      v22[0] = a1;
      v22[1] = v20;
      a4(v22, v13, v17);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C556EC0@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  sub_19C535F80(0, (unint64_t *)&qword_1EE424440);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = sub_19C526AE0(a1, AssociatedTypeWitness, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19C556F60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424000);
  else
    return sub_19CAAA19C();
}

uint64_t sub_19C556FAC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558E74(a1, a2, a3, *v3, qword_1EE421948);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C556FD0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558FCC(a1, a2, a3, *v3, qword_1EE422D98);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C556FF4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C55738C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19C557010(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C55752C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C55702C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C557688(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557048(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C5577EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557064(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C557954(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557080(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C557AB0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19C55709C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C557C54(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19C5570B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C557DDC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C5570D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C5584FC(a1, a2, a3, *v3, &qword_1EE4235D0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557100(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C558CE8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1EE4242B0, (uint64_t *)&unk_1EE424190);
  *v3 = result;
  return result;
}

uint64_t sub_19C55712C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C557F44(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557148(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C5580AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557164(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558224(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557180(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C55837C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C55719C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C5584FC(a1, a2, a3, *v3, &qword_1EE424250);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C5571C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558664(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C5571E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C5587EC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19C557200(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558974(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C55721C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C558CE8(a1, a2, a3, (_QWORD *)*v3, &qword_1EE4241C0, (uint64_t *)&unk_1EE4241C8);
  *v3 = result;
  return result;
}

uint64_t sub_19C557248(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C558AEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19C557264(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C558CE8(a1, a2, a3, (_QWORD *)*v3, &qword_1EE4241D8, &qword_1EE4241E0);
  *v3 = result;
  return result;
}

uint64_t sub_19C557290(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558E74(a1, a2, a3, *v3, &qword_1EE424200);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C5572B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C558FCC(a1, a2, a3, *v3, (uint64_t *)&unk_1EE424240);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C5572D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C559124(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C5572F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C55929C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557310(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C559420(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C55732C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C559588(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557348(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_19C5596F0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_19C557364(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_19C559878(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_19C557380(char a1, int64_t a2, char a3, char *a4)
{
  return sub_19C558FCC(a1, a2, a3, a4, qword_1EE422D98);
}

uint64_t sub_19C55738C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423580);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424300);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C55752C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424228);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C557688(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424220);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8])
      memmove(v13, v14, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5577E0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_19C558E74(a1, a2, a3, a4, (uint64_t *)&unk_1EE424230);
}

uint64_t sub_19C5577EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4242C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C557954(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4242E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C557AB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4242D8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4242E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C557C54(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4242C8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4242D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C557DDC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424080);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C557F44(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4235D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5580AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424208);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558224(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4235E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C55837C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[176 * v8])
      memmove(v12, v13, 176 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[176 * v8] || v12 >= &v13[176 * v8])
  {
    memcpy(v12, v13, 176 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5584FC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558664(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424258);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5587EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424290);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424298);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558974(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4242A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558AD8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19C558CE8(a1, a2, a3, a4, &qword_1EE4241C0, (uint64_t *)&unk_1EE4241C8);
}

uint64_t sub_19C558AEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F0);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558CD4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_19C558CE8(a1, a2, a3, a4, &qword_1EE4241D8, &qword_1EE4241E0);
}

uint64_t sub_19C558CE8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558E74(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C558FCC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C559124(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424268);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C55929C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424280);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C559420(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424288);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C559588(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424260);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5596F0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424270);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424278);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C559878(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C5599D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19C5599FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

uint64_t sub_19C5599E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19C5599FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_19C5599FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v22 - v17;
  v19 = sub_19CAA986C();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_19C559BAC(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_19C559C6C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF)
      return a2 << 32;
    sub_19CAA9614();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = (_BYTE *)sub_19CAA9590();
    if (!v4)
    {
LABEL_10:
      v5 = sub_19CAA959C();
      if (v5 >= a2)
        v6 = a2;
      else
        v6 = v5;
      v7 = &v4[v6];
      if (v4)
        v8 = v7;
      else
        v8 = 0;
      v3 = sub_19C559BAC(v4, v8);
      swift_release();
      return v3;
    }
    result = sub_19CAA95A8();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19C559D50(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 32))(a1, *(_QWORD *)(v1 + 48));
}

uint64_t sub_19C559D78(uint64_t a1, uint64_t a2, __CVBuffer *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t BytesPerRow;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  if (a1 < 0)
    goto LABEL_24;
  if (a1)
  {
    v6 = sub_19CAA9A58();
    *(_QWORD *)(v6 + 16) = a1;
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v7 = 0;
  v8 = v6 + 32;
  v9 = *(_QWORD *)(a2 + 16);
  v10 = v9 - 1;
  v11 = a2 + 32;
  while (1)
  {
    v13 = v10 - 1;
    if (v10 < 1)
    {
      if ((v10 != 0) | v7 & 1)
        goto LABEL_20;
      v13 = 0;
      v7 = 1;
    }
    v14 = v10 + 1;
    if (v10 + 1 == v9)
    {
      v12 = 1;
      goto LABEL_7;
    }
    if (v10 + 2 == v9)
    {
      BytesPerRow = CVPixelBufferGetBytesPerRow(a3);
      if (BytesPerRow >= 0)
        v16 = BytesPerRow;
      else
        v16 = BytesPerRow + 1;
      v12 = v16 >> 1;
      goto LABEL_7;
    }
    if (v14 >= v9)
    {
      __break(1u);
      goto LABEL_23;
    }
    v17 = 8 * v14;
    v18 = *(_QWORD *)(v8 + v17);
    v19 = *(_QWORD *)(v11 + v17);
    v12 = v18 * v19;
    if ((unsigned __int128)(v18 * (__int128)v19) >> 64 != (v18 * v19) >> 63)
      break;
LABEL_7:
    *(_QWORD *)(v8 + 8 * v10) = v12;
    v10 = v13;
  }
  __break(1u);
LABEL_20:
  if (v9 <= a1)
  {
    *(_QWORD *)(v6 + 16) = v9;
    return v6;
  }
LABEL_23:
  __break(1u);
LABEL_24:

  swift_bridgeObjectRelease();
  result = sub_19CAAA0AC();
  __break(1u);
  return result;
}

size_t sub_19C559EFC(__CVBuffer *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  size_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __CVBuffer *v14;

  result = CVPixelBufferGetPixelFormatType(a1);
  if ((_DWORD)result != 1278226536)
  {
    __break(1u);
    goto LABEL_16;
  }
  result = (size_t)CVPixelBufferGetIOSurface(a1);
  if (!result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    v9 = 0;
    v10 = 1;
    v11 = 1;
    while (1)
    {
      v12 = *(_QWORD *)(a2 + 32 + 8 * v9++);
      if (v9 >= v8)
      {
        v10 = v12;
      }
      else
      {
        v13 = (unsigned __int128)(v11 * (__int128)v12) >> 64;
        v11 *= v12;
        if (v13 != v11 >> 63)
        {
          __break(1u);
          break;
        }
      }
      if (v8 == v9)
        goto LABEL_11;
    }
  }
  v10 = 1;
  v11 = 1;
LABEL_11:
  result = CVPixelBufferGetWidth(a1);
  if (result != v10)
    goto LABEL_17;
  result = CVPixelBufferGetHeight(a1);
  if (result != v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = a3 & 1;
  *(_QWORD *)(v3 + 32) = a2;
  swift_bridgeObjectRetain();
  v14 = a1;
  result = CVPixelBufferGetPixelFormatType(v14);
  if ((_DWORD)result == 1278226536)
  {
    *(_QWORD *)(v3 + 40) = sub_19C559D78(v8, a2, v14);
    return v3;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_19C55A030()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_19C55A054(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!result)
  {
    v4 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v2 + 40))(result, v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
  }
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 72);
  if (v3)
  {
    if (a2 - result != 0x8000000000000000 || v3 != -1)
    {
      v4 = (a2 - result) / v3;
      return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v2 + 40))(result, v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C55A0BC(uint64_t a1, uint64_t a2)
{
  return sub_19C55A0D0(a1, a2);
}

uint64_t sub_19C55A0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C556D84(a1, a2, *(_QWORD *)(v2 + 40), *(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16));
}

uint64_t sub_19C55A0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(char *);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t);
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  _OWORD v35[3];

  v6 = v5;
  v10 = (_OWORD *)MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v10[1];
  v35[0] = *v10;
  v35[1] = v13;
  v35[2] = v10[2];
  v15 = *(void (**)(char *))(v14 + 16);
  v34[0] = v16;
  v15(v12);
  v17 = sub_19CAA9AAC();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = *(_QWORD *)(v6 + 8);
  ObjectType = swift_getObjectType();
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  v22 = *(_QWORD *)(v21(ObjectType, v19) + 16);
  result = swift_bridgeObjectRelease();
  if (v22 >= v18)
  {
    v24 = swift_getObjectType();
    v25 = v21(v24, v19);
    v26 = *(_QWORD *)(v17 + 16);
    if (!v26 || (v27 = *(_QWORD *)(v25 + 16)) == 0)
    {
LABEL_9:
      v32 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v32);
      v33 = *(_QWORD *)(a3 + 24);
      v34[-8] = *(_QWORD *)(a3 + 16);
      v34[-7] = a4;
      v34[-6] = v33;
      v34[-5] = a5;
      v34[-4] = v35;
      v34[-3] = v17;
      v34[-2] = v34[0];
      MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)((uint64_t)sub_19C55AE1C, (uint64_t)&v34[-10], a3, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
      sub_19C4D6168((uint64_t)v35);
      return swift_bridgeObjectRelease();
    }
    v28 = 0;
    v29 = v27 - 1;
    v30 = v26 - 1;
    if (v29 < v30)
      v30 = v29;
    v31 = v30 + 1;
    while (*(_QWORD *)(v17 + 32 + 8 * v28) < *(_QWORD *)(v25 + 8 * v28 + 32))
    {
      if (v31 == ++v28)
        goto LABEL_9;
    }
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C55A2BC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t ObjectType;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t (*v27)(char *, uint64_t);
  uint64_t result;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v36 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE424190);
  v35 = a5;
  v11 = *(_QWORD *)(a5 + 8);
  v44 = sub_19C55AE88(&qword_1EE4232D0, MEMORY[0x1E0DEAF38]);
  *(_QWORD *)&v46 = a4;
  *((_QWORD *)&v46 + 1) = v10;
  *(_QWORD *)&v47 = v11;
  *((_QWORD *)&v47 + 1) = v44;
  v12 = sub_19CAA9F50();
  v43 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - v14;
  v16 = *(_QWORD *)(a4 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v39 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v35 - v19;
  v21 = a1[1];
  v46 = *a1;
  v47 = v21;
  v48 = a1[2];
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v42 = a2;
  v38 = v22;
  v22((char *)&v35 - v19, a2, a4);
  v23 = *(_QWORD *)(v5 + 8);
  v37 = v5;
  ObjectType = swift_getObjectType();
  v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23);
  v40 = v11;
  v41 = v10;
  sub_19CAAA22C();
  swift_bridgeObjectRelease();
  MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEC3A0], v12);
  v25 = sub_19CAA9980();
  v26 = *(void (**)(char *, uint64_t))(v43 + 8);
  v26(v15, v12);
  v27 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  result = v27(v20, a4);
  if ((v25 & 1) != 0)
  {
    v29 = v39;
    v30 = v42;
    v38(v39, v42, a4);
    v45 = v46;
    sub_19CAAA22C();
    v31 = sub_19CAA9980();
    v26(v15, v12);
    result = v27(v29, a4);
    if ((v31 & 1) != 0)
    {
      MEMORY[0x1E0C80A78](result);
      v32 = v36;
      v33 = *(_QWORD *)(v36 + 24);
      *(&v35 - 6) = *(_QWORD *)(v36 + 16);
      *(&v35 - 5) = a4;
      v34 = v35;
      *(&v35 - 4) = v33;
      *(&v35 - 3) = v34;
      *(&v35 - 2) = (uint64_t)&v46;
      *(&v35 - 1) = v30;
      MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)((uint64_t)sub_19C55AECC, (uint64_t)(&v35 - 8), v32, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
      return sub_19C4D6168((uint64_t)&v46);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C55A590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19C556400(a1, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_19C55A5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_19CAA9CA4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_19CAA986C();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_19CAA986C();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_19C55A74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v30[0] = a1;
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v10 + 16))((char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_19CAA9AAC();
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType();
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  v16 = *(_QWORD *)(v15(ObjectType, v13) + 16);
  result = swift_bridgeObjectRelease();
  if (v12 == v16)
  {
    v18 = swift_getObjectType();
    v19 = v15(v18, v13);
    v20 = *(_QWORD *)(v11 + 16);
    if (!v20 || (v21 = *(_QWORD *)(v19 + 16)) == 0)
    {
LABEL_10:
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      v28 = *(_QWORD *)(a3 + 24);
      v30[-6] = *(_QWORD *)(a3 + 16);
      v30[-5] = a4;
      v30[-4] = v28;
      v30[-3] = a5;
      v29 = v30[0];
      v30[-2] = v11;
      v30[-1] = v29;
      MLShapedArray.withUnsafeMutableShapedBufferPointer<A>(_:)((uint64_t)sub_19C4D5FA4, (uint64_t)&v30[-8], a3, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEE9C0]);
      return swift_bridgeObjectRelease();
    }
    v22 = 0;
    v23 = v21 - 1;
    v24 = v20 - 1;
    if (v23 < v24)
      v24 = v23;
    v25 = v24 + 1;
    while (1)
    {
      v26 = *(_QWORD *)(v11 + 32 + 8 * v22);
      if (v26 < 0 || v26 >= *(_QWORD *)(v19 + 8 * v22 + 32))
        break;
      if (v25 == ++v22)
        goto LABEL_10;
    }
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C55A8FC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>);
  a1[2] = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a2);
  result = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, a2);
  a1[3] = result;
  return result;
}

void sub_19C55A954()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C55A964()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C55A974()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C55A984()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C55A994()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C55A9A4()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C55A9B4()
{
  JUMPOUT(0x1A1AD76ACLL);
}

uint64_t sub_19C55A9CC()
{
  return 16;
}

__n128 sub_19C55A9D8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_19C55A9E4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  return sub_19C556510(a1, a2, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))MLShapedArray.subscript.getter, a3);
}

uint64_t sub_19C55AA00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19C556594(a1, a2, a3, a4, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))sub_19C55A0F0);
}

uint64_t sub_19C55AA1C()
{
  return 32;
}

__n128 sub_19C55AA28(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_19C55AA3C()
{
  return 32;
}

__n128 sub_19C55AA48(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

double sub_19C55AA54@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  return sub_19C556510(a1, a2, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))MLShapedArray.subscript.getter, a3);
}

uint64_t sub_19C55AA70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19C556594(a1, a2, a3, a4, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))sub_19C55A2BC);
}

uint64_t sub_19C55AA8C()
{
  return 32;
}

__n128 sub_19C55AA98(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

_OWORD *sub_19C55AAA4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_19C55AAD4()
{
  return swift_unknownObjectRelease();
}

_QWORD *sub_19C55AADC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_19C55AB2C(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for RangedIndices(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RangedIndices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for MLShapedArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MLShapedArray);
}

uint64_t *initializeBufferWithCopyOfBuffer for MLShapedArrayBufferLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for MLShapedArrayBufferLayout(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for MLShapedArrayBufferLayout(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for MLShapedArrayBufferLayout(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLComputePolicy.Kind(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MLComputePolicy.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_19C55ADD4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_19C55ADEC(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MLShapedArrayBufferLayout()
{
  return &type metadata for MLShapedArrayBufferLayout;
}

uint64_t sub_19C55AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19C555F78(a1, a2, a3, *(__int128 **)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_19C55AE4C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;

  return sub_19C55600C(a1, a2, a3, a4, *(_QWORD *)(v4 + 48), *(_QWORD **)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 16));
}

uint64_t sub_19C55AE88(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE424190);
    result = MEMORY[0x1A1AD76AC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19C55AECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v5 = *(__int128 **)(v4 + 48);
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(_OWORD *)(v4 + 16);
  v8 = *(_OWORD *)(v4 + 32);
  v9 = v5[1];
  v16 = *v5;
  v17 = v9;
  v18 = v5[2];
  v12[1] = v7;
  v12[2] = v8;
  v13 = a1;
  v14 = v6;
  v15 = a3;
  v10 = type metadata accessor for MLShapedArraySlice(0, v7, v8, a4);
  return MLShapedArraySlice.withUnsafeShapedBufferPointer<A>(_:)((uint64_t)sub_19C55AF5C, (uint64_t)v12, v10, MEMORY[0x1E0DEE9C0] + 8);
}

uint64_t sub_19C55AF5C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;

  return sub_19C556664(a1, a2, a3, a4, *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD **)(v4 + 64), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_19C55AF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4242F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19C55AFD8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_19C556EC0(a1, *(_QWORD *)(v2 + 32), a2);
}

uint64_t static Int32.multiArrayDataType.getter()
{
  return 131104;
}

uint64_t sub_19C55B014()
{
  return 131104;
}

uint64_t static Double.multiArrayDataType.getter()
{
  return 65600;
}

uint64_t sub_19C55B02C()
{
  return 65600;
}

uint64_t static Float.multiArrayDataType.getter()
{
  return 65568;
}

uint64_t sub_19C55B044()
{
  return 65568;
}

uint64_t static Float16.multiArrayDataType.getter()
{
  return 65552;
}

uint64_t sub_19C55B05C()
{
  return 65552;
}

uint64_t dispatch thunk of static MLShapedArrayScalar.multiArrayDataType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id static MLModelCollection.beginAccessing(identifier:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *ObjCClassFromMetadata;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v7 = (void *)sub_19CAA98F0();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v12[4] = sub_19C55B264;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_19C55B26C;
  v12[3] = &block_descriptor_4;
  v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(ObjCClassFromMetadata, sel_beginAccessingModelCollectionWithIdentifier_completionHandler_, v7, v9);
  _Block_release(v9);

  return v10;
}

void sub_19C55B170(void *a1, id a2, void (*a3)(void *, uint64_t))
{
  id v6;
  id v7;

  if (a1)
  {
    v7 = a1;
    a3(a1, 0);

  }
  else if (a2)
  {
    v6 = a2;
    a3(a2, 1);

  }
  else
  {
    sub_19CAAA0B8();
    __break(1u);
  }
}

uint64_t sub_19C55B240()
{
  swift_release();
  return swift_deallocObject();
}

void sub_19C55B264(void *a1, void *a2)
{
  uint64_t v2;

  sub_19C55B170(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

void sub_19C55B26C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void static MLModelCollection.endAccessing(identifier:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *ObjCClassFromMetadata;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v7 = (void *)sub_19CAA98F0();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[4] = sub_19C55B4A8;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_19C55B4B0;
  v10[3] = &block_descriptor_6;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_endAccessingModelCollectionWithIdentifier_completionHandler_, v7, v9);
  _Block_release(v9);

}

void sub_19C55B3E8(char a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;

  if ((a1 & 1) != 0)
  {
    a3(0, 0);
  }
  else if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else
  {
    sub_19CAAA0B8();
    __break(1u);
  }
}

void sub_19C55B4A8(char a1, void *a2)
{
  uint64_t v2;

  sub_19C55B3E8(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

void sub_19C55B4B0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_19C55B51C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result < 0)
    goto LABEL_30;
  v2 = a2;
  v3 = result;
  if (!result)
    return v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v9;
  }
  v5 = 0;
  v6 = 0;
  v7 = a2 + 32;
  v20 = v4 - 1;
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v18 = result;
  v19 = a2 + 32;
  do
  {
    v12 = *(_QWORD *)(v7 + 8 * v5);
    v13 = *(_QWORD *)(v8 + 16);
    if (v13 < v3)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_19C556FD0(0, v13 + 1, 1);
        v7 = v19;
      }
      v11 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        result = sub_19C556FD0(v10 > 1, v11 + 1, 1);
        v7 = v19;
      }
      *(_QWORD *)(v8 + 16) = v11 + 1;
      *(_QWORD *)(v8 + 8 * v11 + 32) = v12;
LABEL_8:
      if (v20 == v5)
        goto LABEL_25;
      goto LABEL_9;
    }
    if (v6 >= v13)
      goto LABEL_28;
    v14 = v2;
    v15 = *(_QWORD *)(v8 + 8 * v6 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_19C556FD0(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v7 = v19;
    }
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_19C556FD0(v16 > 1, v17 + 1, 1);
      v7 = v19;
    }
    *(_QWORD *)(v9 + 16) = v17 + 1;
    *(_QWORD *)(v9 + 8 * v17 + 32) = v15;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_19C52F3A0(v8);
      v8 = result;
    }
    v2 = v14;
    v3 = v18;
    if (v6 >= *(_QWORD *)(v8 + 16))
      goto LABEL_29;
    *(_QWORD *)(v8 + 8 * v6++ + 32) = v12;
    if ((uint64_t)v6 < v18)
      goto LABEL_8;
    if (v20 == v5)
      goto LABEL_25;
    v6 = 0;
LABEL_9:
    ++v5;
  }
  while (v5 < *(_QWORD *)(v2 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_19C55B744(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return a2;
  if (*(_QWORD *)(a3 + 32) == result)
    return 0;
  if (v3 == 1)
    return a2;
  for (i = 5; ; ++i)
  {
    v5 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    if (*(_QWORD *)(a3 + 8 * i) == result)
      return 0;
    if (v5 == v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C55B7B8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_19C52F3A0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_19C55B820(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_19C55B820(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_19CAAA184();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v83 >= v81)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_19C55BEA8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_19C521314((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_19CAA9A58();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v15 < v14 == v16 >= v17)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (*v25 >= v23)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_19C5210CC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_19C5210CC((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_19C55BEA8((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_19CAAA0AC();
  __break(1u);
  return result;
}

uint64_t sub_19C55BEA8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (v20 >= *((_QWORD *)v16 - 1))
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v4 >= *(_QWORD *)v6)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_19C52126C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C55C114@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v6;

  result = sub_19C55B744(*a1, a1[1], *a2);
  if (!v3)
  {
    *(_QWORD *)a3 = result;
    *(_BYTE *)(a3 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_19C55C154(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
    goto LABEL_18;
  v5 = result;
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    v18 = v5;
    result = sub_19C556FD0(0, v4 & ~(v4 >> 63), 0);
    v9 = v18;
    if (a2 < v18 || v4 < 0)
      goto LABEL_19;
    v10 = a3 + 32;
    result = v19;
    v11 = *(_QWORD *)(a4 + 16);
    v12 = *(_QWORD *)(a3 + 16);
    if (v11 <= v18)
      v11 = v18;
    v13 = v11 - v18;
    v14 = (unint64_t *)(a4 + 8 * v18 + 32);
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (!v13)
        goto LABEL_16;
      if (*v14 >= v12)
        goto LABEL_17;
      v15 = *(_QWORD *)(v10 + 8 * *v14);
      v20 = result;
      v17 = *(_QWORD *)(result + 16);
      v16 = *(_QWORD *)(result + 24);
      if (v17 >= v16 >> 1)
      {
        sub_19C556FD0(v16 > 1, v17 + 1, 1);
        v9 = v18;
        result = v20;
      }
      *(_QWORD *)(result + 16) = v17 + 1;
      *(_QWORD *)(result + 8 * v17 + 32) = v15;
      --v13;
      ++v14;
      if (!--v4)
        return result;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_19C55C2A4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return v4;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_19C557100(0, v3, 0);
  if ((a3 & 0x8000000000000000) == 0)
  {
    v9 = (uint64_t *)(a1 + 32);
    v4 = v15;
    while (1)
    {
      v11 = *v9++;
      v10 = v11;
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      v12 = a2;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(a2);
        v12 = (_QWORD *)result;
      }
      if (v12[2] <= a3)
        break;
      v12[a3 + 4] = v10;
      v14 = *(_QWORD *)(v15 + 16);
      v13 = *(_QWORD *)(v15 + 24);
      if (v14 >= v13 >> 1)
        sub_19C557100(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v15 + 16) = v14 + 1;
      *(_QWORD *)(v15 + 8 * v14 + 32) = v12;
      if (!--v3)
        return v4;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C55C3B8(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;

  v2 = a2[2];
  v3 = a1[2];
  if (v2 < v3)
    return 0;
  v5 = a1;
  if (sub_19C4D4494(a1, a2))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = sub_19C4F9004(0, v2, 0, MEMORY[0x1E0DEE9D8]);
    v7 = a2 + 4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = v3;
    if (!v3)
      goto LABEL_17;
    while (1)
    {
      v9 = v8 - 1;
      if ((uint64_t)(v8 - 1) >= (uint64_t)v3)
        break;
      if (!v2)
        goto LABEL_24;
      v10 = v5[v9 + 4];
      v11 = v7[--v2];
      if (v11 == 1)
      {
        if (v10 == 1)
        {
          v13 = v6[2];
          v12 = v6[3];
          v14 = v13 + 1;
          v10 = 1;
          goto LABEL_14;
        }
        goto LABEL_19;
      }
      if (v10 != 1)
      {
        if (v10 == v11)
          goto LABEL_13;
LABEL_19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        swift_bridgeObjectRelease();
        return 0;
      }
      v10 = v7[v2];
LABEL_13:
      while (1)
      {
        v13 = v6[2];
        v12 = v6[3];
        v14 = v13 + 1;
LABEL_14:
        if (v13 >= v12 >> 1)
          v6 = sub_19C4F9004((_QWORD *)(v12 > 1), v14, 1, v6);
        v6[2] = v14;
        v6[v13 + 4] = v10;
        v8 = v9;
        if (v9)
          break;
LABEL_17:
        if (!v2)
          goto LABEL_24;
        v9 = 0;
        v10 = v7[--v2];
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_20;
    return sub_19C4F4F04((uint64_t)v6);
  }
  return (uint64_t)v5;
}

_QWORD *sub_19C55C558(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *result;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a1;
  if (sub_19C4D4494(a1, a2))
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  v4 = v3[2];
  v5 = a2[2];
  if (v5 <= v4)
    v6 = v3[2];
  else
    v6 = a2[2];
  result = sub_19C4F9004(0, v6, 0, MEMORY[0x1E0DEE9D8]);
  v8 = result;
  v9 = a2 + 3;
  v10 = v3 + 3;
  v11 = v4;
  v12 = v5;
  v13 = v4 - 1;
  if ((uint64_t)(v4 - 1) >= 0)
    goto LABEL_13;
LABEL_17:
  v18 = 0;
  if (__OFSUB__(v13, 1))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  while (1)
  {
    v19 = v12 - 1;
    if (((v12 - 1) & 0x8000000000000000) != 0)
    {
      v14 = 0;
      if (__OFSUB__(v19, 1))
        goto LABEL_35;
    }
    else
    {
      if (v19 >= (uint64_t)v5)
        goto LABEL_37;
      v14 = v9[v12];
      if (__OFSUB__(v19, 1))
        goto LABEL_35;
    }
    if (v13 < 0)
    {
      if (v19 < 0)
        return (_QWORD *)sub_19C4F4F04((uint64_t)v8);
      goto LABEL_9;
    }
    if ((v19 & 0x8000000000000000) == 0 && v14 != 1)
      break;
    v14 = v18;
LABEL_9:
    v16 = v8[2];
    v15 = v8[3];
    v17 = v16 + 1;
    v18 = v14;
LABEL_10:
    if (v16 >= v15 >> 1)
    {
      result = sub_19C4F9004((_QWORD *)(v15 > 1), v17, 1, v8);
      v8 = result;
    }
    v8[2] = v17;
    v8[v16 + 4] = v18;
    v11 = v13;
    v12 = v19;
    if (--v13 < 0)
      goto LABEL_17;
LABEL_13:
    if (v13 >= (uint64_t)v4)
      goto LABEL_36;
    v18 = v10[v11];
    if (__OFSUB__(v13, 1))
      goto LABEL_34;
  }
  if (v18 == 1)
    goto LABEL_9;
  if (v18 == v14)
  {
    v16 = v8[2];
    v15 = v8[3];
    v17 = v16 + 1;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19C55C6F4(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  _QWORD *v18;
  _QWORD v19[3];
  int v20;
  _BYTE v21[72];
  _QWORD v22[8];
  char v23;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a3 & 1) != 0)
    {
LABEL_18:
      v15 = v12[2];
      swift_bridgeObjectRetain();
      if (v15)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_32:
          v3 = sub_19C503550(v3);
        for (i = 0; i != v15; ++i)
        {
          v17 = v12[i + 4];
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          if (v17 >= v3[2])
            goto LABEL_31;
          v3[v17 + 4] = 1;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return (uint64_t)v3;
    }
LABEL_27:
    v22[0] = v12;
    MEMORY[0x1E0C80A78](a1);
    v19[2] = v22;
    swift_bridgeObjectRetain();
    v18 = sub_19C4F4620((void (*)(_QWORD *__return_ptr, _QWORD))sub_19C55E0FC, (uint64_t)v19, (uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
  result = 0;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = v3[2];
  if (v7 >= -v8 && v7 < v8)
  {
    v20 = a3;
    swift_bridgeObjectRetain();
    v10 = 0;
    v11 = v4 - 1;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v22[0] = v7;
      v22[1] = v8;
      v23 = 6;
      if (v7 >= v8)
      {
        sub_19C4D893C((uint64_t)v22, (uint64_t)v21);
        sub_19C4D783C();
        result = sub_19CAAA0B8();
        __break(1u);
        return result;
      }
      sub_19C4F9E38((uint64_t)v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_19C4F9004(0, v12[2] + 1, 1, v12);
      v14 = v12[2];
      v13 = v12[3];
      if (v14 >= v13 >> 1)
        v12 = sub_19C4F9004((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
      v12[2] = v14 + 1;
      v12[v14 + 4] = (v8 & (v7 >> 63)) + v7;
      if (v11 == v10)
        break;
      v7 = *(_QWORD *)(a2 + 8 * v10 + 40);
      if (v7 >= -v8)
      {
        ++v10;
        if (v7 < v8)
          continue;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    a1 = swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_18;
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_19C55C9B0(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char v23[72];
  uint64_t v24[8];
  char v25;
  _QWORD *v26;

  result = 0;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = a1[2];
  if (v5 < v4)
    return result;
  v26 = a1;
  if (!v4)
  {
    if (v5)
    {
      if (a1[4] == 1)
      {
        v14 = 0;
      }
      else
      {
        if (v5 == 1)
        {
          swift_bridgeObjectRetain();
          v14 = 1;
          goto LABEL_50;
        }
        v21 = 5;
        while (1)
        {
          v14 = v21 - 4;
          if (a1[v21] == 1)
            break;
          v22 = v21 - 3;
          if (__OFADD__(v14, 1))
            goto LABEL_59;
          ++v21;
          if (v22 == v5)
          {
            swift_bridgeObjectRetain();
            v14 = v5;
            goto LABEL_50;
          }
        }
      }
      v15 = v14 + 1;
      if (!__OFADD__(v14, 1))
      {
        if (v15 == v5)
        {
          swift_bridgeObjectRetain();
LABEL_27:
          if ((uint64_t)v5 < v14)
          {
            __break(1u);
            goto LABEL_29;
          }
LABEL_50:
          sub_19C503F1C(v14, v5);
          return (uint64_t)v26;
        }
        swift_bridgeObjectRetain();
        v16 = v14 + 5;
        while ((v15 & 0x8000000000000000) == 0)
        {
          if (v16 - 4 >= v5)
            goto LABEL_57;
          v18 = a1[v16];
          if (v18 != 1)
          {
            if (v16 - 4 != v14)
            {
              if (v14 >= v5)
                goto LABEL_63;
              v19 = a1[v14 + 4];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                a1 = sub_19C503550(a1);
              a1[v14 + 4] = v18;
              a1[v16] = v19;
              v26 = a1;
            }
            if (__OFADD__(v14++, 1))
              goto LABEL_58;
            v5 = a1[2];
          }
          v17 = v16 - 3;
          ++v16;
          if (v17 == v5)
            goto LABEL_27;
        }
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
      }
      __break(1u);
LABEL_65:
      v26 = a1;
      sub_19C4D893C((uint64_t)v24, (uint64_t)v23);
      sub_19C4D783C();
      sub_19CAAA0B8();
      __break(1u);
      swift_release();
      __break(1u);
LABEL_66:
      result = sub_19CAAA118();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v14 = 0;
    goto LABEL_50;
  }
  v24[0] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C55B7B8(v24);
  v6 = v24[0];
  v7 = *(_QWORD *)(v24[0] + 16);
  if (!v7)
  {
LABEL_29:
    swift_release();
    return (uint64_t)a1;
  }
  v8 = *(_QWORD *)(v24[0] + 32);
  if (v8 >= -(uint64_t)v5 && v8 < (uint64_t)v5)
  {
    v9 = 0;
    v10 = a1[2];
    v11 = v7 - 1;
    while (1)
    {
      v24[0] = v8;
      v24[1] = v10;
      v25 = 6;
      if (v8 < -v10 || v8 >= v10)
        goto LABEL_65;
      sub_19C4F9E38((uint64_t)v24);
      v12 = (v10 & (v8 >> 63)) + v8;
      if (v12 >= a1[2])
        goto LABEL_51;
      if (v12 < 0)
        goto LABEL_60;
      if (a1[v12 + 4] != 1)
      {
LABEL_51:
        v26 = a1;
        swift_bridgeObjectRelease();
        swift_release();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_19C503550(a1);
      v13 = a1[2];
      if (v12 >= v13)
        goto LABEL_61;
      v10 = v13 - 1;
      if ((uint64_t)(v13 - 1 - v12) < 0)
        goto LABEL_66;
      memmove(&a1[v12 + 4], &a1[v12 + 5], 8 * (v13 - 1 - v12));
      a1[2] = v10;
      if (v11 == v9)
        goto LABEL_29;
      if ((unint64_t)(v9 + 1) >= *(_QWORD *)(v6 + 16))
        goto LABEL_62;
      v8 = *(_QWORD *)(v6 + 8 * v9 + 40);
      if (v8 >= (uint64_t)(1 - v13))
      {
        ++v9;
        if (v8 < v10)
          continue;
      }
      v26 = a1;
      break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19C55CD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  _BYTE v12[72];
  _QWORD v13[8];
  char v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
    v13[0] = v7;
    v13[1] = v4;
    v14 = 6;
    if (v7 < -v4 || v7 >= v4)
    {
      sub_19C4D893C((uint64_t)v13, (uint64_t)v12);
      sub_19C4D783C();
      result = sub_19CAAA0B8();
      __break(1u);
      return result;
    }
    sub_19C4F9E38((uint64_t)v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_19C4F9004(0, v6[2] + 1, 1, v6);
    v10 = v6[2];
    v9 = v6[3];
    if (v10 >= v9 >> 1)
      v6 = sub_19C4F9004((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
    ++v5;
    v6[2] = v10 + 1;
    v6[v10 + 4] = (v4 & (v7 >> 63)) + v7;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t sub_19C55CF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _BYTE v12[72];
  _QWORD v13[8];
  char v14;
  uint64_t v15;

  v2 = a1;
  v15 = a1;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  if (v5 < ~v6 || v5 > v6)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v3 - 1;
  while (1)
  {
    v13[0] = v5;
    v13[1] = v6 + 1;
    v14 = 6;
    if (v5 < ~v6 || v5 > v6)
      break;
    sub_19C4F9E38((uint64_t)v13);
    v10 = ((v6 + 1) & (v5 >> 63)) + v5;
    if (*(_QWORD *)(v2 + 16) < v10)
      goto LABEL_16;
    if (v10 < 0)
    {
      __break(1u);
      break;
    }
    sub_19C50358C(v10, ((v6 + 1) & (v5 >> 63)) + v5, 1);
    if (v9 == v8)
    {
      swift_bridgeObjectRelease();
      return v15;
    }
    v5 = *(_QWORD *)(a2 + 8 * v8 + 40);
    v2 = v15;
    v6 = *(_QWORD *)(v15 + 16);
    if (v5 >= ~v6)
    {
      ++v8;
      if (v5 <= v6)
        continue;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19C4D893C((uint64_t)v13, (uint64_t)v12);
  sub_19C4D783C();
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C55D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = a1;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = __OFSUB__(a2, v8);
  v10 = a2 - v8;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    return v7;
  }
  if (!((v10 < 0) ^ v9 | (v10 == 0)))
  {
    v18 = sub_19C500C0C(1uLL, v10);
    v11 = swift_bridgeObjectRetain();
    sub_19C503880(v11);
    return v18;
  }
  if (__OFSUB__(v8, a2))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v2 = sub_19C4D0F34(v8 - a2, a1);
  v3 = v12;
  v4 = v13;
  v5 = v14;
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_8:
    v7 = sub_19C4D45C4(v2, v3, v4, v5);
    swift_unknownObjectRelease();
    return v7;
  }
  sub_19CAAA1FC();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v16 = *(_QWORD *)(v15 + 16);
  swift_release();
  if (__OFSUB__(v5 >> 1, v4))
    goto LABEL_17;
  if (v16 != (v5 >> 1) - v4)
  {
LABEL_18:
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  v7 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v7)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_19C55D200(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRetain();
  v4 = sub_19C55CD8C(a2, a1);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_19C523FF0(v5);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  if (v7 != *(_QWORD *)(a1 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = *(_QWORD *)(v4 + 16);
  if (v8)
  {
    v9 = 0;
    while (*(_QWORD *)(v4 + 8 * v9 + 32) < v7)
    {
      if (v8 == ++v9)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  v10 = sub_19C55C154(0, v7, a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_19C55D2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t i;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = a1;
    v5 = 0;
    v7 = a1 + 32;
    v6 = *(_QWORD **)(a1 + 32);
    v8 = v6[2];
    while (*(_QWORD *)(*(_QWORD *)(a1 + 8 * v5 + 32) + 16) == v8)
    {
      if (v2 == ++v5)
      {
        swift_bridgeObjectRetain_n();
        v9 = 1;
        v10 = v6;
        while (1)
        {
          swift_bridgeObjectRetain();
          if (v8)
          {
            for (i = 0; v8 != i; ++i)
            {
              if (a2 != i)
              {
                if (i >= v8)
                {
                  __break(1u);
                  goto LABEL_31;
                }
                if (v10[i + 4] != v6[i + 4])
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_15;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          if (v9 == v2)
            break;
          v12 = *(_QWORD **)(v7 + 8 * v9);
          v8 = v12[2];
          ++v9;
          v10 = v12;
          if (v8 != v6[2])
          {
LABEL_15:
            swift_bridgeObjectRelease();
LABEL_16:
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        swift_bridgeObjectRelease();
        v14 = v6[2];
        if (-v14 > a2 || v14 <= a2)
          goto LABEL_16;
        v4 = (v14 & (a2 >> 63)) + a2;
        if (v4 >= 0)
        {
          a2 = 0;
          while (v4 < *(_QWORD *)(*(_QWORD *)v7 + 16))
          {
            v15 = *(_QWORD *)(*(_QWORD *)v7 + 8 * v4 + 32);
            v16 = __OFADD__(a2, v15);
            a2 += v15;
            if (v16)
              goto LABEL_32;
            v7 += 8;
            if (!--v2)
            {
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
                goto LABEL_34;
              goto LABEL_27;
            }
          }
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
        }
        __break(1u);
LABEL_34:
        result = (uint64_t)sub_19C503550(v6);
        v6 = (_QWORD *)result;
LABEL_27:
        if (v4 < v6[2])
        {
          v6[v4 + 4] = a2;
          return (uint64_t)v6;
        }
        __break(1u);
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_19C55D4CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  uint64_t result;
  _BYTE v10[72];
  _QWORD v11[8];
  char v12;

  v3 = a1[2];
  v11[0] = a3;
  v11[1] = v3;
  v12 = 6;
  if (-v3 > a3 || v3 <= a3)
    goto LABEL_22;
  v7 = a1;
  sub_19C4F9E38((uint64_t)v11);
  v8 = (v3 & (a3 >> 63)) + a3;
  if (v3 < (uint64_t)v8)
    return 0;
  if (v8 < v3)
  {
    v3 = v7[v8 + 4];
    if (a2 == -1)
    {
LABEL_11:
      if (v3 != 0x8000000000000000)
        goto LABEL_15;
      __break(1u);
LABEL_13:
      if (v3 % a2)
        return 0;
LABEL_15:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_16;
      goto LABEL_20;
    }
    if (a2)
      goto LABEL_13;
    if (!v3)
    {
      __break(1u);
      goto LABEL_11;
    }
    return 0;
  }
  __break(1u);
LABEL_20:
  v7 = sub_19C503550(v7);
LABEL_16:
  if (v8 >= v7[2])
  {
    __break(1u);
LABEL_22:
    sub_19C4D893C((uint64_t)v11, (uint64_t)v10);
    sub_19C4D783C();
    result = sub_19CAAA0B8();
    __break(1u);
    return result;
  }
  v7[v8 + 4] = v3 / a2;
  return sub_19C500CF4((uint64_t)v7, a2);
}

_QWORD *sub_19C55D61C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;

  v3 = 0;
  v4 = result[2];
  if (-(uint64_t)v4 > a3 || (uint64_t)v4 <= a3)
    return (_QWORD *)v3;
  v6 = (v4 & (a3 >> 63)) + a3;
  if (v6 < v4)
  {
    v8 = result;
    v9 = result[v6 + 4];
    v10 = *(_QWORD *)(a2 + 16);
    if (v10)
    {
      v11 = 0;
      v12 = (uint64_t *)(a2 + 32);
      do
      {
        v13 = *v12++;
        v14 = __OFADD__(v11, v13);
        v11 += v13;
        if (v14)
        {
          __break(1u);
          goto LABEL_16;
        }
        --v10;
      }
      while (v10);
      if (v9 != v11)
        return 0;
    }
    else if (v9)
    {
      return 0;
    }
    swift_bridgeObjectRetain();
    v3 = sub_19C55C2A4(a2, v8, v6);
    swift_bridgeObjectRelease();
    return (_QWORD *)v3;
  }
LABEL_16:
  __break(1u);
  return result;
}

_QWORD *sub_19C55D6EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2 != a1[2])
    return 0;
  v3 = a1;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = (_QWORD *)(a2 + 16 * v2 + 24);
    v7 = -v2;
    while (1)
    {
      v8 = *(v6 - 1);
      v9 = v8 + *v6;
      if (__OFADD__(v8, *v6))
        break;
      v10 = v3[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_19C503550(v3);
      v11 = v5 + v10 - 1;
      if ((v11 & 0x8000000000000000) != 0)
        goto LABEL_15;
      if (v11 >= v3[2])
        goto LABEL_16;
      v12 = v3[v11 + 4];
      v13 = __OFADD__(v12, v9);
      v14 = v12 + v9;
      if (v13)
        goto LABEL_17;
      v6 -= 2;
      v3[v11 + 4] = v14;
      if (v7 == --v5)
        goto LABEL_18;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v3;
}

_QWORD *sub_19C55D7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  _QWORD *result;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 != *(_QWORD *)(a2 + 16) || v3 != *(_QWORD *)(a3 + 16))
    return 0;
  result = sub_19C4F9004(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v8 = result;
  if (!v3)
  {
LABEL_16:
    if (sub_19C4D4494(v8, qword_1E3D44F40))
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    return v8;
  }
  v9 = (uint64_t *)(a2 + 32);
  v10 = (uint64_t *)(a1 + 32);
  v11 = (uint64_t *)(a3 + 32);
  while (1)
  {
    v13 = *v9++;
    v12 = v13;
    v14 = *v10++;
    v15 = __OFSUB__(v12, v14);
    v16 = v12 - v14;
    if (v15)
      break;
    v15 = __OFSUB__(v16, 1);
    v17 = v16 - 1;
    if (v15)
      goto LABEL_22;
    v18 = *v11;
    if (*v11 < 0)
    {
      v15 = __OFSUB__(0, v18);
      v18 = -v18;
      if (v15)
        goto LABEL_25;
    }
    else if (!v18)
    {
      goto LABEL_23;
    }
    v19 = v17 / v18;
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_24;
    if (v20 < 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v22 = v8[2];
    v21 = v8[3];
    if (v22 >= v21 >> 1)
    {
      result = sub_19C4F9004((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
      v8 = result;
    }
    v8[2] = v22 + 1;
    v8[v22 + 4] = v20;
    ++v11;
    if (!--v3)
      goto LABEL_16;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_19C55D954(uint64_t a1, char a2, uint64_t a3, char a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  int64_t v28;
  int64_t v29;
  _QWORD *v30;
  int64_t v31;
  _QWORD *v32;
  int64_t v33;
  int64_t v34;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 < 2)
    return 0;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6 < 2)
    return 0;
  v8 = a1 + 8 * v4;
  v10 = *(_QWORD *)(v8 + 16);
  v9 = *(_QWORD *)(v8 + 24);
  v11 = a3 + 8 * v6;
  v13 = *(_QWORD *)(v11 + 16);
  v12 = *(_QWORD *)(v11 + 24);
  v14 = (a2 & 1) != 0 ? v10 : v9;
  v15 = (a2 & 1) != 0 ? v9 : v10;
  v16 = (a4 & 1) != 0 ? v13 : v12;
  v17 = (a4 & 1) != 0 ? v12 : v13;
  if (v14 != v17)
    return 0;
  swift_bridgeObjectRetain();
  v18 = (_QWORD *)sub_19C55B51C(2, a1);
  swift_bridgeObjectRetain();
  v19 = (_QWORD *)sub_19C55B51C(2, a3);
  v20 = sub_19C55C558(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v20)
    return 0;
  v23 = (_QWORD *)v20[2];
  v24 = (uint64_t)v23 + 2;
  if (__OFADD__(v23, 2))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && (v21 = v20[3], v26 = v21 >> 1, (uint64_t)(v21 >> 1) >= v24))
    {
      v23 = v20;
    }
    else
    {
      if ((uint64_t)v23 <= v24)
        v28 = (int64_t)v23 + 2;
      else
        v28 = (int64_t)v23;
      v23 = sub_19C4F9004(isUniquelyReferenced_nonNull_native, v28, 1, v20);
      v21 = v23[3];
      v26 = v21 >> 1;
    }
    v24 = v23[2];
    v22 = v24 + 1;
    if (v26 > v24)
      goto LABEL_28;
  }
  v33 = v22;
  v30 = sub_19C4F9004((_QWORD *)(v21 > 1), v22, 1, v23);
  v22 = v33;
  v23 = v30;
  v21 = v30[3];
  v26 = v21 >> 1;
LABEL_28:
  v23[2] = v22;
  v23[v24 + 4] = v15;
  v29 = v24 + 2;
  if ((uint64_t)v26 < v24 + 2)
  {
    v31 = v22;
    v34 = v29;
    v32 = sub_19C4F9004((_QWORD *)(v21 > 1), v29, 1, v23);
    v29 = v34;
    v22 = v31;
    v23 = v32;
  }
  v23[2] = v29;
  v23[v22 + 4] = v16;
  swift_bridgeObjectRelease();
  return v23;
}

_QWORD *sub_19C55DB28(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;

  v9 = a1[2];
  if (v9 < 2)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v10 = a2[2];
  if (v10 < 2)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v11 = a2[5];
  if ((unsigned __int128)(v11 * (__int128)a9) >> 64 != (v11 * a9) >> 63)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (a1[5] != v11 * a9)
    goto LABEL_52;
  if (v9 != 4 || v10 != 4)
    goto LABEL_50;
  if (a5 + 0x4000000000000000 < 0)
    goto LABEL_46;
  v13 = a1[6];
  v14 = __OFADD__(v13, 2 * a5);
  v15 = v13 + 2 * a5;
  if (v14)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v15 < a2[6])
    goto LABEL_59;
  v17 = a6 + 0x4000000000000000;
  if (a6 + 0x4000000000000000 < 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v18 = a1[7];
  v14 = __OFADD__(v18, 2 * a6);
  v19 = v18 + 2 * a6;
  if (v14)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    goto LABEL_51;
  }
  v46 = a2[6];
  v47 = a5 + 0x4000000000000000;
  v20 = a2[7];
  if (v19 < v20)
  {
LABEL_59:
    while (1)
    {
LABEL_51:
      sub_19CAAA0B8();
      __break(1u);
LABEL_52:
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
    }
  }
  v22 = sub_19C4F9004(0, 4, 0, MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  v23 = 0;
  v25 = a7;
  v24 = a8;
  v27 = a3;
  v26 = a5;
  v28 = v47;
  v29 = a2;
  v30 = v46;
  do
  {
    v31 = a1[v23 + 4];
    if (!v23)
      goto LABEL_30;
    v32 = v17;
    v33 = a6;
    v34 = a4;
    v35 = v24;
    v36 = v20;
    if (v23 != 3)
    {
      if (v23 == 1)
      {
        v31 = v29[4];
        goto LABEL_30;
      }
      v32 = v28;
      v33 = v26;
      v34 = v27;
      v35 = v25;
      v36 = v30;
    }
    if (v32 < 0)
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v14 = __OFADD__(v31, 2 * v33);
    v37 = v31 + 2 * v33;
    if (v14)
      goto LABEL_35;
    v14 = __OFSUB__(v36, 1);
    v38 = v36 - 1;
    if (v14)
      goto LABEL_36;
    v39 = v35 * v38;
    if ((unsigned __int128)(v35 * (__int128)v38) >> 64 != (v35 * v38) >> 63)
      goto LABEL_37;
    v40 = v37 - v39;
    if (__OFSUB__(v37, v39))
      goto LABEL_38;
    v14 = __OFSUB__(v40, 1);
    v41 = v40 - 1;
    if (v14)
      goto LABEL_39;
    if (!v34)
      goto LABEL_40;
    if (v41 == 0x8000000000000000 && v34 == -1)
      goto LABEL_42;
    v42 = v41 / v34;
    v31 = v42 + 1;
    if (__OFADD__(v42, 1))
      goto LABEL_41;
    if (v31 < 1)
      goto LABEL_50;
LABEL_30:
    v44 = v22[2];
    v43 = v22[3];
    if (v44 >= v43 >> 1)
    {
      v22 = sub_19C4F9004((_QWORD *)(v43 > 1), v44 + 1, 1, v22);
      v25 = a7;
      v24 = a8;
      v27 = a3;
      v26 = a5;
      v28 = v47;
      v29 = a2;
      v30 = v46;
    }
    ++v23;
    v22[2] = v44 + 1;
    v22[v44 + 4] = v31;
  }
  while (v23 != 4);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_19C55E0FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_19C55C114(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_19C55E114(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  char *i;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_19C5570B8(0, v5, 0);
    v6 = v20;
    for (i = (char *)(a3 + 41); ; i += 16)
    {
      v10 = *(i - 1);
      v11 = *i;
      v16 = *(_QWORD *)(i - 9);
      v17 = v10;
      v18 = v11;
      swift_bridgeObjectRetain();
      a1(&v19, &v16);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v12 = v19;
      v20 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_19C5570B8(v13 > 1, v14 + 1, 1);
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      *(_QWORD *)(v6 + 8 * v14 + 32) = v12;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_19C55E248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD v8[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v3);
  v8[3] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v8[1] = *(_QWORD *)(v5 - 8);
  v8[2] = v5;
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8[0] = v1;
    v8[5] = MEMORY[0x1E0DEE9D8];
    sub_19C557248(0, v6, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C55E47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD v8[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v3);
  v8[3] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v8[1] = *(_QWORD *)(v5 - 8);
  v8[2] = v5;
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8[0] = v1;
    v8[5] = MEMORY[0x1E0DEE9D8];
    sub_19C557248(0, v6, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C55E6B0(uint64_t a1)
{
  int64_t v2;
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  MEMORY[0x1E0C80A78](v4);
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_19C557248(0, v2, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C55E868(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  MEMORY[0x1E0C80A78](v2);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_19C557248(0, v3, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C55EA10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (_QWORD *)((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v24 = (char *)v20 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v20[1] = v1;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_19C5570B8(0, v9, 0);
    v11 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v23 = *(_QWORD *)(v4 + 72);
    v12 = sub_19CAA9488();
    v22 = *(_QWORD *)(v12 - 8);
    v21 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    do
    {
      v13 = *(int *)(v3 + 48);
      v14 = &v24[v13];
      v15 = *v11;
      v21(&v24[v13], (char *)v11 + v13, v12);
      v16 = (char *)v7 + *(int *)(v3 + 48);
      *v7 = v15;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, v12);
      swift_retain_n();
      sub_19C5725E8((uint64_t)v7, &qword_1EE4241F8);
      v10 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19C5570B8(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v25;
      }
      v18 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_19C5570B8(v17 > 1, v18 + 1, 1);
        v10 = v25;
      }
      v11 = (uint64_t *)((char *)v11 + v23);
      *(_QWORD *)(v10 + 16) = v18 + 1;
      *(_QWORD *)(v10 + 8 * v18 + 32) = v15;
      --v9;
    }
    while (v9);
  }
  return v10;
}

_QWORD *sub_19C55EBFC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *(*v15)(int *__return_ptr, uint64_t *);
  uint64_t v16;
  int v17;
  uint64_t v18;

  v15 = (_QWORD *(*)(int *__return_ptr, uint64_t *))result;
  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = v4;
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return (_QWORD *)v7;
  v18 = MEMORY[0x1E0DEE9D8];
  result = (_QWORD *)sub_19C557364(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = v18;
    if (a4 <= a3)
      v10 = a3;
    else
      v10 = a4;
    v11 = a3;
    while (a4 != v11)
    {
      v16 = v11;
      result = v15(&v17, &v16);
      if (v6)
      {
        swift_release();
        return (_QWORD *)v7;
      }
      v6 = 0;
      v12 = v17;
      v18 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        result = (_QWORD *)sub_19C557364(v13 > 1, v14 + 1, 1);
        v7 = v18;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      *(_DWORD *)(v7 + 4 * v14 + 32) = v12;
      if (a4 < a3)
        goto LABEL_19;
      if (v10 == v11)
        goto LABEL_20;
      if (a4 == ++v11)
        return (_QWORD *)v7;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C55ED48(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;
  char v12;

  v2 = v1;
  type metadata accessor for BNNSDevice();
  swift_allocObject();
  v4 = a1;
  v5 = sub_19C576D40(v4);
  if (v5)
  {
    *(_QWORD *)(v2 + 16) = v5;
    v6 = type metadata accessor for AsyncComputeFunctionScheduler();
    swift_allocObject();
    swift_retain();
    v7 = sub_19C56DAD0();
    v10 = v6;
    v11 = &off_1E3D47CC8;
    swift_release();

    *(_QWORD *)&v9 = v7;
    sub_19C4F0F68(&v9, v2 + 24);
    return v2;
  }
  else
  {
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      *(_QWORD *)&v9 = 0;
      *((_QWORD *)&v9 + 1) = 0xE000000000000000;
      sub_19CAA9F2C();
      sub_19CAA992C();
      v12 = 0;
      sub_19CAAA064();
      sub_19CAA992C();
    }
    result = sub_19CAAA0B8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19C55EF10()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSComputeStream()
{
  return objc_opt_self();
}

uint64_t sub_19C55EF5C(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
  __int16 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2 & 0x1FF;
  v5 = swift_bridgeObjectRetain();
  sub_19C5A4638(v5, v4, a3);
  return v6 | 0x4000000000000000;
}

os_unfair_lock_s *sub_19C55EFA0(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C56C164(a1, a2, MEMORY[0x1E0DEE9E8], a3);
}

uint64_t sub_19C55EFCC(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C5680B8(a1, a2, a3);
}

uint64_t sub_19C55EFEC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  os_unfair_lock_t v38;
  uint64_t v39[4];

  v4 = v3;
  v34 = a3;
  v35 = a1;
  v39[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v37 = a2;
  v38 = v6;
  if (v6)
  {
    v33 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v36 = v11;
    sub_19C576F44((uint64_t)v11, v9, v39);
    v38 = v12;
    os_unfair_lock_unlock(v12);
    v13 = v39[0];
    if (!v39[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v39[0] = 0;
        v39[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v32) = 0;
      v31 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C55F76CLL);
    }
    v14 = *(_QWORD *)(v39[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v39);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v39[0];
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v31 = v4;
    v32 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v30, v34);
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 16) = v35;
    v19 = v37;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v20 = sub_19C55E248(v19);
    swift_bridgeObjectRelease();
    v21 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v20;
    v22[3] = v21;
    v22[4] = v8;
    v22[5] = v15;
    v22[6] = sub_19C572398;
    v22[7] = v18;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v22);
    swift_release();
    swift_release();
    v23 = v38;
    os_unfair_lock_lock(v38);
    sub_19C577000(v36, v13);
    os_unfair_lock_unlock(v23);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v34, 0);
    v17 = v24;
    swift_release();
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v26 = sub_19C55E248(a2);
    swift_bridgeObjectRelease();
    v27 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v26;
    inited[3] = v27;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C5726B8;
    inited[7] = v25;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v17;
}

uint64_t sub_19C55F77C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t *v45;
  os_unfair_lock_t v46;
  uint64_t v47;
  uint64_t v48[4];

  v7 = v6;
  v40 = a6;
  v43 = a4;
  v41 = a3;
  v42 = a2;
  v44 = a1;
  v48[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v9 = *(os_unfair_lock_s **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v47 = a5;
  if (v9)
  {
    v39 = v6;
    swift_bridgeObjectRetain();
    v46 = v9;
    __asm { BR              X9 }
  }
  v10 = v44 & 1;
  v11 = swift_bridgeObjectRetain();
  v12 = sub_19C4D4894(v11);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = *(_QWORD *)(v6 + 16);
    v14 = *(os_unfair_lock_s **)(v13 + 40);
    v15 = (uint64_t *)&v14[4];
    v16 = v14 + 6;
    os_unfair_lock_lock(v14 + 6);
    v45 = v15;
    sub_19C576F44((uint64_t)v15, v13, v48);
    v46 = v16;
    os_unfair_lock_unlock(v16);
    v17 = v48[0];
    if (!v48[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v48[0] = 0;
        v48[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v38) = 0;
      v37 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C55FF7CLL);
    }
    v18 = *(_QWORD *)(v48[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v18 + 24));
    sub_19C577424((uint64_t *)(v18 + 16), v17, v48);
    os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
    v19 = v48[0];
    v20 = swift_release();
    MEMORY[0x1E0C80A78](v20);
    v37 = v7;
    v38 = v19;
    v21 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v36, v40);
    v22 = swift_allocObject();
    *(_BYTE *)(v22 + 16) = v10;
    v23 = v41;
    *(_QWORD *)(v22 + 24) = v42;
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v43;
    v24 = v47;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v25 = sub_19C55E248(v24);
    swift_bridgeObjectRelease();
    v26 = sub_19C55E47C(v21);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v25;
    v27[3] = v26;
    v27[4] = v12;
    v27[5] = v19;
    v27[6] = sub_19C57236C;
    v27[7] = v22;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v27);
    swift_release();
    swift_release();
    v28 = v46;
    os_unfair_lock_lock(v46);
    sub_19C577000(v45, v17);
    os_unfair_lock_unlock(v28);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v40, 0);
    v21 = v29;
    swift_release();
    v30 = swift_allocObject();
    *(_BYTE *)(v30 + 16) = v10;
    v31 = v41;
    *(_QWORD *)(v30 + 24) = v42;
    *(_QWORD *)(v30 + 32) = v31;
    *(_QWORD *)(v30 + 40) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = sub_19C55E248(a5);
    swift_bridgeObjectRelease();
    v33 = sub_19C55E47C(v21);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v32;
    inited[3] = v33;
    inited[4] = v12;
    inited[5] = 0;
    inited[6] = sub_19C57236C;
    inited[7] = v30;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v21;
}

uint64_t sub_19C55FF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v27 = a3;
  v28 = a1;
  v31[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v5 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v30 = a2;
  if (v5)
  {
    v26 = v3;
    swift_bridgeObjectRetain();
    v29 = v5;
    __asm { BR              X9 }
  }
  v6 = swift_bridgeObjectRetain();
  v7 = sub_19C4D4894(v6);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = v3[2];
    v9 = *(os_unfair_lock_s **)(v8 + 40);
    v10 = (uint64_t *)&v9[4];
    v11 = v9 + 6;
    os_unfair_lock_lock(v9 + 6);
    sub_19C576F44((uint64_t)v10, v8, v31);
    os_unfair_lock_unlock(v11);
    v12 = v31[0];
    if (!v31[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v31[0] = 0;
        v31[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v25) = 0;
      v24 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C560618);
    }
    v13 = *(_QWORD *)(v31[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_19C577424((uint64_t *)(v13 + 16), v12, v31);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = v31[0];
    v15 = swift_release();
    MEMORY[0x1E0C80A78](v15);
    v24 = (uint64_t)v3;
    v25 = v14;
    v16 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v23, v27);
    sub_19C57D6C8(v30);
    v18 = v17;
    if (*(_QWORD *)(v17 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v18);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C577000(v10, v12);
    os_unfair_lock_unlock(v11);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v27, 0);
    v16 = v19;
    swift_release();
    sub_19C57D6C8(a2);
    v21 = v20;
    if (*(_QWORD *)(v20 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v21);
    }
    else
    {
      sub_19C56D0E0();
    }
  }
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_19C560628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_t v40;
  uint64_t v41;
  uint64_t *v42;
  __int128 v43;
  __int128 v44;
  _QWORD v45[3];

  v4 = v3;
  v38 = a3;
  v39 = a1;
  *(_QWORD *)&v44 = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(uint64_t **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v42 = v6;
  v41 = a2;
  if (v6)
  {
    v37 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v42 = v11;
    sub_19C576F44((uint64_t)v11, v9, (uint64_t *)&v44);
    v40 = v12;
    os_unfair_lock_unlock(v12);
    v13 = v44;
    if (!(_QWORD)v44)
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        *(_QWORD *)&v44 = 0;
        *((_QWORD *)&v44 + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v36) = 0;
      v35 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C560E5CLL);
    }
    v14 = *(_QWORD *)(v44 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, (uint64_t *)&v44);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v44;
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v35 = v4;
    v36 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v34, v38);
    v18 = v39;
    v45[0] = *(_QWORD *)v39;
    v44 = *(_OWORD *)(v39 + 8);
    v43 = *(_OWORD *)(v39 + 24);
    v19 = swift_allocObject();
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)(v19 + 16) = *(_OWORD *)v18;
    *(_OWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 48) = *(_QWORD *)(v18 + 32);
    v21 = v41;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19C4EA73C((uint64_t)v45);
    sub_19C551C5C((uint64_t)&v44);
    sub_19C551C5C((uint64_t)&v43);
    swift_retain();
    v22 = sub_19C55E248(v21);
    swift_bridgeObjectRelease();
    v23 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v22;
    v24[3] = v23;
    v24[4] = v8;
    v24[5] = v15;
    v24[6] = sub_19C5723B4;
    v24[7] = v19;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v24);
    swift_release();
    swift_release();
    v25 = v40;
    os_unfair_lock_lock(v40);
    sub_19C577000(v42, v13);
    os_unfair_lock_unlock(v25);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v38, 0);
    v17 = v26;
    swift_release();
    v27 = v39;
    v45[0] = *(_QWORD *)v39;
    v44 = *(_OWORD *)(v39 + 8);
    v43 = *(_OWORD *)(v39 + 24);
    v28 = swift_allocObject();
    v29 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)(v28 + 16) = *(_OWORD *)v39;
    *(_OWORD *)(v28 + 32) = v29;
    *(_QWORD *)(v28 + 48) = *(_QWORD *)(v27 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19C4EA73C((uint64_t)v45);
    sub_19C551C5C((uint64_t)&v44);
    sub_19C551C5C((uint64_t)&v43);
    v30 = sub_19C55E248(a2);
    swift_bridgeObjectRelease();
    v31 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v30;
    inited[3] = v31;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C57270C;
    inited[7] = v28;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v17;
}

uint64_t sub_19C560E6C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  _QWORD *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  _QWORD *inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t *v41;
  os_unfair_lock_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _OWORD v46[2];

  v38 = a3;
  v40 = a1;
  *(_QWORD *)&v46[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v4 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v44 = v4;
  v43 = a2;
  if (v4)
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v5 = swift_bridgeObjectRetain();
  v6 = sub_19C4D4894(v5);
  swift_bridgeObjectRelease_n();
  v7 = v39;
  if (*(_QWORD *)(v6 + 16))
  {
    v44 = v6;
    v8 = *(_QWORD *)(v39 + 16);
    v9 = *(os_unfair_lock_s **)(v8 + 40);
    v10 = (uint64_t *)&v9[4];
    v11 = v9 + 6;
    os_unfair_lock_lock(v9 + 6);
    v41 = v10;
    sub_19C576F44((uint64_t)v10, v8, (uint64_t *)v46);
    v42 = v11;
    os_unfair_lock_unlock(v11);
    v12 = *(_QWORD *)&v46[0];
    if (!*(_QWORD *)&v46[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        *(_QWORD *)&v46[0] = 0;
        *((_QWORD *)&v46[0] + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v37) = 0;
      v36 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C56165CLL);
    }
    v13 = *(_QWORD *)(*(_QWORD *)&v46[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_19C577424((uint64_t *)(v13 + 16), v12, (uint64_t *)v46);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = *(_QWORD *)&v46[0];
    v15 = swift_release();
    MEMORY[0x1E0C80A78](v15);
    v36 = v39;
    v37 = v14;
    v16 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v35, v38);
    v17 = v43;
    v18 = sub_19C55E6B0(v43);
    v19 = sub_19C55E6B0(v16);
    v20 = v40;
    v21 = v40[1];
    v46[0] = *v40;
    v45 = v21;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v17;
    v23 = v20[1];
    *(_OWORD *)(v22 + 24) = *v20;
    *(_OWORD *)(v22 + 40) = v23;
    *(_QWORD *)(v22 + 56) = *((_QWORD *)v20 + 4);
    *(_QWORD *)(v22 + 64) = v16;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v18;
    v24[3] = v19;
    v24[4] = v44;
    v24[5] = v14;
    v24[6] = sub_19C5719B4;
    v24[7] = v22;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 48));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_19C551C5C((uint64_t)v46);
    sub_19C551C5C((uint64_t)&v45);
    type metadata accessor for AsyncComputeFunctionScheduler();
    swift_bridgeObjectRetain();
    sub_19C56EEE8((uint64_t)v24);
    swift_release();
    swift_release();
    v25 = v42;
    os_unfair_lock_lock(v42);
    sub_19C577000(v41, v12);
    os_unfair_lock_unlock(v25);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v38, 0);
    v16 = v26;
    swift_release();
    v27 = sub_19C55E6B0(a2);
    v28 = sub_19C55E6B0(v16);
    v29 = v40;
    v30 = v40[1];
    v46[0] = *v40;
    v45 = v30;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = a2;
    v32 = v29[1];
    *(_OWORD *)(v31 + 24) = *v29;
    *(_OWORD *)(v31 + 40) = v32;
    *(_QWORD *)(v31 + 56) = *((_QWORD *)v29 + 4);
    *(_QWORD *)(v31 + 64) = v16;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v27;
    inited[3] = v28;
    inited[4] = v6;
    inited[5] = 0;
    inited[6] = sub_19C5726FC;
    inited[7] = v31;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19C551C5C((uint64_t)v46);
    sub_19C551C5C((uint64_t)&v45);
    swift_bridgeObjectRetain();
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
  }
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_19C56166C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *inited;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  os_unfair_lock_t v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[32];

  v36 = a3;
  v38 = a1;
  *(_QWORD *)&v44 = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v4 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v42 = v4;
  v41 = a2;
  if (v4)
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v5 = swift_bridgeObjectRetain();
  v6 = sub_19C4D4894(v5);
  swift_bridgeObjectRelease_n();
  v7 = v37;
  if (*(_QWORD *)(v6 + 16))
  {
    v8 = *(_QWORD *)(v37 + 16);
    v9 = *(os_unfair_lock_s **)(v8 + 40);
    v10 = (uint64_t *)&v9[4];
    v11 = v9 + 6;
    os_unfair_lock_lock(v9 + 6);
    v40 = v10;
    sub_19C576F44((uint64_t)v10, v8, (uint64_t *)&v44);
    v42 = v11;
    os_unfair_lock_unlock(v11);
    v12 = v44;
    if (!(_QWORD)v44)
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        *(_QWORD *)&v44 = 0;
        *((_QWORD *)&v44 + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v35) = 0;
      v34 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C561EB0);
    }
    v13 = *(_QWORD *)(v44 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_19C577424((uint64_t *)(v13 + 16), v12, (uint64_t *)&v44);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = v44;
    v15 = swift_release();
    MEMORY[0x1E0C80A78](v15);
    v34 = v37;
    v35 = v14;
    v16 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v33, v36);
    v17 = v7;
    v18 = v41;
    v39 = sub_19C55E6B0(v41);
    v19 = sub_19C55E6B0(v16);
    v20 = v38;
    sub_19C50E8D4(v38, (uint64_t)v45);
    v44 = *(_OWORD *)(v20 + 3);
    v43 = *(_OWORD *)(v20 + 5);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v16;
    v22 = *((_OWORD *)v20 + 1);
    *(_OWORD *)(v21 + 24) = *(_OWORD *)v20;
    *(_OWORD *)(v21 + 40) = v22;
    *(_OWORD *)(v21 + 56) = *((_OWORD *)v20 + 2);
    *(_QWORD *)(v21 + 72) = v20[6];
    *(_QWORD *)(v21 + 80) = v18;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v39;
    v23[3] = v19;
    v23[4] = v6;
    v23[5] = v14;
    v23[6] = sub_19C571954;
    v23[7] = v21;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v17 + 24), *(_QWORD *)(v17 + 48));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19C551DFC((uint64_t)v45);
    sub_19C551C5C((uint64_t)&v44);
    sub_19C551C5C((uint64_t)&v43);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v23);
    swift_release();
    swift_release();
    v24 = v42;
    os_unfair_lock_lock(v42);
    sub_19C577000(v40, v12);
    os_unfair_lock_unlock(v24);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v36, 0);
    v16 = v25;
    swift_release();
    v26 = sub_19C55E6B0(a2);
    v27 = sub_19C55E6B0(v16);
    v28 = v38;
    sub_19C50E8D4(v38, (uint64_t)v45);
    v44 = *(_OWORD *)(v38 + 3);
    v43 = *(_OWORD *)(v38 + 5);
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v16;
    v30 = *((_OWORD *)v28 + 1);
    *(_OWORD *)(v29 + 24) = *(_OWORD *)v28;
    *(_OWORD *)(v29 + 40) = v30;
    *(_OWORD *)(v29 + 56) = *((_OWORD *)v28 + 2);
    *(_QWORD *)(v29 + 72) = v28[6];
    *(_QWORD *)(v29 + 80) = a2;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v26;
    inited[3] = v27;
    inited[4] = v6;
    inited[5] = 0;
    inited[6] = sub_19C5726F8;
    inited[7] = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_19C551DFC((uint64_t)v45);
    sub_19C551C5C((uint64_t)&v44);
    sub_19C551C5C((uint64_t)&v43);
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v16;
}

uint64_t sub_19C561EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v27 = a3;
  v28 = a1;
  v31[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v5 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v30 = a2;
  if (v5)
  {
    v26 = v3;
    swift_bridgeObjectRetain();
    v29 = v5;
    __asm { BR              X9 }
  }
  v6 = swift_bridgeObjectRetain();
  v7 = sub_19C4D4894(v6);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = v3[2];
    v9 = *(os_unfair_lock_s **)(v8 + 40);
    v10 = (uint64_t *)&v9[4];
    v11 = v9 + 6;
    os_unfair_lock_lock(v9 + 6);
    sub_19C576F44((uint64_t)v10, v8, v31);
    os_unfair_lock_unlock(v11);
    v12 = v31[0];
    if (!v31[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v31[0] = 0;
        v31[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v25) = 0;
      v24 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C56254CLL);
    }
    v13 = *(_QWORD *)(v31[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_19C577424((uint64_t *)(v13 + 16), v12, v31);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = v31[0];
    v15 = swift_release();
    MEMORY[0x1E0C80A78](v15);
    v24 = (uint64_t)v3;
    v25 = v14;
    v16 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v23, v27);
    sub_19C580518(v30, v16);
    v18 = v17;
    if (*(_QWORD *)(v17 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v18);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C577000(v10, v12);
    os_unfair_lock_unlock(v11);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v27, 0);
    v16 = v19;
    swift_release();
    sub_19C580518(a2, v16);
    v21 = v20;
    if (*(_QWORD *)(v20 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v21);
    }
    else
    {
      sub_19C56D0E0();
    }
  }
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_19C56255C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;

  v4 = v3;
  v31 = a1;
  v32 = a3;
  *(_QWORD *)&v35 = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  if (v6)
  {
    v30 = v3;
    swift_bridgeObjectRetain();
    v33 = v6;
    v34 = a2;
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = v3[2];
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_19C576F44((uint64_t)v11, v9, (uint64_t *)&v35);
    os_unfair_lock_unlock(v12);
    v13 = v35;
    if (!(_QWORD)v35)
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        *(_QWORD *)&v35 = 0;
        *((_QWORD *)&v35 + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v29) = 0;
      v28 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C562C14);
    }
    v14 = *(_QWORD *)(v35 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, (uint64_t *)&v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v35;
    v16 = swift_release();
    v17 = v31[1];
    v35 = *v31;
    v36 = v17;
    v37 = *((_BYTE *)v31 + 32);
    MEMORY[0x1E0C80A78](v16);
    v28 = (uint64_t)v4;
    v29 = v15;
    v18 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v27, v32);
    sub_19C581DC8(a2, v18);
    v19 = v4;
    v21 = v20;
    if (*(_QWORD *)(v20 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v19 + 3, v19[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v21);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v11, v13);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_release_n();
  }
  else
  {
    v22 = v31[1];
    v35 = *v31;
    v36 = v22;
    v37 = *((_BYTE *)v31 + 32);
    swift_retain();
    sub_19C57138C(v32, 0);
    v18 = v23;
    swift_release();
    sub_19C581DC8(a2, v18);
    v25 = v24;
    if (*(_QWORD *)(v24 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v25);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
  }
  return v18;
}

uint64_t sub_19C562C24(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];

  v30 = a4;
  v31 = a1;
  v34[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v7 = *(_QWORD *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v33 = a3;
  if (v7)
  {
    v28 = a2;
    v29 = v4;
    swift_bridgeObjectRetain();
    v32 = v7;
    __asm { BR              X9 }
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_19C4D4894(v8);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = v4[2];
    v11 = *(os_unfair_lock_s **)(v10 + 40);
    v12 = (uint64_t *)&v11[4];
    v13 = v11 + 6;
    os_unfair_lock_lock(v11 + 6);
    sub_19C576F44((uint64_t)v12, v10, v34);
    os_unfair_lock_unlock(v13);
    v14 = v34[0];
    if (!v34[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v34[0] = 0;
        v34[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v27) = 0;
      v26 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C5632C8);
    }
    v15 = *(_QWORD *)(v34[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
    sub_19C577424((uint64_t *)(v15 + 16), v14, v34);
    os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
    v16 = v34[0];
    v17 = swift_release();
    MEMORY[0x1E0C80A78](v17);
    v26 = (uint64_t)v4;
    v27 = v16;
    v18 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v25, v30);
    sub_19C5827A0(v33, v18);
    v20 = v19;
    if (*(_QWORD *)(v19 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v20);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v13);
    sub_19C577000(v12, v14);
    os_unfair_lock_unlock(v13);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v30, 0);
    v18 = v21;
    swift_release();
    sub_19C5827A0(v33, v18);
    v23 = v22;
    if (*(_QWORD *)(v22 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v23);
    }
    else
    {
      sub_19C56D0E0();
    }
  }
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_19C5632D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _QWORD *inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  __int128 v43;
  __int128 v44;
  _QWORD v45[3];

  v4 = v3;
  v38 = a3;
  v39 = a1;
  *(_QWORD *)&v44 = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(uint64_t **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v42 = v6;
  v41 = a2;
  if (v6)
  {
    v37 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v42 = v11;
    sub_19C576F44((uint64_t)v11, v9, (uint64_t *)&v44);
    os_unfair_lock_unlock(v12);
    v13 = v44;
    if (!(_QWORD)v44)
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        *(_QWORD *)&v44 = 0;
        *((_QWORD *)&v44 + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v36) = 0;
      v35 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C563AE8);
    }
    v14 = *(_QWORD *)(v44 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, (uint64_t *)&v44);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v44;
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v35 = v4;
    v36 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v34, v38);
    v40 = v17;
    v18 = sub_19C55E868(v41);
    v19 = sub_19C55E868(v17);
    v20 = v39;
    v45[0] = *(_QWORD *)v39;
    v44 = *(_OWORD *)(v39 + 8);
    v43 = *(_OWORD *)(v39 + 24);
    v21 = swift_allocObject();
    v22 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)(v21 + 16) = *(_OWORD *)v20;
    *(_OWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 48) = *(_QWORD *)(v20 + 32);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v18;
    v23[3] = v19;
    v23[4] = v8;
    v23[5] = v15;
    v23[6] = sub_19C571944;
    v23[7] = v21;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    swift_retain();
    swift_retain();
    sub_19C4EA73C((uint64_t)v45);
    sub_19C551C5C((uint64_t)&v44);
    sub_19C551C5C((uint64_t)&v43);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v23);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v42, v13);
    v24 = v12;
    v25 = v40;
    os_unfair_lock_unlock(v24);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v38, 0);
    v25 = v26;
    swift_release();
    v27 = sub_19C55E868(a2);
    v28 = sub_19C55E868(v25);
    v29 = v39;
    v45[0] = *(_QWORD *)v39;
    v44 = *(_OWORD *)(v39 + 8);
    v43 = *(_OWORD *)(v39 + 24);
    v30 = swift_allocObject();
    v31 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)(v30 + 16) = *(_OWORD *)v39;
    *(_OWORD *)(v30 + 32) = v31;
    *(_QWORD *)(v30 + 48) = *(_QWORD *)(v29 + 32);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v27;
    inited[3] = v28;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C572708;
    inited[7] = v30;
    swift_retain();
    sub_19C4EA73C((uint64_t)v45);
    sub_19C551C5C((uint64_t)&v44);
    sub_19C551C5C((uint64_t)&v43);
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v25;
}

uint64_t sub_19C563AF8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  _OWORD *v22;
  __int128 v23;
  _QWORD *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  _OWORD *v32;
  __int128 v33;
  _QWORD *inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  __int128 v45;
  _OWORD v46[2];

  v4 = v3;
  v40 = a3;
  v41 = a1;
  *(_QWORD *)&v46[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(uint64_t **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v44 = v6;
  v43 = a2;
  if (v6)
  {
    v39 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v44 = v11;
    sub_19C576F44((uint64_t)v11, v9, (uint64_t *)v46);
    os_unfair_lock_unlock(v12);
    v13 = *(_QWORD *)&v46[0];
    if (!*(_QWORD *)&v46[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        *(_QWORD *)&v46[0] = 0;
        *((_QWORD *)&v46[0] + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v38) = 0;
      v37 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C5642D0);
    }
    v14 = *(_QWORD *)(*(_QWORD *)&v46[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, (uint64_t *)v46);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = *(_QWORD *)&v46[0];
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v37 = v4;
    v38 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v36, v40);
    v42 = v17;
    v18 = sub_19C55E868(v43);
    v19 = sub_19C55E868(v17);
    v20 = v41;
    v21 = v41[2];
    v46[0] = v41[1];
    v45 = v21;
    v22 = (_OWORD *)swift_allocObject();
    v23 = v20[1];
    v22[1] = *v20;
    v22[2] = v23;
    v22[3] = v20[2];
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v18;
    v24[3] = v19;
    v24[4] = v8;
    v24[5] = v15;
    v24[6] = sub_19C571908;
    v24[7] = v22;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    swift_retain();
    swift_retain();
    sub_19C551C5C((uint64_t)v46);
    sub_19C551C5C((uint64_t)&v45);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v24);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v44, v13);
    v25 = v12;
    v26 = v42;
    os_unfair_lock_unlock(v25);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v40, 0);
    v26 = v27;
    swift_release();
    v28 = sub_19C55E868(a2);
    v29 = sub_19C55E868(v26);
    v30 = v41;
    v31 = v41[2];
    v46[0] = v41[1];
    v45 = v31;
    v32 = (_OWORD *)swift_allocObject();
    v33 = v41[1];
    v32[1] = *v41;
    v32[2] = v33;
    v32[3] = v30[2];
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v28;
    inited[3] = v29;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C572704;
    inited[7] = v32;
    swift_retain();
    sub_19C551C5C((uint64_t)v46);
    sub_19C551C5C((uint64_t)&v45);
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v26;
}

uint64_t sub_19C5642E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v32 = a6;
  v33 = a1;
  v34 = a2;
  v35 = a4;
  v38[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v9 = *(_QWORD *)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v37 = a5;
  if (v9)
  {
    v30 = a3;
    v31 = v6;
    swift_bridgeObjectRetain();
    v36 = v9;
    __asm { BR              X9 }
  }
  v10 = swift_bridgeObjectRetain();
  v11 = sub_19C4D4894(v10);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = v6[2];
    v13 = *(os_unfair_lock_s **)(v12 + 40);
    v14 = (uint64_t *)&v13[4];
    v15 = v13 + 6;
    os_unfair_lock_lock(v13 + 6);
    sub_19C576F44((uint64_t)v14, v12, v38);
    os_unfair_lock_unlock(v15);
    v16 = v38[0];
    if (!v38[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v38[0] = 0;
        v38[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v29) = 0;
      v28 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C564990);
    }
    v17 = *(_QWORD *)(v38[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
    sub_19C577424((uint64_t *)(v17 + 16), v16, v38);
    os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
    v18 = v38[0];
    v19 = swift_release();
    MEMORY[0x1E0C80A78](v19);
    v28 = (uint64_t)v6;
    v29 = v18;
    v20 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v27, v32);
    sub_19C57A8C0(v37, v20);
    v22 = v21;
    if (*(_QWORD *)(v21 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v6 + 3, v6[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v22);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v15);
    sub_19C577000(v14, v16);
    os_unfair_lock_unlock(v15);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v32, 0);
    v20 = v23;
    swift_release();
    sub_19C57A8C0(v37, v20);
    v25 = v24;
    if (*(_QWORD *)(v24 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v6 + 3, v6[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v25);
    }
    else
    {
      sub_19C56D0E0();
    }
  }
  swift_release();
  swift_release();
  return v20;
}

uint64_t sub_19C5649A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21[3];

  v4 = v3;
  v21[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  if (v6)
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v4 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_19C576F44((uint64_t)v11, v9, v21);
    os_unfair_lock_unlock(v12);
    v13 = v21[0];
    if (!v21[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v21[0] = 0;
        v21[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C564F5CLL);
    }
    v14 = *(_QWORD *)(v21[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v21);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v21[0];
    swift_release();
    sub_19C569D6C(v8, v15, a3);
    v17 = v16;
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v11, v13);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_release_n();
  }
  else
  {
    sub_19C569D6C(v8, 0, a3);
    v17 = v18;
    swift_release();
  }
  return v17;
}

uint64_t sub_19C564F6C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v4 = v3;
  v31 = a1;
  v32 = a3;
  *(_QWORD *)&v35 = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  if (v6)
  {
    v30 = v3;
    swift_bridgeObjectRetain();
    v33 = v6;
    v34 = a2;
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = v3[2];
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_19C576F44((uint64_t)v11, v9, (uint64_t *)&v35);
    os_unfair_lock_unlock(v12);
    v13 = v35;
    if (!(_QWORD)v35)
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        *(_QWORD *)&v35 = 0;
        *((_QWORD *)&v35 + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v29) = 0;
      v28 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C565624);
    }
    v14 = *(_QWORD *)(v35 + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, (uint64_t *)&v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v35;
    v16 = swift_release();
    v17 = v31[1];
    v35 = *v31;
    v36 = v17;
    v37 = v31[2];
    MEMORY[0x1E0C80A78](v16);
    v28 = (uint64_t)v4;
    v29 = v15;
    v18 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v27, v32);
    sub_19C57AF2C(a2, v18);
    v19 = v4;
    v21 = v20;
    if (*(_QWORD *)(v20 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v19 + 3, v19[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v21);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v11, v13);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_release_n();
  }
  else
  {
    v22 = v31[1];
    v35 = *v31;
    v36 = v22;
    v37 = v31[2];
    swift_retain();
    sub_19C57138C(v32, 0);
    v18 = v23;
    swift_release();
    sub_19C57AF2C(a2, v18);
    v25 = v24;
    if (*(_QWORD *)(v24 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v25);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
  }
  return v18;
}

uint64_t sub_19C565634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v22;
  uint64_t v23[3];

  v4 = v3;
  v23[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v22 = a2;
  if (v6)
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v4 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_19C576F44((uint64_t)v11, v9, v23);
    os_unfair_lock_unlock(v12);
    v13 = v23[0];
    if (!v23[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v23[0] = 0;
        v23[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C565BF0);
    }
    v14 = *(_QWORD *)(v23[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v23);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v23[0];
    swift_release();
    sub_19C569F80(v8, v15, a3, v4, a1, v22);
    v17 = v16;
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v11, v13);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_release_n();
  }
  else
  {
    sub_19C569F80(v8, 0, a3, v4, a1, a2);
    v17 = v18;
    swift_release();
  }
  return v17;
}

uint64_t sub_19C565C00(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  os_unfair_lock_t v38;
  uint64_t v39[4];

  v4 = v3;
  v34 = a3;
  v35 = a1;
  v39[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v37 = a2;
  v38 = v6;
  if (v6)
  {
    v33 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v36 = v11;
    sub_19C576F44((uint64_t)v11, v9, v39);
    v38 = v12;
    os_unfair_lock_unlock(v12);
    v13 = v39[0];
    if (!v39[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v39[0] = 0;
        v39[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v32) = 0;
      v31 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C566380);
    }
    v14 = *(_QWORD *)(v39[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v39);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v39[0];
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v31 = v4;
    v32 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v30, v34);
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 16) = v35;
    v19 = v37;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v20 = sub_19C55E248(v19);
    swift_bridgeObjectRelease();
    v21 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v20;
    v22[3] = v21;
    v22[4] = v8;
    v22[5] = v15;
    v22[6] = sub_19C572450;
    v22[7] = v18;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v22);
    swift_release();
    swift_release();
    v23 = v38;
    os_unfair_lock_lock(v38);
    sub_19C577000(v36, v13);
    os_unfair_lock_unlock(v23);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v34, 0);
    v17 = v24;
    swift_release();
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v26 = sub_19C55E248(a2);
    swift_bridgeObjectRelease();
    v27 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v26;
    inited[3] = v27;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C5726BC;
    inited[7] = v25;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v17;
}

uint64_t sub_19C566390(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t *v43;
  os_unfair_lock_t v44;
  uint64_t v45;
  uint64_t v46[4];

  v6 = v5;
  v39 = a5;
  v42 = a3;
  v41 = a2;
  v40 = a1;
  v46[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v8 = *(os_unfair_lock_s **)(a4 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  if (v8)
  {
    v38 = v5;
    swift_bridgeObjectRetain();
    v44 = v8;
    v45 = a4;
    __asm { BR              X9 }
  }
  v9 = swift_bridgeObjectRetain();
  v10 = sub_19C4D4894(v9);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = *(_QWORD *)(v5 + 16);
    v12 = *(os_unfair_lock_s **)(v11 + 40);
    v13 = (uint64_t *)&v12[4];
    v14 = v12 + 6;
    os_unfair_lock_lock(v12 + 6);
    v43 = v13;
    sub_19C576F44((uint64_t)v13, v11, v46);
    v44 = v14;
    os_unfair_lock_unlock(v14);
    v15 = v46[0];
    if (!v46[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v46[0] = 0;
        v46[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v37) = 0;
      v36 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C566B3CLL);
    }
    v16 = *(_QWORD *)(v46[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
    sub_19C577424((uint64_t *)(v16 + 16), v15, v46);
    os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
    v17 = v46[0];
    v18 = swift_release();
    MEMORY[0x1E0C80A78](v18);
    v36 = v6;
    v37 = v17;
    v19 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v35, v39);
    v20 = sub_19C55E868(a4);
    v21 = sub_19C55E868(v19);
    v22 = v6;
    v23 = swift_allocObject();
    v24 = v41;
    *(_QWORD *)(v23 + 16) = v40;
    *(_QWORD *)(v23 + 24) = v24;
    *(_BYTE *)(v23 + 32) = v42 & 1;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v20;
    v25[3] = v21;
    v25[4] = v10;
    v25[5] = v17;
    v25[6] = sub_19C57187C;
    v25[7] = v23;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v22 + 24), *(_QWORD *)(v22 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    swift_retain();
    swift_retain();
    v26 = v19;
    sub_19C56EEE8((uint64_t)v25);
    swift_release();
    swift_release();
    v27 = v44;
    os_unfair_lock_lock(v44);
    sub_19C577000(v43, v15);
    os_unfair_lock_unlock(v27);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v39, 0);
    v26 = v28;
    swift_release();
    v29 = sub_19C55E868(a4);
    v30 = sub_19C55E868(v26);
    v31 = swift_allocObject();
    v32 = v41;
    *(_QWORD *)(v31 + 16) = v40;
    *(_QWORD *)(v31 + 24) = v32;
    *(_BYTE *)(v31 + 32) = v42 & 1;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v29;
    inited[3] = v30;
    inited[4] = v10;
    inited[5] = 0;
    inited[6] = sub_19C5726CC;
    inited[7] = v31;
    swift_retain();
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v26;
}

uint64_t sub_19C566B4C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41[4];

  v5 = v4;
  v35 = a4;
  v37 = a2;
  v36 = a1;
  v41[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v7 = *(uint64_t **)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  if (v7)
  {
    v34 = v4;
    swift_bridgeObjectRetain();
    v39 = v7;
    v40 = a3;
    __asm { BR              X9 }
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_19C4D4894(v8);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(_QWORD *)(v4 + 16);
    v11 = *(os_unfair_lock_s **)(v10 + 40);
    v12 = (uint64_t *)&v11[4];
    v13 = v11 + 6;
    os_unfair_lock_lock(v11 + 6);
    v39 = v12;
    sub_19C576F44((uint64_t)v12, v10, v41);
    os_unfair_lock_unlock(v13);
    v14 = v41[0];
    if (!v41[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v41[0] = 0;
        v41[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v33) = 0;
      v32 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C5672D4);
    }
    v15 = *(_QWORD *)(v41[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
    sub_19C577424((uint64_t *)(v15 + 16), v14, v41);
    os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
    v16 = v41[0];
    v17 = swift_release();
    MEMORY[0x1E0C80A78](v17);
    v32 = v5;
    v33 = v16;
    v18 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v31, v35);
    v38 = v18;
    v19 = sub_19C55E868(a3);
    v20 = sub_19C55E868(v18);
    v21 = v5;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v36;
    *(_BYTE *)(v22 + 24) = v37;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v19;
    v23[3] = v20;
    v23[4] = v9;
    v23[5] = v16;
    v23[6] = sub_19C571850;
    v23[7] = v22;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v21 + 24), *(_QWORD *)(v21 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    swift_retain();
    swift_retain();
    sub_19C56EEE8((uint64_t)v23);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v13);
    sub_19C577000(v39, v14);
    os_unfair_lock_unlock(v13);
    swift_release();
    swift_release();
    v24 = v38;
  }
  else
  {
    swift_retain();
    sub_19C57138C(v35, 0);
    v24 = v25;
    swift_release();
    v26 = sub_19C55E868(a3);
    v27 = sub_19C55E868(v24);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v36;
    *(_BYTE *)(v28 + 24) = v37;
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v26;
    inited[3] = v27;
    inited[4] = v9;
    inited[5] = 0;
    inited[6] = sub_19C572714;
    inited[7] = v28;
    swift_retain();
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v24;
}

uint64_t sub_19C5672E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v22;
  uint64_t v23[3];

  v4 = v3;
  v23[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v22 = a2;
  if (v6)
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v4 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_19C576F44((uint64_t)v11, v9, v23);
    os_unfair_lock_unlock(v12);
    v13 = v23[0];
    if (!v23[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v23[0] = 0;
        v23[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C5678A0);
    }
    v14 = *(_QWORD *)(v23[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v23);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v23[0];
    swift_release();
    sub_19C56A1BC(v8, v15, a3, v4, a1, v22);
    v17 = v16;
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v11, v13);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_release_n();
  }
  else
  {
    sub_19C56A1BC(v8, 0, a3, v4, a1, a2);
    v17 = v18;
    swift_release();
  }
  return v17;
}

uint64_t sub_19C5678B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  os_unfair_lock_t v45;
  uint64_t v46[4];

  v7 = v6;
  v38 = a6;
  v40 = a4;
  v42 = a3;
  v41 = a2;
  v39 = a1;
  v46[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v9 = *(os_unfair_lock_s **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v45 = v9;
  if (v9)
  {
    v37 = v6;
    swift_bridgeObjectRetain();
    v44 = a5;
    __asm { BR              X9 }
  }
  v10 = swift_bridgeObjectRetain();
  v11 = sub_19C4D4894(v10);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = *(_QWORD *)(v6 + 16);
    v13 = *(os_unfair_lock_s **)(v12 + 40);
    v14 = (uint64_t *)&v13[4];
    v15 = v13 + 6;
    os_unfair_lock_lock(v13 + 6);
    v43 = v14;
    sub_19C576F44((uint64_t)v14, v12, v46);
    v45 = v15;
    os_unfair_lock_unlock(v15);
    v16 = v46[0];
    if (!v46[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v46[0] = 0;
        v46[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v36) = 0;
      v35 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C5680A8);
    }
    v17 = *(_QWORD *)(v46[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
    sub_19C577424((uint64_t *)(v17 + 16), v16, v46);
    os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
    v18 = v46[0];
    v19 = swift_release();
    MEMORY[0x1E0C80A78](v19);
    v35 = v7;
    v36 = v18;
    v20 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v34, v38);
    v21 = swift_allocObject();
    v22 = v41;
    *(_QWORD *)(v21 + 16) = v39;
    *(_QWORD *)(v21 + 24) = v22;
    *(_QWORD *)(v21 + 32) = v42;
    *(_BYTE *)(v21 + 40) = v40;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v23 = sub_19C55E248(a5);
    swift_bridgeObjectRelease();
    v24 = sub_19C55E47C(v20);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v23;
    v25[3] = v24;
    v25[4] = v11;
    v25[5] = v18;
    v25[6] = sub_19C5723C4;
    v25[7] = v21;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v25);
    swift_release();
    swift_release();
    v26 = v45;
    os_unfair_lock_lock(v45);
    sub_19C577000(v43, v16);
    os_unfair_lock_unlock(v26);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v38, 0);
    v20 = v27;
    swift_release();
    v28 = swift_allocObject();
    v29 = v41;
    *(_QWORD *)(v28 + 16) = v39;
    *(_QWORD *)(v28 + 24) = v29;
    *(_QWORD *)(v28 + 32) = v42;
    *(_BYTE *)(v28 + 40) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = sub_19C55E248(a5);
    swift_bridgeObjectRelease();
    v31 = sub_19C55E47C(v20);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v30;
    inited[3] = v31;
    inited[4] = v11;
    inited[5] = 0;
    inited[6] = sub_19C572700;
    inited[7] = v28;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v20;
}

uint64_t sub_19C5680B8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  os_unfair_lock_t v38;
  uint64_t v39[4];

  v4 = v3;
  v34 = a3;
  v35 = a1;
  v39[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(os_unfair_lock_s **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v37 = a2;
  v38 = v6;
  if (v6)
  {
    v33 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v36 = v11;
    sub_19C576F44((uint64_t)v11, v9, v39);
    v38 = v12;
    os_unfair_lock_unlock(v12);
    v13 = v39[0];
    if (!v39[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v39[0] = 0;
        v39[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v32) = 0;
      v31 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C568838);
    }
    v14 = *(_QWORD *)(v39[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v39);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v39[0];
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v31 = v4;
    v32 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v30, v34);
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 16) = v35;
    v19 = v37;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v20 = sub_19C55E248(v19);
    swift_bridgeObjectRelease();
    v21 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v20;
    v22[3] = v21;
    v22[4] = v8;
    v22[5] = v15;
    v22[6] = sub_19C5724A0;
    v22[7] = v18;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v22);
    swift_release();
    swift_release();
    v23 = v38;
    os_unfair_lock_lock(v38);
    sub_19C577000(v36, v13);
    os_unfair_lock_unlock(v23);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v34, 0);
    v17 = v24;
    swift_release();
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v26 = sub_19C55E248(a2);
    swift_bridgeObjectRelease();
    v27 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v26;
    inited[3] = v27;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C5726C4;
    inited[7] = v25;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v17;
}

uint64_t sub_19C568848(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  _QWORD *inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  __int128 v43;
  _OWORD v44[2];

  v4 = v3;
  v38 = a3;
  v39 = a1;
  *(_QWORD *)&v44[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(uint64_t **)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v42 = v6;
  v41 = a2;
  if (v6)
  {
    v37 = v3;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    v42 = v11;
    sub_19C576F44((uint64_t)v11, v9, (uint64_t *)v44);
    os_unfair_lock_unlock(v12);
    v13 = *(_QWORD *)&v44[0];
    if (!*(_QWORD *)&v44[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        *(_QWORD *)&v44[0] = 0;
        *((_QWORD *)&v44[0] + 1) = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v36) = 0;
      v35 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C569028);
    }
    v14 = *(_QWORD *)(*(_QWORD *)&v44[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, (uint64_t *)v44);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = *(_QWORD *)&v44[0];
    v16 = swift_release();
    MEMORY[0x1E0C80A78](v16);
    v35 = v4;
    v36 = v15;
    v17 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726D0, (uint64_t)&v34, v38);
    v40 = v17;
    v18 = sub_19C55E868(v41);
    v19 = sub_19C55E868(v17);
    v20 = v39;
    v44[0] = *(_OWORD *)((char *)v39 + 8);
    v43 = *(_OWORD *)((char *)v39 + 24);
    v21 = swift_allocObject();
    v22 = v20[1];
    *(_OWORD *)(v21 + 16) = *v20;
    *(_OWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 48) = *((_QWORD *)v20 + 4);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v18;
    v23[3] = v19;
    v23[4] = v8;
    v23[5] = v15;
    v23[6] = sub_19C572408;
    v23[7] = v21;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 48));
    swift_retain();
    swift_retain();
    sub_19C551C5C((uint64_t)v44);
    sub_19C551C5C((uint64_t)&v43);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v23);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v42, v13);
    v24 = v12;
    v25 = v40;
    os_unfair_lock_unlock(v24);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v38, 0);
    v25 = v26;
    swift_release();
    v27 = sub_19C55E868(a2);
    v28 = sub_19C55E868(v25);
    v29 = v39;
    v44[0] = *(_OWORD *)((char *)v39 + 8);
    v43 = *(_OWORD *)((char *)v39 + 24);
    v30 = swift_allocObject();
    v31 = v39[1];
    *(_OWORD *)(v30 + 16) = *v39;
    *(_OWORD *)(v30 + 32) = v31;
    *(_QWORD *)(v30 + 48) = *((_QWORD *)v29 + 4);
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v27;
    inited[3] = v28;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C572710;
    inited[7] = v30;
    swift_retain();
    sub_19C551C5C((uint64_t)v44);
    sub_19C551C5C((uint64_t)&v43);
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  swift_release();
  return v25;
}

uint64_t sub_19C569038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v27 = a3;
  v28 = a1;
  v31[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v5 = *(_QWORD *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v30 = a2;
  if (v5)
  {
    v26 = v3;
    swift_bridgeObjectRetain();
    v29 = v5;
    __asm { BR              X9 }
  }
  v6 = swift_bridgeObjectRetain();
  v7 = sub_19C4D4894(v6);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = v3[2];
    v9 = *(os_unfair_lock_s **)(v8 + 40);
    v10 = (uint64_t *)&v9[4];
    v11 = v9 + 6;
    os_unfair_lock_lock(v9 + 6);
    sub_19C576F44((uint64_t)v10, v8, v31);
    os_unfair_lock_unlock(v11);
    v12 = v31[0];
    if (!v31[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v31[0] = 0;
        v31[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v25) = 0;
      v24 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C5696C4);
    }
    v13 = *(_QWORD *)(v31[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_19C577424((uint64_t *)(v13 + 16), v12, v31);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = v31[0];
    v15 = swift_release();
    MEMORY[0x1E0C80A78](v15);
    v24 = (uint64_t)v3;
    v25 = v14;
    v16 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C571778, (uint64_t)&v23, v27);
    sub_19C575BAC(v30);
    v18 = v17;
    if (*(_QWORD *)(v17 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v18);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v11);
    sub_19C577000(v10, v12);
    os_unfair_lock_unlock(v11);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v27, 0);
    v16 = v19;
    swift_release();
    sub_19C575BAC(a2);
    v21 = v20;
    if (*(_QWORD *)(v20 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v21);
    }
    else
    {
      sub_19C56D0E0();
    }
  }
  swift_release();
  swift_release();
  return v16;
}

os_unfair_lock_s *sub_19C5696D4(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C56B354(a1, a2, MEMORY[0x1E0DEE9E8], a3);
}

uint64_t sub_19C569700(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C565C00(a1, a2, a3);
}

uint64_t sub_19C569720(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C568848(a1, a2, a3);
}

uint64_t sub_19C569740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C55FF8C(a1, a2, a3);
}

uint64_t sub_19C569760(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_19C5678B0(a1, a2, a3, a4, a5, a6);
}

void sub_19C569780(uint64_t a1, uint64_t a2)
{
  sub_19C5697A0(a1, a2);
}

void sub_19C5697A0(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x19C5699A4);
}

uint64_t sub_19C5699B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C560628(a1, a2, a3);
}

uint64_t sub_19C5699D4(uint64_t a1, uint64_t a2)
{
  return sub_19C571A04(a1, a2);
}

uint64_t sub_19C5699F4(int a1, uint64_t a2, uint64_t a3)
{
  return sub_19C55EFEC(a1, a2, a3);
}

uint64_t sub_19C569A14(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C55F77C(a1 & 1, a2, a3, a4, a5, a6);
}

uint64_t sub_19C569A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C5672E4(a1, a2, a3);
}

uint64_t *sub_19C569A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v12;
  uint64_t *v13;

  v12 = (uint64_t *)sub_19C5721AC((uint64_t)&unk_1E3D45EF0);
  v13 = sub_19C56A5E8(a1, a2, a3, a4, a5, v12, a6);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19C569AE4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C560E6C(a1, a2, a3);
}

uint64_t sub_19C569B04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C56166C(a1, a2, a3);
}

uint64_t sub_19C569B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C561EC0(a1, a2, a3);
}

uint64_t sub_19C569B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C5632D8(a1, a2, a3);
}

uint64_t sub_19C569B64(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_19C563AF8(a1, a2, a3);
}

uint64_t sub_19C569B84(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_19C5642E0(a1, a2, a3 & 1, a4, a5, a6);
}

uint64_t sub_19C569BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C5649A0(a1, a2, a3);
}

uint64_t sub_19C569BC8(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  __int128 v5[3];

  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return sub_19C564F6C(v5, a2, a3);
}

uint64_t sub_19C569C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C565634(a1, a2, a3);
}

uint64_t sub_19C569C24(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_19C566390(a1, a2, a3 & 1, a4, a5);
}

uint64_t sub_19C569C48(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_19C566B4C(a1, a2, a3, a4);
}

uint64_t sub_19C569C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v3;
  __int128 v5[2];
  char v6;

  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v6 = *(_BYTE *)(a1 + 32);
  return sub_19C56255C(v5, a2, a3);
}

uint64_t sub_19C569CA4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_19C562C24(a1, a2 & 1, a3, a4);
}

uint64_t sub_19C569CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19C569038(a1, a2, a3);
}

void sub_19C569CEC(__IOSurface *a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;

  if (qword_1EE422E98 != -1)
    swift_once();
  v2 = qword_1EE4243D0 + 16;
  v3 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
  sub_19C57958C(v2, a1);
  os_unfair_lock_unlock(v3);
}

void sub_19C569D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  swift_retain();
  sub_19C57138C(a3, a2);
  v6 = v5;
  swift_release();
  swift_release();
  if (*(_QWORD *)(v6 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C569F6CLL);
}

void sub_19C569F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_19C57138C(a3, a2);
  swift_release();
  swift_release();
  if (*(_QWORD *)(a6 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C56A1ACLL);
}

void sub_19C56A1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_19C57138C(a3, a2);
  swift_release();
  swift_release();
  if (*(_QWORD *)(a6 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C56A46CLL);
}

void sub_19C56A490(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  int v8;
  void *v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)a1;
  v7 = *(unsigned __int8 *)(a1 + 8);
  v8 = *(unsigned __int8 *)(a1 + 9);
  v9 = (void *)MEMORY[0x1A1AD6338]();
  if (qword_1EE422E98 != -1)
    swift_once();
  v10 = (uint64_t *)(qword_1EE4243D0 + 16);
  v11 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
  if (v8)
    v12 = 256;
  else
    v12 = 0;
  sub_19C5782F8(v10, v6, v12 | v7, 0, 1, &v15);
  if (v3)
  {
    os_unfair_lock_unlock(v11);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v11);
    v13 = v15;
    objc_autoreleasePoolPop(v9);
    type metadata accessor for IOSurfaceStorage();
    v14 = swift_allocObject();
    *(_BYTE *)(v14 + 32) = v7;
    *(_BYTE *)(v14 + 33) = v8;
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = v6;
    if (a2)
    {
      *(_QWORD *)(v14 + 40) = a2;
      *(_QWORD *)(v14 + 48) = &off_1E3D46A78;
    }
    else
    {
      *(_QWORD *)(v14 + 40) = 0;
      *(_QWORD *)(v14 + 48) = 0;
    }
    *(_QWORD *)(v14 + 56) = sub_19C569CE8;
    *(_QWORD *)(v14 + 64) = 0;
    *a3 = v14 | 0x4000000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
  }
}

uint64_t *sub_19C56A5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  int64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t *v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  __int128 v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64[2];

  v54 = a4;
  v55 = a7;
  v63 = a6;
  v52 = a2;
  v53 = a3;
  v51 = a1;
  v8 = *(_QWORD *)(a5 + 16);
  v9 = sub_19C4F9248(0, v8, 0, MEMORY[0x1E0DEE9D8]);
  if (v8)
  {
    LODWORD(v56) = 0;
    v61 = a5 + 32;
    v10 = v63 + 7;
    v60 = xmmword_19CAE8180;
    v59 = 0x800000019CABB0E0;
    v62 = (_QWORD *)v8;
    v11 = 0;
    while (1)
    {
      if (v11 == v62)
      {
        __break(1u);
        JUMPOUT(0x19C56B1D4);
      }
      v12 = (uint64_t)v11 + 1;
      v13 = *(_QWORD *)(v61 + 8 * (_QWORD)v11);
      if (!v63[2])
        goto LABEL_11;
      v14 = sub_19CAAA28C();
      v15 = -1 << *((_BYTE *)v63 + 32);
      v16 = v14 & ~v15;
      if (((*(unint64_t *)((char *)v10 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_11;
      v17 = v63[6];
      if (*(_QWORD **)(v17 + 8 * v16) != v11)
        break;
LABEL_12:
      v19 = v8;
      v21 = v9[2];
      v20 = v9[3];
      v22 = v9;
      swift_retain_n();
      if (v21 >= v20 >> 1)
        v22 = sub_19C4F9248((_QWORD *)(v20 > 1), v21 + 1, 1, v9);
      v22[2] = v21 + 1;
      v9 = v22;
      v22[v21 + 4] = v13;
      swift_release();
      v11 = (_QWORD *)((char *)v11 + 1);
      v8 = v19;
      if (v12 == v19)
        goto LABEL_17;
    }
    v18 = ~v15;
    while (1)
    {
      v16 = (v16 + 1) & v18;
      if (((*(unint64_t *)((char *)v10 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        break;
      if (*(_QWORD **)(v17 + 8 * v16) == v11)
        goto LABEL_12;
    }
LABEL_11:
    __asm { BR              X8 }
  }
  LODWORD(v56) = 0;
LABEL_17:
  v64[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v23 = v9[2];
  v62 = v9;
  if (v23)
  {
    swift_bridgeObjectRetain();
    v63 = (uint64_t *)v64[0];
    v61 = v23;
    __asm { BR              X9 }
  }
  v24 = swift_bridgeObjectRetain();
  v25 = sub_19C4D4894(v24);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v25 + 16))
  {
    v26 = v58;
    v27 = v58[2];
    v28 = *(os_unfair_lock_s **)(v27 + 40);
    v29 = (uint64_t *)&v28[4];
    v30 = v28 + 6;
    os_unfair_lock_lock(v28 + 6);
    v63 = v29;
    sub_19C576F44((uint64_t)v29, v27, v64);
    os_unfair_lock_unlock(v30);
    v31 = v64[0];
    if (!v64[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if ((byte_1EE4317C9 & 1) != 0)
      {
        v64[0] = 0;
        v64[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v50) = 0;
      v49 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C56B314);
    }
    v32 = *(_QWORD *)(v64[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
    sub_19C577424((uint64_t *)(v32 + 16), v31, v64);
    os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
    v33 = v64[0];
    v34 = swift_release();
    MEMORY[0x1E0C80A78](v34);
    v49 = (uint64_t)v58;
    v50 = v33;
    v35 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5722B8, (uint64_t)&v48, v55);
    v36 = swift_bridgeObjectRetain();
    v57 = v35;
    sub_19C57ED4C(v36);
    v38 = v37;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v38 + 40))
    {
      __swift_project_boxed_opaque_existential_1(v26 + 3, v26[6]);
      type metadata accessor for AsyncComputeFunctionScheduler();
      sub_19C56EEE8(v38);
    }
    else
    {
      sub_19C56D0E0();
    }
    swift_release();
    swift_release();
    os_unfair_lock_lock(v30);
    sub_19C577000(v63, v31);
    os_unfair_lock_unlock(v30);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    v40 = v57;
    if ((v56 & 1) != 0)
      goto LABEL_27;
LABEL_33:
    v46 = (uint64_t *)v40;
    goto LABEL_34;
  }
  swift_retain();
  sub_19C571578(v55, 0);
  v40 = v39;
  swift_release();
  v41 = swift_bridgeObjectRetain();
  sub_19C57ED4C(v41);
  v43 = v42;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v43 + 40))
  {
    __swift_project_boxed_opaque_existential_1(v58 + 3, v58[6]);
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8(v43);
  }
  else
  {
    sub_19C56D0E0();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if ((v56 & 1) == 0)
    goto LABEL_33;
LABEL_27:
  v44 = *(_QWORD *)(v40 + 16);
  v45 = sub_19C4F9248(0, v44, 0, MEMORY[0x1E0DEE9D8]);
  v46 = v45;
  if (v44)
  {
    if (v44 <= *(_QWORD *)(v55 + 16))
    {
      v60 = xmmword_19CAE8180;
      v56 = 0x800000019CABB0E0;
      v57 = v40;
      v59 = v44;
      v63 = v45;
      v61 = 1;
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x19C56B1E8);
  }
  swift_bridgeObjectRelease();
LABEL_34:
  swift_bridgeObjectRelease();
  return v46;
}

os_unfair_lock_s *sub_19C56B354(int a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t a4)
{
  int64_t v5;
  _QWORD *v6;
  os_unfair_lock_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *inited;
  uint64_t v45;
  unint64_t v46;
  os_unfair_lock_s *v47;
  os_unfair_lock_s *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  os_unfair_lock_t v61;
  uint64_t v62[2];

  v53 = a4;
  v61 = a3;
  LODWORD(v55) = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_19C4F9248(0, v5, 0, MEMORY[0x1E0DEE9D8]);
  if (v5)
  {
    LODWORD(v54) = 0;
    v59 = a2 + 32;
    v7 = v61 + 14;
    v58 = xmmword_19CAE8180;
    v57 = 0x800000019CABB0E0;
    v60 = (_QWORD *)v5;
    v8 = 0;
    while (1)
    {
      if (v8 == v60)
      {
        __break(1u);
        JUMPOUT(0x19C56BFE0);
      }
      v9 = (uint64_t)v8 + 1;
      v10 = *(_QWORD *)(v59 + 8 * (_QWORD)v8);
      if (!*(_QWORD *)&v61[4]._os_unfair_lock_opaque)
        goto LABEL_11;
      v11 = sub_19CAAA28C();
      v12 = -1 << LOBYTE(v61[8]._os_unfair_lock_opaque);
      v13 = v11 & ~v12;
      if (((*(_QWORD *)((char *)&v7->_os_unfair_lock_opaque + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_11;
      v14 = *(_QWORD *)&v61[12]._os_unfair_lock_opaque;
      if (*(_QWORD **)(v14 + 8 * v13) != v8)
        break;
LABEL_12:
      v16 = v5;
      v17 = v6[2];
      v18 = v6[3];
      v19 = v6;
      swift_retain_n();
      if (v17 >= v18 >> 1)
        v19 = sub_19C4F9248((_QWORD *)(v18 > 1), v17 + 1, 1, v6);
      v19[2] = v17 + 1;
      v6 = v19;
      v19[v17 + 4] = v10;
      swift_release();
      v8 = (_QWORD *)((char *)v8 + 1);
      v5 = v16;
      if (v9 == v16)
        goto LABEL_17;
    }
    v15 = ~v12;
    while (1)
    {
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)((char *)&v7->_os_unfair_lock_opaque + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        break;
      if (*(_QWORD **)(v14 + 8 * v13) == v8)
        goto LABEL_12;
    }
LABEL_11:
    __asm { BR              X8 }
  }
  LODWORD(v54) = 0;
LABEL_17:
  v62[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v20 = (uint64_t *)v6[2];
  v60 = v6;
  if (v20)
  {
    swift_bridgeObjectRetain();
    v61 = (os_unfair_lock_t)v62[0];
    v59 = (uint64_t)v20;
    __asm { BR              X9 }
  }
  v21 = swift_bridgeObjectRetain();
  v22 = sub_19C4D4894(v21);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = v56;
    v24 = *(_QWORD *)(v56 + 16);
    v25 = *(os_unfair_lock_s **)(v24 + 40);
    v26 = (uint64_t *)&v25[4];
    v27 = v25 + 6;
    os_unfair_lock_lock(v25 + 6);
    v59 = (uint64_t)v26;
    sub_19C576F44((uint64_t)v26, v24, v62);
    v61 = v27;
    os_unfair_lock_unlock(v27);
    v28 = v62[0];
    if (!v62[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v62[0] = 0;
        v62[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v52) = 0;
      v51 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C56C124);
    }
    v29 = *(_QWORD *)(v62[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
    sub_19C577424((uint64_t *)(v29 + 16), v28, v62);
    os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
    v30 = v62[0];
    v31 = swift_release();
    MEMORY[0x1E0C80A78](v31);
    v51 = v56;
    v52 = v30;
    v32 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726E4, (uint64_t)&v50, v53);
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = v55;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v34 = sub_19C55E248((uint64_t)v6);
    swift_bridgeObjectRelease();
    v35 = v23;
    v36 = sub_19C55E47C(v32);
    v55 = v32;
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v34;
    v37[3] = v36;
    v37[4] = v22;
    v37[5] = v30;
    v37[6] = sub_19C572478;
    v37[7] = v33;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v35 + 24), *(_QWORD *)(v35 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v37);
    swift_release();
    swift_release();
    v38 = v61;
    os_unfair_lock_lock(v61);
    sub_19C577000((uint64_t *)v59, v28);
    os_unfair_lock_unlock(v38);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C571578(v53, 0);
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_BYTE *)(v41 + 16) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v42 = sub_19C55E248((uint64_t)v60);
    swift_bridgeObjectRelease();
    v43 = sub_19C55E47C(v40);
    v55 = v40;
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v42;
    inited[3] = v43;
    inited[4] = v22;
    inited[5] = 0;
    inited[6] = sub_19C5726C0;
    inited[7] = v41;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if ((v54 & 1) != 0)
  {
    v45 = v55;
    v46 = *(_QWORD *)(v55 + 16);
    v47 = (os_unfair_lock_s *)sub_19C4F9248(0, v46, 0, MEMORY[0x1E0DEE9D8]);
    v48 = v47;
    if (v46)
    {
      if (v46 <= *(_QWORD *)(v53 + 16))
      {
        v58 = xmmword_19CAE8180;
        v54 = 0x800000019CABB0E0;
        v57 = v46;
        v61 = v47;
        v59 = 1;
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x19C56BFF4);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = (os_unfair_lock_s *)v55;
  }
  swift_bridgeObjectRelease();
  return v48;
}

os_unfair_lock_s *sub_19C56C164(int a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t a4)
{
  int64_t v5;
  _QWORD *v6;
  os_unfair_lock_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t *v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *inited;
  uint64_t v45;
  unint64_t v46;
  os_unfair_lock_s *v47;
  os_unfair_lock_s *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  os_unfair_lock_t v61;
  uint64_t v62[2];

  v53 = a4;
  v61 = a3;
  LODWORD(v55) = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_19C4F9248(0, v5, 0, MEMORY[0x1E0DEE9D8]);
  if (v5)
  {
    LODWORD(v54) = 0;
    v59 = a2 + 32;
    v7 = v61 + 14;
    v58 = xmmword_19CAE8180;
    v57 = 0x800000019CABB0E0;
    v60 = (_QWORD *)v5;
    v8 = 0;
    while (1)
    {
      if (v8 == v60)
      {
        __break(1u);
        JUMPOUT(0x19C56CDF0);
      }
      v9 = (uint64_t)v8 + 1;
      v10 = *(_QWORD *)(v59 + 8 * (_QWORD)v8);
      if (!*(_QWORD *)&v61[4]._os_unfair_lock_opaque)
        goto LABEL_11;
      v11 = sub_19CAAA28C();
      v12 = -1 << LOBYTE(v61[8]._os_unfair_lock_opaque);
      v13 = v11 & ~v12;
      if (((*(_QWORD *)((char *)&v7->_os_unfair_lock_opaque + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_11;
      v14 = *(_QWORD *)&v61[12]._os_unfair_lock_opaque;
      if (*(_QWORD **)(v14 + 8 * v13) != v8)
        break;
LABEL_12:
      v16 = v5;
      v17 = v6[2];
      v18 = v6[3];
      v19 = v6;
      swift_retain_n();
      if (v17 >= v18 >> 1)
        v19 = sub_19C4F9248((_QWORD *)(v18 > 1), v17 + 1, 1, v6);
      v19[2] = v17 + 1;
      v6 = v19;
      v19[v17 + 4] = v10;
      swift_release();
      v8 = (_QWORD *)((char *)v8 + 1);
      v5 = v16;
      if (v9 == v16)
        goto LABEL_17;
    }
    v15 = ~v12;
    while (1)
    {
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)((char *)&v7->_os_unfair_lock_opaque + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        break;
      if (*(_QWORD **)(v14 + 8 * v13) == v8)
        goto LABEL_12;
    }
LABEL_11:
    __asm { BR              X8 }
  }
  LODWORD(v54) = 0;
LABEL_17:
  v62[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v20 = (uint64_t *)v6[2];
  v60 = v6;
  if (v20)
  {
    swift_bridgeObjectRetain();
    v61 = (os_unfair_lock_t)v62[0];
    v59 = (uint64_t)v20;
    __asm { BR              X9 }
  }
  v21 = swift_bridgeObjectRetain();
  v22 = sub_19C4D4894(v21);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = v56;
    v24 = *(_QWORD *)(v56 + 16);
    v25 = *(os_unfair_lock_s **)(v24 + 40);
    v26 = (uint64_t *)&v25[4];
    v27 = v25 + 6;
    os_unfair_lock_lock(v25 + 6);
    v59 = (uint64_t)v26;
    sub_19C576F44((uint64_t)v26, v24, v62);
    v61 = v27;
    os_unfair_lock_unlock(v27);
    v28 = v62[0];
    if (!v62[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v62[0] = 0;
        v62[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      LODWORD(v52) = 0;
      v51 = 116;
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C56CF34);
    }
    v29 = *(_QWORD *)(v62[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
    sub_19C577424((uint64_t *)(v29 + 16), v28, v62);
    os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
    v30 = v62[0];
    v31 = swift_release();
    MEMORY[0x1E0C80A78](v31);
    v51 = v56;
    v52 = v30;
    v32 = sub_19C55E114((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19C5726E4, (uint64_t)&v50, v53);
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = v55;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v34 = sub_19C55E248((uint64_t)v6);
    swift_bridgeObjectRelease();
    v35 = v23;
    v36 = sub_19C55E47C(v32);
    v55 = v32;
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v34;
    v37[3] = v36;
    v37[4] = v22;
    v37[5] = v30;
    v37[6] = sub_19C5724C8;
    v37[7] = v33;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v35 + 24), *(_QWORD *)(v35 + 48));
    type metadata accessor for AsyncComputeFunctionScheduler();
    sub_19C56EEE8((uint64_t)v37);
    swift_release();
    swift_release();
    v38 = v61;
    os_unfair_lock_lock(v61);
    sub_19C577000((uint64_t *)v59, v28);
    os_unfair_lock_unlock(v38);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C571578(v53, 0);
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_BYTE *)(v41 + 16) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v42 = sub_19C55E248((uint64_t)v60);
    swift_bridgeObjectRelease();
    v43 = sub_19C55E47C(v40);
    v55 = v40;
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v42;
    inited[3] = v43;
    inited[4] = v22;
    inited[5] = 0;
    inited[6] = sub_19C5726C8;
    inited[7] = v41;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  if ((v54 & 1) != 0)
  {
    v45 = v55;
    v46 = *(_QWORD *)(v55 + 16);
    v47 = (os_unfair_lock_s *)sub_19C4F9248(0, v46, 0, MEMORY[0x1E0DEE9D8]);
    v48 = v47;
    if (v46)
    {
      if (v46 <= *(_QWORD *)(v53 + 16))
      {
        v58 = xmmword_19CAE8180;
        v54 = 0x800000019CABB0E0;
        v57 = v46;
        v61 = v47;
        v59 = 1;
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x19C56CE04);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = (os_unfair_lock_s *)v55;
  }
  swift_bridgeObjectRelease();
  return v48;
}

void sub_19C56CF74(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  void *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)a1;
  v7 = *(unsigned __int8 *)(a1 + 8);
  if (v7 <= 8)
    v8 = 10;
  else
    v8 = *(unsigned __int8 *)(a1 + 8);
  v9 = (v7 > 8) & *(_BYTE *)(a1 + 9);
  v10 = (void *)MEMORY[0x1A1AD6338]();
  if (qword_1EE422E98 != -1)
    swift_once();
  v11 = (uint64_t *)(qword_1EE4243D0 + 16);
  v12 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
  if (v9)
    v13 = 256;
  else
    v13 = 0;
  sub_19C5782F8(v11, v6, v13 | v8, 0, 1, &v16);
  if (v3)
  {
    os_unfair_lock_unlock(v12);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v12);
    v14 = v16;
    objc_autoreleasePoolPop(v10);
    type metadata accessor for IOSurfaceStorage();
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 32) = v8;
    *(_BYTE *)(v15 + 33) = v9;
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v6;
    if (a2)
    {
      *(_QWORD *)(v15 + 40) = a2;
      *(_QWORD *)(v15 + 48) = &off_1E3D46A78;
    }
    else
    {
      *(_QWORD *)(v15 + 40) = 0;
      *(_QWORD *)(v15 + 48) = 0;
    }
    *(_QWORD *)(v15 + 56) = sub_19C569CE8;
    *(_QWORD *)(v15 + 64) = 0;
    *a3 = v15 | 0x4000000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
  }
}

void sub_19C56D0E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _OWORD *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _QWORD v109[23];
  uint64_t v110;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4248C0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v5 = *(_QWORD **)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (unint64_t *)((char *)&v90 - v8);
  v93 = v0;
  v10 = v0[2];
  v11 = *(_QWORD *)(v10 + 16);
  v96 = v12;
  v97 = v7;
  if (v11)
  {
    v109[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v13 = *((unsigned __int8 *)v5 + 80);
    v92 = v10;
    v14 = v10 + ((v13 + 32) & ~v13);
    v15 = v5[9];
    v94 = v5;
    v95 = v15;
    do
    {
      sub_19C552104(v14, (uint64_t)v9, &qword_1EE4241F8);
      v16 = *v9;
      v17 = *(int *)(v4 + 48);
      v18 = (char *)v96 + v17;
      v19 = (char *)v9 + v17;
      *v96 = *v9;
      v20 = sub_19CAA9488();
      v21 = *(_QWORD *)(v20 - 8);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v3, v18, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v3, 0, 1, v20);
      sub_19C5A00A0((uint64_t)v3, v16);
      sub_19C5725E8((uint64_t)v3, &qword_1EE4248C0);
      sub_19C5725E8((uint64_t)v9, &qword_1EE4241F8);
      sub_19CAA9FBC();
      sub_19CAAA004();
      v4 = v97;
      sub_19CAAA010();
      sub_19CAA9FC8();
      v14 += v95;
      --v11;
    }
    while (v11);
    v95 = v109[0];
    swift_bridgeObjectRelease();
    v5 = v94;
  }
  else
  {
    v95 = MEMORY[0x1E0DEE9D8];
  }
  v22 = v93[3];
  v23 = *(_QWORD *)(v22 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  if (v23)
  {
    v109[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v25 = *((unsigned __int8 *)v5 + 80);
    v92 = v22;
    v26 = v22 + ((v25 + 32) & ~v25);
    v94 = (_QWORD *)v5[9];
    do
    {
      sub_19C552104(v26, (uint64_t)v9, &qword_1EE4241F8);
      v27 = *v9;
      v28 = *(int *)(v4 + 48);
      v29 = (char *)v96 + v28;
      v30 = (char *)v9 + v28;
      *v96 = *v9;
      v31 = sub_19CAA9488();
      v32 = *(_QWORD *)(v31 - 8);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v3, v29, v31);
      v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
      v4 = v97;
      v33(v3, 0, 1, v31);
      sub_19C5A00A0((uint64_t)v3, v27);
      sub_19C5725E8((uint64_t)v3, &qword_1EE4248C0);
      sub_19C5725E8((uint64_t)v9, &qword_1EE4241F8);
      sub_19CAA9FBC();
      sub_19CAAA004();
      sub_19CAAA010();
      sub_19CAA9FC8();
      v26 += (uint64_t)v94;
      --v23;
    }
    while (v23);
    v24 = v109[0];
    swift_bridgeObjectRelease();
  }
  v34 = v93[7];
  v94 = (_QWORD *)v93[6];
  v92 = v34;
  v35 = v95;
  v96 = (unint64_t *)(v95 >> 62);
  if (v95 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v37 = MEMORY[0x1E0DEE9D8];
  v97 = v24;
  if (v36)
  {
    v110 = MEMORY[0x1E0DEE9D8];
    sub_19C557180(0, v36 & ~(v36 >> 63), 0);
    if (v36 < 0)
    {
      __break(1u);
      goto LABEL_66;
    }
    v38 = 0;
    v37 = v110;
    do
    {
      if ((v35 & 0xC000000000000001) != 0)
      {
        v39 = MEMORY[0x1A1AD4A9C](v38, v95);
      }
      else
      {
        v39 = *(_QWORD *)(v95 + 8 * v38 + 32);
        swift_retain();
      }
      sub_19C4DCE08(v39 + 16, (uint64_t)v109, (uint64_t *)&unk_1EE4248D0);
      swift_release();
      v110 = v37;
      v41 = *(_QWORD *)(v37 + 16);
      v40 = *(_QWORD *)(v37 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_19C557180(v40 > 1, v41 + 1, 1);
        v37 = v110;
      }
      ++v38;
      sub_19C4DCE08((uint64_t)v109, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
      *(_QWORD *)(v37 + 16) = v41 + 1;
      v42 = (_OWORD *)(v37 + 176 * v41);
      v44 = v99;
      v43 = v100;
      v42[2] = v98;
      v42[3] = v44;
      v42[4] = v43;
      v45 = v104;
      v47 = v101;
      v46 = v102;
      v42[7] = v103;
      v42[8] = v45;
      v42[5] = v47;
      v42[6] = v46;
      v48 = v108;
      v50 = v105;
      v49 = v106;
      v42[11] = v107;
      v42[12] = v48;
      v42[9] = v50;
      v42[10] = v49;
    }
    while (v36 != v38);
    v24 = v97;
    v35 = v95;
  }
  v91 = v24 >> 62;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v51 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v52 = MEMORY[0x1E0DEE9D8];
  if (!v51)
    goto LABEL_34;
  v110 = MEMORY[0x1E0DEE9D8];
  sub_19C557180(0, v51 & ~(v51 >> 63), 0);
  if (v51 < 0)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v53 = 0;
  v54 = v97 & 0xC000000000000001;
  v52 = v110;
  do
  {
    if (v54)
    {
      v55 = MEMORY[0x1A1AD4A9C](v53, v97);
    }
    else
    {
      v55 = *(_QWORD *)(v97 + 8 * v53 + 32);
      swift_retain();
    }
    sub_19C4DCE08(v55 + 16, (uint64_t)v109, (uint64_t *)&unk_1EE4248D0);
    swift_release();
    v110 = v52;
    v57 = *(_QWORD *)(v52 + 16);
    v56 = *(_QWORD *)(v52 + 24);
    if (v57 >= v56 >> 1)
    {
      sub_19C557180(v56 > 1, v57 + 1, 1);
      v52 = v110;
    }
    ++v53;
    sub_19C4DCE08((uint64_t)v109, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
    *(_QWORD *)(v52 + 16) = v57 + 1;
    v58 = (_OWORD *)(v52 + 176 * v57);
    v60 = v99;
    v59 = v100;
    v58[2] = v98;
    v58[3] = v60;
    v58[4] = v59;
    v61 = v104;
    v63 = v101;
    v62 = v102;
    v58[7] = v103;
    v58[8] = v61;
    v58[5] = v63;
    v58[6] = v62;
    v64 = v108;
    v66 = v105;
    v65 = v106;
    v58[11] = v107;
    v58[12] = v64;
    v58[9] = v66;
    v58[10] = v65;
  }
  while (v51 != v53);
  v35 = v95;
LABEL_34:
  ((void (*)(uint64_t, uint64_t))v94)(v37, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v96)
  {
    swift_bridgeObjectRetain();
    v67 = sub_19CAAA0DC();
    v68 = v97;
    if (!v67)
      goto LABEL_47;
  }
  else
  {
    v67 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v68 = v97;
    if (!v67)
      goto LABEL_47;
  }
  v69 = sub_19C571794((uint64_t)v109);
  if (v67 < 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if ((v35 & 0xC000000000000001) != 0)
  {
    v70 = MEMORY[0x1A1AD4A9C](0, v35, v69) + 16;
    sub_19C4DCE08(v70, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
    sub_19C4DCE08((uint64_t)v109, v70, (uint64_t *)&unk_1EE4248D0);
    sub_19C5717BC((uint64_t *)&v98);
    swift_unknownObjectRelease();
    if (v67 != 1)
    {
      v71 = 1;
      do
      {
        v72 = MEMORY[0x1A1AD4A9C](v71++, v35);
        v73 = v72 + 16;
        sub_19C4DCE08(v72 + 16, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08((uint64_t)v109, v73, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)&v98);
        swift_unknownObjectRelease();
      }
      while (v67 != v71);
    }
  }
  else
  {
    v74 = *(_QWORD *)(v35 + 32) + 16;
    sub_19C4DCE08(v74, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
    sub_19C4DCE08((uint64_t)v109, v74, (uint64_t *)&unk_1EE4248D0);
    sub_19C5717BC((uint64_t *)&v98);
    v75 = v67 - 1;
    if (v67 != 1)
    {
      v76 = (uint64_t *)(v35 + 40);
      do
      {
        v77 = *v76++;
        sub_19C4DCE08(v77 + 16, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08((uint64_t)v109, v77 + 16, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)&v98);
        --v75;
      }
      while (v75);
    }
  }
LABEL_47:
  swift_bridgeObjectRelease_n();
  if (v91)
  {
    swift_bridgeObjectRetain();
    v78 = sub_19CAAA0DC();
    if (!v78)
      goto LABEL_60;
    goto LABEL_51;
  }
  v78 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v78)
  {
LABEL_51:
    v79 = sub_19C571794((uint64_t)v109);
    if (v78 >= 1)
    {
      if ((v68 & 0xC000000000000001) != 0)
      {
        v80 = MEMORY[0x1A1AD4A9C](0, v68, v79) + 16;
        sub_19C4DCE08(v80, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08((uint64_t)v109, v80, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)&v98);
        swift_unknownObjectRelease();
        if (v78 != 1)
        {
          v81 = 1;
          do
          {
            v82 = MEMORY[0x1A1AD4A9C](v81++, v68);
            v83 = v82 + 16;
            sub_19C4DCE08(v82 + 16, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
            sub_19C4DCE08((uint64_t)v109, v83, (uint64_t *)&unk_1EE4248D0);
            sub_19C5717BC((uint64_t *)&v98);
            swift_unknownObjectRelease();
          }
          while (v78 != v81);
        }
      }
      else
      {
        v84 = *(_QWORD *)(v68 + 32) + 16;
        sub_19C4DCE08(v84, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08((uint64_t)v109, v84, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)&v98);
        v85 = v78 - 1;
        if (v78 != 1)
        {
          v86 = (uint64_t *)(v68 + 40);
          do
          {
            v87 = *v86++;
            sub_19C4DCE08(v87 + 16, (uint64_t)&v98, (uint64_t *)&unk_1EE4248D0);
            sub_19C4DCE08((uint64_t)v109, v87 + 16, (uint64_t *)&unk_1EE4248D0);
            sub_19C5717BC((uint64_t *)&v98);
            --v85;
          }
          while (v85);
        }
      }
      goto LABEL_60;
    }
LABEL_68:
    __break(1u);
    return;
  }
LABEL_60:
  swift_bridgeObjectRelease_n();
  v88 = v93[5];
  if (v88)
  {
    v89 = *(_QWORD *)(v88 + 16);
    swift_unownedRetainStrong();
    objc_msgSend(*(id *)(v89 + 32), sel_setSignaledValue_, *(_QWORD *)(v88 + 24));
    swift_release();
  }
}

uint64_t sub_19C56DAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424348);
  MEMORY[0x1E0C80A78](v1);
  v31 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424350);
  v3 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424358);
  v6 = *(_QWORD *)(v30 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424360);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v28 - v15;
  v32 = v0;
  swift_defaultActor_initialize();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424340);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  v34 = v16;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DF07B8], v33);
  sub_19CAA9B3C();
  sub_19C552104((uint64_t)v16, (uint64_t)v14, &qword_1EE424360);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v20 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v32+ OBJC_IVAR____TtC6CoreMLP33_E8DC9B772C73548EA5F31AD4BCEEE43A29AsyncComputeFunctionScheduler_streamContinuation, v14, v17);
    v21 = sub_19CAA9AF4();
    v22 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v31, 1, 1, v21);
    v24 = v29;
    v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v29, v10, v30);
    v25 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)(v26 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v25, v24, v23);
    v27 = sub_19C56EBC0(v22, (uint64_t)&unk_1EE424370, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v23);
    *(_QWORD *)(v20 + OBJC_IVAR____TtC6CoreMLP33_E8DC9B772C73548EA5F31AD4BCEEE43A29AsyncComputeFunctionScheduler_task) = v27;
    sub_19C5725E8((uint64_t)v16, &qword_1EE424360);
    return v20;
  }
  return result;
}

uint64_t sub_19C56DDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_19C5725E8(a2, &qword_1EE424360);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424340);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_19C56DE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424388);
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19C56DEA8()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424358);
  sub_19CAA9B24();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_19C56DF30;
  return sub_19CAA9B30();
}

uint64_t sub_19C56DF30()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C56DF84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
    goto LABEL_5;
  }
  if ((sub_19CAA9B54() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
    swift_release();
LABEL_5:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_19C56E024;
  return sub_19C56E0E4();
}

uint64_t sub_19C56E024()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C56E078()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_19C56DF30;
  return sub_19CAA9B30();
}

uint64_t sub_19C56E0E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[232] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4248C0);
  v1[233] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v1[234] = v2;
  v1[235] = *(_QWORD *)(v2 - 8);
  v1[236] = swift_task_alloc();
  v1[237] = swift_task_alloc();
  v3 = (_QWORD *)swift_task_alloc();
  v1[238] = v3;
  *v3 = v1;
  v3[1] = sub_19C56E18C;
  return sub_19C56EFA0();
}

uint64_t sub_19C56E18C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_19C56E1E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _OWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v1 = v0;
  v2 = *(_QWORD **)(v0 + 1856);
  v3 = v2[2];
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  v102 = v1;
  if (v4)
  {
    v6 = *(_QWORD *)(v1 + 1880);
    v100 = *(_QWORD *)(v1 + 1872);
    v103 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v97 = *(_QWORD *)(v6 + 72);
    do
    {
      v8 = *(unint64_t **)(v1 + 1896);
      v9 = *(unint64_t **)(v1 + 1888);
      v10 = *(_QWORD *)(v1 + 1864);
      sub_19C552104(v7, (uint64_t)v8, &qword_1EE4241F8);
      v11 = *v8;
      v12 = *(int *)(v100 + 48);
      v13 = (char *)v9 + v12;
      v14 = (char *)v8 + v12;
      *v9 = *v8;
      v15 = sub_19CAA9488();
      v16 = *(_QWORD *)(v15 - 8);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      v17 = v13;
      v1 = v102;
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v10, v17, v15);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      sub_19C5A00A0(v10, v11);
      sub_19C5725E8(v10, &qword_1EE4248C0);
      sub_19C5725E8((uint64_t)v8, &qword_1EE4241F8);
      sub_19CAA9FBC();
      sub_19CAAA004();
      sub_19CAAA010();
      sub_19CAA9FC8();
      v7 += v97;
      --v4;
    }
    while (v4);
    v5 = v103;
    swift_bridgeObjectRelease();
    v2 = *(_QWORD **)(v102 + 1856);
  }
  v18 = v2[3];
  v19 = *(_QWORD *)(v18 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  v101 = v5;
  if (v19)
  {
    v21 = *(_QWORD *)(v1 + 1880);
    v98 = *(_QWORD *)(v1 + 1872);
    v104 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19CAA9FE0();
    v22 = v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v95 = *(_QWORD *)(v21 + 72);
    do
    {
      v23 = *(unint64_t **)(v1 + 1896);
      v24 = *(unint64_t **)(v1 + 1888);
      v25 = *(_QWORD *)(v1 + 1864);
      sub_19C552104(v22, (uint64_t)v23, &qword_1EE4241F8);
      v26 = *v23;
      v27 = *(int *)(v98 + 48);
      v28 = (char *)v24 + v27;
      v29 = (char *)v23 + v27;
      *v24 = *v23;
      v30 = sub_19CAA9488();
      v31 = *(_QWORD *)(v30 - 8);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      v32 = v28;
      v1 = v102;
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v25, v32, v30);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v30);
      sub_19C5A00A0(v25, v26);
      sub_19C5725E8(v25, &qword_1EE4248C0);
      sub_19C5725E8((uint64_t)v23, &qword_1EE4241F8);
      sub_19CAA9FBC();
      sub_19CAAA004();
      sub_19CAAA010();
      sub_19CAA9FC8();
      v22 += v95;
      --v19;
    }
    while (v19);
    v20 = v104;
    swift_bridgeObjectRelease();
    v2 = *(_QWORD **)(v102 + 1856);
  }
  v93 = (void (*)(uint64_t, uint64_t))v2[6];
  v94 = v5 >> 62;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = MEMORY[0x1E0DEE9D8];
  v99 = v20;
  if (v33)
  {
    v105 = MEMORY[0x1E0DEE9D8];
    sub_19C557180(0, v33 & ~(v33 >> 63), 0);
    if (v33 < 0)
    {
      __break(1u);
      goto LABEL_65;
    }
    v35 = 0;
    v36 = v1 + 16;
    v37 = (_OWORD *)(v1 + 200);
    v38 = v5 & 0xC000000000000001;
    v34 = v105;
    do
    {
      if (v38)
      {
        v39 = MEMORY[0x1A1AD4A9C](v35, v101);
      }
      else
      {
        v39 = *(_QWORD *)(v101 + 8 * v35 + 32);
        swift_retain();
      }
      sub_19C4DCE08(v39 + 16, v36, (uint64_t *)&unk_1EE4248D0);
      swift_release();
      v41 = *(_QWORD *)(v105 + 16);
      v40 = *(_QWORD *)(v105 + 24);
      if (v41 >= v40 >> 1)
        sub_19C557180(v40 > 1, v41 + 1, 1);
      ++v35;
      sub_19C4DCE08(v36, (uint64_t)v37, (uint64_t *)&unk_1EE4248D0);
      *(_QWORD *)(v105 + 16) = v41 + 1;
      v42 = (_OWORD *)(v105 + 176 * v41);
      v44 = v37[1];
      v43 = v37[2];
      v42[2] = *v37;
      v42[3] = v44;
      v42[4] = v43;
      v45 = v37[6];
      v47 = v37[3];
      v46 = v37[4];
      v42[7] = v37[5];
      v42[8] = v45;
      v42[5] = v47;
      v42[6] = v46;
      v48 = v37[10];
      v50 = v37[7];
      v49 = v37[8];
      v42[11] = v37[9];
      v42[12] = v48;
      v42[9] = v50;
      v42[10] = v49;
    }
    while (v33 != v35);
    v5 = v101;
    v1 = v102;
    v20 = v99;
  }
  v92 = v20 >> 62;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v51 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v52 = MEMORY[0x1E0DEE9D8];
  if (!v51)
    goto LABEL_33;
  v106 = MEMORY[0x1E0DEE9D8];
  sub_19C557180(0, v51 & ~(v51 >> 63), 0);
  if (v51 < 0)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v53 = v20;
  v54 = 0;
  v55 = v1;
  v56 = v1 + 384;
  v57 = (_OWORD *)(v55 + 568);
  v96 = v53 & 0xC000000000000001;
  v52 = v106;
  do
  {
    if (v96)
    {
      v58 = MEMORY[0x1A1AD4A9C](v54, v99);
    }
    else
    {
      v58 = *(_QWORD *)(v99 + 8 * v54 + 32);
      swift_retain();
    }
    sub_19C4DCE08(v58 + 16, v56, (uint64_t *)&unk_1EE4248D0);
    swift_release();
    v60 = *(_QWORD *)(v106 + 16);
    v59 = *(_QWORD *)(v106 + 24);
    if (v60 >= v59 >> 1)
      sub_19C557180(v59 > 1, v60 + 1, 1);
    ++v54;
    sub_19C4DCE08(v56, (uint64_t)v57, (uint64_t *)&unk_1EE4248D0);
    *(_QWORD *)(v106 + 16) = v60 + 1;
    v61 = (_OWORD *)(v106 + 176 * v60);
    v63 = *(_OWORD *)(v55 + 584);
    v62 = *(_OWORD *)(v55 + 600);
    v61[2] = *v57;
    v61[3] = v63;
    v61[4] = v62;
    v64 = *(_OWORD *)(v55 + 664);
    v66 = *(_OWORD *)(v55 + 616);
    v65 = *(_OWORD *)(v55 + 632);
    v61[7] = *(_OWORD *)(v55 + 648);
    v61[8] = v64;
    v61[5] = v66;
    v61[6] = v65;
    v67 = *(_OWORD *)(v55 + 728);
    v69 = *(_OWORD *)(v55 + 680);
    v68 = *(_OWORD *)(v55 + 696);
    v61[11] = *(_OWORD *)(v55 + 712);
    v61[12] = v67;
    v61[9] = v69;
    v61[10] = v68;
  }
  while (v51 != v54);
  v5 = v101;
  v1 = v102;
  v20 = v99;
LABEL_33:
  v93(v34, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v94)
  {
    swift_bridgeObjectRetain();
    v70 = sub_19CAAA0DC();
    if (!v70)
      goto LABEL_46;
  }
  else
  {
    v70 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v70)
      goto LABEL_46;
  }
  v71 = sub_19C571794(v1 + 752);
  if (v70 < 1)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    v72 = MEMORY[0x1A1AD4A9C](0, v5, v71) + 16;
    sub_19C4DCE08(v72, v1 + 936, (uint64_t *)&unk_1EE4248D0);
    sub_19C4DCE08(v1 + 752, v72, (uint64_t *)&unk_1EE4248D0);
    sub_19C5717BC((uint64_t *)(v1 + 936));
    swift_unknownObjectRelease();
    if (v70 != 1)
    {
      v73 = 1;
      do
      {
        v74 = MEMORY[0x1A1AD4A9C](v73++, v5);
        v75 = v74 + 16;
        sub_19C4DCE08(v74 + 16, v1 + 936, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08(v1 + 752, v75, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)(v1 + 936));
        swift_unknownObjectRelease();
      }
      while (v70 != v73);
    }
  }
  else
  {
    v76 = *(_QWORD *)(v5 + 32) + 16;
    sub_19C4DCE08(v76, v1 + 1672, (uint64_t *)&unk_1EE4248D0);
    sub_19C4DCE08(v1 + 752, v76, (uint64_t *)&unk_1EE4248D0);
    sub_19C5717BC((uint64_t *)(v1 + 1672));
    v77 = v70 - 1;
    if (v70 != 1)
    {
      v78 = (uint64_t *)(v5 + 40);
      do
      {
        v79 = *v78++;
        sub_19C4DCE08(v79 + 16, v1 + 1672, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08(v1 + 752, v79 + 16, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)(v1 + 1672));
        --v77;
      }
      while (v77);
    }
  }
LABEL_46:
  swift_bridgeObjectRelease_n();
  if (!v92)
  {
    v80 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v80)
      goto LABEL_59;
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  v80 = sub_19CAAA0DC();
  if (v80)
  {
LABEL_50:
    v81 = sub_19C571794(v1 + 1120);
    if (v80 >= 1)
    {
      if ((v20 & 0xC000000000000001) != 0)
      {
        v82 = MEMORY[0x1A1AD4A9C](0, v20, v81) + 16;
        sub_19C4DCE08(v82, v1 + 1304, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08(v1 + 1120, v82, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)(v1 + 1304));
        swift_unknownObjectRelease();
        if (v80 != 1)
        {
          v83 = 1;
          do
          {
            v84 = MEMORY[0x1A1AD4A9C](v83++, v20);
            v85 = v84 + 16;
            sub_19C4DCE08(v84 + 16, v1 + 1304, (uint64_t *)&unk_1EE4248D0);
            sub_19C4DCE08(v1 + 1120, v85, (uint64_t *)&unk_1EE4248D0);
            sub_19C5717BC((uint64_t *)(v1 + 1304));
            swift_unknownObjectRelease();
          }
          while (v80 != v83);
        }
      }
      else
      {
        v86 = *(_QWORD *)(v20 + 32) + 16;
        sub_19C4DCE08(v86, v1 + 1488, (uint64_t *)&unk_1EE4248D0);
        sub_19C4DCE08(v1 + 1120, v86, (uint64_t *)&unk_1EE4248D0);
        sub_19C5717BC((uint64_t *)(v1 + 1488));
        v87 = v80 - 1;
        if (v80 != 1)
        {
          v88 = (uint64_t *)(v20 + 40);
          do
          {
            v89 = *v88++;
            sub_19C4DCE08(v89 + 16, v1 + 1488, (uint64_t *)&unk_1EE4248D0);
            sub_19C4DCE08(v1 + 1120, v89 + 16, (uint64_t *)&unk_1EE4248D0);
            sub_19C5717BC((uint64_t *)(v1 + 1488));
            --v87;
          }
          while (v87);
        }
      }
      goto LABEL_59;
    }
LABEL_67:
    __break(1u);
    return;
  }
LABEL_59:
  swift_bridgeObjectRelease_n();
  v90 = *(_QWORD *)(*(_QWORD *)(v1 + 1856) + 40);
  if (v90)
  {
    v91 = *(_QWORD *)(v90 + 16);
    swift_unownedRetainStrong();
    objc_msgSend(*(id *)(v91 + 32), sel_setSignaledValue_, *(_QWORD *)(v90 + 24));
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(void))(v1 + 8))();
}

uint64_t sub_19C56EBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_19CAA9AF4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_19CAA9AE8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_19C5725E8(a1, &qword_1EE424348);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_19CAA9AC4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_19C56ED0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_19CAA9B48();
  v1 = v0
     + OBJC_IVAR____TtC6CoreMLP33_E8DC9B772C73548EA5F31AD4BCEEE43A29AsyncComputeFunctionScheduler_streamContinuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424340);
  sub_19CAA9B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_19C56EDA4()
{
  return type metadata accessor for AsyncComputeFunctionScheduler();
}

uint64_t type metadata accessor for AsyncComputeFunctionScheduler()
{
  uint64_t result;

  result = qword_1EE424318;
  if (!qword_1EE424318)
    return swift_getSingletonMetadata();
  return result;
}

void sub_19C56EDE8()
{
  unint64_t v0;

  sub_19C56EE6C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_19C56EE6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE424328)
  {
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v0 = sub_19CAA9B18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE424328);
  }
}

uint64_t type metadata accessor for BNNSComputeStream.ComputeFunction()
{
  return objc_opt_self();
}

uint64_t sub_19C56EEDC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_19C56EEE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424338);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424340);
  sub_19CAA9B00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_19C56EFA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = sub_19CAA9764();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v3 = sub_19CAA9740();
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19C56F06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_19C55EA10(v1);
  *(_QWORD *)(v0 + 120) = v2;
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 128) = v3;
  if (v3)
  {
    *(_DWORD *)(v0 + 240) = *MEMORY[0x1E0DF2190];
    *(_QWORD *)(v0 + 136) = 0;
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 32);
    *(_QWORD *)(v0 + 144) = v4;
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C56F7EC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_19C56F8DC;
  return sub_19C5A19AC();
}

uint64_t sub_19C56F8DC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C56F930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
LABEL_2:
  swift_release();
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 128) - 1;
  while (v2 != v1)
  {
    v3 = *(_QWORD *)(v0 + 120) + 8 * v1++;
    *(_QWORD *)(v0 + 136) = v1;
    v4 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v0 + 144) = v4;
    v5 = v4 >> 62;
    if (v4 >> 62 != 2)
    {
      if ((_DWORD)v5)
      {
        if ((_DWORD)v5 == 1)
        {
          v6 = *(_QWORD *)(v4 + 40);
          v7 = *(_QWORD *)(v4 + 48);
LABEL_9:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v6)
            goto LABEL_2;
        }
        else
        {
          swift_retain_n();
          sub_19C5A0C78();
          v11 = v10;
          v7 = v12;
          swift_release();
          if (!v11)
            goto LABEL_2;
        }
        ObjectType = swift_getObjectType();
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(ObjectType, v7);
        swift_unknownObjectRelease();
        if ((v9 & 1) == 0)
          __asm { BR              X9 }
        goto LABEL_2;
      }
      v6 = *(_QWORD *)(v4 + 24);
      v7 = *(_QWORD *)(v4 + 32);
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5700B8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_19C56F8DC;
  return sub_19C5A19AC();
}

uint64_t sub_19C5701A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5701FC()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  os_signpost_id_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  char v26;

  v1 = sub_19CAA974C();
  sub_19CAA9770();
  v2 = sub_19CAA9D58();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v3 = *(_DWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    swift_retain();
    sub_19CAA9794();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
    v8 = "[Error] Interval already ended";
    if (v7 != v3)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
      v8 = "";
    }
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 168))(*(_QWORD *)(v0 + 104), v10, v11);
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v1, v2, v13, "GPU :: Data synchronization", v8, v12, 2u);
    MEMORY[0x1A1AD7790](v12, -1, -1);

    v9(v10, v11);
    v14 = (_QWORD *)(v0 + 104);
  }
  else
  {

    v14 = (_QWORD *)(v0 + 96);
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 184))(*v14, *(_QWORD *)(v0 + 64));
  swift_release();
  swift_release();
LABEL_7:
  swift_release();
  v15 = *(_QWORD *)(v0 + 136);
  v16 = *(_QWORD *)(v0 + 128) - 1;
  while (v16 != v15)
  {
    v17 = *(_QWORD *)(v0 + 120) + 8 * v15++;
    *(_QWORD *)(v0 + 136) = v15;
    v18 = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v0 + 144) = v18;
    v19 = v18 >> 62;
    if (v18 >> 62 != 2)
    {
      if ((_DWORD)v19)
      {
        if ((_DWORD)v19 == 1)
        {
          v20 = *(_QWORD *)(v18 + 40);
          v21 = *(_QWORD *)(v18 + 48);
LABEL_14:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v20)
            goto LABEL_7;
        }
        else
        {
          swift_retain_n();
          sub_19C5A0C78();
          v23 = v22;
          v21 = v24;
          swift_release();
          if (!v23)
            goto LABEL_7;
        }
        ObjectType = swift_getObjectType();
        v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(ObjectType, v21);
        swift_unknownObjectRelease();
        if ((v26 & 1) == 0)
          __asm { BR              X9 }
        goto LABEL_7;
      }
      v20 = *(_QWORD *)(v18 + 24);
      v21 = *(_QWORD *)(v18 + 32);
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C570938()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_19C56F8DC;
  return sub_19C5A19AC();
}

uint64_t sub_19C570A28()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C570A7C()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  os_signpost_id_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  char v26;

  v1 = sub_19CAA974C();
  sub_19CAA9770();
  v2 = sub_19CAA9D58();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v3 = *(_DWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);
    swift_retain();
    sub_19CAA9794();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
    v8 = "[Error] Interval already ended";
    if (v7 != v3)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
      v8 = "";
    }
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 208))(*(_QWORD *)(v0 + 104), v10, v11);
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v1, v2, v13, "CPU :: Data synchronization", v8, v12, 2u);
    MEMORY[0x1A1AD7790](v12, -1, -1);

    v9(v10, v11);
    v14 = (_QWORD *)(v0 + 104);
  }
  else
  {

    v14 = (_QWORD *)(v0 + 80);
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 224))(*v14, *(_QWORD *)(v0 + 64));
  swift_release();
  swift_release();
LABEL_7:
  swift_release();
  v15 = *(_QWORD *)(v0 + 136);
  v16 = *(_QWORD *)(v0 + 128) - 1;
  while (v16 != v15)
  {
    v17 = *(_QWORD *)(v0 + 120) + 8 * v15++;
    *(_QWORD *)(v0 + 136) = v15;
    v18 = *(_QWORD *)(v17 + 40);
    *(_QWORD *)(v0 + 144) = v18;
    v19 = v18 >> 62;
    if (v18 >> 62 != 2)
    {
      if ((_DWORD)v19)
      {
        if ((_DWORD)v19 == 1)
        {
          v20 = *(_QWORD *)(v18 + 40);
          v21 = *(_QWORD *)(v18 + 48);
LABEL_14:
          swift_unknownObjectRetain();
          swift_retain();
          if (!v20)
            goto LABEL_7;
        }
        else
        {
          swift_retain_n();
          sub_19C5A0C78();
          v23 = v22;
          v21 = v24;
          swift_release();
          if (!v23)
            goto LABEL_7;
        }
        ObjectType = swift_getObjectType();
        v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(ObjectType, v21);
        swift_unknownObjectRelease();
        if ((v26 & 1) == 0)
          __asm { BR              X9 }
        goto LABEL_7;
      }
      v20 = *(_QWORD *)(v18 + 24);
      v21 = *(_QWORD *)(v18 + 32);
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5711A8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_19C56F8DC;
  return sub_19C5A19AC();
}

uint64_t sub_19C571298()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19C5712DC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_19C571340;
  return v6(a1);
}

uint64_t sub_19C571340()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_19C57138C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_19C5570B8(0, v2, 0);
    v5 = v23;
    v6 = (unsigned __int8 *)(a1 + 41);
    v20 = a2;
    while (1)
    {
      v7 = *(_QWORD *)(v6 - 9);
      v8 = *(v6 - 1);
      v9 = *v6;
      v10 = swift_bridgeObjectRetain();
      v11 = (void *)MEMORY[0x1A1AD6338](v10);
      if (qword_1EE422E98 != -1)
        swift_once();
      v12 = (uint64_t *)(qword_1EE4243D0 + 16);
      v13 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
      v14 = v9 ? 256 : 0;
      sub_19C5782F8(v12, v7, v14 | v8, 0, 1, &v22);
      if (v21)
        break;
      os_unfair_lock_unlock(v13);
      v15 = v22;
      objc_autoreleasePoolPop(v11);
      type metadata accessor for IOSurfaceStorage();
      v16 = swift_allocObject();
      v17 = v16;
      *(_BYTE *)(v16 + 32) = v8;
      *(_BYTE *)(v16 + 33) = v9;
      *(_QWORD *)(v16 + 16) = v15;
      *(_QWORD *)(v16 + 24) = v7;
      if (v20)
      {
        *(_QWORD *)(v16 + 40) = v20;
        *(_QWORD *)(v16 + 48) = &off_1E3D46A78;
      }
      else
      {
        *(_QWORD *)(v16 + 40) = 0;
        *(_QWORD *)(v16 + 48) = 0;
      }
      *(_QWORD *)(v16 + 56) = sub_19C569CE8;
      *(_QWORD *)(v16 + 64) = 0;
      v23 = v5;
      v18 = *(_QWORD *)(v5 + 16);
      v19 = *(_QWORD *)(v5 + 24);
      swift_retain();
      if (v18 >= v19 >> 1)
      {
        sub_19C5570B8(v19 > 1, v18 + 1, 1);
        v5 = v23;
      }
      *(_QWORD *)(v5 + 16) = v18 + 1;
      *(_QWORD *)(v5 + 8 * v18 + 32) = v17 | 0x4000000000000000;
      v6 += 16;
      if (!--v2)
        return;
    }
    os_unfair_lock_unlock(v13);
    __break(1u);
  }
}

void sub_19C571578(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned int v8;
  _BOOL4 v9;
  int v10;
  int v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t *v15;
  os_unfair_lock_s *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_19C5570B8(0, v2, 0);
    v5 = v26;
    v6 = (unsigned __int8 *)(a1 + 41);
    v23 = a2;
    while (1)
    {
      v7 = *(_QWORD *)(v6 - 9);
      v8 = *(v6 - 1);
      v9 = v8 > 8;
      v10 = *v6;
      if (v8 <= 8)
        v11 = 10;
      else
        v11 = *(v6 - 1);
      v12 = swift_bridgeObjectRetain();
      v13 = (void *)MEMORY[0x1A1AD6338](v12);
      if (qword_1EE422E98 != -1)
        swift_once();
      v14 = v9 & v10;
      v15 = (uint64_t *)(qword_1EE4243D0 + 16);
      v16 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
      v17 = v14 ? 256 : 0;
      sub_19C5782F8(v15, v7, v17 | v11, 0, 1, &v25);
      if (v24)
        break;
      os_unfair_lock_unlock(v16);
      v18 = v25;
      objc_autoreleasePoolPop(v13);
      type metadata accessor for IOSurfaceStorage();
      v19 = swift_allocObject();
      v20 = v19;
      *(_BYTE *)(v19 + 32) = v11;
      *(_BYTE *)(v19 + 33) = v14;
      *(_QWORD *)(v19 + 16) = v18;
      *(_QWORD *)(v19 + 24) = v7;
      if (v23)
      {
        *(_QWORD *)(v19 + 40) = v23;
        *(_QWORD *)(v19 + 48) = &off_1E3D46A78;
      }
      else
      {
        *(_QWORD *)(v19 + 40) = 0;
        *(_QWORD *)(v19 + 48) = 0;
      }
      *(_QWORD *)(v19 + 56) = sub_19C569CE8;
      *(_QWORD *)(v19 + 64) = 0;
      v26 = v5;
      v21 = *(_QWORD *)(v5 + 16);
      v22 = *(_QWORD *)(v5 + 24);
      swift_retain();
      if (v21 >= v22 >> 1)
      {
        sub_19C5570B8(v22 > 1, v21 + 1, 1);
        v5 = v26;
      }
      *(_QWORD *)(v5 + 16) = v21 + 1;
      *(_QWORD *)(v5 + 8 * v21 + 32) = v20 | 0x4000000000000000;
      v6 += 16;
      if (!--v2)
        return;
    }
    os_unfair_lock_unlock(v16);
    __break(1u);
  }
}

void sub_19C571778(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_19C56A490(a1, *(_QWORD *)(v2 + 24), a2);
}

double sub_19C571794(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 176) = 0xF000000000000007;
  return result;
}

uint64_t *sub_19C5717BC(uint64_t *a1)
{
  sub_19C571824(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

uint64_t sub_19C571824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t result;

  if ((~a23 & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_19C571840()
{
  return swift_deallocObject();
}

void sub_19C571850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C581604(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_19C57185C()
{
  return swift_deallocObject();
}

uint64_t sub_19C57186C()
{
  return swift_deallocObject();
}

uint64_t sub_19C57187C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C581280(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

uint64_t sub_19C571888()
{
  return swift_deallocObject();
}

uint64_t sub_19C571898()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C5718CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 25))
    v3 = 256;
  else
    v3 = 0;
  return sub_19C57B4E0(a1, a2, *(_QWORD *)(v2 + 16), v3 | *(unsigned __int8 *)(v2 + 24), (__int128 *)(v2 + 32));
}

uint64_t sub_19C5718F0()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C5718F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C57ACAC(a1, a2, v2 + 16);
}

uint64_t sub_19C571908(uint64_t a1, uint64_t a2)
{
  return sub_19C57A684(a1, a2);
}

uint64_t objectdestroy_52Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C571944(uint64_t a1, uint64_t a2)
{
  return sub_19C57A44C(a1, a2);
}

uint64_t sub_19C571954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C57FC1C(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 80));
}

uint64_t objectdestroy_78Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_19C50E9E8(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C5719B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C57F334(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 64));
}

uint64_t objectdestroy_89Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C571A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *inited;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[4];

  v3 = v2;
  v34 = a2;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424338);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  v6 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v36 = a1;
  if (v6)
  {
    v30 = v2;
    swift_bridgeObjectRetain();
    v35 = v6;
    __asm { BR              X9 }
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_19C4D4894(v7);
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v2 + 16);
    v10 = *(os_unfair_lock_s **)(v9 + 40);
    v11 = (uint64_t *)&v10[4];
    v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_19C576F44((uint64_t)v11, v9, v37);
    os_unfair_lock_unlock(v12);
    v13 = v37[0];
    if (!v37[0])
    {
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v37[0] = 0;
        v37[1] = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      sub_19CAAA0B8();
      __break(1u);
      JUMPOUT(0x19C57219CLL);
    }
    v14 = *(_QWORD *)(v37[0] + 64);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_19C577424((uint64_t *)(v14 + 16), v13, v37);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    v15 = v37[0];
    swift_release();
    swift_retain();
    swift_retain();
    sub_19C57138C(v34, v15);
    v17 = v16;
    swift_release();
    swift_release();
    v18 = v36;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v19 = sub_19C55E248(v18);
    swift_bridgeObjectRelease();
    v20 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    v21 = (_QWORD *)swift_allocObject();
    v22 = v3;
    v23 = (uint64_t)v21;
    v21[2] = v19;
    v21[3] = v20;
    v21[4] = v8;
    v21[5] = v15;
    v21[6] = sub_19C572D38;
    v21[7] = 0;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v22 + 24), *(_QWORD *)(v22 + 48));
    v37[0] = v23;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424340);
    v24 = v31;
    sub_19CAA9B00();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
    swift_release();
    swift_release();
    os_unfair_lock_lock(v12);
    sub_19C577000(v11, v13);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C57138C(v34, 0);
    v17 = v25;
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v26 = sub_19C55E248(a1);
    swift_bridgeObjectRelease();
    v27 = sub_19C55E47C(v17);
    swift_bridgeObjectRelease();
    type metadata accessor for BNNSComputeStream.ComputeFunction();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v26;
    inited[3] = v27;
    inited[4] = v8;
    inited[5] = 0;
    inited[6] = sub_19C572D38;
    inited[7] = 0;
    sub_19C56D0E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return v17;
}

uint64_t sub_19C5721AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423A28);
    v3 = sub_19CAA9F20();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 8 * v4);
      result = sub_19CAAA28C();
      v10 = result & v7;
      v11 = (result & (unint64_t)v7) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v7);
      v14 = *(_QWORD *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(_QWORD *)(v14 + 8 * v10) != v8)
        {
          v10 = (v10 + 1) & v7;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_QWORD *)(v14 + 8 * v10) = v8;
        v15 = *(_QWORD *)(v3 + 16);
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v17;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_19C5722B8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_19C56CF74(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_19C5722D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19C572328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v2 + 81))
    v3 = 256;
  else
    v3 = 0;
  if (*(_BYTE *)(v2 + 97))
    v4 = 256;
  else
    v4 = 0;
  sub_19C57DE1C(a1, a2, (char *)(v2 + 16), *(_QWORD *)(v2 + 72), v3 | *(unsigned __int8 *)(v2 + 80), *(_QWORD *)(v2 + 88), (char *)(v4 | *(unsigned __int8 *)(v2 + 96)));
}

uint64_t sub_19C572364()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C572370()
{
  return objectdestroy_23Tm();
}

uint64_t sub_19C572378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5729AC(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_19C572388()
{
  return swift_deallocObject();
}

uint64_t sub_19C572398(uint64_t a1, uint64_t a2)
{
  return sub_19C572718(a1, a2);
}

uint64_t sub_19C5723A0()
{
  return swift_deallocObject();
}

uint64_t sub_19C5723B4(uint64_t a1, _QWORD *a2)
{
  return sub_19C57DBB4(a1, a2);
}

uint64_t sub_19C5723C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C579E94(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t objectdestroy_149Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C572408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5734FC(a1, a2, (unsigned __int8 *)(v2 + 16));
}

uint64_t objectdestroy_160Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C572440()
{
  return swift_deallocObject();
}

uint64_t sub_19C572450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5776B8(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_19C572458()
{
  return swift_deallocObject();
}

uint64_t sub_19C572468()
{
  return swift_deallocObject();
}

uint64_t sub_19C572478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5737B8(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_19C572480()
{
  return swift_deallocObject();
}

uint64_t sub_19C572490()
{
  return swift_deallocObject();
}

uint64_t sub_19C5724A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C57693C(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_19C5724A8()
{
  return swift_deallocObject();
}

uint64_t sub_19C5724B8()
{
  return swift_deallocObject();
}

uint64_t sub_19C5724C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C576450(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_19C5724D0()
{
  return swift_deallocObject();
}

uint64_t sub_19C5724E0(uint64_t a1)
{
  uint64_t v1;

  return sub_19C56DDD0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_19C5724E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424358);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19C572560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE424358) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_19C5231F8;
  return sub_19C56DE44(a1, v5, v6, v7);
}

uint64_t sub_19C5725E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_19C572624()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19C572648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19C5231F8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE424378 + dword_1EE424378))(a1, v4);
}

void sub_19C5726D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19C571778(a1, a2);
}

void sub_19C5726E4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19C5722B8(a1, a2);
}

uint64_t sub_19C572718(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t result;
  _OWORD v23[33];

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v23;
  v4 = *(_OWORD *)(a1 + 160);
  v5 = *(_OWORD *)(a1 + 176);
  v6 = *(_OWORD *)(a1 + 128);
  v23[7] = *(_OWORD *)(a1 + 144);
  v23[8] = v4;
  v7 = *(_OWORD *)(a1 + 192);
  v23[9] = v5;
  v23[10] = v7;
  v8 = *(_OWORD *)(a1 + 112);
  v23[4] = *(_OWORD *)(a1 + 96);
  v23[5] = v8;
  v23[6] = v6;
  v9 = *(_OWORD *)(a1 + 48);
  v23[0] = *(_OWORD *)(a1 + 32);
  v23[1] = v9;
  v10 = *(_OWORD *)(a1 + 80);
  v23[2] = *(_OWORD *)(a1 + 64);
  v23[3] = v10;
  if (v3 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v12 = *(_OWORD *)(a1 + 352);
  v23[19] = *(_OWORD *)(a1 + 336);
  v23[20] = v12;
  v23[21] = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 288);
  v23[15] = *(_OWORD *)(a1 + 272);
  v23[16] = v13;
  v14 = *(_OWORD *)(a1 + 320);
  v23[17] = *(_OWORD *)(a1 + 304);
  v23[18] = v14;
  v15 = *(_OWORD *)(a1 + 224);
  v23[11] = *(_OWORD *)(a1 + 208);
  v23[12] = v15;
  v16 = *(_OWORD *)(a1 + 256);
  v23[13] = *(_OWORD *)(a1 + 240);
  v23[14] = v16;
  sub_19CAA938C();
  if (*(_QWORD *)(a2 + 16))
  {
    v17 = *(_OWORD *)(a2 + 176);
    v23[30] = *(_OWORD *)(a2 + 160);
    v23[31] = v17;
    v23[32] = *(_OWORD *)(a2 + 192);
    v18 = *(_OWORD *)(a2 + 112);
    v23[26] = *(_OWORD *)(a2 + 96);
    v23[27] = v18;
    v19 = *(_OWORD *)(a2 + 144);
    v23[28] = *(_OWORD *)(a2 + 128);
    v23[29] = v19;
    v20 = *(_OWORD *)(a2 + 48);
    v23[22] = *(_OWORD *)(a2 + 32);
    v23[23] = v20;
    v21 = *(_OWORD *)(a2 + 80);
    v23[24] = *(_OWORD *)(a2 + 64);
    v23[25] = v21;
    return sub_19CAA94AC();
  }
LABEL_7:
  __break(1u);

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5729AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  unsigned int *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  _BYTE v26[24];
  uint64_t v27;
  unint64_t v28;
  _BYTE v29[200];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v6 = sub_19CAA935C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v26[-v11];
  v13 = (unsigned int *)MEMORY[0x1E0DE9640];
  if ((a3 & 1) != 0)
    v13 = (unsigned int *)MEMORY[0x1E0DE9648];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v10, *v13, v6);
  v14 = (void *)sub_19CAA9308();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v10, v6);
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = *(_OWORD *)(a1 + 176);
  v37 = *(_OWORD *)(a1 + 160);
  v38 = v15;
  v39 = *(_OWORD *)(a1 + 192);
  v16 = *(_OWORD *)(a1 + 112);
  v33 = *(_OWORD *)(a1 + 96);
  v34 = v16;
  v17 = *(_OWORD *)(a1 + 144);
  v35 = *(_OWORD *)(a1 + 128);
  v36 = v17;
  v18 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v29[184] = *(_OWORD *)(a1 + 32);
  v30 = v18;
  v19 = *(_OWORD *)(a1 + 80);
  v31 = *(_OWORD *)(a1 + 64);
  v32 = v19;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_8:
    __break(1u);

    goto LABEL_9;
  }
  v20 = *(_OWORD *)(a2 + 176);
  v48 = *(_OWORD *)(a2 + 160);
  v49 = v20;
  v50 = *(_OWORD *)(a2 + 192);
  v21 = *(_OWORD *)(a2 + 112);
  v44 = *(_OWORD *)(a2 + 96);
  v45 = v21;
  v22 = *(_OWORD *)(a2 + 144);
  v46 = *(_OWORD *)(a2 + 128);
  v47 = v22;
  v23 = *(_OWORD *)(a2 + 48);
  v40 = *(_OWORD *)(a2 + 32);
  v41 = v23;
  v24 = *(_OWORD *)(a2 + 80);
  v42 = *(_OWORD *)(a2 + 64);
  v43 = v24;
  sub_19C4DCE4C((uint64_t)v29);
  sub_19C572CF0((uint64_t)v29, (uint64_t)&v51);
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (sub_19CAA92FC())
  {
    sub_19CAA9284();
    return swift_release();
  }
LABEL_9:
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    v26[23] = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C572CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4233E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19C572D38(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t result;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_19CAA938C();
    if (*(_QWORD *)(a2 + 16))
      return sub_19CAA94AC();
  }
  else
  {
    __break(1u);
  }
  __break(1u);

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C572F50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_19C572F68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  v0[3] = v2;
  swift_unownedRetainStrong();
  v3 = *(_QWORD *)(v1 + 24);
  v4 = swift_task_alloc();
  v0[4] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = v5;
  *v5 = v0;
  v5[1] = sub_19C52BF18;
  return sub_19CAAA1A8();
}

uint64_t sub_19C57301C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424430);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v11 = *(void **)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 48);
  aBlock[4] = sub_19C52C34C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19C573488;
  aBlock[3] = &block_descriptor_5;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_notifyListener_atValue_block_, v12, a3, v13);
  _Block_release(v13);
  return swift_release();
}

uint64_t sub_19C573174(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  swift_unownedRetainStrong();
  v4 = *(_QWORD *)(v3 + 40);
  swift_unknownObjectRetain();
  swift_release();
  if (v4)
  {
    objc_msgSend(a1, sel_encodeWaitForEvent_value_, v4, *(_QWORD *)(v1 + 24));
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_19CAA9F44();
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
    }
    result = sub_19CAAA0B8();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for IOSurfaceAsyncEvent()
{
  return objc_opt_self();
}

uint64_t sub_19C573328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_unownedRetainStrong();
  v2 = *(_QWORD *)(v1 + 40);
  swift_unknownObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_19C573364()
{
  uint64_t v0;

  v0 = *(_QWORD *)(swift_unownedRetainStrong() + 24);
  swift_release();
  return v0;
}

uint64_t sub_19C573390()
{
  uint64_t v0;

  v0 = *(_QWORD *)(swift_unownedRetainStrong() + 56);
  swift_release();
  return v0;
}

uint64_t sub_19C5733BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19C5231F8;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_19C57341C(uint64_t a1)
{
  uint64_t v1;

  return sub_19C57301C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19C573424()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424430);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_19C573488(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_19C5734FC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  void *v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  sub_19CAA941C();
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v7 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v3 = (void *)*a3;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_8:
    __break(1u);

    goto LABEL_9;
  }
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (sub_19CAA9410())
  {
    sub_19CAA9404();
    return swift_release();
  }
LABEL_9:
  v9 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5737B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v41[3];
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;

  v6 = sub_19CAA9374();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (void (*)(void))((char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_19CAA93F8();
  v9 = *(_QWORD *)(v44 - 8);
  v10 = MEMORY[0x1E0C80A78](v44);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)v41 - v13;
  v14 = sub_19CAA92F0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v45 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v41 - v18;
  MEMORY[0x1E0C80A78](v17);
  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
  {
    __break(1u);
    goto LABEL_7;
  }
  v42 = v8;
  v43 = a3;
  v23 = *(_OWORD *)(a1 + 176);
  v57 = *(_OWORD *)(a1 + 160);
  v58 = v23;
  v59 = *(_OWORD *)(a1 + 192);
  v24 = *(_OWORD *)(a1 + 112);
  v53 = *(_OWORD *)(a1 + 96);
  v54 = v24;
  v25 = *(_OWORD *)(a1 + 144);
  v55 = *(_OWORD *)(a1 + 128);
  v56 = v25;
  v26 = *(_OWORD *)(a1 + 48);
  v49 = *(_OWORD *)(a1 + 32);
  v50 = v26;
  v27 = *(_OWORD *)(a1 + 80);
  v51 = *(_OWORD *)(a1 + 64);
  v52 = v27;
  v28 = *MEMORY[0x1E0DE95E8];
  v8 = *(void (**)(void))(v20 + 104);
  v41[2] = (char *)v41 - v21;
  v8();
  if (v22 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v29 = *(_OWORD *)(a1 + 352);
  v68 = *(_OWORD *)(a1 + 336);
  v69 = v29;
  v70 = *(_OWORD *)(a1 + 368);
  v30 = *(_OWORD *)(a1 + 288);
  v64 = *(_OWORD *)(a1 + 272);
  v65 = v30;
  v31 = *(_OWORD *)(a1 + 320);
  v66 = *(_OWORD *)(a1 + 304);
  v67 = v31;
  v32 = *(_OWORD *)(a1 + 224);
  v60 = *(_OWORD *)(a1 + 208);
  v61 = v32;
  v33 = *(_OWORD *)(a1 + 256);
  v62 = *(_OWORD *)(a1 + 240);
  v63 = v33;
  ((void (*)(char *, uint64_t, uint64_t))v8)(v19, v28, v14);
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __asm { BR              X10 }
  }
  v34 = *(_OWORD *)(a2 + 176);
  v79 = *(_OWORD *)(a2 + 160);
  v80 = v34;
  v81 = *(_OWORD *)(a2 + 192);
  v35 = *(_OWORD *)(a2 + 112);
  v75 = *(_OWORD *)(a2 + 96);
  v76 = v35;
  v36 = *(_OWORD *)(a2 + 144);
  v77 = *(_OWORD *)(a2 + 128);
  v78 = v36;
  v37 = *(_OWORD *)(a2 + 48);
  v71 = *(_OWORD *)(a2 + 32);
  v72 = v37;
  v38 = *(_OWORD *)(a2 + 80);
  v73 = *(_OWORD *)(a2 + 64);
  v74 = v38;
  v41[1] = v19;
  ((void (*)(char *, uint64_t, uint64_t))v8)(v45, v28, v14);
  LOBYTE(v8) = v43;
  v39 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, **((unsigned int **)&unk_1E3D5EDB8 + (char)v43), v44);
  sub_19CAA93E0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v12, v39);
  sub_19CAA9DD0();
  sub_19CAA9D70();
  (*(void (**)(void (*)(void), _QWORD, uint64_t))(v47 + 104))(v42, *MEMORY[0x1E0DE9670], v48);
  if (!sub_19CAA93D4())
    goto LABEL_9;
  sub_19CAA93C8();
  return swift_release();
}

void sub_19C573B58()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    *(_QWORD *)(v0 + 96) = 0;
    *(_QWORD *)(v0 + 104) = 0xE000000000000000;
    sub_19CAA9F2C();
    v1 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 104) = v1;
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    *(_BYTE *)(v0 + 95) = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  sub_19CAAA0B8();
  __break(1u);
  JUMPOUT(0x19C573D38);
}

uint64_t sub_19C573D78@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  unint64_t v17;
  unsigned int *v18;
  uint64_t result;
  _QWORD v20[2];
  unint64_t v21;
  unint64_t v22;

  v20[0] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CAA9278();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v20 - v13;
  if (a1[2])
  {
    swift_bridgeObjectRetain();
    v15 = a1;
    if (a2)
      goto LABEL_3;
LABEL_6:
    v16 = 0;
    goto LABEL_7;
  }
  v15 = &unk_1E3D43BB8;
  if (!a2)
    goto LABEL_6;
LABEL_3:
  v16 = a2;
  if (!a2[2])
  {
    swift_bridgeObjectRelease();
    v16 = &unk_1E3D43B90;
  }
LABEL_7:
  v17 = v15[2] - 1;
  if (v17 >= 8)
  {
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_19CAA9F2C();
    swift_bridgeObjectRelease();
    v21 = 0xD00000000000001ALL;
    v22 = 0x800000019CABCD20;
    v20[1] = a1[2];
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    sub_19CAA9F44();
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      v21 = 0;
      v22 = 0xE000000000000000;
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
    }
    result = sub_19CAAA0B8();
    __break(1u);
  }
  else
  {
    v18 = (unsigned int *)*(&off_1E3D5EE00 + v17);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *v18, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
    if (v16)
      sub_19C4F4F04((uint64_t)v16);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v14, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if (a2)
      swift_bridgeObjectRetain();
    sub_19CAA9494();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19C5740F0()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_19CAA947C();
  v0 = v21;
  result = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_19C556FD0(0, 1, 1);
    result = v22;
    v3 = *(_QWORD *)(v22 + 16);
    v2 = *(_QWORD *)(v22 + 24);
    v4 = v3 + 1;
    if (v3 >= v2 >> 1)
    {
      sub_19C556FD0(v2 > 1, v3 + 1, 1);
      result = v22;
    }
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 8 * v3 + 32) = v0;
    if (v30)
    {
      v23 = result;
      v5 = *(_QWORD *)(result + 24);
      if (v4 >= v5 >> 1)
      {
        sub_19C556FD0(v5 > 1, v3 + 2, 1);
        result = v23;
      }
      *(_QWORD *)(result + 16) = v3 + 2;
      *(_QWORD *)(result + 8 * v4 + 32) = v30;
      if (v31)
      {
        v24 = result;
        v7 = *(_QWORD *)(result + 16);
        v6 = *(_QWORD *)(result + 24);
        v8 = v7 + 1;
        if (v7 >= v6 >> 1)
        {
          sub_19C556FD0(v6 > 1, v7 + 1, 1);
          result = v24;
        }
        *(_QWORD *)(result + 16) = v8;
        *(_QWORD *)(result + 8 * v7 + 32) = v31;
        if (v32)
        {
          v25 = result;
          v9 = *(_QWORD *)(result + 24);
          v10 = v7 + 2;
          if (v8 >= v9 >> 1)
          {
            sub_19C556FD0(v9 > 1, v10, 1);
            result = v25;
          }
          *(_QWORD *)(result + 16) = v10;
          *(_QWORD *)(result + 8 * v8 + 32) = v32;
          if (v33)
          {
            v26 = result;
            v12 = *(_QWORD *)(result + 16);
            v11 = *(_QWORD *)(result + 24);
            v13 = v12 + 1;
            if (v12 >= v11 >> 1)
            {
              sub_19C556FD0(v11 > 1, v12 + 1, 1);
              result = v26;
            }
            *(_QWORD *)(result + 16) = v13;
            *(_QWORD *)(result + 8 * v12 + 32) = v33;
            if (v34)
            {
              v27 = result;
              v14 = *(_QWORD *)(result + 24);
              v15 = v12 + 2;
              if (v13 >= v14 >> 1)
              {
                sub_19C556FD0(v14 > 1, v15, 1);
                result = v27;
              }
              *(_QWORD *)(result + 16) = v15;
              *(_QWORD *)(result + 8 * v13 + 32) = v34;
              if (v35)
              {
                v28 = result;
                v17 = *(_QWORD *)(result + 16);
                v16 = *(_QWORD *)(result + 24);
                v18 = v17 + 1;
                if (v17 >= v16 >> 1)
                {
                  sub_19C556FD0(v16 > 1, v17 + 1, 1);
                  result = v28;
                }
                *(_QWORD *)(result + 16) = v18;
                *(_QWORD *)(result + 8 * v17 + 32) = v35;
                if (v36)
                {
                  v29 = result;
                  v19 = *(_QWORD *)(result + 24);
                  v20 = v17 + 2;
                  if (v18 >= v19 >> 1)
                  {
                    sub_19C556FD0(v19 > 1, v20, 1);
                    result = v29;
                  }
                  *(_QWORD *)(result + 16) = v20;
                  *(_QWORD *)(result + 8 * v18 + 32) = v36;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_19C5743BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
    result = swift_allocObject();
    v7 = 0;
    *(_OWORD *)(result + 16) = xmmword_19CAE8180;
    v8 = 1;
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 8 * v7 + 32);
      v10 = v8 * v9;
      if ((unsigned __int128)(v8 * (__int128)v9) >> 64 != (v8 * v9) >> 63)
        break;
      v8 *= v9;
      if (v5 == ++v7)
      {
        *(_QWORD *)(result + 32) = v10;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v11 = sub_19CAA9278();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    return sub_19CAA9494();
  }
  return result;
}

uint64_t sub_19C574500(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  unint64_t v15;
  unsigned int *v16;
  uint64_t result;
  _QWORD v18[2];
  unint64_t v19;
  unint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_19CAA9278();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v18 - v12;
  if (a1[2])
  {
    swift_bridgeObjectRetain();
    v14 = a1;
  }
  else
  {
    v14 = &unk_1E3D43C08;
  }
  v15 = v14[2] - 1;
  if (v15 >= 8)
  {
    v19 = 0;
    v20 = 0xE000000000000000;
    sub_19CAA9F2C();
    swift_bridgeObjectRelease();
    v19 = 0xD00000000000001ALL;
    v20 = 0x800000019CABCD20;
    v18[1] = a1[2];
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    sub_19CAA9F44();
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      v19 = 0;
      v20 = 0xE000000000000000;
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
    }
    result = sub_19CAAA0B8();
    __break(1u);
  }
  else
  {
    v16 = (unsigned int *)*(&off_1E3D5EE40 + v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *v16, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    sub_19C4F4F04((uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v13, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if (a2)
    {
      if (*(_QWORD *)(a2 + 16))
        sub_19C4F4F04(a2);
      else
        swift_bridgeObjectRelease();
    }
    sub_19CAA9494();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return result;
}

uint64_t sub_19C574858@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unsigned int *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - v10;
  if (a1[2])
  {
    if (a2)
      goto LABEL_3;
  }
  else
  {
    swift_bridgeObjectRelease();
    a1 = &qword_1E3D43C58;
    if (a2)
    {
LABEL_3:
      v12 = a2[2];
      swift_bridgeObjectRetain();
      v13 = a2;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        v13 = &unk_1E3D43C30;
      }
      goto LABEL_7;
    }
  }
  v14 = a1[2];
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)sub_19C500C0C(0, v14);
LABEL_7:
  v15 = sub_19CAA9278();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v11, 1, 1, v15);
  v18 = a1[2];
  switch(v18)
  {
    case 1:
      sub_19C574E0C((uint64_t)v11);
      swift_bridgeObjectRelease();
      v19 = (unsigned int *)MEMORY[0x1E0DE9568];
      goto LABEL_17;
    case 2:
      v39 = v9;
      v40 = a3;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
      v18 = swift_allocObject();
      v38 = xmmword_19CAE8180;
      *(_OWORD *)(v18 + 16) = xmmword_19CAE8180;
      v26 = a1[5];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 32) = v26;
      swift_bridgeObjectRelease();
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v38;
      if (v13[2] < 2uLL)
        goto LABEL_39;
      v24 = (_QWORD *)v27;
      *(_QWORD *)(v27 + 32) = v13[5];
      swift_bridgeObjectRelease();
      sub_19C574E0C((uint64_t)v11);
      v19 = (unsigned int *)MEMORY[0x1E0DE9568];
      goto LABEL_16;
    case 3:
      v39 = v9;
      v40 = a3;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
      v18 = swift_allocObject();
      v38 = xmmword_19CAEA320;
      v20 = *((_OWORD *)a1 + 2);
      *(_OWORD *)(v18 + 16) = xmmword_19CAEA320;
      *(_OWORD *)(v18 + 32) = v20;
      *(_QWORD *)(v18 + 48) = 1;
      v21 = a1[6];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 56) = v21;
      swift_bridgeObjectRelease();
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v38;
      v23 = v13[2];
      if (!v23)
      {
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      v24 = (_QWORD *)v22;
      *(_QWORD *)(v22 + 32) = v13[4];
      if (v23 == 1)
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      v25 = v13[5];
      *(_QWORD *)(v22 + 40) = v25;
      *(_QWORD *)(v22 + 48) = v25;
      if (v23 < 3)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        v42 = 0;
        v43 = 0xE000000000000000;
        sub_19CAA9F2C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42 = 0xD000000000000012;
        v43 = 0x800000019CABCD00;
        v41 = v18;
        sub_19CAAA190();
        sub_19CAA992C();
        swift_bridgeObjectRelease();
        sub_19CAAA0B8();
        __break(1u);
        JUMPOUT(0x19C574DFCLL);
      }
      *(_QWORD *)(v22 + 56) = v13[6];
      swift_bridgeObjectRelease();
      sub_19C574E0C((uint64_t)v11);
      v19 = (unsigned int *)MEMORY[0x1E0DE9570];
LABEL_16:
      a1 = (uint64_t *)v18;
      v13 = v24;
      v9 = v39;
LABEL_17:
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v11, *v19, v15);
      v17(v11, 0, 1, v15);
      v28 = a1[2];
      if (v28 < 4)
      {
        v29 = (uint64_t)a1;
        goto LABEL_32;
      }
      v30 = v9;
      sub_19CAAA1FC();
      swift_unknownObjectRetain_n();
      v31 = swift_dynamicCastClass();
      if (!v31)
      {
        swift_bridgeObjectRelease();
        v31 = MEMORY[0x1E0DEE9D8];
      }
      v32 = *(_QWORD *)(v31 + 16);
      swift_release();
      if (v32 == v28 - 1)
      {
        v29 = swift_dynamicCastClass();
        if (!v29)
        {
          swift_bridgeObjectRelease();
          v29 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v29 = sub_19C4D45C4((uint64_t)a1, (uint64_t)(a1 + 4), 1, (2 * v28) | 1);
      }
      swift_bridgeObjectRelease();
      v33 = v13[2];
      if (!v33)
      {
        __break(1u);
LABEL_37:
        swift_bridgeObjectRelease();
        v36 = sub_19C4D45C4((uint64_t)v13, (uint64_t)(v13 + 4), 1, (2 * v33) | 1);
        v9 = v30;
        goto LABEL_30;
      }
      swift_unknownObjectRetain_n();
      v34 = swift_dynamicCastClass();
      if (!v34)
      {
        swift_bridgeObjectRelease();
        v34 = MEMORY[0x1E0DEE9D8];
      }
      v35 = *(_QWORD *)(v34 + 16);
      swift_release();
      if (v35 != v33 - 1)
        goto LABEL_37;
      v36 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      v9 = v30;
      if (!v36)
      {
        v36 = MEMORY[0x1E0DEE9D8];
LABEL_30:
        swift_bridgeObjectRelease();
      }
      v13 = (_QWORD *)v36;
LABEL_32:
      sub_19C4F4F04(v29);
      swift_bridgeObjectRetain();
      sub_19C4F4F04((uint64_t)v13);
      sub_19C575184((uint64_t)v11, (uint64_t)v9);
      if (a2)
        swift_bridgeObjectRetain();
      sub_19CAA9494();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_19C574E0C((uint64_t)v11);
    case 4:
      sub_19C574E0C((uint64_t)v11);
      swift_bridgeObjectRelease();
      v19 = (unsigned int *)MEMORY[0x1E0DE9570];
      goto LABEL_17;
    default:
      goto LABEL_42;
  }
}

uint64_t sub_19C574E0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19C574E4C(int a1)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  result = 1;
  if (a1 >= 294912)
  {
    v3 = a1 - 425984;
    if (a1 < 425984)
    {
      if ((a1 - 294912) < 2)
        return 4;
      if ((a1 - 360448) < 2)
        return 5;
    }
    else
    {
      v4 = a1 - 491520;
      v5 = (a1 - 557056) >= 2;
      v6 = 8;
      if (v5)
        v6 = 1;
      if (v4 < 2)
        v6 = 7;
      if (v3 >= 2)
        return v6;
      else
        return 6;
    }
  }
  else if (a1 < 196608)
  {
    if ((a1 - 0x20000) < 2 || (a1 - 163840) < 2)
      return 2;
  }
  else
  {
    if ((a1 - 196608) < 3 || (a1 - 229376) < 2)
      return 3;
    if (a1 == 0x40000)
      return 4;
  }
  return result;
}

uint64_t sub_19C574F04(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;

  switch(a2)
  {
    case 0:
      v3 = v2 + 1;
      goto LABEL_10;
    case 1:
      v3 = v2 + 2;
      goto LABEL_10;
    case 2:
      v3 = v2 + 3;
      goto LABEL_10;
    case 3:
      v3 = v2 + 4;
      goto LABEL_10;
    case 4:
      v3 = v2 + 5;
      goto LABEL_10;
    case 5:
      v3 = v2 + 6;
      goto LABEL_10;
    case 6:
      v3 = v2 + 7;
      goto LABEL_10;
    case 7:
      v3 = v2 + 8;
LABEL_10:
      *v3 = result;
      break;
    default:
      sub_19CAA9F2C();
      swift_bridgeObjectRelease();
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      result = sub_19CAAA0B8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_19C575044(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;

  switch(a2)
  {
    case 0:
      v3 = v2 + 9;
      goto LABEL_10;
    case 1:
      v3 = v2 + 10;
      goto LABEL_10;
    case 2:
      v3 = v2 + 11;
      goto LABEL_10;
    case 3:
      v3 = v2 + 12;
      goto LABEL_10;
    case 4:
      v3 = v2 + 13;
      goto LABEL_10;
    case 5:
      v3 = v2 + 14;
      goto LABEL_10;
    case 6:
      v3 = v2 + 15;
      goto LABEL_10;
    case 7:
      v3 = v2 + 16;
LABEL_10:
      *v3 = result;
      break;
    default:
      sub_19CAA9F2C();
      swift_bridgeObjectRelease();
      sub_19CAAA190();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      result = sub_19CAAA0B8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_19C575184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19C5751CC@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  int v12;
  __int128 v13;
  __int128 v14;
  void (*v15)(char *, uint64_t);
  unint64_t v16;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[144];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v26 = a4;
  v27 = a1;
  v19 = a5;
  v42 = *MEMORY[0x1E0C80C00];
  v7 = sub_19CAA9488();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v18 = a3;
  v11(v10, a3, v7);
  v12 = sub_19CAA9470();
  sub_19CAA9464();
  v24 = v32;
  v25 = v31;
  v23 = v33;
  v13 = v34;
  sub_19CAA947C();
  v21 = v32;
  v22 = v31;
  v20 = v33;
  v14 = v34;
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  *(_DWORD *)v28 = 0;
  *(_DWORD *)&v28[4] = v12;
  *(_OWORD *)&v28[8] = v25;
  *(_OWORD *)&v28[24] = v24;
  *(_OWORD *)&v28[40] = v23;
  *(_OWORD *)&v28[56] = v13;
  *(_OWORD *)&v28[72] = v22;
  *(_OWORD *)&v28[88] = v21;
  *(_OWORD *)&v28[104] = v20;
  *(_OWORD *)&v28[120] = v14;
  *(_QWORD *)&v28[136] = v27;
  LODWORD(v29) = a2;
  *((_QWORD *)&v29 + 1) = 0;
  LODWORD(v30) = a2;
  v16 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)((char *)&v30 + 4) = 1065353216;
  if (v16 >> 60)
    __break(1u);
  *(_QWORD *)&v31 = v26 + 32;
  *((_QWORD *)&v31 + 1) = v26 + 32 + 8 * v16;
  sub_19C5753F4();
  sub_19CAA9578();
  v15(v18, v7);
  v39 = *(_OWORD *)&v28[128];
  v40 = v29;
  v41 = v30;
  v35 = *(_OWORD *)&v28[64];
  v36 = *(_OWORD *)&v28[80];
  v37 = *(_OWORD *)&v28[96];
  v38 = *(_OWORD *)&v28[112];
  v31 = *(_OWORD *)v28;
  v32 = *(_OWORD *)&v28[16];
  v33 = *(_OWORD *)&v28[32];
  v34 = *(_OWORD *)&v28[48];
  sub_19C4DCE74((uint64_t)&v31);
  return sub_19C4DCE08((uint64_t)&v31, v19, &qword_1EE4233E8);
}

unint64_t sub_19C5753F4()
{
  unint64_t result;

  result = qword_1EE424920;
  if (!qword_1EE424920)
  {
    result = MEMORY[0x1A1AD76AC](MEMORY[0x1E0CB1AA0], MEMORY[0x1E0DEAC20]);
    atomic_store(result, (unint64_t *)&qword_1EE424920);
  }
  return result;
}

void sub_19C575438(size_t a1, _OWORD *a2, _OWORD *a3, _OWORD *a4, _OWORD *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  size_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  size_t v84;
  _OWORD *v85;
  _OWORD *v86;
  __int128 v87;
  void *v88;
  __int128 v89;
  uint64_t v90;
  int v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  _OWORD *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  __int128 v101;
  uint64_t v102;
  _OWORD v103[11];
  int v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  int v116;
  int v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  int v129;
  int v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  int v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  _BYTE v158[180];
  _BYTE v159[180];
  _BYTE v160[180];
  uint64_t v161;

  v90 = a8;
  v88 = a7;
  *(_QWORD *)&v87 = a6;
  v84 = a1;
  v161 = *MEMORY[0x1E0C80C00];
  v83 = sub_19CAA9488();
  v80 = *(_QWORD *)(v83 - 8);
  v13 = MEMORY[0x1E0C80A78](v83);
  v82 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v81 = (char *)&v77 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v79 = (char *)&v77 - v18;
  MEMORY[0x1E0C80A78](v17);
  v78 = (char *)&v77 - v19;
  v20 = sub_19CAA9374();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2[9];
  v103[8] = a2[8];
  v103[9] = v23;
  v103[10] = a2[10];
  v24 = a2[5];
  v103[4] = a2[4];
  v103[5] = v24;
  v25 = a2[7];
  v103[6] = a2[6];
  v103[7] = v25;
  v26 = a2[1];
  v103[0] = *a2;
  v103[1] = v26;
  v27 = a2[3];
  v103[2] = a2[2];
  v103[3] = v27;
  v28 = a3[6];
  *(_OWORD *)&v160[116] = a3[7];
  v29 = a3[9];
  *(_OWORD *)&v160[132] = a3[8];
  *(_OWORD *)&v160[148] = v29;
  *(_OWORD *)&v160[164] = a3[10];
  v30 = a3[2];
  *(_OWORD *)&v160[52] = a3[3];
  v31 = a3[5];
  *(_OWORD *)&v160[68] = a3[4];
  *(_OWORD *)&v160[84] = v31;
  *(_OWORD *)&v160[100] = v28;
  v32 = a3[1];
  *(_OWORD *)&v160[4] = *a3;
  *(_OWORD *)&v160[20] = v32;
  *(_OWORD *)&v160[36] = v30;
  v33 = a4[6];
  *(_OWORD *)&v159[116] = a4[7];
  v34 = a4[9];
  *(_OWORD *)&v159[132] = a4[8];
  *(_OWORD *)&v159[148] = v34;
  *(_OWORD *)&v159[164] = a4[10];
  v35 = a4[2];
  *(_OWORD *)&v159[52] = a4[3];
  v36 = a4[5];
  *(_OWORD *)&v159[68] = a4[4];
  *(_OWORD *)&v159[84] = v36;
  *(_OWORD *)&v159[100] = v33;
  v37 = *a4;
  v38 = a4[1];
  v86 = a4;
  *(_OWORD *)&v159[4] = v37;
  *(_OWORD *)&v159[20] = v38;
  *(_OWORD *)&v159[36] = v35;
  v39 = a5[6];
  *(_OWORD *)&v158[116] = a5[7];
  v40 = a5[9];
  *(_OWORD *)&v158[132] = a5[8];
  *(_OWORD *)&v158[148] = v40;
  *(_OWORD *)&v158[164] = a5[10];
  v41 = a5[2];
  *(_OWORD *)&v158[52] = a5[3];
  v42 = a5[5];
  *(_OWORD *)&v158[68] = a5[4];
  *(_OWORD *)&v158[84] = v42;
  *(_OWORD *)&v158[100] = v39;
  v43 = *a5;
  v44 = a5[1];
  v85 = a5;
  *(_OWORD *)&v158[4] = v43;
  *(_OWORD *)&v158[20] = v44;
  *(_OWORD *)&v158[36] = v41;
  v114 = *(_OWORD *)&v160[144];
  v115 = *(_OWORD *)&v160[160];
  v110 = *(_OWORD *)&v160[80];
  v111 = *(_OWORD *)&v160[96];
  v112 = *(_OWORD *)&v160[112];
  v113 = *(_OWORD *)&v160[128];
  v104 = 0;
  v116 = *(_DWORD *)&v160[176];
  v109 = *(_OWORD *)&v160[64];
  v105 = *(_OWORD *)v160;
  v106 = *(_OWORD *)&v160[16];
  v107 = *(_OWORD *)&v160[32];
  v108 = *(_OWORD *)&v160[48];
  v117 = 0;
  v126 = *(_OWORD *)&v159[128];
  v127 = *(_OWORD *)&v159[144];
  v128 = *(_OWORD *)&v159[160];
  v122 = *(_OWORD *)&v159[64];
  v123 = *(_OWORD *)&v159[80];
  v124 = *(_OWORD *)&v159[96];
  v125 = *(_OWORD *)&v159[112];
  v118 = *(_OWORD *)v159;
  v119 = *(_OWORD *)&v159[16];
  v120 = *(_OWORD *)&v159[32];
  v121 = *(_OWORD *)&v159[48];
  v129 = *(_DWORD *)&v159[176];
  v130 = 0;
  v139 = *(_OWORD *)&v158[128];
  v140 = *(_OWORD *)&v158[144];
  v141 = *(_OWORD *)&v158[160];
  v135 = *(_OWORD *)&v158[64];
  v136 = *(_OWORD *)&v158[80];
  v137 = *(_OWORD *)&v158[96];
  v138 = *(_OWORD *)&v158[112];
  v131 = *(_OWORD *)v158;
  v132 = *(_OWORD *)&v158[16];
  v133 = *(_OWORD *)&v158[32];
  v134 = *(_OWORD *)&v158[48];
  v142 = *(_DWORD *)&v158[176];
  v143 = 0;
  v46 = v45;
  v48 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v22, *MEMORY[0x1E0DE9670], v47);
  sub_19CAA9368();
  v49 = v144;
  v50 = v147;
  v89 = v148;
  v51 = v149;
  v52 = v145;
  v53 = v146;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v48);
  v95 = 31;
  v96 = v103;
  v97 = v49;
  v98 = v52;
  v99 = v53;
  v100 = v50;
  v101 = v89;
  v102 = v51;
  if (v90 == 1)
  {
    v54 = 0;
  }
  else
  {
    v91 = v87;
    v92 = v88;
    v93 = v90;
    v94 = a9;
    v54 = &v91;
  }
  v55 = (void *)MEMORY[0x1A1AD4F28](&v95, v54);
  if (!v55)
  {
    v71 = sub_19CAA9440();
    sub_19C575B64();
    swift_allocError();
    v73 = v76;
    v74 = (unsigned int *)MEMORY[0x1E0DE97B8];
    goto LABEL_13;
  }
  sub_19C4DCE08((uint64_t)a2 + 136, (uint64_t)&v153, &qword_1EE4233F0);
  sub_19C4DCE08((uint64_t)&v153, (uint64_t)&v154, &qword_1EE4233F0);
  v56 = v154;
  if (!v154)
    goto LABEL_11;
  sub_19C4DCE08((uint64_t)a3 + 136, (uint64_t)&v152, &qword_1EE4233F0);
  sub_19C4DCE08((uint64_t)&v152, (uint64_t)&v155, &qword_1EE4233F0);
  v57 = v155;
  if (!v155
    || (sub_19C4DCE08((uint64_t)v86 + 136, (uint64_t)&v151, &qword_1EE4233F0),
        sub_19C4DCE08((uint64_t)&v151, (uint64_t)&v156, &qword_1EE4233F0),
        (v58 = v156) == 0)
    || (sub_19C4DCE08((uint64_t)v85 + 136, (uint64_t)&v150, &qword_1EE4233F0),
        sub_19C4DCE08((uint64_t)&v150, (uint64_t)&v157, &qword_1EE4233F0),
        !v157))
  {
LABEL_11:
    v71 = sub_19CAA9440();
    sub_19C575B64();
    swift_allocError();
    v73 = v75;
    v74 = (unsigned int *)MEMORY[0x1E0DE97C0];
    goto LABEL_13;
  }
  v88 = v157;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4235E0);
  v59 = swift_allocObject();
  v87 = xmmword_19CAE83C0;
  v90 = v59;
  *(_OWORD *)(v59 + 16) = xmmword_19CAE83C0;
  *(_QWORD *)(v59 + 32) = v56;
  *(_QWORD *)&v89 = v59 + 32;
  *(_QWORD *)(v59 + 40) = v57;
  *(_QWORD *)(v59 + 48) = v58;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v87;
  v61 = v78;
  sub_19CAA9D88();
  v62 = sub_19CAA944C();
  v63 = *(void (**)(char *, uint64_t))(v80 + 8);
  v64 = v83;
  v63(v61, v83);
  *(_QWORD *)(v60 + 32) = v62;
  *(_QWORD *)&v87 = v60 + 32;
  v65 = v79;
  sub_19CAA9D88();
  v66 = sub_19CAA944C();
  v63(v65, v64);
  *(_QWORD *)(v60 + 40) = v66;
  v67 = v81;
  sub_19CAA9D88();
  v68 = sub_19CAA944C();
  v63(v67, v64);
  *(_QWORD *)(v60 + 48) = v68;
  v69 = v82;
  sub_19CAA9D88();
  v70 = sub_19CAA944C();
  v63(v69, v64);
  LODWORD(v70) = BNNSArithmeticFilterApplyBatch(v55, v84, 3uLL, (const void **)v89, (const size_t *)v87, v88, v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((_DWORD)v70)
  {
    v71 = sub_19CAA9440();
    sub_19C575B64();
    swift_allocError();
    v73 = v72;
    v74 = (unsigned int *)MEMORY[0x1E0DE97B0];
LABEL_13:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v73, *v74, v71);
    swift_willThrow();
    return;
  }
  BNNSFilterDestroy(v55);
}

unint64_t sub_19C575B64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE4243B0;
  if (!qword_1EE4243B0)
  {
    v1 = sub_19CAA9440();
    result = MEMORY[0x1A1AD76AC](MEMORY[0x1E0DE97D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE4243B0);
  }
  return result;
}

void sub_19C575BAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8) - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19CAE8310;
  if (*(_QWORD *)(a1 + 16))
  {
    v5 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v4 + v3) = v5;
    __asm { BR              X11 }
  }
  __break(1u);
  JUMPOUT(0x19C575E9CLL);
}

uint64_t sub_19C575ED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5 == 3)
  {
    sub_19C50358C(2, 2, 1);
    a1 = v11;
  }
  sub_19C4F4F04(a1);
  v6 = *MEMORY[0x1E0DE9560];
  v7 = sub_19CAA9278();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v4, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  return sub_19CAA9494();
}

uint64_t sub_19C575FE0(uint64_t a1, uint64_t a2, int8x16_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _BYTE v76[192];

  v38 = a4;
  v36 = sub_19CAA9374();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CAA9380();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (int8x16_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_19CAA9338();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_19CAA9350();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DE9620], v12);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    __break(1u);
    goto LABEL_7;
  }
  v17 = *(_OWORD *)(a1 + 176);
  v50 = *(_OWORD *)(a1 + 160);
  v51 = v17;
  v52 = *(_OWORD *)(a1 + 192);
  v18 = *(_OWORD *)(a1 + 112);
  v46 = *(_OWORD *)(a1 + 96);
  v47 = v18;
  v19 = *(_OWORD *)(a1 + 144);
  v48 = *(_OWORD *)(a1 + 128);
  v49 = v19;
  v20 = *(_OWORD *)(a1 + 48);
  v42 = *(_OWORD *)(a1 + 32);
  v43 = v20;
  v21 = *(_OWORD *)(a1 + 80);
  v44 = *(_OWORD *)(a1 + 64);
  v45 = v21;
  if (v16 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v22 = *(_OWORD *)(a1 + 352);
  v72 = *(_OWORD *)(a1 + 336);
  v73 = v22;
  v74 = *(_OWORD *)(a1 + 368);
  v23 = *(_OWORD *)(a1 + 288);
  v68 = *(_OWORD *)(a1 + 272);
  v69 = v23;
  v24 = *(_OWORD *)(a1 + 320);
  v70 = *(_OWORD *)(a1 + 304);
  v71 = v24;
  v25 = *(_OWORD *)(a1 + 224);
  v64 = *(_OWORD *)(a1 + 208);
  v65 = v25;
  v26 = *(_OWORD *)(a1 + 256);
  v66 = *(_OWORD *)(a1 + 240);
  v67 = v26;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_8:
    __break(1u);

    goto LABEL_9;
  }
  v27 = *(_OWORD *)(a2 + 176);
  v61 = *(_OWORD *)(a2 + 160);
  v62 = v27;
  v63 = *(_OWORD *)(a2 + 192);
  v28 = *(_OWORD *)(a2 + 112);
  v57 = *(_OWORD *)(a2 + 96);
  v58 = v28;
  v29 = *(_OWORD *)(a2 + 144);
  v59 = *(_OWORD *)(a2 + 128);
  v60 = v29;
  v30 = *(_OWORD *)(a2 + 48);
  v53 = *(_OWORD *)(a2 + 32);
  v54 = v30;
  v31 = *(_OWORD *)(a2 + 80);
  v55 = *(_OWORD *)(a2 + 64);
  v56 = v31;
  sub_19C4DCE4C((uint64_t)v76);
  sub_19C572CF0((uint64_t)v76, (uint64_t)&v75);
  *v11 = vextq_s8(a3[1], a3[1], 8uLL);
  (*(void (**)(int8x16_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DE9680], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v37, *MEMORY[0x1E0DE9670], v36);
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (sub_19CAA9344())
  {
    sub_19CAA9284();
    return swift_release();
  }
LABEL_9:
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    v39 = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5763FC()
{
  return swift_deallocObject();
}

uint64_t sub_19C57640C(uint64_t a1, uint64_t a2)
{
  int8x16_t *v2;

  return sub_19C575FE0(a1, a2, v2 + 1, v2[4].i64[1]);
}

uint64_t sub_19C576418@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = 8 * (char)result;
  v4 = *(_QWORD *)&aAcos_0[v3];
  v5 = *(_QWORD *)((char *)&unk_19CAEBEF0 + v3);
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = a2 & 1;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 5;
  return result;
}

uint64_t sub_19C576450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v6 = sub_19CAA9374();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CAA93EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v33 - v13;
  v14 = sub_19CAA92F0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v34 = a3;
  v20 = *(_OWORD *)(a1 + 176);
  v47 = *(_OWORD *)(a1 + 160);
  v48 = v20;
  v49 = *(_OWORD *)(a1 + 192);
  v21 = *(_OWORD *)(a1 + 112);
  v43 = *(_OWORD *)(a1 + 96);
  v44 = v21;
  v22 = *(_OWORD *)(a1 + 144);
  v45 = *(_OWORD *)(a1 + 128);
  v46 = v22;
  v23 = *(_OWORD *)(a1 + 48);
  v39 = *(_OWORD *)(a1 + 32);
  v40 = v23;
  v24 = *(_OWORD *)(a1 + 80);
  v41 = *(_OWORD *)(a1 + 64);
  v42 = v24;
  v25 = *MEMORY[0x1E0DE95E8];
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  v26((char *)&v33 - v19, v25, v14);
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __asm { BR              X10 }
  }
  v27 = *(_OWORD *)(a2 + 176);
  v58 = *(_OWORD *)(a2 + 160);
  v59 = v27;
  v60 = *(_OWORD *)(a2 + 192);
  v28 = *(_OWORD *)(a2 + 112);
  v54 = *(_OWORD *)(a2 + 96);
  v55 = v28;
  v29 = *(_OWORD *)(a2 + 144);
  v56 = *(_OWORD *)(a2 + 128);
  v57 = v29;
  v30 = *(_OWORD *)(a2 + 48);
  v50 = *(_OWORD *)(a2 + 32);
  v51 = v30;
  v31 = *(_OWORD *)(a2 + 80);
  v52 = *(_OWORD *)(a2 + 64);
  v53 = v31;
  v26(v17, v25, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, **((unsigned int **)&unk_1E3D5EEB0 + (char)v34), v8);
  sub_19CAA93BC();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v35, v12, v8);
  sub_19CAA9DD0();
  sub_19CAA9D70();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v38, *MEMORY[0x1E0DE9670], v37);
  if (!sub_19CAA93B0())
    goto LABEL_7;
  sub_19CAA93A4();
  return swift_release();
}

void sub_19C57677C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0xE000000000000000;
    sub_19CAA9F2C();
    v1 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 72) = v1;
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    *(_BYTE *)(v0 + 63) = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  sub_19CAAA0B8();
  __break(1u);
  JUMPOUT(0x19C57690CLL);
}

uint64_t sub_19C57693C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  void (**v5)(_QWORD, _QWORD, _QWORD);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  unsigned int v32;
  _BYTE v33[72];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v32 = a3;
  v31 = sub_19CAA9374();
  v5 = *(void (***)(_QWORD, _QWORD, _QWORD))(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_19CAA93EC();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_19CAA92F0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v30 - v14;
  v16 = sub_19CAA93BC();
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v30[1] = v16;
  v17 = *(_OWORD *)(a1 + 176);
  v41 = *(_OWORD *)(a1 + 160);
  v42 = v17;
  v43 = *(_OWORD *)(a1 + 192);
  v18 = *(_OWORD *)(a1 + 112);
  v37 = *(_OWORD *)(a1 + 96);
  v38 = v18;
  v19 = *(_OWORD *)(a1 + 144);
  v39 = *(_OWORD *)(a1 + 128);
  v40 = v19;
  v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v33[56] = *(_OWORD *)(a1 + 32);
  v34 = v20;
  v21 = *(_OWORD *)(a1 + 80);
  v35 = *(_OWORD *)(a1 + 64);
  v36 = v21;
  v22 = *MEMORY[0x1E0DE95E8];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v23(v15, v22, v9);
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_6:
    __break(1u);

    goto LABEL_7;
  }
  v24 = *(_OWORD *)(a2 + 176);
  v52 = *(_OWORD *)(a2 + 160);
  v53 = v24;
  v54 = *(_OWORD *)(a2 + 192);
  v25 = *(_OWORD *)(a2 + 112);
  v48 = *(_OWORD *)(a2 + 96);
  v49 = v25;
  v26 = *(_OWORD *)(a2 + 144);
  v50 = *(_OWORD *)(a2 + 128);
  v51 = v26;
  v27 = *(_OWORD *)(a2 + 48);
  v44 = *(_OWORD *)(a2 + 32);
  v45 = v27;
  v28 = *(_OWORD *)(a2 + 80);
  v46 = *(_OWORD *)(a2 + 64);
  v47 = v28;
  v23(v13, v22, v9);
  sub_19C576C08(v32);
  sub_19CAA9DD0();
  sub_19CAA9D70();
  ((void (**)(char *, _QWORD, uint64_t))v5)[13](v7, *MEMORY[0x1E0DE9670], v31);
  if (sub_19CAA93B0())
  {
    sub_19CAA93A4();
    return swift_release();
  }
LABEL_7:
  sub_19C576418(v32, 0, (uint64_t)v33);
  sub_19C4D633C();
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

void sub_19C576C08(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19C576C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0DE9720];
  v2 = sub_19CAA93EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

_QWORD *sub_19C576D40(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)sub_19CAA96F8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4243C0);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v3;
  v1[5] = v4;
  v1[3] = a1;
  swift_retain();
  v5 = a1;
  v6 = (uint64_t)MTLCreateSystemDefaultDevice();
  if (v6)
  {
    v6 = swift_dynamicCastObjCProtocolConditional();
    if (!v6)
    {
      swift_unknownObjectRelease();
      v6 = 0;
    }
  }
  v1[4] = v6;
  v1[2] = v5;
  v7 = (os_unfair_lock_s *)v1[5];
  v8 = (uint64_t *)&v7[4];
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_19C576E38(v8, (uint64_t)v1, &v12);
  os_unfair_lock_unlock(v9);
  v10 = v12;

  if (v10 < 1)
  {
    swift_release();
    return 0;
  }
  return v1;
}

uint64_t sub_19C576E38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 32);
  type metadata accessor for BNNSDevice.SharedEvent();
  swift_allocObject();
  swift_unknownObjectRetain();
  result = sub_19C577114(v5, v6);
  if (!result)
    goto LABEL_13;
  v8 = result;
  result = *a1;
  v9 = *(_QWORD *)(*a1 + 24);
  v10 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  v11 = (_QWORD *)*a1;
  if (*(_QWORD *)(*a1 + 16) < v10 || (result & 1) == 0)
    goto LABEL_9;
  v12 = v11[4];
  if (v12)
  {
    while (1)
    {
      v13 = __OFSUB__(v12, 1);
      v14 = v12 - 1;
      if (!v13)
        break;
      __break(1u);
LABEL_9:
      v15 = v10;
      v10 = (uint64_t)a1;
      result = sub_19C5352CC(v15, 0);
      v11 = (_QWORD *)*a1;
      v12 = *(_QWORD *)(*a1 + 32);
      if (!v12)
        goto LABEL_10;
    }
LABEL_11:
    v11[v14 + 5] = v8;
    v11[4] = v14;
    v17 = v11[3];
    v13 = __OFADD__(v17, 1);
    v18 = v17 + 1;
    if (!v13)
    {
      v11[3] = v18;
LABEL_13:
      *a3 = *(_QWORD *)(*a1 + 24);
      return result;
    }
    goto LABEL_15;
  }
LABEL_10:
  v16 = v11[2];
  v13 = __OFSUB__(v16, 1);
  v14 = v16 - 1;
  if (!v13)
    goto LABEL_11;
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_19C576F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (!*(_QWORD *)(*(_QWORD *)a1 + 24))
  {
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(void **)(a2 + 32);
    type metadata accessor for BNNSDevice.SharedEvent();
    swift_allocObject();
    swift_unknownObjectRetain();
    result = sub_19C577114(v12, v13);
LABEL_9:
    *a3 = result;
    return result;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    result = sub_19C5516B8();
  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (!v8)
  {
    v10 = v6[4] + v9;
    v11 = v6[2];
    if (v10 < v11)
      v11 = 0;
    result = v6[v10 - v11 + 5];
    v6[3] = v9;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C577000(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = *a1;
  v4 = *(_QWORD *)(result + 24);
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  v7 = (_QWORD *)*a1;
  if (*(_QWORD *)(*a1 + 16) < v5 || (result & 1) == 0)
    goto LABEL_8;
  v8 = v7[4];
  if (v8)
  {
    while (1)
    {
      v9 = __OFSUB__(v8, 1);
      v10 = v8 - 1;
      if (!v9)
        break;
      __break(1u);
LABEL_8:
      result = sub_19C5352CC(v5, 0);
      v7 = (_QWORD *)*a1;
      v8 = *(_QWORD *)(*a1 + 32);
      if (!v8)
        goto LABEL_9;
    }
LABEL_10:
    v7[v10 + 5] = a2;
    v7[4] = v10;
    v12 = v7[3];
    v9 = __OFADD__(v12, 1);
    v13 = v12 + 1;
    if (!v9)
    {
      v7[3] = v13;
      return swift_retain();
    }
    goto LABEL_13;
  }
LABEL_9:
  v11 = v7[2];
  v9 = __OFSUB__(v11, 1);
  v10 = v11 - 1;
  if (!v9)
    goto LABEL_10;
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_19C5770C0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSDevice()
{
  return objc_opt_self();
}

uint64_t sub_19C577114(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;

  v3 = v2;
  v6 = sub_19CAA9D40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_19CAA9D34();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_19CAA97C4();
  MEMORY[0x1E0C80A78](v11);
  sub_19C57767C();
  sub_19CAA97B8();
  sub_19CAA9D28();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v6);
  v12 = sub_19CAA9D4C();
  *(_QWORD *)(v3 + 16) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244A0);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v3 + 64) = v13;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBBEB8]), sel_init);
  if (v14)
  {
    v15 = v14;
    *(_QWORD *)(v3 + 56) = v14;
    *(_QWORD *)(v3 + 24) = a1;
    *(_QWORD *)(v3 + 32) = v14;
    v16 = objc_allocWithZone(MEMORY[0x1E0CBBEC0]);
    v17 = v15;
    *(_QWORD *)(v3 + 48) = objc_msgSend(v16, sel_initWithDispatchQueue_, v12);
    if (a2)
    {
      swift_unknownObjectRetain();
      v18 = objc_msgSend(a2, sel_newSharedEventWithMachPort_, objc_msgSend(v17, sel_eventPort));

      swift_unknownObjectRelease_n();
    }
    else
    {

      v18 = 0;
    }
    *(_QWORD *)(v3 + 40) = v18;
  }
  else
  {
    if (qword_1EE422E58 != -1)
      swift_once();
    v19 = sub_19CAA97AC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE4317D8);
    v20 = sub_19CAA97A0();
    v21 = sub_19CAA9D1C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_19C486000, v20, v21, "Failed to create shared event.", v22, 2u);
      MEMORY[0x1A1AD7790](v22, -1, -1);
    }

    swift_unknownObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t *sub_19C577424@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v4 = *result + 1;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    *result = v4;
    type metadata accessor for IOSurfaceAsyncEvent();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = v4;
    *a3 = v6;
    return (uint64_t *)swift_unownedRetain();
  }
  return result;
}

uint64_t sub_19C57748C()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSDevice.SharedEvent()
{
  return objc_opt_self();
}

uint64_t sub_19C5774F0()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_19CAAA298();
  sub_19CAAA2A4();
  v2 = *(id *)(v1 + 32);
  sub_19CAA9DC4();

  return sub_19CAAA2C8();
}

void sub_19C57754C()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_19CAAA2A4();
  v2 = *(id *)(v1 + 32);
  sub_19CAA9DC4();

}

uint64_t sub_19C5775A8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_19CAAA298();
  sub_19CAAA2A4();
  v2 = *(id *)(v1 + 32);
  sub_19CAA9DC4();

  return sub_19CAAA2C8();
}

BOOL sub_19C577600(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24)
      && *(_QWORD *)(*(_QWORD *)a1 + 56) == *(_QWORD *)(*(_QWORD *)a2 + 56);
}

unint64_t sub_19C577638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE4243B8;
  if (!qword_1EE4243B8)
  {
    v1 = type metadata accessor for BNNSDevice.SharedEvent();
    result = MEMORY[0x1A1AD76AC](&unk_19CAEC008, v1);
    atomic_store(result, (unint64_t *)&qword_1EE4243B8);
  }
  return result;
}

unint64_t sub_19C57767C()
{
  unint64_t result;

  result = qword_1EE423DE0;
  if (!qword_1EE423DE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE423DE0);
  }
  return result;
}

uint64_t sub_19C5776B8(uint64_t a1, uint64_t a2, char a3)
{
  char v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v25[33];

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = v25;
  v6 = *(_OWORD *)(a1 + 160);
  v7 = *(_OWORD *)(a1 + 176);
  v8 = *(_OWORD *)(a1 + 128);
  v25[7] = *(_OWORD *)(a1 + 144);
  v25[8] = v6;
  v9 = *(_OWORD *)(a1 + 192);
  v25[9] = v7;
  v25[10] = v9;
  v10 = *(_OWORD *)(a1 + 112);
  v25[4] = *(_OWORD *)(a1 + 96);
  v25[5] = v10;
  v25[6] = v8;
  v11 = *(_OWORD *)(a1 + 48);
  v25[0] = *(_OWORD *)(a1 + 32);
  v25[1] = v11;
  v12 = *(_OWORD *)(a1 + 80);
  v25[2] = *(_OWORD *)(a1 + 64);
  v25[3] = v12;
  if (v5 == 1)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);

    __asm { BR              X10 }
  }
  v3 = a3;
  v14 = *(_OWORD *)(a1 + 352);
  v25[19] = *(_OWORD *)(a1 + 336);
  v25[20] = v14;
  v25[21] = *(_OWORD *)(a1 + 368);
  v15 = *(_OWORD *)(a1 + 288);
  v25[15] = *(_OWORD *)(a1 + 272);
  v25[16] = v15;
  v16 = *(_OWORD *)(a1 + 320);
  v25[17] = *(_OWORD *)(a1 + 304);
  v25[18] = v16;
  v17 = *(_OWORD *)(a1 + 224);
  v25[11] = *(_OWORD *)(a1 + 208);
  v25[12] = v17;
  v18 = *(_OWORD *)(a1 + 256);
  v25[13] = *(_OWORD *)(a1 + 240);
  v25[14] = v18;
  sub_19CAA938C();
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_7;
  v19 = *(_OWORD *)(a2 + 176);
  v25[30] = *(_OWORD *)(a2 + 160);
  v25[31] = v19;
  v25[32] = *(_OWORD *)(a2 + 192);
  v20 = *(_OWORD *)(a2 + 112);
  v25[26] = *(_OWORD *)(a2 + 96);
  v25[27] = v20;
  v21 = *(_OWORD *)(a2 + 144);
  v25[28] = *(_OWORD *)(a2 + 128);
  v25[29] = v21;
  v22 = *(_OWORD *)(a2 + 48);
  v25[22] = *(_OWORD *)(a2 + 32);
  v25[23] = v22;
  v23 = *(_OWORD *)(a2 + 80);
  v25[24] = *(_OWORD *)(a2 + 64);
  v25[25] = v23;
  return sub_19CAA94AC();
}

void sub_19C57780C()
{
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  sub_19CAAA0B8();
  __break(1u);
  JUMPOUT(0x19C5779BCLL);
}

uint64_t sub_19C5779D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;
  int v18;
  void *data;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t result;
  uint64_t v41;
  int v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  BNNSNDArrayDescriptor v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  void *v74;
  BNNSDataType data_type;
  void *table_data;
  BNNSDataType table_data_type;
  uint64_t v78;
  int v79;
  float v80;
  char v81;
  uint64_t v82;

  v82 = *MEMORY[0x1E0C80C00];
  v7 = sub_19CAAA1B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = (void *)MEMORY[0x1A1AD4EF8](0, *(_QWORD *)(a3 + 24), 0);
  v11 = *(_QWORD *)(a2 + 16);
  if (!v11)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)&v49.stride[7] = *(_OWORD *)(a2 + 160);
  *(_OWORD *)&v49.data_type = v12;
  *(_OWORD *)&v49.table_data_type = *(_OWORD *)(a2 + 192);
  v13 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)&v49.size[7] = *(_OWORD *)(a2 + 96);
  *(_OWORD *)&v49.stride[1] = v13;
  v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)&v49.stride[3] = *(_OWORD *)(a2 + 128);
  *(_OWORD *)&v49.stride[5] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)&v49.flags = *(_OWORD *)(a2 + 32);
  *(_OWORD *)&v49.size[1] = v15;
  v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)&v49.size[3] = *(_OWORD *)(a2 + 64);
  *(_OWORD *)&v49.size[5] = v16;
  sub_19C50E8D4((uint64_t *)a3, (uint64_t)&v50);
  sub_19C50E8D4(&v50, (uint64_t)&v79);
  if (v81)
  {
    if (v81 == 1)
    {
      v17 = BNNSRandomFillUniformFloat(v47, &v49, *(float *)&v79, v80);
    }
    else
    {
      if (__OFADD__(LODWORD(v80), 1))
        goto LABEL_27;
      v17 = BNNSRandomFillUniformInt(v47, &v49, v79, LODWORD(v80) + 1);
    }
  }
  else
  {
    v17 = BNNSRandomFillNormalFloat(v47, &v49, *(float *)&v79, v80);
  }
  if (!v17)
  {
    v18 = *(unsigned __int8 *)(a3 + 32);
    if (v18 == a4)
      return MEMORY[0x1A1AD4F04](v47);
    v43 = v10;
    v44 = a4;
    v45 = v8;
    v46 = v7;
    data = v49.data;
    if (v49.data)
    {
      if (v11 < 2)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
      }
      v20 = *(_QWORD *)(a2 + 344);
      if (v20)
      {
        v42 = *(unsigned __int8 *)(a3 + 33);
        v65 = *(_QWORD *)&v49.flags;
        v66 = *(_OWORD *)v49.size;
        v67 = *(_OWORD *)&v49.size[2];
        v68 = *(_OWORD *)&v49.size[4];
        v69 = *(_OWORD *)&v49.size[6];
        v70 = *(_OWORD *)v49.stride;
        v71 = *(_OWORD *)&v49.stride[2];
        v72 = *(_OWORD *)&v49.stride[4];
        v73 = *(_OWORD *)&v49.stride[6];
        v74 = v49.data;
        data_type = v49.data_type;
        table_data = v49.table_data;
        table_data_type = v49.table_data_type;
        v78 = *(_QWORD *)&v49.data_scale;
        v41 = sub_19CAA9D94();
        v51 = *(_QWORD *)(a2 + 208);
        v21 = *(_OWORD *)(a2 + 232);
        v52 = *(_OWORD *)(a2 + 216);
        v53 = v21;
        v54 = *(_OWORD *)(a2 + 248);
        v22 = *(_OWORD *)(a2 + 280);
        v55 = *(_OWORD *)(a2 + 264);
        v56 = v22;
        v23 = *(_OWORD *)(a2 + 312);
        v57 = *(_OWORD *)(a2 + 296);
        v24 = *(_DWORD *)(a2 + 352);
        v25 = *(_QWORD *)(a2 + 360);
        v26 = *(_DWORD *)(a2 + 368);
        v58 = v23;
        v59 = *(_OWORD *)(a2 + 328);
        v60 = v20;
        v61 = v24;
        v62 = v25;
        v63 = v26;
        v64 = *(_QWORD *)(a2 + 372);
        v27 = sub_19CAA9D94();
        v28 = *(_QWORD *)(a3 + 16);
        v29 = *(_QWORD *)(v28 + 16);
        if (v29)
        {
          v30 = (uint64_t *)(v28 + 32);
          v31 = 1;
          while (1)
          {
            v32 = *v30++;
            v33 = v31 * v32;
            if ((unsigned __int128)(v31 * (__int128)v32) >> 64 != (v31 * v32) >> 63)
              break;
            v31 = v33;
            if (!--v29)
              goto LABEL_19;
          }
          __break(1u);
          goto LABEL_25;
        }
        v33 = 1;
LABEL_19:
        v34 = (uint64_t)data + v41;
        v35 = v20 + v27;
        v37 = v45;
        v36 = v46;
        v38 = (uint64_t)v43;
        (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v43, *MEMORY[0x1E0DED4D8], v46);
        if (v42)
          v39 = 256;
        else
          v39 = 0;
        sub_19C593E88((uint64_t)data, v34, v44 & 0x1FF, v20, v35, v39 | v18, v33, v38);
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v36);
        return MEMORY[0x1A1AD4F04](v47);
      }
    }
  }
  sub_19C50E8D4(&v50, (uint64_t)&v51);
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v65 = 0;
    *(_QWORD *)&v66 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    v48 = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C577ED0(uint64_t a1)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *inited;
  uint64_t v26;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[12];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v29 = *(unsigned __int8 *)(a1 + 33);
  sub_19C50E8D4((uint64_t *)a1, (uint64_t)&v32);
  sub_19C50E8D4(&v32, (uint64_t)v33);
  if (v33[8] == 2)
    v4 = 7;
  else
    v4 = 10;
  v5 = swift_bridgeObjectRetain();
  v6 = (void *)MEMORY[0x1A1AD6338](v5);
  if (qword_1EE422E98 != -1)
    swift_once();
  v7 = (uint64_t *)(qword_1EE4243D0 + 16);
  v8 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
  sub_19C5782F8(v7, v2, v4, 0, 1, &v31);
  os_unfair_lock_unlock(v8);
  v9 = v31;
  objc_autoreleasePoolPop(v6);
  type metadata accessor for IOSurfaceStorage();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 32) = v4;
  *(_BYTE *)(v10 + 33) = 0;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = 0;
  v11 = v10 | 0x4000000000000000;
  *(_QWORD *)(v10 + 56) = sub_19C569CE8;
  *(_QWORD *)(v10 + 64) = 0;
  v30 = v4;
  if (v3 == (_DWORD)v4)
  {
    swift_retain();
    v12 = v11;
    v13 = v11;
  }
  else
  {
    v28 = v10 | 0x4000000000000000;
    v14 = swift_bridgeObjectRetain();
    v15 = (void *)MEMORY[0x1A1AD6338](v14);
    os_unfair_lock_lock(v8);
    if (v29)
      v16 = 256;
    else
      v16 = 0;
    sub_19C5782F8(v7, v2, v16 | v3, 0, 1, &v31);
    os_unfair_lock_unlock(v8);
    v17 = v31;
    objc_autoreleasePoolPop(v15);
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 32) = v3;
    *(_BYTE *)(v18 + 33) = v29;
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = v2;
    *(_QWORD *)(v18 + 40) = 0;
    *(_QWORD *)(v18 + 48) = 0;
    v12 = v18 | 0x4000000000000000;
    *(_QWORD *)(v18 + 56) = sub_19C569CE8;
    *(_QWORD *)(v18 + 64) = 0;
    v13 = v28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F0);
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8) - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_19CAE8310;
  *(_QWORD *)(v22 + v21) = v13;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_19C5743BC(v2);
  *(_QWORD *)(v22 + v21 + v20) = v12;
  swift_retain();
  sub_19C5743BC(v2);
  v23 = swift_allocObject();
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(v23 + 72) = v30;
  *(_BYTE *)(v23 + 73) = 0;
  type metadata accessor for BNNSComputeStream.ComputeFunction();
  inited = (_QWORD *)swift_initStackObject();
  v26 = MEMORY[0x1E0DEE9D8];
  inited[2] = MEMORY[0x1E0DEE9D8];
  inited[3] = v22;
  inited[4] = v26;
  inited[5] = 0;
  inited[6] = sub_19C578238;
  inited[7] = v23;
  sub_19C532288(a1);
  sub_19C56D0E0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

uint64_t sub_19C57820C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C578238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 73))
    v3 = 256;
  else
    v3 = 0;
  return sub_19C5779D8(a1, a2, v2 + 16, v3 | *(unsigned __int8 *)(v2 + 72));
}

uint64_t sub_19C578258()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for IOSurfaceAllocator();
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 16;
  v0[11] = 0;
  v1 = (uint64_t *)sub_19CAA96F8();
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = *v1;
  v0[3] = 0;
  v0[4] = v2;
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = 100;
  v0[8] = sub_19C5782E8;
  v0[9] = 0;
  v0[10] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4243E0);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v0;
  qword_1EE4243D0 = v4;
  return swift_retain();
}

uint64_t sub_19C5782E8(IOSurfaceRef *a1)
{
  return IOSurfaceSetPurgeable(*a1, 1u, 0);
}

uint64_t sub_19C5782F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_signpost_type_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  uint8_t *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  void (*v52)(uint64_t *__return_ptr, uint64_t *);
  int64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int64_t AllocSize;
  int64_t v74;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  float v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t **, uint64_t);
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __IOSurface *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(__IOSurface **);
  size_t v113;
  uint64_t v114;
  size_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t inited;
  void *v133;
  uint64_t v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  uint64_t v139;
  void *v140;
  void **v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  const __CFDictionary *v150;
  IOSurfaceRef v151;
  NSObject *v152;
  char *v153;
  os_signpost_type_t v154;
  char v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  const char *v159;
  void (*v160)(char *, char *, uint64_t);
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint8_t *v165;
  os_signpost_id_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t result;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD v176[2];
  _QWORD *v177;
  char *v178;
  char *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  void (*v192)(char *, char *, uint64_t);
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  __IOSurface *v210;
  uint64_t v211[3];
  uint64_t v212;

  v195 = a5;
  v190 = a6;
  v191 = a4;
  v193 = a2;
  v196 = a1;
  v7 = sub_19CAA9764();
  v185 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v184 = (char *)v176 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v178 = (char *)v176 - v10;
  v198 = sub_19CAA9740();
  v11 = *(_QWORD *)(v198 - 8);
  v12 = MEMORY[0x1E0C80A78](v198);
  v183 = (char *)v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v179 = (char *)v176 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v197 = (char *)v176 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v176 - v18;
  if (qword_1EE422E60 != -1)
    goto LABEL_220;
  while (1)
  {
    v20 = sub_19CAA9758();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EE4317F0);
    sub_19CAA9734();
    v189 = v21;
    v22 = sub_19CAA974C();
    v23 = sub_19CAA9D64();
    v24 = sub_19CAA9DDC();
    v186 = v7;
    v180 = (_QWORD *)a3;
    if ((v24 & 1) != 0)
    {
      v192 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      v25 = v197;
      v26 = v198;
      v192(v197, v19, v198);
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      v28 = sub_19CAA9728();
      _os_signpost_emit_with_name_impl(&dword_19C486000, v22, v23, v28, "CPU :: Storage allocation", "", v27, 2u);
      v29 = v27;
      v7 = v26;
      MEMORY[0x1A1AD7790](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v26);
      v30 = v192;
      a3 = (uint64_t)v180;
    }
    else
    {

      v30 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      v25 = v197;
      v7 = v198;
    }
    v192 = v30;
    v30(v25, v19, v7);
    sub_19CAA9788();
    swift_allocObject();
    v31 = 1;
    v32 = sub_19CAA977C();
    v188 = *(void (**)(char *, uint64_t))(v11 + 8);
    v188(v19, v7);
    v33 = (_QWORD *)*v196;
    v34 = *(_QWORD *)(v193 + 16);
    if (v34)
    {
      v35 = (uint64_t *)(v193 + 32);
      v36 = 1;
      v37 = *(_QWORD *)(v193 + 16);
      do
      {
        v38 = *v35++;
        v31 = v36 * v38;
        if ((unsigned __int128)(v36 * (__int128)v38) >> 64 != (v36 * v38) >> 63)
        {
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
          goto LABEL_196;
        }
        v36 = v31;
        --v37;
      }
      while (v37);
    }
    if (a3 > 0xAu)
      v39 = 8;
    else
      v39 = qword_19CAEC108[(char)a3];
    v40 = v31 * v39;
    if ((unsigned __int128)(v31 * (__int128)v39) >> 64 != (v31 * v39) >> 63)
    {
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
      goto LABEL_226;
    }
    v212 = v31 * v39;
    v187 = v32;
    v181 = v39;
    v182 = v34;
    if ((v195 & 1) == 0)
    {
      if (!v191)
        goto LABEL_223;
      if (v191 == -1 && v40 == 0x8000000000000000)
        goto LABEL_229;
      v41 = v40 % v191;
      if (!(v40 % v191))
        goto LABEL_27;
      v42 = v40 + v191;
      if (__OFADD__(v40, v191))
        goto LABEL_225;
      v40 = v42 - v41;
      if (!__OFSUB__(v42, v41))
        goto LABEL_27;
      __break(1u);
    }
    v43 = getpagesize();
    if (v40 > v43)
    {
      if (!v43)
        goto LABEL_228;
      v44 = v40 % v43;
      if (v44)
      {
        v45 = v40 + v43;
        if (__OFADD__(v40, v43))
          goto LABEL_232;
        v40 = v45 - v44;
        if (__OFSUB__(v45, v44))
          goto LABEL_233;
      }
LABEL_27:
      v212 = v40;
    }
    v176[1] = v33 + 3;
    swift_beginAccess();
    v46 = v33[3];
    v11 = v33[4];
    v177 = v33;
    v47 = v33[5];
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = v40;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = sub_19C530E9C;
    *(_QWORD *)(v49 + 24) = v48;
    a3 = swift_allocObject();
    *(_QWORD *)(a3 + 16) = sub_19C530ED4;
    *(_QWORD *)(a3 + 24) = v49;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_beginAccess();
    v19 = 0;
    v200 = (uint64_t *)(v46 + 16);
    v201 = (_QWORD *)(v11 + 32);
    v199 = v46 + 32;
    v205 = v46;
    v206 = (_QWORD *)(v11 + 40);
    v203 = v47 + 32;
    v204 = v47;
    v194 = v11 + 64;
    v50 = -1;
LABEL_29:
    v51 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
      goto LABEL_217;
    }
    v19 = *(char **)(v11 + 16);
    if (v51 >= (uint64_t)v19)
      goto LABEL_97;
    while (1)
    {
      if (v51 < 0)
        goto LABEL_194;
      v7 = v50 + 1;
      if (v50 + 1 >= *(_QWORD *)(v11 + 16))
        goto LABEL_195;
      v52 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(a3 + 16);
      v207 = v206[v50];
      v52(v211, &v207);
      if ((v211[0] & 1) != 0)
        break;
      v53 = v50 + 2;
      if (__OFADD__(v7, 1))
        goto LABEL_197;
      ++v50;
      if (v53 >= (uint64_t)v19)
        goto LABEL_97;
    }
    if ((uint64_t)++v50 >= (uint64_t)v19)
      goto LABEL_97;
    v54 = *(_QWORD *)(v11 + 16);
    if (v50 >= v54)
      goto LABEL_215;
    v55 = v201;
    v56 = v201[v50];
    if (!v205)
      break;
    v57 = sub_19C52F874(v56, (uint64_t)v201, v54, v200);
    if ((v58 & 1) != 0)
      goto LABEL_97;
    v55 = v201;
    if ((v57 & 0x8000000000000000) == 0)
      goto LABEL_59;
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    swift_once();
  }
  if (*v201 == v56)
  {
    v57 = 0;
  }
  else
  {
    if (v54 == 1)
      goto LABEL_97;
    if (*v206 == v56)
    {
      v57 = 1;
      v55 = v201;
    }
    else
    {
      if (v54 == 2)
        goto LABEL_97;
      if (*(_QWORD *)(v11 + 48) == v56)
      {
        v57 = 2;
        v55 = v201;
      }
      else
      {
        if (v54 == 3)
          goto LABEL_97;
        if (*(_QWORD *)(v11 + 56) == v56)
        {
          v57 = 3;
          v55 = v201;
        }
        else
        {
          v59 = 0;
          do
          {
            if (v54 - 4 == v59)
              goto LABEL_97;
            v60 = *(_QWORD *)(v194 + 8 * v59++);
          }
          while (v60 != v56);
          v57 = v59 + 3;
          v55 = v201;
          if (v59 + 3 < 0)
            goto LABEL_217;
        }
      }
    }
  }
LABEL_59:
  if (v57 >= *(_QWORD *)(v204 + 16))
    goto LABEL_216;
  v61 = 0;
  v19 = *(char **)(*(_QWORD *)(v203 + 8 * v57) + 24);
  if ((v50 & 0x8000000000000000) != 0)
    goto LABEL_203;
  while (1)
  {
    v62 = *(_QWORD *)(v11 + 16);
    if (v50 >= v62)
      goto LABEL_204;
    v63 = v55[v50];
    if (v205)
    {
      v64 = sub_19C52F874(v55[v50], (uint64_t)v55, v62, v200);
      if ((v65 & 1) != 0)
        goto LABEL_97;
      if ((v64 & 0x8000000000000000) != 0)
        goto LABEL_209;
    }
    else if (*v55 == v63)
    {
      v64 = 0;
    }
    else
    {
      if (v62 == 1)
        goto LABEL_97;
      if (*v206 == v63)
      {
        v64 = 1;
      }
      else
      {
        if (v62 == 2)
          goto LABEL_97;
        if (*(_QWORD *)(v11 + 48) == v63)
        {
          v64 = 2;
        }
        else
        {
          if (v62 == 3)
            goto LABEL_97;
          if (*(_QWORD *)(v11 + 56) == v63)
          {
            v64 = 3;
          }
          else
          {
            v66 = 0;
            do
            {
              if (v62 - 4 == v66)
                goto LABEL_96;
              v67 = *(_QWORD *)(v194 + 8 * v66++);
            }
            while (v67 != v63);
            v64 = v66 + 3;
            if (v66 + 3 < 0)
              goto LABEL_209;
          }
        }
      }
    }
    if (v64 >= *(_QWORD *)(v204 + 16))
      goto LABEL_208;
    v68 = *(_QWORD **)(v203 + 8 * v64);
    if (v61 >= v68[3])
      break;
    if (v61 < 0)
      goto LABEL_210;
    v69 = v63;
    v70 = v19;
    v71 = v68[4] + v61;
    v72 = v68[2];
    if (v71 < v72)
      v72 = 0;
    v7 = (uint64_t)(id)v68[v71 - v72 + 5];
    AllocSize = IOSurfaceGetAllocSize((IOSurfaceRef)v7);
    if (v212 + 0x4000000000000000 < 0)
    {
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
      goto LABEL_214;
    }
    if (2 * v212 < v212)
      goto LABEL_212;
    v74 = AllocSize;
    if (AllocSize >= v212 && AllocSize < 2 * v212)
    {
      swift_beginAccess();
      v169 = (void *)sub_19C52E450(v69, v61);
      swift_endAccess();
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();

      v170 = v177[11];
      v78 = __OFSUB__(v170, v74);
      v171 = v170 - v74;
      if (!v78)
      {
        v177[11] = v171;
        *v190 = v7;
        v152 = sub_19CAA974C();
        v163 = v179;
        sub_19CAA9770();
        v154 = sub_19CAA9D58();
        v172 = sub_19CAA9DDC();
        v156 = v197;
        v173 = v178;
        if ((v172 & 1) != 0)
        {
          swift_retain();
          sub_19CAA9794();
          swift_release();
          v175 = v185;
          v174 = v186;
          if ((*(unsigned int (**)(char *, uint64_t))(v185 + 88))(v173, v186) == *MEMORY[0x1E0DF2190])
          {
            v159 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v175 + 8))(v173, v174);
            v159 = "";
          }
          v160 = v192;
          v161 = v156;
          v162 = v163;
LABEL_183:
          v164 = v198;
          v160(v161, v162, v198);
          v165 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v165 = 0;
          v166 = sub_19CAA9728();
          _os_signpost_emit_with_name_impl(&dword_19C486000, v152, v154, v166, "CPU :: Storage allocation", v159, v165, 2u);
          MEMORY[0x1A1AD7790](v165, -1, -1);

          v167 = v188;
          v188(v163, v164);
          v167(v156, v164);
        }
        else
        {

          v188(v163, v198);
        }
        return swift_release();
      }
LABEL_236:
      __break(1u);
LABEL_237:
      v207 = 0;
      v208 = 0xE000000000000000;
      sub_19CAA9F2C();
      sub_19CAA992C();
      MEMORY[0x1A1AD452C](v193, MEMORY[0x1E0DEB418]);
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      sub_19C59EBA4(v180);
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      sub_19CAA9F44();
      if (qword_1EE422E38 != -1)
        swift_once();
      if (byte_1EE4317C9 == 1)
      {
        v207 = 0;
        v208 = 0xE000000000000000;
        sub_19CAA9F2C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
        sub_19CAA992C();
      }
      result = sub_19CAAA0B8();
      __break(1u);
      return result;
    }
    ++v61;

    v19 = v70;
    if (v61 >= (uint64_t)v70)
      goto LABEL_29;
    v55 = v201;
    if ((v50 & 0x8000000000000000) != 0)
      goto LABEL_203;
  }
LABEL_96:
  if (v61 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
    goto LABEL_234;
  }
LABEL_97:
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  a3 = *v196;
  v19 = (char *)(*v196 + 24);
  v76 = swift_beginAccess();
  v77 = *(_QWORD *)(a3 + 56);
  v78 = __OFSUB__(v77, 1);
  v79 = v77 - 1;
  if (v78)
    goto LABEL_198;
  v80 = (_QWORD *)(a3 + 48);
  v7 = 1064514355;
  while (2)
  {
    if (*(_QWORD *)(a3 + 80) >= v79)
      goto LABEL_105;
    v81 = MEMORY[0x1A1AD7250](v76);
    if (v81 >= 1)
    {
      v82 = (float)v81 * 0.95;
      if ((~LODWORD(v82) & 0x7F800000) == 0)
        goto LABEL_205;
      if (v82 <= -9.2234e18)
        goto LABEL_206;
      if (v82 >= 9.2234e18)
        goto LABEL_207;
      if (*(_QWORD *)(a3 + 88) >= (uint64_t)v82)
      {
LABEL_105:
        swift_beginAccess();
        if (*(uint64_t *)(*v80 + 24) < 1)
          goto LABEL_154;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_19C551690();
        v83 = (_QWORD *)*v80;
        v84 = *(_QWORD *)(*v80 + 24);
        v78 = __OFSUB__(v84, 1);
        v85 = v84 - 1;
        if (v78)
          goto LABEL_199;
        v86 = v83[4] + v85;
        v87 = v83[2];
        if (v86 < v87)
          v87 = 0;
        v88 = v83[v86 - v87 + 5];
        v83[3] = v85;
        v209 = v88;
        v90 = sub_19C52F0BC(&v207, v88);
        if (!*(_QWORD *)v89 || *(uint64_t *)(*(_QWORD *)v89 + 24) <= 0)
          goto LABEL_153;
        v91 = v89;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_19C5516CC();
        v92 = *(_QWORD **)v91;
        v93 = *(_QWORD *)(*(_QWORD *)v91 + 24);
        v78 = __OFSUB__(v93, 1);
        v94 = v93 - 1;
        if (v78)
          goto LABEL_200;
        v95 = v92[4] + v94;
        v96 = v92[2];
        if (v95 < v96)
          v96 = 0;
        v97 = (__IOSurface *)v92[v95 - v96 + 5];
        v92[3] = v94;
        v90((uint64_t **)&v207, 0);
        v99 = *(_QWORD *)(a3 + 24);
        v98 = *(_QWORD **)(a3 + 32);
        v100 = *(_QWORD *)(a3 + 40);
        v101 = v98 + 4;
        v102 = v98[2];
        if (v99)
        {
          v103 = sub_19C52F874(v209, (uint64_t)v101, v102, (uint64_t *)(v99 + 16));
          if ((v104 & 1) == 0)
          {
            if ((v103 & 0x8000000000000000) != 0)
            {
LABEL_152:
              __break(1u);
LABEL_153:
              v90((uint64_t **)&v207, 0);
LABEL_154:
              swift_endAccess();
              break;
            }
LABEL_125:
            if (v103 >= *(_QWORD *)(v100 + 16))
              goto LABEL_213;
            if (!*(_QWORD *)(*(_QWORD *)(v100 + 8 * v103 + 32) + 24))
            {
              v7 = (uint64_t)v19;
              v19 = (char *)v176;
              MEMORY[0x1E0C80A78](v103);
              v105 = v80;
              v106 = v202;
              v107 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530F40);
              v202 = v106;
              v108 = *(_QWORD *)(*v80 + 24);
              if (v108 < v107)
                goto LABEL_218;
              if (v107 < 0)
                goto LABEL_219;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                sub_19C551690();
              v109 = v108;
              v80 = v105;
              sub_19C52FCE8((char *)v107, v109, (uint64_t *)(*v105 + 16), (char *)(*v105 + 40));
              v19 = (char *)v7;
              v7 = 1064514355;
            }
          }
        }
        else if (v102)
        {
          if (*v101 == v209)
          {
            v103 = 0;
            goto LABEL_125;
          }
          if (v102 != 1)
          {
            if (v98[5] == v209)
            {
              v103 = 1;
              goto LABEL_125;
            }
            if (v102 != 2)
            {
              if (v98[6] == v209)
              {
                v103 = 2;
                goto LABEL_125;
              }
              if (v102 != 3)
              {
                if (v98[7] == v209)
                {
                  v103 = 3;
                  goto LABEL_125;
                }
                v117 = 0;
                v118 = v98 + 8;
                while (v102 - 4 != v117)
                {
                  v119 = v118[v117++];
                  if (v119 == v209)
                  {
                    v103 = v117 + 3;
                    if (((v117 + 3) & 0x8000000000000000) == 0)
                      goto LABEL_125;
                    goto LABEL_152;
                  }
                }
              }
            }
          }
        }
        v110 = *(_QWORD *)(a3 + 80);
        v78 = __OFSUB__(v110, 1);
        v111 = v110 - 1;
        if (v78)
          goto LABEL_201;
        *(_QWORD *)(a3 + 80) = v111;
        v210 = v97;
        v112 = *(void (**)(__IOSurface **))(a3 + 64);
        if (v112)
        {
          swift_retain();
          v112(&v210);
          sub_19C530F14((uint64_t)v112);
        }
        swift_endAccess();
        v113 = IOSurfaceGetAllocSize(v97);

        v114 = *(_QWORD *)(a3 + 88);
        v78 = __OFSUB__(v114, v113);
        v115 = v114 - v113;
        if (v78)
          goto LABEL_202;
        *(_QWORD *)(a3 + 88) = v115;
        v116 = *(_QWORD *)(a3 + 56);
        v78 = __OFSUB__(v116, 1);
        v79 = v116 - 1;
        if (v78)
          goto LABEL_198;
        continue;
      }
    }
    break;
  }
  v120 = v182;
  if (v182)
  {
    v121 = (uint64_t *)(v193 + 32);
    v122 = 1;
    v123 = v202;
    a3 = (uint64_t)v184;
    while (1)
    {
      v124 = *v121++;
      v125 = v122 * v124;
      if ((unsigned __int128)(v122 * (__int128)v124) >> 64 != (v122 * v124) >> 63)
        break;
      v122 = v125;
      if (!--v120)
        goto LABEL_161;
    }
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
    goto LABEL_211;
  }
  v125 = 1;
  v123 = v202;
  a3 = (uint64_t)v184;
LABEL_161:
  v126 = v125 * v181;
  if ((unsigned __int128)(v125 * (__int128)v181) >> 64 != (v125 * v181) >> 63)
    goto LABEL_222;
  if ((v195 & 1) != 0)
    goto LABEL_171;
  if (!v191)
    goto LABEL_224;
  if (v191 == -1 && v126 == 0x8000000000000000)
    goto LABEL_231;
  v127 = v126 % v191;
  if (!(v126 % v191))
    goto LABEL_176;
  v128 = v126 + v191;
  if (__OFADD__(v126, v191))
    goto LABEL_227;
  v126 = v128 - v127;
  if (__OFSUB__(v128, v127))
  {
    __break(1u);
LABEL_171:
    v129 = getpagesize();
    if (v126 <= v129)
      goto LABEL_176;
    if (v129)
    {
      v130 = v126 % v129;
      if (!v130)
        goto LABEL_176;
      v131 = v126 + v129;
      if (!__OFADD__(v126, v129))
      {
        v126 = v131 - v130;
        if (!__OFSUB__(v131, v130))
          goto LABEL_176;
        goto LABEL_235;
      }
LABEL_234:
      __break(1u);
LABEL_235:
      __break(1u);
      goto LABEL_236;
    }
    goto LABEL_230;
  }
LABEL_176:
  v202 = v123;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4243D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19CAEC0C0;
  v133 = (void *)*MEMORY[0x1E0CBC1E0];
  v134 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBC1E0];
  *(_QWORD *)(inited + 40) = v126;
  v135 = (void *)*MEMORY[0x1E0CBC008];
  *(_QWORD *)(inited + 64) = v134;
  *(_QWORD *)(inited + 72) = v135;
  *(_QWORD *)(inited + 80) = 1;
  v136 = (void *)*MEMORY[0x1E0CBBF00];
  *(_QWORD *)(inited + 104) = v134;
  *(_QWORD *)(inited + 112) = v136;
  *(_QWORD *)(inited + 120) = 1;
  v137 = (void *)*MEMORY[0x1E0CBBF08];
  *(_QWORD *)(inited + 144) = v134;
  *(_QWORD *)(inited + 152) = v137;
  *(_QWORD *)(inited + 160) = v126;
  v138 = (void *)*MEMORY[0x1E0CBBEE0];
  *(_QWORD *)(inited + 184) = v134;
  *(_QWORD *)(inited + 192) = v138;
  *(_QWORD *)(inited + 200) = v126;
  v139 = MEMORY[0x1E0DEE0F8];
  v140 = (void *)*MEMORY[0x1E0CBC070];
  *(_DWORD *)(inited + 240) = 1278226488;
  v141 = (void **)MEMORY[0x1E0CBC058];
  *(_QWORD *)(inited + 224) = v134;
  *(_QWORD *)(inited + 232) = v140;
  v142 = *v141;
  *(_QWORD *)(inited + 264) = v139;
  *(_QWORD *)(inited + 272) = v142;
  *(_QWORD *)(inited + 304) = v134;
  *(_QWORD *)(inited + 280) = 0;
  v143 = v133;
  v144 = v135;
  v145 = v136;
  v146 = v137;
  v147 = v138;
  v148 = v140;
  v149 = v142;
  sub_19C53B264(inited);
  type metadata accessor for CFString(0);
  sub_19C579E48();
  v150 = (const __CFDictionary *)sub_19CAA97F4();
  swift_bridgeObjectRelease();
  v151 = IOSurfaceCreate(v150);

  if (!v151)
    goto LABEL_237;
  *v190 = v151;
  v152 = sub_19CAA974C();
  v153 = v183;
  sub_19CAA9770();
  v154 = sub_19CAA9D58();
  v155 = sub_19CAA9DDC();
  v156 = v197;
  v158 = v185;
  v157 = v186;
  if ((v155 & 1) != 0)
  {
    swift_retain();
    sub_19CAA9794();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v158 + 88))(a3, v157) == *MEMORY[0x1E0DF2190])
    {
      v159 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(a3, v157);
      v159 = "";
    }
    v160 = v192;
    v161 = v156;
    v162 = v153;
    v163 = v153;
    goto LABEL_183;
  }

  v188(v153, v198);
  return swift_release();
}

uint64_t sub_19C57958C(uint64_t a1, __IOSurface *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint8_t *v18;
  char *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint8_t *v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  NSObject *v25;
  char v26;
  char *v27;
  uint64_t v28;
  const char *v29;
  char *v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __IOSurface *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);

  v38 = a1;
  v39 = a2;
  v2 = sub_19CAA9764();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v40 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_19CAA9740();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  if (qword_1EE422E60 != -1)
    swift_once();
  v14 = sub_19CAA9758();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE4317F0);
  sub_19CAA9734();
  v37 = v15;
  v16 = sub_19CAA974C();
  v17 = sub_19CAA9D64();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v41 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v41(v11, v13, v4);
    v18 = (uint8_t *)swift_slowAlloc();
    v35 = v2;
    v19 = v8;
    v20 = v18;
    *(_WORD *)v18 = 0;
    v21 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v16, v17, v21, "CPU :: Storage recycle", "", v20, 2u);
    v22 = v20;
    v8 = v19;
    v2 = v35;
    MEMORY[0x1A1AD7790](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    v23 = v41;
  }
  else
  {

    v23 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  }
  v41 = v23;
  v23(v11, v13, v4);
  sub_19CAA9788();
  swift_allocObject();
  sub_19CAA977C();
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v13, v4);
  sub_19C579928(v39);
  v25 = sub_19CAA974C();
  sub_19CAA9770();
  LODWORD(v39) = sub_19CAA9D58();
  v26 = sub_19CAA9DDC();
  v27 = v40;
  if ((v26 & 1) != 0)
  {
    swift_retain();
    sub_19CAA9794();
    swift_release();
    v28 = v36;
    if ((*(unsigned int (**)(char *, uint64_t))(v36 + 88))(v27, v2) == *MEMORY[0x1E0DF2190])
    {
      v29 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v2);
      v29 = "";
    }
    v41(v11, v8, v4);
    v30 = v8;
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    v32 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v25, (os_signpost_type_t)v39, v32, "CPU :: Storage recycle", v29, v31, 2u);
    MEMORY[0x1A1AD7790](v31, -1, -1);

    v24(v30, v4);
  }
  else
  {

    v11 = v8;
  }
  v24(v11, v4);
  return swift_release();
}

void sub_19C579928(__IOSurface *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t AllocSize;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  float v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __IOSurface *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(__IOSurface **);
  size_t v45;
  uint64_t v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __IOSurface *v52;
  _QWORD v53[4];
  uint64_t v54;
  __IOSurface *v55;

  v3 = v1;
  AllocSize = IOSurfaceGetAllocSize(a1);
  v6 = AllocSize;
  if (AllocSize <= 0)
    v7 = -(-AllocSize & 0xF);
  else
    v7 = AllocSize & 0xF;
  v52 = a1;
  if (v7)
  {
    v8 = AllocSize + 16;
    if (__OFADD__(AllocSize, 16))
      goto LABEL_80;
    v9 = __OFSUB__(v8, v7);
    v10 = v8 - v7;
    if (v9)
    {
LABEL_81:
      __break(1u);
      return;
    }
    v51 = v10;
  }
  else
  {
    v51 = AllocSize;
  }
  v11 = swift_beginAccess();
  v12 = v3[7];
  v9 = __OFSUB__(v12, 1);
  v13 = v12 - 1;
  if (!v9)
  {
    v14 = v3 + 6;
    do
    {
      if (v3[10] < v13)
      {
        v15 = MEMORY[0x1A1AD7250](v11);
        if (v15 < 1)
          goto LABEL_66;
        v16 = (float)v15 * 0.95;
        if ((~LODWORD(v16) & 0x7F800000) == 0)
          goto LABEL_72;
        if (v16 <= -9.2234e18)
          goto LABEL_73;
        if (v16 >= 9.2234e18)
          goto LABEL_74;
        if (v3[11] < (uint64_t)v16)
          goto LABEL_66;
      }
      swift_beginAccess();
      if (*(uint64_t *)(*v14 + 24) < 1)
        goto LABEL_65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_19C551690();
      v17 = (_QWORD *)*v14;
      v18 = *(_QWORD *)(*v14 + 24);
      v9 = __OFSUB__(v18, 1);
      v19 = v18 - 1;
      if (v9)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      v20 = v17[4] + v19;
      v21 = v17[2];
      if (v20 < v21)
        v21 = 0;
      v22 = v17[v20 - v21 + 5];
      v17[3] = v19;
      v54 = v22;
      v2 = (uint64_t)sub_19C52F0BC(v53, v22);
      if (!*(_QWORD *)v23 || *(uint64_t *)(*(_QWORD *)v23 + 24) <= 0)
        goto LABEL_64;
      v24 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_19C5516CC();
      v25 = *(_QWORD **)v24;
      v26 = *(_QWORD *)(*(_QWORD *)v24 + 24);
      v9 = __OFSUB__(v26, 1);
      v27 = v26 - 1;
      if (v9)
        goto LABEL_69;
      v28 = v25[4] + v27;
      v29 = v25[2];
      if (v28 < v29)
        v29 = 0;
      v30 = (__IOSurface *)v25[v28 - v29 + 5];
      v25[3] = v27;
      ((void (*)(_QWORD *, _QWORD))v2)(v53, 0);
      v32 = v3[3];
      v31 = (_QWORD *)v3[4];
      v33 = v3[5];
      v34 = v31 + 4;
      v35 = v31[2];
      if (v32)
      {
        v36 = sub_19C52F874(v54, (uint64_t)v34, v35, (uint64_t *)(v32 + 16));
        if ((v37 & 1) != 0)
          goto LABEL_57;
        if ((v36 & 0x8000000000000000) != 0)
          goto LABEL_75;
      }
      else
      {
        if (!v35)
          goto LABEL_57;
        if (*v34 == v54)
        {
          v36 = 0;
        }
        else
        {
          if (v35 == 1)
            goto LABEL_57;
          if (v31[5] == v54)
          {
            v36 = 1;
          }
          else
          {
            if (v35 == 2)
              goto LABEL_57;
            if (v31[6] == v54)
            {
              v36 = 2;
            }
            else
            {
              if (v35 == 3)
                goto LABEL_57;
              if (v31[7] != v54)
              {
                v38 = 0;
                v39 = v31 + 8;
                while (v35 - 4 != v38)
                {
                  v40 = v39[v38++];
                  if (v40 == v54)
                  {
                    v36 = v38 + 3;
                    if (v38 + 3 < 0)
                      goto LABEL_75;
                    goto LABEL_50;
                  }
                }
                goto LABEL_57;
              }
              v36 = 3;
            }
          }
        }
      }
LABEL_50:
      if (v36 >= *(_QWORD *)(v33 + 16))
        goto LABEL_76;
      if (!*(_QWORD *)(*(_QWORD *)(v33 + 8 * v36 + 32) + 24))
      {
        MEMORY[0x1E0C80A78](v36);
        v2 = sub_19C52F180((uint64_t (*)(uint64_t *))sub_19C530C6C);
        v41 = *(_QWORD *)(*v14 + 24);
        if (v41 < v2)
          goto LABEL_77;
        if (v2 < 0)
          goto LABEL_78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_19C551690();
        sub_19C52FCE8((char *)v2, v41, (uint64_t *)(*v14 + 16), (char *)(*v14 + 40));
      }
LABEL_57:
      v42 = v3[10];
      v9 = __OFSUB__(v42, 1);
      v43 = v42 - 1;
      if (v9)
        goto LABEL_70;
      v3[10] = v43;
      v55 = v30;
      v44 = (void (*)(__IOSurface **))v3[8];
      if (v44)
      {
        swift_retain();
        v44(&v55);
        sub_19C530F14((uint64_t)v44);
      }
      swift_endAccess();
      v45 = IOSurfaceGetAllocSize(v30);

      v46 = v3[11];
      v9 = __OFSUB__(v46, v45);
      v47 = v46 - v45;
      if (v9)
        goto LABEL_71;
      v3[11] = v47;
      v48 = v3[7];
      v9 = __OFSUB__(v48, 1);
      v13 = v48 - 1;
    }
    while (!v9);
  }
  __break(1u);
LABEL_64:
  ((void (*)(_QWORD *, _QWORD))v2)(v53, 0);
LABEL_65:
  swift_endAccess();
LABEL_66:
  swift_beginAccess();
  sub_19C52DFC8(v52, v51);
  swift_endAccess();
  v49 = v3[11];
  v9 = __OFADD__(v49, v6);
  v50 = v49 + v6;
  if (v9)
    goto LABEL_79;
  v3[11] = v50;
}

uint64_t sub_19C579D8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19C530F14(v1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOSurfaceAllocator()
{
  return objc_opt_self();
}

uint64_t sub_19C579E14()
{
  return swift_deallocObject();
}

uint64_t sub_19C579E24()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_19C579E48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE423030;
  if (!qword_1EE423030)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1A1AD76AC](&unk_19CAE7928, v1);
    atomic_store(result, (unint64_t *)&qword_1EE423030);
  }
  return result;
}

uint64_t sub_19C579E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v27[40];
  _BYTE v28[200];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v9 = sub_19CAA935C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v27[-v14];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v10 + 104))(v13, **((unsigned int **)&unk_1E3D5EFD0 + a6), v9);
  sub_19CAA9308();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v15, v13, v9);
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v16 = *(_OWORD *)(a1 + 176);
  v36 = *(_OWORD *)(a1 + 160);
  v37 = v16;
  v38 = *(_OWORD *)(a1 + 192);
  v17 = *(_OWORD *)(a1 + 112);
  v32 = *(_OWORD *)(a1 + 96);
  v33 = v17;
  v18 = *(_OWORD *)(a1 + 144);
  v34 = *(_OWORD *)(a1 + 128);
  v35 = v18;
  v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v28[184] = *(_OWORD *)(a1 + 32);
  v29 = v19;
  v20 = *(_OWORD *)(a1 + 80);
  v30 = *(_OWORD *)(a1 + 64);
  v31 = v20;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __asm { BR              X10 }
  }
  v21 = *(_OWORD *)(a2 + 176);
  v47 = *(_OWORD *)(a2 + 160);
  v48 = v21;
  v49 = *(_OWORD *)(a2 + 192);
  v22 = *(_OWORD *)(a2 + 112);
  v43 = *(_OWORD *)(a2 + 96);
  v44 = v22;
  v23 = *(_OWORD *)(a2 + 144);
  v45 = *(_OWORD *)(a2 + 128);
  v46 = v23;
  v24 = *(_OWORD *)(a2 + 48);
  v39 = *(_OWORD *)(a2 + 32);
  v40 = v24;
  v25 = *(_OWORD *)(a2 + 80);
  v41 = *(_OWORD *)(a2 + 64);
  v42 = v25;
  sub_19C4DCE4C((uint64_t)v28);
  sub_19C572CF0((uint64_t)v28, (uint64_t)&v50);
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (!sub_19CAA92FC())
    goto LABEL_7;
  sub_19CAA9284();
  return swift_release();
}

void sub_19C57A0D8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = 0xE000000000000000;
    sub_19CAA9F2C();
    v1 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 32) = v1;
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    *(_BYTE *)(v0 + 23) = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  sub_19CAAA0B8();
  __break(1u);
  JUMPOUT(0x19C57A27CLL);
}

uint64_t sub_19C57A2B4(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  MEMORY[0x1E0C80A78](v2);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_19C557248(0, v3, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C57A44C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t result;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      sub_19CAA9DD0();
      sub_19CAA9D70();
      return sub_19CAA9434();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);

  v4 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C57A684(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t result;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      sub_19CAA9DD0();
      sub_19CAA9D70();
      return sub_19CAA92E4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);

  v4 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

void sub_19C57A8C0(uint64_t a1, uint64_t a2)
{
  sub_19C57A2B4(a1);
  sub_19C57A2B4(a2);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C57AA40);
}

void sub_19C57AA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a1 + 168);
  if (!v8)
    goto LABEL_8;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(a2 + 168);
  if (v9)
  {
    sub_19C57D190(v8, v9, a7, a8);
    return;
  }
LABEL_8:
  v10 = sub_19CAA9440();
  sub_19C575B64();
  v11 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0DE97C0], v10);
  swift_willThrow();

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  sub_19CAAA0B8();
  __break(1u);
}

uint64_t sub_19C57ACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = *(void **)(a3 + 32);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    sub_19CAA9DD0();
    sub_19CAA9D70();
    return sub_19CAA94C4();
  }
LABEL_7:
  __break(1u);

  v6 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

void sub_19C57AF2C(uint64_t a1, uint64_t a2)
{
  sub_19C57A2B4(a1);
  sub_19C57A2B4(a2);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C57B0C0);
}

uint64_t sub_19C57B0E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unsigned int *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  int v62;
  char v63;

  v8 = sub_19CAA9290();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (_DWORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v34 - v13;
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  v15 = *(_OWORD *)(a1 + 176);
  v48 = *(_OWORD *)(a1 + 160);
  v49 = v15;
  v50 = *(_OWORD *)(a1 + 192);
  v16 = *(_OWORD *)(a1 + 112);
  v44 = *(_OWORD *)(a1 + 96);
  v45 = v16;
  v17 = *(_OWORD *)(a1 + 144);
  v46 = *(_OWORD *)(a1 + 128);
  v47 = v17;
  v18 = *(_OWORD *)(a1 + 48);
  v40 = *(_OWORD *)(a1 + 32);
  v41 = v18;
  v19 = *(_OWORD *)(a1 + 80);
  v42 = *(_OWORD *)(a1 + 64);
  v43 = v19;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_18:
    __break(1u);

    goto LABEL_19;
  }
  v20 = *(_OWORD *)(a2 + 176);
  v59 = *(_OWORD *)(a2 + 160);
  v60 = v20;
  v61 = *(_OWORD *)(a2 + 192);
  v21 = *(_OWORD *)(a2 + 112);
  v55 = *(_OWORD *)(a2 + 96);
  v56 = v21;
  v22 = *(_OWORD *)(a2 + 144);
  v57 = *(_OWORD *)(a2 + 128);
  v58 = v22;
  v23 = *(_OWORD *)(a2 + 48);
  v51 = *(_OWORD *)(a2 + 32);
  v52 = v23;
  v24 = *(_OWORD *)(a2 + 80);
  v53 = *(_OWORD *)(a2 + 64);
  v54 = v24;
  sub_19C57C8D0((int *)(a3 + 32), (uint64_t)&v39);
  sub_19C57C8D0(&v39, (uint64_t)&v62);
  if (v63 == 1)
  {
    if (v62)
      v25 = (unsigned int *)MEMORY[0x1E0DE95A0];
    else
      v25 = (unsigned int *)MEMORY[0x1E0DE9598];
    (*(void (**)(_DWORD *, _QWORD, uint64_t))(v9 + 104))(v12, *v25, v8);
  }
  else
  {
    *v12 = v62;
    (*(void (**)(_DWORD *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DE9590], v8);
  }
  (*(void (**)(char *, _DWORD *, uint64_t))(v9 + 32))(v14, v12, v8);
  v38 = *(_QWORD *)(a3 + 40);
  v27 = v38 + 16;
  v26 = *(_QWORD *)(v38 + 16);
  if (v26)
  {
    v36 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_19C557290(0, v26, 0);
    v28 = v36;
    do
    {
      v29 = *(_OWORD *)(v27 + 16 * v26);
      v36 = v28;
      v31 = *(_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v28 + 24);
      if (v31 >= v30 >> 1)
      {
        v34 = v29;
        sub_19C557290(v30 > 1, v31 + 1, 1);
        v29 = v34;
        v28 = v36;
      }
      *(_QWORD *)(v28 + 16) = v31 + 1;
      *(_OWORD *)(v28 + 16 * v31 + 32) = v29;
      --v26;
    }
    while (v26);
    sub_19C4CF9C0((uint64_t)&v38);
  }
  sub_19CAA92C0();
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (sub_19CAA92B4())
  {
    sub_19CAA9284();
    return swift_release();
  }
LABEL_19:
  v33 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v33 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    v35 = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C57B4E0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, __int128 *a5)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a1 + 168);
  if (!v6)
    goto LABEL_8;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(a2 + 168);
  if (v7)
  {
    v10 = *a5;
    v17 = a5[1];
    v18 = v10;
    swift_bridgeObjectRetain();
    sub_19C551C5C((uint64_t)&v18);
    sub_19C551C5C((uint64_t)&v17);
    return sub_19C57BE80(v6, a3, a4 & 0x1FF, v7, a3, a5, v11);
  }
LABEL_8:
  v13 = sub_19CAA9440();
  sub_19C575B64();
  v14 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DE97C0], v13);
  swift_willThrow();

  v16 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

void sub_19C57B724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  unint64_t v5;
  int v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t isStackAllocationSafe;
  uint64_t v17;
  float *v18;
  uint64_t v19;
  vDSP_Length *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64x2_t *v30;
  uint64_t v31;
  int64x2_t v32;
  uint64_t v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  vDSP_Length v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64x2_t *v49;
  unint64_t v50;
  int64x2_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  vDSP_Length v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __int128 *v61;
  __int128 *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;

  v69 = a1;
  v70 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a4 + 32);
  if ((*(_BYTE *)(a4 + 40) & 1) != 0)
    v6 = -1;
  else
    v6 = 1;
  v68 = v6;
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  v9 = sub_19C57C814(1, 0, v5, a3);
  v10 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  v11 = *(_QWORD *)(a3 + 16);
  if ((uint64_t)v11 < v10)
  {
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  v12 = v9;
  v13 = sub_19C57C814(1, v10, *(_QWORD *)(a3 + 16), a3);
  if (v5 >= v11)
  {
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  v14 = v13;
  v15 = *(_QWORD *)(a3 + 8 * v5 + 32);
  v65 = v13 * v15;
  if ((unsigned __int128)(v13 * (__int128)v15) >> 64 != (v13 * v15) >> 63)
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  if ((unint64_t)(v15 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  if (4 * v15 < 0)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  if ((unint64_t)(4 * v15 + 0x2000000000000000) >> 62)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  if (16 * v15 < 1025 || (v13 = swift_stdlib_isStackAllocationSafe(), (v13 & 1) != 0))
  {
    isStackAllocationSafe = MEMORY[0x1E0C80A78](v13);
    v18 = (float *)((char *)&v56 - v17);
    if ((unint64_t)(v15 - 0x1000000000000000) >> 61 != 7)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (8 * v15 < 0)
    {
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    if ((unint64_t)(8 * v15 + 0x1000000000000000) >> 61)
    {
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    v62 = &v56;
    v63 = v4;
    if (v15 << 6 >= 1025)
    {
      isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        v39 = swift_slowAlloc();
        if (v12 < 0)
        {
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        v20 = (vDSP_Length *)v39;
        if (!v12)
        {
LABEL_109:
          MEMORY[0x1A1AD7790](v20, -1, -1);
          return;
        }
        if ((v14 & 0x8000000000000000) != 0)
LABEL_145:
          __break(1u);
        v40 = 0;
        if (v15 <= 4)
          v41 = 4;
        else
          v41 = v15;
        v42 = (__int128 *)(v41 - 4);
        if (v41 - 4 >= (unint64_t)(v15 - 5))
          v42 = (__int128 *)(v15 - 5);
        v61 = v42;
        v43 = (char *)v42 + 1;
        v44 = v43 & 3;
        if ((v43 & 3) == 0)
          v44 = 4;
        v60 = (unint64_t)&v43[-v44];
        v58 = v39 + 48;
        v59 = (uint64_t)&v43[-v44 + 4];
        v67 = v14 >> 31;
        v57 = xmmword_19CAEC290;
        v64 = v12;
        while (1)
        {
          if (v40 == v12)
            goto LABEL_141;
          v66 = v40;
          if (v14)
            break;
LABEL_75:
          v40 = v66 + 1;
          v12 = v64;
          if (v66 + 1 == v64)
            goto LABEL_109;
        }
        v45 = v65 * v66;
        if ((unsigned __int128)(v65 * (__int128)v66) >> 64 != (v65 * v66) >> 63)
          goto LABEL_142;
        if (v15 < 0)
        {
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        v46 = 0;
        while (1)
        {
          if (v46 == v14)
            goto LABEL_121;
          v47 = v45 + v46;
          if (__OFADD__(v45, v46))
            goto LABEL_122;
          if (v15)
          {
            *v20 = 0;
            if (v15 != 1)
            {
              v20[1] = 1;
              if (v15 != 2)
              {
                v20[2] = 2;
                if (v15 != 3)
                {
                  v20[3] = 3;
                  if (v15 != 4)
                  {
                    if ((unint64_t)v61 >= 4)
                    {
                      v49 = (int64x2_t *)v58;
                      v50 = v60;
                      v51 = (int64x2_t)v57;
                      do
                      {
                        v49[-1] = v51;
                        *v49 = vaddq_s64(v51, vdupq_n_s64(2uLL));
                        v51 = vaddq_s64(v51, vdupq_n_s64(4uLL));
                        v49 += 2;
                        v50 -= 4;
                      }
                      while (v50);
                      v48 = v59;
                    }
                    else
                    {
                      v48 = 4;
                    }
                    do
                    {
                      if (v41 == v48)
                        goto LABEL_119;
                      v20[v48] = v48;
                      ++v48;
                    }
                    while (v15 != v48);
                    if (v15 > 0x7FFFFFFF)
                      goto LABEL_120;
                  }
                }
              }
            }
          }
          if (v67)
            goto LABEL_123;
          cblas_scopy(v15, (const float *)(v69 + 4 * v47), v14, v18, 1);
          vDSP_vsorti(v18, v20, 0, v15, v68);
          if (v15)
            break;
LABEL_81:
          if (++v46 == v14)
            goto LABEL_75;
        }
        if (v15 < 1)
          goto LABEL_124;
        v52 = 0;
        while (1)
        {
          v53 = v52 * v14;
          if ((unsigned __int128)(v52 * (__int128)(uint64_t)v14) >> 64 != (uint64_t)(v52 * v14) >> 63)
            break;
          v35 = __OFADD__(v47, v53);
          v54 = v47 + v53;
          if (v35)
            goto LABEL_111;
          v55 = v20[v52];
          if (v55 >> 31)
            goto LABEL_112;
          ++v52;
          *(_DWORD *)(a2 + 4 * v54) = v55;
          if (v15 == v52)
            goto LABEL_81;
        }
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
        goto LABEL_126;
      }
    }
    v61 = &v56;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v20 = (vDSP_Length *)((char *)&v56 - v19);
    if (v12 < 0)
    {
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (v12)
    {
      if ((v14 & 0x8000000000000000) != 0)
        goto LABEL_140;
      v21 = 0;
      if (v15 <= 4)
        v22 = 4;
      else
        v22 = v15;
      v23 = v22 - 4;
      if (v22 - 4 >= (unint64_t)(v15 - 5))
        v23 = v15 - 5;
      v60 = v23;
      v24 = v23 + 1;
      v25 = v24 & 3;
      if ((v24 & 3) == 0)
        v25 = 4;
      v59 = v24 - v25;
      v58 = v24 - v25 + 4;
      *(_QWORD *)&v57 = v20 + 6;
      v67 = v14 >> 31;
      v56 = xmmword_19CAEC290;
      v64 = v12;
      while (1)
      {
        if (v21 == v12)
          goto LABEL_125;
        v66 = v21;
        if (v14)
          break;
LABEL_30:
        v21 = v66 + 1;
        v12 = v64;
        if (v66 + 1 == v64)
          return;
      }
      v26 = v65 * v66;
      if ((unsigned __int128)(v65 * (__int128)v66) >> 64 != (v65 * v66) >> 63)
        goto LABEL_133;
      if (v15 < 0)
      {
LABEL_134:
        __break(1u);
        goto LABEL_135;
      }
      v27 = 0;
      while (1)
      {
        if (v27 == v14)
          goto LABEL_115;
        v28 = v26 + v27;
        if (__OFADD__(v26, v27))
          goto LABEL_116;
        if (v15)
        {
          *v20 = 0;
          if (v15 != 1)
          {
            v20[1] = 1;
            if (v15 != 2)
            {
              v20[2] = 2;
              if (v15 != 3)
              {
                v20[3] = 3;
                if (v15 != 4)
                {
                  if (v60 >= 4)
                  {
                    v30 = (int64x2_t *)v57;
                    v31 = v59;
                    v32 = (int64x2_t)v56;
                    do
                    {
                      v30[-1] = v32;
                      *v30 = vaddq_s64(v32, vdupq_n_s64(2uLL));
                      v32 = vaddq_s64(v32, vdupq_n_s64(4uLL));
                      v30 += 2;
                      v31 -= 4;
                    }
                    while (v31);
                    v29 = v58;
                  }
                  else
                  {
                    v29 = 4;
                  }
                  do
                  {
                    if (v22 == v29)
                      goto LABEL_113;
                    v20[v29] = v29;
                    ++v29;
                  }
                  while (v15 != v29);
                  if (v15 > 0x7FFFFFFF)
                    goto LABEL_114;
                }
              }
            }
          }
        }
        if (v67)
          goto LABEL_117;
        cblas_scopy(v15, (const float *)(v69 + 4 * v28), v14, v18, 1);
        vDSP_vsorti(v18, v20, 0, v15, v68);
        if (v15)
          break;
LABEL_36:
        if (++v27 == v14)
          goto LABEL_30;
      }
      if (v15 >= 1)
      {
        v33 = 0;
        while (1)
        {
          v34 = v33 * v14;
          if ((unsigned __int128)(v33 * (__int128)(uint64_t)v14) >> 64 != (uint64_t)(v33 * v14) >> 63)
            break;
          v35 = __OFADD__(v28, v34);
          v36 = v28 + v34;
          if (v35)
            goto LABEL_107;
          v37 = v20[v33];
          if (v37 >> 31)
            goto LABEL_108;
          ++v33;
          *(_DWORD *)(a2 + 4 * v36) = v37;
          if (v15 == v33)
            goto LABEL_36;
        }
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
      goto LABEL_118;
    }
  }
  else
  {
    v38 = swift_slowAlloc();
    sub_19C57C260(v38, 4 * v15, v15, v69, a2, v12, v14, v65, v68);
    if (v4)
    {

      MEMORY[0x1A1AD7790](v38, -1, -1);
      __break(1u);
    }
    else
    {
      MEMORY[0x1A1AD7790](v38, -1, -1);
    }
  }
}

uint64_t sub_19C57BE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, char *a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v44 = a1;
  v45 = a4;
  v50 = *MEMORY[0x1E0C80C00];
  v13 = sub_19CAAA1B4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 + 16);
  if (!v18)
  {
    if (a3 == 10)
      goto LABEL_14;
    v43 = v7;
    v20 = 1;
    v23 = 4;
LABEL_8:
    if ((unint64_t)(v23 + 0x2000000000000000) >> 62)
      goto LABEL_35;
    v42 = a5;
    if (16 * v20 < 1025 || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
    {
      v15 = MEMORY[0x1E0C80A78](&v40);
      a7 = (char *)&v40 - v24;
      if (v25 > 0xA)
        goto LABEL_18;
      v26 = qword_19CAEC238[(char)a3];
LABEL_19:
      if ((unsigned __int128)(v20 * (__int128)v26) >> 64 != (v20 * v26) >> 63)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v41 = a6;
      v27 = v44;
      v28 = v44 + v20 * v26;
      v29 = *MEMORY[0x1E0DED4D8];
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
      v40 = v15;
      v30(v17, v29, v13);
      v31 = v27;
      a6 = v41;
      sub_19C593E88(v31, v28, a3 & 0x1FF, (uint64_t)a7, (uint64_t)&a7[v23], 10, v20, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v32 = v43;
      sub_19C57B724((uint64_t)a7, v45, v42, (uint64_t)a6);
      if (v32)
      {
        swift_willThrow();
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    else
    {
      LODWORD(v41) = a3;
      v33 = swift_slowAlloc();
      if (v41 > 0xA)
        v34 = 8;
      else
        v34 = qword_19CAEC238[(char)a3];
      if ((unsigned __int128)(v20 * (__int128)v34) >> 64 != (v20 * v34) >> 63)
LABEL_36:
        __break(1u);
      v35 = v44;
      v40 = v44 + v20 * v34;
      v41 = (_OWORD *)(v33 + v23);
      v36 = v33;
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0DED4D8], v13);
      sub_19C593E88(v35, v40, a3 & 0x1FF, v36, (uint64_t)v41, 10, v20, (uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v37 = v43;
      sub_19C57B724(v36, v45, v42, (uint64_t)a6);
      MEMORY[0x1A1AD7790](v36, -1, -1);
      if (v37)
        goto LABEL_27;
    }
    swift_bridgeObjectRelease();
LABEL_30:
    v47 = *a6;
    sub_19C551C84((uint64_t)&v47);
    v46 = a6[1];
    v38 = &v46;
    return sub_19C551C84((uint64_t)v38);
  }
  v19 = (uint64_t *)(a2 + 32);
  v20 = 1;
  do
  {
    v21 = *v19++;
    v22 = (unsigned __int128)(v20 * (__int128)v21) >> 64;
    v20 *= v21;
    if (v22 != v20 >> 63)
    {
      __break(1u);
      goto LABEL_33;
    }
    --v18;
  }
  while (v18);
  if (a3 != 10)
  {
    if ((unint64_t)(v20 - 0x2000000000000000) >> 62 == 3)
    {
      v43 = v7;
      v23 = 4 * v20;
      if (((4 * v20) & 0x8000000000000000) == 0)
        goto LABEL_8;
      __break(1u);
LABEL_18:
      v26 = 8;
      goto LABEL_19;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_14:
  sub_19C57B724(v44, v45, a5, (uint64_t)a6);
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_30;
LABEL_28:
  v49 = *a6;
  sub_19C551C84((uint64_t)&v49);
  v48 = a6[1];
  v38 = &v48;
  return sub_19C551C84((uint64_t)v38);
}

void sub_19C57C260(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, int a9)
{
  uint64_t v11;
  float *v13;
  uint64_t v14;
  uint64_t v15;
  vDSP_Length *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64x2_t *v27;
  int64x2_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  vDSP_Length v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64x2_t *v45;
  int64x2_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  vDSP_Length v50;
  uint64_t v51;
  __int128 v52;
  int64x2_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;

  v56 = a8;
  v62 = a4;
  v63 = *MEMORY[0x1E0C80C00];
  if ((unint64_t)(a3 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  if (8 * a3 < 0)
  {
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  if ((unint64_t)(8 * a3 + 0x1000000000000000) >> 61)
  {
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  v11 = a6;
  v13 = (float *)isStackAllocationSafe;
  v61 = a9;
  v57 = a6;
  if (a3 << 6 <= 1024 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v16 = (vDSP_Length *)((char *)&v51 - v15);
    if (v11 < 0)
    {
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    v51 = v14;
    if (!v11)
      return;
    if ((a7 & 0x8000000000000000) != 0)
      goto LABEL_116;
    v17 = 0;
    if (a3 <= 2)
      v18 = 2;
    else
      v18 = a3;
    v19 = v18 - 2;
    if (v18 - 2 >= (unint64_t)(a3 - 3))
      v19 = a3 - 3;
    v58 = v19;
    v20 = v19 + 1;
    v21 = v20 & 3;
    if ((v20 & 3) == 0)
      v21 = 4;
    v55 = v20 - v21;
    v53 = (int64x2_t *)(v16 + 4);
    v54 = v20 - v21 + 2;
    v60 = a7 >> 31;
    v52 = xmmword_19CAEC2A0;
    while (1)
    {
      if (v17 == v11)
        goto LABEL_109;
      v59 = v17;
      if (a7)
        break;
LABEL_17:
      v17 = v59 + 1;
      v11 = v57;
      if (v59 + 1 == v57)
        return;
    }
    v22 = v56 * v59;
    if ((unsigned __int128)(v56 * (__int128)v59) >> 64 != (v56 * v59) >> 63)
      goto LABEL_111;
    if (a3 < 0)
    {
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    v23 = 0;
    while (1)
    {
      if (v23 == a7)
        goto LABEL_100;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        goto LABEL_101;
      if (a3)
      {
        *v16 = 0;
        if (a3 != 1)
        {
          v16[1] = 1;
          if (a3 != 2)
          {
            if (v58 >= 4)
            {
              v26 = v55;
              v27 = v53;
              v28 = (int64x2_t)v52;
              do
              {
                v27[-1] = v28;
                *v27 = vaddq_s64(v28, vdupq_n_s64(2uLL));
                v28 = vaddq_s64(v28, vdupq_n_s64(4uLL));
                v27 += 2;
                v26 -= 4;
              }
              while (v26);
              v25 = v54;
            }
            else
            {
              v25 = 2;
            }
            do
            {
              if (v18 == v25)
                goto LABEL_97;
              v16[v25] = v25;
              ++v25;
            }
            while (a3 != v25);
            if (a3 > 0x7FFFFFFF)
              goto LABEL_99;
          }
        }
      }
      if (v60)
        goto LABEL_102;
      if (!v13)
        goto LABEL_122;
      cblas_scopy(a3, (const float *)(v62 + 4 * v24), a7, v13, 1);
      vDSP_vsorti(v13, v16, 0, a3, v61);
      if (a3)
        break;
LABEL_23:
      if (++v23 == a7)
        goto LABEL_17;
    }
    if (a3 >= 1)
    {
      v29 = 0;
      while (1)
      {
        v30 = v29 * a7;
        if ((unsigned __int128)(v29 * (__int128)(uint64_t)a7) >> 64 != (uint64_t)(v29 * a7) >> 63)
          break;
        v31 = __OFADD__(v24, v30);
        v32 = v24 + v30;
        if (v31)
          goto LABEL_90;
        v33 = v16[v29];
        if (v33 >> 31)
          goto LABEL_91;
        ++v29;
        *(_DWORD *)(a5 + 4 * v32) = v33;
        if (a3 == v29)
          goto LABEL_23;
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    goto LABEL_103;
  }
  v34 = swift_slowAlloc();
  if (v11 < 0)
  {
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
  }
  v16 = (vDSP_Length *)v34;
  if (v11)
  {
    if ((a7 & 0x8000000000000000) != 0)
      goto LABEL_121;
    v35 = 0;
    if (a3 <= 2)
      v36 = 2;
    else
      v36 = a3;
    v37 = v36 - 2;
    if (v36 - 2 >= (unint64_t)(a3 - 3))
      v37 = a3 - 3;
    v58 = v37;
    v38 = v37 + 1;
    v39 = v38 & 3;
    if ((v38 & 3) == 0)
      v39 = 4;
    v55 = v38 - v39;
    v53 = (int64x2_t *)(v34 + 32);
    v54 = v38 - v39 + 2;
    v60 = a7 >> 31;
    v52 = xmmword_19CAEC2A0;
    while (1)
    {
      if (v35 == v11)
        goto LABEL_117;
      v59 = v35;
      if (a7)
        break;
LABEL_59:
      v35 = v59 + 1;
      v11 = v57;
      if (v59 + 1 == v57)
        goto LABEL_92;
    }
    v40 = v56 * v59;
    if ((unsigned __int128)(v56 * (__int128)v59) >> 64 != (v56 * v59) >> 63)
      goto LABEL_118;
    if (a3 < 0)
    {
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    v41 = 0;
    while (1)
    {
      if (v41 == a7)
        goto LABEL_105;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
        goto LABEL_106;
      if (a3)
      {
        *v16 = 0;
        if (a3 != 1)
        {
          v16[1] = 1;
          if (a3 != 2)
          {
            if (v58 >= 4)
            {
              v44 = v55;
              v45 = v53;
              v46 = (int64x2_t)v52;
              do
              {
                v45[-1] = v46;
                *v45 = vaddq_s64(v46, vdupq_n_s64(2uLL));
                v46 = vaddq_s64(v46, vdupq_n_s64(4uLL));
                v45 += 2;
                v44 -= 4;
              }
              while (v44);
              v43 = v54;
            }
            else
            {
              v43 = 2;
            }
            do
            {
              if (v36 == v43)
                goto LABEL_98;
              v16[v43] = v43;
              ++v43;
            }
            while (a3 != v43);
            if (a3 > 0x7FFFFFFF)
              goto LABEL_104;
          }
        }
      }
      if (v60)
        goto LABEL_107;
      if (!v13)
        goto LABEL_123;
      cblas_scopy(a3, (const float *)(v62 + 4 * v42), a7, v13, 1);
      vDSP_vsorti(v13, v16, 0, a3, v61);
      if (a3)
        break;
LABEL_65:
      if (++v41 == a7)
        goto LABEL_59;
    }
    if (a3 < 1)
      goto LABEL_108;
    v47 = 0;
    while (1)
    {
      v48 = v47 * a7;
      if ((unsigned __int128)(v47 * (__int128)(uint64_t)a7) >> 64 != (uint64_t)(v47 * a7) >> 63)
        break;
      v31 = __OFADD__(v42, v48);
      v49 = v42 + v48;
      if (v31)
        goto LABEL_95;
      v50 = v16[v47];
      if (v50 >> 31)
        goto LABEL_96;
      ++v47;
      *(_DWORD *)(a5 + 4 * v49) = v50;
      if (a3 == v47)
        goto LABEL_65;
    }
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
LABEL_92:
  MEMORY[0x1A1AD7790](v16, -1, -1);
}

uint64_t sub_19C57C814(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 != a3)
  {
    if (a3 >= a2)
    {
      if (*(_QWORD *)(a4 + 16) <= a2)
        v4 = a2;
      else
        v4 = *(_QWORD *)(a4 + 16);
      v5 = a2;
      while (v5 < a3)
      {
        if (a2 < 0)
          goto LABEL_14;
        if (v4 == v5)
          goto LABEL_15;
        v6 = *(_QWORD *)(a4 + 32 + 8 * v5);
        v7 = result * v6;
        if ((unsigned __int128)(result * (__int128)v6) >> 64 != (result * v6) >> 63)
          goto LABEL_16;
        ++v5;
        result *= v6;
        if (a3 == v5)
          return v7;
      }
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19C57C890()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C57C8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C57B0E4(a1, a2, v2 + 16, *(void **)(v2 + 64));
}

uint64_t sub_19C57C8D0(int *a1, uint64_t a2)
{
  __swift_memcpy5_4(a2, a1);
  return a2;
}

uint64_t sub_19C57C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19C57C954()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19C57C980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C57AA50(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56));
}

uint64_t sub_19C57C9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v68 = a8;
  v70 = a2;
  v71 = *(_QWORD *)(a7 - 8);
  v72 = a5;
  v9 = MEMORY[0x1E0C80A78](a1);
  v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v59 - v12;
  result = MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v59 - v18;
  v19 = *(_QWORD *)(v15 + 16);
  if (v19)
  {
    v20 = (uint64_t *)(v15 + 32);
    v21 = 1;
    v22 = *(_QWORD *)(v15 + 16);
    while (1)
    {
      v23 = *v20++;
      v24 = v21 * v23;
      if ((unsigned __int128)(v21 * (__int128)v23) >> 64 != (v21 * v23) >> 63)
        goto LABEL_53;
      v21 = v24;
      if (!--v22)
        goto LABEL_7;
    }
  }
  v24 = 1;
LABEL_7:
  if (v16 > 0xAu)
    v25 = 8;
  else
    v25 = qword_19CAEC238[(char)v16];
  if ((unsigned __int128)(v24 * (__int128)v25) >> 64 == (v24 * v25) >> 63)
  {
    if (v19)
    {
      v26 = (uint64_t *)(v15 + 32);
      v27 = 1;
      v28 = (uint64_t *)(v15 + 32);
      v29 = *(_QWORD *)(v15 + 16);
      while (1)
      {
        v30 = *v28++;
        v31 = v27 * v30;
        if ((unsigned __int128)(v27 * (__int128)v30) >> 64 != (v27 * v30) >> 63)
          goto LABEL_54;
        v27 = v31;
        if (!--v29)
        {
          if ((unsigned __int128)(v31 * (__int128)v25) >> 64 != (v31 * v25) >> 63)
            goto LABEL_66;
          v32 = 1;
          v33 = *(_QWORD *)(v15 + 16);
          while (1)
          {
            v34 = *v26++;
            v35 = v32 * v34;
            if ((unsigned __int128)(v32 * (__int128)v34) >> 64 != (v32 * v34) >> 63)
              goto LABEL_55;
            v32 = v35;
            if (!--v33)
            {
              if (v19 <= v17)
                goto LABEL_50;
              v36 = *(_QWORD *)(v15 + 8 * v17 + 32);
              if (!v36)
                goto LABEL_62;
              if (v35 == 0x8000000000000000 && v36 == -1)
                goto LABEL_68;
              if (v19 <= (uint64_t)v17)
                goto LABEL_63;
              if (v17 + 1 != v19)
              {
                if ((uint64_t)(v17 + 1) >= v19)
                  goto LABEL_69;
                v39 = ~v17 + v19;
                v40 = (uint64_t *)(v15 + 8 * v17 + 40);
                v41 = 1;
                while (1)
                {
                  v42 = *v40++;
                  v38 = v41 * v42;
                  if ((unsigned __int128)(v41 * (__int128)v42) >> 64 != (v41 * v42) >> 63)
                    goto LABEL_56;
                  v41 = v38;
                  if (!--v39)
                    goto LABEL_32;
                }
              }
              v38 = 1;
LABEL_32:
              v63 = v36 * v38;
              if ((unsigned __int128)(v36 * (__int128)v38) >> 64 != (v36 * v38) >> 63)
                goto LABEL_64;
              v43 = v35 / v36;
              if (v35 / v36 < 0)
                goto LABEL_65;
              if (v43)
              {
                if (v36 < 0)
                  goto LABEL_67;
                v44 = 0;
                v60 = v36 - 1;
                v61 = v35 / v36;
                v62 = v36;
                v65 = v38;
                v45 = v71;
                while (v44 != v43)
                {
                  if (!v38)
                    goto LABEL_58;
                  v46 = v44 / v38 * v63;
                  if ((unsigned __int128)(v44 / v38 * (__int128)v63) >> 64 != v46 >> 63)
                    goto LABEL_59;
                  v47 = v46 + v44 % v38;
                  if (__OFADD__(v46, v44 % v38))
                    goto LABEL_60;
                  v64 = v44;
                  v48 = *(_QWORD *)(v71 + 72);
                  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 24))(v72 + v48 * v47, v70 + v48 * v47, a7);
                  v49 = v47 + v38;
                  if (__OFADD__(v47, v38))
                    goto LABEL_51;
                  if (v62 != 1)
                  {
                    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16);
                    v51 = v60;
                    v52 = v47;
                    v69 = v48;
                    do
                    {
                      result = v50(v13, v72 + v48 * v52, a7);
                      if (__OFADD__(v47, v38))
                        goto LABEL_52;
                      v53 = v70 + v48 * (v47 + v38);
                      v54 = v67;
                      v55 = v50;
                      v50(v67, v53, a7);
                      v56 = v66;
                      sub_19CAAA0C4();
                      v57 = *(void (**)(char *, uint64_t))(v45 + 8);
                      v58 = v54;
                      v48 = v69;
                      v57(v58, a7);
                      v57(v13, a7);
                      v38 = v65;
                      result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 40))(v72 + v48 * v49, v56, a7);
                      if (__OFADD__(v49, v38))
                        goto LABEL_51;
                      v52 = v49;
                      v47 += v38;
                      v49 += v38;
                      --v51;
                      v50 = v55;
                    }
                    while (v51);
                  }
                  v44 = v64 + 1;
                  v43 = v61;
                  if (v64 + 1 == v61)
                    return result;
                }
                goto LABEL_57;
              }
              return result;
            }
          }
        }
      }
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_19C57CD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v68 = a8;
  v70 = a2;
  v71 = *(_QWORD *)(a7 - 8);
  v72 = a5;
  v9 = MEMORY[0x1E0C80A78](a1);
  v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v59 - v12;
  result = MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v59 - v18;
  v19 = *(_QWORD *)(v15 + 16);
  if (v19)
  {
    v20 = (uint64_t *)(v15 + 32);
    v21 = 1;
    v22 = *(_QWORD *)(v15 + 16);
    while (1)
    {
      v23 = *v20++;
      v24 = v21 * v23;
      if ((unsigned __int128)(v21 * (__int128)v23) >> 64 != (v21 * v23) >> 63)
        goto LABEL_53;
      v21 = v24;
      if (!--v22)
        goto LABEL_7;
    }
  }
  v24 = 1;
LABEL_7:
  if (v16 > 0xAu)
    v25 = 8;
  else
    v25 = qword_19CAEC238[(char)v16];
  if ((unsigned __int128)(v24 * (__int128)v25) >> 64 == (v24 * v25) >> 63)
  {
    if (v19)
    {
      v26 = (uint64_t *)(v15 + 32);
      v27 = 1;
      v28 = (uint64_t *)(v15 + 32);
      v29 = *(_QWORD *)(v15 + 16);
      while (1)
      {
        v30 = *v28++;
        v31 = v27 * v30;
        if ((unsigned __int128)(v27 * (__int128)v30) >> 64 != (v27 * v30) >> 63)
          goto LABEL_54;
        v27 = v31;
        if (!--v29)
        {
          if ((unsigned __int128)(v31 * (__int128)v25) >> 64 != (v31 * v25) >> 63)
            goto LABEL_66;
          v32 = 1;
          v33 = *(_QWORD *)(v15 + 16);
          while (1)
          {
            v34 = *v26++;
            v35 = v32 * v34;
            if ((unsigned __int128)(v32 * (__int128)v34) >> 64 != (v32 * v34) >> 63)
              goto LABEL_55;
            v32 = v35;
            if (!--v33)
            {
              if (v19 <= v17)
                goto LABEL_50;
              v36 = *(_QWORD *)(v15 + 8 * v17 + 32);
              if (!v36)
                goto LABEL_62;
              if (v35 == 0x8000000000000000 && v36 == -1)
                goto LABEL_68;
              if (v19 <= (uint64_t)v17)
                goto LABEL_63;
              if (v17 + 1 != v19)
              {
                if ((uint64_t)(v17 + 1) >= v19)
                  goto LABEL_69;
                v39 = ~v17 + v19;
                v40 = (uint64_t *)(v15 + 8 * v17 + 40);
                v41 = 1;
                while (1)
                {
                  v42 = *v40++;
                  v38 = v41 * v42;
                  if ((unsigned __int128)(v41 * (__int128)v42) >> 64 != (v41 * v42) >> 63)
                    goto LABEL_56;
                  v41 = v38;
                  if (!--v39)
                    goto LABEL_32;
                }
              }
              v38 = 1;
LABEL_32:
              v63 = v36 * v38;
              if ((unsigned __int128)(v36 * (__int128)v38) >> 64 != (v36 * v38) >> 63)
                goto LABEL_64;
              v43 = v35 / v36;
              if (v35 / v36 < 0)
                goto LABEL_65;
              if (v43)
              {
                if (v36 < 0)
                  goto LABEL_67;
                v44 = 0;
                v60 = v36 - 1;
                v61 = v35 / v36;
                v62 = v36;
                v65 = v38;
                v45 = v71;
                while (v44 != v43)
                {
                  if (!v38)
                    goto LABEL_58;
                  v46 = v44 / v38 * v63;
                  if ((unsigned __int128)(v44 / v38 * (__int128)v63) >> 64 != v46 >> 63)
                    goto LABEL_59;
                  v47 = v46 + v44 % v38;
                  if (__OFADD__(v46, v44 % v38))
                    goto LABEL_60;
                  v64 = v44;
                  v48 = *(_QWORD *)(v71 + 72);
                  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 24))(v72 + v48 * v47, v70 + v48 * v47, a7);
                  v49 = v47 + v38;
                  if (__OFADD__(v47, v38))
                    goto LABEL_51;
                  if (v62 != 1)
                  {
                    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16);
                    v51 = v60;
                    v52 = v47;
                    v69 = v48;
                    do
                    {
                      result = v50(v13, v72 + v48 * v52, a7);
                      if (__OFADD__(v47, v38))
                        goto LABEL_52;
                      v53 = v70 + v48 * (v47 + v38);
                      v54 = v67;
                      v55 = v50;
                      v50(v67, v53, a7);
                      v56 = v66;
                      sub_19CAA9BC0();
                      v57 = *(void (**)(char *, uint64_t))(v45 + 8);
                      v58 = v54;
                      v48 = v69;
                      v57(v58, a7);
                      v57(v13, a7);
                      v38 = v65;
                      result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 40))(v72 + v48 * v49, v56, a7);
                      if (__OFADD__(v49, v38))
                        goto LABEL_51;
                      v52 = v49;
                      v47 += v38;
                      v49 += v38;
                      --v51;
                      v50 = v55;
                    }
                    while (v51);
                  }
                  v44 = v64 + 1;
                  v43 = v61;
                  if (v64 + 1 == v61)
                    return result;
                }
                goto LABEL_57;
              }
              return result;
            }
          }
        }
      }
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

void sub_19C57D190(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_19C57D1E8()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = MEMORY[0x1E0DEDE70];
  v7 = swift_conformsToProtocol2();
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = v6;
  else
    v9 = 0;
  if (v9)
    return v0(v9, v5, v4, v2, v3, v1, v9, v8);
  v11 = sub_19CAA9440();
  sub_19C575B64();
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v12, *MEMORY[0x1E0DE97B0], v11);
  return swift_willThrow();
}

uint64_t sub_19C57D2EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD v8[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v3);
  v8[3] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v8[1] = *(_QWORD *)(v5 - 8);
  v8[2] = v5;
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8[0] = v1;
    v8[5] = MEMORY[0x1E0DEE9D8];
    sub_19C557248(0, v6, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C57D520(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  MEMORY[0x1E0C80A78](v2);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_19C557248(0, v3, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_19C57D6C8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x19C57D844);
}

uint64_t sub_19C57D854(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int16 v29;
  int v30;
  __int16 v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;

  v10 = sub_19CAAA1B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  v36 = a3;
  v14 = *(_QWORD *)(a1 + 168);
  if (!v14)
    goto LABEL_11;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15 = *(_QWORD *)(a2 + 168);
  if (v15)
  {
    v16 = *(_DWORD *)(a1 + 176);
    v35 = a4;
    v17 = *(_QWORD *)(a1 + 184);
    v18 = *(_DWORD *)(a1 + 192);
    v51 = *(_QWORD *)(a1 + 32);
    v52 = *(_OWORD *)(a1 + 40);
    v53 = *(_OWORD *)(a1 + 56);
    v54 = *(_OWORD *)(a1 + 72);
    v55 = *(_OWORD *)(a1 + 88);
    v56 = *(_OWORD *)(a1 + 104);
    v57 = *(_OWORD *)(a1 + 120);
    v58 = *(_OWORD *)(a1 + 136);
    v59 = *(_OWORD *)(a1 + 152);
    v60 = v14;
    v61 = v16;
    v62 = v17;
    v63 = v18;
    v64 = *(_QWORD *)(a1 + 196);
    v19 = sub_19CAA9D94();
    v20 = *(_DWORD *)(a2 + 176);
    v34 = a5;
    v21 = v14 + v19;
    v22 = *(_QWORD *)(a2 + 184);
    v23 = *(_DWORD *)(a2 + 192);
    v37 = *(_QWORD *)(a2 + 32);
    v24 = *(_OWORD *)(a2 + 56);
    v38 = *(_OWORD *)(a2 + 40);
    v39 = v24;
    v25 = *(_OWORD *)(a2 + 88);
    v40 = *(_OWORD *)(a2 + 72);
    v41 = v25;
    v26 = *(_OWORD *)(a2 + 120);
    v42 = *(_OWORD *)(a2 + 104);
    v43 = v26;
    v27 = *(_OWORD *)(a2 + 152);
    v44 = *(_OWORD *)(a2 + 136);
    v45 = v27;
    v46 = v15;
    v47 = v20;
    v48 = v22;
    v49 = v23;
    v50 = *(_QWORD *)(a2 + 196);
    v28 = v15 + sub_19CAA9D94();
    v29 = *(unsigned __int8 *)(v36 + 32);
    v30 = *(unsigned __int8 *)(v36 + 33);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DED4D8], v10);
    if (v30)
      v31 = 256;
    else
      v31 = 0;
    sub_19C593E88(v14, v21, v35 & 0x1FF, v15, v28, v31 | v29, v34, (uint64_t)v13);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_11:
  v33 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v33 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v51 = 0;
    *(_QWORD *)&v52 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    LOBYTE(v37) = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C57DBB4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;

  sub_19CAA92D8();
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!a2[2])
  {
LABEL_6:
    __break(1u);

    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (sub_19CAA92CC())
  {
    sub_19CAA9284();
    return swift_release();
  }
LABEL_7:
  v5 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

void sub_19C57DE1C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  unint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;

  v56 = a7;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_19CAA9488();
  v59 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v60 = (char *)a5;
    if (*(_QWORD *)(a1 + 168))
    {
      v24 = *(_QWORD *)(a2 + 16);
      if (!v24)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v7 = *(_QWORD *)(a2 + 168);
      if (v7)
      {
        v49 = *(_QWORD *)(a1 + 168);
        v50 = v23;
        v51 = v16;
        v54 = v22;
        v55 = a6;
        v58 = (char *)&v44 - v21;
        v25 = *(_QWORD *)(*((_QWORD *)a3 + 4) + 16);
        sub_19C551E9C((uint64_t)a3);
        a5 = sub_19C580B5C(0, v25, a3);
        sub_19C515110((uint64_t)a3);
        v26 = sub_19C57EAE0(a4);
        a6 = *(_QWORD *)(v26 + 16);
        v61 = a5;
        v47 = a3;
        v52 = v7;
        v53 = 0;
        if (!a6 || (v16 = *(char **)(a5 + 16)) == 0)
        {
          swift_bridgeObjectRetain();
          v28 = 0;
          v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          goto LABEL_13;
        }
        a1 = *(_QWORD *)(v26 + 32);
        v27 = *(_QWORD *)(a5 + 48);
        a4 = a1 * v27;
        v24 = (unsigned __int128)(a1 * (__int128)v27) >> 64;
        if (v24 != a4 >> 63)
          goto LABEL_40;
        v57 = (_QWORD *)v26;
        a5 = *(_QWORD *)(a5 + 32);
        swift_bridgeObjectRetain();
        v20 = sub_19C4F9004(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v7 = v20[2];
        v24 = v20[3];
        a3 = (char *)(v7 + 1);
        if (v7 >= v24 >> 1)
LABEL_41:
          v20 = sub_19C4F9004((_QWORD *)(v24 > 1), (int64_t)a3, 1, v20);
        v20[2] = a3;
        v20[v7 + 4] = a4;
        v28 = a1 * a5;
        v29 = v57;
        if ((unsigned __int128)(a1 * (__int128)a5) >> 64 == (a1 * a5) >> 63)
        {
          if (a6 == 1)
          {
            a5 = v61;
            goto LABEL_13;
          }
          a5 = v61;
          if (v57[2] >= 2uLL)
          {
            v35 = v16 - 1;
            if (v16 == (char *)1)
              goto LABEL_13;
            v16 = 0;
            v36 = v57 + 5;
            v37 = 8 * v7 + 40;
            v38 = (char *)(a6 - 2);
            a1 = v61 + 72;
            while (1)
            {
              v24 = (unint64_t)(v16 + 1);
              if ((unint64_t)(v16 + 1) >= *(_QWORD *)(a5 + 16))
                break;
              a5 = v36[(_QWORD)v16];
              a6 = a5 * *(_QWORD *)a1;
              if ((unsigned __int128)(a5 * (__int128)*(uint64_t *)a1) >> 64 != a6 >> 63)
                goto LABEL_33;
              a4 = v17;
              v39 = v24 + v7;
              v17 = *(_QWORD *)(a1 - 16);
              v40 = v20[3];
              a3 = &v16[v7 + 2];
              if (v39 >= v40 >> 1)
              {
                v48 = v35;
                v45 = v37;
                v46 = v36;
                v44 = v38;
                v42 = sub_19C4F9004((_QWORD *)(v40 > 1), (int64_t)&v16[v7 + 2], 1, v20);
                v38 = v44;
                v37 = v45;
                v36 = v46;
                v35 = v48;
                v20 = v42;
                v29 = v57;
              }
              v20[2] = a3;
              *(_QWORD *)((char *)&v20[(_QWORD)v16] + v37) = a6;
              v24 = a5 * v17;
              if ((unsigned __int128)(a5 * (__int128)v17) >> 64 != (a5 * v17) >> 63)
                goto LABEL_34;
              v41 = __OFADD__(v28, v24);
              v28 += v24;
              if (v41)
                goto LABEL_35;
              if (v38 == v16)
              {
                v17 = a4;
                a5 = v61;
LABEL_13:
                v57 = v20;
                a3 = v60;
                v30 = v60;
                swift_bridgeObjectRelease();
                if (v30 > 0xA)
                  a6 = 8;
                else
                  a6 = qword_19CAEC398[(char)a3];
                v16 = v56;
                swift_bridgeObjectRelease();
                v24 = v28 * a6;
                if ((unsigned __int128)(v28 * (__int128)a6) >> 64 == (v28 * a6) >> 63)
                {
                  LODWORD(v60) = 1048584;
                  v31 = v55;
                  v32 = swift_bridgeObjectRetain();
                  v33 = (_QWORD *)sub_19C4F4F04(v32);
                  LODWORD(v56) = (v16 >> 8) & 1;
                  v34 = sub_19C57EAE0(v31);
                  sub_19C574500(v33, v34);
                  __asm { BR              X10 }
                }
LABEL_39:
                __break(1u);
LABEL_40:
                __break(1u);
                goto LABEL_41;
              }
              v24 = (unint64_t)(v16 + 2);
              a5 = v61;
              if ((unint64_t)(v16 + 2) >= v29[2])
                goto LABEL_36;
              v17 = a4;
              ++v16;
              a1 += 24;
              if (v35 == v16)
                goto LABEL_13;
            }
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
    }
    v43 = qword_1EE422E38;
    swift_bridgeObjectRetain();
    if (v43 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      v63 = 0;
      v64 = 0xE000000000000000;
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      v62 = 0;
      sub_19CAAA064();
      sub_19CAA992C();
    }
    sub_19CAAA0B8();
    __break(1u);
    JUMPOUT(0x19C57EA84);
  }
LABEL_37:
  __break(1u);
  goto LABEL_38;
}

uint64_t sub_19C57EAE0(uint64_t a1)
{
  int64_t v1;
  uint64_t result;
  _QWORD *v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  result = sub_19C500C0C(1uLL, v1);
  v4 = (_QWORD *)result;
  v5 = 0;
  v6 = v1 - 2;
  v7 = a1 + 32;
  v8 = v1 - 3;
  if (v1 - 2 >= 1)
    goto LABEL_5;
LABEL_3:
  if ((v6 != 0) | v5 & 1)
    return (uint64_t)v4;
  v8 = 0;
  v5 = 1;
LABEL_5:
  while (1)
  {
    v9 = v6 + 1;
    if ((int64_t)(v6 + 1) >= v4[2])
      break;
    if (v9 >= v1)
      goto LABEL_17;
    v10 = v9;
    v11 = v4[v10 + 4];
    v12 = *(_QWORD *)(v7 + v10 * 8);
    v13 = v11 * v12;
    if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
      goto LABEL_18;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v4);
      v4 = (_QWORD *)result;
    }
    if (v6 >= v4[2])
      goto LABEL_19;
    v4[v6 + 4] = v13;
    v6 = v8;
    v14 = __OFSUB__(v8--, 1);
    if (v8 < 0 != v14)
      goto LABEL_3;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_19C57EBEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (*(_BYTE *)(v3 + 32) == 1)
    goto LABEL_6;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5 != v6)
  {
    if (v5 >= v6)
    {
      __break(1u);
    }
    else
    {
      v7 = *(_QWORD *)(*(_QWORD *)v3 + 8 * v5 + 32);
      *(_QWORD *)(v3 + 8) = v5 + 1;
      v9 = *(_QWORD *)(v3 + 16);
      v8 = *(_QWORD *)(v3 + 24);
      v10 = *(_QWORD *)(v9 + 16);
      if (v8 == v10)
        goto LABEL_5;
      if (v8 < v10)
      {
        v12 = (_OWORD *)(v9 + 176 * v8);
        v24 = v12[9];
        v25 = v12[10];
        v26 = v12[11];
        v27 = v12[12];
        v20 = v12[5];
        v21 = v12[6];
        v22 = v12[7];
        v23 = v12[8];
        v18 = v12[2];
        v19 = v12[3];
        v13 = v20;
        *(_OWORD *)(a3 + 40) = v12[4];
        v14 = v18;
        *(_OWORD *)(a3 + 24) = v19;
        *(_OWORD *)(a3 + 8) = v14;
        v15 = v24;
        *(_OWORD *)(a3 + 104) = v23;
        v16 = v21;
        *(_OWORD *)(a3 + 88) = v22;
        *(_OWORD *)(a3 + 72) = v16;
        *(_OWORD *)(a3 + 56) = v13;
        *(_OWORD *)(a3 + 168) = v27;
        v17 = v25;
        *(_OWORD *)(a3 + 152) = v26;
        *(_OWORD *)(a3 + 136) = v17;
        *(_QWORD *)(v3 + 24) = v8 + 1;
        *(_QWORD *)a3 = v7;
        *(_OWORD *)(a3 + 120) = v15;
        nullsub_1(a3, a1, a2);
        return swift_retain();
      }
    }
    __break(1u);
    return result;
  }
LABEL_5:
  *(_BYTE *)(v3 + 32) = 1;
LABEL_6:
  sub_19C5811B8((uint64_t)&v18);
  return sub_19C4DCE08((uint64_t)&v18, a3, &qword_1EE4243E8);
}

void sub_19C57ED4C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16) >= 3uLL)
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C57EEF0);
}

void sub_19C57EF14(uint64_t a1, uint64_t a2, size_t a3)
{
  void *v3;
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unsigned int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[11];
  _OWORD v34[11];
  _OWORD v35[11];
  _OWORD v36[11];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = *(_OWORD *)(a1 + 160);
  v6 = *(_OWORD *)(a1 + 176);
  v7 = *(_OWORD *)(a1 + 128);
  v33[7] = *(_OWORD *)(a1 + 144);
  v33[8] = v5;
  v8 = *(_OWORD *)(a1 + 192);
  v33[9] = v6;
  v33[10] = v8;
  v9 = *(_OWORD *)(a1 + 112);
  v33[4] = *(_OWORD *)(a1 + 96);
  v33[5] = v9;
  v33[6] = v7;
  v10 = *(_OWORD *)(a1 + 48);
  v33[0] = *(_OWORD *)(a1 + 32);
  v33[1] = v10;
  v11 = *(_OWORD *)(a1 + 80);
  v33[2] = *(_OWORD *)(a1 + 64);
  v33[3] = v11;
  if (v4 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v12 = *(_OWORD *)(a1 + 352);
  v34[8] = *(_OWORD *)(a1 + 336);
  v34[9] = v12;
  v34[10] = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 288);
  v34[4] = *(_OWORD *)(a1 + 272);
  v34[5] = v13;
  v14 = *(_OWORD *)(a1 + 320);
  v34[6] = *(_OWORD *)(a1 + 304);
  v34[7] = v14;
  v15 = *(_OWORD *)(a1 + 224);
  v34[0] = *(_OWORD *)(a1 + 208);
  v34[1] = v15;
  v16 = *(_OWORD *)(a1 + 256);
  v34[2] = *(_OWORD *)(a1 + 240);
  v34[3] = v16;
  if (v4 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = *(_OWORD *)(a1 + 528);
  v35[8] = *(_OWORD *)(a1 + 512);
  v35[9] = v17;
  v35[10] = *(_OWORD *)(a1 + 544);
  v18 = *(_OWORD *)(a1 + 464);
  v35[4] = *(_OWORD *)(a1 + 448);
  v35[5] = v18;
  v19 = *(_OWORD *)(a1 + 496);
  v35[6] = *(_OWORD *)(a1 + 480);
  v35[7] = v19;
  v20 = *(_OWORD *)(a1 + 400);
  v35[0] = *(_OWORD *)(a1 + 384);
  v35[1] = v20;
  v21 = *(_OWORD *)(a1 + 432);
  v35[2] = *(_OWORD *)(a1 + 416);
  v35[3] = v21;
  if (*(_QWORD *)(a2 + 16))
  {
    v23 = *(_OWORD *)(a2 + 176);
    v36[8] = *(_OWORD *)(a2 + 160);
    v36[9] = v23;
    v36[10] = *(_OWORD *)(a2 + 192);
    v24 = *(_OWORD *)(a2 + 112);
    v36[4] = *(_OWORD *)(a2 + 96);
    v36[5] = v24;
    v25 = *(_OWORD *)(a2 + 144);
    v36[6] = *(_OWORD *)(a2 + 128);
    v36[7] = v25;
    v26 = *(_OWORD *)(a2 + 48);
    v36[0] = *(_OWORD *)(a2 + 32);
    v36[1] = v26;
    v27 = *(_OWORD *)(a2 + 80);
    v36[2] = *(_OWORD *)(a2 + 64);
    v36[3] = v27;
    sub_19CAA9DD0();
    v28 = sub_19CAA9D70();
    sub_19C575438(a3, v33, v34, v35, v36, v28, v29, v30, v31);
    return;
  }
LABEL_9:
  __break(1u);

  v32 = qword_1EE422E38;
  swift_bridgeObjectRetain();
  if (v32 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  sub_19CAAA0B8();
  __break(1u);
}

void sub_19C57F1C8(uint64_t a1)
{
  __asm { BR              X10 }
}

_QWORD *sub_19C57F1FC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v1 = *(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_19C500C0C(1uLL, v2);
  v4 = 0;
  v5 = v2 - 2;
  v6 = v2 - 3;
  if ((uint64_t)(v2 - 2) >= 1)
    goto LABEL_5;
LABEL_3:
  if (!((v5 != 0) | v4 & 1))
  {
    v6 = 0;
    v4 = 1;
LABEL_5:
    while (1)
    {
      v7 = v5 + 1;
      if ((int64_t)(v5 + 1) >= v3[2])
        break;
      if (v7 >= *(_QWORD *)(v1 + 16))
        goto LABEL_18;
      v8 = v7;
      v9 = v3[v8 + 4];
      v10 = *(_QWORD *)(v1 + 32 + v8 * 8);
      v11 = v9 * v10;
      if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
        goto LABEL_19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_19C503550(v3);
      if (v5 >= v3[2])
        goto LABEL_20;
      v3[v5 + 4] = v11;
      v5 = v6;
      v12 = __OFSUB__(v6--, 1);
      if (v6 < 0 != v12)
        goto LABEL_3;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    JUMPOUT(0x19C57F324);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_19C57F334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t *v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t *v46;
  _OWORD *v47;
  uint64_t v48;
  _OWORD *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD v62[20];
  _DWORD v63[3];
  uint64_t v64;
  _OWORD v65[11];
  uint64_t v66[23];
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[184];
  _OWORD v85[11];
  _OWORD v86[4];
  _OWORD v87[4];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _BYTE v92[376];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114[3];

  v54 = a4;
  v55 = a2;
  v8 = sub_19CAA9488();
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v41 - v11;
  v79 = a3;
  v80 = 0;
  v81 = a1;
  v82 = 0;
  v83 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C57EBEC(v12, v13, (uint64_t)v65);
  sub_19C4DCE08((uint64_t)v65, (uint64_t)v66, &qword_1EE4243E8);
  sub_19C4DCE08((uint64_t)v66, (uint64_t)&v67, &qword_1EE4243E8);
  if (sub_19C581124(&v67) != 1)
  {
    v58 = 0;
    v48 = (uint64_t)&v88 + 8;
    v49 = (_OWORD *)(v55 + 32);
    v46 = &v61;
    v47 = (_OWORD *)((char *)v86 + 8);
    v44 = v62;
    v45 = (_OWORD *)((char *)v87 + 8);
    v42 = v63;
    v43 = (uint64_t)&v89 + 8;
    v41 = a5;
    v111 = v76;
    v112 = v77;
    v113 = v78;
    v107 = v72;
    v108 = v73;
    v109 = v74;
    v110 = v75;
    v103 = v68;
    v104 = v69;
    v105 = v70;
    v106 = v71;
    if (*(_QWORD *)(a5 + 16))
    {
      if (*(_QWORD *)(v55 + 16))
      {
        v56 = 0;
        v57 = v67;
        v14 = *(_QWORD *)(a5 + 32);
        v15 = v49[9];
        v100 = v49[8];
        v101 = v15;
        v102 = v49[10];
        v16 = v49[5];
        v96 = v49[4];
        v97 = v16;
        v17 = v49[7];
        v98 = v49[6];
        v99 = v17;
        v18 = v49[1];
        *(_OWORD *)&v92[360] = *v49;
        v93 = v18;
        v19 = v49[3];
        v94 = v49[2];
        v95 = v19;
        v65[8] = v76;
        v65[9] = v77;
        v65[10] = v78;
        v65[4] = v72;
        v65[5] = v73;
        v65[6] = v74;
        v65[7] = v75;
        v65[0] = v68;
        v65[1] = v69;
        v65[2] = v70;
        v65[3] = v71;
        v20 = *((_QWORD *)&v100 + 1);
        if (*((_QWORD *)&v100 + 1))
        {
          v21 = v77;
          v59 = v14 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain_n();
          v22 = v50;
          sub_19CAA9D88();
          v23 = v51;
          sub_19CAA9D88();
          v24 = sub_19C5740F0();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v53);
          sub_19C5751CC(v20, v21, v22, v24, (uint64_t)v84);
          swift_bridgeObjectRelease();
          sub_19C4DCE08((uint64_t)v84, (uint64_t)v85, &qword_1EE4233E8);
          if (sub_19C4DCDEC((uint64_t)v85) != 1)
          {
            v87[3] = v85[7];
            v88 = v85[8];
            v89 = v85[9];
            v90 = v85[10];
            v86[3] = v85[3];
            v87[0] = v85[4];
            v87[1] = v85[5];
            v87[2] = v85[6];
            v86[0] = v85[0];
            v86[1] = v85[1];
            v86[2] = v85[2];
            sub_19C4DCE08(v48, (uint64_t)&v91, &qword_1EE4233F0);
            v60 = *(_QWORD *)&v86[0];
            v26 = v46;
            v25 = v47;
            v27 = v47[1];
            *(_OWORD *)v46 = *v47;
            *((_OWORD *)v26 + 1) = v27;
            v28 = v25[3];
            *((_OWORD *)v26 + 2) = v25[2];
            *((_OWORD *)v26 + 3) = v28;
            v30 = v44;
            v29 = v45;
            v31 = v45[1];
            *v44 = *v45;
            v30[1] = v31;
            v32 = v29[3];
            v30[2] = v29[2];
            v30[3] = v32;
            v62[18] = v89;
            sub_19C4DCE08(v43, (uint64_t)v92, &qword_1EE4233F0);
            sub_19C4DCE08((uint64_t)v92, (uint64_t)v42, &qword_1EE4233F0);
            v63[2] = v90;
            v64 = *(_QWORD *)((char *)&v90 + 4);
            sub_19C4DCE08((uint64_t)&v91, (uint64_t)v114, &qword_1EE4233F0);
            if (v114[0])
            {
              sub_19C57F1C8(v14);
              v34 = *(_QWORD *)(v54 + 32);
              if ((v34 & 0x8000000000000000) == 0)
              {
                if (v34 < *(_QWORD *)(v33 + 16))
                {
                  v35 = *(_QWORD *)(v33 + 8 * v34 + 32);
                  swift_bridgeObjectRelease();
                  if ((unsigned __int128)(v58 * (__int128)v35) >> 64 == (v58 * v35) >> 63)
                    __asm { BR              X9 }
LABEL_16:
                  __break(1u);
                  JUMPOUT(0x19C57F9FCLL);
                }
LABEL_15:
                __break(1u);
                goto LABEL_16;
              }
LABEL_14:
              __break(1u);
              goto LABEL_15;
            }
          }
        }
        else
        {
          __break(1u);
        }
        v37 = sub_19CAA9440();
        sub_19C575B64();
        v38 = (void *)swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DE97C0], v37);
        swift_willThrow();
        swift_release_n();
        sub_19C581150(v66);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = qword_1EE422E38;
        swift_bridgeObjectRetain();
        if (v40 != -1)
          swift_once();
        if ((byte_1EE4317C9 & 1) != 0)
        {
          *(_QWORD *)&v65[0] = 0;
          *((_QWORD *)&v65[0] + 1) = 0xE000000000000000;
          sub_19CAA9F2C();
          sub_19CAA992C();
          sub_19CAA992C();
          sub_19CAA992C();
          LOBYTE(v60) = 0;
          sub_19CAAA064();
          sub_19CAA992C();
        }
        sub_19CAAA0B8();
        __break(1u);
        JUMPOUT(0x19C57FBECLL);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19C57FC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t *v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  _DWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t *v46;
  _OWORD *v47;
  uint64_t v48;
  _OWORD *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD v62[20];
  _DWORD v63[3];
  uint64_t v64;
  _OWORD v65[11];
  uint64_t v66[23];
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[184];
  _OWORD v85[11];
  _OWORD v86[4];
  _OWORD v87[4];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _BYTE v92[376];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114[3];

  v54 = a4;
  v55 = a1;
  v8 = sub_19CAA9488();
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v51 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)v41 - v11;
  v79 = a3;
  v80 = 0;
  v81 = a2;
  v82 = 0;
  v83 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19C57EBEC(v12, v13, (uint64_t)v65);
  sub_19C4DCE08((uint64_t)v65, (uint64_t)v66, &qword_1EE4243E8);
  sub_19C4DCE08((uint64_t)v66, (uint64_t)&v67, &qword_1EE4243E8);
  if (sub_19C581124(&v67) != 1)
  {
    v59 = 0;
    v48 = (uint64_t)&v88 + 8;
    v49 = (_OWORD *)(v55 + 32);
    v46 = &v61;
    v47 = (_OWORD *)((char *)v86 + 8);
    v44 = v62;
    v45 = (_OWORD *)((char *)v87 + 8);
    v42 = v63;
    v43 = (uint64_t)&v89 + 8;
    v41[1] = a5;
    v111 = v76;
    v112 = v77;
    v113 = v78;
    v107 = v72;
    v108 = v73;
    v109 = v74;
    v110 = v75;
    v103 = v68;
    v104 = v69;
    v105 = v70;
    v106 = v71;
    if (*(_QWORD *)(a5 + 16))
    {
      if (*(_QWORD *)(v55 + 16))
      {
        v58 = v67;
        v56 = 0;
        v14 = *(_QWORD *)(a5 + 32);
        v15 = v49[9];
        v100 = v49[8];
        v101 = v15;
        v102 = v49[10];
        v16 = v49[5];
        v96 = v49[4];
        v97 = v16;
        v17 = v49[7];
        v98 = v49[6];
        v99 = v17;
        v18 = v49[1];
        *(_OWORD *)&v92[360] = *v49;
        v93 = v18;
        v19 = v49[3];
        v94 = v49[2];
        v95 = v19;
        v65[8] = v76;
        v65[9] = v77;
        v65[10] = v78;
        v65[4] = v72;
        v65[5] = v73;
        v65[6] = v74;
        v65[7] = v75;
        v65[0] = v68;
        v65[1] = v69;
        v65[2] = v70;
        v65[3] = v71;
        v20 = *((_QWORD *)&v100 + 1);
        if (*((_QWORD *)&v100 + 1))
        {
          v21 = v77;
          v57 = v14 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain_n();
          v22 = v50;
          sub_19CAA9D88();
          v23 = v51;
          sub_19CAA9D88();
          v24 = sub_19C5740F0();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v53);
          sub_19C5751CC(v20, v21, v22, v24, (uint64_t)v84);
          swift_bridgeObjectRelease();
          sub_19C4DCE08((uint64_t)v84, (uint64_t)v85, &qword_1EE4233E8);
          if (sub_19C4DCDEC((uint64_t)v85) != 1)
          {
            v87[3] = v85[7];
            v88 = v85[8];
            v89 = v85[9];
            v90 = v85[10];
            v86[3] = v85[3];
            v87[0] = v85[4];
            v87[1] = v85[5];
            v87[2] = v85[6];
            v86[0] = v85[0];
            v86[1] = v85[1];
            v86[2] = v85[2];
            sub_19C4DCE08(v48, (uint64_t)&v91, &qword_1EE4233F0);
            v60 = *(_QWORD *)&v86[0];
            v26 = v46;
            v25 = v47;
            v27 = v47[1];
            *(_OWORD *)v46 = *v47;
            *((_OWORD *)v26 + 1) = v27;
            v28 = v25[3];
            *((_OWORD *)v26 + 2) = v25[2];
            *((_OWORD *)v26 + 3) = v28;
            v30 = v44;
            v29 = v45;
            v31 = v45[1];
            *v44 = *v45;
            v30[1] = v31;
            v32 = v29[3];
            v30[2] = v29[2];
            v30[3] = v32;
            v62[18] = v89;
            sub_19C4DCE08(v43, (uint64_t)v92, &qword_1EE4233F0);
            sub_19C4DCE08((uint64_t)v92, (uint64_t)v42, &qword_1EE4233F0);
            v63[2] = v90;
            v64 = *(_QWORD *)((char *)&v90 + 4);
            sub_19C4DCE08((uint64_t)&v91, (uint64_t)v114, &qword_1EE4233F0);
            if (v114[0])
            {
              sub_19C57F1C8(v14);
              v34 = *(_QWORD *)(v54 + 16);
              if ((v34 & 0x8000000000000000) == 0)
              {
                if (v34 < *(_QWORD *)(v33 + 16))
                {
                  v35 = *(_QWORD *)(v33 + 8 * v34 + 32);
                  swift_bridgeObjectRelease();
                  if ((unsigned __int128)(v59 * (__int128)v35) >> 64 == (v59 * v35) >> 63)
                    __asm { BR              X10 }
LABEL_16:
                  __break(1u);
                  JUMPOUT(0x19C5802F8);
                }
LABEL_15:
                __break(1u);
                goto LABEL_16;
              }
LABEL_14:
              __break(1u);
              goto LABEL_15;
            }
          }
        }
        else
        {
          __break(1u);
        }
        v37 = sub_19CAA9440();
        sub_19C575B64();
        v38 = (void *)swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DE97C0], v37);
        swift_willThrow();
        swift_release_n();
        sub_19C581150(v66);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = qword_1EE422E38;
        swift_bridgeObjectRetain();
        if (v40 != -1)
          swift_once();
        if ((byte_1EE4317C9 & 1) != 0)
        {
          *(_QWORD *)&v65[0] = 0;
          *((_QWORD *)&v65[0] + 1) = 0xE000000000000000;
          sub_19CAA9F2C();
          sub_19CAA992C();
          sub_19CAA992C();
          sub_19CAA992C();
          LOBYTE(v60) = 0;
          sub_19CAAA064();
          sub_19CAA992C();
        }
        sub_19CAAA0B8();
        __break(1u);
        JUMPOUT(0x19C5804E8);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_19C580518(uint64_t a1, uint64_t a2)
{
  sub_19C57D520(a1);
  sub_19C57D520(a2);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C5806ACLL);
}

void sub_19C5806BC(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_19C58070C()
{
  uint64_t *v0;
  _QWORD *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = MEMORY[0x1E0DEDE70];
  if (swift_conformsToProtocol2())
    v6 = v5;
  else
    v6 = 0;
  if (!v6)
  {
LABEL_12:
    v9 = qword_1EE422E38;
    swift_bridgeObjectRetain();
    if (v9 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAAA064();
      sub_19CAA992C();
    }
    sub_19CAAA0B8();
    __break(1u);
    JUMPOUT(0x19C580910);
  }
  if (!*(_QWORD *)(v4 + 16))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = *(_QWORD *)(v4 + 168);
  if (!v7)
    goto LABEL_12;
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_11;
  v8 = *(_QWORD *)(v3 + 168);
  if (!v8)
    goto LABEL_12;
  sub_19C580D1C(v6, v7, v1, v2, v8, *v0, v6);
}

uint64_t sub_19C580940()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19C58097C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C5806BC(a1, a2, *(_BYTE *)(v2 + 16));
}

void sub_19C5809A0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *v0;
  v3 = (unint64_t *)(*v0 + 16);
  v4 = *v3;
  if (*v3)
  {
    v5 = (_QWORD *)v0[1];
    v6 = v5[2];
    if (v6)
    {
      v7 = v2 + 32;
      v8 = *(_QWORD *)(v2 + 32);
      if (__OFSUB__(v8, 1))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v5[4] != v8 - 1)
      {
LABEL_12:
        if (v4 <= v6)
        {
          v1 = v4 - 1;
          v13 = *(_QWORD *)(v7 + 8 * (v4 - 1));
          v14 = __OFSUB__(v13, 1);
          v15 = v13 - 1;
          if (!v14)
          {
            if (v5[v1 + 4] >= v15)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                goto LABEL_16;
              goto LABEL_43;
            }
LABEL_24:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
LABEL_25:
              if (v1 >= v5[2])
              {
                __break(1u);
              }
              else
              {
                v21 = v5[v1 + 4];
                v14 = __OFADD__(v21, 1);
                v22 = v21 + 1;
                if (!v14)
                {
                  v5[v1 + 4] = v22;
LABEL_28:
                  v0[1] = v5;
                  return;
                }
              }
              __break(1u);
LABEL_43:
              v5 = sub_19C503550(v5);
LABEL_16:
              v16 = &v5[v4 + 3];
              while (1)
              {
                v17 = v4 - 1;
                if (v4 == 1)
                  goto LABEL_28;
                if (v17 >= v5[2])
                {
                  __break(1u);
LABEL_31:
                  __break(1u);
LABEL_32:
                  __break(1u);
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
                *v16 = 0;
                if (v4 - 2 >= v5[2])
                  goto LABEL_31;
                if (v4 - 2 >= *v3)
                  goto LABEL_32;
                v18 = v3[v4];
                v14 = __OFSUB__(v18, 1);
                v19 = v18 - 1;
                if (v14)
                  goto LABEL_33;
                v20 = *--v16;
                --v4;
                if (v20 < v19)
                {
                  v1 = v17 - 1;
                  goto LABEL_24;
                }
              }
            }
LABEL_40:
            v5 = sub_19C503550(v5);
            goto LABEL_25;
          }
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v9 = v4 - 1;
      if (v4 == 1)
        return;
      v10 = v6 - 1;
      v11 = v5 + 5;
      v12 = (_QWORD *)(v2 + 40);
      while (v10)
      {
        if (__OFSUB__(*v12, 1))
          goto LABEL_35;
        if (*v11 != *v12 - 1)
          goto LABEL_12;
        --v10;
        ++v11;
        ++v12;
        if (!--v9)
          return;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
}

uint64_t sub_19C580B5C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = a2 - result;
  if (__OFSUB__(a2, result))
    goto LABEL_30;
  v4 = result;
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    v33 = v4;
    result = sub_19C557148(0, v3 & ~(v3 >> 63), 0);
    v7 = v33;
    if (a2 < v33 || v3 < 0)
      goto LABEL_31;
    v8 = 0;
    v9 = a3[4];
    v10 = a3[5];
    v11 = a3[6];
    v12 = *(_QWORD *)(v9 + 16);
    if (v12 <= v33)
      v12 = v33;
    v13 = v12 - v33;
    if (*(_QWORD *)(v10 + 16) <= v33)
      v14 = v33;
    else
      v14 = *(_QWORD *)(v10 + 16);
    v15 = v14 - v33;
    if (*(_QWORD *)(v11 + 16) <= v33)
      v16 = v33;
    else
      v16 = *(_QWORD *)(v11 + 16);
    v17 = v16 - v33;
    v18 = 8 * v33 + 32;
    result = v34;
    v19 = v9 + v18;
    v20 = v10 + v18;
    v21 = v11 + v18;
    while (v3 != v8)
    {
      if (v7 < 0)
        goto LABEL_25;
      if (v13 == v8)
        goto LABEL_26;
      if (v15 == v8)
        goto LABEL_27;
      v22 = *(_QWORD *)(v19 + 8 * v8);
      v23 = *(_QWORD *)(v20 + 8 * v8);
      if (v23 < v22)
        goto LABEL_28;
      if (v17 == v8)
        goto LABEL_29;
      v24 = *(_QWORD *)(v21 + 8 * v8);
      v35 = result;
      v26 = *(_QWORD *)(result + 16);
      v25 = *(_QWORD *)(result + 24);
      if (v26 >= v25 >> 1)
      {
        v31 = v15;
        v32 = v13;
        v29 = v19;
        v30 = v17;
        v28 = v20;
        sub_19C557148(v25 > 1, v26 + 1, 1);
        v20 = v28;
        v19 = v29;
        v17 = v30;
        v15 = v31;
        v13 = v32;
        v7 = v33;
        result = v35;
      }
      ++v8;
      *(_QWORD *)(result + 16) = v26 + 1;
      v27 = (_QWORD *)(result + 24 * v26);
      v27[4] = v22;
      v27[5] = v23;
      v27[6] = v24;
      if (v3 == v8)
        return result;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  return result;
}

void sub_19C580D1C(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v55;
  _QWORD *v56;
  uint64_t v57;

  v9 = a3[2];
  if (v9)
  {
    v10 = a3 + 4;
    v11 = 1;
    v12 = a3[2];
    do
    {
      v13 = *v10++;
      v14 = v11 * v13;
      if ((unsigned __int128)(v11 * (__int128)v13) >> 64 != (v11 * v13) >> 63)
        goto LABEL_73;
      v11 = v14;
      --v12;
    }
    while (v12);
  }
  else
  {
    v14 = 1;
  }
  if (a4 > 0xAu)
    v15 = 8;
  else
    v15 = qword_19CAEC398[(char)a4];
  if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
    goto LABEL_79;
  if (v9)
  {
    v16 = a3 + 4;
    v17 = 1;
    v18 = a3[2];
    do
    {
      v19 = *v16++;
      v20 = v17 * v19;
      if ((unsigned __int128)(v17 * (__int128)v19) >> 64 != (v17 * v19) >> 63)
        goto LABEL_74;
      v17 = v20;
      --v18;
    }
    while (v18);
  }
  else
  {
    v20 = 1;
  }
  if ((unsigned __int128)(v20 * (__int128)v15) >> 64 == (v20 * v15) >> 63)
  {
    swift_bridgeObjectRetain();
    v56 = a3;
    v57 = sub_19C500C0C(0, v9);
    v21 = *(_QWORD *)(a6 + 16);
    v22 = a3 + 4;
    while (1)
    {
      v24 = v56;
      v25 = v56[2];
      if (!v25)
        goto LABEL_31;
      v26 = *(_QWORD *)(v57 + 16);
      if (!v26)
        goto LABEL_75;
      v27 = v56[4];
      v28 = __OFSUB__(v27, 1);
      v29 = v27 - 1;
      if (v28)
        goto LABEL_76;
      if (*(_QWORD *)(v57 + 32) == v29)
        break;
LABEL_51:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19C5809A0();
      v55 = 0;
      if (v21)
      {
LABEL_32:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34 = 0;
        v35 = (_QWORD *)v57;
        do
        {
          v36 = *(_QWORD *)(a6 + 8 * v34 + 32);
          if (v36 >= v9)
          {
            __break(1u);
            goto LABEL_63;
          }
          v37 = v22[v36];
          if (v37)
          {
            v28 = __OFSUB__(v37, 1);
            v38 = v37 - 1;
            if (v28)
              goto LABEL_67;
            if (v36 >= *(_QWORD *)(v57 + 16))
              goto LABEL_68;
            v39 = *(_QWORD *)(v57 + 32 + 8 * v36);
            v40 = v38 - v39;
            if (__OFSUB__(v38, v39))
              goto LABEL_69;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v35 = sub_19C503550(v35);
            if (v36 >= v35[2])
              goto LABEL_70;
            v35[v36 + 4] = v40;
          }
          ++v34;
        }
        while (v21 != v34);
        swift_bridgeObjectRelease();
        v24 = v56;
        v41 = v56[2];
        if (!v41)
          goto LABEL_53;
LABEL_45:
        if (v41 > v35[2])
          goto LABEL_77;
        v42 = 0;
        v43 = 0;
        while (1)
        {
          v44 = v24[v43 + 4];
          v45 = v42 * v44;
          if ((unsigned __int128)(v42 * (__int128)v44) >> 64 != (v42 * v44) >> 63)
            break;
          v46 = v35[v43 + 4];
          v42 = v45 + v46;
          if (__OFADD__(v45, v46))
            goto LABEL_64;
          if (v41 == ++v43)
          {
            swift_bridgeObjectRelease();
            goto LABEL_54;
          }
        }
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
LABEL_52:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = (_QWORD *)v57;
      v41 = v56[2];
      if (v41)
        goto LABEL_45;
LABEL_53:
      swift_bridgeObjectRelease();
      v42 = 0;
LABEL_54:
      swift_bridgeObjectRelease();
      v47 = v24[2];
      if (v47)
      {
        if (v47 > *(_QWORD *)(v57 + 16))
          goto LABEL_78;
        v23 = 0;
        v48 = 0;
        while (1)
        {
          v49 = v24[v48 + 4];
          v50 = v23 * v49;
          if ((unsigned __int128)(v23 * (__int128)v49) >> 64 != (v23 * v49) >> 63)
            goto LABEL_65;
          v51 = *(_QWORD *)(v57 + 8 * v48 + 32);
          v23 = v50 + v51;
          if (__OFADD__(v50, v51))
            goto LABEL_66;
          if (v47 == ++v48)
          {
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
        }
      }
      swift_bridgeObjectRelease();
      v23 = 0;
LABEL_20:
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 24))(a5 + *(_QWORD *)(*(_QWORD *)(a7 - 8) + 72) * v42, a2 + *(_QWORD *)(*(_QWORD *)(a7 - 8) + 72) * v23);
      if ((v55 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    v30 = v25 - 1;
    if (v30)
    {
      v31 = v26 - 1;
      v32 = (_QWORD *)(v57 + 40);
      v33 = v56 + 5;
      while (v31)
      {
        if (__OFSUB__(*v33, 1))
          goto LABEL_72;
        if (*v32 != *v33 - 1)
          goto LABEL_51;
        --v31;
        ++v32;
        ++v33;
        if (!--v30)
          goto LABEL_31;
      }
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55 = 1;
    if (v21)
      goto LABEL_32;
    goto LABEL_52;
  }
LABEL_80:
  __break(1u);
}

uint64_t sub_19C581124(_QWORD *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1 >> 57;
  v2 = v1 & 0x18 | *a1 & 7;
  if (v2)
    return 128 - ((v1 >> 5) | (4 * v2));
  else
    return 0;
}

uint64_t *sub_19C581150(uint64_t *a1)
{
  sub_19C4F9E6C(*a1);
  return a1;
}

double sub_19C5811B8(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0xF000000000000007;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  return result;
}

uint64_t sub_19C5811F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_19C581220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C57EF14(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_19C581230()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C58125C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 51))
    v3 = 256;
  else
    v3 = 0;
  return sub_19C57D854(a1, a2, v2 + 16, v3 | *(unsigned __int8 *)(v2 + 50), *(_QWORD *)(v2 + 56));
}

uint64_t sub_19C581280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  uint64_t v6;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 16);
  if ((a5 & 1) == 0)
  {
    if (v6)
    {
      if (v6 != 1)
      {
        if (*(_QWORD *)(a2 + 16))
        {
          sub_19CAA9DD0();
          sub_19CAA9D70();
          return sub_19CAA94A0();
        }
        goto LABEL_15;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v6)
    goto LABEL_12;
  if (v6 == 1)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(a2 + 16))
  {
    sub_19CAA9DD0();
    sub_19CAA9D70();
    return sub_19CAA94B8();
  }
LABEL_16:
  __break(1u);

  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

void sub_19C581604(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_19C58165C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[11];
  char v49;
  _QWORD v50[100];

  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = *(_OWORD *)(v3 + 176);
  v4[52] = *(_OWORD *)(v3 + 160);
  v4[53] = v6;
  v4[54] = *(_OWORD *)(v3 + 192);
  v7 = *(_OWORD *)(v3 + 112);
  v4[48] = *(_OWORD *)(v3 + 96);
  v4[49] = v7;
  v8 = *(_OWORD *)(v3 + 144);
  v4[50] = *(_OWORD *)(v3 + 128);
  v4[51] = v8;
  v9 = *(_OWORD *)(v3 + 48);
  v4[44] = *(_OWORD *)(v3 + 32);
  v4[45] = v9;
  v10 = *(_OWORD *)(v3 + 80);
  v4[46] = *(_OWORD *)(v3 + 64);
  v4[47] = v10;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = *(_OWORD *)(a2 + 176);
  v4[63] = *(_OWORD *)(a2 + 160);
  v4[64] = v11;
  v4[65] = *(_OWORD *)(a2 + 192);
  v12 = *(_OWORD *)(a2 + 112);
  v4[59] = *(_OWORD *)(a2 + 96);
  v4[60] = v12;
  v13 = *(_OWORD *)(a2 + 144);
  v4[61] = *(_OWORD *)(a2 + 128);
  v4[62] = v13;
  v14 = *(_OWORD *)(a2 + 48);
  v4[55] = *(_OWORD *)(a2 + 32);
  v4[56] = v14;
  v15 = *(_OWORD *)(a2 + 80);
  v4[57] = *(_OWORD *)(a2 + 64);
  v4[58] = v15;
  sub_19CAA9DD0();
  sub_19CAA9D70();
  sub_19CAA9428();
  if (v5 < 2)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
  v16 = *(_OWORD *)(v3 + 352);
  v4[41] = *(_OWORD *)(v3 + 336);
  v4[42] = v16;
  v4[43] = *(_OWORD *)(v3 + 368);
  v17 = *(_OWORD *)(v3 + 288);
  v4[37] = *(_OWORD *)(v3 + 272);
  v4[38] = v17;
  v18 = *(_OWORD *)(v3 + 320);
  v4[39] = *(_OWORD *)(v3 + 304);
  v4[40] = v18;
  v19 = *(_OWORD *)(v3 + 224);
  v4[33] = *(_OWORD *)(v3 + 208);
  v4[34] = v19;
  v20 = *(_OWORD *)(v3 + 256);
  v4[35] = *(_OWORD *)(v3 + 240);
  v4[36] = v20;
  if (v5 == 2)
    goto LABEL_10;
  v21 = *(_OWORD *)(v3 + 528);
  v4[19] = *(_OWORD *)(v3 + 512);
  v4[20] = v21;
  v4[21] = *(_OWORD *)(v3 + 544);
  v22 = *(_OWORD *)(v3 + 464);
  v4[15] = *(_OWORD *)(v3 + 448);
  v4[16] = v22;
  v23 = *(_OWORD *)(v3 + 496);
  v4[17] = *(_OWORD *)(v3 + 480);
  v4[18] = v23;
  v24 = *(_OWORD *)(v3 + 400);
  v4[11] = *(_OWORD *)(v3 + 384);
  v4[12] = v24;
  v25 = *(_OWORD *)(v3 + 432);
  v4[13] = *(_OWORD *)(v3 + 416);
  v4[14] = v25;
  sub_19CAA9DD0();
  v26 = sub_19CAA9D70();
  v27 = v4[42];
  v4[30] = v4[41];
  v4[31] = v27;
  v4[32] = v4[43];
  v28 = v4[38];
  v4[26] = v4[37];
  v4[27] = v28;
  v29 = v4[40];
  v4[28] = v4[39];
  v4[29] = v29;
  v30 = v4[34];
  v4[22] = v4[33];
  v4[23] = v30;
  v31 = v4[36];
  v4[24] = v4[35];
  v4[25] = v31;
  v32 = v4[64];
  v4[8] = v4[63];
  v4[9] = v32;
  v4[10] = v4[65];
  v33 = v4[60];
  v48[4] = v4[59];
  v48[5] = v33;
  v34 = v4[62];
  v4[6] = v4[61];
  v4[7] = v34;
  v35 = v4[56];
  v48[0] = v4[55];
  v48[1] = v35;
  v36 = v4[58];
  v48[2] = v4[57];
  v48[3] = v36;
  v44 = v26;
  v45 = v37;
  v46 = v38;
  v47 = v39;
  result = MEMORY[0x1A1AD4F64](v2, 0, v50, &v49, v48, &v44);
  if ((_DWORD)result)
  {
    v41 = sub_19CAA9440();
    sub_19C575B64();
    v42 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DE97B0], v41);
    swift_willThrow();

    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      v50[0] = 0;
      v50[1] = 0xE000000000000000;
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      v49 = 0;
      sub_19CAAA064();
      sub_19CAA992C();
    }
    sub_19CAAA0B8();
    __break(1u);
    JUMPOUT(0x19C581C14);
  }
  return result;
}

uint64_t sub_19C581C30(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  MEMORY[0x1E0C80A78](v2);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_19C557248(0, v3, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_19C581DC8(uint64_t a1, uint64_t a2)
{
  sub_19C581C30(a1);
  sub_19C581C30(a2);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C581F0CLL);
}

uint64_t sub_19C581F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  unsigned int *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t result;
  _BYTE v25[24];
  uint64_t v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char v51;
  char v52;
  char v53;

  v6 = sub_19CAA9398();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v25[-v11];
  sub_19C58230C((_BYTE *)(a3 + 32), &v28);
  sub_19C58230C(&v28, &v53);
  if (v53 == 2)
    v13 = (unsigned int *)MEMORY[0x1E0DE9698];
  else
    v13 = (unsigned int *)MEMORY[0x1E0DE96A0];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v10, *v13, v6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v10, v6);
  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = *(_OWORD *)(a1 + 176);
  v37 = *(_OWORD *)(a1 + 160);
  v38 = v14;
  v39 = *(_OWORD *)(a1 + 192);
  v15 = *(_OWORD *)(a1 + 112);
  v33 = *(_OWORD *)(a1 + 96);
  v34 = v15;
  v16 = *(_OWORD *)(a1 + 144);
  v35 = *(_OWORD *)(a1 + 128);
  v36 = v16;
  v17 = *(_OWORD *)(a1 + 48);
  v29 = *(_OWORD *)(a1 + 32);
  v30 = v17;
  v18 = *(_OWORD *)(a1 + 80);
  v31 = *(_OWORD *)(a1 + 64);
  v32 = v18;
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v19 = *(_OWORD *)(a2 + 176);
  v48 = *(_OWORD *)(a2 + 160);
  v49 = v19;
  v50 = *(_OWORD *)(a2 + 192);
  v20 = *(_OWORD *)(a2 + 112);
  v44 = *(_OWORD *)(a2 + 96);
  v45 = v20;
  v21 = *(_OWORD *)(a2 + 144);
  v46 = *(_OWORD *)(a2 + 128);
  v47 = v21;
  v22 = *(_OWORD *)(a2 + 48);
  v40 = *(_OWORD *)(a2 + 32);
  v41 = v22;
  v23 = *(_OWORD *)(a2 + 80);
  v42 = *(_OWORD *)(a2 + 64);
  v43 = v23;
  sub_19C58230C(&v28, &v52);
  sub_19CAA92A8();
  sub_19CAA9DD0();
  sub_19CAA9D70();
  if (sub_19CAA929C())
  {
    sub_19CAA9284();
    return swift_release();
  }
LABEL_10:
  sub_19C58230C(&v28, &v51);
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    v25[23] = 0;
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5822DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C582300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C581F20(a1, a2, v2 + 16);
}

_BYTE *sub_19C58230C(_BYTE *a1, _BYTE *a2)
{
  __swift_memcpy1_1(a2, a1);
  return a2;
}

uint64_t sub_19C582348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD v8[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v3);
  v8[3] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v8[1] = *(_QWORD *)(v5 - 8);
  v8[2] = v5;
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8[0] = v1;
    v8[5] = MEMORY[0x1E0DEE9D8];
    sub_19C557248(0, v6, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_19C582574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _QWORD v8[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v3);
  v8[3] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4241F8);
  v8[1] = *(_QWORD *)(v5 - 8);
  v8[2] = v5;
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8[0] = v1;
    v8[5] = MEMORY[0x1E0DEE9D8];
    sub_19C557248(0, v6, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_19C5827A0(uint64_t a1, uint64_t a2)
{
  sub_19C582348(a1);
  sub_19C582574(a2);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x19C5828C8);
}

uint64_t sub_19C5828DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (sub_19C582C68(a3, a4 & 1, a1, a2))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      if (*(_QWORD *)(a2 + 16))
      {
        sub_19CAA9284();
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C582C4C()
{
  return swift_deallocObject();
}

uint64_t sub_19C582C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5828DC(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_19C582C68(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v8 = sub_19CAA9374();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) == 0)
  {
    result = sub_19CAA932C();
    if (*(float *)&a1 > *((float *)&a1 + 1))
    {
      __break(1u);
    }
    else
    {
      *v11 = a1;
      result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, float))(v9 + 104))(v11, *MEMORY[0x1E0DE9660], v8, *(float *)&a1);
      if (*(_QWORD *)(a3 + 16))
      {
        v13 = *(_OWORD *)(a3 + 176);
        v41 = *(_OWORD *)(a3 + 160);
        v42 = v13;
        v43 = *(_OWORD *)(a3 + 192);
        v14 = *(_OWORD *)(a3 + 112);
        v37 = *(_OWORD *)(a3 + 96);
        v38 = v14;
        v15 = *(_OWORD *)(a3 + 144);
        v39 = *(_OWORD *)(a3 + 128);
        v40 = v15;
        v16 = *(_OWORD *)(a3 + 48);
        v33 = *(_OWORD *)(a3 + 32);
        v34 = v16;
        v17 = *(_OWORD *)(a3 + 80);
        v35 = *(_OWORD *)(a3 + 64);
        v36 = v17;
        if (*(_QWORD *)(a4 + 16))
        {
          v18 = *(_OWORD *)(a4 + 176);
          v52 = *(_OWORD *)(a4 + 160);
          v53 = v18;
          v54 = *(_OWORD *)(a4 + 192);
          v19 = *(_OWORD *)(a4 + 112);
          v48 = *(_OWORD *)(a4 + 96);
          v49 = v19;
          v20 = *(_OWORD *)(a4 + 144);
          v50 = *(_OWORD *)(a4 + 128);
          v51 = v20;
          v21 = *(_OWORD *)(a4 + 48);
          v44 = *(_OWORD *)(a4 + 32);
          v45 = v21;
          v22 = *(_OWORD *)(a4 + 80);
          v46 = *(_OWORD *)(a4 + 64);
          v47 = v22;
          sub_19CAA9DD0();
          sub_19CAA9D70();
          return sub_19CAA9320();
        }
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_19CAA932C();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DE9668], v8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_19CAE8180;
  *(_QWORD *)(result + 32) = a1;
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v23 = *(_OWORD *)(a3 + 176);
  v41 = *(_OWORD *)(a3 + 160);
  v42 = v23;
  v43 = *(_OWORD *)(a3 + 192);
  v24 = *(_OWORD *)(a3 + 112);
  v37 = *(_OWORD *)(a3 + 96);
  v38 = v24;
  v25 = *(_OWORD *)(a3 + 144);
  v39 = *(_OWORD *)(a3 + 128);
  v40 = v25;
  v26 = *(_OWORD *)(a3 + 48);
  v33 = *(_OWORD *)(a3 + 32);
  v34 = v26;
  v27 = *(_OWORD *)(a3 + 80);
  v35 = *(_OWORD *)(a3 + 64);
  v36 = v27;
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v28 = *(_OWORD *)(a4 + 176);
  v52 = *(_OWORD *)(a4 + 160);
  v53 = v28;
  v54 = *(_OWORD *)(a4 + 192);
  v29 = *(_OWORD *)(a4 + 112);
  v48 = *(_OWORD *)(a4 + 96);
  v49 = v29;
  v30 = *(_OWORD *)(a4 + 144);
  v50 = *(_OWORD *)(a4 + 128);
  v51 = v30;
  v31 = *(_OWORD *)(a4 + 48);
  v44 = *(_OWORD *)(a4 + 32);
  v45 = v31;
  v32 = *(_OWORD *)(a4 + 80);
  v46 = *(_OWORD *)(a4 + 64);
  v47 = v32;
  sub_19CAA9DD0();
  sub_19CAA9D70();
  return sub_19CAA9314();
}

uint64_t static MLShapedArray<>.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[9];
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;

  v19 = a5;
  v8 = *a1;
  v7 = a1[1];
  v9 = *a2;
  v10 = a2[1];
  v11 = type metadata accessor for MLShapedArray(0, a3, a4, a4);
  v12 = (_QWORD *)MLShapedArray.shape.getter();
  v21 = v9;
  v22 = v10;
  v13 = (_QWORD *)MLShapedArray.shape.getter();
  v14 = sub_19C4D4494(v12, v13);
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRelease();
  if (!v14)
    return 0;
  v21 = v8;
  v22 = v7;
  MEMORY[0x1E0C80A78](v15);
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = v19;
  v18[5] = v9;
  v18[6] = v10;
  v16 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, v11);
  sub_19C4CF69C((uint64_t)sub_19C5830B0, (uint64_t)v18, v11, MEMORY[0x1E0DEAFA0], v16);
  return v20;
}

uint64_t sub_19C583024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];

  v9[6] = a2;
  v9[7] = a3;
  v9[2] = a4;
  v9[3] = a5;
  v9[4] = a6;
  v9[5] = a1;
  v6 = type metadata accessor for MLShapedArray(0, a4, a5, a4);
  v7 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, v6);
  return sub_19C4CF69C((uint64_t)sub_19C5834E8, (uint64_t)v9, v6, MEMORY[0x1E0DEAFA0], v7);
}

uint64_t sub_19C5830B0(uint64_t a1)
{
  uint64_t *v1;

  return sub_19C583024(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_19C5830D0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static MLShapedArray<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8));
}

uint64_t static MLShapedArraySlice<>.== infix(_:_:)(__int128 *a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unsigned __int8 v23;
  _OWORD v24[3];

  v9 = *a1;
  v8 = a1[1];
  v17 = a1[2];
  v18 = v8;
  v10 = a2[1];
  v24[0] = *a2;
  v24[1] = v10;
  v24[2] = a2[2];
  v19 = v9;
  v11 = sub_19C4D4494((_QWORD *)v9, *(_QWORD **)&v24[0]);
  if (!v11)
    return 0;
  v20 = v19;
  v21 = v18;
  v22 = v17;
  MEMORY[0x1E0C80A78](v11);
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = v24;
  v13 = type metadata accessor for MLShapedArraySlice(0, a3, a4, v12);
  v14 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArraySlice<A>, v13);
  sub_19C4CF69C((uint64_t)sub_19C583284, (uint64_t)v16, v13, MEMORY[0x1E0DEAFA0], v14);
  return v23;
}

uint64_t sub_19C5831EC(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v5 = a2[1];
  v10 = *a2;
  v11 = v5;
  v12 = a2[2];
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a1;
  v6 = type metadata accessor for MLShapedArraySlice(0, a3, a4, a4);
  v7 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArraySlice<A>, v6);
  return sub_19C4CF69C((uint64_t)sub_19C583488, (uint64_t)v9, v6, MEMORY[0x1E0DEAFA0], v7);
}

uint64_t sub_19C583284(uint64_t a1)
{
  uint64_t v1;

  return sub_19C5831EC(a1, *(__int128 **)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_19C5832A0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  v7 = type metadata accessor for ScalarSequence(0, a1, a2, a2);
  MEMORY[0x1A1AD76AC](&unk_19CAE7894, v7);
  sub_19CAAA22C();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a1;
  v9 = sub_19CAA9F50();
  MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEC3A0], v9);
  v11 = sub_19CAA9980();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a4 = v11 & 1;
  return result;
}

uint64_t sub_19C583478(__int128 *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  return static MLShapedArraySlice<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8));
}

uint64_t sub_19C583488@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_19C5832A0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_19C5834BC()
{
  return swift_deallocObject();
}

uint64_t sub_19C5834D0(uint64_t a1)
{
  return sub_19C583554(a1) & 1;
}

uint64_t sub_19C5834E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_19C5832A0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_19C58351C()
{
  return swift_deallocObject();
}

uint64_t sub_19C58352C()
{
  return sub_19CAA98C0() & 1;
}

uint64_t sub_19C583554(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

void sub_19C5835B0(unint64_t a1)
{
  os_unfair_lock_s *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_19C5572B4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
LABEL_21:
      os_unfair_lock_unlock(v1);
      __break(1u);
      return;
    }
    v4 = 0;
    while (v3 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x1A1AD4A9C](v4, a1);
      }
      else
      {
        v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
        swift_retain();
      }
      v6 = *(_QWORD *)(v5 + 72);
      v1 = (os_unfair_lock_s *)(v6 + 24);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
      v7 = objc_msgSend(*(id *)(v5 + 40), sel_signaledValue);
      v8 = *(_QWORD *)(v6 + 16);
      v9 = v8 >= (unint64_t)v7;
      v10 = v8 - (_QWORD)v7;
      if (v9)
        v11 = v10;
      else
        v11 = 0;
      if (v14)
        goto LABEL_21;
      os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
      swift_release();
      swift_release();
      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_19C5572B4(v12 > 1, v13 + 1, 1);
      ++v4;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      *(_QWORD *)(v15 + 8 * v13 + 32) = v11;
      if (v3 == v4)
        return;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v3 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
}

uint64_t MLModel.prediction(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_19C583768()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  if ((sub_19C5838BC() & 1) != 0)
  {
    v1 = (_QWORD *)swift_task_alloc();
    v0[4] = (uint64_t)v1;
    *v1 = v0;
    v1[1] = sub_19C583814;
    v3 = v0[2];
    v2 = v0[3];
    v1[23] = 0;
    v1[24] = v2;
    v1[22] = v3;
    return swift_task_switch();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v0[5] = (uint64_t)v5;
    *v5 = v0;
    v5[1] = sub_19C583868;
    return sub_19C584CAC(v0[2], 0);
  }
}

uint64_t sub_19C583814(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_19C583868(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_19C5838BC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;

  v1 = v0;
  v2 = sub_19C589318()[2];
  swift_bridgeObjectRelease();
  if (!v2)
    return 0;
  v3 = sub_19C589318();
  v4 = v3[2];
  if (v4)
  {
    v5 = v3 + 5;
    while (1)
    {
      v10 = *(v5 - 1);
      v11 = *v5;
      swift_bridgeObjectRetain();
      v12 = objc_msgSend(v1, sel_modelDescription);
      v13 = objc_msgSend(v12, sel_outputDescriptionsByName);

      sub_19C535F80(0, (unint64_t *)&unk_1EE424470);
      v14 = sub_19CAA9800();

      if (!*(_QWORD *)(v14 + 16))
        break;
      v15 = sub_19C54B7A4(v10, v11);
      if ((v16 & 1) == 0)
        break;
      v17 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = objc_msgSend(v17, sel_multiArrayConstraint);
      if (!v18)
      {

        goto LABEL_16;
      }
      v19 = v18;
      v20 = objc_msgSend(v18, sel_shapeConstraint);
      v21 = objc_msgSend(v20, sel_type);

      if (v21 == (id)2)
      {
        v6 = objc_msgSend(v19, sel_shapeConstraint);
        v7 = objc_msgSend(v6, sel_enumeratedShapes);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244B8);
        v8 = sub_19CAA99F8();

        v9 = *(_QWORD *)(v8 + 16);
        swift_bridgeObjectRelease();
        if (v9 != 1)
          goto LABEL_16;
      }
      else
      {
        if (v21 == (id)3 || v21 == (id)1)
        {
          swift_bridgeObjectRelease();

          return 0;
        }

      }
      v5 += 2;
      if (!--v4)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_19C583B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  return swift_task_switch();
}

uint64_t sub_19C583B80()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  void *v31;
  char **v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  unint64_t v51;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  char v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v98;
  void *v99;
  id v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  int v105;
  char v106;
  void *v107;
  id v108;
  uint64_t v109;
  id v110;
  void **v111;
  void **v112;
  void *v113;
  uint64_t v114;
  _OWORD *v115;
  uint64_t v116;
  _OWORD *v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  void *v121;
  _OWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130[19];

  v130[5] = *MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(*(id *)(v0 + 192), sel_program);
  swift_unknownObjectRelease();
  if (!v1)
  {
    sub_19CAA98FC();
    v7 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v8 = (void *)sub_19CAA98F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, 0, 0);

    swift_willThrow();
    goto LABEL_24;
  }
  if (qword_1EE422EA0 != -1)
    swift_once();
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = off_1EE4243F0;
  v5 = *((_QWORD *)off_1EE4243F0 + 3);
  v6 = (_QWORD *)swift_task_alloc();
  v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_19C589900((unint64_t *)(v5 + 16), v6[3], v6[4], v130);
  v121 = v3;
  v9 = *(_QWORD *)(v0 + 176);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  v10 = v130[0];
  v11 = v130[1];
  v12 = v130[2];
  v13 = v130[3];
  *(_QWORD *)(v0 + 200) = v130[0];
  *(_QWORD *)(v0 + 208) = v12;
  v14 = v130[4];
  swift_task_dealloc();
  v15 = objc_msgSend(objc_allocWithZone((Class)MLPredictionOptions), sel_init);
  *(_QWORD *)(v0 + 216) = v15;
  v16 = sub_19C58B790(v9);
  v18 = v17;
  v126 = v15;
  v128 = v11;
  v125 = v13;
  v118 = v12;
  v116 = v10;
  v19 = v16;
  sub_19C5888B0(v16);
  v20 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  v21 = sub_19C58AB44();
  *(_QWORD *)(v0 + 224) = v21;
  v113 = v21;
  v114 = v19;
  v22 = *(_QWORD *)(v18 + 16);
  v23 = (unint64_t)v15;
  if (v22)
  {
    v130[0] = MEMORY[0x1E0DEE9D8];
    sub_19CAA9FE0();
    v24 = (uint64_t *)(v18 + 40);
    v25 = v14;
    do
    {
      v26 = *v24;
      ObjectType = swift_getObjectType();
      v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
      swift_unknownObjectRetain();
      v29 = v28(ObjectType, v26);
      v30 = objc_msgSend(objc_allocWithZone((Class)MLPredictionSyncPoint), sel_initWithSharedEvent_value_, v29, (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 32))(ObjectType, v26));
      swift_unknownObjectRelease();
      if (!v30)
      {
        __break(1u);
        goto LABEL_89;
      }
      swift_unknownObjectRelease();
      sub_19CAA9FBC();
      sub_19CAAA004();
      sub_19CAAA010();
      sub_19CAA9FC8();
      v24 += 2;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v23 = (unint64_t)v15;
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = v14;
  }
  sub_19C535F80(0, &qword_1EE424438);
  v31 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v32 = &selRef_encodeWaitForEvent_value_;
  objc_msgSend((id)v23, sel_setWaitSyncPoints_, v31);

  if (v121 && v116)
  {
    v33 = swift_getObjectType();
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v128 + 8);
    swift_unknownObjectRetain();
    v35 = v34(v33, v128);
    v36 = objc_msgSend(objc_allocWithZone((Class)MLPredictionSyncPoint), sel_initWithSharedEvent_value_, v35, (*(uint64_t (**)(uint64_t, uint64_t))(v128 + 32))(v33, v128));
    swift_unknownObjectRelease();
    if (v36)
    {
      v37 = objc_msgSend((id)v23, sel_waitSyncPoints);
      if (v37)
      {
        v38 = v37;
        v39 = sub_19CAA99F8();

        v130[0] = v39;
        v40 = v36;
        MEMORY[0x1A1AD4508]();
        if (*(_QWORD *)((v130[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v130[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_86:
          sub_19CAA9A40();
        sub_19CAA9A7C();
        sub_19CAA9A10();
        if (v130[0])
        {
          v41 = (void *)sub_19CAA99EC();
          swift_bridgeObjectRelease();
        }
        else
        {
          v41 = 0;
        }
        objc_msgSend((id)v23, v32[106], v41);

        swift_unknownObjectRelease();
      }
      else
      {
        objc_msgSend((id)v23, sel_setWaitSyncPoints_, 0);

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v40 = (id)v118;
  v42 = v125;
  sub_19C588C2C(v118, v125);
  v44 = 0;
  v122 = (_OWORD *)(v0 + 64);
  v117 = (_OWORD *)(v0 + 128);
  v115 = (_OWORD *)(v0 + 96);
  v112 = (void **)(v0 + 160);
  v111 = (void **)(v0 + 168);
  v119 = v43 + 64;
  v45 = -1;
  v46 = -1 << *(_BYTE *)(v43 + 32);
  if (-v46 < 64)
    v45 = ~(-1 << -(char)v46);
  v47 = v45 & *(_QWORD *)(v43 + 64);
  v48 = MEMORY[0x1E0DEE9E0];
  v120 = (unint64_t)(63 - v46) >> 6;
  v123 = v25;
  v124 = v43;
  while (1)
  {
    *(_QWORD *)(v0 + 232) = v48;
    if (v47)
    {
      v127 = (v47 - 1) & v47;
      v129 = v44;
      v51 = __clz(__rbit64(v47)) | (v44 << 6);
    }
    else
    {
      v52 = v44 + 1;
      if (__OFADD__(v44, 1))
        goto LABEL_84;
      if (v52 >= v120)
      {
LABEL_64:
        swift_release();
        if (v118)
        {
          v84 = swift_getObjectType();
          v85 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8);
          swift_unknownObjectRetain();
          v86 = v85(v84, v42);
          swift_unknownObjectRelease();
          if (v86)
          {
            v87 = swift_getObjectType();
            v88 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 32);
            swift_unknownObjectRetain();
            v89 = v88(v87, v42);
            swift_unknownObjectRelease();
            v90 = objc_msgSend(objc_allocWithZone((Class)MLPredictionSyncPoint), sel_initWithSharedEvent_value_, v86, v89);
            objc_msgSend((id)v23, sel_setCompletionSyncPoint_, v90);

            swift_unknownObjectRelease();
          }
        }
        v91 = *(void **)(v0 + 192);
        if (v121)
        {
          *v112 = 0;
          v92 = v121;
          v93 = objc_msgSend(v91, sel_newRequestWithInputFeatures_usingState_options_error_, v113, v92, v23, v112);
          v94 = *v112;
          if (v93)
          {
            v95 = v93;
            v96 = v94;

            goto LABEL_73;
          }
          v108 = v94;
          swift_bridgeObjectRelease();
          sub_19CAA95C0();

          swift_willThrow();
LABEL_81:

          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
LABEL_24:
          __asm { BR              X0 }
        }
        *v111 = 0;
        v98 = objc_msgSend(v91, sel_newRequestWithInputFeatures_options_error_, v113, v23, v111);
        v99 = *v111;
        if (!v98)
        {
          v110 = v99;
          swift_bridgeObjectRelease();
          sub_19CAA95C0();

          swift_willThrow();
          goto LABEL_81;
        }
        v95 = v98;
        v100 = v99;
LABEL_73:
        *(_QWORD *)(v0 + 240) = v95;
        v101 = *(void **)(v0 + 192);
        v102 = swift_allocObject();
        *(_QWORD *)(v102 + 16) = v114;
        *(_QWORD *)(v102 + 24) = v48;
        *(_QWORD *)(v0 + 48) = sub_19C58BF80;
        *(_QWORD *)(v0 + 56) = v102;
        *(_QWORD *)(v0 + 16) = MEMORY[0x1E0C809B0];
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_19C5AC0D4;
        *(_QWORD *)(v0 + 40) = &block_descriptor_13_0;
        v103 = _Block_copy((const void *)(v0 + 16));
        swift_bridgeObjectRetain();
        swift_release();
        objc_msgSend(v101, sel_submitPredictionRequest_completionHandler_, v95, v103);
        _Block_release(v103);
        if (!v25)
        {
LABEL_77:
          v107 = *(void **)(v0 + 216);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          __asm { BR              X1 }
        }
        v104 = sub_19C4E8E70(v48);
        if ((v106 & 1) == 0)
        {
          if (*(_DWORD *)(v48 + 36) != v105)
            __break(1u);
          if (v104 != 1 << *(_BYTE *)(v48 + 32))
          {
            sub_19C58B658(v104, v105, v48, v130);
            v109 = v130[0];
            *(_QWORD *)(v0 + 248) = v130[0];
            __asm { BR              X10 }
          }
          goto LABEL_77;
        }
LABEL_89:
        __break(1u);
        JUMPOUT(0x19C584A74);
      }
      v53 = *(_QWORD *)(v119 + 8 * v52);
      v54 = v44 + 1;
      if (!v53)
      {
        v54 = v44 + 2;
        if (v44 + 2 >= v120)
          goto LABEL_64;
        v53 = *(_QWORD *)(v119 + 8 * v54);
        if (!v53)
        {
          v54 = v44 + 3;
          if (v44 + 3 >= v120)
            goto LABEL_64;
          v53 = *(_QWORD *)(v119 + 8 * v54);
          if (!v53)
          {
            v55 = v44 + 4;
            if (v44 + 4 >= v120)
              goto LABEL_64;
            v53 = *(_QWORD *)(v119 + 8 * v55);
            if (!v53)
            {
              while (1)
              {
                v54 = v55 + 1;
                if (__OFADD__(v55, 1))
                  goto LABEL_85;
                if (v54 >= v120)
                  goto LABEL_64;
                v53 = *(_QWORD *)(v119 + 8 * v54);
                ++v55;
                if (v53)
                  goto LABEL_45;
              }
            }
            v54 = v44 + 4;
          }
        }
      }
LABEL_45:
      v127 = (v53 - 1) & v53;
      v129 = v54;
      v51 = __clz(__rbit64(v53)) + (v54 << 6);
    }
    v56 = 16 * v51;
    v57 = (uint64_t *)(*(_QWORD *)(v43 + 48) + v56);
    v58 = *v57;
    v32 = (char **)v57[1];
    v59 = *(_QWORD *)(v43 + 56) + v56;
    v60 = *(void **)v59;
    v25 = *(_QWORD *)(v59 + 8);
    v40 = (id)(v25 & 0x3FFFFFFFFFFFFFFFLL);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v61 = v60;
    v62 = v48;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v130[0] = v62;
    v23 = sub_19C54B7A4(v58, (uint64_t)v32);
    v65 = *(_QWORD *)(v62 + 16);
    v66 = (v64 & 1) == 0;
    v67 = v65 + v66;
    if (__OFADD__(v65, v66))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    v68 = v64;
    if (*(_QWORD *)(v62 + 24) < v67)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v48 = v62;
      if ((v64 & 1) != 0)
        goto LABEL_53;
    }
    else
    {
      sub_19C55035C();
      v48 = v130[0];
      if ((v68 & 1) != 0)
      {
LABEL_53:
        v71 = *(_QWORD *)(v48 + 56);
        swift_release();
        *(_QWORD *)(v71 + 8 * v23) = v25;
        goto LABEL_57;
      }
    }
LABEL_55:
    *(_QWORD *)(v48 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v72 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * v23);
    *v72 = v58;
    v72[1] = (uint64_t)v32;
    *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v23) = v25;
    v73 = *(_QWORD *)(v48 + 16);
    v74 = __OFADD__(v73, 1);
    v75 = v73 + 1;
    if (v74)
      goto LABEL_83;
    *(_QWORD *)(v48 + 16) = v75;
    swift_bridgeObjectRetain();
LABEL_57:
    v25 = v123;
    v23 = (unint64_t)v126;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = sub_19C535F80(0, (unint64_t *)&qword_1EE424440);
    *(_QWORD *)(v0 + 64) = v61;
    v76 = v61;
    v77 = objc_msgSend(v126, sel_outputBackings);
    v78 = sub_19CAA9800();

    if (*(_QWORD *)(v0 + 88))
    {
      sub_19C4D8970(v122, v117);
      v49 = swift_isUniquelyReferenced_nonNull_native();
      v130[0] = v78;
      sub_19C55117C(v117, v58, (uint64_t)v32, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19C58BF14((uint64_t)v122);
      swift_bridgeObjectRetain();
      v79 = sub_19C54B7A4(v58, (uint64_t)v32);
      v81 = v80;
      swift_bridgeObjectRelease();
      if ((v81 & 1) != 0)
      {
        v82 = swift_isUniquelyReferenced_nonNull_native();
        v130[0] = v78;
        if ((v82 & 1) == 0)
        {
          sub_19C550178();
          v78 = v130[0];
        }
        swift_bridgeObjectRelease();
        v83 = v0 + 96;
        sub_19C4D8970((_OWORD *)(*(_QWORD *)(v78 + 56) + 32 * v79), v115);
        sub_19C58B000(v79, v78);
        swift_bridgeObjectRelease();
      }
      else
      {
        v83 = v0 + 96;
        *v115 = 0u;
        *(_OWORD *)(v0 + 112) = 0u;
      }
      swift_bridgeObjectRelease();
      sub_19C58BF14(v83);
    }
    v50 = (void *)sub_19CAA97F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v126, sel_setOutputBackings_, v50);

    swift_release();
    v43 = v124;
    v42 = v125;
    v44 = v129;
    v47 = v127;
  }
  sub_19C54E424(v67, isUniquelyReferenced_nonNull_native);
  v48 = v130[0];
  v69 = sub_19C54B7A4(v58, (uint64_t)v32);
  if ((v68 & 1) == (v70 & 1))
  {
    v23 = v69;
    if ((v68 & 1) != 0)
      goto LABEL_53;
    goto LABEL_55;
  }
  return sub_19CAAA244();
}

uint64_t sub_19C584A84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C584B04()
{
  uint64_t v0;
  void *v1;

  swift_release_n();
  v1 = *(void **)(v0 + 216);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 232));
}

uint64_t sub_19C584BAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C584C2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C584CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = sub_19CAA9764();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v5 = sub_19CAA9740();
  v3[19] = v5;
  v3[20] = *(_QWORD *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19C584D7C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 388) = v2;
  v3 = 1 << v2;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  *(_DWORD *)(v0 + 384) = *MEMORY[0x1E0DF2190];
  swift_bridgeObjectRetain();
  v6 = 0;
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = *(_QWORD **)(v0 + 96);
    goto LABEL_18;
  }
  v6 = 1;
  v9 = *(_QWORD **)(v0 + 96);
  if ((unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6 > 1)
  {
    v10 = v9[9];
    if (v10)
    {
LABEL_17:
      v8 = (v10 - 1) & v10;
      v7 = __clz(__rbit64(v10)) + (v6 << 6);
LABEL_18:
      *(_QWORD *)(v0 + 208) = v8;
      *(_QWORD *)(v0 + 216) = v6;
      v12 = *(_QWORD *)(v9[7] + 8 * v7);
      *(_QWORD *)(v0 + 224) = v12;
      __asm { BR              X8 }
    }
    v11 = 2;
    if ((unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6 > 2)
    {
      v10 = v9[10];
      if (v10)
        goto LABEL_16;
      v11 = 3;
      if ((unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6 <= 3)
        goto LABEL_23;
      v10 = v9[11];
      if (v10)
        goto LABEL_16;
      v11 = 4;
      if ((unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6 <= 4)
        goto LABEL_23;
      v10 = v9[12];
      if (v10)
      {
LABEL_16:
        v6 = v11;
        goto LABEL_17;
      }
      v11 = 5;
      if ((unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6 > 5)
      {
        v10 = v9[13];
        if (v10)
          goto LABEL_16;
        while (1)
        {
          v6 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
            __break(1u);
            JUMPOUT(0x19C5857F0);
          }
          if (v6 >= (uint64_t)((unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6))
            break;
          v10 = v9[v6 + 8];
          ++v11;
          if (v10)
            goto LABEL_17;
        }
      }
    }
  }
LABEL_23:
  swift_release();
  v13 = sub_19C58B790((uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_19C5888B0(v13);
  swift_bridgeObjectRelease();
  v14 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  v15 = sub_19C58AB44();
  *(_QWORD *)(v0 + 232) = v15;
  v16 = v15;
  v17 = *(void **)(v0 + 104);
  v18 = objc_allocWithZone((Class)MLPredictionOptions);
  v19 = v16;
  if (v17)
  {
    v20 = v17;
    v21 = objc_msgSend(v18, sel_init);
    *(_QWORD *)(v0 + 328) = v21;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v22;
    v23 = sub_19C587808;
  }
  else
  {
    v21 = objc_msgSend(v18, sel_init);
    *(_QWORD *)(v0 + 352) = v21;
    v20 = objc_msgSend((id)objc_opt_self(), sel_emptyState);
    *(_QWORD *)(v0 + 360) = v20;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v22;
    v23 = sub_19C587884;
  }
  *v22 = v0;
  v22[1] = v23;
  return sub_19C5ACEDC((uint64_t)v19, (uint64_t)v20, (uint64_t)v21);
}

uint64_t sub_19C585810()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C585864()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);

  swift_release();
  swift_release();
  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  if (v2)
  {
    v3 = __clz(__rbit64(v2));
    v4 = (v2 - 1) & v2;
    v5 = v3 | (v1 << 6);
    v6 = *(_QWORD *)(v0 + 96);
    goto LABEL_16;
  }
  if (__OFADD__(v1++, 1))
  {
    __break(1u);
    JUMPOUT(0x19C5861C8);
  }
  v8 = (unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6;
  v6 = *(_QWORD *)(v0 + 96);
  if (v1 < v8)
  {
    v9 = v6 + 64;
    v10 = *(_QWORD *)(v6 + 64 + 8 * v1);
    if (v10)
    {
LABEL_15:
      v4 = (v10 - 1) & v10;
      v5 = __clz(__rbit64(v10)) + (v1 << 6);
LABEL_16:
      *(_QWORD *)(v0 + 208) = v4;
      *(_QWORD *)(v0 + 216) = v1;
      v12 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v5);
      *(_QWORD *)(v0 + 224) = v12;
      __asm { BR              X8 }
    }
    v11 = v1 + 1;
    if (v1 + 1 < v8)
    {
      v10 = *(_QWORD *)(v9 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v1 + 2;
      if (v1 + 2 >= v8)
        goto LABEL_21;
      v10 = *(_QWORD *)(v9 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v1 + 3;
      if (v1 + 3 >= v8)
        goto LABEL_21;
      v10 = *(_QWORD *)(v9 + 8 * v11);
      if (v10)
      {
LABEL_14:
        v1 = v11;
        goto LABEL_15;
      }
      v11 = v1 + 4;
      if (v1 + 4 < v8)
      {
        v10 = *(_QWORD *)(v9 + 8 * v11);
        if (v10)
          goto LABEL_14;
        while (1)
        {
          v1 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
            __break(1u);
            JUMPOUT(0x19C5862BCLL);
          }
          if (v1 >= v8)
            break;
          v10 = *(_QWORD *)(v9 + 8 * v1);
          ++v11;
          if (v10)
            goto LABEL_15;
        }
      }
    }
  }
LABEL_21:
  swift_release();
  v13 = sub_19C58B790(v6);
  swift_bridgeObjectRelease();
  sub_19C5888B0(v13);
  swift_bridgeObjectRelease();
  v14 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  v15 = sub_19C58AB44();
  *(_QWORD *)(v0 + 232) = v15;
  v16 = v15;
  v17 = *(void **)(v0 + 104);
  v18 = objc_allocWithZone((Class)MLPredictionOptions);
  v19 = v16;
  if (v17)
  {
    v20 = v17;
    v21 = objc_msgSend(v18, sel_init);
    *(_QWORD *)(v0 + 328) = v21;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v22;
    v23 = sub_19C587808;
  }
  else
  {
    v21 = objc_msgSend(v18, sel_init);
    *(_QWORD *)(v0 + 352) = v21;
    v20 = objc_msgSend((id)objc_opt_self(), sel_emptyState);
    *(_QWORD *)(v0 + 360) = v20;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v22;
    v23 = sub_19C587884;
  }
  *v22 = v0;
  v22[1] = v23;
  return sub_19C5ACEDC((uint64_t)v19, (uint64_t)v20, (uint64_t)v21);
}

uint64_t sub_19C5862DC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C586330()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  os_signpost_id_t v13;
  _QWORD *v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t);

  v1 = sub_19CAA974C();
  sub_19CAA9770();
  v2 = sub_19CAA9D58();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v3 = *(_DWORD *)(v0 + 384);
    v4 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    swift_retain();
    sub_19CAA9794();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
    v8 = "[Error] Interval already ended";
    if (v7 != v3)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
      v8 = "";
    }
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    v10 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 256))(*(_QWORD *)(v0 + 192), v10, v11);
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v1, v2, v13, "GPU :: Data synchronization", v8, v12, 2u);
    MEMORY[0x1A1AD7790](v12, -1, -1);

    v9(v10, v11);
    v14 = (_QWORD *)(v0 + 192);
  }
  else
  {

    v14 = (_QWORD *)(v0 + 184);
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 272))(*v14, *(_QWORD *)(v0 + 152));
  swift_release();
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 216);
  if (v16)
  {
    v17 = __clz(__rbit64(v16));
    v18 = (v16 - 1) & v16;
    v19 = v17 | (v15 << 6);
    v20 = *(_QWORD *)(v0 + 96);
    goto LABEL_21;
  }
  if (__OFADD__(v15++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  v22 = (unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6;
  v20 = *(_QWORD *)(v0 + 96);
  if (v15 < v22)
  {
    v23 = v20 + 64;
    v24 = *(_QWORD *)(v20 + 64 + 8 * v15);
    if (v24)
    {
LABEL_20:
      v18 = (v24 - 1) & v24;
      v19 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_21:
      *(_QWORD *)(v0 + 208) = v18;
      *(_QWORD *)(v0 + 216) = v15;
      v26 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v19);
      *(_QWORD *)(v0 + 224) = v26;
      __asm { BR              X8 }
    }
    v25 = v15 + 1;
    if (v15 + 1 < v22)
    {
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (v24)
        goto LABEL_19;
      v25 = v15 + 2;
      if (v15 + 2 >= v22)
        goto LABEL_26;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (v24)
        goto LABEL_19;
      v25 = v15 + 3;
      if (v15 + 3 >= v22)
        goto LABEL_26;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (v24)
      {
LABEL_19:
        v15 = v25;
        goto LABEL_20;
      }
      v25 = v15 + 4;
      if (v15 + 4 < v22)
      {
        v24 = *(_QWORD *)(v23 + 8 * v25);
        if (v24)
          goto LABEL_19;
        while (1)
        {
          v15 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v15 >= v22)
            goto LABEL_26;
          v24 = *(_QWORD *)(v23 + 8 * v15);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_31:
        __break(1u);
        JUMPOUT(0x19C586CBCLL);
      }
    }
  }
LABEL_26:
  swift_release();
  v27 = sub_19C58B790(v20);
  swift_bridgeObjectRelease();
  sub_19C5888B0(v27);
  swift_bridgeObjectRelease();
  v28 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  v29 = sub_19C58AB44();
  *(_QWORD *)(v0 + 232) = v29;
  v30 = v29;
  v31 = *(void **)(v0 + 104);
  v32 = objc_allocWithZone((Class)MLPredictionOptions);
  v33 = v30;
  if (v31)
  {
    v34 = v31;
    v35 = objc_msgSend(v32, sel_init);
    *(_QWORD *)(v0 + 328) = v35;
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v36;
    v37 = sub_19C587808;
  }
  else
  {
    v35 = objc_msgSend(v32, sel_init);
    *(_QWORD *)(v0 + 352) = v35;
    v34 = objc_msgSend((id)objc_opt_self(), sel_emptyState);
    *(_QWORD *)(v0 + 360) = v34;
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v36;
    v37 = sub_19C587884;
  }
  *v36 = v0;
  v36[1] = v37;
  return sub_19C5ACEDC((uint64_t)v33, (uint64_t)v34, (uint64_t)v35);
}

uint64_t sub_19C586D6C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C586DC0()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  os_signpost_id_t v13;
  _QWORD *v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t);

  v1 = sub_19CAA974C();
  sub_19CAA9770();
  v2 = sub_19CAA9D58();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v3 = *(_DWORD *)(v0 + 384);
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 120);
    swift_retain();
    sub_19CAA9794();
    swift_release();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
    v8 = "[Error] Interval already ended";
    if (v7 != v3)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
      v8 = "";
    }
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 296))(*(_QWORD *)(v0 + 192), v10, v11);
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v1, v2, v13, "CPU :: Data synchronization", v8, v12, 2u);
    MEMORY[0x1A1AD7790](v12, -1, -1);

    v9(v10, v11);
    v14 = (_QWORD *)(v0 + 192);
  }
  else
  {

    v14 = (_QWORD *)(v0 + 168);
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 312))(*v14, *(_QWORD *)(v0 + 152));
  swift_release();
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 216);
  if (v16)
  {
    v17 = __clz(__rbit64(v16));
    v18 = (v16 - 1) & v16;
    v19 = v17 | (v15 << 6);
    v20 = *(_QWORD *)(v0 + 96);
    goto LABEL_21;
  }
  if (__OFADD__(v15++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  v22 = (unint64_t)((1 << *(_BYTE *)(v0 + 388)) + 63) >> 6;
  v20 = *(_QWORD *)(v0 + 96);
  if (v15 < v22)
  {
    v23 = v20 + 64;
    v24 = *(_QWORD *)(v20 + 64 + 8 * v15);
    if (v24)
    {
LABEL_20:
      v18 = (v24 - 1) & v24;
      v19 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_21:
      *(_QWORD *)(v0 + 208) = v18;
      *(_QWORD *)(v0 + 216) = v15;
      v26 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v19);
      *(_QWORD *)(v0 + 224) = v26;
      __asm { BR              X8 }
    }
    v25 = v15 + 1;
    if (v15 + 1 < v22)
    {
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (v24)
        goto LABEL_19;
      v25 = v15 + 2;
      if (v15 + 2 >= v22)
        goto LABEL_26;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (v24)
        goto LABEL_19;
      v25 = v15 + 3;
      if (v15 + 3 >= v22)
        goto LABEL_26;
      v24 = *(_QWORD *)(v23 + 8 * v25);
      if (v24)
      {
LABEL_19:
        v15 = v25;
        goto LABEL_20;
      }
      v25 = v15 + 4;
      if (v15 + 4 < v22)
      {
        v24 = *(_QWORD *)(v23 + 8 * v25);
        if (v24)
          goto LABEL_19;
        while (1)
        {
          v15 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v15 >= v22)
            goto LABEL_26;
          v24 = *(_QWORD *)(v23 + 8 * v15);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_31:
        __break(1u);
        JUMPOUT(0x19C587758);
      }
    }
  }
LABEL_26:
  swift_release();
  v27 = sub_19C58B790(v20);
  swift_bridgeObjectRelease();
  sub_19C5888B0(v27);
  swift_bridgeObjectRelease();
  v28 = objc_allocWithZone((Class)MLDictionaryFeatureProvider);
  v29 = sub_19C58AB44();
  *(_QWORD *)(v0 + 232) = v29;
  v30 = v29;
  v31 = *(void **)(v0 + 104);
  v32 = objc_allocWithZone((Class)MLPredictionOptions);
  v33 = v30;
  if (v31)
  {
    v34 = v31;
    v35 = objc_msgSend(v32, sel_init);
    *(_QWORD *)(v0 + 328) = v35;
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v36;
    v37 = sub_19C587808;
  }
  else
  {
    v35 = objc_msgSend(v32, sel_init);
    *(_QWORD *)(v0 + 352) = v35;
    v34 = objc_msgSend((id)objc_opt_self(), sel_emptyState);
    *(_QWORD *)(v0 + 360) = v34;
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v36;
    v37 = sub_19C587884;
  }
  *v36 = v0;
  v36[1] = v37;
  return sub_19C5ACEDC((uint64_t)v33, (uint64_t)v34, (uint64_t)v35);
}

uint64_t sub_19C587808(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v4 = *(void **)(v3 + 232);

  }
  return swift_task_switch();
}

uint64_t sub_19C587884(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = (_QWORD *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = v1;
  v3[47] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = (void *)v3[44];
    v4 = (void *)v3[45];
    v6 = (void *)v3[29];

  }
  return swift_task_switch();
}

void sub_19C587904()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v0[11] = MEMORY[0x1E0DEE9E0];
  v1 = v0 + 11;
  v2 = v0[47];
  v3 = (void *)v0[9];
  v4 = objc_msgSend(v3, sel_featureNames);
  sub_19CAA9B9C();

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244B0);
  sub_19CAA9818();
  v5 = objc_msgSend(v3, sel_featureNames);
  v6 = sub_19CAA9B9C();

  v7 = 0;
  v8 = *(_QWORD *)(v6 + 56);
  v35 = v6 + 56;
  v9 = -1;
  v10 = -1 << *(_BYTE *)(v6 + 32);
  if (-v10 < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & v8;
  v36 = (unint64_t)(63 - v10) >> 6;
  if ((v9 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v12 | (v7 << 6); ; i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * i);
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain();
    v20 = (void *)sub_19CAA98F0();
    v21 = objc_msgSend(v3, sel_featureValueForName_, v20);

    if (!v21)
      goto LABEL_30;
    v22 = objc_msgSend(v21, sel_multiArrayValue);

    if (!v22)
      goto LABEL_30;
    v23 = objc_msgSend(v22, sel_dataType);

    if (v23 == (id)131104)
    {
      v24 = MEMORY[0x1E0DEDBC8];
    }
    else
    {
      v24 = MEMORY[0x1E0DEB188];
      if (v23 != (id)65568)
      {
        if (v23 != (id)65552)
          goto LABEL_30;
        v24 = MEMORY[0x1E0DEE290];
      }
    }
    v25 = dynamic_cast_existential_2_conditional(v24);
    if (!v25)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      v27 = v34;
      v28 = *(void **)(v34 + 232);
      swift_bridgeObjectRelease();
      sub_19CAA98FC();
      v29 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v30 = (void *)sub_19CAA98F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 0, 0);

      swift_willThrow();
      swift_unknownObjectRelease();

      swift_release();
LABEL_32:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v27 + 8))();
      return;
    }
    sub_19C589104(v25, v3, v19, v18, v1, v25, v26);
    if (v2)
    {
      v27 = v34;
      v31 = *(void **)(v34 + 232);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_4;
LABEL_5:
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v14 >= v36)
      goto LABEL_33;
    v15 = *(_QWORD *)(v35 + 8 * v14);
    ++v7;
    if (!v15)
    {
      v7 = v14 + 1;
      if (v14 + 1 >= v36)
        goto LABEL_33;
      v15 = *(_QWORD *)(v35 + 8 * v7);
      if (!v15)
      {
        v7 = v14 + 2;
        if (v14 + 2 >= v36)
          goto LABEL_33;
        v15 = *(_QWORD *)(v35 + 8 * v7);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v11 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v36)
  {
LABEL_33:
    v32 = *(void **)(v34 + 232);
    swift_release();

    swift_unknownObjectRelease();
    swift_beginAccess();
    v33 = *(_QWORD *)(v34 + 88);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v34 + 8))(v33);
    return;
  }
  v15 = *(_QWORD *)(v35 + 8 * v16);
  if (v15)
  {
    v7 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v36)
      goto LABEL_33;
    v15 = *(_QWORD *)(v35 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_19C587E14()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 232);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19C587EB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v34 = v0;
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0DEE9E0];
  v1 = (uint64_t *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(void **)(v0 + 48);
  v4 = objc_msgSend(v3, sel_featureNames);
  sub_19CAA9B9C();

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244B0);
  sub_19CAA9818();
  v5 = objc_msgSend(v3, sel_featureNames);
  v6 = sub_19CAA9B9C();

  v7 = 0;
  v8 = *(_QWORD *)(v6 + 56);
  v35 = v6 + 56;
  v9 = -1;
  v10 = -1 << *(_BYTE *)(v6 + 32);
  if (-v10 < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & v8;
  v36 = (unint64_t)(63 - v10) >> 6;
  if ((v9 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v12 | (v7 << 6); ; i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * i);
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain();
    v20 = (void *)sub_19CAA98F0();
    v21 = objc_msgSend(v3, sel_featureValueForName_, v20);

    if (!v21)
      goto LABEL_30;
    v22 = objc_msgSend(v21, sel_multiArrayValue);

    if (!v22)
      goto LABEL_30;
    v23 = objc_msgSend(v22, sel_dataType);

    if (v23 == (id)131104)
    {
      v24 = MEMORY[0x1E0DEDBC8];
    }
    else
    {
      v24 = MEMORY[0x1E0DEB188];
      if (v23 != (id)65568)
      {
        if (v23 != (id)65552)
          goto LABEL_30;
        v24 = MEMORY[0x1E0DEE290];
      }
    }
    v25 = dynamic_cast_existential_2_conditional(v24);
    if (!v25)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      v27 = v34;
      v28 = *(void **)(v34 + 232);
      swift_bridgeObjectRelease();
      sub_19CAA98FC();
      v29 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v30 = (void *)sub_19CAA98F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 0, 0);

      swift_willThrow();
      swift_unknownObjectRelease();

      swift_release();
LABEL_32:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v27 + 8))();
      return;
    }
    sub_19C589104(v25, v3, v19, v18, v1, v25, v26);
    if (v2)
    {
      v27 = v34;
      v31 = *(void **)(v34 + 232);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_4;
LABEL_5:
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v14 >= v36)
      goto LABEL_33;
    v15 = *(_QWORD *)(v35 + 8 * v14);
    ++v7;
    if (!v15)
    {
      v7 = v14 + 1;
      if (v14 + 1 >= v36)
        goto LABEL_33;
      v15 = *(_QWORD *)(v35 + 8 * v7);
      if (!v15)
      {
        v7 = v14 + 2;
        if (v14 + 2 >= v36)
          goto LABEL_33;
        v15 = *(_QWORD *)(v35 + 8 * v7);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v11 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v36)
  {
LABEL_33:
    v32 = *(void **)(v34 + 232);
    swift_release();

    swift_unknownObjectRelease();
    swift_beginAccess();
    v33 = *(_QWORD *)(v34 + 88);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v34 + 8))(v33);
    return;
  }
  v15 = *(_QWORD *)(v35 + 8 * v16);
  if (v15)
  {
    v7 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v36)
      goto LABEL_33;
    v15 = *(_QWORD *)(v35 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_19C5883CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 232);
  v3 = *(void **)(v0 + 104);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MLModel.prediction(from:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19C58848C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = v0[3];
  if ((sub_19C5838BC() & 1) != 0)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[5] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_19C583868;
    v3 = v0[4];
    v4 = v0[2];
    v2[23] = v1;
    v2[24] = v3;
    v2[22] = v4;
    return swift_task_switch();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v0[6] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = sub_19C588540;
    return sub_19C584CAC(v0[2], v1);
  }
}

uint64_t sub_19C588540(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

unint64_t sub_19C588594(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  uint64_t *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424458);
    v2 = (_QWORD *)sub_19CAAA10C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v34 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v33 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  v8 = (uint64_t *)&unk_1EE424460;
  v32 = v1;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v16 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v16 >= v33)
    goto LABEL_32;
  v17 = *(_QWORD *)(v34 + 8 * v16);
  v18 = i + 1;
  if (!v17)
  {
    v18 = i + 2;
    if (i + 2 >= v33)
      goto LABEL_32;
    v17 = *(_QWORD *)(v34 + 8 * v18);
    if (!v17)
    {
      v18 = i + 3;
      if (i + 3 >= v33)
        goto LABEL_32;
      v17 = *(_QWORD *)(v34 + 8 * v18);
      if (!v17)
      {
        v18 = i + 4;
        if (i + 4 >= v33)
          goto LABEL_32;
        v17 = *(_QWORD *)(v34 + 8 * v18);
        if (!v17)
        {
          v19 = i + 5;
          if (i + 5 < v33)
          {
            v17 = *(_QWORD *)(v34 + 8 * v19);
            if (v17)
            {
              v18 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v18 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_36;
              if (v18 >= v33)
                break;
              v17 = *(_QWORD *)(v34 + 8 * v18);
              ++v19;
              if (v17)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_19C4D5F7C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v17 - 1) & v17;
  v15 = __clz(__rbit64(v17)) + (v18 << 6);
  for (i = v18; ; v15 = v14 | (i << 6))
  {
    v20 = 16 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v15);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(void **)(*(_QWORD *)(v1 + 56) + v20);
    swift_retain();
    swift_bridgeObjectRetain();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424468);
    swift_dynamicCast();
    result = sub_19C54B7A4(v23, v22);
    if ((v26 & 1) != 0)
    {
      v9 = 16 * result;
      v10 = i;
      v11 = v8;
      v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v12 = v23;
      v12[1] = v22;
      v13 = v2[7] + v9;

      result = swift_release();
      *(_QWORD *)v13 = v35;
      *(_QWORD *)(v13 + 8) = v36;
      v8 = v11;
      i = v10;
      v1 = v32;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v23;
    v27[1] = v22;
    v28 = (_QWORD *)(v2[7] + 16 * result);
    *v28 = v35;
    v28[1] = v36;
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v14 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_19C5888B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t *v9;
  __objc2_class **v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  __objc2_class **v14;
  unint64_t *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  void *v24;
  id v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4240F8);
    v2 = (_QWORD *)sub_19CAAA10C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v33 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  v6 = &v38;
  v7 = &v40;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v9 = (unint64_t *)&unk_1EE424490;
  v10 = off_1E3D41688;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v34 + 1;
  if (__OFADD__(v34, 1))
    goto LABEL_35;
  if (v19 >= v32)
    goto LABEL_32;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v34 + 1;
  if (!v20)
  {
    v21 = v34 + 2;
    if (v34 + 2 >= v32)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    if (!v20)
    {
      v21 = v34 + 3;
      if (v34 + 3 >= v32)
        goto LABEL_32;
      v20 = *(_QWORD *)(v33 + 8 * v21);
      if (!v20)
      {
        v21 = v34 + 4;
        if (v34 + 4 >= v32)
          goto LABEL_32;
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            v20 = *(_QWORD *)(v33 + 8 * v22);
            if (v20)
            {
              v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v32)
                break;
              v20 = *(_QWORD *)(v33 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_19C4D5F7C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = v21;
  v35 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v36 = *v23;
    v37 = v23[1];
    sub_19C535F80(0, v9);
    swift_bridgeObjectRetain();
    v25 = v24;
    swift_dynamicCast();
    sub_19C4D8970(v6, v7);
    sub_19C4D8970(v7, v41);
    sub_19C4D8970(v41, &v39);
    result = sub_19C54B7A4(v36, v37);
    v26 = result;
    if ((v27 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = v10;
      v15 = v9;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v36;
      v16[1] = v37;
      v9 = v15;
      v10 = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      result = (unint64_t)sub_19C4D8970(&v39, v17);
      v5 = v35;
      if (!v35)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v28 = (uint64_t *)(v2[6] + 16 * result);
    *v28 = v36;
    v28[1] = v37;
    result = (unint64_t)sub_19C4D8970(&v39, (_OWORD *)(v2[7] + 32 * result));
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    v5 = v35;
    if (!v35)
      goto LABEL_11;
LABEL_10:
    v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_19C588C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  os_unfair_lock_s *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;

  v3 = v2;
  v4 = sub_19C589318();
  v5 = v4[2];
  if (v5)
  {
    v6 = MEMORY[0x1E0DEE9E0];
    v7 = v4 + 5;
    while (1)
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      swift_bridgeObjectRetain();
      v10 = sub_19C589540(v8, v9);
      if (!v10)
        break;
      v12 = v10;
      v34 = v8;
      v35 = v6;
      switch(v11)
      {
        case 131104:
          v13 = 7;
          break;
        case 65568:
          v13 = 10;
          break;
        case 65552:
          v13 = 9;
          break;
        default:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
      }
      v33 = v5;
      v14 = getpagesize();
      v15 = (void *)MEMORY[0x1A1AD6338]();
      if (qword_1EE422E98 != -1)
        swift_once();
      v16 = v14;
      v17 = (uint64_t *)(qword_1EE4243D0 + 16);
      v18 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
      sub_19C5782F8(v17, v12, v13, v16, 0, &v36);
      if (v3)
      {
        os_unfair_lock_unlock(v18);
        __break(1u);
        return;
      }
      os_unfair_lock_unlock(v18);
      v19 = v36;
      objc_autoreleasePoolPop(v15);
      type metadata accessor for IOSurfaceStorage();
      v20 = swift_allocObject();
      *(_BYTE *)(v20 + 32) = v13;
      *(_BYTE *)(v20 + 33) = 0;
      *(_QWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = v12;
      *(_QWORD *)(v20 + 40) = a1;
      *(_QWORD *)(v20 + 48) = a2;
      v21 = v20 | 0x4000000000000000;
      *(_QWORD *)(v20 + 56) = sub_19C569CEC;
      *(_QWORD *)(v20 + 64) = 0;
      v22 = v19;
      swift_unknownObjectRetain();
      swift_retain();
      sub_19C5A0414(0, v21);
      v3 = 0;
      v24 = v23;
      if (!v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_19CAA98FC();
        v27 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
        v28 = (void *)sub_19CAA98F0();
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_initWithDomain_code_userInfo_, v28, 1, 0);

        swift_willThrow();
        swift_release_n();
        return;
      }
      v7 += 2;
      swift_retain();
      v25 = v24;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = (void *)v35;
      sub_19C551000((uint64_t)v25, v21, v34, v9, isUniquelyReferenced_nonNull_native);
      v6 = (uint64_t)v36;

      swift_release_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v33 - 1;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    sub_19CAA98FC();
    v29 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v30 = (void *)sub_19CAA98F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, 1, 0);

    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9E0];
LABEL_19:
  sub_19C588594(v6);
  swift_bridgeObjectRelease();
}

uint64_t sub_19C58902C(int a1, id a2)
{
  id v2;
  uint64_t result;

  if (a2)
  {
    v2 = a2;
    sub_19CAA9F2C();
    sub_19CAA992C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
    sub_19CAAA064();
    sub_19CAA992C();
    result = sub_19CAAA0B8();
    __break(1u);
  }
  return result;
}

uint64_t sub_19C589104(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;

  v13 = (void *)sub_19CAA98F0();
  v14 = objc_msgSend(a2, sel_featureValueForName_, v13);

  if (v14)
  {
    MLFeatureValue.shapedArrayValue<A>(of:)(a6, a7, (uint64_t)&v23);
    if (v23)
    {
      v16 = type metadata accessor for MLShapedArray(0, a6, a7, v15);
      swift_unknownObjectRetain();
      v17 = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLShapedArray<A>, v16);
      MLTensor.init<A>(_:)((uint64_t)&v23, v16, v17, &v24);
      v18 = v24;
      swift_beginAccess();
      swift_retain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v24 = *a5;
      *a5 = 0x8000000000000000;
      sub_19C5512AC(v18, a3, a4, isUniquelyReferenced_nonNull_native);
      *a5 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_release();
      return swift_unknownObjectRelease();
    }

  }
  sub_19CAA98FC();
  v21 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v22 = (void *)sub_19CAA98F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, 0, 0);

  return swift_willThrow();
}

_QWORD *sub_19C589318()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v15;
  uint64_t v16;
  _BYTE v17[32];
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;

  v1 = sub_19CAA95CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58];
  v16 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_modelDescription);
  v6 = objc_msgSend(v5, sel_outputFeatureNames);

  v7 = v6;
  sub_19CAA9D10();
  v15 = v7;

  sub_19C58BF88((unint64_t *)&unk_1EE424480, 255, v2, MEMORY[0x1E0CAFB80]);
  sub_19CAA9E54();
  if (v22)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_19C4D8970(&v21, v20);
      sub_19C4D8980((uint64_t)v20, (uint64_t)v17);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v18 = 0;
        v19 = 0;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      v10 = v19;
      if (v19)
      {
        v11 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_19C4F967C(0, v8[2] + 1, 1, v8);
        v13 = v8[2];
        v12 = v8[3];
        if (v13 >= v12 >> 1)
          v8 = sub_19C4F967C((_QWORD *)(v12 > 1), v13 + 1, 1, v8);
        v8[2] = v13 + 1;
        v9 = &v8[2 * v13];
        v9[4] = v11;
        v9[5] = v10;
      }
      sub_19CAA9E54();
    }
    while (v22);
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v1);

  return v8;
}

uint64_t sub_19C589540(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;

  v5 = objc_msgSend(v2, sel_modelDescription);
  v6 = objc_msgSend(v5, sel_outputDescriptionsByName);

  sub_19C535F80(0, (unint64_t *)&unk_1EE424470);
  v7 = sub_19CAA9800();

  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v8 = sub_19C54B7A4(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v10, sel_multiArrayConstraint);
  if (!v11)
  {

    return 0;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, sel_shape);
  sub_19C535F80(0, (unint64_t *)&qword_1EE422D90);
  v14 = sub_19CAA99F8();

  v15 = sub_19C529DE0(v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_dataType);

  return v15;
}

uint64_t sub_19C5896EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CAAA298();
  sub_19CAAA2A4();
  sub_19CAAA2B0();
  if (v1)
    sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

uint64_t sub_19C589760()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CAAA2A4();
  if (!v1)
    return sub_19CAAA2B0();
  sub_19CAAA2B0();
  return sub_19CAAA2A4();
}

uint64_t sub_19C5897A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_19CAAA298();
  sub_19CAAA2A4();
  sub_19CAAA2B0();
  if (v1)
    sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

BOOL sub_19C589818(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*a1 != *a2)
    return 0;
  v3 = a1[1];
  v4 = a2[1];
  if (v3)
    return v4 && v3 == v4;
  return !v4;
}

uint64_t sub_19C58985C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  type metadata accessor for MLModelTensorSharedEventRegistry();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244A8);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 24) = v1;
  result = (uint64_t)MTLCreateSystemDefaultDevice();
  if (result)
  {
    result = swift_dynamicCastObjCProtocolConditional();
    if (!result)
    {
      swift_unknownObjectRelease();
      result = 0;
    }
  }
  *(_QWORD *)(v0 + 16) = result;
  off_1EE4243F0 = (_UNKNOWN *)v0;
  return result;
}

void sub_19C589900(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_19C589AC0(a2, a3, a1);
  if (v4)
    return;
  v10 = v9;
  v19 = a3;
  v11 = *(_QWORD *)(v9 + 72);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
    swift_release();
    goto LABEL_6;
  }
  v13 = objc_msgSend(*(id *)(v10 + 40), sel_signaledValue, v19);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
  swift_release();
  if ((unint64_t)v13 >= v12)
  {
LABEL_6:
    v20 = 0;
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(v10 + 72);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
  sub_19C58A348((uint64_t *)(v14 + 16), v10, &v21);
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
  v20 = v21;
  swift_release();
LABEL_7:
  v15 = *(_QWORD *)(v10 + 72);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
  sub_19C58A39C((uint64_t *)(v15 + 16), v10, &v21);
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
  v16 = v21;
  swift_release();
  v17 = sub_19C58BFC8(a2, v19, *a1);
  swift_release();
  if (v20)
    v18 = &off_1E3D47478;
  else
    v18 = 0;
  *a4 = v20;
  a4[1] = (uint64_t)v18;
  a4[2] = v16;
  a4[3] = (uint64_t)&off_1E3D47478;
  a4[4] = v17;
}

void sub_19C589AC0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  void *v15;
  _QWORD *v16;
  void (*v17)(_QWORD *);
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  _QWORD v37[4];
  uint64_t v38;

  v5 = v3;
  if (!*(_QWORD *)(*a3 + 16) || (sub_19C54BB28(a1, a2), (v9 & 1) == 0))
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_19C55140C(MEMORY[0x1E0DEE9D8], a1, a2, isUniquelyReferenced_nonNull_native);
    *a3 = v37[0];
    swift_bridgeObjectRelease();
    v15 = *(void **)(v3 + 16);
    type metadata accessor for MLModelTensorSharedEvent();
    swift_allocObject();
    swift_unknownObjectRetain();
    if (sub_19C58A014(a1, a2, v15))
    {
      v17 = sub_19C589F3C(v37, a1, a2);
      if (!*v16)
      {
LABEL_13:
        ((void (*)(_QWORD *, _QWORD))v17)(v37, 0);
        return;
      }
      v18 = v16;
      v19 = swift_retain();
      MEMORY[0x1A1AD4508](v19);
      if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_12:
        sub_19CAA9A7C();
        sub_19CAA9A10();
        goto LABEL_13;
      }
LABEL_34:
      sub_19CAA9A40();
      goto LABEL_12;
    }
LABEL_35:
    sub_19CAA98FC();
    v34 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v35 = (void *)sub_19CAA98F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_initWithDomain_code_userInfo_, v35, 0, 0);

    swift_willThrow();
    return;
  }
  v10 = *a3;
  v11 = *(_QWORD *)(*a3 + 16);
  if (a2)
  {
    if (v11)
    {
      v12 = sub_19C54BB28(a1, a2);
      if ((v13 & 1) != 0)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v12);
        if ((v10 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            return;
          }
          __break(1u);
          goto LABEL_43;
        }
LABEL_41:
        swift_bridgeObjectRetain();
        MEMORY[0x1A1AD4A9C](0, v10);
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
LABEL_39:
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
  if (!v11)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v20 = sub_19C54BB28(a1, 0);
  if ((v21 & 1) == 0)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20);
  if (!(v10 >> 62))
  {
    v22 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    goto LABEL_18;
  }
LABEL_45:
  swift_bridgeObjectRetain_n();
  v22 = sub_19CAAA0DC();
  swift_bridgeObjectRelease();
LABEL_18:
  v36 = v5;
  v38 = v4;
  if (!v22)
  {
LABEL_31:
    swift_bridgeObjectRelease_n();
    v30 = *(void **)(v36 + 16);
    type metadata accessor for MLModelTensorSharedEvent();
    swift_allocObject();
    swift_unknownObjectRetain();
    if (sub_19C58A014(a1, 0, v30))
    {
      v17 = sub_19C589F3C(v37, a1, 0);
      if (!*v31)
        goto LABEL_13;
      v32 = v31;
      v33 = swift_retain();
      MEMORY[0x1A1AD4508](v33);
      if (*(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_12;
      goto LABEL_34;
    }
    goto LABEL_35;
  }
  v23 = 4;
  while (1)
  {
    v24 = v23 - 4;
    if ((v10 & 0xC000000000000001) != 0)
    {
      v25 = MEMORY[0x1A1AD4A9C](v23 - 4, v10);
      v26 = v23 - 3;
      if (__OFADD__(v24, 1))
        goto LABEL_38;
    }
    else
    {
      v25 = *(_QWORD *)(v10 + 8 * v23);
      swift_retain();
      v26 = v23 - 3;
      if (__OFADD__(v24, 1))
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    v27 = *(_QWORD *)(v25 + 72);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    v28 = *(_QWORD *)(v27 + 16);
    if (!v28)
      break;
    v29 = (unint64_t)objc_msgSend(*(id *)(v25 + 40), sel_signaledValue) >= v28;
    if (v38)
      goto LABEL_46;
LABEL_29:
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    swift_release();
    if (v29)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    swift_release();
    ++v23;
    if (v26 == v22)
      goto LABEL_31;
  }
  v29 = 1;
  if (!v38)
    goto LABEL_29;
LABEL_46:
  os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
  __break(1u);
}

void (*sub_19C589F3C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_19C58B3C0(v6, a2, a3);
  return sub_19C589F98;
}

void sub_19C589F98(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_19C589FC8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MLModelTensorSharedEventRegistry()
{
  return objc_opt_self();
}

_QWORD *sub_19C58A014(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD v26[2];

  v4 = v3;
  v26[1] = *v3;
  v8 = sub_19CAA9D40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CAA9D34();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_19CAA97C4();
  MEMORY[0x1E0C80A78](v13);
  sub_19C535F80(0, (unint64_t *)&qword_1EE423DE0);
  sub_19CAA97B8();
  sub_19CAA9D28();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D8], v8);
  v14 = sub_19CAA9D4C();
  v4[2] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4244A0);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  v4[9] = v15;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBBEB8]), sel_init);
  if (v16)
  {
    v17 = v16;
    v4[8] = v16;
    v4[3] = a1;
    v4[4] = a2;
    v4[5] = v16;
    v18 = objc_allocWithZone(MEMORY[0x1E0CBBEC0]);
    v19 = v17;
    v4[7] = objc_msgSend(v18, sel_initWithDispatchQueue_, v14);
    if (a3)
    {
      swift_unknownObjectRetain();
      v20 = objc_msgSend(a3, sel_newSharedEventWithMachPort_, objc_msgSend(v19, sel_eventPort));

      swift_unknownObjectRelease_n();
    }
    else
    {

      v20 = 0;
    }
    v4[6] = v20;
  }
  else
  {
    if (qword_1EE422E58 != -1)
      swift_once();
    v21 = sub_19CAA97AC();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE4317D8);
    v22 = sub_19CAA97A0();
    v23 = sub_19CAA9D1C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_19C486000, v22, v23, "Failed to create shared event.", v24, 2u);
      MEMORY[0x1A1AD7790](v24, -1, -1);
    }

    swift_unknownObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

uint64_t sub_19C58A348@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1;
  type metadata accessor for MLModelTensorAsyncEvent();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v5;
  *a3 = v6;
  return swift_retain();
}

uint64_t *sub_19C58A39C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v4 = *result + 1;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    *result = v4;
    type metadata accessor for MLModelTensorAsyncEvent();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = v4;
    *a3 = v6;
    return (uint64_t *)swift_retain();
  }
  return result;
}

uint64_t sub_19C58A400()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MLModelTensorSharedEvent()
{
  return objc_opt_self();
}

uint64_t sub_19C58A464()
{
  uint64_t v0;
  uint64_t v1;

  sub_19CAAA298();
  v1 = *(_QWORD *)(v0 + 32);
  sub_19CAAA2A4();
  sub_19CAAA2B0();
  if (v1)
    sub_19CAAA2A4();
  sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

uint64_t sub_19C58A4E4()
{
  return sub_19C58A464();
}

uint64_t sub_19C58A504()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  sub_19CAAA2A4();
  sub_19CAAA2B0();
  if (v1)
    sub_19CAAA2A4();
  return sub_19CAAA2A4();
}

uint64_t sub_19C58A560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  sub_19CAAA298();
  v2 = *(_QWORD *)(v1 + 32);
  sub_19CAAA2A4();
  sub_19CAAA2B0();
  if (v2)
    sub_19CAAA2A4();
  sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

BOOL sub_19C58A5DC(_QWORD **a1, _QWORD **a2)
{
  return sub_19C58B6B4(*a1, *a2);
}

uint64_t sub_19C58A5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424430);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v11 = *(void **)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 56);
  aBlock[4] = sub_19C52C34C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19C573488;
  aBlock[3] = &block_descriptor_6;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_notifyListener_atValue_block_, v12, a3, v13);
  _Block_release(v13);
  return swift_release();
}

id sub_19C58A740(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 48);
  if (v2)
    return objc_msgSend(a1, sel_encodeWaitForEvent_value_, v2, *(_QWORD *)(v1 + 24));
  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = (id)sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C58A8A8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MLModelTensorAsyncEvent()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for MLModelKey(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLModelKey()
{
  return &type metadata for MLModelKey;
}

unint64_t sub_19C58A980()
{
  unint64_t result;

  result = qword_1EE424418;
  if (!qword_1EE424418)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAEC5D4, &type metadata for MLModelKey);
    atomic_store(result, (unint64_t *)&qword_1EE424418);
  }
  return result;
}

uint64_t sub_19C58A9C4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_19C58A9D0()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24);
}

uint64_t sub_19C58A9DC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 64);
}

id sub_19C58A9E8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 40), sel_signaledValue);
}

uint64_t sub_19C58A9FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_19C58AA14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = swift_task_alloc();
  v0[3] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[4] = v5;
  *v5 = v0;
  v5[1] = sub_19C58AAB8;
  return sub_19CAAA1A8();
}

uint64_t sub_19C58AAB8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C58AB18(uint64_t a1, uint64_t a2)
{
  return sub_19C58BF88(&qword_1EE424428, a2, (uint64_t (*)(uint64_t))type metadata accessor for MLModelTensorSharedEvent, (uint64_t)&unk_19CAEC64C);
}

id sub_19C58AB44()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_19CAA97F4();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_19CAA95C0();

    swift_willThrow();
  }
  return v2;
}

void sub_19C58AC28(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_19CAA9ED8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v12 = 16 * v6;
        v13 = *(void **)(*(_QWORD *)(a2 + 48) + 16 * v6);
        sub_19CAAA298();
        sub_19CAAA2A4();
        sub_19CAAA2A4();
        v14 = v13;
        sub_19CAA9DC4();
        v15 = sub_19CAAA2C8();

        v16 = v15 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v16 < v9)
            goto LABEL_5;
        }
        else if (v16 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v16)
        {
LABEL_11:
          v17 = *(_QWORD *)(a2 + 48);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + v12);
          if (16 * v3 != v12 || v18 >= v19 + 1)
            *v18 = *v19;
          v20 = *(_QWORD *)(a2 + 56);
          v21 = v20 + 40 * v3;
          v22 = (__int128 *)(v20 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 40))
          {
            v10 = *v22;
            v11 = v22[1];
            *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
            *(_OWORD *)v21 = v10;
            *(_OWORD *)(v21 + 16) = v11;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_19C58AE2C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CAA9ED8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CAAA298();
        swift_bridgeObjectRetain();
        sub_19CAA9920();
        v9 = sub_19CAAA2C8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19C58B000(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CAA9ED8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_19CAAA298();
        swift_bridgeObjectRetain();
        sub_19CAA9920();
        v10 = sub_19CAAA2C8();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_19C58B1D4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_19CAA9ED8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_19CAAA298();
        sub_19CAAA2A4();
        sub_19CAAA2B0();
        if (v9)
          sub_19CAAA2A4();
        result = sub_19CAAA2C8();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_13:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (*sub_19C58B3C0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x50uLL);
  *a1 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_19C58B62C(v6);
  v6[9] = sub_19C58B480(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_19C58B444;
}

void sub_19C58B444(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_19C58B480(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_19C54BB28(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_19C58B5AC;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_19C550514();
      goto LABEL_7;
    }
    sub_19C54E734(v16, a4 & 1);
    v20 = sub_19C54BB28(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_19CAAA244();
  __break(1u);
  return result;
}

void sub_19C58B5AC(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;

  v1 = *a1;
  v2 = **a1;
  v3 = *((_BYTE *)*a1 + 40);
  if (v2)
  {
    v4 = v1[4];
    v5 = *(_QWORD **)v1[3];
    if ((v3 & 1) != 0)
      *(_QWORD *)(v5[7] + 8 * v4) = v2;
    else
      sub_19C551628(v4, v1[1], v1[2], v2, v5);
  }
  else if (((*a1)[5] & 1) != 0)
  {
    sub_19C58B1D4(v1[4], *(_QWORD *)v1[3]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_19C58B62C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_19C58B64C;
}

uint64_t sub_19C58B64C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_19C58B658@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * result);
    return swift_retain();
  }
LABEL_8:
  __break(1u);
  return result;
}

BOOL sub_19C58B6B4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  if (a1[3] != a2[3])
    return 0;
  v3 = a1[4];
  v4 = a2[4];
  if (v3)
  {
    if (v4)
      v5 = v3 == v4;
    else
      v5 = 0;
    if (!v5)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  return a1[8] == a2[8];
}

uint64_t sub_19C58B70C(uint64_t a1)
{
  uint64_t v1;

  return sub_19C58A5E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_19C58B714()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424430);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_19C58B790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424498);
  sub_19CAA9818();
  sub_19C551A9C(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423F10);
  sub_19CAA9818();
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v11 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = __clz(__rbit64(v4));
    goto LABEL_15;
  }
  v6 = 1;
  if (v11 > 1)
  {
    v7 = *(_QWORD *)(a1 + 72);
    if (v7)
    {
LABEL_14:
      v5 = __clz(__rbit64(v7)) + (v6 << 6);
LABEL_15:
      __asm { BR              X9 }
    }
    v8 = 2;
    if (v11 > 2)
    {
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_13;
      v8 = 3;
      if (v11 <= 3)
        goto LABEL_20;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_13:
        v6 = v8;
        goto LABEL_14;
      }
      v8 = 4;
      if (v11 > 4)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
          goto LABEL_13;
        while (1)
        {
          v6 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            JUMPOUT(0x19C58BEECLL);
          }
          if (v6 >= v11)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v6);
          ++v8;
          if (v7)
            goto LABEL_14;
        }
      }
    }
  }
LABEL_20:
  swift_release();
  v9 = swift_bridgeObjectRetain();
  sub_19C4D4894(v9);
  swift_bridgeObjectRelease_n();
  return v12;
}

uint64_t sub_19C58BF14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19C58BF54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C58BF80(int a1, void *a2)
{
  return sub_19C58902C(a1, a2);
}

uint64_t sub_19C58BF88(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1A1AD76AC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19C58BFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_19C54BB28(a1, a2);
  if ((v3 & 1) == 0)
    return 0;
  v4 = swift_bridgeObjectRetain();
  sub_19C5835B0(v4);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v6 + 16);
  if (!v8)
  {
    v9 = 0;
LABEL_10:
    swift_bridgeObjectRelease();
    return v9;
  }
  v9 = 0;
  v10 = (uint64_t *)(v6 + 32);
  while (1)
  {
    v11 = *v10++;
    v12 = __CFADD__(v9, v11);
    v9 += v11;
    if (v12)
      break;
    if (!--v8)
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2())
      return a1;
    else
      return 0;
  }
  return result;
}

uint64_t sub_19C58C0DC()
{
  return sub_19C584B04();
}

uint64_t sub_19C58C134(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  int64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_19C5571E4(0, v1, 0);
  v2 = v38;
  result = sub_19C4E8E6C(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v33 = v3 + 64;
  v30 = v3 + 80;
  v31 = v1;
  v32 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
    v13 = v12[1];
    v34 = *v12;
    v14 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    result = sub_19C58C9B8(v14, (uint64_t)&v35);
    v15 = v35;
    v16 = v36;
    v17 = v37;
    v38 = v2;
    v18 = v3;
    v20 = *(_QWORD *)(v2 + 16);
    v19 = *(_QWORD *)(v2 + 24);
    if (v20 >= v19 >> 1)
    {
      v28 = v36;
      v29 = v35;
      v27 = v37;
      result = sub_19C5571E4(v19 > 1, v20 + 1, 1);
      v17 = v27;
      v16 = v28;
      v15 = v29;
      v2 = v38;
    }
    *(_QWORD *)(v2 + 16) = v20 + 1;
    v21 = v2 + (v20 << 6);
    *(_QWORD *)(v21 + 32) = v34;
    *(_QWORD *)(v21 + 40) = v13;
    *(_OWORD *)(v21 + 48) = v15;
    *(_OWORD *)(v21 + 64) = v16;
    *(_OWORD *)(v21 + 80) = v17;
    v9 = 1 << *(_BYTE *)(v18 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v33;
    v22 = *(_QWORD *)(v33 + 8 * v11);
    if ((v22 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v18;
    v5 = v32;
    if (*(_DWORD *)(v18 + 36) != v32)
      goto LABEL_27;
    v23 = v22 & (-2 << (v6 & 0x3F));
    if (v23)
    {
      v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v31;
    }
    else
    {
      v24 = v11 + 1;
      v25 = (unint64_t)(v9 + 63) >> 6;
      v10 = v31;
      if (v11 + 1 < v25)
      {
        v26 = *(_QWORD *)(v33 + 8 * v24);
        if (v26)
        {
LABEL_20:
          v9 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            v26 = *(_QWORD *)(v30 + 8 * v11++);
            if (v26)
            {
              v24 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_19C58C384(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v32 = MEMORY[0x1E0DEE9D8];
  sub_19C557348(0, v1, 0);
  v2 = v32;
  result = sub_19C4E8E6C(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v29 = v3 + 64;
  v26 = v3 + 80;
  v27 = v1;
  v28 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
    v13 = v12[1];
    v30 = *v12;
    v14 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    result = sub_19C58C6E4(v14, (unint64_t)&v31);
    v15 = v31;
    v32 = v2;
    v16 = v3;
    v18 = *(_QWORD *)(v2 + 16);
    v17 = *(_QWORD *)(v2 + 24);
    if (v18 >= v17 >> 1)
    {
      v25 = v31;
      result = sub_19C557348(v17 > 1, v18 + 1, 1);
      v15 = v25;
      v2 = v32;
    }
    *(_QWORD *)(v2 + 16) = v18 + 1;
    v19 = v2 + 32 * v18;
    *(_QWORD *)(v19 + 32) = v30;
    *(_QWORD *)(v19 + 40) = v13;
    *(_OWORD *)(v19 + 48) = v15;
    v9 = 1 << *(_BYTE *)(v16 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v29;
    v20 = *(_QWORD *)(v29 + 8 * v11);
    if ((v20 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v16;
    v5 = v28;
    if (*(_DWORD *)(v16 + 36) != v28)
      goto LABEL_27;
    v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v27;
    }
    else
    {
      v22 = v11 + 1;
      v23 = (unint64_t)(v9 + 63) >> 6;
      v10 = v27;
      if (v11 + 1 < v23)
      {
        v24 = *(_QWORD *)(v29 + 8 * v22);
        if (v24)
        {
LABEL_20:
          v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            v24 = *(_QWORD *)(v26 + 8 * v11++);
            if (v24)
            {
              v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_19C58C5C0(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  id v8;
  id v9;
  uint64_t v10;
  __int128 v11;

  v4 = objc_msgSend(a1, sel_neuralNetwork);
  if (v4)
  {

    sub_19C58D65C(a1, &v10);
    v5 = 0;
    v6 = v10;
    *(_QWORD *)&v7 = v11;
  }
  else
  {
    v8 = objc_msgSend(a1, sel_program);
    if (v8)
    {

      sub_19C58D454(a1, &v10);
      v6 = v10;
      *(_QWORD *)&v7 = v11;
      v5 = 1;
    }
    else
    {
      v9 = objc_msgSend(a1, sel_pipeline);
      if (v9)
      {

        sub_19C58D954(a1, &v10);
        v6 = v10;
        v7 = v11;
        v5 = 2;
      }
      else
      {

        v6 = 0;
        v7 = 0uLL;
        v5 = 3;
      }
    }
  }
  *(_QWORD *)a2 = v6;
  *(_OWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 24) = v5;
}

uint64_t MLModelStructure.Program.NamedValueType.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19C58C6E4@<X0>(void *a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v2;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = (unint64_t)a1;
  v4 = objc_msgSend(a1, sel_bindings);
  sub_19C535F80(0, &qword_1EE424500);
  v5 = sub_19CAA99F8();

  if (v5 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v23 = MEMORY[0x1E0DEE9D8];
      sub_19C5572D8(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0)
        break;
      v20 = (_QWORD *)a2;
      v21 = v2;
      v7 = 0;
      v8 = v23;
      v22 = v5 & 0xC000000000000001;
      v2 = v5;
      while (v6 != v7)
      {
        if (v22)
          v9 = (id)MEMORY[0x1A1AD4A9C](v7, v5);
        else
          v9 = *(id *)(v5 + 8 * v7 + 32);
        v10 = v9;
        v11 = objc_msgSend(v9, sel_value);
        if (v11)
        {

          v12 = 0;
          v13 = 0;
        }
        else
        {
          v14 = objc_msgSend(v10, sel_name);
          if (!v14)
            goto LABEL_22;
          v15 = v14;
          v12 = sub_19CAA98FC();
          v13 = v16;

        }
        a2 = *(_QWORD *)(v23 + 16);
        v17 = *(_QWORD *)(v23 + 24);
        if (a2 >= v17 >> 1)
          sub_19C5572D8(v17 > 1, a2 + 1, 1);
        ++v7;
        *(_QWORD *)(v23 + 16) = a2 + 1;
        v18 = v23 + 24 * a2;
        *(_QWORD *)(v18 + 32) = v12;
        *(_QWORD *)(v18 + 40) = v13;
        *(_BYTE *)(v18 + 48) = v11 == 0;
        v5 = v2;
        if (v6 == v7)
        {
          result = swift_bridgeObjectRelease();
          a2 = (unint64_t)v20;
          v2 = v21;
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v6 = sub_19CAAA0DC();
      swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    result = sub_19CAAA0B8();
    __break(1u);
  }
  else
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_20:
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v2;
  }
  return result;
}

uint64_t MLModelStructure.Program.Function.inputs.getter()
{
  return swift_bridgeObjectRetain();
}

id MLModelStructure.Program.Function.block.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v5;

  v2 = v1[2];
  v3 = v1[3];
  v5 = (id)v1[4];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_19C58C9B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  _OWORD v24[2];

  v2 = a1;
  v4 = objc_msgSend(a1, sel_inputs);
  sub_19C535F80(0, &qword_1EE4244E0);
  v5 = sub_19CAA99F8();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    result = sub_19C58CBD0(objc_msgSend(v2, sel_block), (uint64_t *)v24);
    v20 = v24[0];
    v21 = v24[1];
    *(_QWORD *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v20;
    *(_OWORD *)(a2 + 24) = v21;
    *(_QWORD *)(a2 + 40) = v2;
    return result;
  }
  swift_bridgeObjectRetain();
  v6 = sub_19CAAA0DC();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_13;
LABEL_3:
  *(_QWORD *)&v24[0] = MEMORY[0x1E0DEE9D8];
  result = sub_19C557310(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v22 = a2;
    v23 = v2;
    v8 = 0;
    v9 = *(_QWORD *)&v24[0];
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1A1AD4A9C](v8, v5);
      else
        v10 = *(id *)(v5 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_name, v22, v23);
      v13 = sub_19CAA98FC();
      v15 = v14;

      v16 = objc_msgSend(v11, sel_type);
      *(_QWORD *)&v24[0] = v9;
      v18 = *(_QWORD *)(v9 + 16);
      v17 = *(_QWORD *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_19C557310(v17 > 1, v18 + 1, 1);
        v9 = *(_QWORD *)&v24[0];
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v18 + 1;
      v19 = v9 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v13;
      *(_QWORD *)(v19 + 40) = v15;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    a2 = v22;
    v2 = v23;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C58CBD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v3 = objc_msgSend(a1, sel_inputs);
  sub_19C535F80(0, &qword_1EE4244E0);
  v4 = sub_19CAA99F8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v38 = a2;
  if (v5)
  {
    v40 = MEMORY[0x1E0DEE9D8];
    result = sub_19C557310(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    v7 = 0;
    v8 = v40;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1A1AD4A9C](v7, v4);
      else
        v9 = *(id *)(v4 + 8 * v7 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_name);
      v12 = sub_19CAA98FC();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_type);
      v40 = v8;
      v17 = *(_QWORD *)(v8 + 16);
      v16 = *(_QWORD *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_19C557310(v16 > 1, v17 + 1, 1);
        v8 = v40;
      }
      ++v7;
      *(_QWORD *)(v8 + 16) = v17 + 1;
      v18 = v8 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v12;
      *(_QWORD *)(v18 + 40) = v14;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v19 = objc_msgSend(a1, sel_outputNames);
  v20 = sub_19CAA99F8();

  v21 = objc_msgSend(a1, sel_operations);
  sub_19C535F80(0, &qword_1EE4244E8);
  v22 = sub_19CAA99F8();

  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23)
      goto LABEL_16;
LABEL_27:
    result = swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    *v38 = v8;
    v38[1] = v20;
    v38[2] = v25;
    v38[3] = (uint64_t)a1;
    return result;
  }
  swift_bridgeObjectRetain();
  v23 = sub_19CAAA0DC();
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_27;
LABEL_16:
  v37 = v22;
  v44 = MEMORY[0x1E0DEE9D8];
  result = sub_19C5572F4(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    v24 = 0;
    v25 = v44;
    v26 = v37;
    do
    {
      if ((v37 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x1A1AD4A9C](v24, v26);
      else
        v27 = *(id *)(v26 + 8 * v24 + 32);
      sub_19C58CF90(v27, &v40);
      v28 = v40;
      v29 = v41;
      v30 = v42;
      v31 = v43;
      v44 = v25;
      v33 = *(_QWORD *)(v25 + 16);
      v32 = *(_QWORD *)(v25 + 24);
      if (v33 >= v32 >> 1)
      {
        v35 = v42;
        v36 = v41;
        sub_19C5572F4(v32 > 1, v33 + 1, 1);
        v30 = v35;
        v29 = v36;
        v26 = v37;
        v25 = v44;
      }
      *(_QWORD *)(v25 + 16) = v33 + 1;
      v34 = v25 + 48 * v33;
      *(_QWORD *)(v34 + 32) = v28;
      ++v24;
      *(_OWORD *)(v34 + 40) = v29;
      *(_OWORD *)(v34 + 56) = v30;
      *(_QWORD *)(v34 + 72) = v31;
    }
    while (v23 != v24);
    result = swift_bridgeObjectRelease();
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t MLModelStructure.Program.Block.inputs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.Program.Block.outputNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.Program.Block.operations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19C58CF90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  __int128 v40;
  void *v41;
  id v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v2 = a1;
  v4 = objc_msgSend(a1, sel_operatorName);
  v5 = sub_19CAA98FC();
  v44 = v6;

  v7 = objc_msgSend(v2, sel_inputs);
  sub_19C535F80(0, &qword_1EE4244F0);
  v8 = sub_19CAA9800();

  v9 = sub_19C58C384(v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v9 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424120);
    v10 = sub_19CAAA10C();
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9E0];
  }
  *(_QWORD *)&v47 = v10;
  v11 = swift_bridgeObjectRetain();
  sub_19C58F268(v11, 1, (uint64_t *)&v47);
  swift_bridgeObjectRelease();
  v43 = v47;
  v12 = objc_msgSend(v2, sel_outputs);
  sub_19C535F80(0, &qword_1EE4244E0);
  v13 = sub_19CAA99F8();

  v14 = MEMORY[0x1E0DEE9D8];
  v45 = v5;
  v46 = a2;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
    if (v15)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
    goto LABEL_16;
LABEL_6:
  *(_QWORD *)&v47 = v14;
  sub_19C557310(0, v15 & ~(v15 >> 63), 0);
  if (v15 < 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  v41 = v2;
  v16 = 0;
  v17 = v47;
  do
  {
    if ((v13 & 0xC000000000000001) != 0)
      v18 = (id)MEMORY[0x1A1AD4A9C](v16, v13);
    else
      v18 = *(id *)(v13 + 8 * v16 + 32);
    v19 = v18;
    v20 = objc_msgSend(v18, sel_name);
    v21 = sub_19CAA98FC();
    v23 = v22;

    v24 = objc_msgSend(v19, sel_type);
    *(_QWORD *)&v47 = v17;
    v26 = *(_QWORD *)(v17 + 16);
    v25 = *(_QWORD *)(v17 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_19C557310(v25 > 1, v26 + 1, 1);
      v17 = v47;
    }
    ++v16;
    *(_QWORD *)(v17 + 16) = v26 + 1;
    v27 = v17 + 16 * v26;
    *(_QWORD *)(v27 + 32) = v21;
    *(_QWORD *)(v27 + 40) = v23;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  v2 = v41;
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  v28 = objc_msgSend(v2, sel_blocks);
  sub_19C535F80(0, &qword_1EE4244F8);
  v29 = sub_19CAA99F8();

  if (!(v29 >> 62))
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
      goto LABEL_19;
LABEL_29:
    result = swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_30:
    *v46 = v45;
    v46[1] = v44;
    v46[2] = v43;
    v46[3] = v17;
    v46[4] = v32;
    v46[5] = (uint64_t)v2;
    return result;
  }
  swift_bridgeObjectRetain();
  v30 = sub_19CAAA0DC();
  swift_bridgeObjectRelease();
  if (!v30)
    goto LABEL_29;
LABEL_19:
  v49 = v14;
  sub_19C55732C(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    v31 = 0;
    v32 = v49;
    do
    {
      if ((v29 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x1A1AD4A9C](v31, v29);
      else
        v33 = *(id *)(v29 + 8 * v31 + 32);
      sub_19C58CBD0(&v47, v33);
      v34 = v47;
      v35 = v48;
      v49 = v32;
      v37 = *(_QWORD *)(v32 + 16);
      v36 = *(_QWORD *)(v32 + 24);
      if (v37 >= v36 >> 1)
      {
        v40 = v48;
        *(_OWORD *)v42 = v47;
        sub_19C55732C(v36 > 1, v37 + 1, 1);
        v35 = v40;
        v34 = *(_OWORD *)v42;
        v32 = v49;
      }
      ++v31;
      *(_QWORD *)(v32 + 16) = v37 + 1;
      v38 = v32 + 32 * v37;
      *(_OWORD *)(v38 + 32) = v34;
      *(_OWORD *)(v38 + 48) = v35;
    }
    while (v30 != v31);
    result = swift_bridgeObjectRelease();
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t MLModelStructure.Program.Operation.operatorName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLModelStructure.Program.Operation.inputs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.Program.Operation.outputs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.Program.Operation.blocks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19C58D454@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = objc_msgSend(a1, sel_program);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_functions);
    sub_19C535F80(0, &qword_1EE4244D8);
    v7 = sub_19CAA9800();

    v8 = sub_19C58C134(v7);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v8 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424118);
      v9 = sub_19CAAA10C();
    }
    else
    {
      v9 = MEMORY[0x1E0DEE9E0];
    }
    v12 = v9;
    v10 = swift_bridgeObjectRetain();
    sub_19C58EEE4(v10, 1, &v12);

    result = swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = (uint64_t)a1;
  }
  else
  {
    sub_19CAAA0B8();
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t MLModelStructure.NeuralNetwork.Layer.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLModelStructure.NeuralNetwork.Layer.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MLModelStructure.NeuralNetwork.Layer.inputNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.NeuralNetwork.Layer.outputNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.NeuralNetwork.layers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_19C58D65C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = a1;
  v4 = objc_msgSend(a1, sel_neuralNetwork);
  if (!v4)
    goto LABEL_17;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_layers);
  sub_19C535F80(0, &qword_1EE4244D0);
  v7 = sub_19CAA99F8();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease();

    v10 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    *a2 = v10;
    a2[1] = v2;
    return;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_14;
LABEL_4:
  v34 = MEMORY[0x1E0DEE9D8];
  sub_19C5571C8(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v27 = v5;
    v28 = a2;
    v9 = 0;
    v10 = v34;
    v29 = v2;
    v30 = v7 & 0xC000000000000001;
    v31 = v7;
    do
    {
      if (v30)
        v11 = (id)MEMORY[0x1A1AD4A9C](v9, v7);
      else
        v11 = *(id *)(v7 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_name);
      v14 = sub_19CAA98FC();
      v32 = v15;
      v33 = v14;

      v16 = objc_msgSend(v12, sel_type);
      v17 = sub_19CAA98FC();
      v19 = v18;

      v20 = objc_msgSend(v12, sel_inputNames);
      v21 = sub_19CAA99F8();

      v22 = objc_msgSend(v12, sel_outputNames);
      v23 = sub_19CAA99F8();

      v25 = *(_QWORD *)(v34 + 16);
      v24 = *(_QWORD *)(v34 + 24);
      if (v25 >= v24 >> 1)
        sub_19C5571C8(v24 > 1, v25 + 1, 1);
      ++v9;
      *(_QWORD *)(v34 + 16) = v25 + 1;
      v26 = (_QWORD *)(v34 + 56 * v25);
      v26[4] = v33;
      v26[5] = v32;
      v26[6] = v17;
      v26[7] = v19;
      v26[8] = v21;
      v26[9] = v23;
      v26[10] = v12;
      v7 = v31;
    }
    while (v8 != v9);
    swift_bridgeObjectRelease();

    a2 = v28;
    v2 = v29;
    goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  sub_19CAAA0B8();
  __break(1u);
}

uint64_t MLModelStructure.Pipeline.subModelNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLModelStructure.Pipeline.subModels.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_19C58D954(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char **v13;
  id v14;
  void *v15;
  id v16;
  __int128 v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  __int128 v36;
  _QWORD *v37;

  v2 = (uint64_t)a1;
  v4 = objc_msgSend(a1, sel_pipeline);
  if (!v4)
  {
    while (1)
    {
LABEL_30:
      sub_19CAAA0B8();
      __break(1u);
      swift_unexpectedError();
      __break(1u);
    }
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_subModelNames);
  v7 = sub_19CAA99F8();

  v8 = objc_msgSend(v5, sel_subModels);
  sub_19C535F80(0, &qword_1EE424508);
  v9 = sub_19CAA99F8();

  if (v9 >> 62)
    goto LABEL_26;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_27:
    swift_bridgeObjectRelease();

    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_28;
  }
  while (1)
  {
    v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_19C557200(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    v31 = v7;
    v32 = v5;
    v33 = a2;
    v34 = v2;
    v11 = 0;
    v2 = 0;
    v5 = v37;
    v12 = v9 & 0xC000000000000001;
    v13 = &selRef_mean;
LABEL_6:
    if (v10 != v11)
      break;
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    v10 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
    if (!v10)
      goto LABEL_27;
  }
  if (v12)
    v14 = (id)MEMORY[0x1A1AD4A9C](v11, v9);
  else
    v14 = *(id *)(v9 + 8 * v11 + 32);
  v15 = v14;
  v16 = objc_msgSend(v14, sel_neuralNetwork);
  if (v16)
  {

    sub_19C58D65C(v15, &v35);
    v7 = 0;
    a2 = v35;
    *(_QWORD *)&v17 = v36;
  }
  else
  {
    v18 = objc_msgSend(v15, v13[358]);
    if (v18)
    {

      v19 = objc_msgSend(v15, v13[358]);
      if (!v19)
        goto LABEL_30;
      v20 = v19;
      v21 = objc_msgSend(v19, sel_functions);
      sub_19C535F80(0, &qword_1EE4244D8);
      v22 = sub_19CAA9800();

      v23 = sub_19C58C134(v22);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v23 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424118);
        v24 = sub_19CAAA10C();
      }
      else
      {
        v24 = MEMORY[0x1E0DEE9E0];
      }
      v12 = v9 & 0xC000000000000001;
      v35 = (uint64_t *)v24;
      v26 = swift_bridgeObjectRetain();
      sub_19C58EEE4(v26, 1, &v35);

      swift_bridgeObjectRelease();
      a2 = v35;
      v17 = (unint64_t)v15;
      v7 = 1;
    }
    else
    {
      v25 = objc_msgSend(v15, sel_pipeline);
      if (v25)
      {

        sub_19C58D954(&v35, v15);
        a2 = v35;
        v17 = v36;
        v7 = 2;
      }
      else
      {

        a2 = 0;
        v17 = 0uLL;
        v7 = 3;
      }
    }
  }
  v37 = v5;
  v28 = v5[2];
  v27 = v5[3];
  if (v28 >= v27 >> 1)
  {
    v30 = v17;
    sub_19C557200(v27 > 1, v28 + 1, 1);
    v17 = v30;
    v12 = v9 & 0xC000000000000001;
    v5 = v37;
  }
  v5[2] = v28 + 1;
  v29 = &v5[4 * v28];
  v29[4] = a2;
  ++v11;
  *(_OWORD *)(v29 + 5) = v17;
  *((_BYTE *)v29 + 56) = v7;
  v13 = &selRef_mean;
  if (v10 != v11)
    goto LABEL_6;
  swift_bridgeObjectRelease();

  a2 = v33;
  v2 = v34;
  v7 = v31;
LABEL_28:
  *a2 = v7;
  a2[1] = (uint64_t)v5;
  a2[2] = v2;
}

uint64_t static MLModelStructure.load(contentsOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch();
}

uint64_t sub_19C58DDAC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)objc_opt_self();
  v2 = sub_19CAA95D8();
  v0[18] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_19C58DE68;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_19C52A548;
  v4[3] = &block_descriptor_7;
  v4[4] = v3;
  objc_msgSend(v1, sel_loadContentsOfURL_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_19C58DE68()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_19C58DEC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);

  sub_19C58C5C0(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static MLModelStructure.load(asset:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch();
}

uint64_t sub_19C58DF24()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[17];
  v2 = (void *)objc_opt_self();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_19C58DFD4;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_19C52A548;
  v4[3] = &block_descriptor_2_0;
  v4[4] = v3;
  objc_msgSend(v2, sel_loadModelAsset_completionHandler_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_19C58DFD4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_19C58E034()
{
  uint64_t v0;

  sub_19C58C5C0(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void destroy for MLModelStructure(uint64_t a1)
{
  sub_19C52A99C(*(_QWORD *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for MLModelStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_19C52A2E4(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for MLModelStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_19C52A2E4(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_19C52A99C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for MLModelStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_19C52A99C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLModelStructure(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelStructure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_19C58E220(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_19C58E238(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MLModelStructure()
{
  return &type metadata for MLModelStructure;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program()
{
  return &type metadata for MLModelStructure.Program;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.ValueType()
{
  return &type metadata for MLModelStructure.Program.ValueType;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.Value()
{
  return &type metadata for MLModelStructure.Program.Value;
}

_QWORD *initializeBufferWithCopyOfBuffer for MLModelStructure.Program.NamedValueType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MLModelStructure.Program.NamedValueType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MLModelStructure.Program.NamedValueType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLModelStructure.Program.NamedValueType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelStructure.Program.NamedValueType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.NamedValueType()
{
  return &type metadata for MLModelStructure.Program.NamedValueType;
}

uint64_t sub_19C58E3D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for MLModelStructure.Program.Binding(uint64_t a1)
{
  return sub_19C58E3F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_19C58E3F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s6CoreML16MLModelStructureO7ProgramV7BindingOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19C58E3D4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MLModelStructure.Program.Binding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_19C58E3D4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_19C58E3F4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MLModelStructure.Program.Binding(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_19C58E3F4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.Binding()
{
  return &type metadata for MLModelStructure.Program.Binding;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.Argument()
{
  return &type metadata for MLModelStructure.Program.Argument;
}

void destroy for MLModelStructure.Program.Function(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MLModelStructure.Program.Function(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for MLModelStructure.Program.Function(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for MLModelStructure.Program.Function(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();

  v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.Function()
{
  return &type metadata for MLModelStructure.Program.Function;
}

void destroy for MLModelStructure.Program.Block(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MLModelStructure.Program.Block(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for MLModelStructure.Program.Block(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MLModelStructure.Program.Block(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.Block()
{
  return &type metadata for MLModelStructure.Program.Block;
}

void destroy for MLModelStructure.Program.Operation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MLModelStructure.Program.Operation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for MLModelStructure.Program.Operation(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MLModelStructure.Program.Operation(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for MLModelStructure.Program.Operation()
{
  return &type metadata for MLModelStructure.Program.Operation;
}

_QWORD *initializeBufferWithCopyOfBuffer for MLModelStructure.NeuralNetwork(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for MLModelStructure.NeuralNetwork(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s6CoreML16MLModelStructureO13NeuralNetworkVwca_0(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MLModelStructure.NeuralNetwork(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for MLModelStructure.NeuralNetwork()
{
  return &type metadata for MLModelStructure.NeuralNetwork;
}

void destroy for MLModelStructure.NeuralNetwork.Layer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MLModelStructure.NeuralNetwork.Layer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for MLModelStructure.NeuralNetwork.Layer(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[6];
  v5 = (void *)a1[6];
  a1[6] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for MLModelStructure.NeuralNetwork.Layer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for MLModelStructure.NeuralNetwork.Layer()
{
  return &type metadata for MLModelStructure.NeuralNetwork.Layer;
}

void destroy for MLModelStructure.Pipeline(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *_s6CoreML16MLModelStructureO8PipelineVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for MLModelStructure.Pipeline(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MLModelStructure.Pipeline(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for MLModelStructure.Pipeline(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLModelStructure.Pipeline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLModelStructure.Pipeline()
{
  return &type metadata for MLModelStructure.Pipeline;
}

void sub_19C58EEE4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t *v20;
  _OWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = a1 + 40;
  while (1)
  {
    if (v5 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_19CAAA244();
      __break(1u);
      goto LABEL_24;
    }
    v32 = *(_OWORD *)(v6 + 24);
    v33 = *(_OWORD *)(v6 + 40);
    v31 = *(_OWORD *)(v6 + 8);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = (id)v33;
    v9 = *((id *)&v33 + 1);
    if (!v8)
      goto LABEL_18;
    v27 = v9;
    v10 = (_QWORD *)*a3;
    v12 = sub_19C54B7A4(v7, v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_19C54F8AC();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v20 = (uint64_t *)(v19[6] + 16 * v12);
    *v20 = v7;
    v20[1] = v8;
    v21 = (_OWORD *)(v19[7] + 48 * v12);
    *v21 = v31;
    v21[1] = v32;
    v21[2] = v33;
    v22 = v19[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_22;
    ++v5;
    v19[2] = v24;
    v6 += 64;
    a2 = 1;
    if (v4 == v5)
      goto LABEL_18;
  }
  sub_19C54D20C(v15, a2 & 1);
  v17 = sub_19C54B7A4(v7, v8);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v25 = (void *)swift_allocError();
  swift_willThrow();
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_19CAA9F2C();
  sub_19CAA992C();
  sub_19CAAA064();
  sub_19CAA992C();
  sub_19CAAA0B8();
  __break(1u);
}

void sub_19C58F268(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _OWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  __int128 v46;
  __int128 v47;

  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_24;
  v46 = *(_OWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = *((id *)&v46 + 1);
  if (!v8)
    goto LABEL_24;
  v10 = v9;
  v45 = a3;
  v11 = *a3;
  v13 = sub_19C54B7A4(v7, v8);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v17 = v12;
  if (*(_QWORD *)(v11 + 24) >= v16)
  {
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) == 0)
        goto LABEL_13;
    }
    else
    {
      sub_19C5506C0();
      if ((v17 & 1) == 0)
        goto LABEL_13;
    }
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_30;
  }
  sub_19C54EA3C(v16, a2 & 1);
  v18 = sub_19C54B7A4(v7, v8);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_29:
    sub_19CAAA244();
    __break(1u);
LABEL_30:
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAAA064();
    sub_19CAA992C();
    sub_19CAAA0B8();
    __break(1u);
    return;
  }
  v13 = v18;
  if ((v17 & 1) != 0)
    goto LABEL_10;
LABEL_13:
  v22 = v45;
  v23 = (_QWORD *)*v45;
  *(_QWORD *)(*v45 + 8 * (v13 >> 6) + 64) |= 1 << v13;
  v24 = (uint64_t *)(v23[6] + 16 * v13);
  *v24 = v7;
  v24[1] = v8;
  *(_OWORD *)(v23[7] + 16 * v13) = v46;
  v25 = v23[2];
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v23[2] = v27;
  if (v6 != 1)
  {
    v28 = (_OWORD *)(a1 + 80);
    v29 = 1;
    while (v29 < *(_QWORD *)(a1 + 16))
    {
      v47 = *v28;
      v31 = *((_QWORD *)v28 - 2);
      v30 = *((_QWORD *)v28 - 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = *((id *)&v47 + 1);
      if (!v30)
        goto LABEL_24;
      v10 = v32;
      v33 = *v22;
      v34 = sub_19C54B7A4(v31, v30);
      v36 = *(_QWORD *)(v33 + 16);
      v37 = (v35 & 1) == 0;
      v26 = __OFADD__(v36, v37);
      v38 = v36 + v37;
      if (v26)
        goto LABEL_26;
      v39 = v35;
      if (*(_QWORD *)(v33 + 24) < v38)
      {
        sub_19C54EA3C(v38, 1);
        v34 = sub_19C54B7A4(v31, v30);
        if ((v39 & 1) != (v40 & 1))
          goto LABEL_29;
      }
      if ((v39 & 1) != 0)
        goto LABEL_10;
      v22 = v45;
      v41 = (_QWORD *)*v45;
      *(_QWORD *)(*v45 + 8 * (v34 >> 6) + 64) |= 1 << v34;
      v42 = (uint64_t *)(v41[6] + 16 * v34);
      *v42 = v31;
      v42[1] = v30;
      *(_OWORD *)(v41[7] + 16 * v34) = v47;
      v43 = v41[2];
      v26 = __OFADD__(v43, 1);
      v44 = v43 + 1;
      if (v26)
        goto LABEL_27;
      ++v29;
      v41[2] = v44;
      v28 += 2;
      if (v6 == v29)
        goto LABEL_24;
    }
    goto LABEL_28;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

id static MLComputePolicy.cpuAndGPU.getter@<X0>(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;

  if (qword_1EE422E78 != -1)
    swift_once();
  v2 = (void *)qword_1EE431810;
  if ((unint64_t)qword_1EE431810 <= 1)
    v3 = 1;
  else
    v3 = qword_1EE431810;
  *a1 = v3;
  return v2;
}

BOOL static MLComputePolicy.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v2 == (void *)1)
    {
      if (v3 != (void *)1)
        return 0;
    }
    else
    {
      if ((unint64_t)v3 < 2)
        return 0;
      sub_19C5229D0();
      sub_19C522F30(v2);
      sub_19C522F30(v3);
      v4 = sub_19CAA9DB8();
      sub_19C4F382C(v3);
      sub_19C4F382C(v2);
      if ((v4 & 1) == 0)
        return 0;
    }
    return 1;
  }
  return !v3;
}

void static MLComputePolicy.cpuOnly.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_19C58F77C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_19CAAA298();
  sub_19CAAA2A4();
  if ((unint64_t)v1 > 1)
  {
    v2 = v1;
    sub_19CAA9DC4();
    sub_19C4F382C(v1);
  }
  return sub_19CAAA2C8();
}

void sub_19C58F7F8()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0 && v1 != (void *)1)
  {
    sub_19CAAA2A4();
    v2 = v1;
    sub_19CAA9DC4();
    sub_19C4F382C(v1);
  }
  else
  {
    sub_19CAAA2A4();
  }
}

uint64_t sub_19C58F870()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_19CAAA298();
  sub_19CAAA2A4();
  if ((unint64_t)v1 > 1)
  {
    v2 = v1;
    sub_19CAA9DC4();
    sub_19C4F382C(v1);
  }
  return sub_19CAAA2C8();
}

BOOL sub_19C58F8E8(void **a1, void **a2)
{
  void *v2;
  void *v3;
  char v5;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
    return !v3;
  if (v2 == (void *)1)
    return v3 == (void *)1;
  if ((unint64_t)v3 < 2)
    return 0;
  sub_19C5229D0();
  sub_19C522F30(v2);
  sub_19C522F30(v3);
  v5 = sub_19CAA9DB8();
  sub_19C4F382C(v3);
  sub_19C4F382C(v2);
  return v5 & 1;
}

void MLComputePolicy.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0 && v1 != (void *)1)
  {
    sub_19CAAA2A4();
    v2 = v1;
    sub_19CAA9DC4();
    sub_19C4F382C(v1);
  }
  else
  {
    sub_19CAAA2A4();
  }
}

uint64_t MLComputePolicy.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_19CAAA298();
  sub_19CAAA2A4();
  if ((unint64_t)v1 > 1)
  {
    v2 = v1;
    sub_19CAA9DC4();
    sub_19C4F382C(v1);
  }
  return sub_19CAAA2C8();
}

uint64_t MLComputePolicy.description.getter()
{
  void **v0;
  void *v1;
  uint64_t v2;
  uint64_t result;
  id v4;

  v1 = *v0;
  if (!*v0)
    return 0x6976656420796E41;
  if (v1 == (void *)1)
    return 5591107;
  result = (uint64_t)objc_msgSend(v1, sel_metalDevice);
  if (result)
  {
    v4 = objc_msgSend((id)result, sel_name);
    swift_unknownObjectRelease();
    v2 = sub_19CAA98FC();

    sub_19C4F382C(v1);
    return v2;
  }
  __break(1u);
  return result;
}

BOOL sub_19C58FB40(void **a1, void **a2)
{
  void *v2;
  void *v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v2 == (void *)1)
    {
      if (v3 != (void *)1)
        return 0;
    }
    else
    {
      if ((unint64_t)v3 < 2)
        return 0;
      sub_19C5229D0();
      sub_19C522F30(v2);
      sub_19C522F30(v3);
      v4 = sub_19CAA9DB8();
      sub_19C4F382C(v3);
      sub_19C4F382C(v2);
      if ((v4 & 1) == 0)
        return 0;
    }
    return 1;
  }
  return !v3;
}

uint64_t MLComputePolicy.customMirror.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = sub_19CAAA2E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424510);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v11[1] = v8;
  v11[0] = MEMORY[0x1E0DEE9D8];
  v9 = sub_19CAAA2D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  sub_19C522F30(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424518);
  sub_19C58FD18();
  return sub_19CAAA2EC();
}

unint64_t sub_19C58FD18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE424520;
  if (!qword_1EE424520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE424518);
    result = MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE424520);
  }
  return result;
}

uint64_t sub_19C58FD64()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = sub_19CAAA2E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424510);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v11[1] = v8;
  v11[0] = MEMORY[0x1E0DEE9D8];
  v9 = sub_19CAAA2D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  sub_19C522F30(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424518);
  sub_19C58FD18();
  return sub_19CAAA2EC();
}

uint64_t static MLComputePolicy.current.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  if (qword_1EE422E80 != -1)
    swift_once();
  result = sub_19CAAA37C();
  *a1 = v3;
  return result;
}

id MLComputePolicy.init(_:)@<X0>(id result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  v3 = 1;
  switch((unint64_t)result)
  {
    case 0uLL:
    case 3uLL:
      goto LABEL_8;
    case 1uLL:
    case 2uLL:
      if (qword_1EE422E78 != -1)
        swift_once();
      if ((unint64_t)qword_1EE431810 <= 1)
        v3 = 1;
      else
        v3 = qword_1EE431810;
      result = (id)qword_1EE431810;
LABEL_8:
      *a2 = v3;
      break;
    default:
      sub_19CAA9F2C();
      sub_19CAA992C();
      type metadata accessor for MLComputeUnits(0);
      sub_19CAAA064();
      result = (id)sub_19CAAA0B8();
      __break(1u);
      break;
  }
  return result;
}

void static MLComputePolicy.specific(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  MLComputePolicy.init(_:)(a1, a2);
}

void MLComputePolicy.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v4;
  void *v5;
  BOOL v6;

  v2 = (uint64_t)a1;
  v4 = objc_msgSend(a1, sel_metalDevice);
  if (v4)
  {
    v5 = v4;
    if (qword_1EE422E40 != -1)
      swift_once();
    if (byte_1EE4317CA == 1)
    {
      v6 = MPSSupportsMTLDevice(v5);
      swift_unknownObjectRelease();
      if (v6)
      {
LABEL_9:
        *a2 = v2;
        return;
      }

    }
    else
    {

      swift_unknownObjectRelease();
    }
    v2 = 2;
    goto LABEL_9;
  }
  __break(1u);
}

void static MLComputePolicy.specific(_:)(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void MLComputePolicy.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{

  *a2 = 1;
}

unint64_t sub_19C590148()
{
  unint64_t result;

  result = qword_1EE424528;
  if (!qword_1EE424528)
  {
    result = MEMORY[0x1A1AD76AC](&protocol conformance descriptor for MLComputePolicy, &type metadata for MLComputePolicy);
    atomic_store(result, (unint64_t *)&qword_1EE424528);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLComputePolicy()
{
  return &type metadata for MLComputePolicy;
}

_QWORD *initializeBufferWithCopyOfBuffer for MLComputePolicy.Kind(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for MLComputePolicy.Kind(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for MLComputePolicy.Kind(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for MLComputePolicy.Kind(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

ValueMetadata *type metadata accessor for MLComputePolicy.Kind()
{
  return &type metadata for MLComputePolicy.Kind;
}

unint64_t sub_19C5902E0()
{
  unint64_t result;

  result = qword_1EE424530[0];
  if (!qword_1EE424530[0])
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAEC880, &type metadata for MLComputePolicy.Kind);
    atomic_store(result, qword_1EE424530);
  }
  return result;
}

uint64_t sub_19C590328()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_19C590330(uint64_t a1)
{
  uint64_t result;

  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + 40))
    return swift_release();
  return result;
}

_QWORD *sub_19C590384(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v7 = a2 + 5;
  v6 = a2[5];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    v8 = a2[6];
    a1[5] = v6;
    a1[6] = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 5) = *v7;
  }
  a1[7] = a2[7];
  return a1;
}

_QWORD *sub_19C590424(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  v4 = a1[5];
  a1[4] = a2[4];
  v5 = a2[5];
  if (!v4)
  {
    if (v5)
    {
      v7 = a2[6];
      a1[5] = v5;
      a1[6] = v7;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = a2[6];
  a1[5] = v5;
  a1[6] = v6;
  swift_retain();
  swift_release();
LABEL_8:
  a1[7] = a2[7];
  return a1;
}

uint64_t sub_19C590518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v6;
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19C5905D0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_19C590618(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LRUCache()
{
  JUMPOUT(0x1A1AD7634);
}

void sub_19C590674()
{
  JUMPOUT(0x1A1AD76ACLL);
}

void sub_19C590684(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[18];

  v2 = a1[3];
  v3 = sub_19CAA9E18();
  v8[3] = *(_QWORD *)(v3 - 8);
  v8[4] = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v8[9] = (char *)v8 - v5;
  v8[6] = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = a1[4];
  v6 = a1[5];
  v8[14] = a1[2];
  v8[15] = v2;
  v8[5] = v7;
  v8[16] = v7;
  v8[17] = v6;
  v8[10] = v6;
  type metadata accessor for LRUCache.Index();
}

uint64_t sub_19C590C1C@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];

  sub_19C590CA4(*v2, v2[1], v2[2], 0, 0, a1[2], a1[3], a1[4], v7, a1[5]);
  v4 = v7[3];
  a2[2] = v7[2];
  a2[3] = v4;
  a2[4] = v7[4];
  v5 = v7[1];
  *a2 = v7[0];
  a2[1] = v5;
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_19C590CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;

  if (a4)
  {
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a7;
    v19 = a7;
    v20 = a8;
    v18[4] = a8;
    v18[5] = a10;
    v21 = sub_19C590FB0;
    v18[6] = a4;
    v18[7] = a5;
  }
  else
  {
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a7;
    v19 = a7;
    v20 = a8;
    v18[4] = a8;
    v18[5] = a10;
    v21 = sub_19C590F50;
  }
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a6;
  v22[3] = v19;
  v22[4] = v20;
  v22[5] = a10;
  v22[6] = v21;
  v22[7] = v18;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a1;
  a9[4] = a2;
  a9[5] = -1;
  a9[6] = 0;
  a9[7] = 0;
  a9[8] = sub_19C590F80;
  a9[9] = v22;
  swift_retain();
  return swift_retain();
}

__n128 sub_19C590DD0@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  _OWORD v8[5];
  _OWORD v9[4];

  v4 = v2[1];
  v9[0] = *v2;
  v9[1] = v4;
  v5 = v2[3];
  v9[2] = v2[2];
  v9[3] = v5;
  sub_19C590C1C(a1, v8);
  sub_19C590EDC((uint64_t)v9);
  v6 = v8[3];
  *(_OWORD *)(a2 + 32) = v8[2];
  *(_OWORD *)(a2 + 48) = v6;
  *(_OWORD *)(a2 + 64) = v8[4];
  result = (__n128)v8[1];
  *(_OWORD *)a2 = v8[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_19C590E2C()
{
  return 0;
}

void type metadata accessor for LRUCache.Index()
{
  JUMPOUT(0x1A1AD7634);
}

uint64_t sub_19C590E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, char *);
  uint64_t result;
  uint64_t v19;

  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80);
  result = v17(v16 + ((v15 + 16) & ~v15), v13);
  if (v9)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a9, v13, a6);
  return result;
}

uint64_t sub_19C590EDC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19C530F14(v2);
  return a1;
}

uint64_t sub_19C590F40()
{
  return swift_deallocObject();
}

void sub_19C590F50(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_19C590F5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19C590F80()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 48))(&v2);
  return v2;
}

uint64_t sub_19C590FB0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 48))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19C590FDC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_19C591024(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_19C5910B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v4 = a2[9];
  a1[8] = a2[8];
  a1[9] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_19C5911A0(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_19C591224(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_19C59126C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LRUCache.Iterator()
{
  JUMPOUT(0x1A1AD7634);
}

uint64_t sub_19C5912CC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19C591344(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_19C5913F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_19C591404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19C591460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19C5914BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19C591518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19C591574(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_19C5915E4 + 4 * byte_19CAEC8E8[v8]))();
}

void sub_19C59163C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_19C591724()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_19C59172C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19C591734);
}

void sub_19C591750()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_19C591758()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_19C591760(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x19C591768);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t sub_19C591784(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_19C556FAC(0, v6, 0);
  v7 = v6;
  v37 = v4;
  v39 = a1;
  v35 = v5;
  if (v6)
  {
    v8 = (_QWORD *)(a1 + 32);
    v9 = (_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v11 = v7;
    v12 = a2;
    while (v4)
    {
      if (!v5)
        goto LABEL_30;
      v13 = *v8;
      v14 = *v8 + *v9;
      if (__OFADD__(*v8, *v9))
        goto LABEL_31;
      if (v14 < v13)
        goto LABEL_32;
      v16 = *(_QWORD *)(v40 + 16);
      v15 = *(_QWORD *)(v40 + 24);
      v17 = v16 + 1;
      if (v16 >= v15 >> 1)
      {
        v33 = v12;
        result = sub_19C556FAC(v15 > 1, v16 + 1, 1);
        v12 = v33;
        v17 = v16 + 1;
      }
      *(_QWORD *)(v40 + 16) = v17;
      v18 = v40 + 16 * v16;
      --v5;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v11)
        goto LABEL_15;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v12 = a2;
LABEL_15:
    if (v37 <= v35)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    v19 = 0;
    if (v7 <= v35)
      v20 = v35;
    else
      v20 = v7;
    v21 = v20 - v7;
    v22 = v37 - v7;
    v23 = v35 - v7;
    v24 = 8 * v7 + 32;
    v25 = v39 + v24;
    v26 = v12 + v24;
    while (v22 != v19)
    {
      if (v23 == v19)
        goto LABEL_28;
      if (v21 == v19)
        goto LABEL_34;
      v27 = *(_QWORD *)(v25 + 8 * v19);
      v28 = *(_QWORD *)(v26 + 8 * v19);
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        goto LABEL_35;
      if (v29 < v27)
        goto LABEL_36;
      v31 = *(_QWORD *)(v40 + 16);
      v30 = *(_QWORD *)(v40 + 24);
      if (v31 >= v30 >> 1)
      {
        v34 = v12;
        v36 = v25;
        v38 = v21;
        result = sub_19C556FAC(v30 > 1, v31 + 1, 1);
        v25 = v36;
        v21 = v38;
        v12 = v34;
      }
      *(_QWORD *)(v40 + 16) = v31 + 1;
      v32 = v40 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v27;
      *(_QWORD *)(v32 + 40) = v29;
      if (v22 == ++v19)
        goto LABEL_28;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_19C5919D4(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, _QWORD *a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (!sub_19C4D4494(a2, a5))
    goto LABEL_39;
  v46 = a1;
  v18 = a2[2];
  if (v18)
  {
    if (sub_19C4D4494(a3, a6)
      && (sub_19C521328((int64_t)a2, (uint64_t)a3) & 1) != 0
      && (sub_19C521328((int64_t)a5, (uint64_t)a6) & 1) != 0)
    {
      if (!*(_QWORD *)(v46 + 16))
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (!a3[2])
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v19 = *(_QWORD *)(v46 + 32);
      v20 = a3[4];
      v21 = v19 * v20;
      if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      if (!*(_QWORD *)(a4 + 16))
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (!a6[2])
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v22 = *(_QWORD *)(a4 + 32);
      v23 = a6[4];
      if ((unsigned __int128)(v22 * (__int128)v23) >> 64 != (v22 * v23) >> 63)
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v24 = a7 + *(_QWORD *)(*(_QWORD *)(a9 - 8) + 72) * v21;
      v25 = a8 + *(_QWORD *)(*(_QWORD *)(a10 - 8) + 72) * v22 * v23;
      v26 = a2 + 4;
      v27 = 1;
      while (1)
      {
        v28 = *v26++;
        v29 = v27 * v28;
        if ((unsigned __int128)(v27 * (__int128)v28) >> 64 != (v27 * v28) >> 63)
          break;
        v27 = v29;
        if (!--v18)
          goto LABEL_20;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if ((sub_19C527C54(v46, (uint64_t)a2, a3, a4, (uint64_t)a5, a6, a7, a8, a9, a10) & 1) == 0
      && (sub_19C4DC660(v46, (uint64_t)a2, a3, a4, (uint64_t)a5, a6, a7, a8, a9, a10) & 1) == 0)
    {
      v47 = a7;
      v48 = a8;
      v51 = sub_19C520070(v46, (uint64_t)a2, (uint64_t)a3);
      v49 = v30;
      v32 = v31;
      v52 = sub_19C520070(a4, (uint64_t)a5, (uint64_t)a6);
      v50 = v34;
      v35 = a2[4];
      if (v35 < 0)
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      v36 = v33;
      if (!v35)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      if (!*(_QWORD *)(v46 + 16))
        goto LABEL_47;
      if (!a3[2])
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      if (!*(_QWORD *)(a4 + 16))
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      if (!a6[2])
      {
LABEL_50:
        __break(1u);
        return;
      }
      v37 = a3;
      v38 = a6;
      v39 = 0;
      v40 = *(_QWORD *)(v46 + 32);
      v41 = v37[4];
      v42 = *(_QWORD *)(a4 + 32);
      v43 = v38[4];
      while (1)
      {
        v44 = v40 + v39;
        if (__OFADD__(v40, v39))
          break;
        if ((unsigned __int128)(v44 * (__int128)v41) >> 64 != (v44 * v41) >> 63)
          goto LABEL_35;
        v45 = v42 + v39;
        if (__OFADD__(v42, v39))
          goto LABEL_36;
        if ((unsigned __int128)(v45 * (__int128)v43) >> 64 != (v45 * v43) >> 63)
          goto LABEL_37;
        ++v39;
        sub_19C5919D4(v51, v49, v32, v52, v50, v36, v47 + *(_QWORD *)(*(_QWORD *)(a9 - 8) + 72) * v44 * v41, v48 + *(_QWORD *)(*(_QWORD *)(a10 - 8) + 72) * v45 * v43, a9, a10);
        if (v35 == v39)
          goto LABEL_33;
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    v24 = a7;
    v25 = a8;
    v27 = 1;
LABEL_20:
    sub_19C592970(v24, v25, v27, a9, a10);
  }
}

uint64_t sub_19C591D40(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t *v53;
  int64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  int64_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v116;
  uint64_t v117;

  v14 = result;
  v15 = a9;
  v16 = *(_QWORD *)(a2 + 16);
  if (v16)
  {
    v17 = (uint64_t *)(a2 + 32);
    v18 = 1;
    v19 = *(_QWORD *)(a2 + 16);
    do
    {
      v20 = *v17++;
      v21 = v18 * v20;
      if ((unsigned __int128)(v18 * (__int128)v20) >> 64 != (v18 * v20) >> 63)
      {
        __break(1u);
        goto LABEL_139;
      }
      v18 = v21;
      --v19;
    }
    while (v19);
    v22 = a5[2];
    if (!v22)
      goto LABEL_25;
    goto LABEL_6;
  }
  v21 = 1;
  v22 = a5[2];
  if (v22)
  {
LABEL_6:
    v23 = a5 + 4;
    v24 = 1;
    v25 = v22;
    while (1)
    {
      v26 = *v23++;
      v27 = v24 * v26;
      if ((unsigned __int128)(v24 * (__int128)v26) >> 64 != (v24 * v26) >> 63)
        break;
      v24 = v27;
      if (!--v25)
      {
        if (v21 != v27)
          goto LABEL_26;
        goto LABEL_10;
      }
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
LABEL_25:
  if (v21 != 1)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    result = sub_19C51FC18((unint64_t)a5, v14, a2, a3);
    if (result)
    {
      sub_19C5919D4(result, v34, v35, a4, a5, a6, a7, a8, a9, a9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v112 = a3;
    v110 = a8;
    v36 = 0;
    v37 = 1;
    while (1)
    {
      v38 = *(_QWORD *)(a2 + 8 * v36 + 32);
      v39 = (unsigned __int128)(v37 * (__int128)v38) >> 64;
      v37 *= v38;
      if (v39 != v37 >> 63)
        goto LABEL_148;
      if (v16 == ++v36)
      {
        swift_bridgeObjectRetain();
        v40 = swift_bridgeObjectRetain();
        v41 = (_QWORD *)sub_19C591784(v40, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v111 = sub_19C5ADD74(v41);
        v43 = v42;
        swift_bridgeObjectRetain();
        v44 = swift_bridgeObjectRetain();
        v45 = (_QWORD *)sub_19C591784(v44, (uint64_t)a5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = (uint64_t)sub_19C5ADD74(v45);
        v117 = result;
        if (v37 < 0)
          goto LABEL_179;
        v47 = v46;
        if (!v37)
        {
LABEL_137:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v48 = 0;
        v109 = result + 32;
        v107 = result + 8;
        while (v48 != v37)
        {
          v50 = v43;
          v113 = v48;
          if (!v43)
            goto LABEL_190;
          v51 = v47;
          v53 = v43 + 2;
          v52 = v43[2];
          if (v52)
          {
            v54 = v52 - 1;
            v55 = v43[v52 + 3];
            v56 = __OFADD__(v55, 1);
            v57 = v55 + 1;
            if (v56)
              goto LABEL_153;
            if (v52 > v111[2])
              goto LABEL_154;
            if (v57 >= v111[2 * v54 + 5])
            {
              result = swift_bridgeObjectRetain();
              if (v52 != 1)
              {
                v58 = &v111[2 * v52 + 1];
                v59 = v52;
                while (v43)
                {
                  result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    result = (uint64_t)sub_19C503550(v43);
                    v43 = (_QWORD *)result;
                  }
                  v60 = v52 - 1;
                  if ((int64_t)(v52 - 1) >= v43[2])
                    goto LABEL_140;
                  v43[v52 + 3] = 0;
                  v54 = v52 - 2;
                  if ((uint64_t)(v52 - 2) >= (uint64_t)*v53)
                    goto LABEL_141;
                  v61 = v53[v52];
                  v56 = __OFADD__(v61, 1);
                  v62 = v61 + 1;
                  if (v56)
                    goto LABEL_142;
                  if (v54 >= v111[2])
                    goto LABEL_143;
                  if (v62 < *v58)
                  {
                    v52 = v59;
                    v15 = a9;
                    goto LABEL_60;
                  }
                  v58 -= 2;
                  --v52;
                  if (v60 == 1)
                    goto LABEL_58;
                }
                goto LABEL_188;
              }
              v59 = 1;
LABEL_58:
              result = swift_bridgeObjectRelease();
              v43 = 0;
              v52 = v59;
              v15 = a9;
            }
            else
            {
              swift_bridgeObjectRetain();
LABEL_60:
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                result = (uint64_t)sub_19C503550(v43);
                v43 = (_QWORD *)result;
              }
              if (v54 >= v43[2])
                goto LABEL_169;
              v63 = v43[v54 + 4];
              v56 = __OFADD__(v63, 1);
              v64 = v63 + 1;
              if (v56)
                goto LABEL_170;
              v43[v54 + 4] = v64;
            }
          }
          else
          {
            result = swift_bridgeObjectRetain();
          }
          if (!v47)
            goto LABEL_191;
          v66 = v47 + 2;
          v65 = v47[2];
          v116 = v65;
          if (v65)
          {
            v67 = v65 - 1;
            v68 = v47[v65 + 3];
            v56 = __OFADD__(v68, 1);
            v69 = v68 + 1;
            if (v56)
              goto LABEL_155;
            if (v65 > *(_QWORD *)(v117 + 16))
              goto LABEL_156;
            if (v69 >= *(_QWORD *)(v109 + 16 * v67 + 8))
            {
              v108 = v52;
              result = swift_bridgeObjectRetain();
              if (v67)
              {
                v70 = v116;
                v71 = (int64_t *)(v107 + 16 * v116);
                while (v47)
                {
                  result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    result = (uint64_t)sub_19C503550(v47);
                    v47 = (_QWORD *)result;
                  }
                  v72 = v70 - 1;
                  if ((int64_t)(v70 - 1) >= v47[2])
                    goto LABEL_144;
                  v47[v70 + 3] = 0;
                  v67 = v70 - 2;
                  if ((uint64_t)(v70 - 2) >= (uint64_t)*v66)
                    goto LABEL_145;
                  v73 = v66[v70];
                  v56 = __OFADD__(v73, 1);
                  v74 = v73 + 1;
                  if (v56)
                    goto LABEL_146;
                  if (v67 >= *(_QWORD *)(v117 + 16))
                    goto LABEL_147;
                  if (v74 < *v71)
                  {
                    v52 = v108;
                    v15 = a9;
                    goto LABEL_85;
                  }
                  v71 -= 2;
                  --v70;
                  if (v72 == 1)
                    goto LABEL_83;
                }
                goto LABEL_189;
              }
LABEL_83:
              result = swift_bridgeObjectRelease();
              v47 = 0;
              v52 = v108;
              v15 = a9;
            }
            else
            {
              swift_bridgeObjectRetain();
LABEL_85:
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                result = (uint64_t)sub_19C503550(v47);
                v47 = (_QWORD *)result;
              }
              if (v67 >= v47[2])
                goto LABEL_171;
              v75 = v47[v67 + 4];
              v56 = __OFADD__(v75, 1);
              v76 = v75 + 1;
              if (v56)
                goto LABEL_172;
              v47[v67 + 4] = v76;
            }
          }
          else
          {
            result = swift_bridgeObjectRetain();
          }
          v77 = *v53;
          v78 = v112[2];
          if (v78 < *v53)
            goto LABEL_151;
          if (v52)
          {
            if (!v77)
              goto LABEL_157;
            v79 = v50[4];
            v80 = v112[4];
            v81 = v79 * v80;
            if ((unsigned __int128)(v79 * (__int128)v80) >> 64 != (v79 * v80) >> 63)
              goto LABEL_158;
            if (v52 != 1)
            {
              if (v77 < 2)
                goto LABEL_173;
              if (v78 != 1)
              {
                v82 = v50[5];
                v83 = v112[5];
                v84 = v82 * v83;
                if ((unsigned __int128)(v82 * (__int128)v83) >> 64 != (v82 * v83) >> 63)
                  goto LABEL_175;
                v56 = __OFADD__(v81, v84);
                v81 += v84;
                if (v56)
                  goto LABEL_176;
                if (v52 != 2)
                {
                  v85 = v77 >= 3;
                  v86 = v77 - 3;
                  if (!v85)
                    goto LABEL_180;
                  v87 = v78 - 2;
                  if (v78 != 2)
                  {
                    v88 = v50 + 6;
                    if (v78 <= 2)
                      v78 = 2;
                    v89 = v78 - 2;
                    v90 = v52 - 3;
                    v91 = v112 + 6;
                    while (v89)
                    {
                      v92 = *v88 * *v91;
                      if ((unsigned __int128)(*v88 * (__int128)*v91) >> 64 != v92 >> 63)
                        goto LABEL_162;
                      v56 = __OFADD__(v81, v92);
                      v81 += v92;
                      if (v56)
                        goto LABEL_163;
                      if (!v90)
                        goto LABEL_114;
                      if (!v86)
                        goto LABEL_167;
                      ++v91;
                      ++v88;
                      --v86;
                      --v89;
                      --v90;
                      if (!--v87)
                        goto LABEL_114;
                    }
                    goto LABEL_161;
                  }
                }
              }
            }
          }
          else
          {
            v81 = 0;
          }
LABEL_114:
          result = swift_bridgeObjectRelease();
          v93 = *v66;
          v94 = a6[2];
          if (v94 < *v66)
            goto LABEL_152;
          if (v116)
          {
            if (!v93)
              goto LABEL_159;
            v95 = v51[4];
            v96 = a6[4];
            v49 = v95 * v96;
            if ((unsigned __int128)(v95 * (__int128)v96) >> 64 != (v95 * v96) >> 63)
              goto LABEL_160;
            if (v116 != 1)
            {
              if (v93 < 2)
                goto LABEL_174;
              if (v94 != 1)
              {
                v97 = v51[5];
                v98 = a6[5];
                v99 = v97 * v98;
                if ((unsigned __int128)(v97 * (__int128)v98) >> 64 != (v97 * v98) >> 63)
                  goto LABEL_177;
                v56 = __OFADD__(v49, v99);
                v49 += v99;
                if (v56)
                  goto LABEL_178;
                if (v116 != 2)
                {
                  v85 = v93 >= 3;
                  v100 = v93 - 3;
                  if (!v85)
                    goto LABEL_181;
                  v101 = v94 - 2;
                  if (v94 != 2)
                  {
                    v102 = v51 + 6;
                    if (v94 <= 2)
                      v94 = 2;
                    v103 = v94 - 2;
                    v104 = v116 - 3;
                    v105 = a6 + 6;
                    while (v103)
                    {
                      v106 = *v102 * *v105;
                      if ((unsigned __int128)(*v102 * (__int128)*v105) >> 64 != v106 >> 63)
                        goto LABEL_165;
                      v56 = __OFADD__(v49, v106);
                      v49 += v106;
                      if (v56)
                        goto LABEL_166;
                      if (!v104)
                        goto LABEL_36;
                      if (!v100)
                        goto LABEL_168;
                      ++v105;
                      ++v102;
                      --v100;
                      --v103;
                      --v104;
                      if (!--v101)
                        goto LABEL_36;
                    }
                    goto LABEL_164;
                  }
                }
              }
            }
          }
          else
          {
            v49 = 0;
          }
LABEL_36:
          v48 = v113 + 1;
          swift_bridgeObjectRelease();
          result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v110 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v49, a7 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v81, v15);
          if (v113 + 1 == v37)
            goto LABEL_137;
        }
        goto LABEL_150;
      }
    }
  }
LABEL_10:
  if (!v16 || !v22)
    return sub_19CAA9E00();
  if ((sub_19C521410(a2, (uint64_t)a3) & 1) == 0)
    goto LABEL_27;
  result = sub_19C521410((int64_t)a5, (uint64_t)a6);
  if ((result & 1) == 0)
    goto LABEL_27;
  if (!*(_QWORD *)(v14 + 16))
  {
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  if (!a3[2])
  {
LABEL_183:
    __break(1u);
    goto LABEL_184;
  }
  v28 = *(_QWORD *)(v14 + 32);
  v29 = a3[4];
  if ((unsigned __int128)(v28 * (__int128)v29) >> 64 != (v28 * v29) >> 63)
  {
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  if (a6[2])
  {
    if ((unsigned __int128)(*(uint64_t *)(a4 + 32) * (__int128)(uint64_t)a6[4]) >> 64 != (uint64_t)(*(_QWORD *)(a4 + 32)
                                                                                                * a6[4]) >> 63)
      goto LABEL_187;
    result = a7 + *(_QWORD *)(*(_QWORD *)(a9 - 8) + 72) * v28 * v29;
    v30 = (uint64_t *)(a2 + 32);
    v31 = 1;
    while (1)
    {
      v32 = *v30++;
      v33 = v31 * v32;
      if ((unsigned __int128)(v31 * (__int128)v32) >> 64 != (v31 * v32) >> 63)
        break;
      v31 = v33;
      if (!--v16)
        return sub_19CAA9E00();
    }
    goto LABEL_149;
  }
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
  return result;
}

uint64_t sub_19C592690(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  uint64_t v19;

  v3 = *(void **)a3;
  v4 = *(_QWORD *)(a3 + 8);
  if (a2)
  {
    v5 = a2;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_19C55702C(0, a2 & ~(a2 >> 63), 0);
    if (v5 < 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v7 = v19;
    v8 = *(_QWORD *)(v19 + 16);
    do
    {
      _D8 = *a1;
      v10 = *(_QWORD *)(v19 + 24);
      v11 = v8 + 1;
      if (v8 >= v10 >> 1)
        sub_19C55702C(v10 > 1, v8 + 1, 1);
      __asm { FCVT            H0, D8 }
      *(_QWORD *)(v19 + 16) = v11;
      *(_WORD *)(v19 + 2 * v8 + 32) = _H0;
      ++a1;
      ++v8;
      --v5;
    }
    while (v5);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v11)
      return swift_bridgeObjectRelease();
  }
  if (!v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v4 < v11)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v7 + 32 >= (unint64_t)v3 + 2 * v11 || v7 + 32 + 2 * v11 <= (unint64_t)v3)
  {
    memcpy(v3, (const void *)(v7 + 32), 2 * v11);
    return swift_bridgeObjectRelease();
  }
LABEL_20:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

uint64_t sub_19C592800(__int16 *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  uint64_t v19;

  v3 = *(void **)a3;
  v4 = *(_QWORD *)(a3 + 8);
  if (a2)
  {
    v5 = a2;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_19C557010(0, a2 & ~(a2 >> 63), 0);
    if (v5 < 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    v7 = v19;
    v8 = *(_QWORD *)(v19 + 16);
    do
    {
      _H8 = *a1;
      v10 = *(_QWORD *)(v19 + 24);
      v11 = v8 + 1;
      if (v8 >= v10 >> 1)
        sub_19C557010(v10 > 1, v8 + 1, 1);
      __asm { FCVT            D0, H8 }
      *(_QWORD *)(v19 + 16) = v11;
      *(_QWORD *)(v19 + 8 * v8 + 32) = _D0;
      ++a1;
      ++v8;
      --v5;
    }
    while (v5);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v11)
      return swift_bridgeObjectRelease();
  }
  if (!v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v4 < v11)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v7 + 32 >= (unint64_t)v3 + 8 * v11 || v7 + 32 + 8 * v11 <= (unint64_t)v3)
  {
    memcpy(v3, (const void *)(v7 + 32), 8 * v11);
    return swift_bridgeObjectRelease();
  }
LABEL_20:
  result = sub_19CAAA118();
  __break(1u);
  return result;
}

void sub_19C592970(uint64_t a1, uint64_t a2, vDSP_Length a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  const double *v17;
  const float *v18;
  const int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char *v31;
  __int128 v32;
  _BYTE v33[184];
  _BYTE v34[184];
  _OWORD v35[23];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v9 = sub_19CAA9488();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CAA94D0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v36 = a2;
  *(_QWORD *)&v32 = a5;
  sub_19CAA9E0C();
  sub_19CAA9E0C();
  if (swift_dynamicCast())
  {
    sub_19CAA9E00();
    return;
  }
  v31 = v11;
  *(_QWORD *)&v36 = a1;
  v16 = sub_19CAA98B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246B8);
  if (swift_dynamicCast())
  {
    *((_QWORD *)&v30 + 1) = a3;
    v17 = *(const double **)&v35[0];
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423BC0);
    if (swift_dynamicCast())
    {
      vDSP_vdpsp(v17, 1, *(float **)&v35[0], 1, *((vDSP_Length *)&v30 + 1));
      return;
    }
    *(_QWORD *)&v30 = v17;
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246C8);
    if (swift_dynamicCast())
    {
      *(_QWORD *)&v36 = *(_QWORD *)&v35[0];
      *((_QWORD *)&v36 + 1) = *((_QWORD *)&v30 + 1);
      v35[0] = v30;
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DE9838], v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246D0);
      sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
      sub_19C4D60FC(&qword_1EE4246E0, &qword_1EE4246D0, MEMORY[0x1E0DE9B40]);
      sub_19CAA94F4();
LABEL_16:
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return;
    }
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE423BC8);
    if (swift_dynamicCast())
    {
      *(_QWORD *)&v36 = *(_QWORD *)&v35[0];
      *((_QWORD *)&v36 + 1) = *((_QWORD *)&v30 + 1);
      sub_19C592690((uint64_t *)v30, *((uint64_t *)&v30 + 1), (uint64_t)&v36);
      return;
    }
    a3 = *((_QWORD *)&v30 + 1);
    goto LABEL_30;
  }
  *(_QWORD *)&v36 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423400);
  if (swift_dynamicCast())
  {
    *((_QWORD *)&v30 + 1) = v16;
    v18 = *(const float **)&v35[0];
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246C0);
    if (swift_dynamicCast())
    {
      vDSP_vspdp(v18, 1, *(double **)&v35[0], 1, a3);
      return;
    }
    *(_QWORD *)&v30 = v18;
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246C8);
    if (swift_dynamicCast())
    {
      *(_QWORD *)&v36 = *(_QWORD *)&v35[0];
      *((_QWORD *)&v36 + 1) = a3;
      *(_QWORD *)&v35[0] = v30;
      *((_QWORD *)&v35[0] + 1) = a3;
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DE9838], v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246D0);
      sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
      sub_19C4D60FC(&qword_1EE4246E0, &qword_1EE4246D0, MEMORY[0x1E0DE9B40]);
      sub_19CAA953C();
      goto LABEL_16;
    }
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE423BC8);
    if (!swift_dynamicCast())
      goto LABEL_30;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
    v20 = swift_allocObject();
    v32 = xmmword_19CAE8180;
    *(_OWORD *)(v20 + 16) = xmmword_19CAE8180;
    *(_QWORD *)(v20 + 32) = a3;
    sub_19CAA9458();
    sub_19CAA9D7C();
    sub_19C572CF0((uint64_t)v33, (uint64_t)&v36);
    if (sub_19C4DCDEC((uint64_t)&v36) == 1)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v55 = v44;
    v56 = v45;
    v57 = v46;
    v51 = v40;
    v52 = v41;
    v54 = v43;
    v53 = v42;
    v47 = v36;
    v48 = v37;
    v49 = v38;
    v50 = v39;
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v32;
    *(_QWORD *)(v21 + 32) = a3;
    sub_19CAA9458();
    sub_19CAA9D7C();
    sub_19C572CF0((uint64_t)v34, (uint64_t)v35);
    if (sub_19C4DCDEC((uint64_t)v35) == 1)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
LABEL_24:
    *(_OWORD *)((char *)&v35[19] + 8) = v35[8];
    *(_OWORD *)((char *)&v35[20] + 8) = v35[9];
    *(_OWORD *)((char *)&v35[21] + 8) = v35[10];
    *(_OWORD *)((char *)&v35[15] + 8) = v35[4];
    *(_OWORD *)((char *)&v35[16] + 8) = v35[5];
    *(_OWORD *)((char *)&v35[17] + 8) = v35[6];
    *(_OWORD *)((char *)&v35[18] + 8) = v35[7];
    *(_OWORD *)((char *)&v35[11] + 8) = v35[0];
    *(_OWORD *)((char *)&v35[12] + 8) = v35[1];
    *(_OWORD *)((char *)&v35[13] + 8) = v35[2];
    *(_OWORD *)((char *)&v35[14] + 8) = v35[3];
    sub_19CAA9428();
    return;
  }
  *(_QWORD *)&v36 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4233F8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19 = *(const int **)&v35[0];
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246C0);
    if (swift_dynamicCast())
    {
      vDSP_vflt32D(v19, 1, *(double **)&v35[0], 1, a3);
      return;
    }
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423BC0);
    if (swift_dynamicCast())
    {
      vDSP_vflt32(v19, 1, *(float **)&v35[0], 1, a3);
      return;
    }
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE423BC8);
    if (swift_dynamicCast())
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
      v22 = swift_allocObject();
      v32 = xmmword_19CAE8180;
      *(_OWORD *)(v22 + 16) = xmmword_19CAE8180;
      *(_QWORD *)(v22 + 32) = a3;
      sub_19CAA9458();
      sub_19CAA9D7C();
      sub_19C572CF0((uint64_t)v33, (uint64_t)&v36);
      if (sub_19C4DCDEC((uint64_t)&v36) == 1)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v55 = v44;
      v56 = v45;
      v57 = v46;
      v51 = v40;
      v52 = v41;
      v54 = v43;
      v53 = v42;
      v47 = v36;
      v48 = v37;
      v49 = v38;
      v50 = v39;
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v32;
      *(_QWORD *)(v23 + 32) = a3;
      sub_19CAA9458();
      sub_19CAA9D7C();
      sub_19C572CF0((uint64_t)v34, (uint64_t)v35);
      if (sub_19C4DCDEC((uint64_t)v35) == 1)
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      goto LABEL_24;
    }
  }
LABEL_30:
  *(_QWORD *)&v36 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423408);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v24 = *(__int16 **)&v35[0];
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246C0);
    if (swift_dynamicCast())
    {
      *(_QWORD *)&v36 = *(_QWORD *)&v35[0];
      *((_QWORD *)&v36 + 1) = a3;
      sub_19C592800(v24, a3, (uint64_t)&v36);
      return;
    }
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423BC0);
    if (swift_dynamicCast())
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
      v25 = swift_allocObject();
      v32 = xmmword_19CAE8180;
      *(_OWORD *)(v25 + 16) = xmmword_19CAE8180;
      *(_QWORD *)(v25 + 32) = a3;
      sub_19CAA9458();
      sub_19CAA9D7C();
      sub_19C572CF0((uint64_t)v33, (uint64_t)&v36);
      if (sub_19C4DCDEC((uint64_t)&v36) == 1)
      {
        __break(1u);
      }
      else
      {
        v55 = v44;
        v56 = v45;
        v57 = v46;
        v51 = v40;
        v52 = v41;
        v54 = v43;
        v53 = v42;
        v47 = v36;
        v48 = v37;
        v49 = v38;
        v50 = v39;
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = v32;
        *(_QWORD *)(v26 + 32) = a3;
        sub_19CAA9458();
        sub_19CAA9D7C();
        sub_19C572CF0((uint64_t)v34, (uint64_t)v35);
        if (sub_19C4DCDEC((uint64_t)v35) != 1)
          goto LABEL_24;
      }
      __break(1u);
      goto LABEL_43;
    }
    *(_QWORD *)&v36 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246C8);
    if (swift_dynamicCast())
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
      v27 = swift_allocObject();
      v32 = xmmword_19CAE8180;
      *(_OWORD *)(v27 + 16) = xmmword_19CAE8180;
      *(_QWORD *)(v27 + 32) = a3;
      sub_19CAA9458();
      sub_19CAA9D7C();
      sub_19C572CF0((uint64_t)v33, (uint64_t)&v36);
      if (sub_19C4DCDEC((uint64_t)&v36) != 1)
      {
        v55 = v44;
        v56 = v45;
        v57 = v46;
        v51 = v40;
        v52 = v41;
        v54 = v43;
        v53 = v42;
        v47 = v36;
        v48 = v37;
        v49 = v38;
        v50 = v39;
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v32;
        *(_QWORD *)(v28 + 32) = a3;
        sub_19CAA9458();
        sub_19CAA9D7C();
        sub_19C572CF0((uint64_t)v34, (uint64_t)v35);
        if (sub_19C4DCDEC((uint64_t)v35) != 1)
          goto LABEL_24;
        goto LABEL_44;
      }
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
  }
LABEL_49:
  *(_QWORD *)&v36 = 0;
  *((_QWORD *)&v36 + 1) = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  sub_19CAAA3A0();
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAAA3A0();
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAAA0B8();
  __break(1u);
}

_QWORD *sub_19C59373C(_QWORD *result, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v4 = *result - 8;
    v5 = 1;
    v6 = *(_QWORD *)(a3 + 16);
    while (1)
    {
      *(_QWORD *)(v4 + 8 * v6) = v5;
      v7 = *(_QWORD *)(a3 + 24 + 8 * v6);
      if ((unsigned __int128)(v5 * (__int128)v7) >> 64 != (v5 * v7) >> 63)
        break;
      v5 *= v7;
      if (!--v6)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    *a2 = v3;
  }
  return result;
}

uint64_t sub_19C59378C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_19C5937DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v4 = result;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)(result + 32);
    v7 = 1;
    v8 = (uint64_t *)(result + 32);
    v9 = *(_QWORD *)(result + 16);
    do
    {
      v10 = *v8++;
      v11 = v7 * v10;
      if ((unsigned __int128)(v7 * (__int128)v10) >> 64 != (v7 * v10) >> 63)
      {
        __break(1u);
        goto LABEL_19;
      }
      v7 = v11;
      --v9;
    }
    while (v9);
    if (!v11)
      return 0;
    v12 = 1;
    while (1)
    {
      v13 = *v6++;
      v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v14;
      if (!--v5)
      {
        if (v14)
          goto LABEL_10;
        v19 = 0;
        goto LABEL_13;
      }
    }
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_19C4E0D80(v4, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = sub_19C4E796C(v15);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      v19 = 1;
    else
      v19 = v16;
LABEL_13:
    v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 72);
    result = v19 * v20;
    if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
    {
      __break(1u);
      return 0;
    }
  }
  return result;
}

uint64_t sub_19C5938FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_19C593960(a1, a2, a3, a4);
  return v8;
}

void sub_19C593960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a3 + 16) == *(_QWORD *)(a4 + 16))
  {
    sub_19C5937DC(a3, a4);
    __asm { BR              X11 }
  }
  __break(1u);
  JUMPOUT(0x19C593A1CLL);
}

uint64_t sub_19C593A38()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_19C4D4FA0(v2, v1);
  sub_19CAA9620();
  return sub_19C4D4FE4(v2, v1);
}

uint64_t sub_19C593ADC()
{
  swift_beginAccess();
  sub_19CAA9638();
  return swift_endAccess();
}

uint64_t sub_19C593B60()
{
  uint64_t v0;

  sub_19C4D4FE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_19C593B8C()
{
  sub_19C593B60();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataStorage);
}

uint64_t sub_19C593BB8()
{
  return sub_19C593A38();
}

uint64_t sub_19C593BCC()
{
  return sub_19C593ADC();
}

uint64_t sub_19C593BE0()
{
  uint64_t result;
  unint64_t v1;

  swift_getTupleTypeMetadata2();
  result = sub_19CAA9E18();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_19C593C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_getTupleTypeMetadata2();
  v2 = sub_19CAA9E18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_19C593CC8()
{
  sub_19C593C68();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LifetimeDependent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LifetimeDependent);
}

uint64_t Range<>.relative(toShapedArrayAxis:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 >= result && a2 >= a4)
    return a3;
  __break(1u);
  return result;
}

uint64_t sub_19C593D18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  result = *v2;
  v6 = v2[1];
  if (*v2 >= a1)
  {
    v9 = __OFSUB__(v6, a2);
    v7 = v6 == a2;
    v8 = v6 - a2 < 0;
  }
  else
  {
    v9 = 0;
    v7 = 0;
    v8 = 0;
  }
  if (!(v8 ^ v9 | v7))
    __break(1u);
  return result;
}

uint64_t PartialRangeFrom<>.relative(toShapedArrayAxis:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3 < result)
  {
    __break(1u);
  }
  else if (a2 >= a3)
  {
    return a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C593D58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = *v2;
  if (*v2 < a1)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result > a2)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t PartialRangeUpTo<>.relative(toShapedArrayAxis:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < a3)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (a3 < result)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_19C593D9C(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  if (*v2 > a2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*v2 < result)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t ClosedRange<>.relative(toShapedArrayAxis:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 < result || a3 >= a2 || a4 >= a2)
  {
    __break(1u);
  }
  else if (a4 >= result)
  {
    return a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C593DF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  result = *v2;
  v5 = v2[1];
  if (*v2 >= a1)
  {
    v7 = __OFSUB__(result, a2);
    v6 = result - a2 < 0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  if (v6 != v7)
  {
    v9 = __OFSUB__(v5, a2);
    v8 = v5 - a2 < 0;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  if (v8 != v9)
  {
    if (v5 >= a1)
      return result;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PartialRangeThrough<>.relative(toShapedArrayAxis:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3 >= a2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 < result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a3 < result)
LABEL_7:
    __break(1u);
  return result;
}

uint64_t sub_19C593E50(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  if (*v2 >= a2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 < result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*v2 < result)
LABEL_7:
    __break(1u);
  return result;
}

uint64_t dispatch thunk of MLShapedArrayRangeExpression.relative(toShapedArrayAxis:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_19C593E88(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6, unint64_t a7, uint64_t a8)
{
  unsigned __int8 v10;
  unsigned __int8 *v11;
  unsigned __int8 v12;
  unsigned __int8 *v14;
  uint64_t result;
  int v16;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  BOOL *v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unsigned __int8 *v28;
  BOOL *v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unsigned __int8 *v33;
  BOOL *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 *v39;
  float *v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  __int16 v45;
  __int16 v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  unsigned __int8 *v50;
  double *v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  unsigned int v57;
  int8x16_t *v63;
  int8x16_t *v64;
  int8x16_t v65;
  unint64_t v66;
  int8x16_t v67;
  unint64_t v68;
  int8x8_t *v69;
  int8x8_t *v70;
  unint64_t v71;
  int8x8_t v72;
  unint64_t v73;
  unsigned __int8 *v74;
  BOOL *v75;
  int v76;
  unint64_t v77;
  unint64_t v78;
  unsigned __int8 *v79;
  BOOL *v80;
  int v81;
  unint64_t v82;
  unint64_t v83;
  unsigned __int8 *v84;
  BOOL *v85;
  int v86;
  int8x16_t *v87;
  int16x8_t *v88;
  int8x16_t v89;
  unint64_t v90;
  int16x8_t v91;
  int16x8_t v92;
  int16x8_t v93;
  int16x8_t v94;
  unint64_t v95;
  int8x8_t *v96;
  int16x8_t *v97;
  unint64_t v98;
  int16x8_t v99;
  unint64_t v100;
  unint64_t v101;
  unsigned __int8 *v102;
  BOOL *v103;
  uint64_t v104;
  unint64_t v105;
  int8x8_t *v106;
  int64x2_t *v107;
  unint64_t v108;
  int8x16_t *v109;
  int32x4_t *v110;
  int8x16_t v111;
  unint64_t v112;
  int8x16_t v113;
  unint64_t v114;
  int8x8_t *v115;
  int32x4_t *v116;
  unint64_t v117;
  int32x4_t v118;
  int32x4_t v119;
  unsigned __int8 *v120;
  float32x2_t *v121;
  unint64_t v122;
  int8x8_t v123;
  unsigned int v124;
  unsigned int v125;
  unsigned __int8 *v126;
  float64x2_t *v127;
  unint64_t v128;
  int8x8_t v129;
  int8x8_t v130;
  unsigned int v131;
  unsigned int v132;
  int8x8_t v133;
  uint64x2_t v134;
  float64x2_t v135;
  unsigned __int8 *v136;
  _BYTE *v137;
  unint64_t v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unint64_t v145;
  unint64_t v146;
  unsigned __int8 *v147;
  BOOL *v148;
  __int16 v149;
  int8x16_t v150;
  unint64_t v151;
  int64x2_t *v152;
  int8x16_t *v153;
  int8x16_t *v154;
  int8x16_t *v155;
  int8x16_t v156;
  unint64_t v157;
  int8x16_t v158;
  unint64_t v159;
  int8x8_t *v160;
  int8x8_t *v161;
  unint64_t v162;
  int8x8_t v163;
  unint64_t v164;
  unsigned __int8 *v165;
  BOOL *v166;
  int v167;
  unint64_t v168;
  unint64_t v169;
  unsigned __int8 *v170;
  BOOL *v171;
  int v172;
  unint64_t v173;
  unint64_t v174;
  unsigned __int8 *v175;
  BOOL *v176;
  uint64_t v177;
  int8x16_t *v178;
  int16x8_t *v179;
  int8x16_t v180;
  unint64_t v181;
  int16x8_t v182;
  int16x8_t v183;
  int16x8_t v184;
  int16x8_t v185;
  unint64_t v186;
  int8x8_t *v187;
  int16x8_t *v188;
  unint64_t v189;
  int16x8_t v190;
  unint64_t v191;
  unint64_t v192;
  unsigned __int8 *v193;
  unsigned __int8 *v194;
  __int16 v195;
  unint64_t v196;
  int8x8_t *v197;
  int64x2_t *v198;
  unint64_t v199;
  int8x16_t *v200;
  int32x4_t *v201;
  int8x16_t v202;
  unint64_t v203;
  int8x16_t v204;
  unint64_t v205;
  int8x8_t *v206;
  int32x4_t *v207;
  unint64_t v208;
  int32x4_t v209;
  int32x4_t v210;
  unint64_t v211;
  unint64_t v212;
  unsigned __int8 *v213;
  unsigned __int8 *v214;
  unsigned __int8 v215;
  int8x16_t v216;
  unint64_t v217;
  int64x2_t *v218;
  int8x16_t *v219;
  unint64_t v220;
  unint64_t v221;
  unsigned __int8 *v222;
  unsigned __int8 *v223;
  int v224;
  int8x16_t *v225;
  __int128 *v226;
  int8x16_t v227;
  unint64_t v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  unint64_t v233;
  int8x8_t *v234;
  unsigned __int8 *v235;
  unint64_t v236;
  __int128 v237;
  unint64_t v238;
  unint64_t v239;
  unsigned __int8 *v240;
  unsigned __int8 *v241;
  int v242;
  unint64_t v243;
  unint64_t v244;
  unsigned __int8 *v245;
  unsigned __int8 *v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unsigned __int8 *v250;
  unsigned __int8 *v251;
  uint64_t v252;
  unint64_t v253;
  int8x8_t *v254;
  int8x16_t *v255;
  unint64_t v256;
  int8x16_t v257;
  int8x16_t v258;
  int8x16_t v259;
  int8x16_t v260;
  int8x16_t v261;
  int8x16_t *v262;
  __int128 *v263;
  int8x16_t v264;
  unint64_t v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  unint64_t v274;
  int8x8_t *v275;
  unsigned __int8 *v276;
  unint64_t v277;
  __int128 v278;
  __int128 v279;
  unint64_t v280;
  unint64_t v281;
  unsigned __int8 *v282;
  unsigned __int8 *v283;
  int v284;
  unint64_t v285;
  unint64_t v286;
  unsigned __int8 *v287;
  unsigned __int8 *v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  unsigned __int8 *v292;
  unsigned __int8 *v293;
  __int16 v294;
  int8x16_t v295;
  int8x16_t v296;
  unint64_t v297;
  int8x16_t *v298;
  int8x16_t *v299;
  int8x16_t v300;
  int8x16_t v301;
  int8x16_t v302;
  int8x16_t v303;
  int8x16_t v304;
  int8x16_t v305;
  int8x16_t v306;
  int8x16_t v307;
  unint64_t v308;
  unint64_t v309;
  unsigned __int8 *v310;
  unsigned __int8 *v311;
  int v312;
  unint64_t v313;
  unint64_t v314;
  unsigned __int8 *v315;
  unsigned __int8 *v316;
  uint64_t v317;
  unint64_t v318;
  unint64_t v319;
  unsigned __int8 *v320;
  unsigned __int8 *v321;
  unsigned __int8 v322;
  unint64_t v323;
  unint64_t v324;
  unsigned __int8 *v325;
  unsigned __int8 *v326;
  uint64_t v327;
  unint64_t v328;
  unint64_t v329;
  unsigned __int8 *v330;
  unsigned __int8 *v331;
  uint64_t v332;
  unint64_t v333;
  unint64_t v334;
  unsigned __int8 *v335;
  unsigned __int8 *v336;
  int v337;
  unint64_t v338;
  unsigned __int8 *v339;
  int8x8_t *v340;
  unint64_t v341;
  int8x8_t v342;
  int16x8_t v343;
  int32x4_t v344;
  __int128 v345;
  __int128 v346;
  int32x4_t v347;
  __int128 v348;
  unint64_t v349;
  unint64_t v350;
  unsigned __int8 *v351;
  unsigned __int8 *v352;
  int v353;
  unint64_t v354;
  unint64_t v355;
  unsigned __int8 *v356;
  unsigned __int8 *v357;
  unsigned int v358;
  unint64_t v359;
  unint64_t v360;
  unsigned __int8 *v361;
  unsigned __int8 *v362;
  uint64_t v363;
  _BOOL4 v364;
  unint64_t v365;
  _OWORD *v366;
  __int128 *v367;
  unint64_t v368;
  __int128 v369;
  unint64_t v370;
  uint64_t v371;
  unsigned __int8 *v372;
  unsigned __int8 *v373;
  __int16 v374;
  unint64_t v376;
  unint64_t v377;
  unsigned __int8 *v378;
  unsigned __int8 *v379;
  int v380;
  unint64_t v381;
  unint64_t v382;
  unsigned __int8 *v383;
  unsigned __int8 *v384;
  uint64_t v385;
  unint64_t v386;
  unint64_t v387;
  unsigned __int8 *v388;
  unsigned __int8 *v389;
  int v390;
  unint64_t v391;
  unint64_t v392;
  unsigned __int8 *v393;
  unsigned __int8 *v394;
  int v395;
  unint64_t v396;
  unint64_t v397;
  _OWORD *v398;
  __int128 *v399;
  unint64_t v400;
  __int128 v401;
  unint64_t v402;
  uint64_t v403;
  unsigned __int8 *v404;
  unsigned __int8 *v405;
  int v406;
  _BOOL4 v407;
  int32x4_t *v408;
  int16x4_t *v409;
  unint64_t v410;
  int16x8_t v411;
  int32x4_t v412;
  int32x4_t v413;
  int32x4_t *v414;
  int8x8_t *v415;
  unint64_t v416;
  int8x16_t v417;
  int8x16_t v418;
  int16x8_t v419;
  int16x8_t v420;
  int16x8_t v421;
  int16x8_t v422;
  unint64_t v423;
  int32x4_t *v424;
  int8x8_t *v425;
  unint64_t v426;
  int8x8_t v427;
  int16x8_t v428;
  _OWORD *v429;
  int16x4_t *v430;
  unint64_t v431;
  int16x8_t v432;
  int16x8_t v433;
  int32x4_t v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;
  int32x4_t v438;
  __int128 v439;
  __int128 v440;
  int32x4_t v441;
  __int128 v442;
  __int128 v443;
  int32x4_t v444;
  __int128 v445;
  unint64_t v446;
  int8x16_t *v447;
  unsigned __int8 *v448;
  int8x16_t v449;
  int16x8_t v450;
  int32x4_t v451;
  __int128 v452;
  __int128 v453;
  int32x4_t v454;
  __int128 v455;
  int16x8_t v456;
  int32x4_t v457;
  __int128 v458;
  int32x4_t v459;
  __int128 v460;
  __int128 v461;
  int16x8_t *v462;
  int8x8_t *v463;
  unint64_t v464;
  int8x16_t v465;
  int16x8_t v466;
  int16x8_t v467;
  unint64_t v468;
  int16x8_t *v469;
  int8x8_t *v470;
  unint64_t v471;
  int8x8_t v472;
  int16x8_t *v473;
  int16x8_t *v474;
  unint64_t v475;
  int16x8_t v476;
  int16x8_t v477;
  int16x8_t v478;
  int16x8_t v479;
  unint64_t v480;
  unint64_t v481;
  unsigned __int8 *v482;
  unsigned __int8 *v483;
  int v484;
  unint64_t v485;
  unint64_t v486;
  unsigned __int8 *v487;
  unsigned __int8 *v488;
  unsigned int v489;
  unint64_t v490;
  unint64_t v491;
  unsigned __int8 *v492;
  unsigned __int8 *v493;
  unsigned __int8 v494;
  unint64_t v496;
  unint64_t v497;
  unsigned __int8 *v498;
  unsigned __int8 *v499;
  int v500;
  unint64_t v501;
  unint64_t v502;
  unsigned __int8 *v503;
  unsigned __int8 *v504;
  uint64_t v505;
  int16x8_t *v506;
  int16x8_t *v507;
  unint64_t v508;
  int16x8_t v509;
  int16x8_t v510;
  int16x8_t v511;
  int16x8_t v512;
  _OWORD *v513;
  unsigned __int8 *v514;
  unint64_t v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  int8x16_t *v521;
  int8x16_t *v522;
  unint64_t v523;
  int8x16_t v524;
  int8x16_t v525;
  int8x16_t v526;
  int8x16_t v527;
  unint64_t v528;
  int8x8_t *v529;
  int16x8_t *v530;
  unint64_t v531;
  int16x8_t v532;
  int16x8_t *v533;
  int32x4_t *v534;
  unint64_t v535;
  int16x8_t v536;
  unint64_t v537;
  unint64_t v538;
  unsigned __int8 *v539;
  unsigned __int8 *v540;
  uint64_t v541;
  unint64_t v542;
  unint64_t v543;
  unsigned __int8 *v544;
  unsigned __int8 *v545;
  int v546;
  unint64_t v547;
  unint64_t v548;
  unsigned __int8 *v549;
  unsigned __int8 *v550;
  unsigned int v551;
  unint64_t v552;
  unint64_t v553;
  unsigned __int8 *v554;
  unsigned __int8 *v555;
  unsigned int v556;
  int16x8_t *v557;
  int32x4_t *v558;
  unint64_t v559;
  int16x8_t v560;
  int32x4_t *v561;
  int32x4_t *v562;
  unint64_t v563;
  int32x4_t v564;
  int32x4_t v565;
  int32x4_t v566;
  int32x4_t v567;
  int8x16_t *v568;
  int8x16x4_t *v569;
  unint64_t v570;
  unint64_t v571;
  unsigned __int8 *v572;
  int8x16x2_t *v573;
  unint64_t v574;
  unint64_t v575;
  unint64_t v576;
  unsigned __int8 *v577;
  unsigned __int8 *v578;
  __int16 v579;
  unint64_t v580;
  unint64_t v581;
  unsigned __int8 *v582;
  unsigned __int8 *v583;
  uint64_t v584;
  unint64_t v585;
  unint64_t v586;
  unsigned __int8 *v587;
  unsigned __int8 *v588;
  uint64_t v589;
  unint64_t v590;
  unint64_t v591;
  unsigned __int8 *v592;
  unsigned __int8 *v593;
  unsigned int v594;
  unint64_t v595;
  unsigned __int8 *v596;
  uint8x8_t *v597;
  unint64_t v598;
  uint8x8_t v599;
  uint16x8_t v600;
  uint32x4_t v601;
  __int128 v602;
  __int128 v603;
  uint32x4_t v604;
  __int128 v605;
  _OWORD *v606;
  int8x16x4_t *v607;
  unint64_t v608;
  __int128 v609;
  __int128 v610;
  unint64_t v611;
  unsigned __int8 *v612;
  int8x16x4_t *v613;
  unint64_t v614;
  uint32x4_t *v615;
  uint16x4_t *v616;
  unint64_t v617;
  uint16x8_t v618;
  uint32x4_t v619;
  uint32x4_t v620;
  int8x16_t *v621;
  int8x16_t *v622;
  unint64_t v623;
  int8x16_t v624;
  int8x16_t v625;
  int8x16_t v626;
  int8x16_t v627;
  unint64_t v628;
  int8x16_t *v629;
  unsigned __int8 *v630;
  unint64_t v631;
  uint64_t v632;
  int8x16_t v633;
  unint64_t v634;
  unint64_t v635;
  unsigned __int8 *v636;
  unsigned __int8 *v637;
  unsigned int v638;
  int8x16_t *v639;
  int8x16_t *v640;
  unint64_t v641;
  int8x16_t v642;
  int8x16_t v643;
  int8x16_t v644;
  int8x16_t v645;
  unint64_t v646;
  int8x16_t *v647;
  unsigned __int8 *v648;
  unint64_t v649;
  uint64_t v650;
  int8x16_t v651;
  uint32x4_t *v652;
  uint16x4_t *v653;
  unint64_t v654;
  uint16x8_t v655;
  uint32x4_t v656;
  uint32x4_t v657;
  _OWORD *v658;
  uint16x4_t *v659;
  unint64_t v660;
  uint16x8_t v661;
  uint16x8_t v662;
  uint32x4_t v663;
  __int128 v664;
  __int128 v665;
  __int128 v666;
  uint32x4_t v667;
  __int128 v668;
  __int128 v669;
  uint32x4_t v670;
  __int128 v671;
  __int128 v672;
  uint32x4_t v673;
  __int128 v674;
  unint64_t v675;
  uint8x16_t *v676;
  unsigned __int8 *v677;
  uint8x16_t v678;
  uint16x8_t v679;
  uint32x4_t v680;
  __int128 v681;
  __int128 v682;
  uint32x4_t v683;
  __int128 v684;
  uint16x8_t v685;
  uint32x4_t v686;
  __int128 v687;
  uint32x4_t v688;
  __int128 v689;
  __int128 v690;
  uint16x8_t *v691;
  uint8x8_t *v692;
  unint64_t v693;
  uint8x16_t v694;
  uint16x8_t v695;
  uint16x8_t v696;
  unint64_t v697;
  uint16x8_t *v698;
  uint8x8_t *v699;
  unint64_t v700;
  uint8x8_t v701;
  _OWORD *v702;
  __int128 *v703;
  unint64_t v704;
  __int128 v705;
  unint64_t v706;
  unsigned __int8 *v707;
  unsigned __int8 *v708;
  unint64_t v709;
  uint64_t v710;
  unint64_t v711;
  unsigned __int8 *v712;
  unsigned __int8 *v713;
  unsigned __int8 v714;
  int8x16_t *v715;
  int8x16_t *v716;
  unint64_t v717;
  int8x16_t v718;
  int8x16_t v719;
  int8x16_t v720;
  int8x16_t v721;
  unint64_t v722;
  int8x8_t *v723;
  int16x8_t *v724;
  unint64_t v725;
  int16x8_t v726;
  unint64_t v727;
  _OWORD *v728;
  __int128 *v729;
  unint64_t v730;
  __int128 v731;
  unint64_t v732;
  uint64_t v733;
  unsigned __int8 *v734;
  unsigned __int8 *v735;
  uint64_t v736;
  int16x8_t *v737;
  int16x8_t *v738;
  unint64_t v739;
  int16x8_t v740;
  int16x8_t v741;
  int16x8_t v742;
  int16x8_t v743;
  _OWORD *v744;
  unsigned __int8 *v745;
  unint64_t v746;
  __int128 v747;
  __int128 v748;
  __int128 v749;
  __int128 v750;
  __int128 v751;
  int8x16_t *v752;
  int8x16_t *v753;
  unint64_t v754;
  int8x16_t v755;
  int8x16_t v756;
  int8x16_t v757;
  int8x16_t v758;
  unint64_t v759;
  int8x8_t *v760;
  int16x8_t *v761;
  unint64_t v762;
  int16x8_t v763;
  int32x4_t *v764;
  int32x4_t *v765;
  unint64_t v766;
  int32x4_t v767;
  int32x4_t v768;
  int32x4_t v769;
  int32x4_t v770;
  int8x16_t *v771;
  int8x16x4_t *v772;
  unint64_t v773;
  unint64_t v774;
  unsigned __int8 *v775;
  int8x16x2_t *v776;
  unint64_t v777;
  unint64_t v778;
  int16x8_t *v779;
  int32x4_t *v780;
  unint64_t v781;
  int16x8_t v782;
  int32x4_t *v783;
  int32x4_t *v784;
  unint64_t v785;
  int32x4_t v786;
  int32x4_t v787;
  int32x4_t v788;
  int32x4_t v789;
  int8x16_t *v790;
  int8x16x4_t *v791;
  unint64_t v792;
  unint64_t v793;
  unsigned __int8 *v794;
  int8x16x2_t *v795;
  unint64_t v796;
  unint64_t v797;
  unsigned __int8 *v798;
  uint8x8_t *v799;
  unint64_t v800;
  uint8x8_t v801;
  uint16x8_t v802;
  uint32x4_t v803;
  __int128 v804;
  __int128 v805;
  uint32x4_t v806;
  __int128 v807;
  _OWORD *v808;
  int8x16x4_t *v809;
  unint64_t v810;
  __int128 v811;
  __int128 v812;
  unint64_t v813;
  unsigned __int8 *v814;
  int8x16x4_t *v815;
  unint64_t v816;
  unint64_t v817;
  unint64_t v818;
  unsigned __int8 *v819;
  unsigned __int8 *v820;
  unsigned __int8 v821;
  _OWORD *v822;
  int8x16x4_t *v823;
  unint64_t v824;
  __int128 v825;
  __int128 v826;
  unint64_t v827;
  unsigned __int8 *v828;
  int8x16x4_t *v829;
  unint64_t v830;
  _OWORD *v831;
  uint16x4_t *v832;
  unint64_t v833;
  uint16x8_t v834;
  uint16x8_t v835;
  uint32x4_t v836;
  __int128 v837;
  __int128 v838;
  __int128 v839;
  uint32x4_t v840;
  __int128 v841;
  __int128 v842;
  uint32x4_t v843;
  __int128 v844;
  __int128 v845;
  uint32x4_t v846;
  __int128 v847;
  unint64_t v848;
  uint8x16_t *v849;
  unsigned __int8 *v850;
  uint8x16_t v851;
  uint16x8_t v852;
  uint32x4_t v853;
  __int128 v854;
  __int128 v855;
  uint32x4_t v856;
  __int128 v857;
  uint16x8_t v858;
  uint32x4_t v859;
  __int128 v860;
  uint32x4_t v861;
  __int128 v862;
  __int128 v863;
  uint16x8_t *v864;
  uint8x8_t *v865;
  unint64_t v866;
  uint8x16_t v867;
  uint16x8_t v868;
  uint16x8_t v869;
  unint64_t v870;
  uint16x8_t *v871;
  uint8x8_t *v872;
  unint64_t v873;
  uint8x8_t v874;
  unint64_t v875;
  unint64_t v876;
  unsigned __int8 *v877;
  unsigned __int8 *v878;
  int v879;
  _OWORD *v880;
  unsigned __int8 *v881;
  unint64_t v882;
  __int128 v883;
  __int128 v884;
  __int128 v885;
  __int128 v886;
  __int128 v887;
  unint64_t v888;
  unint64_t v889;
  unsigned __int8 *v890;
  unsigned __int8 *v891;
  uint64_t v892;
  unint64_t v893;
  unint64_t v894;
  unsigned __int8 *v895;
  unsigned __int8 *v896;
  __int16 v897;
  _OWORD *v898;
  __int128 *v899;
  unint64_t v900;
  __int128 v901;
  unint64_t v902;
  unsigned __int8 *v903;
  unsigned __int8 *v904;
  unint64_t v905;
  uint64_t v906;
  unint64_t v907;
  unsigned __int8 *v908;
  unsigned __int8 *v909;
  unsigned __int8 v910;
  unint64_t v911;
  _OWORD *v912;
  __int128 *v913;
  unint64_t v914;
  __int128 v915;
  unint64_t v916;
  uint64_t v917;
  unsigned __int8 *v918;
  unsigned __int8 *v919;
  __int16 v920;
  unint64_t v921;
  unint64_t v922;
  unsigned __int8 *v923;
  unsigned __int8 *v924;
  int v925;
  int8x16_t *v926;
  int8x16_t *v927;
  unint64_t v928;
  int8x16_t v929;
  int8x16_t v930;
  int8x16_t v931;
  int8x16_t v932;
  unint64_t v933;
  int8x8_t *v934;
  int16x8_t *v935;
  unint64_t v936;
  int16x8_t v937;
  unint64_t v938;
  unint64_t v939;
  unsigned __int8 *v940;
  unsigned __int8 *v941;
  uint64_t v942;
  int8x16_t *v943;
  int8x16x4_t *v944;
  unint64_t v945;
  unint64_t v946;
  unsigned __int8 *v947;
  int8x16x2_t *v948;
  unint64_t v949;
  unint64_t v950;
  unint64_t v951;
  unsigned __int8 *v952;
  unsigned __int8 *v953;
  int v954;
  _OWORD *v955;
  int8x16x4_t *v956;
  unint64_t v957;
  __int128 v958;
  __int128 v959;
  unint64_t v960;
  unsigned __int8 *v961;
  int8x16x4_t *v962;
  unint64_t v963;
  unint64_t v964;
  unint64_t v965;
  unsigned __int8 *v966;
  unsigned __int8 *v967;
  int v968;
  int16x8_t *v969;
  int8x8_t *v970;
  unint64_t v971;
  int8x16_t v972;
  int16x8_t v973;
  int16x8_t v974;
  unint64_t v975;
  int16x8_t *v976;
  int8x8_t *v977;
  unint64_t v978;
  int8x8_t v979;
  unint64_t v980;
  _OWORD *v981;
  __int128 *v982;
  unint64_t v983;
  __int128 v984;
  unint64_t v985;
  uint64_t v986;
  unsigned __int8 *v987;
  unsigned __int8 *v988;
  int v989;
  int16x8_t *v990;
  int16x8_t *v991;
  unint64_t v992;
  int16x8_t v993;
  int16x8_t v994;
  int16x8_t v995;
  int16x8_t v996;
  unint64_t v997;
  unint64_t v998;
  unsigned __int8 *v999;
  unsigned __int8 *v1000;
  uint64_t v1001;
  int16x8_t *v1002;
  int32x4_t *v1003;
  unint64_t v1004;
  int16x8_t v1005;
  unint64_t v1006;
  unint64_t v1007;
  unsigned __int8 *v1008;
  unsigned __int8 *v1009;
  uint64_t v1010;
  unint64_t v1011;
  unint64_t v1012;
  unsigned __int8 *v1013;
  unsigned __int8 *v1014;
  uint64_t v1015;
  int32x4_t *v1016;
  int16x4_t *v1017;
  unint64_t v1018;
  int16x8_t v1019;
  int32x4_t v1020;
  int32x4_t v1021;
  int32x4_t *v1022;
  int8x8_t *v1023;
  unint64_t v1024;
  int8x16_t v1025;
  int8x16_t v1026;
  int16x8_t v1027;
  int16x8_t v1028;
  int16x8_t v1029;
  int16x8_t v1030;
  unint64_t v1031;
  int32x4_t *v1032;
  int8x8_t *v1033;
  unint64_t v1034;
  int8x8_t v1035;
  int16x8_t v1036;
  unint64_t v1037;
  unint64_t v1038;
  unsigned __int8 *v1039;
  unsigned __int8 *v1040;
  uint64_t v1041;
  unint64_t v1042;
  _OWORD *v1043;
  __int128 *v1044;
  unint64_t v1045;
  __int128 v1046;
  unint64_t v1047;
  uint64_t v1048;
  unsigned __int8 *v1049;
  unsigned __int8 *v1050;
  uint64_t v1051;
  int32x4_t *v1052;
  int32x4_t *v1053;
  unint64_t v1054;
  int32x4_t v1055;
  int32x4_t v1056;
  int32x4_t v1057;
  int32x4_t v1058;
  unint64_t v1059;
  unint64_t v1060;
  unsigned __int8 *v1061;
  unsigned __int8 *v1062;
  int v1063;
  unint64_t v1065;
  unsigned __int8 *v1066;
  int8x8_t *v1067;
  unint64_t v1068;
  int8x8_t v1069;
  int16x8_t v1070;
  int32x4_t v1071;
  __int128 v1072;
  __int128 v1073;
  int32x4_t v1074;
  __int128 v1075;
  unint64_t v1076;
  float16x8_t *v1077;
  int16x4_t *v1078;
  unint64_t v1079;
  float16x8_t v1080;
  unint64_t v1081;
  uint64_t v1082;
  unsigned __int8 *v1083;
  unsigned __int8 *v1084;
  int v1085;
  _OWORD *v1087;
  int16x4_t *v1088;
  unint64_t v1089;
  int16x8_t v1090;
  int16x8_t v1091;
  int32x4_t v1092;
  __int128 v1093;
  __int128 v1094;
  __int128 v1095;
  int32x4_t v1096;
  __int128 v1097;
  __int128 v1098;
  int32x4_t v1099;
  __int128 v1100;
  __int128 v1101;
  int32x4_t v1102;
  __int128 v1103;
  unint64_t v1104;
  int8x16_t *v1105;
  unsigned __int8 *v1106;
  int8x16_t v1107;
  int16x8_t v1108;
  int32x4_t v1109;
  __int128 v1110;
  __int128 v1111;
  int32x4_t v1112;
  __int128 v1113;
  int16x8_t v1114;
  int32x4_t v1115;
  __int128 v1116;
  int32x4_t v1117;
  __int128 v1118;
  __int128 v1119;
  unint64_t v1120;
  unint64_t v1121;
  int *v1122;
  unsigned __int8 *v1123;
  int v1124;
  _OWORD *v1126;
  unsigned __int8 *v1127;
  unint64_t v1128;
  __int128 v1129;
  __int128 v1130;
  __int128 v1131;
  __int128 v1132;
  __int128 v1133;
  unint64_t v1134;
  unint64_t v1135;
  uint64_t *v1136;
  unsigned __int8 *v1137;
  uint64_t v1138;
  unint64_t v1140;
  unint64_t v1141;
  unsigned __int8 *v1142;
  unsigned __int8 *v1143;
  unsigned int v1144;
  unint64_t v1146;
  float16x8_t *v1147;
  uint16x4_t *v1148;
  unint64_t v1149;
  float16x8_t v1150;
  unint64_t v1151;
  uint64_t v1152;
  unsigned __int8 *v1153;
  unsigned __int8 *v1154;
  unsigned int v1155;
  float16x8_t *v1157;
  int8x8_t *v1158;
  unint64_t v1159;
  int8x16_t v1160;
  int16x8_t v1161;
  float16x8_t v1162;
  int16x8_t v1163;
  float16x8_t v1164;
  int16x8_t v1165;
  float16x8_t v1166;
  int16x8_t v1167;
  unint64_t v1168;
  float16x8_t *v1169;
  int8x8_t *v1170;
  unint64_t v1171;
  int8x8_t v1172;
  int16x8_t v1173;
  unint64_t v1174;
  unint64_t v1175;
  unsigned int *v1176;
  unsigned __int8 *v1177;
  unsigned int v1178;
  float16x8_t *v1180;
  int32x4_t *v1181;
  unint64_t v1182;
  int32x4_t v1183;
  int32x4_t v1184;
  int32x4_t v1185;
  int32x4_t v1186;
  unint64_t v1187;
  unint64_t v1188;
  unint64_t *v1189;
  unsigned __int8 *v1190;
  unint64_t v1191;
  float16x8_t *v1193;
  int64x2_t *v1194;
  unint64_t v1195;
  float16x8_t v1196;
  unint64_t v1197;
  unint64_t v1198;
  unsigned __int8 *v1199;
  float *v1200;
  int v1201;
  unint64_t v1202;
  unint64_t v1203;
  unsigned __int8 *v1204;
  float *v1205;
  int v1206;
  float16x8_t *v1207;
  uint8x8_t *v1208;
  unint64_t v1209;
  uint8x16_t v1210;
  uint16x8_t v1211;
  float16x8_t v1212;
  uint16x8_t v1213;
  float16x8_t v1214;
  uint16x8_t v1215;
  float16x8_t v1216;
  uint16x8_t v1217;
  unint64_t v1218;
  float16x8_t *v1219;
  uint8x8_t *v1220;
  unint64_t v1221;
  uint8x8_t v1222;
  uint16x8_t v1223;
  unint64_t v1224;
  float32x4_t *v1225;
  int32x4_t *v1226;
  unint64_t v1227;
  float32x4_t v1228;
  unint64_t v1229;
  uint64_t v1230;
  int *v1231;
  float *v1232;
  int v1233;
  float16x8_t *v1234;
  uint32x4_t *v1235;
  unint64_t v1236;
  uint32x4_t v1237;
  uint32x4_t v1238;
  uint32x4_t v1239;
  uint32x4_t v1240;
  unint64_t v1241;
  unint64_t v1242;
  uint64_t *v1243;
  float *v1244;
  uint64_t v1245;
  float16x8_t *v1246;
  uint64x2_t *v1247;
  unint64_t v1248;
  float16x8_t v1249;
  unint64_t v1250;
  unint64_t v1251;
  unsigned __int8 *v1252;
  float *v1253;
  unsigned int v1254;
  unint64_t v1255;
  float32x4_t *v1256;
  int8x8_t *v1257;
  unint64_t v1258;
  int8x8_t v1259;
  unint64_t v1260;
  unint64_t v1261;
  unsigned __int8 *v1262;
  float *v1263;
  unsigned int v1264;
  float32x4_t *v1265;
  int16x4_t *v1266;
  unint64_t v1267;
  int16x8_t v1268;
  float32x4_t v1269;
  int32x4_t v1270;
  unint64_t v1271;
  int8x16_t *v1272;
  float32x4_t *v1273;
  int8x16_t v1274;
  int8x8_t v1275;
  unint64_t v1276;
  float32x4_t *v1277;
  uint32x4_t *v1278;
  unint64_t v1279;
  float32x4_t v1280;
  unint64_t v1281;
  uint64_t v1282;
  unsigned int *v1283;
  float *v1284;
  unsigned int v1285;
  unint64_t v1286;
  unint64_t v1287;
  unint64_t *v1288;
  float *v1289;
  unint64_t v1290;
  float32x4_t *v1291;
  int64x2_t *v1292;
  unint64_t v1293;
  int64x2_t v1294;
  int64x2_t v1295;
  int64x2_t v1296;
  int64x2_t v1297;
  unint64_t v1298;
  unint64_t v1299;
  unsigned __int8 *v1300;
  double *v1301;
  int v1302;
  unint64_t v1303;
  float32x4_t *v1304;
  unsigned __int8 *v1305;
  unint64_t v1306;
  uint64_t v1307;
  uint32x4_t v1308;
  unint64_t v1309;
  float32x4_t *v1310;
  uint16x4_t *v1311;
  unint64_t v1312;
  uint16x8_t v1313;
  float32x4_t v1314;
  uint32x4_t v1315;
  unint64_t v1316;
  int8x16_t *v1317;
  float32x4_t *v1318;
  int8x16_t v1319;
  unint64_t v1320;
  unint64_t v1321;
  float64x2_t *v1322;
  int64x2_t *v1323;
  unint64_t v1324;
  float64x2_t v1325;
  unint64_t v1326;
  uint64_t v1327;
  uint64_t *v1328;
  double *v1329;
  uint64_t v1330;
  float32x4_t *v1331;
  uint64x2_t *v1332;
  unint64_t v1333;
  uint64x2_t v1334;
  uint64x2_t v1335;
  uint64x2_t v1336;
  uint64x2_t v1337;
  unint64_t v1338;
  unint64_t v1339;
  unint64_t v1340;
  int16x8_t *v1341;
  float64x2_t *v1342;
  int16x8_t v1343;
  int32x4_t v1344;
  int64x2_t v1345;
  float64x2_t v1346;
  int64x2_t v1347;
  int32x4_t v1348;
  float64x2_t v1349;
  unint64_t v1350;
  unsigned __int8 *v1351;
  double *v1352;
  int v1353;
  float64x2_t *v1354;
  unsigned __int8 *v1355;
  unint64_t v1356;
  __int128 v1357;
  int64x2_t v1358;
  float64x2_t v1359;
  float64x2_t v1360;
  float64x2_t v1361;
  unint64_t v1362;
  int *v1363;
  double *v1364;
  int v1365;
  unint64_t v1366;
  int8x16_t *v1367;
  float64x2_t *v1368;
  int8x16_t v1369;
  unint64_t v1370;
  int32x2_t v1371;
  int32x2_t v1372;
  int64x2_t v1373;
  float64x2_t v1374;
  int32x2_t v1375;
  int32x2_t v1376;
  int64x2_t v1377;
  int32x2_t v1378;
  int32x2_t v1379;
  int32x2_t v1380;
  float64x2_t v1381;
  int32x2_t v1382;
  float64x2_t v1383;
  int32x2_t v1384;
  float64x2_t v1385;
  int32x2_t v1386;
  int32x2_t v1387;
  int32x2_t v1388;
  int32x2_t v1389;
  int32x2_t v1390;
  float64x2_t v1391;
  int32x2_t v1392;
  unint64_t v1393;
  float64x2_t *v1394;
  unsigned __int8 *v1395;
  unint64_t v1396;
  uint64_t v1397;
  int32x2_t v1398;
  int32x2_t v1399;
  int64x2_t v1400;
  float64x2_t v1401;
  int32x2_t v1402;
  int32x2_t v1403;
  int64x2_t v1404;
  int32x2_t v1405;
  int32x2_t v1406;
  int32x2_t v1407;
  float64x2_t v1408;
  int32x2_t v1409;
  unint64_t v1410;
  unint64_t v1411;
  uint16x8_t *v1412;
  float64x2_t *v1413;
  uint16x8_t v1414;
  uint32x4_t v1415;
  uint64x2_t v1416;
  float64x2_t v1417;
  uint64x2_t v1418;
  uint32x4_t v1419;
  float64x2_t v1420;
  unint64_t v1421;
  unsigned __int8 *v1422;
  double *v1423;
  unsigned int v1424;
  unint64_t v1425;
  int8x16_t *v1426;
  float64x2_t *v1427;
  int8x16_t v1428;
  unint64_t v1429;
  int8x8_t v1430;
  int8x8_t v1431;
  uint64x2_t v1432;
  float64x2_t v1433;
  int8x8_t v1434;
  int8x8_t v1435;
  int8x8_t v1436;
  float64x2_t v1437;
  int8x8_t v1438;
  int8x8_t v1439;
  float64x2_t v1440;
  int8x8_t v1441;
  uint64x2_t v1442;
  int8x8_t v1443;
  float64x2_t v1444;
  int8x8_t v1445;
  int8x8_t v1446;
  int8x8_t v1447;
  int8x8_t v1448;
  float64x2_t v1449;
  int8x8_t v1450;
  int8x8_t v1451;
  unint64_t v1452;
  float64x2_t *v1453;
  unsigned __int8 *v1454;
  unint64_t v1455;
  uint64_t v1456;
  int8x8_t v1457;
  int8x8_t v1458;
  uint64x2_t v1459;
  int8x8_t v1460;
  float64x2_t v1461;
  int8x8_t v1462;
  float64x2_t v1463;
  int8x8_t v1464;
  int8x8_t v1465;
  int8x8_t v1466;
  float64x2_t v1467;
  int8x8_t v1468;
  unint64_t v1469;
  unsigned __int8 *v1470;
  double *v1471;
  unsigned int v1472;
  unint64_t v1473;
  float64x2_t *v1474;
  uint64x2_t *v1475;
  unint64_t v1476;
  float64x2_t v1477;
  unint64_t v1478;
  uint64_t v1479;
  unint64_t *v1480;
  double *v1481;
  unint64_t v1482;
  float64x2_t *v1483;
  unsigned __int8 *v1484;
  unint64_t v1485;
  __int128 v1486;
  uint64x2_t v1487;
  float64x2_t v1488;
  float64x2_t v1489;
  float64x2_t v1490;
  unint64_t v1491;
  unsigned int *v1492;
  double *v1493;
  unsigned int v1494;
  __int16 v1495;
  int v1496;
  __int16 v1497;
  __int16 v1498;
  __int16 v1499;
  __int16 v1500;
  __int16 v1501;
  __int16 v1502;
  __int16 v1503;
  unint64_t v1504;
  unint64_t v1505;
  double v1506;
  int v1507;
  int v1508;
  int v1509;
  int v1510;
  int v1511;
  int v1512;
  int v1513;
  unint64_t v1514;
  unint64_t v1515;
  float32x4_t *v1516;
  float16x4_t *v1517;
  unint64_t v1518;
  float16x8_t v1519;
  float32x4_t v1520;
  float32x4_t v1521;
  unint64_t v1522;
  unsigned __int8 *v1523;
  unsigned __int8 *v1524;
  __int16 v1525;
  _OWORD *v1528;
  int8x16_t *v1529;
  unint64_t v1530;
  int8x16_t v1538;
  unint64_t v1553;
  unsigned __int8 *v1554;
  unsigned __int8 *v1555;
  __int16 v1556;
  double v1559;
  double v1560;
  double v1561;
  double v1562;
  double v1563;
  double v1564;
  double v1565;
  unint64_t v1566;
  unint64_t v1567;
  float16x8_t *v1568;
  float32x4_t *v1569;
  unint64_t v1570;
  float32x4_t v1571;
  float32x4_t v1572;
  float32x4_t v1573;
  float32x4_t v1574;
  unint64_t v1575;
  unsigned __int8 *v1576;
  unsigned __int8 *v1577;
  int v1578;
  float64x2_t *v1580;
  float32x2_t *v1581;
  unint64_t v1582;
  float32x4_t v1583;
  float64x2_t v1584;
  float64x2_t v1585;
  unint64_t v1586;
  float *v1587;
  double *v1588;
  float v1589;
  _OWORD *v1590;
  __int128 *v1591;
  unint64_t v1592;
  unint64_t v1604;
  unsigned __int8 *v1605;
  unsigned __int8 *v1606;
  uint64_t v1607;
  float32x4_t *v1609;
  float64x2_t *v1610;
  unint64_t v1611;
  float64x2_t v1612;
  float64x2_t v1613;
  float64x2_t v1614;
  float64x2_t v1615;
  unint64_t v1616;
  double *v1617;
  float *v1618;
  double v1619;
  float v1620;
  double v1621[2];
  double v1622;
  int8x16x2_t v1623;
  int8x16x2_t v1624;
  int8x16x2_t v1625;
  int8x16x2_t v1626;
  int8x16x4_t v1627;
  int8x16x4_t v1628;
  int8x16x4_t v1629;
  int8x16x4_t v1630;

  v10 = a6;
  v11 = (unsigned __int8 *)a4;
  v12 = a3;
  v14 = (unsigned __int8 *)a1;
  result = sub_19C59CC84(a1, a2, a3 & 0x1FF, a4, a5, a6 & 0x1FF, a8);
  if ((result & 1) != 0)
    return result;
  v19 = v12;
  if (!v12)
  {
    v19 = v10 - 1;
    switch(v10)
    {
      case 1u:
      case 5u:
        *(_QWORD *)&v1621[0] = v14;
        *(_QWORD *)&v1621[1] = a2;
        sub_19C5753F4();
        return sub_19CAA956C();
      case 2u:
        if (v11)
        {
          if ((a7 & 0x8000000000000000) != 0)
            goto LABEL_435;
          for (; a7; --a7)
          {
            v45 = *v14++;
            *(_WORD *)v11 = v45;
            v11 += 2;
          }
        }
        return result;
      case 3u:
        if (v11)
        {
          if ((a7 & 0x8000000000000000) != 0)
            goto LABEL_432;
          for (; a7; --a7)
          {
            v42 = *v14++;
            *(_DWORD *)v11 = v42;
            v11 += 4;
          }
        }
        return result;
      case 4u:
        if (v11)
        {
          if ((a7 & 0x8000000000000000) != 0)
            goto LABEL_433;
          for (; a7; --a7)
          {
            v43 = *v14++;
            *(_QWORD *)v11 = v43;
            v11 += 8;
          }
        }
        return result;
      case 6u:
        if (v11)
        {
          if ((a7 & 0x8000000000000000) != 0)
            goto LABEL_436;
          for (; a7; --a7)
          {
            v46 = *v14++;
            *(_WORD *)v11 = v46;
            v11 += 2;
          }
        }
        return result;
      case 7u:
        if (v11)
        {
          if ((a7 & 0x8000000000000000) != 0)
            goto LABEL_437;
          for (; a7; --a7)
          {
            v47 = *v14++;
            *(_DWORD *)v11 = v47;
            v11 += 4;
          }
        }
        return result;
      case 8u:
        if (v11)
        {
          if ((a7 & 0x8000000000000000) != 0)
            goto LABEL_434;
          for (; a7; --a7)
          {
            v44 = *v14++;
            *(_QWORD *)v11 = v44;
            v11 += 8;
          }
        }
        return result;
      case 9u:
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) != 0)
          goto LABEL_439;
        if (!a7)
          return result;
        if (a7 >= 6 && (&v14[a7] <= v11 || &v11[2 * a7] <= v14))
        {
          v53 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          v136 = v14 + 3;
          v137 = v11 + 4;
          v138 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          do
          {
            v139 = *(v136 - 3);
            v140 = *(v136 - 2);
            v141 = *(v136 - 1);
            v142 = *v136;
            v136 += 4;
            _S0 = (float)v140;
            *(float *)_D1.i32 = (float)v139;
            __asm
            {
              FCVT            H0, S0
              FCVT            H1, S1
            }
            _D1.i16[1] = LOWORD(_S0);
            _S0 = (float)v142;
            __asm { FCVT            H0, S0 }
            *(float *)_Q2.i32 = (float)v141;
            __asm { FCVT            H2, S2 }
            _Q2.i16[1] = LOWORD(_S0);
            *(int32x2_t *)(v137 - 4) = vzip1_s32(_D1, *(int32x2_t *)_Q2.i8);
            v137 += 8;
            v138 -= 4;
          }
          while (v138);
          if (v53 == a7)
            return result;
        }
        else
        {
          v53 = 0;
        }
        v54 = a7 - v53;
        v55 = &v14[v53];
        v56 = &v11[2 * v53];
        do
        {
          v57 = *v55++;
          _S0 = (float)v57;
          __asm { FCVT            H0, S0 }
          *(_WORD *)v56 = LOWORD(_S0);
          v56 += 2;
          --v54;
        }
        while (v54);
        return result;
      case 0xAu:
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) != 0)
          goto LABEL_431;
        if (!a7)
          return result;
        if (a7 >= 6 && (&v14[a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v37 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          v120 = v14 + 3;
          v121 = (float32x2_t *)(v11 + 8);
          v122 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          do
          {
            v123.i32[0] = *(v120 - 3);
            v123.i32[1] = *(v120 - 2);
            v124 = *(v120 - 1);
            v125 = *v120;
            v120 += 4;
            v121[-1] = vcvt_f32_u32((uint32x2_t)vand_s8(v123, (int8x8_t)0x100000001));
            *v121 = vcvt_f32_u32((uint32x2_t)vand_s8((int8x8_t)__PAIR64__(v125, v124), (int8x8_t)0x100000001));
            v121 += 2;
            v122 -= 4;
          }
          while (v122);
          if (v37 == a7)
            return result;
        }
        else
        {
          v37 = 0;
        }
        v38 = a7 - v37;
        v39 = &v14[v37];
        v40 = (float *)&v11[4 * v37];
        do
        {
          v41 = *v39++;
          *v40++ = (float)v41;
          --v38;
        }
        while (v38);
        return result;
      case 0xBu:
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) != 0)
          goto LABEL_438;
        if (!a7)
          return result;
        if (a7 >= 6 && (&v14[a7] <= v11 || &v11[8 * a7] <= v14))
        {
          v48 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          v126 = v14 + 3;
          v127 = (float64x2_t *)(v11 + 16);
          v128 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          do
          {
            v129.i32[0] = *(v126 - 3);
            v129.i32[1] = *(v126 - 2);
            v130 = vand_s8(v129, (int8x8_t)0x100000001);
            v131 = *(v126 - 1);
            v132 = *v126;
            v126 += 4;
            v133 = vand_s8((int8x8_t)__PAIR64__(v132, v131), (int8x8_t)0x100000001);
            v134.i64[0] = v130.u32[0];
            v134.i64[1] = v130.u32[1];
            v135 = vcvtq_f64_u64(v134);
            v134.i64[0] = v133.u32[0];
            v134.i64[1] = v133.u32[1];
            v127[-1] = v135;
            *v127 = vcvtq_f64_u64(v134);
            v127 += 2;
            v128 -= 4;
          }
          while (v128);
          if (v48 == a7)
            return result;
        }
        else
        {
          v48 = 0;
        }
        v49 = a7 - v48;
        v50 = &v14[v48];
        v51 = (double *)&v11[8 * v48];
        do
        {
          v52 = *v50++;
          *v51++ = (double)v52;
          --v49;
        }
        while (v49);
        return result;
      default:
        return result;
    }
  }
  v16 = v10;
  if (v12 != 5 || v10)
  {
    if (v12 == 6 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
        {
          v21 = 0;
          goto LABEL_24;
        }
        if (a7 >= 0x20)
        {
          v21 = a7 & 0xFFFFFFFFFFFFFFE0;
          v87 = (int8x16_t *)(v11 + 16);
          v88 = (int16x8_t *)(v14 + 32);
          v89.i64[0] = 0x101010101010101;
          v89.i64[1] = 0x101010101010101;
          v90 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v91 = v88[-2];
            v92 = v88[-1];
            v93 = *v88;
            v94 = v88[1];
            v88 += 4;
            v87[-1] = vbicq_s8(v89, vuzp1q_s8((int8x16_t)vceqzq_s16(v91), (int8x16_t)vceqzq_s16(v92)));
            *v87 = vbicq_s8(v89, vuzp1q_s8((int8x16_t)vceqzq_s16(v93), (int8x16_t)vceqzq_s16(v94)));
            v87 += 2;
            v90 -= 32;
          }
          while (v90);
          if (v21 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_24:
            v22 = a7 - v21;
            v23 = &v14[2 * v21];
            v24 = (BOOL *)&v11[v21];
            do
            {
              v25 = *(unsigned __int16 *)v23;
              v23 += 2;
              *v24++ = v25 != 0;
              --v22;
            }
            while (v22);
            return result;
          }
        }
        else
        {
          v21 = 0;
        }
        v95 = v21;
        v21 = a7 & 0xFFFFFFFFFFFFFFF8;
        v96 = (int8x8_t *)&v11[v95];
        v97 = (int16x8_t *)&v14[2 * v95];
        v98 = v95 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v99 = *v97++;
          *v96++ = vand_s8(vmovn_s16(vtstq_s16(v99, v99)), (int8x8_t)0x101010101010101);
          v98 += 8;
        }
        while (v98);
        if (v21 == a7)
          return result;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_342;
    }
    if (v12 == 7 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
        {
          v26 = 0;
          goto LABEL_36;
        }
        if (a7 >= 0x20)
        {
          v26 = a7 & 0xFFFFFFFFFFFFFFE0;
          v109 = (int8x16_t *)(v11 + 16);
          v110 = (int32x4_t *)(v14 + 64);
          v111.i64[0] = 0x101010101010101;
          v111.i64[1] = 0x101010101010101;
          v112 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v113 = vbicq_s8(v111, vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(*v110), (int16x8_t)vceqzq_s32(v110[1])), (int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v110[2]), (int16x8_t)vceqzq_s32(v110[3]))));
            v109[-1] = vbicq_s8(v111, vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v110[-4]), (int16x8_t)vceqzq_s32(v110[-3])), (int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v110[-2]), (int16x8_t)vceqzq_s32(v110[-1]))));
            *v109 = v113;
            v109 += 2;
            v110 += 8;
            v112 -= 32;
          }
          while (v112);
          if (v26 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_36:
            v27 = a7 - v26;
            v28 = &v14[4 * v26];
            v29 = (BOOL *)&v11[v26];
            do
            {
              v30 = *(_DWORD *)v28;
              v28 += 4;
              *v29++ = v30 != 0;
              --v27;
            }
            while (v27);
            return result;
          }
        }
        else
        {
          v26 = 0;
        }
        v114 = v26;
        v26 = a7 & 0xFFFFFFFFFFFFFFF8;
        v115 = (int8x8_t *)&v11[v114];
        v116 = (int32x4_t *)&v14[4 * v114];
        v117 = v114 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v118 = *v116;
          v119 = v116[1];
          v116 += 2;
          *v115++ = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v118), (int16x8_t)vceqzq_s32(v119)))), (int8x8_t)0x101010101010101);
          v117 += 8;
        }
        while (v117);
        if (v26 == a7)
          return result;
        goto LABEL_36;
      }
      __break(1u);
      goto LABEL_391;
    }
    if (v12 == 8 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_431:
        __break(1u);
LABEL_432:
        __break(1u);
LABEL_433:
        __break(1u);
LABEL_434:
        __break(1u);
LABEL_435:
        __break(1u);
LABEL_436:
        __break(1u);
LABEL_437:
        __break(1u);
LABEL_438:
        __break(1u);
LABEL_439:
        __break(1u);
        goto LABEL_440;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
      {
        v31 = 0;
        goto LABEL_48;
      }
      if (a7 >= 0x10)
      {
        v31 = a7 & 0xFFFFFFFFFFFFFFF0;
        v150.i64[0] = 0x101010101010101;
        v150.i64[1] = 0x101010101010101;
        v151 = a7 & 0xFFFFFFFFFFFFFFF0;
        v152 = (int64x2_t *)v14;
        v153 = (int8x16_t *)v11;
        do
        {
          *v153++ = vandq_s8(vuzp1q_s8(vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*v152), (int32x4_t)vceqzq_s64(v152[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v152[2]), (int32x4_t)vceqzq_s64(v152[3])))), vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v152[4]), (int32x4_t)vceqzq_s64(v152[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v152[6]), (int32x4_t)vceqzq_s64(v152[7]))))), v150);
          v152 += 8;
          v151 -= 16;
        }
        while (v151);
        if (v31 == a7)
          return result;
        if ((a7 & 8) == 0)
        {
LABEL_48:
          v32 = a7 - v31;
          v33 = &v14[8 * v31];
          v34 = (BOOL *)&v11[v31];
          do
          {
            v35 = *(_QWORD *)v33;
            v33 += 8;
            *v34++ = v35 != 0;
            --v32;
          }
          while (v32);
          return result;
        }
      }
      else
      {
        v31 = 0;
      }
      v105 = v31;
      v31 = a7 & 0xFFFFFFFFFFFFFFF8;
      v106 = (int8x8_t *)&v11[v105];
      v107 = (int64x2_t *)&v14[8 * v105];
      v108 = v105 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        *v106++ = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*v107), (int32x4_t)vceqzq_s64(v107[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v107[2]), (int32x4_t)vceqzq_s64(v107[3]))))), (int8x8_t)0x101010101010101);
        v107 += 4;
        v108 += 8;
      }
      while (v108);
      if (v31 == a7)
        return result;
      goto LABEL_48;
    }
    if (v12 == 1 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_475;
      }
      if (!a7)
        return result;
      v36 = 0;
      if (a7 >= 8 && (unint64_t)(v11 - v14) >= 0x20)
      {
        if (a7 < 0x20)
        {
          v36 = 0;
LABEL_225:
          v159 = v36;
          v36 = a7 & 0xFFFFFFFFFFFFFFF8;
          v160 = (int8x8_t *)&v11[v159];
          v161 = (int8x8_t *)&v14[v159];
          v162 = v159 - (a7 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v163 = *v161++;
            *v160++ = vbic_s8((int8x8_t)0x101010101010101, vceqz_s8(v163));
            v162 += 8;
          }
          while (v162);
          if (v36 == a7)
            return result;
          goto LABEL_228;
        }
        v36 = a7 & 0xFFFFFFFFFFFFFFE0;
        v154 = (int8x16_t *)(v11 + 16);
        v155 = (int8x16_t *)(v14 + 16);
        v156.i64[0] = 0x101010101010101;
        v156.i64[1] = 0x101010101010101;
        v157 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v158 = vbicq_s8(v156, vceqzq_s8(*v155));
          v154[-1] = vbicq_s8(v156, vceqzq_s8(v155[-1]));
          *v154 = v158;
          v154 += 2;
          v155 += 2;
          v157 -= 32;
        }
        while (v157);
        if (v36 == a7)
          return result;
        if ((a7 & 0x18) != 0)
          goto LABEL_225;
      }
LABEL_228:
      v164 = a7 - v36;
      v165 = &v14[v36];
      v166 = (BOOL *)&v11[v36];
      do
      {
        v167 = *v165++;
        *v166++ = v167 != 0;
        --v164;
      }
      while (v164);
      return result;
    }
    if (v12 == 2 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_520;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
      {
        v77 = 0;
        goto LABEL_139;
      }
      if (a7 >= 0x20)
      {
        v77 = a7 & 0xFFFFFFFFFFFFFFE0;
        v178 = (int8x16_t *)(v11 + 16);
        v179 = (int16x8_t *)(v14 + 32);
        v180.i64[0] = 0x101010101010101;
        v180.i64[1] = 0x101010101010101;
        v181 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v182 = v179[-2];
          v183 = v179[-1];
          v184 = *v179;
          v185 = v179[1];
          v179 += 4;
          v178[-1] = vbicq_s8(v180, vuzp1q_s8((int8x16_t)vceqzq_s16(v182), (int8x16_t)vceqzq_s16(v183)));
          *v178 = vbicq_s8(v180, vuzp1q_s8((int8x16_t)vceqzq_s16(v184), (int8x16_t)vceqzq_s16(v185)));
          v178 += 2;
          v181 -= 32;
        }
        while (v181);
        if (v77 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_139:
          v78 = a7 - v77;
          v79 = &v14[2 * v77];
          v80 = (BOOL *)&v11[v77];
          do
          {
            v81 = *(unsigned __int16 *)v79;
            v79 += 2;
            *v80++ = v81 != 0;
            --v78;
          }
          while (v78);
          return result;
        }
      }
      else
      {
        v77 = 0;
      }
      v186 = v77;
      v77 = a7 & 0xFFFFFFFFFFFFFFF8;
      v187 = (int8x8_t *)&v11[v186];
      v188 = (int16x8_t *)&v14[2 * v186];
      v189 = v186 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v190 = *v188++;
        *v187++ = vand_s8(vmovn_s16(vtstq_s16(v190, v190)), (int8x8_t)0x101010101010101);
        v189 += 8;
      }
      while (v189);
      if (v77 == a7)
        return result;
      goto LABEL_139;
    }
    if (v12 == 3 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_677;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
      {
        v82 = 0;
        goto LABEL_153;
      }
      if (a7 >= 0x20)
      {
        v82 = a7 & 0xFFFFFFFFFFFFFFE0;
        v200 = (int8x16_t *)(v11 + 16);
        v201 = (int32x4_t *)(v14 + 64);
        v202.i64[0] = 0x101010101010101;
        v202.i64[1] = 0x101010101010101;
        v203 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v204 = vbicq_s8(v202, vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(*v201), (int16x8_t)vceqzq_s32(v201[1])), (int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v201[2]), (int16x8_t)vceqzq_s32(v201[3]))));
          v200[-1] = vbicq_s8(v202, vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v201[-4]), (int16x8_t)vceqzq_s32(v201[-3])), (int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v201[-2]), (int16x8_t)vceqzq_s32(v201[-1]))));
          *v200 = v204;
          v200 += 2;
          v201 += 8;
          v203 -= 32;
        }
        while (v203);
        if (v82 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_153:
          v83 = a7 - v82;
          v84 = &v14[4 * v82];
          v85 = (BOOL *)&v11[v82];
          do
          {
            v86 = *(_DWORD *)v84;
            v84 += 4;
            *v85++ = v86 != 0;
            --v83;
          }
          while (v83);
          return result;
        }
      }
      else
      {
        v82 = 0;
      }
      v205 = v82;
      v82 = a7 & 0xFFFFFFFFFFFFFFF8;
      v206 = (int8x8_t *)&v11[v205];
      v207 = (int32x4_t *)&v14[4 * v205];
      v208 = v205 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v209 = *v207;
        v210 = v207[1];
        v207 += 2;
        *v206++ = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32(v209), (int16x8_t)vceqzq_s32(v210)))), (int8x8_t)0x101010101010101);
        v208 += 8;
      }
      while (v208);
      if (v82 == a7)
        return result;
      goto LABEL_153;
    }
    if (v12 == 4 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_772;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
      {
        v100 = 0;
        goto LABEL_175;
      }
      if (a7 >= 0x10)
      {
        v100 = a7 & 0xFFFFFFFFFFFFFFF0;
        v216.i64[0] = 0x101010101010101;
        v216.i64[1] = 0x101010101010101;
        v217 = a7 & 0xFFFFFFFFFFFFFFF0;
        v218 = (int64x2_t *)v14;
        v219 = (int8x16_t *)v11;
        do
        {
          *v219++ = vandq_s8(vuzp1q_s8(vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*v218), (int32x4_t)vceqzq_s64(v218[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v218[2]), (int32x4_t)vceqzq_s64(v218[3])))), vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v218[4]), (int32x4_t)vceqzq_s64(v218[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v218[6]), (int32x4_t)vceqzq_s64(v218[7]))))), v216);
          v218 += 8;
          v217 -= 16;
        }
        while (v217);
        if (v100 == a7)
          return result;
        if ((a7 & 8) == 0)
        {
LABEL_175:
          v101 = a7 - v100;
          v102 = &v14[8 * v100];
          v103 = (BOOL *)&v11[v100];
          do
          {
            v104 = *(_QWORD *)v102;
            v102 += 8;
            *v103++ = v104 != 0;
            --v101;
          }
          while (v101);
          return result;
        }
      }
      else
      {
        v100 = 0;
      }
      v196 = v100;
      v100 = a7 & 0xFFFFFFFFFFFFFFF8;
      v197 = (int8x8_t *)&v11[v196];
      v198 = (int64x2_t *)&v14[8 * v196];
      v199 = v196 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        *v197++ = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*v198), (int32x4_t)vceqzq_s64(v198[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v198[2]), (int32x4_t)vceqzq_s64(v198[3]))))), (int8x8_t)0x101010101010101);
        v198 += 4;
        v199 += 8;
      }
      while (v199);
      if (v100 == a7)
        return result;
      goto LABEL_175;
    }
    if (v12 == 9 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_837;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
      {
        v145 = 0;
        goto LABEL_213;
      }
      if (a7 >= 0x20)
      {
        v145 = a7 & 0xFFFFFFFFFFFFFFE0;
        v225 = (int8x16_t *)(v11 + 16);
        v226 = (__int128 *)(v14 + 32);
        v227.i64[0] = 0x101010101010101;
        v227.i64[1] = 0x101010101010101;
        v228 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v230 = *(v226 - 2);
          v229 = *(v226 - 1);
          v232 = *v226;
          v231 = v226[1];
          v226 += 4;
          v225[-1] = vbicq_s8(v227, vuzp1q_s8((int8x16_t)vceqzq_s16((int16x8_t)(v230 & __PAIR128__(0x7FFF7FFF7FFF7FFFLL, 0x7FFF7FFF7FFF7FFFLL))), (int8x16_t)vceqzq_s16((int16x8_t)(v229 & __PAIR128__(0x7FFF7FFF7FFF7FFFLL, 0x7FFF7FFF7FFF7FFFLL)))));
          *v225 = vbicq_s8(v227, vuzp1q_s8((int8x16_t)vceqzq_s16((int16x8_t)(v232 & __PAIR128__(0x7FFF7FFF7FFF7FFFLL, 0x7FFF7FFF7FFF7FFFLL))), (int8x16_t)vceqzq_s16((int16x8_t)(v231 & __PAIR128__(0x7FFF7FFF7FFF7FFFLL, 0x7FFF7FFF7FFF7FFFLL)))));
          v225 += 2;
          v228 -= 32;
        }
        while (v228);
        if (v145 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_213:
          v146 = a7 - v145;
          v147 = &v14[2 * v145];
          v148 = (BOOL *)&v11[v145];
          do
          {
            v149 = *(_WORD *)v147;
            v147 += 2;
            *v148++ = (v149 & 0x7FFF) != 0;
            --v146;
          }
          while (v146);
          return result;
        }
      }
      else
      {
        v145 = 0;
      }
      v233 = v145;
      v145 = a7 & 0xFFFFFFFFFFFFFFF8;
      v234 = (int8x8_t *)&v11[v233];
      v235 = &v14[2 * v233];
      v236 = v233 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v237 = *(_OWORD *)v235;
        v235 += 16;
        *v234++ = vand_s8(vmovn_s16(vtstq_s16((int16x8_t)(v237 & __PAIR128__(0x7FFF7FFF7FFF7FFFLL, 0x7FFF7FFF7FFF7FFFLL)), (int16x8_t)(v237 & __PAIR128__(0x7FFF7FFF7FFF7FFFLL, 0x7FFF7FFF7FFF7FFFLL)))), (int8x8_t)0x101010101010101);
        v236 += 8;
      }
      while (v236);
      if (v145 == a7)
        return result;
      goto LABEL_213;
    }
    if (v12 == 10 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_900;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
      {
        v168 = 0;
        goto LABEL_240;
      }
      if (a7 >= 0x20)
      {
        v168 = a7 & 0xFFFFFFFFFFFFFFE0;
        v262 = (int8x16_t *)(v11 + 16);
        v263 = (__int128 *)(v14 + 64);
        v264.i64[0] = 0x101010101010101;
        v264.i64[1] = 0x101010101010101;
        v265 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v267 = *(v263 - 2);
          v266 = *(v263 - 1);
          v269 = *(v263 - 4);
          v268 = *(v263 - 3);
          v271 = v263[2];
          v270 = v263[3];
          v273 = *v263;
          v272 = v263[1];
          v263 += 8;
          v262[-1] = vbicq_s8(v264, vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32((int32x4_t)(v269 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))), (int16x8_t)vceqzq_s32((int32x4_t)(v268 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)))), (int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32((int32x4_t)(v267 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))), (int16x8_t)vceqzq_s32((int32x4_t)(v266 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))));
          *v262 = vbicq_s8(v264, vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32((int32x4_t)(v273 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))), (int16x8_t)vceqzq_s32((int32x4_t)(v272 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)))), (int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32((int32x4_t)(v271 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))), (int16x8_t)vceqzq_s32((int32x4_t)(v270 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))));
          v262 += 2;
          v265 -= 32;
        }
        while (v265);
        if (v168 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_240:
          v169 = a7 - v168;
          v170 = &v14[4 * v168];
          v171 = (BOOL *)&v11[v168];
          do
          {
            v172 = *(_DWORD *)v170;
            v170 += 4;
            *v171++ = (v172 & 0x7FFFFFFF) != 0;
            --v169;
          }
          while (v169);
          return result;
        }
      }
      else
      {
        v168 = 0;
      }
      v274 = v168;
      v168 = a7 & 0xFFFFFFFFFFFFFFF8;
      v275 = (int8x8_t *)&v11[v274];
      v276 = &v14[4 * v274];
      v277 = v274 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v279 = *(_OWORD *)v276;
        v278 = *((_OWORD *)v276 + 1);
        v276 += 32;
        *v275++ = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32((int32x4_t)(v279 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))), (int16x8_t)vceqzq_s32((int32x4_t)(v278 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)))))), (int8x8_t)0x101010101010101);
        v277 += 8;
      }
      while (v277);
      if (v168 == a7)
        return result;
      goto LABEL_240;
    }
    if (v12 == 11 && !v10)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_956;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
      {
        v173 = 0;
        goto LABEL_254;
      }
      if (a7 >= 0x10)
      {
        v173 = a7 & 0xFFFFFFFFFFFFFFF0;
        v295 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
        v296.i64[0] = 0x101010101010101;
        v296.i64[1] = 0x101010101010101;
        v297 = a7 & 0xFFFFFFFFFFFFFFF0;
        v298 = (int8x16_t *)v14;
        v299 = (int8x16_t *)v11;
        do
        {
          v301 = v298[6];
          v300 = v298[7];
          v303 = v298[4];
          v302 = v298[5];
          v305 = v298[2];
          v304 = v298[3];
          v307 = *v298;
          v306 = v298[1];
          v298 += 8;
          *v299++ = vandq_s8(vuzp1q_s8(vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v307, v295)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v306, v295))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v305, v295)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v304, v295))))), vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v303, v295)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v302, v295))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v301, v295)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v300, v295)))))), v296);
          v297 -= 16;
        }
        while (v297);
        if (v173 == a7)
          return result;
        if ((a7 & 8) == 0)
        {
LABEL_254:
          v174 = a7 - v173;
          v175 = &v14[8 * v173];
          v176 = (BOOL *)&v11[v173];
          do
          {
            v177 = *(_QWORD *)v175;
            v175 += 8;
            *v176++ = (v177 & 0x7FFFFFFFFFFFFFFFLL) != 0;
            --v174;
          }
          while (v174);
          return result;
        }
      }
      else
      {
        v173 = 0;
      }
      v253 = v173;
      v173 = a7 & 0xFFFFFFFFFFFFFFF8;
      v254 = (int8x8_t *)&v11[v253];
      v255 = (int8x16_t *)&v14[8 * v253];
      v256 = v253 - (a7 & 0xFFFFFFFFFFFFFFF8);
      v257 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
      do
      {
        v259 = v255[2];
        v258 = v255[3];
        v261 = *v255;
        v260 = v255[1];
        v255 += 4;
        *v254++ = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v261, v257)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v260, v257))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v259, v257)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v258, v257)))))), (int8x8_t)0x101010101010101);
        v256 += 8;
      }
      while (v256);
      if (v173 == a7)
        return result;
      goto LABEL_254;
    }
    if (v12 == 5)
    {
      if (v10 != 8)
      {
        if (v10 == 7)
        {
LABEL_342:
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 < 8 || &v14[a7] > v11 && &v11[4 * a7] > v14)
            {
              v238 = 0;
              goto LABEL_349;
            }
            if (a7 >= 0x20)
            {
              v238 = a7 & 0xFFFFFFFFFFFFFFE0;
              v414 = (int32x4_t *)(v11 + 64);
              v415 = (int8x8_t *)(v14 + 16);
              v416 = a7 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                v417 = *(int8x16_t *)v415[-2].i8;
                v418 = *(int8x16_t *)v415->i8;
                v419 = vmovl_s8(*(int8x8_t *)v417.i8);
                v420 = vmovl_high_s8(v417);
                v421 = vmovl_s8(*v415);
                v414[-2] = vmovl_s16(*(int16x4_t *)v420.i8);
                v414[-1] = vmovl_high_s16(v420);
                v422 = vmovl_high_s8(v418);
                v414[-4] = vmovl_s16(*(int16x4_t *)v419.i8);
                v414[-3] = vmovl_high_s16(v419);
                v414[2] = vmovl_s16(*(int16x4_t *)v422.i8);
                v414[3] = vmovl_high_s16(v422);
                *v414 = vmovl_s16(*(int16x4_t *)v421.i8);
                v414[1] = vmovl_high_s16(v421);
                v414 += 8;
                v415 += 4;
                v416 -= 32;
              }
              while (v416);
              if (v238 == a7)
                return result;
              if ((a7 & 0x18) == 0)
              {
LABEL_349:
                v239 = a7 - v238;
                v240 = &v14[v238];
                v241 = &v11[4 * v238];
                do
                {
                  v242 = (char)*v240++;
                  *(_DWORD *)v241 = v242;
                  v241 += 4;
                  --v239;
                }
                while (v239);
                return result;
              }
            }
            else
            {
              v238 = 0;
            }
            v423 = v238;
            v238 = a7 & 0xFFFFFFFFFFFFFFF8;
            v424 = (int32x4_t *)&v11[4 * v423];
            v425 = (int8x8_t *)&v14[v423];
            v426 = v423 - (a7 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v427 = *v425++;
              v428 = vmovl_s8(v427);
              *v424 = vmovl_s16(*(int16x4_t *)v428.i8);
              v424[1] = vmovl_high_s16(v428);
              v424 += 2;
              v426 += 8;
            }
            while (v426);
            if (v238 == a7)
              return result;
            goto LABEL_349;
          }
          __break(1u);
          goto LABEL_1084;
        }
        if (v10 != 6)
          goto LABEL_554;
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) != 0)
        {
LABEL_1085:
          __break(1u);
LABEL_1086:
          __break(1u);
          goto LABEL_1087;
        }
        if (!a7)
          return result;
        if (a7 < 8 || &v14[a7] > v11 && &v11[2 * a7] > v14)
        {
          v191 = 0;
          goto LABEL_278;
        }
        if (a7 >= 0x20)
        {
          v191 = a7 & 0xFFFFFFFFFFFFFFE0;
          v462 = (int16x8_t *)(v11 + 32);
          v463 = (int8x8_t *)(v14 + 16);
          v464 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v465 = *(int8x16_t *)v463[-2].i8;
            v466 = vmovl_s8(*v463);
            v467 = vmovl_high_s8(*(int8x16_t *)v463->i8);
            v462[-2] = vmovl_s8(*(int8x8_t *)v465.i8);
            v462[-1] = vmovl_high_s8(v465);
            *v462 = v466;
            v462[1] = v467;
            v462 += 4;
            v463 += 4;
            v464 -= 32;
          }
          while (v464);
          if (v191 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_278:
            v192 = a7 - v191;
            v193 = &v14[v191];
            v194 = &v11[2 * v191];
            do
            {
              v195 = (char)*v193++;
              *(_WORD *)v194 = v195;
              v194 += 2;
              --v192;
            }
            while (v192);
            return result;
          }
        }
        else
        {
          v191 = 0;
        }
        v468 = v191;
        v191 = a7 & 0xFFFFFFFFFFFFFFF8;
        v469 = (int16x8_t *)&v11[2 * v468];
        v470 = (int8x8_t *)&v14[v468];
        v471 = v468 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v472 = *v470++;
          *v469++ = vmovl_s8(v472);
          v471 += 8;
        }
        while (v471);
        if (v191 == a7)
          return result;
        goto LABEL_278;
      }
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
LABEL_1084:
        __break(1u);
        goto LABEL_1085;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[a7] > v11 && &v11[8 * a7] > v14)
      {
        v243 = 0;
        goto LABEL_359;
      }
      if (a7 >= 0x10)
      {
        v243 = a7 & 0xFFFFFFFFFFFFFFF0;
        v446 = a7 & 0xFFFFFFFFFFFFFFF0;
        v447 = (int8x16_t *)v14;
        v448 = v11;
        do
        {
          v449 = *v447++;
          v450 = vmovl_s8(*(int8x8_t *)v449.i8);
          v451 = vmovl_s16(*(int16x4_t *)v450.i8);
          *(_QWORD *)&v452 = v451.i32[0];
          *((_QWORD *)&v452 + 1) = v451.i32[1];
          v453 = v452;
          v454 = vmovl_high_s16(v450);
          *(_QWORD *)&v452 = v454.i32[0];
          *((_QWORD *)&v452 + 1) = v454.i32[1];
          v455 = v452;
          v456 = vmovl_high_s8(v449);
          v457 = vmovl_high_s16(v456);
          *(_QWORD *)&v452 = v457.i32[0];
          *((_QWORD *)&v452 + 1) = v457.i32[1];
          v458 = v452;
          *(_QWORD *)&v452 = v457.i32[2];
          *((_QWORD *)&v452 + 1) = v457.i32[3];
          *((_OWORD *)v448 + 6) = v458;
          *((_OWORD *)v448 + 7) = v452;
          v459 = vmovl_s16(*(int16x4_t *)v456.i8);
          *(_QWORD *)&v452 = v459.i32[0];
          *((_QWORD *)&v452 + 1) = v459.i32[1];
          v460 = v452;
          *(_QWORD *)&v452 = v454.i32[2];
          *((_QWORD *)&v452 + 1) = v454.i32[3];
          v461 = v452;
          *(_QWORD *)&v452 = v459.i32[2];
          *((_QWORD *)&v452 + 1) = v459.i32[3];
          *((_OWORD *)v448 + 4) = v460;
          *((_OWORD *)v448 + 5) = v452;
          *((_OWORD *)v448 + 2) = v455;
          *((_OWORD *)v448 + 3) = v461;
          *(_QWORD *)&v452 = v451.i32[2];
          *((_QWORD *)&v452 + 1) = v451.i32[3];
          *(_OWORD *)v448 = v453;
          *((_OWORD *)v448 + 1) = v452;
          v448 += 128;
          v446 -= 16;
        }
        while (v446);
        if (v243 == a7)
          return result;
        if ((a7 & 8) == 0)
        {
LABEL_359:
          v244 = a7 - v243;
          v245 = &v14[v243];
          v246 = &v11[8 * v243];
          do
          {
            v247 = (char)*v245++;
            *(_QWORD *)v246 = v247;
            v246 += 8;
            --v244;
          }
          while (v244);
          return result;
        }
      }
      else
      {
        v243 = 0;
      }
      v338 = v243;
      v243 = a7 & 0xFFFFFFFFFFFFFFF8;
      v339 = &v11[8 * v338];
      v340 = (int8x8_t *)&v14[v338];
      v341 = v338 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v342 = *v340++;
        v343 = vmovl_s8(v342);
        v344 = vmovl_s16(*(int16x4_t *)v343.i8);
        *(_QWORD *)&v345 = v344.i32[0];
        *((_QWORD *)&v345 + 1) = v344.i32[1];
        v346 = v345;
        v347 = vmovl_high_s16(v343);
        *(_QWORD *)&v345 = v347.i32[0];
        *((_QWORD *)&v345 + 1) = v347.i32[1];
        v348 = v345;
        *(_QWORD *)&v345 = v347.i32[2];
        *((_QWORD *)&v345 + 1) = v347.i32[3];
        *((_OWORD *)v339 + 2) = v348;
        *((_OWORD *)v339 + 3) = v345;
        *(_QWORD *)&v345 = v344.i32[2];
        *((_QWORD *)&v345 + 1) = v344.i32[3];
        *(_OWORD *)v339 = v346;
        *((_OWORD *)v339 + 1) = v345;
        v339 += 64;
        v341 += 8;
      }
      while (v341);
      if (v243 == a7)
        return result;
      goto LABEL_359;
    }
    if (v12 != 6)
      goto LABEL_317;
    if (v10 == 8)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[8 * a7] <= v14))
        {
          v285 = a7 & 0xFFFFFFFFFFFFFFF0;
          v429 = v11 + 64;
          v430 = (int16x4_t *)(v14 + 16);
          v431 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v432 = *(int16x8_t *)v430[-2].i8;
            v433 = *(int16x8_t *)v430->i8;
            v434 = vmovl_s16(*(int16x4_t *)v432.i8);
            *(_QWORD *)&v435 = v434.i32[0];
            *((_QWORD *)&v435 + 1) = v434.i32[1];
            v436 = v435;
            *(_QWORD *)&v435 = v434.i32[2];
            *((_QWORD *)&v435 + 1) = v434.i32[3];
            v437 = v435;
            v438 = vmovl_high_s16(v432);
            *(_QWORD *)&v435 = v438.i32[0];
            *((_QWORD *)&v435 + 1) = v438.i32[1];
            v439 = v435;
            *(_QWORD *)&v435 = v438.i32[2];
            *((_QWORD *)&v435 + 1) = v438.i32[3];
            v440 = v435;
            v441 = vmovl_s16(*v430);
            *(_QWORD *)&v435 = v441.i32[0];
            *((_QWORD *)&v435 + 1) = v441.i32[1];
            v442 = v435;
            *(_QWORD *)&v435 = v441.i32[2];
            *((_QWORD *)&v435 + 1) = v441.i32[3];
            v443 = v435;
            *(v429 - 2) = v439;
            *(v429 - 1) = v440;
            v444 = vmovl_high_s16(v433);
            *(_QWORD *)&v435 = v444.i32[0];
            *((_QWORD *)&v435 + 1) = v444.i32[1];
            v445 = v435;
            *(v429 - 4) = v436;
            *(v429 - 3) = v437;
            *(_QWORD *)&v435 = v444.i32[2];
            *((_QWORD *)&v435 + 1) = v444.i32[3];
            v429[2] = v445;
            v429[3] = v435;
            *v429 = v442;
            v429[1] = v443;
            v429 += 8;
            v430 += 4;
            v431 -= 16;
          }
          while (v431);
          if (v285 == a7)
            return result;
        }
        else
        {
          v285 = 0;
        }
        v286 = a7 - v285;
        v287 = &v14[2 * v285];
        v288 = &v11[8 * v285];
        do
        {
          v289 = *(__int16 *)v287;
          v287 += 2;
          *(_QWORD *)v288 = v289;
          v288 += 8;
          --v286;
        }
        while (v286);
        return result;
      }
      goto LABEL_1112;
    }
    if (v10 == 7)
    {
LABEL_391:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v280 = a7 & 0xFFFFFFFFFFFFFFF0;
          v408 = (int32x4_t *)(v11 + 32);
          v409 = (int16x4_t *)(v14 + 16);
          v410 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v411 = *(int16x8_t *)v409[-2].i8;
            v412 = vmovl_s16(*v409);
            v413 = vmovl_high_s16(*(int16x8_t *)v409->i8);
            v408[-2] = vmovl_s16(*(int16x4_t *)v411.i8);
            v408[-1] = vmovl_high_s16(v411);
            *v408 = v412;
            v408[1] = v413;
            v408 += 4;
            v409 += 4;
            v410 -= 16;
          }
          while (v410);
          if (v280 == a7)
            return result;
        }
        else
        {
          v280 = 0;
        }
        v281 = a7 - v280;
        v282 = &v14[2 * v280];
        v283 = &v11[4 * v280];
        do
        {
          v284 = *(__int16 *)v282;
          v282 += 2;
          *(_DWORD *)v283 = v284;
          v283 += 4;
          --v281;
        }
        while (v281);
        return result;
      }
      __break(1u);
LABEL_1112:
      __break(1u);
      goto LABEL_1113;
    }
    if (v10 != 5)
      goto LABEL_554;
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
LABEL_1113:
      __break(1u);
LABEL_1114:
      __break(1u);
      goto LABEL_1115;
    }
    if (!a7)
      return result;
    if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
    {
      v211 = 0;
      goto LABEL_306;
    }
    if (a7 >= 0x20)
    {
      v211 = a7 & 0xFFFFFFFFFFFFFFE0;
      v521 = (int8x16_t *)(v11 + 16);
      v522 = (int8x16_t *)(v14 + 32);
      v523 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v525 = v522[-2];
        v524 = v522[-1];
        v527 = *v522;
        v526 = v522[1];
        v522 += 4;
        v521[-1] = vuzp1q_s8(v525, v524);
        *v521 = vuzp1q_s8(v527, v526);
        v521 += 2;
        v523 -= 32;
      }
      while (v523);
      if (v211 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_306:
        v212 = a7 - v211;
        v213 = &v14[2 * v211];
        v214 = &v11[v211];
        do
        {
          v215 = *v213;
          v213 += 2;
          *v214++ = v215;
          --v212;
        }
        while (v212);
        return result;
      }
    }
    else
    {
      v211 = 0;
    }
    v528 = v211;
    v211 = a7 & 0xFFFFFFFFFFFFFFF8;
    v529 = (int8x8_t *)&v11[v528];
    v530 = (int16x8_t *)&v14[2 * v528];
    v531 = v528 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v532 = *v530++;
      *v529++ = vmovn_s16(v532);
      v531 += 8;
    }
    while (v531);
    if (v211 == a7)
      return result;
    goto LABEL_306;
  }
  if (!v11)
    return result;
  if ((a7 & 0x8000000000000000) == 0)
  {
    if (!a7)
      return result;
    v20 = 0;
    if (a7 < 8 || (unint64_t)(v11 - v14) < 0x20)
      goto LABEL_127;
    if (a7 >= 0x20)
    {
      v20 = a7 & 0xFFFFFFFFFFFFFFE0;
      v63 = (int8x16_t *)(v11 + 16);
      v64 = (int8x16_t *)(v14 + 16);
      v65.i64[0] = 0x101010101010101;
      v65.i64[1] = 0x101010101010101;
      v66 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v67 = vbicq_s8(v65, vceqzq_s8(*v64));
        v63[-1] = vbicq_s8(v65, vceqzq_s8(v64[-1]));
        *v63 = v67;
        v63 += 2;
        v64 += 2;
        v66 -= 32;
      }
      while (v66);
      if (v20 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_127:
        v73 = a7 - v20;
        v74 = &v14[v20];
        v75 = (BOOL *)&v11[v20];
        do
        {
          v76 = *v74++;
          *v75++ = v76 != 0;
          --v73;
        }
        while (v73);
        return result;
      }
    }
    else
    {
      v20 = 0;
    }
    v68 = v20;
    v20 = a7 & 0xFFFFFFFFFFFFFFF8;
    v69 = (int8x8_t *)&v11[v68];
    v70 = (int8x8_t *)&v14[v68];
    v71 = v68 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v72 = *v70++;
      *v69++ = vbic_s8((int8x8_t)0x101010101010101, vceqz_s8(v72));
      v71 += 8;
    }
    while (v71);
    if (v20 == a7)
      return result;
    goto LABEL_127;
  }
  __break(1u);
LABEL_317:
  if (v12 == 7)
  {
    if (v10 == 8)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0xC && (&v14[4 * a7] <= v11 || &v11[8 * a7] <= v14))
        {
          v313 = a7 & 0xFFFFFFFFFFFFFFF8;
          v513 = v11 + 32;
          v514 = v14 + 16;
          v515 = a7 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v516 = *((_OWORD *)v514 - 1);
            *(_QWORD *)&v517 = (int)v516;
            *((_QWORD *)&v517 + 1) = SDWORD1(v516);
            v518 = v517;
            *(_QWORD *)&v517 = SDWORD2(v516);
            *((_QWORD *)&v517 + 1) = SHIDWORD(v516);
            v519 = v517;
            *(_QWORD *)&v517 = (int)*(_OWORD *)v514;
            *((_QWORD *)&v517 + 1) = (int)HIDWORD(*(_QWORD *)v514);
            v520 = v517;
            *(_QWORD *)&v517 = (int)*((_QWORD *)v514 + 1);
            *((_QWORD *)&v517 + 1) = (int)HIDWORD(*(_OWORD *)v514);
            *(v513 - 2) = v518;
            *(v513 - 1) = v519;
            *v513 = v520;
            v513[1] = v517;
            v513 += 4;
            v514 += 32;
            v515 -= 8;
          }
          while (v515);
          if (v313 == a7)
            return result;
        }
        else
        {
          v313 = 0;
        }
        v314 = a7 - v313;
        v315 = &v14[4 * v313];
        v316 = &v11[8 * v313];
        do
        {
          v317 = *(int *)v315;
          v315 += 4;
          *(_QWORD *)v316 = v317;
          v316 += 8;
          --v314;
        }
        while (v314);
        return result;
      }
      goto LABEL_1128;
    }
    if (v10 != 6)
    {
      if (v10 == 5)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
          {
            v220 = 0;
            goto LABEL_328;
          }
          if (a7 >= 0x20)
          {
            v220 = a7 & 0xFFFFFFFFFFFFFFE0;
            v568 = (int8x16_t *)(v11 + 16);
            v569 = (int8x16x4_t *)(v14 + 64);
            v570 = a7 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v1627 = *v569;
              v568[-1] = vqtbl4q_s8(v569[-1], (int8x16_t)xmmword_19CAECBA0);
              *v568 = vqtbl4q_s8(v1627, (int8x16_t)xmmword_19CAECBA0);
              v568 += 2;
              v569 += 2;
              v570 -= 32;
            }
            while (v570);
            if (v220 == a7)
              return result;
            if ((a7 & 0x18) == 0)
            {
LABEL_328:
              v221 = a7 - v220;
              v222 = &v14[4 * v220];
              v223 = &v11[v220];
              do
              {
                v224 = *(_DWORD *)v222;
                v222 += 4;
                *v223++ = v224;
                --v221;
              }
              while (v221);
              return result;
            }
          }
          else
          {
            v220 = 0;
          }
          v571 = v220;
          v220 = a7 & 0xFFFFFFFFFFFFFFF8;
          v572 = &v11[v571];
          v573 = (int8x16x2_t *)&v14[4 * v571];
          v574 = v571 - (a7 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v1623 = *v573++;
            *(_QWORD *)v572 = vqtbl2q_s8(v1623, (int8x16_t)xmmword_19CAECBB0).u64[0];
            v572 += 8;
            v574 += 8;
          }
          while (v574);
          if (v220 == a7)
            return result;
          goto LABEL_328;
        }
        goto LABEL_1129;
      }
      goto LABEL_554;
    }
LABEL_440:
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 >= 0x10 && (&v14[4 * a7] <= v11 || &v11[2 * a7] <= v14))
      {
        v308 = a7 & 0xFFFFFFFFFFFFFFF0;
        v506 = (int16x8_t *)(v11 + 16);
        v507 = (int16x8_t *)(v14 + 32);
        v508 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v510 = v507[-2];
          v509 = v507[-1];
          v512 = *v507;
          v511 = v507[1];
          v507 += 4;
          v506[-1] = vuzp1q_s16(v510, v509);
          *v506 = vuzp1q_s16(v512, v511);
          v506 += 2;
          v508 -= 16;
        }
        while (v508);
        if (v308 == a7)
          return result;
      }
      else
      {
        v308 = 0;
      }
      v309 = a7 - v308;
      v310 = &v14[4 * v308];
      v311 = &v11[2 * v308];
      do
      {
        v312 = *(_DWORD *)v310;
        v310 += 4;
        *(_WORD *)v311 = v312;
        v311 += 2;
        --v309;
      }
      while (v309);
      return result;
    }
    __break(1u);
LABEL_1128:
    __break(1u);
LABEL_1129:
    __break(1u);
LABEL_1130:
    __break(1u);
    goto LABEL_1131;
  }
  if (v12 == 8)
  {
    if (v10 == 7)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0xC && (&v14[8 * a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v328 = a7 & 0xFFFFFFFFFFFFFFF8;
          v561 = (int32x4_t *)(v11 + 16);
          v562 = (int32x4_t *)(v14 + 32);
          v563 = a7 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v565 = v562[-2];
            v564 = v562[-1];
            v567 = *v562;
            v566 = v562[1];
            v562 += 4;
            v561[-1] = vuzp1q_s32(v565, v564);
            *v561 = vuzp1q_s32(v567, v566);
            v561 += 2;
            v563 -= 8;
          }
          while (v563);
          if (v328 == a7)
            return result;
        }
        else
        {
          v328 = 0;
        }
        v329 = a7 - v328;
        v330 = &v14[8 * v328];
        v331 = &v11[4 * v328];
        do
        {
          v332 = *(_QWORD *)v330;
          v330 += 8;
          *(_DWORD *)v331 = v332;
          v331 += 4;
          --v329;
        }
        while (v329);
        return result;
      }
      goto LABEL_1154;
    }
    if (v10 != 6)
    {
      if (v10 == 5)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
          {
            v248 = 0;
            goto LABEL_373;
          }
          if (a7 >= 0x20)
          {
            v248 = a7 & 0xFFFFFFFFFFFFFFE0;
            v606 = v11 + 16;
            v607 = (int8x16x4_t *)(v14 + 128);
            v608 = a7 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              *(_QWORD *)&v609 = vqtbl4q_s8(v607[-2], (int8x16_t)xmmword_19CAECB80).u64[0];
              *(_QWORD *)&v610 = vqtbl4q_s8(*v607, (int8x16_t)xmmword_19CAECB80).u64[0];
              *((_QWORD *)&v609 + 1) = vqtbl4q_s8(v607[-1], (int8x16_t)xmmword_19CAECB80).u64[0];
              *((_QWORD *)&v610 + 1) = vqtbl4q_s8(v607[1], (int8x16_t)xmmword_19CAECB80).u64[0];
              *(v606 - 1) = v609;
              *v606 = v610;
              v606 += 2;
              v607 += 4;
              v608 -= 32;
            }
            while (v608);
            if (v248 == a7)
              return result;
            if ((a7 & 0x18) == 0)
            {
LABEL_373:
              v249 = a7 - v248;
              v250 = &v14[8 * v248];
              v251 = &v11[v248];
              do
              {
                v252 = *(_QWORD *)v250;
                v250 += 8;
                *v251++ = v252;
                --v249;
              }
              while (v249);
              return result;
            }
          }
          else
          {
            v248 = 0;
          }
          v611 = v248;
          v248 = a7 & 0xFFFFFFFFFFFFFFF8;
          v612 = &v11[v611];
          v613 = (int8x16x4_t *)&v14[8 * v611];
          v614 = v611 - (a7 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            *(_QWORD *)v612 = vqtbl4q_s8(*v613, (int8x16_t)xmmword_19CAECB90).u64[0];
            v612 += 8;
            ++v613;
            v614 += 8;
          }
          while (v614);
          if (v248 == a7)
            return result;
          goto LABEL_373;
        }
LABEL_1155:
        __break(1u);
        goto LABEL_1156;
      }
LABEL_554:
      v364 = v10 == 6;
      goto LABEL_555;
    }
LABEL_475:
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 >= 0x10 && (&v14[8 * a7] <= v11 || &v11[2 * a7] <= v14))
      {
        v323 = a7 & 0xFFFFFFFFFFFFFFF0;
        v557 = (int16x8_t *)(v11 + 16);
        v558 = (int32x4_t *)(v14 + 64);
        v559 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v560 = vuzp1q_s16((int16x8_t)vuzp1q_s32(*v558, v558[1]), (int16x8_t)vuzp1q_s32(v558[2], v558[3]));
          v557[-1] = vuzp1q_s16((int16x8_t)vuzp1q_s32(v558[-4], v558[-3]), (int16x8_t)vuzp1q_s32(v558[-2], v558[-1]));
          *v557 = v560;
          v557 += 2;
          v558 += 8;
          v559 -= 16;
        }
        while (v559);
        if (v323 == a7)
          return result;
      }
      else
      {
        v323 = 0;
      }
      v324 = a7 - v323;
      v325 = &v14[8 * v323];
      v326 = &v11[2 * v323];
      do
      {
        v327 = *(_QWORD *)v325;
        v325 += 8;
        *(_WORD *)v326 = v327;
        v326 += 2;
        --v324;
      }
      while (v324);
      return result;
    }
    __break(1u);
LABEL_1154:
    __break(1u);
    goto LABEL_1155;
  }
  if (v12 != 1)
  {
    if (v12 == 2)
    {
      if (v10 == 4)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[8 * a7] <= v14))
          {
            v485 = a7 & 0xFFFFFFFFFFFFFFF0;
            v658 = v11 + 64;
            v659 = (uint16x4_t *)(v14 + 16);
            v660 = a7 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v661 = *(uint16x8_t *)v659[-2].i8;
              v662 = *(uint16x8_t *)v659->i8;
              v663 = vmovl_u16(*(uint16x4_t *)v661.i8);
              *(_QWORD *)&v664 = v663.u32[0];
              *((_QWORD *)&v664 + 1) = v663.u32[1];
              v665 = v664;
              *(_QWORD *)&v664 = v663.u32[2];
              *((_QWORD *)&v664 + 1) = v663.u32[3];
              v666 = v664;
              v667 = vmovl_high_u16(v661);
              *(_QWORD *)&v664 = v667.u32[0];
              *((_QWORD *)&v664 + 1) = v667.u32[1];
              v668 = v664;
              *(_QWORD *)&v664 = v667.u32[2];
              *((_QWORD *)&v664 + 1) = v667.u32[3];
              v669 = v664;
              v670 = vmovl_u16(*v659);
              *(_QWORD *)&v664 = v670.u32[0];
              *((_QWORD *)&v664 + 1) = v670.u32[1];
              v671 = v664;
              *(_QWORD *)&v664 = v670.u32[2];
              *((_QWORD *)&v664 + 1) = v670.u32[3];
              v672 = v664;
              *(v658 - 2) = v668;
              *(v658 - 1) = v669;
              v673 = vmovl_high_u16(v662);
              *(_QWORD *)&v664 = v673.u32[0];
              *((_QWORD *)&v664 + 1) = v673.u32[1];
              v674 = v664;
              *(v658 - 4) = v665;
              *(v658 - 3) = v666;
              *(_QWORD *)&v664 = v673.u32[2];
              *((_QWORD *)&v664 + 1) = v673.u32[3];
              v658[2] = v674;
              v658[3] = v664;
              *v658 = v671;
              v658[1] = v672;
              v658 += 8;
              v659 += 4;
              v660 -= 16;
            }
            while (v660);
            if (v485 == a7)
              return result;
          }
          else
          {
            v485 = 0;
          }
          v486 = a7 - v485;
          v487 = &v14[2 * v485];
          v488 = &v11[8 * v485];
          do
          {
            v489 = *(unsigned __int16 *)v487;
            v487 += 2;
            *(_QWORD *)v488 = v489;
            v488 += 8;
            --v486;
          }
          while (v486);
          return result;
        }
        goto LABEL_1200;
      }
      if (v10 != 3)
      {
        if (v10 == 1)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
            {
              v318 = 0;
              goto LABEL_471;
            }
            if (a7 >= 0x20)
            {
              v318 = a7 & 0xFFFFFFFFFFFFFFE0;
              v752 = (int8x16_t *)(v11 + 16);
              v753 = (int8x16_t *)(v14 + 32);
              v754 = a7 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                v756 = v753[-2];
                v755 = v753[-1];
                v758 = *v753;
                v757 = v753[1];
                v753 += 4;
                v752[-1] = vuzp1q_s8(v756, v755);
                *v752 = vuzp1q_s8(v758, v757);
                v752 += 2;
                v754 -= 32;
              }
              while (v754);
              if (v318 == a7)
                return result;
              if ((a7 & 0x18) == 0)
              {
LABEL_471:
                v319 = a7 - v318;
                v320 = &v14[2 * v318];
                v321 = &v11[v318];
                do
                {
                  v322 = *v320;
                  v320 += 2;
                  *v321++ = v322;
                  --v319;
                }
                while (v319);
                return result;
              }
            }
            else
            {
              v318 = 0;
            }
            v759 = v318;
            v318 = a7 & 0xFFFFFFFFFFFFFFF8;
            v760 = (int8x8_t *)&v11[v759];
            v761 = (int16x8_t *)&v14[2 * v759];
            v762 = v759 - (a7 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v763 = *v761++;
              *v760++ = vmovn_s16(v763);
              v762 += 8;
            }
            while (v762);
            if (v318 == a7)
              return result;
            goto LABEL_471;
          }
LABEL_1201:
          __break(1u);
          goto LABEL_1202;
        }
LABEL_640:
        v407 = v10 == 5;
        goto LABEL_698;
      }
LABEL_677:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v480 = a7 & 0xFFFFFFFFFFFFFFF0;
          v652 = (uint32x4_t *)(v11 + 32);
          v653 = (uint16x4_t *)(v14 + 16);
          v654 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v655 = *(uint16x8_t *)v653[-2].i8;
            v656 = vmovl_u16(*v653);
            v657 = vmovl_high_u16(*(uint16x8_t *)v653->i8);
            v652[-2] = vmovl_u16(*(uint16x4_t *)v655.i8);
            v652[-1] = vmovl_high_u16(v655);
            *v652 = v656;
            v652[1] = v657;
            v652 += 4;
            v653 += 4;
            v654 -= 16;
          }
          while (v654);
          if (v480 == a7)
            return result;
        }
        else
        {
          v480 = 0;
        }
        v481 = a7 - v480;
        v482 = &v14[2 * v480];
        v483 = &v11[4 * v480];
        do
        {
          v484 = *(unsigned __int16 *)v482;
          v482 += 2;
          *(_DWORD *)v483 = v484;
          v483 += 4;
          --v481;
        }
        while (v481);
        return result;
      }
      __break(1u);
LABEL_1200:
      __break(1u);
      goto LABEL_1201;
    }
    if (v12 == 3)
    {
      if (v10 == 4)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 >= 0xC && (&v14[4 * a7] <= v11 || &v11[8 * a7] <= v14))
          {
            v547 = a7 & 0xFFFFFFFFFFFFFFF8;
            v744 = v11 + 32;
            v745 = v14 + 16;
            v746 = a7 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v747 = *((_OWORD *)v745 - 1);
              *(_QWORD *)&v748 = v747;
              *((_QWORD *)&v748 + 1) = DWORD1(v747);
              v749 = v748;
              *(_QWORD *)&v748 = DWORD2(v747);
              *((_QWORD *)&v748 + 1) = HIDWORD(v747);
              v750 = v748;
              *(_QWORD *)&v748 = *(_OWORD *)v745;
              *((_QWORD *)&v748 + 1) = HIDWORD(*(_QWORD *)v745);
              v751 = v748;
              *(_QWORD *)&v748 = *((_QWORD *)v745 + 1);
              *((_QWORD *)&v748 + 1) = HIDWORD(*(_OWORD *)v745);
              *(v744 - 2) = v749;
              *(v744 - 1) = v750;
              *v744 = v751;
              v744[1] = v748;
              v744 += 4;
              v745 += 32;
              v746 -= 8;
            }
            while (v746);
            if (v547 == a7)
              return result;
          }
          else
          {
            v547 = 0;
          }
          v548 = a7 - v547;
          v549 = &v14[4 * v547];
          v550 = &v11[8 * v547];
          do
          {
            v551 = *(_DWORD *)v549;
            v549 += 4;
            *(_QWORD *)v550 = v551;
            v550 += 8;
            --v548;
          }
          while (v548);
          return result;
        }
        goto LABEL_1228;
      }
      if (v10 != 2)
      {
        if (v10 != 1)
          goto LABEL_640;
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
          {
            v333 = 0;
            goto LABEL_506;
          }
          if (a7 >= 0x20)
          {
            v333 = a7 & 0xFFFFFFFFFFFFFFE0;
            v790 = (int8x16_t *)(v11 + 16);
            v791 = (int8x16x4_t *)(v14 + 64);
            v792 = a7 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v1629 = *v791;
              v790[-1] = vqtbl4q_s8(v791[-1], (int8x16_t)xmmword_19CAECBA0);
              *v790 = vqtbl4q_s8(v1629, (int8x16_t)xmmword_19CAECBA0);
              v790 += 2;
              v791 += 2;
              v792 -= 32;
            }
            while (v792);
            if (v333 == a7)
              return result;
            if ((a7 & 0x18) == 0)
            {
LABEL_506:
              v334 = a7 - v333;
              v335 = &v14[4 * v333];
              v336 = &v11[v333];
              do
              {
                v337 = *(_DWORD *)v335;
                v335 += 4;
                *v336++ = v337;
                --v334;
              }
              while (v334);
              return result;
            }
          }
          else
          {
            v333 = 0;
          }
          v793 = v333;
          v333 = a7 & 0xFFFFFFFFFFFFFFF8;
          v794 = &v11[v793];
          v795 = (int8x16x2_t *)&v14[4 * v793];
          v796 = v793 - (a7 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v1625 = *v795++;
            *(_QWORD *)v794 = vqtbl2q_s8(v1625, (int8x16_t)xmmword_19CAECBB0).u64[0];
            v794 += 8;
            v796 += 8;
          }
          while (v796);
          if (v333 == a7)
            return result;
          goto LABEL_506;
        }
LABEL_1229:
        __break(1u);
LABEL_1230:
        __break(1u);
        goto LABEL_1231;
      }
LABEL_772:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[4 * a7] <= v11 || &v11[2 * a7] <= v14))
        {
          v542 = a7 & 0xFFFFFFFFFFFFFFF0;
          v737 = (int16x8_t *)(v11 + 16);
          v738 = (int16x8_t *)(v14 + 32);
          v739 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v741 = v738[-2];
            v740 = v738[-1];
            v743 = *v738;
            v742 = v738[1];
            v738 += 4;
            v737[-1] = vuzp1q_s16(v741, v740);
            *v737 = vuzp1q_s16(v743, v742);
            v737 += 2;
            v739 -= 16;
          }
          while (v739);
          if (v542 == a7)
            return result;
        }
        else
        {
          v542 = 0;
        }
        v543 = a7 - v542;
        v544 = &v14[4 * v542];
        v545 = &v11[2 * v542];
        do
        {
          v546 = *(_DWORD *)v544;
          v544 += 4;
          *(_WORD *)v545 = v546;
          v545 += 2;
          --v543;
        }
        while (v543);
        return result;
      }
      __break(1u);
LABEL_1228:
      __break(1u);
      goto LABEL_1229;
    }
    if (v12 != 4)
      goto LABEL_554;
    if (v10 == 3)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0xC && (&v14[8 * a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v585 = a7 & 0xFFFFFFFFFFFFFFF8;
          v783 = (int32x4_t *)(v11 + 16);
          v784 = (int32x4_t *)(v14 + 32);
          v785 = a7 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v787 = v784[-2];
            v786 = v784[-1];
            v789 = *v784;
            v788 = v784[1];
            v784 += 4;
            v783[-1] = vuzp1q_s32(v787, v786);
            *v783 = vuzp1q_s32(v789, v788);
            v783 += 2;
            v785 -= 8;
          }
          while (v785);
          if (v585 == a7)
            return result;
        }
        else
        {
          v585 = 0;
        }
        v586 = a7 - v585;
        v587 = &v14[8 * v585];
        v588 = &v11[4 * v585];
        do
        {
          v589 = *(_QWORD *)v587;
          v587 += 8;
          *(_DWORD *)v588 = v589;
          v588 += 4;
          --v586;
        }
        while (v586);
        return result;
      }
      goto LABEL_1256;
    }
    if (v10 != 2)
    {
      if (v10 != 1)
        goto LABEL_640;
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
        {
          v359 = 0;
          goto LABEL_551;
        }
        if (a7 >= 0x20)
        {
          v359 = a7 & 0xFFFFFFFFFFFFFFE0;
          v822 = v11 + 16;
          v823 = (int8x16x4_t *)(v14 + 128);
          v824 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            *(_QWORD *)&v825 = vqtbl4q_s8(v823[-2], (int8x16_t)xmmword_19CAECB80).u64[0];
            *(_QWORD *)&v826 = vqtbl4q_s8(*v823, (int8x16_t)xmmword_19CAECB80).u64[0];
            *((_QWORD *)&v825 + 1) = vqtbl4q_s8(v823[-1], (int8x16_t)xmmword_19CAECB80).u64[0];
            *((_QWORD *)&v826 + 1) = vqtbl4q_s8(v823[1], (int8x16_t)xmmword_19CAECB80).u64[0];
            *(v822 - 1) = v825;
            *v822 = v826;
            v822 += 2;
            v823 += 4;
            v824 -= 32;
          }
          while (v824);
          if (v359 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_551:
            v360 = a7 - v359;
            v361 = &v14[8 * v359];
            v362 = &v11[v359];
            do
            {
              v363 = *(_QWORD *)v361;
              v361 += 8;
              *v362++ = v363;
              --v360;
            }
            while (v360);
            return result;
          }
        }
        else
        {
          v359 = 0;
        }
        v827 = v359;
        v359 = a7 & 0xFFFFFFFFFFFFFFF8;
        v828 = &v11[v827];
        v829 = (int8x16x4_t *)&v14[8 * v827];
        v830 = v827 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          *(_QWORD *)v828 = vqtbl4q_s8(*v829, (int8x16_t)xmmword_19CAECB90).u64[0];
          v828 += 8;
          ++v829;
          v830 += 8;
        }
        while (v830);
        if (v359 == a7)
          return result;
        goto LABEL_551;
      }
      __break(1u);
      goto LABEL_1255;
    }
LABEL_837:
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 >= 0x10 && (&v14[8 * a7] <= v11 || &v11[2 * a7] <= v14))
      {
        v580 = a7 & 0xFFFFFFFFFFFFFFF0;
        v779 = (int16x8_t *)(v11 + 16);
        v780 = (int32x4_t *)(v14 + 64);
        v781 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v782 = vuzp1q_s16((int16x8_t)vuzp1q_s32(*v780, v780[1]), (int16x8_t)vuzp1q_s32(v780[2], v780[3]));
          v779[-1] = vuzp1q_s16((int16x8_t)vuzp1q_s32(v780[-4], v780[-3]), (int16x8_t)vuzp1q_s32(v780[-2], v780[-1]));
          *v779 = v782;
          v779 += 2;
          v780 += 8;
          v781 -= 16;
        }
        while (v781);
        if (v580 == a7)
          return result;
      }
      else
      {
        v580 = 0;
      }
      v581 = a7 - v580;
      v582 = &v14[8 * v580];
      v583 = &v11[2 * v580];
      do
      {
        v584 = *(_QWORD *)v582;
        v582 += 8;
        *(_WORD *)v583 = v584;
        v583 += 2;
        --v581;
      }
      while (v581);
      return result;
    }
LABEL_1255:
    __break(1u);
LABEL_1256:
    __break(1u);
    goto LABEL_1257;
  }
  switch(v10)
  {
    case 4u:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
        goto LABEL_1173;
      if (!a7)
        return result;
      if (a7 < 8 || &v14[a7] > v11 && &v11[8 * a7] > v14)
      {
        v354 = 0;
        goto LABEL_537;
      }
      if (a7 >= 0x10)
      {
        v354 = a7 & 0xFFFFFFFFFFFFFFF0;
        v675 = a7 & 0xFFFFFFFFFFFFFFF0;
        v676 = (uint8x16_t *)v14;
        v677 = v11;
        do
        {
          v678 = *v676++;
          v679 = vmovl_u8(*(uint8x8_t *)v678.i8);
          v680 = vmovl_u16(*(uint16x4_t *)v679.i8);
          *(_QWORD *)&v681 = v680.u32[0];
          *((_QWORD *)&v681 + 1) = v680.u32[1];
          v682 = v681;
          v683 = vmovl_high_u16(v679);
          *(_QWORD *)&v681 = v683.u32[0];
          *((_QWORD *)&v681 + 1) = v683.u32[1];
          v684 = v681;
          v685 = vmovl_high_u8(v678);
          v686 = vmovl_high_u16(v685);
          *(_QWORD *)&v681 = v686.u32[0];
          *((_QWORD *)&v681 + 1) = v686.u32[1];
          v687 = v681;
          *(_QWORD *)&v681 = v686.u32[2];
          *((_QWORD *)&v681 + 1) = v686.u32[3];
          *((_OWORD *)v677 + 6) = v687;
          *((_OWORD *)v677 + 7) = v681;
          v688 = vmovl_u16(*(uint16x4_t *)v685.i8);
          *(_QWORD *)&v681 = v688.u32[0];
          *((_QWORD *)&v681 + 1) = v688.u32[1];
          v689 = v681;
          *(_QWORD *)&v681 = v683.u32[2];
          *((_QWORD *)&v681 + 1) = v683.u32[3];
          v690 = v681;
          *(_QWORD *)&v681 = v688.u32[2];
          *((_QWORD *)&v681 + 1) = v688.u32[3];
          *((_OWORD *)v677 + 4) = v689;
          *((_OWORD *)v677 + 5) = v681;
          *((_OWORD *)v677 + 2) = v684;
          *((_OWORD *)v677 + 3) = v690;
          *(_QWORD *)&v681 = v680.u32[2];
          *((_QWORD *)&v681 + 1) = v680.u32[3];
          *(_OWORD *)v677 = v682;
          *((_OWORD *)v677 + 1) = v681;
          v677 += 128;
          v675 -= 16;
        }
        while (v675);
        if (v354 == a7)
          return result;
        if ((a7 & 8) == 0)
        {
LABEL_537:
          v355 = a7 - v354;
          v356 = &v14[v354];
          v357 = &v11[8 * v354];
          do
          {
            v358 = *v356++;
            *(_QWORD *)v357 = v358;
            v357 += 8;
            --v355;
          }
          while (v355);
          return result;
        }
      }
      else
      {
        v354 = 0;
      }
      v595 = v354;
      v354 = a7 & 0xFFFFFFFFFFFFFFF8;
      v596 = &v11[8 * v595];
      v597 = (uint8x8_t *)&v14[v595];
      v598 = v595 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v599 = *v597++;
        v600 = vmovl_u8(v599);
        v601 = vmovl_u16(*(uint16x4_t *)v600.i8);
        *(_QWORD *)&v602 = v601.u32[0];
        *((_QWORD *)&v602 + 1) = v601.u32[1];
        v603 = v602;
        v604 = vmovl_high_u16(v600);
        *(_QWORD *)&v602 = v604.u32[0];
        *((_QWORD *)&v602 + 1) = v604.u32[1];
        v605 = v602;
        *(_QWORD *)&v602 = v604.u32[2];
        *((_QWORD *)&v602 + 1) = v604.u32[3];
        *((_OWORD *)v596 + 2) = v605;
        *((_OWORD *)v596 + 3) = v602;
        *(_QWORD *)&v602 = v601.u32[2];
        *((_QWORD *)&v602 + 1) = v601.u32[3];
        *(_OWORD *)v596 = v603;
        *((_OWORD *)v596 + 1) = v602;
        v596 += 64;
        v598 += 8;
      }
      while (v598);
      if (v354 == a7)
        return result;
      goto LABEL_537;
    case 3u:
LABEL_520:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[a7] > v11 && &v11[4 * a7] > v14)
        {
          v349 = 0;
          goto LABEL_527;
        }
        if (a7 >= 0x20)
        {
          v349 = a7 & 0xFFFFFFFFFFFFFFE0;
          v639 = (int8x16_t *)(v11 + 64);
          v640 = (int8x16_t *)(v14 + 16);
          _Q2.i64[1] = 0xFFFFFF0BFFFFFF0ALL;
          v641 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v642 = v640[-1];
            v643 = *v640;
            v644 = vqtbl1q_s8(*v640, (int8x16_t)xmmword_19CAECBC0);
            v645 = vqtbl1q_s8(*v640, (int8x16_t)xmmword_19CAECBD0);
            v639[-2] = vqtbl1q_s8(v642, (int8x16_t)xmmword_19CAECBE0);
            v639[-1] = vqtbl1q_s8(v642, (int8x16_t)xmmword_19CAECBF0);
            v639[-4] = vqtbl1q_s8(v642, (int8x16_t)xmmword_19CAECBC0);
            v639[-3] = vqtbl1q_s8(v642, (int8x16_t)xmmword_19CAECBD0);
            v639[2] = vqtbl1q_s8(v643, (int8x16_t)xmmword_19CAECBE0);
            v639[3] = vqtbl1q_s8(v643, (int8x16_t)xmmword_19CAECBF0);
            *v639 = v644;
            v639[1] = v645;
            v639 += 8;
            v640 += 2;
            v641 -= 32;
          }
          while (v641);
          if (v349 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_527:
            v350 = a7 - v349;
            v351 = &v14[v349];
            v352 = &v11[4 * v349];
            do
            {
              v353 = *v351++;
              *(_DWORD *)v352 = v353;
              v352 += 4;
              --v350;
            }
            while (v350);
            return result;
          }
        }
        else
        {
          v349 = 0;
        }
        v646 = v349;
        v349 = a7 & 0xFFFFFFFFFFFFFFF8;
        v647 = (int8x16_t *)&v11[4 * v646];
        v648 = &v14[v646];
        v649 = v646 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v650 = *(_QWORD *)v648;
          v648 += 8;
          _Q2.i64[0] = v650;
          v651 = vqtbl1q_s8(_Q2, (int8x16_t)xmmword_19CAECBC0);
          _Q2 = vqtbl1q_s8(_Q2, (int8x16_t)xmmword_19CAECBD0);
          *v647 = v651;
          v647[1] = _Q2;
          v647 += 2;
          v649 += 8;
        }
        while (v649);
        if (v349 == a7)
          return result;
        goto LABEL_527;
      }
      __break(1u);
LABEL_1173:
      __break(1u);
      goto LABEL_1174;
    case 2u:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[a7] > v11 && &v11[2 * a7] > v14)
        {
          v290 = 0;
          goto LABEL_422;
        }
        if (a7 >= 0x20)
        {
          v290 = a7 & 0xFFFFFFFFFFFFFFE0;
          v691 = (uint16x8_t *)(v11 + 32);
          v692 = (uint8x8_t *)(v14 + 16);
          v693 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v694 = *(uint8x16_t *)v692[-2].i8;
            v695 = vmovl_u8(*v692);
            v696 = vmovl_high_u8(*(uint8x16_t *)v692->i8);
            v691[-2] = vmovl_u8(*(uint8x8_t *)v694.i8);
            v691[-1] = vmovl_high_u8(v694);
            *v691 = v695;
            v691[1] = v696;
            v691 += 4;
            v692 += 4;
            v693 -= 32;
          }
          while (v693);
          if (v290 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_422:
            v291 = a7 - v290;
            v292 = &v14[v290];
            v293 = &v11[2 * v290];
            do
            {
              v294 = *v292++;
              *(_WORD *)v293 = v294;
              v293 += 2;
              --v291;
            }
            while (v291);
            return result;
          }
        }
        else
        {
          v290 = 0;
        }
        v697 = v290;
        v290 = a7 & 0xFFFFFFFFFFFFFFF8;
        v698 = (uint16x8_t *)&v11[2 * v697];
        v699 = (uint8x8_t *)&v14[v697];
        v700 = v697 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v701 = *v699++;
          *v698++ = vmovl_u8(v701);
          v700 += 8;
        }
        while (v700);
        if (v290 == a7)
          return result;
        goto LABEL_422;
      }
LABEL_1174:
      __break(1u);
LABEL_1175:
      __break(1u);
      goto LABEL_1176;
    case 5u:
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        v396 = 0;
        if (a7 < 8 || (unint64_t)(v11 - v14) < 0x20)
          goto LABEL_952;
        if (a7 >= 0x20)
        {
          v396 = a7 & 0xFFFFFFFFFFFFFFE0;
          v702 = v11 + 16;
          v703 = (__int128 *)(v14 + 16);
          v704 = a7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v705 = *v703;
            *(v702 - 1) = *(v703 - 1);
            *v702 = v705;
            v702 += 2;
            v703 += 2;
            v704 -= 32;
          }
          while (v704);
          if (v396 == a7)
            return result;
          if ((a7 & 0x18) == 0)
          {
LABEL_952:
            v711 = a7 - v396;
            v712 = &v14[v396];
            v713 = &v11[v396];
            do
            {
              v714 = *v712++;
              *v713++ = v714;
              --v711;
            }
            while (v711);
            return result;
          }
        }
        else
        {
          v396 = 0;
        }
        v706 = v396;
        v396 = a7 & 0xFFFFFFFFFFFFFFF8;
        v707 = &v11[v706];
        v708 = &v14[v706];
        v709 = v706 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v710 = *(_QWORD *)v708;
          v708 += 8;
          *(_QWORD *)v707 = v710;
          v707 += 8;
          v709 += 8;
        }
        while (v709);
        if (v396 == a7)
          return result;
        goto LABEL_952;
      }
LABEL_1202:
      __break(1u);
LABEL_1203:
      __break(1u);
      goto LABEL_1204;
  }
  v407 = 0;
LABEL_698:
  if (v12 == 2 && v407)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_1189;
    }
    if (!a7)
      return result;
    if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
    {
      v490 = 0;
      goto LABEL_707;
    }
LABEL_900:
    if (a7 >= 0x20)
    {
      v490 = a7 & 0xFFFFFFFFFFFFFFE0;
      v715 = (int8x16_t *)(v11 + 16);
      v716 = (int8x16_t *)(v14 + 32);
      v717 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v719 = v716[-2];
        v718 = v716[-1];
        v721 = *v716;
        v720 = v716[1];
        v716 += 4;
        v715[-1] = vuzp1q_s8(v719, v718);
        *v715 = vuzp1q_s8(v721, v720);
        v715 += 2;
        v717 -= 32;
      }
      while (v717);
      if (v490 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_707:
        v491 = a7 - v490;
        v492 = &v14[2 * v490];
        v493 = &v11[v490];
        do
        {
          v494 = *v492;
          v492 += 2;
          *v493++ = v494;
          --v491;
        }
        while (v491);
        return result;
      }
    }
    else
    {
      v490 = 0;
    }
    v722 = v490;
    v490 = a7 & 0xFFFFFFFFFFFFFFF8;
    v723 = (int8x8_t *)&v11[v722];
    v724 = (int16x8_t *)&v14[2 * v722];
    v725 = v722 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v726 = *v724++;
      *v723++ = vmovn_s16(v726);
      v725 += 8;
    }
    while (v725);
    if (v490 == a7)
      return result;
    goto LABEL_707;
  }
  if (v12 == 3 && v407)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_1217;
    }
    if (!a7)
      return result;
    if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
    {
      v496 = 0;
      goto LABEL_721;
    }
LABEL_956:
    if (a7 >= 0x20)
    {
      v496 = a7 & 0xFFFFFFFFFFFFFFE0;
      v771 = (int8x16_t *)(v11 + 16);
      v772 = (int8x16x4_t *)(v14 + 64);
      v773 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v1628 = *v772;
        v771[-1] = vqtbl4q_s8(v772[-1], (int8x16_t)xmmword_19CAECBA0);
        *v771 = vqtbl4q_s8(v1628, (int8x16_t)xmmword_19CAECBA0);
        v771 += 2;
        v772 += 2;
        v773 -= 32;
      }
      while (v773);
      if (v496 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_721:
        v497 = a7 - v496;
        v498 = &v14[4 * v496];
        v499 = &v11[v496];
        do
        {
          v500 = *(_DWORD *)v498;
          v498 += 4;
          *v499++ = v500;
          --v497;
        }
        while (v497);
        return result;
      }
    }
    else
    {
      v496 = 0;
    }
    v774 = v496;
    v496 = a7 & 0xFFFFFFFFFFFFFFF8;
    v775 = &v11[v774];
    v776 = (int8x16x2_t *)&v14[4 * v774];
    v777 = v774 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v1624 = *v776++;
      *(_QWORD *)v775 = vqtbl2q_s8(v1624, (int8x16_t)xmmword_19CAECBB0).u64[0];
      v775 += 8;
      v777 += 8;
    }
    while (v777);
    if (v496 == a7)
      return result;
    goto LABEL_721;
  }
  if (v12 != 4)
    v407 = 0;
  if (v407)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_1244;
    }
    if (!a7)
      return result;
    if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
    {
      v537 = 0;
      goto LABEL_768;
    }
    if (a7 >= 0x20)
    {
      v537 = a7 & 0xFFFFFFFFFFFFFFE0;
      v808 = v11 + 16;
      v809 = (int8x16x4_t *)(v14 + 128);
      v810 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        *(_QWORD *)&v811 = vqtbl4q_s8(v809[-2], (int8x16_t)xmmword_19CAECB80).u64[0];
        *(_QWORD *)&v812 = vqtbl4q_s8(*v809, (int8x16_t)xmmword_19CAECB80).u64[0];
        *((_QWORD *)&v811 + 1) = vqtbl4q_s8(v809[-1], (int8x16_t)xmmword_19CAECB80).u64[0];
        *((_QWORD *)&v812 + 1) = vqtbl4q_s8(v809[1], (int8x16_t)xmmword_19CAECB80).u64[0];
        *(v808 - 1) = v811;
        *v808 = v812;
        v808 += 2;
        v809 += 4;
        v810 -= 32;
      }
      while (v810);
      if (v537 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_768:
        v538 = a7 - v537;
        v539 = &v14[8 * v537];
        v540 = &v11[v537];
        do
        {
          v541 = *(_QWORD *)v539;
          v539 += 8;
          *v540++ = v541;
          --v538;
        }
        while (v538);
        return result;
      }
    }
    else
    {
      v537 = 0;
    }
    v813 = v537;
    v537 = a7 & 0xFFFFFFFFFFFFFFF8;
    v814 = &v11[v813];
    v815 = (int8x16x4_t *)&v14[8 * v813];
    v816 = v813 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      *(_QWORD *)v814 = vqtbl4q_s8(*v815, (int8x16_t)xmmword_19CAECB90).u64[0];
      v814 += 8;
      ++v815;
      v816 += 8;
    }
    while (v816);
    if (v537 == a7)
      return result;
    goto LABEL_768;
  }
  v364 = v10 == 6;
  if (v12 == 1 && v10 == 6)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_1271;
    }
    if (!a7)
      return result;
    if (a7 < 8 || &v14[a7] > v11 && &v11[2 * a7] > v14)
    {
      v575 = 0;
      goto LABEL_833;
    }
    if (a7 < 0x20)
    {
      v575 = 0;
      goto LABEL_1091;
    }
LABEL_1087:
    v575 = a7 & 0xFFFFFFFFFFFFFFE0;
    v864 = (uint16x8_t *)(v11 + 32);
    v865 = (uint8x8_t *)(v14 + 16);
    v866 = a7 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v867 = *(uint8x16_t *)v865[-2].i8;
      v868 = vmovl_u8(*v865);
      v869 = vmovl_high_u8(*(uint8x16_t *)v865->i8);
      v864[-2] = vmovl_u8(*(uint8x8_t *)v867.i8);
      v864[-1] = vmovl_high_u8(v867);
      *v864 = v868;
      v864[1] = v869;
      v864 += 4;
      v865 += 4;
      v866 -= 32;
    }
    while (v866);
    if (v575 == a7)
      return result;
    if ((a7 & 0x18) == 0)
    {
LABEL_833:
      v576 = a7 - v575;
      v577 = &v14[v575];
      v578 = &v11[2 * v575];
      do
      {
        v579 = *v577++;
        *(_WORD *)v578 = v579;
        v578 += 2;
        --v576;
      }
      while (v576);
      return result;
    }
LABEL_1091:
    v870 = v575;
    v575 = a7 & 0xFFFFFFFFFFFFFFF8;
    v871 = (uint16x8_t *)&v11[2 * v870];
    v872 = (uint8x8_t *)&v14[v870];
    v873 = v870 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v874 = *v872++;
      *v871++ = vmovl_u8(v874);
      v873 += 8;
    }
    while (v873);
    if (v575 == a7)
      return result;
    goto LABEL_833;
  }
LABEL_555:
  if (v12 == 2 && v364)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (a7)
      {
        v365 = 0;
        if (a7 < 0x10)
          goto LABEL_565;
        if ((unint64_t)(v11 - v14) < 0x20)
          goto LABEL_565;
        v365 = a7 & 0xFFFFFFFFFFFFFFF0;
        v366 = v11 + 16;
        v367 = (__int128 *)(v14 + 16);
        v368 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v369 = *v367;
          *(v366 - 1) = *(v367 - 1);
          *v366 = v369;
          v366 += 2;
          v367 += 2;
          v368 -= 16;
        }
        while (v368);
        if (v365 != a7)
        {
LABEL_565:
          v370 = a7 - v365;
          v371 = 2 * v365;
          v372 = &v14[2 * v365];
          v373 = &v11[v371];
          do
          {
            v374 = *(_WORD *)v372;
            v372 += 2;
            *(_WORD *)v373 = v374;
            v373 += 2;
            --v370;
          }
          while (v370);
        }
      }
      return result;
    }
    goto LABEL_1086;
  }
  if (v12 == 3 && v364)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 >= 0x10 && (&v14[4 * a7] <= v11 || &v11[2 * a7] <= v14))
      {
        v376 = a7 & 0xFFFFFFFFFFFFFFF0;
        v473 = (int16x8_t *)(v11 + 16);
        v474 = (int16x8_t *)(v14 + 32);
        v475 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v477 = v474[-2];
          v476 = v474[-1];
          v479 = *v474;
          v478 = v474[1];
          v474 += 4;
          v473[-1] = vuzp1q_s16(v477, v476);
          *v473 = vuzp1q_s16(v479, v478);
          v473 += 2;
          v475 -= 16;
        }
        while (v475);
        if (v376 == a7)
          return result;
      }
      else
      {
        v376 = 0;
      }
      v377 = a7 - v376;
      v378 = &v14[4 * v376];
      v379 = &v11[2 * v376];
      do
      {
        v380 = *(_DWORD *)v378;
        v378 += 4;
        *(_WORD *)v379 = v380;
        v379 += 2;
        --v377;
      }
      while (v377);
      return result;
    }
    goto LABEL_1114;
  }
  if (v12 != 4)
    v364 = 0;
  if (v364)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 >= 0x10 && (&v14[8 * a7] <= v11 || &v11[2 * a7] <= v14))
      {
        v381 = a7 & 0xFFFFFFFFFFFFFFF0;
        v533 = (int16x8_t *)(v11 + 16);
        v534 = (int32x4_t *)(v14 + 64);
        v535 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v536 = vuzp1q_s16((int16x8_t)vuzp1q_s32(*v534, v534[1]), (int16x8_t)vuzp1q_s32(v534[2], v534[3]));
          v533[-1] = vuzp1q_s16((int16x8_t)vuzp1q_s32(v534[-4], v534[-3]), (int16x8_t)vuzp1q_s32(v534[-2], v534[-1]));
          *v533 = v536;
          v533 += 2;
          v534 += 8;
          v535 -= 16;
        }
        while (v535);
        if (v381 == a7)
          return result;
      }
      else
      {
        v381 = 0;
      }
      v382 = a7 - v381;
      v383 = &v14[8 * v381];
      v384 = &v11[2 * v381];
      do
      {
        v385 = *(_QWORD *)v383;
        v383 += 8;
        *(_WORD *)v384 = v385;
        v384 += 2;
        --v382;
      }
      while (v382);
      return result;
    }
    goto LABEL_1130;
  }
  if (v12 != 1 || v10 != 7)
  {
    if (v12 == 2 && v10 == 7)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v391 = a7 & 0xFFFFFFFFFFFFFFF0;
          v615 = (uint32x4_t *)(v11 + 32);
          v616 = (uint16x4_t *)(v14 + 16);
          v617 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v618 = *(uint16x8_t *)v616[-2].i8;
            v619 = vmovl_u16(*v616);
            v620 = vmovl_high_u16(*(uint16x8_t *)v616->i8);
            v615[-2] = vmovl_u16(*(uint16x4_t *)v618.i8);
            v615[-1] = vmovl_high_u16(v618);
            *v615 = v619;
            v615[1] = v620;
            v615 += 4;
            v616 += 4;
            v617 -= 16;
          }
          while (v617);
          if (v391 == a7)
            return result;
        }
        else
        {
          v391 = 0;
        }
        v392 = a7 - v391;
        v393 = &v14[2 * v391];
        v394 = &v11[4 * v391];
        do
        {
          v395 = *(unsigned __int16 *)v393;
          v393 += 2;
          *(_DWORD *)v394 = v395;
          v394 += 4;
          --v392;
        }
        while (v392);
        return result;
      }
      goto LABEL_1175;
    }
    if (v12 == 3 && v10 == 7)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (a7)
        {
          v397 = 0;
          if (a7 < 8)
            goto LABEL_637;
          if ((unint64_t)(v11 - v14) < 0x20)
            goto LABEL_637;
          v397 = a7 & 0xFFFFFFFFFFFFFFF8;
          v398 = v11 + 16;
          v399 = (__int128 *)(v14 + 16);
          v400 = a7 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v401 = *v399;
            *(v398 - 1) = *(v399 - 1);
            *v398 = v401;
            v398 += 2;
            v399 += 2;
            v400 -= 8;
          }
          while (v400);
          if (v397 != a7)
          {
LABEL_637:
            v402 = a7 - v397;
            v403 = 4 * v397;
            v404 = &v14[4 * v397];
            v405 = &v11[v403];
            do
            {
              v406 = *(_DWORD *)v404;
              v404 += 4;
              *(_DWORD *)v405 = v406;
              v405 += 4;
              --v402;
            }
            while (v402);
          }
        }
        return result;
      }
      goto LABEL_1203;
    }
    if (v12 == 4 && v10 == 7)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0xC && (&v14[8 * a7] <= v11 || &v11[4 * a7] <= v14))
        {
          v501 = a7 & 0xFFFFFFFFFFFFFFF8;
          v764 = (int32x4_t *)(v11 + 16);
          v765 = (int32x4_t *)(v14 + 32);
          v766 = a7 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v768 = v765[-2];
            v767 = v765[-1];
            v770 = *v765;
            v769 = v765[1];
            v765 += 4;
            v764[-1] = vuzp1q_s32(v768, v767);
            *v764 = vuzp1q_s32(v770, v769);
            v764 += 2;
            v766 -= 8;
          }
          while (v766);
          if (v501 == a7)
            return result;
        }
        else
        {
          v501 = 0;
        }
        v502 = a7 - v501;
        v503 = &v14[8 * v501];
        v504 = &v11[4 * v501];
        do
        {
          v505 = *(_QWORD *)v503;
          v503 += 8;
          *(_DWORD *)v504 = v505;
          v504 += 4;
          --v502;
        }
        while (v502);
        return result;
      }
      goto LABEL_1230;
    }
    if (v12 == 1 && v10 == 8)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[a7] > v11 && &v11[8 * a7] > v14)
        {
          v552 = 0;
          goto LABEL_801;
        }
        if (a7 >= 0x10)
        {
          v552 = a7 & 0xFFFFFFFFFFFFFFF0;
          v848 = a7 & 0xFFFFFFFFFFFFFFF0;
          v849 = (uint8x16_t *)v14;
          v850 = v11;
          do
          {
            v851 = *v849++;
            v852 = vmovl_u8(*(uint8x8_t *)v851.i8);
            v853 = vmovl_u16(*(uint16x4_t *)v852.i8);
            *(_QWORD *)&v854 = v853.u32[0];
            *((_QWORD *)&v854 + 1) = v853.u32[1];
            v855 = v854;
            v856 = vmovl_high_u16(v852);
            *(_QWORD *)&v854 = v856.u32[0];
            *((_QWORD *)&v854 + 1) = v856.u32[1];
            v857 = v854;
            v858 = vmovl_high_u8(v851);
            v859 = vmovl_high_u16(v858);
            *(_QWORD *)&v854 = v859.u32[0];
            *((_QWORD *)&v854 + 1) = v859.u32[1];
            v860 = v854;
            *(_QWORD *)&v854 = v859.u32[2];
            *((_QWORD *)&v854 + 1) = v859.u32[3];
            *((_OWORD *)v850 + 6) = v860;
            *((_OWORD *)v850 + 7) = v854;
            v861 = vmovl_u16(*(uint16x4_t *)v858.i8);
            *(_QWORD *)&v854 = v861.u32[0];
            *((_QWORD *)&v854 + 1) = v861.u32[1];
            v862 = v854;
            *(_QWORD *)&v854 = v856.u32[2];
            *((_QWORD *)&v854 + 1) = v856.u32[3];
            v863 = v854;
            *(_QWORD *)&v854 = v861.u32[2];
            *((_QWORD *)&v854 + 1) = v861.u32[3];
            *((_OWORD *)v850 + 4) = v862;
            *((_OWORD *)v850 + 5) = v854;
            *((_OWORD *)v850 + 2) = v857;
            *((_OWORD *)v850 + 3) = v863;
            *(_QWORD *)&v854 = v853.u32[2];
            *((_QWORD *)&v854 + 1) = v853.u32[3];
            *(_OWORD *)v850 = v855;
            *((_OWORD *)v850 + 1) = v854;
            v850 += 128;
            v848 -= 16;
          }
          while (v848);
          if (v552 == a7)
            return result;
          if ((a7 & 8) == 0)
          {
LABEL_801:
            v553 = a7 - v552;
            v554 = &v14[v552];
            v555 = &v11[8 * v552];
            do
            {
              v556 = *v554++;
              *(_QWORD *)v555 = v556;
              v555 += 8;
              --v553;
            }
            while (v553);
            return result;
          }
        }
        else
        {
          v552 = 0;
        }
        v797 = v552;
        v552 = a7 & 0xFFFFFFFFFFFFFFF8;
        v798 = &v11[8 * v797];
        v799 = (uint8x8_t *)&v14[v797];
        v800 = v797 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v801 = *v799++;
          v802 = vmovl_u8(v801);
          v803 = vmovl_u16(*(uint16x4_t *)v802.i8);
          *(_QWORD *)&v804 = v803.u32[0];
          *((_QWORD *)&v804 + 1) = v803.u32[1];
          v805 = v804;
          v806 = vmovl_high_u16(v802);
          *(_QWORD *)&v804 = v806.u32[0];
          *((_QWORD *)&v804 + 1) = v806.u32[1];
          v807 = v804;
          *(_QWORD *)&v804 = v806.u32[2];
          *((_QWORD *)&v804 + 1) = v806.u32[3];
          *((_OWORD *)v798 + 2) = v807;
          *((_OWORD *)v798 + 3) = v804;
          *(_QWORD *)&v804 = v803.u32[2];
          *((_QWORD *)&v804 + 1) = v803.u32[3];
          *(_OWORD *)v798 = v805;
          *((_OWORD *)v798 + 1) = v804;
          v798 += 64;
          v800 += 8;
        }
        while (v800);
        if (v552 == a7)
          return result;
        goto LABEL_801;
      }
LABEL_1257:
      __break(1u);
LABEL_1258:
      if (v19 == 6 && v16 == 3)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[4 * a7] <= v14))
          {
            v964 = a7 & 0xFFFFFFFFFFFFFFF0;
            v1016 = (int32x4_t *)(v11 + 32);
            v1017 = (int16x4_t *)(v14 + 16);
            v1018 = a7 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v1019 = *(int16x8_t *)v1017[-2].i8;
              v1020 = vmovl_s16(*v1017);
              v1021 = vmovl_high_s16(*(int16x8_t *)v1017->i8);
              v1016[-2] = vmovl_s16(*(int16x4_t *)v1019.i8);
              v1016[-1] = vmovl_high_s16(v1019);
              *v1016 = v1020;
              v1016[1] = v1021;
              v1016 += 4;
              v1017 += 4;
              v1018 -= 16;
            }
            while (v1018);
            if (v964 == a7)
              return result;
          }
          else
          {
            v964 = 0;
          }
          v965 = a7 - v964;
          v966 = &v14[2 * v964];
          v967 = &v11[4 * v964];
          do
          {
            v968 = *(__int16 *)v966;
            v966 += 2;
            *(_DWORD *)v967 = v968;
            v967 += 4;
            --v965;
          }
          while (v965);
          return result;
        }
        __break(1u);
LABEL_1495:
        if (v19 == 3 && v16 == 9)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 >= 0x10 && (&v14[4 * a7] <= v11 || &v11[2 * a7] <= v14))
            {
              v1174 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1234 = (float16x8_t *)(v11 + 16);
              v1235 = (uint32x4_t *)(v14 + 32);
              v1236 = a7 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                v1238 = v1235[-2];
                v1237 = v1235[-1];
                v1240 = *v1235;
                v1239 = v1235[1];
                v1235 += 4;
                v1234[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(v1238)), vcvtq_f32_u32(v1237));
                *v1234 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(v1240)), vcvtq_f32_u32(v1239));
                v1234 += 2;
                v1236 -= 16;
              }
              while (v1236);
              if (v1174 == a7)
                return result;
            }
            else
            {
              v1174 = 0;
            }
            v1175 = a7 - v1174;
            v1176 = (unsigned int *)&v14[4 * v1174];
            v1177 = &v11[2 * v1174];
            do
            {
              v1178 = *v1176++;
              _S0 = (float)v1178;
              __asm { FCVT            H0, S0 }
              *(_WORD *)v1177 = LOWORD(_S0);
              v1177 += 2;
              --v1175;
            }
            while (v1175);
            return result;
          }
          __break(1u);
          goto LABEL_1718;
        }
        goto LABEL_1512;
      }
      goto LABEL_1280;
    }
    if (v12 == 2 && v10 == 8)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[8 * a7] <= v14))
        {
          v590 = a7 & 0xFFFFFFFFFFFFFFF0;
          v831 = v11 + 64;
          v832 = (uint16x4_t *)(v14 + 16);
          v833 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v834 = *(uint16x8_t *)v832[-2].i8;
            v835 = *(uint16x8_t *)v832->i8;
            v836 = vmovl_u16(*(uint16x4_t *)v834.i8);
            *(_QWORD *)&v837 = v836.u32[0];
            *((_QWORD *)&v837 + 1) = v836.u32[1];
            v838 = v837;
            *(_QWORD *)&v837 = v836.u32[2];
            *((_QWORD *)&v837 + 1) = v836.u32[3];
            v839 = v837;
            v840 = vmovl_high_u16(v834);
            *(_QWORD *)&v837 = v840.u32[0];
            *((_QWORD *)&v837 + 1) = v840.u32[1];
            v841 = v837;
            *(_QWORD *)&v837 = v840.u32[2];
            *((_QWORD *)&v837 + 1) = v840.u32[3];
            v842 = v837;
            v843 = vmovl_u16(*v832);
            *(_QWORD *)&v837 = v843.u32[0];
            *((_QWORD *)&v837 + 1) = v843.u32[1];
            v844 = v837;
            *(_QWORD *)&v837 = v843.u32[2];
            *((_QWORD *)&v837 + 1) = v843.u32[3];
            v845 = v837;
            *(v831 - 2) = v841;
            *(v831 - 1) = v842;
            v846 = vmovl_high_u16(v835);
            *(_QWORD *)&v837 = v846.u32[0];
            *((_QWORD *)&v837 + 1) = v846.u32[1];
            v847 = v837;
            *(v831 - 4) = v838;
            *(v831 - 3) = v839;
            *(_QWORD *)&v837 = v846.u32[2];
            *((_QWORD *)&v837 + 1) = v846.u32[3];
            v831[2] = v847;
            v831[3] = v837;
            *v831 = v844;
            v831[1] = v845;
            v831 += 8;
            v832 += 4;
            v833 -= 16;
          }
          while (v833);
          if (v590 == a7)
            return result;
        }
        else
        {
          v590 = 0;
        }
        v591 = a7 - v590;
        v592 = &v14[2 * v590];
        v593 = &v11[8 * v590];
        do
        {
          v594 = *(unsigned __int16 *)v592;
          v592 += 2;
          *(_QWORD *)v593 = v594;
          v593 += 8;
          --v591;
        }
        while (v591);
        return result;
      }
      __break(1u);
LABEL_1280:
      if (v19 == 7 && v16 == 3)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (a7)
          {
            v980 = 0;
            if (a7 < 8)
              goto LABEL_1290;
            if ((unint64_t)(v11 - v14) < 0x20)
              goto LABEL_1290;
            v980 = a7 & 0xFFFFFFFFFFFFFFF8;
            v981 = v11 + 16;
            v982 = (__int128 *)(v14 + 16);
            v983 = a7 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v984 = *v982;
              *(v981 - 1) = *(v982 - 1);
              *v981 = v984;
              v981 += 2;
              v982 += 2;
              v983 -= 8;
            }
            while (v983);
            if (v980 != a7)
            {
LABEL_1290:
              v985 = a7 - v980;
              v986 = 4 * v980;
              v987 = &v14[4 * v980];
              v988 = &v11[v986];
              do
              {
                v989 = *(_DWORD *)v987;
                v987 += 4;
                *(_DWORD *)v988 = v989;
                v988 += 4;
                --v985;
              }
              while (v985);
            }
          }
          return result;
        }
        __break(1u);
LABEL_1512:
        if (v19 == 4 && v16 == 9)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 >= 0x10 && (&v14[8 * a7] <= v11 || &v11[2 * a7] <= v14))
            {
              v1187 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1246 = (float16x8_t *)(v11 + 16);
              v1247 = (uint64x2_t *)(v14 + 64);
              v1248 = a7 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                v1249 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64(*v1247)), vcvtq_f64_u64(v1247[1]))), vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64(v1247[2])), vcvtq_f64_u64(v1247[3])));
                v1246[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64(v1247[-4])), vcvtq_f64_u64(v1247[-3]))), vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64(v1247[-2])), vcvtq_f64_u64(v1247[-1])));
                *v1246 = v1249;
                v1246 += 2;
                v1247 += 8;
                v1248 -= 16;
              }
              while (v1248);
              if (v1187 == a7)
                return result;
            }
            else
            {
              v1187 = 0;
            }
            v1188 = a7 - v1187;
            v1189 = (unint64_t *)&v14[8 * v1187];
            v1190 = &v11[2 * v1187];
            do
            {
              v1191 = *v1189++;
              _S0 = (float)v1191;
              __asm { FCVT            H0, S0 }
              *(_WORD *)v1190 = LOWORD(_S0);
              v1190 += 2;
              --v1188;
            }
            while (v1188);
            return result;
          }
          __break(1u);
          goto LABEL_1732;
        }
LABEL_1529:
        if (v19 == 5 && v16 == 10)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 < 8 || &v14[a7] > v11 && &v11[4 * a7] > v14)
            {
              v1197 = 0;
              goto LABEL_1538;
            }
            if (a7 >= 0x10)
            {
              v1197 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1271 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1272 = (int8x16_t *)v14;
              v1273 = (float32x4_t *)v11;
              do
              {
                v1274 = *v1272++;
                v1275 = (int8x8_t)vextq_s8(v1274, v1274, 8uLL).u64[0];
                *v1273 = vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16((int16x4_t)vzip1_s8(*(int8x8_t *)v1274.i8, *(int8x8_t *)v1274.i8), 8uLL), 8uLL)));
                v1273[1] = vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16((int16x4_t)vzip2_s8(*(int8x8_t *)v1274.i8, *(int8x8_t *)v1274.i8), 8uLL), 8uLL)));
                v1273[2] = vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16((int16x4_t)vzip1_s8(v1275, *(int8x8_t *)v1274.i8), 8uLL), 8uLL)));
                v1273[3] = vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16((int16x4_t)vzip2_s8(v1275, *(int8x8_t *)v1274.i8), 8uLL), 8uLL)));
                v1273 += 4;
                v1271 -= 16;
              }
              while (v1271);
              if (v1197 == a7)
                return result;
              if ((a7 & 8) == 0)
              {
LABEL_1538:
                v1198 = a7 - v1197;
                v1199 = &v14[v1197];
                v1200 = (float *)&v11[4 * v1197];
                do
                {
                  v1201 = (char)*v1199++;
                  *v1200++ = (float)v1201;
                  --v1198;
                }
                while (v1198);
                return result;
              }
            }
            else
            {
              v1197 = 0;
            }
            v1255 = v1197;
            v1197 = a7 & 0xFFFFFFFFFFFFFFF8;
            v1256 = (float32x4_t *)&v11[4 * v1255];
            v1257 = (int8x8_t *)&v14[v1255];
            v1258 = v1255 - (a7 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v1259 = *v1257++;
              *v1256 = vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16((int16x4_t)vzip1_s8(v1259, v1259), 8uLL), 8uLL)));
              v1256[1] = vcvtq_f32_s32(vmovl_s16(vshr_n_s16(vshl_n_s16((int16x4_t)vzip2_s8(v1259, v1259), 8uLL), 8uLL)));
              v1256 += 2;
              v1258 += 8;
            }
            while (v1258);
            if (v1197 == a7)
              return result;
            goto LABEL_1538;
          }
          __break(1u);
LABEL_1750:
          __break(1u);
LABEL_1751:
          if (v19 == 2 && v16 == 11)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else
            {
              if (!a7)
                return result;
              if (a7 < 8 || &v14[2 * a7] > v11 && &v11[8 * a7] > v14)
              {
                v1339 = 0;
                goto LABEL_1806;
              }
            }
            v1339 = a7 & 0xFFFFFFFFFFFFFFF8;
            v1411 = a7 & 0xFFFFFFFFFFFFFFF8;
            v1412 = (uint16x8_t *)v14;
            v1413 = (float64x2_t *)v11;
            do
            {
              v1414 = *v1412++;
              v1415 = vmovl_u16(*(uint16x4_t *)v1414.i8);
              v1416.i64[0] = v1415.u32[0];
              v1416.i64[1] = v1415.u32[1];
              v1417 = vcvtq_f64_u64(v1416);
              v1416.i64[0] = v1415.u32[2];
              v1416.i64[1] = v1415.u32[3];
              v1418 = v1416;
              v1419 = vmovl_high_u16(v1414);
              v1416.i64[0] = v1419.u32[0];
              v1416.i64[1] = v1419.u32[1];
              v1420 = vcvtq_f64_u64(v1416);
              v1416.i64[0] = v1419.u32[2];
              v1416.i64[1] = v1419.u32[3];
              v1413[2] = v1420;
              v1413[3] = vcvtq_f64_u64(v1416);
              *v1413 = v1417;
              v1413[1] = vcvtq_f64_u64(v1418);
              v1413 += 4;
              v1411 -= 8;
            }
            while (v1411);
            if (v1339 == a7)
              return result;
LABEL_1806:
            v1421 = a7 - v1339;
            v1422 = &v14[2 * v1339];
            v1423 = (double *)&v11[8 * v1339];
            do
            {
              v1424 = *(unsigned __int16 *)v1422;
              v1422 += 2;
              *v1423++ = (double)v1424;
              --v1421;
            }
            while (v1421);
            return result;
          }
          if (v19 == 3 && v16 == 11)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else
            {
              if (!a7)
                return result;
              if (a7 < 8 || &v14[4 * a7] > v11 && &v11[8 * a7] > v14)
              {
                v1410 = 0;
                goto LABEL_1836;
              }
            }
            v1410 = a7 & 0xFFFFFFFFFFFFFFF8;
            v1483 = (float64x2_t *)(v11 + 32);
            v1484 = v14 + 16;
            v1485 = a7 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v1486 = *((_OWORD *)v1484 - 1);
              v1487.i64[0] = v1486;
              v1487.i64[1] = DWORD1(v1486);
              v1488 = vcvtq_f64_u64(v1487);
              v1487.i64[0] = DWORD2(v1486);
              v1487.i64[1] = HIDWORD(v1486);
              v1489 = vcvtq_f64_u64(v1487);
              v1487.i64[0] = *(_OWORD *)v1484;
              v1487.i64[1] = HIDWORD(*(_QWORD *)v1484);
              v1490 = vcvtq_f64_u64(v1487);
              v1487.i64[0] = *((_QWORD *)v1484 + 1);
              v1487.i64[1] = HIDWORD(*(_OWORD *)v1484);
              v1483[-2] = v1488;
              v1483[-1] = v1489;
              *v1483 = v1490;
              v1483[1] = vcvtq_f64_u64(v1487);
              v1483 += 4;
              v1484 += 32;
              v1485 -= 8;
            }
            while (v1485);
            if (v1410 == a7)
              return result;
LABEL_1836:
            v1491 = a7 - v1410;
            v1492 = (unsigned int *)&v14[4 * v1410];
            v1493 = (double *)&v11[8 * v1410];
            do
            {
              v1494 = *v1492++;
              *v1493++ = (double)v1494;
              --v1491;
            }
            while (v1491);
            return result;
          }
          if (v19 == 4 && v16 == 11)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) == 0)
            {
              if (a7)
              {
                v1473 = 0;
                if (a7 < 4)
                  goto LABEL_1829;
                if ((unint64_t)(v11 - v14) < 0x20)
                  goto LABEL_1829;
                v1473 = a7 & 0xFFFFFFFFFFFFFFFCLL;
                v1474 = (float64x2_t *)(v11 + 16);
                v1475 = (uint64x2_t *)(v14 + 16);
                v1476 = a7 & 0xFFFFFFFFFFFFFFFCLL;
                do
                {
                  v1477 = vcvtq_f64_u64(*v1475);
                  v1474[-1] = vcvtq_f64_u64(v1475[-1]);
                  *v1474 = v1477;
                  v1474 += 2;
                  v1475 += 2;
                  v1476 -= 4;
                }
                while (v1476);
                if (v1473 != a7)
                {
LABEL_1829:
                  v1478 = a7 - v1473;
                  v1479 = 8 * v1473;
                  v1480 = (unint64_t *)&v14[8 * v1473];
                  v1481 = (double *)&v11[v1479];
                  do
                  {
                    v1482 = *v1480++;
                    *v1481++ = (double)v1482;
                    --v1478;
                  }
                  while (v1478);
                }
              }
              return result;
            }
            __break(1u);
            goto LABEL_1847;
          }
          if (v19 != 9)
          {
LABEL_1847:
            if (v19 == 10)
            {
              switch(v10)
              {
                case 1u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                    {
                      __break(1u);
                      goto LABEL_1961;
                    }
                    for (; a7; --a7)
                    {
                      v1496 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1621[0]) = v1496;
                      result = sub_19C59B724((float *)v1621, a8, &v1622);
                      *v11++ = LOBYTE(v1622);
                    }
                  }
                  return result;
                case 2u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2032;
                    for (; a7; --a7)
                    {
                      v1507 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1621[0]) = v1507;
                      result = sub_19C59B8E4((float *)v1621, a8, &v1622);
                      *(_WORD *)v11 = LOWORD(v1622);
                      v11 += 2;
                    }
                  }
                  return result;
                case 3u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2033;
                    for (; a7; --a7)
                    {
                      v1508 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1622) = v1508;
                      result = sub_19C59BAA4((float *)&v1622, a8, v1621);
                      *(_DWORD *)v11 = LODWORD(v1621[0]);
                      v11 += 4;
                    }
                  }
                  return result;
                case 4u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2034;
                    for (; a7; --a7)
                    {
                      v1509 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1622) = v1509;
                      result = sub_19C59BC64((float *)&v1622, a8, v1621);
                      *(double *)v11 = v1621[0];
                      v11 += 8;
                    }
                  }
                  return result;
                case 5u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2035;
                    for (; a7; --a7)
                    {
                      v1510 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1621[0]) = v1510;
                      result = sub_19C59B018((float *)v1621, a8, &v1622);
                      *v11++ = LOBYTE(v1622);
                    }
                  }
                  return result;
                case 6u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2036;
                    for (; a7; --a7)
                    {
                      v1511 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1621[0]) = v1511;
                      result = sub_19C59B1D8((float *)v1621, a8, &v1622);
                      *(_WORD *)v11 = LOWORD(v1622);
                      v11 += 2;
                    }
                  }
                  return result;
                case 7u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2037;
                    for (; a7; --a7)
                    {
                      v1512 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1622) = v1512;
                      result = sub_19C59B39C((float *)&v1622, a8, v1621);
                      *(_DWORD *)v11 = LODWORD(v1621[0]);
                      v11 += 4;
                    }
                  }
                  return result;
                case 8u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2038;
                    for (; a7; --a7)
                    {
                      v1513 = *(_DWORD *)v14;
                      v14 += 4;
                      LODWORD(v1622) = v1513;
                      result = sub_19C59B560((float *)&v1622, a8, v1621);
                      *(double *)v11 = v1621[0];
                      v11 += 8;
                    }
                  }
                  return result;
                case 9u:
                  if (v11)
                  {
                    if ((a7 & 0x8000000000000000) != 0)
                      goto LABEL_2039;
                    if (a7)
                    {
                      if (a7 < 0x10 || &v14[4 * a7] > v11 && &v11[2 * a7] > v14)
                      {
                        v1514 = 0;
                        goto LABEL_2043;
                      }
                      goto LABEL_2040;
                    }
                  }
                  return result;
                case 0xBu:
                  if (!v11)
                    return result;
                  if ((a7 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else
                  {
                    if (!a7)
                      return result;
                    if (a7 < 8 || &v14[4 * a7] > v11 && &v11[8 * a7] > v14)
                    {
                      v1515 = 0;
                      goto LABEL_2050;
                    }
                  }
                  v1515 = a7 & 0xFFFFFFFFFFFFFFF8;
                  v1580 = (float64x2_t *)(v11 + 32);
                  v1581 = (float32x2_t *)(v14 + 16);
                  v1582 = a7 & 0xFFFFFFFFFFFFFFF8;
                  do
                  {
                    v1583 = *(float32x4_t *)v1581[-2].f32;
                    v1584 = vcvtq_f64_f32(*v1581);
                    v1585 = vcvt_hight_f64_f32(*(float32x4_t *)v1581->f32);
                    v1580[-2] = vcvtq_f64_f32(*(float32x2_t *)v1583.f32);
                    v1580[-1] = vcvt_hight_f64_f32(v1583);
                    *v1580 = v1584;
                    v1580[1] = v1585;
                    v1580 += 4;
                    v1581 += 4;
                    v1582 -= 8;
                  }
                  while (v1582);
                  if (v1515 == a7)
                    return result;
LABEL_2050:
                  v1586 = a7 - v1515;
                  v1587 = (float *)&v14[4 * v1515];
                  v1588 = (double *)&v11[8 * v1515];
                  do
                  {
                    v1589 = *v1587++;
                    *v1588++ = v1589;
                    --v1586;
                  }
                  while (v1586);
                  return result;
                default:
                  return result;
              }
            }
LABEL_1904:
            if (v19 != 11)
              return result;
            switch(v10)
            {
              case 1u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
LABEL_2032:
                    __break(1u);
LABEL_2033:
                    __break(1u);
LABEL_2034:
                    __break(1u);
LABEL_2035:
                    __break(1u);
LABEL_2036:
                    __break(1u);
LABEL_2037:
                    __break(1u);
LABEL_2038:
                    __break(1u);
LABEL_2039:
                    __break(1u);
LABEL_2040:
                    v1514 = a7 & 0xFFFFFFFFFFFFFFF0;
                    v1568 = (float16x8_t *)(v11 + 16);
                    v1569 = (float32x4_t *)(v14 + 32);
                    v1570 = a7 & 0xFFFFFFFFFFFFFFF0;
                    do
                    {
                      v1572 = v1569[-2];
                      v1571 = v1569[-1];
                      v1574 = *v1569;
                      v1573 = v1569[1];
                      v1569 += 4;
                      v1568[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(v1572), v1571);
                      *v1568 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(v1574), v1573);
                      v1568 += 2;
                      v1570 -= 16;
                    }
                    while (v1570);
                    if (v1514 != a7)
                    {
LABEL_2043:
                      v1575 = a7 - v1514;
                      v1576 = &v14[4 * v1514];
                      v1577 = &v11[2 * v1514];
                      do
                      {
                        v1578 = *(_DWORD *)v1576;
                        v1576 += 4;
                        _S0 = v1578;
                        __asm { FCVT            H0, S0 }
                        *(_WORD *)v1577 = _S0;
                        v1577 += 2;
                        --v1575;
                      }
                      while (v1575);
                    }
                  }
                  else
                  {
                    for (; a7; --a7)
                    {
                      v1506 = *(double *)v14;
                      v14 += 8;
                      v1621[0] = v1506;
                      result = sub_19C59C544(v1621, a8, &v1622);
                      *v11++ = LOBYTE(v1622);
                    }
                  }
                }
                return result;
              case 2u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                    goto LABEL_2054;
                  }
                  for (; a7; --a7)
                  {
                    v1559 = *(double *)v14;
                    v14 += 8;
                    v1621[0] = v1559;
                    result = sub_19C59C704(v1621, a8, &v1622);
                    *(_WORD *)v11 = LOWORD(v1622);
                    v11 += 2;
                  }
                }
                return result;
              case 3u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
LABEL_2054:
                    __break(1u);
                    goto LABEL_2055;
                  }
                  for (; a7; --a7)
                  {
                    v1560 = *(double *)v14;
                    v14 += 8;
                    v1621[0] = v1560;
                    result = sub_19C59C8C4(v1621, a8, &v1622);
                    *(_DWORD *)v11 = LODWORD(v1622);
                    v11 += 4;
                  }
                }
                return result;
              case 4u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
LABEL_2055:
                    __break(1u);
                    goto LABEL_2056;
                  }
                  for (; a7; --a7)
                  {
                    v1561 = *(double *)v14;
                    v14 += 8;
                    v1622 = v1561;
                    result = sub_19C59CA84(&v1622, a8, v1621);
                    *(double *)v11 = v1621[0];
                    v11 += 8;
                  }
                }
                return result;
              case 5u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
LABEL_2056:
                    __break(1u);
                    goto LABEL_2057;
                  }
                  for (; a7; --a7)
                  {
                    v1562 = *(double *)v14;
                    v14 += 8;
                    v1621[0] = v1562;
                    result = sub_19C59BE24(v1621, a8, &v1622);
                    *v11++ = LOBYTE(v1622);
                  }
                }
                return result;
              case 6u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
LABEL_2057:
                    __break(1u);
                    goto LABEL_2058;
                  }
                  for (; a7; --a7)
                  {
                    v1563 = *(double *)v14;
                    v14 += 8;
                    v1621[0] = v1563;
                    result = sub_19C59BFEC(v1621, a8, &v1622);
                    *(_WORD *)v11 = LOWORD(v1622);
                    v11 += 2;
                  }
                }
                return result;
              case 7u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
LABEL_2058:
                    __break(1u);
                    goto LABEL_2059;
                  }
                  for (; a7; --a7)
                  {
                    v1564 = *(double *)v14;
                    v14 += 8;
                    v1621[0] = v1564;
                    result = sub_19C59C1B4(v1621, a8, &v1622);
                    *(_DWORD *)v11 = LODWORD(v1622);
                    v11 += 4;
                  }
                }
                return result;
              case 8u:
                if (v11)
                {
                  if ((a7 & 0x8000000000000000) != 0)
                  {
LABEL_2059:
                    __break(1u);
                    goto LABEL_2060;
                  }
                  for (; a7; --a7)
                  {
                    v1565 = *(double *)v14;
                    v14 += 8;
                    v1622 = v1565;
                    result = sub_19C59C37C(&v1622, a8, v1621);
                    *(double *)v11 = v1621[0];
                    v11 += 8;
                  }
                }
                return result;
              case 9u:
                if (!v11)
                  return result;
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_2060:
                  __break(1u);
                }
                else
                {
                  if (!a7)
                    return result;
                  if (a7 < 0x10 || &v14[8 * a7] > v11 && &v11[2 * a7] > v14)
                  {
                    v1566 = 0;
                    goto LABEL_2064;
                  }
                }
                v1566 = a7 & 0xFFFFFFFFFFFFFFF0;
                v1590 = v11 + 16;
                v1591 = (__int128 *)(v14 + 64);
                v1592 = a7 & 0xFFFFFFFFFFFFFFF0;
                do
                {
                  _Q3 = *(v1591 - 2);
                  _Q2 = *(v1591 - 1);
                  _Q1 = *(v1591 - 4);
                  _Q4 = *(v1591 - 3);
                  _Q5 = v1591[2];
                  _Q0 = v1591[3];
                  _Q7 = *v1591;
                  _Q6 = v1591[1];
                  v1591 += 8;
                  _D16 = *((_QWORD *)&_Q1 + 1);
                  __asm
                  {
                    FCVT            H1, D1
                    FCVT            H17, D4
                    FCVT            H16, D16
                  }
                  *(_QWORD *)&_Q4 = *((_QWORD *)&_Q4 + 1);
                  __asm { FCVT            H4, D4 }
                  _D18 = *((_QWORD *)&_Q7 + 1);
                  __asm { FCVT            H18, D18 }
                  WORD1(_Q1) = _D16;
                  __asm { FCVT            H7, D7 }
                  WORD1(_Q7) = _D18;
                  __asm { FCVT            H16, D6 }
                  WORD2(_Q1) = _H17;
                  WORD2(_Q7) = _D16;
                  __asm { FCVT            H16, D3 }
                  *(_QWORD *)&_Q3 = *((_QWORD *)&_Q3 + 1);
                  WORD3(_Q1) = _Q4;
                  __asm
                  {
                    FCVT            H3, D3
                    FCVT            H4, D2
                  }
                  *(_QWORD *)&_Q2 = *((_QWORD *)&_Q2 + 1);
                  __asm { FCVT            H2, D2 }
                  WORD4(_Q1) = _D16;
                  *(_QWORD *)&_Q6 = *((_QWORD *)&_Q6 + 1);
                  __asm { FCVT            H6, D6 }
                  WORD3(_Q7) = _Q6;
                  WORD5(_Q1) = _Q3;
                  __asm { FCVT            H3, D5 }
                  WORD4(_Q7) = _Q3;
                  *(_QWORD *)&_Q3 = *((_QWORD *)&_Q5 + 1);
                  WORD6(_Q1) = _Q4;
                  __asm { FCVT            H3, D3 }
                  WORD5(_Q7) = _Q3;
                  __asm { FCVT            H3, D0 }
                  HIWORD(_Q1) = _Q2;
                  WORD6(_Q7) = _Q3;
                  *(_QWORD *)&_Q0 = *((_QWORD *)&_Q0 + 1);
                  __asm { FCVT            H0, D0 }
                  HIWORD(_Q7) = _Q0;
                  *(v1590 - 1) = _Q1;
                  *v1590 = _Q7;
                  v1590 += 2;
                  v1592 -= 16;
                }
                while (v1592);
                if (v1566 == a7)
                  return result;
LABEL_2064:
                v1604 = a7 - v1566;
                v1605 = &v14[8 * v1566];
                v1606 = &v11[2 * v1566];
                do
                {
                  v1607 = *(_QWORD *)v1605;
                  v1605 += 8;
                  _D0 = v1607;
                  __asm { FCVT            H0, D0 }
                  *(_WORD *)v1606 = _D0;
                  v1606 += 2;
                  --v1604;
                }
                while (v1604);
                return result;
              case 0xAu:
                if (!v11)
                  return result;
                if ((a7 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else
                {
                  if (!a7)
                    return result;
                  if (a7 < 8 || &v14[8 * a7] > v11 && &v11[4 * a7] > v14)
                  {
                    v1567 = 0;
                    goto LABEL_2071;
                  }
                }
                v1567 = a7 & 0xFFFFFFFFFFFFFFF8;
                v1609 = (float32x4_t *)(v11 + 16);
                v1610 = (float64x2_t *)(v14 + 32);
                v1611 = a7 & 0xFFFFFFFFFFFFFFF8;
                do
                {
                  v1613 = v1610[-2];
                  v1612 = v1610[-1];
                  v1615 = *v1610;
                  v1614 = v1610[1];
                  v1610 += 4;
                  v1609[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v1613), v1612);
                  *v1609 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v1615), v1614);
                  v1609 += 2;
                  v1611 -= 8;
                }
                while (v1611);
                if (v1567 == a7)
                  return result;
LABEL_2071:
                v1616 = a7 - v1567;
                v1617 = (double *)&v14[8 * v1567];
                v1618 = (float *)&v11[4 * v1567];
                do
                {
                  v1619 = *v1617++;
                  v1620 = v1619;
                  *v1618++ = v1620;
                  --v1616;
                }
                while (v1616);
                return result;
              default:
                return result;
            }
          }
          v19 = v10 - 1;
          switch(v10)
          {
            case 1u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                  goto LABEL_1904;
                }
                for (; a7; --a7)
                {
                  v1495 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1621[0]) = v1495;
                  result = sub_19C59A914((__int16 *)v1621, a8, &v1622);
                  *v11++ = LOBYTE(v1622);
                }
              }
              return result;
            case 2u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1961:
                  __break(1u);
                  goto LABEL_1962;
                }
                for (; a7; --a7)
                {
                  v1497 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1622) = v1497;
                  result = sub_19C59AAE4((__int16 *)&v1622, a8, v1621);
                  *(_WORD *)v11 = LOWORD(v1621[0]);
                  v11 += 2;
                }
              }
              return result;
            case 3u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1962:
                  __break(1u);
                  goto LABEL_1963;
                }
                for (; a7; --a7)
                {
                  v1498 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1622) = v1498;
                  result = sub_19C59ACA0((__int16 *)&v1622, a8, v1621);
                  *(_DWORD *)v11 = LODWORD(v1621[0]);
                  v11 += 4;
                }
              }
              return result;
            case 4u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1963:
                  __break(1u);
                  goto LABEL_1964;
                }
                for (; a7; --a7)
                {
                  v1499 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1622) = v1499;
                  result = sub_19C59AE5C((__int16 *)&v1622, a8, v1621);
                  *(double *)v11 = v1621[0];
                  v11 += 8;
                }
              }
              return result;
            case 5u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1964:
                  __break(1u);
                  goto LABEL_1965;
                }
                for (; a7; --a7)
                {
                  v1500 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1621[0]) = v1500;
                  result = sub_19C59A218((__int16 *)v1621, a8, &v1622);
                  *v11++ = LOBYTE(v1622);
                }
              }
              return result;
            case 6u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1965:
                  __break(1u);
                  goto LABEL_1966;
                }
                for (; a7; --a7)
                {
                  v1501 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1622) = v1501;
                  result = sub_19C59A3E8((__int16 *)&v1622, a8, v1621);
                  *(_WORD *)v11 = LOWORD(v1621[0]);
                  v11 += 2;
                }
              }
              return result;
            case 7u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1966:
                  __break(1u);
                  goto LABEL_1967;
                }
                for (; a7; --a7)
                {
                  v1502 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1622) = v1502;
                  result = sub_19C59A5BC((__int16 *)&v1622, a8, v1621);
                  *(_DWORD *)v11 = LODWORD(v1621[0]);
                  v11 += 4;
                }
              }
              return result;
            case 8u:
              if (v11)
              {
                if ((a7 & 0x8000000000000000) != 0)
                {
LABEL_1967:
                  __break(1u);
                  goto LABEL_1968;
                }
                for (; a7; --a7)
                {
                  v1503 = *(_WORD *)v14;
                  v14 += 2;
                  LOWORD(v1622) = v1503;
                  result = sub_19C59A768((__int16 *)&v1622, a8, v1621);
                  *(double *)v11 = v1621[0];
                  v11 += 8;
                }
              }
              return result;
            case 0xAu:
              if (!v11)
                return result;
              if ((a7 & 0x8000000000000000) != 0)
              {
LABEL_1968:
                __break(1u);
              }
              else
              {
                if (!a7)
                  return result;
                if (a7 < 0x10 || &v14[2 * a7] > v11 && &v11[4 * a7] > v14)
                {
                  v1504 = 0;
                  goto LABEL_1972;
                }
              }
              v1504 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1516 = (float32x4_t *)(v11 + 32);
              v1517 = (float16x4_t *)(v14 + 16);
              v1518 = a7 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                v1519 = *(float16x8_t *)v1517[-2].i8;
                v1520 = vcvtq_f32_f16(*v1517);
                v1521 = vcvt_hight_f32_f16(*(float16x8_t *)v1517->i8);
                v1516[-2] = vcvtq_f32_f16(*(float16x4_t *)v1519.i8);
                v1516[-1] = vcvt_hight_f32_f16(v1519);
                *v1516 = v1520;
                v1516[1] = v1521;
                v1516 += 4;
                v1517 += 4;
                v1518 -= 16;
              }
              while (v1518);
              if (v1504 == a7)
                return result;
LABEL_1972:
              v1522 = a7 - v1504;
              v1523 = &v14[2 * v1504];
              v1524 = &v11[4 * v1504];
              do
              {
                v1525 = *(_WORD *)v1523;
                v1523 += 2;
                _H0 = v1525;
                __asm { FCVT            S0, H0 }
                *(_DWORD *)v1524 = _S0;
                v1524 += 4;
                --v1522;
              }
              while (v1522);
              return result;
            case 0xBu:
              if (!v11)
                return result;
              if ((a7 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else
              {
                if (!a7)
                  return result;
                if (a7 < 0x10 || &v14[2 * a7] > v11 && &v11[8 * a7] > v14)
                {
                  v1505 = 0;
                  goto LABEL_1979;
                }
              }
              v1505 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1528 = v11 + 64;
              v1529 = (int8x16_t *)(v14 + 16);
              v1530 = a7 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                _Q1 = v1529[-1];
                _D2 = vextq_s8(_Q1, _Q1, 8uLL).u64[0];
                _H0 = WORD1(_D2);
                __asm
                {
                  FCVT            D3, H0
                  FCVT            D0, H2
                }
                *((_QWORD *)&_Q0 + 1) = _D3;
                LOWORD(_D3) = HIWORD(_D2);
                __asm { FCVT            D3, H3 }
                LOWORD(_D2) = WORD2(_D2);
                __asm { FCVT            D2, H2 }
                *((_QWORD *)&_Q2 + 1) = _D3;
                v1538 = *v1529;
                v1529 += 2;
                _Q3 = v1538;
                _H4 = _Q1.i16[1];
                __asm
                {
                  FCVT            D4, H4
                  FCVT            D5, H1
                }
                *((_QWORD *)&_Q5 + 1) = _D4;
                LOWORD(_D4) = _Q1.i16[3];
                __asm { FCVT            D4, H4 }
                _Q1.i16[0] = _Q1.i16[2];
                __asm { FCVT            D1, H1 }
                _Q1.i64[1] = _D4;
                _D4 = vextq_s8(_Q3, _Q3, 8uLL).u64[0];
                _H6 = WORD1(_D4);
                __asm
                {
                  FCVT            D6, H6
                  FCVT            D7, H4
                }
                *((_QWORD *)&_Q7 + 1) = _D6;
                LOWORD(_D6) = HIWORD(_D4);
                __asm { FCVT            D6, H6 }
                LOWORD(_D4) = WORD2(_D4);
                __asm { FCVT            D4, H4 }
                *((_QWORD *)&_Q4 + 1) = _D6;
                LOWORD(_D6) = v1538.i16[1];
                __asm
                {
                  FCVT            D6, H6
                  FCVT            D16, H3
                }
                *((_QWORD *)&_Q16 + 1) = _D6;
                LOWORD(_D6) = v1538.i16[3];
                __asm { FCVT            D6, H6 }
                _Q3.i16[0] = v1538.i16[2];
                __asm { FCVT            D3, H3 }
                _Q3.i64[1] = _D6;
                *(v1528 - 4) = _Q5;
                *(v1528 - 3) = _Q1;
                *(v1528 - 2) = _Q0;
                *(v1528 - 1) = _Q2;
                *v1528 = _Q16;
                v1528[1] = _Q3;
                v1528[2] = _Q7;
                v1528[3] = _Q4;
                v1528 += 8;
                v1530 -= 16;
              }
              while (v1530);
              if (v1505 == a7)
                return result;
LABEL_1979:
              v1553 = a7 - v1505;
              v1554 = &v14[2 * v1505];
              v1555 = &v11[8 * v1505];
              do
              {
                v1556 = *(_WORD *)v1554;
                v1554 += 2;
                _H0 = v1556;
                __asm { FCVT            D0, H0 }
                *(_QWORD *)v1555 = _D0;
                v1555 += 8;
                --v1553;
              }
              while (v1553);
              return result;
            default:
              return result;
          }
        }
        goto LABEL_1544;
      }
      goto LABEL_1298;
    }
    if (v12 == 3 && v10 == 8)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0xC && (&v14[4 * a7] <= v11 || &v11[8 * a7] <= v14))
        {
          v634 = a7 & 0xFFFFFFFFFFFFFFF8;
          v880 = v11 + 32;
          v881 = v14 + 16;
          v882 = a7 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v883 = *((_OWORD *)v881 - 1);
            *(_QWORD *)&v884 = v883;
            *((_QWORD *)&v884 + 1) = DWORD1(v883);
            v885 = v884;
            *(_QWORD *)&v884 = DWORD2(v883);
            *((_QWORD *)&v884 + 1) = HIDWORD(v883);
            v886 = v884;
            *(_QWORD *)&v884 = *(_OWORD *)v881;
            *((_QWORD *)&v884 + 1) = HIDWORD(*(_QWORD *)v881);
            v887 = v884;
            *(_QWORD *)&v884 = *((_QWORD *)v881 + 1);
            *((_QWORD *)&v884 + 1) = HIDWORD(*(_OWORD *)v881);
            *(v880 - 2) = v885;
            *(v880 - 1) = v886;
            *v880 = v887;
            v880[1] = v884;
            v880 += 4;
            v881 += 32;
            v882 -= 8;
          }
          while (v882);
          if (v634 == a7)
            return result;
        }
        else
        {
          v634 = 0;
        }
        v635 = a7 - v634;
        v636 = &v14[4 * v634];
        v637 = &v11[8 * v634];
        do
        {
          v638 = *(_DWORD *)v636;
          v636 += 4;
          *(_QWORD *)v637 = v638;
          v637 += 8;
          --v635;
        }
        while (v635);
        return result;
      }
      __break(1u);
LABEL_1298:
      if (v19 == 8 && v16 == 3)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (!a7)
            return result;
          if (a7 >= 0xC && (&v14[8 * a7] <= v11 || &v11[4 * a7] <= v14))
          {
            v997 = a7 & 0xFFFFFFFFFFFFFFF8;
            v1052 = (int32x4_t *)(v11 + 16);
            v1053 = (int32x4_t *)(v14 + 32);
            v1054 = a7 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v1056 = v1053[-2];
              v1055 = v1053[-1];
              v1058 = *v1053;
              v1057 = v1053[1];
              v1053 += 4;
              v1052[-1] = vuzp1q_s32(v1056, v1055);
              *v1052 = vuzp1q_s32(v1058, v1057);
              v1052 += 2;
              v1054 -= 8;
            }
            while (v1054);
            if (v997 == a7)
              return result;
          }
          else
          {
            v997 = 0;
          }
          v998 = a7 - v997;
          v999 = &v14[8 * v997];
          v1000 = &v11[4 * v997];
          do
          {
            v1001 = *(_QWORD *)v999;
            v999 += 8;
            *(_DWORD *)v1000 = v1001;
            v1000 += 4;
            --v998;
          }
          while (v998);
          return result;
        }
        __break(1u);
        goto LABEL_1529;
      }
LABEL_1315:
      if (v19 == 5 && v16 == 4)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_1544:
          if (v19 == 6 && v16 == 10)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) == 0)
            {
              if (!a7)
                return result;
              if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[4 * a7] <= v14))
              {
                v1202 = a7 & 0xFFFFFFFFFFFFFFF0;
                v1265 = (float32x4_t *)(v11 + 32);
                v1266 = (int16x4_t *)(v14 + 16);
                v1267 = a7 & 0xFFFFFFFFFFFFFFF0;
                do
                {
                  v1268 = *(int16x8_t *)v1266[-2].i8;
                  v1269 = vcvtq_f32_s32(vmovl_s16(*v1266));
                  v1270 = vmovl_high_s16(*(int16x8_t *)v1266->i8);
                  v1265[-2] = vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v1268.i8));
                  v1265[-1] = vcvtq_f32_s32(vmovl_high_s16(v1268));
                  *v1265 = v1269;
                  v1265[1] = vcvtq_f32_s32(v1270);
                  v1265 += 4;
                  v1266 += 4;
                  v1267 -= 16;
                }
                while (v1267);
                if (v1202 == a7)
                  return result;
              }
              else
              {
                v1202 = 0;
              }
              v1203 = a7 - v1202;
              v1204 = &v14[2 * v1202];
              v1205 = (float *)&v11[4 * v1202];
              do
              {
                v1206 = *(__int16 *)v1204;
                v1204 += 2;
                *v1205++ = (float)v1206;
                --v1203;
              }
              while (v1203);
              return result;
            }
            goto LABEL_1750;
          }
LABEL_1565:
          if (v19 == 7 && v16 == 10)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) == 0)
            {
              if (a7)
              {
                v1224 = 0;
                if (a7 < 8)
                  goto LABEL_1575;
                if ((unint64_t)(v11 - v14) < 0x20)
                  goto LABEL_1575;
                v1224 = a7 & 0xFFFFFFFFFFFFFFF8;
                v1225 = (float32x4_t *)(v11 + 16);
                v1226 = (int32x4_t *)(v14 + 16);
                v1227 = a7 & 0xFFFFFFFFFFFFFFF8;
                do
                {
                  v1228 = vcvtq_f32_s32(*v1226);
                  v1225[-1] = vcvtq_f32_s32(v1226[-1]);
                  *v1225 = v1228;
                  v1225 += 2;
                  v1226 += 2;
                  v1227 -= 8;
                }
                while (v1227);
                if (v1224 != a7)
                {
LABEL_1575:
                  v1229 = a7 - v1224;
                  v1230 = 4 * v1224;
                  v1231 = (int *)&v14[4 * v1224];
                  v1232 = (float *)&v11[v1230];
                  do
                  {
                    v1233 = *v1231++;
                    *v1232++ = (float)v1233;
                    --v1229;
                  }
                  while (v1229);
                }
              }
              return result;
            }
            __break(1u);
            goto LABEL_1761;
          }
          goto LABEL_1583;
        }
        if (!a7)
          return result;
        if (a7 < 8 || &v14[a7] > v11 && &v11[8 * a7] > v14)
        {
          v1006 = 0;
          goto LABEL_1324;
        }
        if (a7 >= 0x10)
        {
          v1006 = a7 & 0xFFFFFFFFFFFFFFF0;
          v1104 = a7 & 0xFFFFFFFFFFFFFFF0;
          v1105 = (int8x16_t *)v14;
          v1106 = v11;
          do
          {
            v1107 = *v1105++;
            v1108 = vmovl_s8(*(int8x8_t *)v1107.i8);
            v1109 = vmovl_s16(*(int16x4_t *)v1108.i8);
            *(_QWORD *)&v1110 = v1109.i32[0];
            *((_QWORD *)&v1110 + 1) = v1109.i32[1];
            v1111 = v1110;
            v1112 = vmovl_high_s16(v1108);
            *(_QWORD *)&v1110 = v1112.i32[0];
            *((_QWORD *)&v1110 + 1) = v1112.i32[1];
            v1113 = v1110;
            v1114 = vmovl_high_s8(v1107);
            v1115 = vmovl_high_s16(v1114);
            *(_QWORD *)&v1110 = v1115.i32[0];
            *((_QWORD *)&v1110 + 1) = v1115.i32[1];
            v1116 = v1110;
            *(_QWORD *)&v1110 = v1115.i32[2];
            *((_QWORD *)&v1110 + 1) = v1115.i32[3];
            *((_OWORD *)v1106 + 6) = v1116;
            *((_OWORD *)v1106 + 7) = v1110;
            v1117 = vmovl_s16(*(int16x4_t *)v1114.i8);
            *(_QWORD *)&v1110 = v1117.i32[0];
            *((_QWORD *)&v1110 + 1) = v1117.i32[1];
            v1118 = v1110;
            *(_QWORD *)&v1110 = v1112.i32[2];
            *((_QWORD *)&v1110 + 1) = v1112.i32[3];
            v1119 = v1110;
            *(_QWORD *)&v1110 = v1117.i32[2];
            *((_QWORD *)&v1110 + 1) = v1117.i32[3];
            *((_OWORD *)v1106 + 4) = v1118;
            *((_OWORD *)v1106 + 5) = v1110;
            *((_OWORD *)v1106 + 2) = v1113;
            *((_OWORD *)v1106 + 3) = v1119;
            *(_QWORD *)&v1110 = v1109.i32[2];
            *((_QWORD *)&v1110 + 1) = v1109.i32[3];
            *(_OWORD *)v1106 = v1111;
            *((_OWORD *)v1106 + 1) = v1110;
            v1106 += 128;
            v1104 -= 16;
          }
          while (v1104);
          if (v1006 == a7)
            return result;
          if ((a7 & 8) == 0)
          {
LABEL_1324:
            v1007 = a7 - v1006;
            v1008 = &v14[v1006];
            v1009 = &v11[8 * v1006];
            do
            {
              v1010 = (char)*v1008++;
              *(_QWORD *)v1009 = v1010;
              v1009 += 8;
              --v1007;
            }
            while (v1007);
            return result;
          }
        }
        else
        {
          v1006 = 0;
        }
        v1065 = v1006;
        v1006 = a7 & 0xFFFFFFFFFFFFFFF8;
        v1066 = &v11[8 * v1065];
        v1067 = (int8x8_t *)&v14[v1065];
        v1068 = v1065 - (a7 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v1069 = *v1067++;
          v1070 = vmovl_s8(v1069);
          v1071 = vmovl_s16(*(int16x4_t *)v1070.i8);
          *(_QWORD *)&v1072 = v1071.i32[0];
          *((_QWORD *)&v1072 + 1) = v1071.i32[1];
          v1073 = v1072;
          v1074 = vmovl_high_s16(v1070);
          *(_QWORD *)&v1072 = v1074.i32[0];
          *((_QWORD *)&v1072 + 1) = v1074.i32[1];
          v1075 = v1072;
          *(_QWORD *)&v1072 = v1074.i32[2];
          *((_QWORD *)&v1072 + 1) = v1074.i32[3];
          *((_OWORD *)v1066 + 2) = v1075;
          *((_OWORD *)v1066 + 3) = v1072;
          *(_QWORD *)&v1072 = v1071.i32[2];
          *((_QWORD *)&v1072 + 1) = v1071.i32[3];
          *(_OWORD *)v1066 = v1073;
          *((_OWORD *)v1066 + 1) = v1072;
          v1066 += 64;
          v1068 += 8;
        }
        while (v1068);
        if (v1006 == a7)
          return result;
        goto LABEL_1324;
      }
      goto LABEL_1330;
    }
    if (v12 == 4 && v10 == 8)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (a7)
        {
          v727 = 0;
          if (a7 < 4)
            goto LABEL_976;
          if ((unint64_t)(v11 - v14) < 0x20)
            goto LABEL_976;
          v727 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          v728 = v11 + 16;
          v729 = (__int128 *)(v14 + 16);
          v730 = a7 & 0xFFFFFFFFFFFFFFFCLL;
          do
          {
            v731 = *v729;
            *(v728 - 1) = *(v729 - 1);
            *v728 = v731;
            v728 += 2;
            v729 += 2;
            v730 -= 4;
          }
          while (v730);
          if (v727 != a7)
          {
LABEL_976:
            v732 = a7 - v727;
            v733 = 8 * v727;
            v734 = &v14[8 * v727];
            v735 = &v11[v733];
            do
            {
              v736 = *(_QWORD *)v734;
              v734 += 8;
              *(_QWORD *)v735 = v736;
              v735 += 8;
              --v732;
            }
            while (v732);
          }
        }
        return result;
      }
      __break(1u);
      goto LABEL_1315;
    }
    if (v12 == 5 && v10 == 1)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_1330:
        if (v19 == 6 && v16 == 4)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[8 * a7] <= v14))
            {
              v1011 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1087 = v11 + 64;
              v1088 = (int16x4_t *)(v14 + 16);
              v1089 = a7 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                v1090 = *(int16x8_t *)v1088[-2].i8;
                v1091 = *(int16x8_t *)v1088->i8;
                v1092 = vmovl_s16(*(int16x4_t *)v1090.i8);
                *(_QWORD *)&v1093 = v1092.i32[0];
                *((_QWORD *)&v1093 + 1) = v1092.i32[1];
                v1094 = v1093;
                *(_QWORD *)&v1093 = v1092.i32[2];
                *((_QWORD *)&v1093 + 1) = v1092.i32[3];
                v1095 = v1093;
                v1096 = vmovl_high_s16(v1090);
                *(_QWORD *)&v1093 = v1096.i32[0];
                *((_QWORD *)&v1093 + 1) = v1096.i32[1];
                v1097 = v1093;
                *(_QWORD *)&v1093 = v1096.i32[2];
                *((_QWORD *)&v1093 + 1) = v1096.i32[3];
                v1098 = v1093;
                v1099 = vmovl_s16(*v1088);
                *(_QWORD *)&v1093 = v1099.i32[0];
                *((_QWORD *)&v1093 + 1) = v1099.i32[1];
                v1100 = v1093;
                *(_QWORD *)&v1093 = v1099.i32[2];
                *((_QWORD *)&v1093 + 1) = v1099.i32[3];
                v1101 = v1093;
                *(v1087 - 2) = v1097;
                *(v1087 - 1) = v1098;
                v1102 = vmovl_high_s16(v1091);
                *(_QWORD *)&v1093 = v1102.i32[0];
                *((_QWORD *)&v1093 + 1) = v1102.i32[1];
                v1103 = v1093;
                *(v1087 - 4) = v1094;
                *(v1087 - 3) = v1095;
                *(_QWORD *)&v1093 = v1102.i32[2];
                *((_QWORD *)&v1093 + 1) = v1102.i32[3];
                v1087[2] = v1103;
                v1087[3] = v1093;
                *v1087 = v1100;
                v1087[1] = v1101;
                v1087 += 8;
                v1088 += 4;
                v1089 -= 16;
              }
              while (v1089);
              if (v1011 == a7)
                return result;
            }
            else
            {
              v1011 = 0;
            }
            v1012 = a7 - v1011;
            v1013 = &v14[2 * v1011];
            v1014 = &v11[8 * v1011];
            do
            {
              v1015 = *(__int16 *)v1013;
              v1013 += 2;
              *(_QWORD *)v1014 = v1015;
              v1014 += 8;
              --v1012;
            }
            while (v1012);
            return result;
          }
          __break(1u);
          goto LABEL_1565;
        }
        goto LABEL_1355;
      }
      if (!a7)
        return result;
      v778 = 0;
      if (a7 >= 8 && (unint64_t)(v11 - v14) >= 0x20)
      {
        if (a7 < 0x20)
        {
          v778 = 0;
LABEL_1147:
          v902 = v778;
          v778 = a7 & 0xFFFFFFFFFFFFFFF8;
          v903 = &v11[v902];
          v904 = &v14[v902];
          v905 = v902 - (a7 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v906 = *(_QWORD *)v904;
            v904 += 8;
            *(_QWORD *)v903 = v906;
            v903 += 8;
            v905 += 8;
          }
          while (v905);
          if (v778 == a7)
            return result;
          goto LABEL_1150;
        }
        v778 = a7 & 0xFFFFFFFFFFFFFFE0;
        v898 = v11 + 16;
        v899 = (__int128 *)(v14 + 16);
        v900 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v901 = *v899;
          *(v898 - 1) = *(v899 - 1);
          *v898 = v901;
          v898 += 2;
          v899 += 2;
          v900 -= 32;
        }
        while (v900);
        if (v778 == a7)
          return result;
        if ((a7 & 0x18) != 0)
          goto LABEL_1147;
      }
LABEL_1150:
      v907 = a7 - v778;
      v908 = &v14[v778];
      v909 = &v11[v778];
      do
      {
        v910 = *v908++;
        *v909++ = v910;
        --v907;
      }
      while (v907);
      return result;
    }
    if (v12 == 6 && v10 == 1)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_1355:
        if (v19 == 7 && v16 == 4)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 >= 0xC && (&v14[4 * a7] <= v11 || &v11[8 * a7] <= v14))
            {
              v1037 = a7 & 0xFFFFFFFFFFFFFFF8;
              v1126 = v11 + 32;
              v1127 = v14 + 16;
              v1128 = a7 & 0xFFFFFFFFFFFFFFF8;
              do
              {
                v1129 = *((_OWORD *)v1127 - 1);
                *(_QWORD *)&v1130 = (int)v1129;
                *((_QWORD *)&v1130 + 1) = SDWORD1(v1129);
                v1131 = v1130;
                *(_QWORD *)&v1130 = SDWORD2(v1129);
                *((_QWORD *)&v1130 + 1) = SHIDWORD(v1129);
                v1132 = v1130;
                *(_QWORD *)&v1130 = (int)*(_OWORD *)v1127;
                *((_QWORD *)&v1130 + 1) = (int)HIDWORD(*(_QWORD *)v1127);
                v1133 = v1130;
                *(_QWORD *)&v1130 = (int)*((_QWORD *)v1127 + 1);
                *((_QWORD *)&v1130 + 1) = (int)HIDWORD(*(_OWORD *)v1127);
                *(v1126 - 2) = v1131;
                *(v1126 - 1) = v1132;
                *v1126 = v1133;
                v1126[1] = v1130;
                v1126 += 4;
                v1127 += 32;
                v1128 -= 8;
              }
              while (v1128);
              if (v1037 == a7)
                return result;
            }
            else
            {
              v1037 = 0;
            }
            v1038 = a7 - v1037;
            v1039 = &v14[4 * v1037];
            v1040 = &v11[8 * v1037];
            do
            {
              v1041 = *(int *)v1039;
              v1039 += 4;
              *(_QWORD *)v1040 = v1041;
              v1040 += 8;
              --v1038;
            }
            while (v1038);
            return result;
          }
          __break(1u);
LABEL_1583:
          if (v19 == 8 && v16 == 10)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) == 0)
            {
              if (!a7)
                return result;
              if (a7 >= 8 && (&v14[8 * a7] <= v11 || &v11[4 * a7] <= v14))
              {
                v1241 = a7 & 0xFFFFFFFFFFFFFFF8;
                v1291 = (float32x4_t *)(v11 + 16);
                v1292 = (int64x2_t *)(v14 + 32);
                v1293 = a7 & 0xFFFFFFFFFFFFFFF8;
                do
                {
                  v1295 = v1292[-2];
                  v1294 = v1292[-1];
                  v1297 = *v1292;
                  v1296 = v1292[1];
                  v1292 += 4;
                  v1291[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v1295)), vcvtq_f64_s64(v1294));
                  *v1291 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v1297)), vcvtq_f64_s64(v1296));
                  v1291 += 2;
                  v1293 -= 8;
                }
                while (v1293);
                if (v1241 == a7)
                  return result;
              }
              else
              {
                v1241 = 0;
              }
              v1242 = a7 - v1241;
              v1243 = (uint64_t *)&v14[8 * v1241];
              v1244 = (float *)&v11[4 * v1241];
              do
              {
                v1245 = *v1243++;
                *v1244++ = (float)v1245;
                --v1242;
              }
              while (v1242);
              return result;
            }
LABEL_1761:
            __break(1u);
LABEL_1762:
            __break(1u);
            goto LABEL_1763;
          }
LABEL_1600:
          if (v19 == 1 && v16 == 10)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) != 0)
              goto LABEL_1762;
            if (!a7)
              return result;
            if (a7 < 8 || &v14[a7] > v11 && &v11[4 * a7] > v14)
            {
              v1250 = 0;
              goto LABEL_1609;
            }
            if (a7 >= 0x10)
            {
              v1250 = a7 & 0xFFFFFFFFFFFFFFF0;
              _Q2.i64[1] = 0xFFFFFF07FFFFFF06;
              v1316 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1317 = (int8x16_t *)v14;
              v1318 = (float32x4_t *)v11;
              do
              {
                v1319 = *v1317++;
                v1318[2] = vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v1319, (int8x16_t)xmmword_19CAECBE0));
                v1318[3] = vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v1319, (int8x16_t)xmmword_19CAECBF0));
                *v1318 = vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v1319, (int8x16_t)xmmword_19CAECBC0));
                v1318[1] = vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v1319, (int8x16_t)xmmword_19CAECBD0));
                v1318 += 4;
                v1316 -= 16;
              }
              while (v1316);
              if (v1250 == a7)
                return result;
              if ((a7 & 8) == 0)
              {
LABEL_1609:
                v1251 = a7 - v1250;
                v1252 = &v14[v1250];
                v1253 = (float *)&v11[4 * v1250];
                do
                {
                  v1254 = *v1252++;
                  *v1253++ = (float)v1254;
                  --v1251;
                }
                while (v1251);
                return result;
              }
            }
            else
            {
              v1250 = 0;
            }
            v1303 = v1250;
            v1250 = a7 & 0xFFFFFFFFFFFFFFF8;
            v1304 = (float32x4_t *)&v11[4 * v1303];
            v1305 = &v14[v1303];
            v1306 = v1303 - (a7 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v1307 = *(_QWORD *)v1305;
              v1305 += 8;
              _Q2.i64[0] = v1307;
              v1308 = (uint32x4_t)vqtbl1q_s8(_Q2, (int8x16_t)xmmword_19CAECBD0);
              _Q2 = (int8x16_t)vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(_Q2, (int8x16_t)xmmword_19CAECBC0));
              *v1304 = (float32x4_t)_Q2;
              v1304[1] = vcvtq_f32_u32(v1308);
              v1304 += 2;
              v1306 += 8;
            }
            while (v1306);
            if (v1250 == a7)
              return result;
            goto LABEL_1609;
          }
LABEL_1619:
          if (v19 != 2 || v16 != 10)
            goto LABEL_1641;
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 >= 0x10 && (&v14[2 * a7] <= v11 || &v11[4 * a7] <= v14))
            {
              v1260 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1310 = (float32x4_t *)(v11 + 32);
              v1311 = (uint16x4_t *)(v14 + 16);
              v1312 = a7 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                v1313 = *(uint16x8_t *)v1311[-2].i8;
                v1314 = vcvtq_f32_u32(vmovl_u16(*v1311));
                v1315 = vmovl_high_u16(*(uint16x8_t *)v1311->i8);
                v1310[-2] = vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v1313.i8));
                v1310[-1] = vcvtq_f32_u32(vmovl_high_u16(v1313));
                *v1310 = v1314;
                v1310[1] = vcvtq_f32_u32(v1315);
                v1310 += 4;
                v1311 += 4;
                v1312 -= 16;
              }
              while (v1312);
              if (v1260 == a7)
                return result;
            }
            else
            {
              v1260 = 0;
            }
            v1261 = a7 - v1260;
            v1262 = &v14[2 * v1260];
            v1263 = (float *)&v11[4 * v1260];
            do
            {
              v1264 = *(unsigned __int16 *)v1262;
              v1262 += 2;
              *v1263++ = (float)v1264;
              --v1261;
            }
            while (v1261);
            return result;
          }
LABEL_1763:
          __break(1u);
LABEL_1764:
          __break(1u);
LABEL_1765:
          __break(1u);
LABEL_1766:
          __break(1u);
          goto LABEL_1767;
        }
        goto LABEL_1368;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[2 * a7] > v11 && &v11[a7] > v14)
      {
        v817 = 0;
        goto LABEL_1063;
      }
      if (a7 >= 0x20)
      {
        v817 = a7 & 0xFFFFFFFFFFFFFFE0;
        v926 = (int8x16_t *)(v11 + 16);
        v927 = (int8x16_t *)(v14 + 32);
        v928 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v930 = v927[-2];
          v929 = v927[-1];
          v932 = *v927;
          v931 = v927[1];
          v927 += 4;
          v926[-1] = vuzp1q_s8(v930, v929);
          *v926 = vuzp1q_s8(v932, v931);
          v926 += 2;
          v928 -= 32;
        }
        while (v928);
        if (v817 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_1063:
          v818 = a7 - v817;
          v819 = &v14[2 * v817];
          v820 = &v11[v817];
          do
          {
            v821 = *v819;
            v819 += 2;
            *v820++ = v821;
            --v818;
          }
          while (v818);
          return result;
        }
      }
      else
      {
        v817 = 0;
      }
      v933 = v817;
      v817 = a7 & 0xFFFFFFFFFFFFFFF8;
      v934 = (int8x8_t *)&v11[v933];
      v935 = (int16x8_t *)&v14[2 * v933];
      v936 = v933 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v937 = *v935++;
        *v934++ = vmovn_s16(v937);
        v936 += 8;
      }
      while (v936);
      if (v817 == a7)
        return result;
      goto LABEL_1063;
    }
    if (v12 != 7 || v10 != 1)
    {
LABEL_1115:
      if (v12 != 8 || v10 != 1)
      {
LABEL_1131:
        if (v19 == 5 && v16 == 2)
        {
          if (!v11)
            return result;
          if ((a7 & 0x8000000000000000) == 0)
          {
            if (!a7)
              return result;
            if (a7 < 8 || &v14[a7] > v11 && &v11[2 * a7] > v14)
            {
              v893 = 0;
              goto LABEL_1140;
            }
LABEL_1244:
            if (a7 < 0x20)
            {
              v893 = 0;
              goto LABEL_1275;
            }
LABEL_1271:
            v893 = a7 & 0xFFFFFFFFFFFFFFE0;
            v969 = (int16x8_t *)(v11 + 32);
            v970 = (int8x8_t *)(v14 + 16);
            v971 = a7 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v972 = *(int8x16_t *)v970[-2].i8;
              v973 = vmovl_s8(*v970);
              v974 = vmovl_high_s8(*(int8x16_t *)v970->i8);
              v969[-2] = vmovl_s8(*(int8x8_t *)v972.i8);
              v969[-1] = vmovl_high_s8(v972);
              *v969 = v973;
              v969[1] = v974;
              v969 += 4;
              v970 += 4;
              v971 -= 32;
            }
            while (v971);
            if (v893 == a7)
              return result;
            if ((a7 & 0x18) == 0)
            {
LABEL_1140:
              v894 = a7 - v893;
              v895 = &v14[v893];
              v896 = &v11[2 * v893];
              do
              {
                v897 = (char)*v895++;
                *(_WORD *)v896 = v897;
                v896 += 2;
                --v894;
              }
              while (v894);
              return result;
            }
LABEL_1275:
            v975 = v893;
            v893 = a7 & 0xFFFFFFFFFFFFFFF8;
            v976 = (int16x8_t *)&v11[2 * v975];
            v977 = (int8x8_t *)&v14[v975];
            v978 = v975 - (a7 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v979 = *v977++;
              *v976++ = vmovl_s8(v979);
              v978 += 8;
            }
            while (v978);
            if (v893 == a7)
              return result;
            goto LABEL_1140;
          }
          __break(1u);
LABEL_1405:
          if (v19 == 6 && v16 == 9)
          {
            if (!v11)
              return result;
            if ((a7 & 0x8000000000000000) == 0)
            {
              if (a7)
              {
                v1076 = 0;
                if (a7 < 0x10)
                  goto LABEL_1415;
                if ((unint64_t)(v11 - v14) < 0x20)
                  goto LABEL_1415;
                v1076 = a7 & 0xFFFFFFFFFFFFFFF0;
                v1077 = (float16x8_t *)(v11 + 16);
                v1078 = (int16x4_t *)(v14 + 16);
                v1079 = a7 & 0xFFFFFFFFFFFFFFF0;
                do
                {
                  v1080 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(*v1078))), vcvtq_f32_s32(vmovl_high_s16(*(int16x8_t *)v1078->i8)));
                  v1077[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(v1078[-2]))), vcvtq_f32_s32(vmovl_high_s16(*(int16x8_t *)v1078[-2].i8)));
                  *v1077 = v1080;
                  v1077 += 2;
                  v1078 += 4;
                  v1079 -= 16;
                }
                while (v1079);
                if (v1076 != a7)
                {
LABEL_1415:
                  v1081 = a7 - v1076;
                  v1082 = 2 * v1076;
                  v1083 = &v14[2 * v1076];
                  v1084 = &v11[v1082];
                  do
                  {
                    v1085 = *(__int16 *)v1083;
                    v1083 += 2;
                    _S0 = (float)v1085;
                    __asm { FCVT            H0, S0 }
                    *(_WORD *)v1084 = LOWORD(_S0);
                    v1084 += 2;
                    --v1081;
                  }
                  while (v1081);
                }
              }
              return result;
            }
            __break(1u);
LABEL_1641:
            if (v19 == 3 && v16 == 10)
            {
              if (!v11)
                return result;
              if ((a7 & 0x8000000000000000) == 0)
              {
                if (a7)
                {
                  v1276 = 0;
                  if (a7 < 8)
                    goto LABEL_1651;
                  if ((unint64_t)(v11 - v14) < 0x20)
                    goto LABEL_1651;
                  v1276 = a7 & 0xFFFFFFFFFFFFFFF8;
                  v1277 = (float32x4_t *)(v11 + 16);
                  v1278 = (uint32x4_t *)(v14 + 16);
                  v1279 = a7 & 0xFFFFFFFFFFFFFFF8;
                  do
                  {
                    v1280 = vcvtq_f32_u32(*v1278);
                    v1277[-1] = vcvtq_f32_u32(v1278[-1]);
                    *v1277 = v1280;
                    v1277 += 2;
                    v1278 += 2;
                    v1279 -= 8;
                  }
                  while (v1279);
                  if (v1276 != a7)
                  {
LABEL_1651:
                    v1281 = a7 - v1276;
                    v1282 = 4 * v1276;
                    v1283 = (unsigned int *)&v14[4 * v1276];
                    v1284 = (float *)&v11[v1282];
                    do
                    {
                      v1285 = *v1283++;
                      *v1284++ = (float)v1285;
                      --v1281;
                    }
                    while (v1281);
                  }
                }
                return result;
              }
              goto LABEL_1764;
            }
LABEL_1655:
            if (v19 == 4 && v16 == 10)
            {
              if (!v11)
                return result;
              if ((a7 & 0x8000000000000000) != 0)
                goto LABEL_1765;
              if (!a7)
                return result;
              if (a7 < 8 || &v14[8 * a7] > v11 && &v11[4 * a7] > v14)
              {
                v1286 = 0;
                goto LABEL_1664;
              }
LABEL_1732:
              v1286 = a7 & 0xFFFFFFFFFFFFFFF8;
              v1331 = (float32x4_t *)(v11 + 16);
              v1332 = (uint64x2_t *)(v14 + 32);
              v1333 = a7 & 0xFFFFFFFFFFFFFFF8;
              do
              {
                v1335 = v1332[-2];
                v1334 = v1332[-1];
                v1337 = *v1332;
                v1336 = v1332[1];
                v1332 += 4;
                v1331[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64(v1335)), vcvtq_f64_u64(v1334));
                *v1331 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_u64(v1337)), vcvtq_f64_u64(v1336));
                v1331 += 2;
                v1333 -= 8;
              }
              while (v1333);
              if (v1286 == a7)
                return result;
LABEL_1664:
              v1287 = a7 - v1286;
              v1288 = (unint64_t *)&v14[8 * v1286];
              v1289 = (float *)&v11[4 * v1286];
              do
              {
                v1290 = *v1288++;
                *v1289++ = (float)v1290;
                --v1287;
              }
              while (v1287);
              return result;
            }
LABEL_1672:
            if (v19 == 5 && v16 == 11)
            {
              if (!v11)
                return result;
              if ((a7 & 0x8000000000000000) != 0)
                goto LABEL_1766;
              if (!a7)
                return result;
              if (a7 < 8 || &v14[a7] > v11 && &v11[8 * a7] > v14)
              {
                v1298 = 0;
                goto LABEL_1679;
              }
              if (a7 < 0x10)
              {
                v1298 = 0;
                goto LABEL_1786;
              }
LABEL_1782:
              v1298 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1366 = a7 & 0xFFFFFFFFFFFFFFF0;
              v1367 = (int8x16_t *)v14;
              v1368 = (float64x2_t *)v11;
              do
              {
                v1369 = *v1367++;
                v1370 = vextq_s8(v1369, v1369, 8uLL).u64[0];
                v1371.i32[0] = v1370;
                v1371.i32[1] = BYTE1(v1370);
                v1372 = vshr_n_s32(vshl_n_s32(v1371, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1372.i32[0];
                v1373.i64[1] = v1372.i32[1];
                v1374 = vcvtq_f64_s64(v1373);
                v1375.i32[0] = BYTE2(v1370);
                v1375.i32[1] = BYTE3(v1370);
                v1376 = vshr_n_s32(vshl_n_s32(v1375, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1376.i32[0];
                v1373.i64[1] = v1376.i32[1];
                v1377 = v1373;
                v1378.i32[0] = BYTE4(v1370);
                v1378.i32[1] = BYTE5(v1370);
                v1379 = vshr_n_s32(vshl_n_s32(v1378, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1379.i32[0];
                v1373.i64[1] = v1379.i32[1];
                v1380.i32[0] = BYTE6(v1370);
                v1380.i32[1] = HIBYTE(v1370);
                v1381 = vcvtq_f64_s64(v1373);
                v1382 = vshr_n_s32(vshl_n_s32(v1380, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1382.i32[0];
                v1373.i64[1] = v1382.i32[1];
                v1383 = vcvtq_f64_s64(v1373);
                v1380.i32[0] = v1369.u8[0];
                v1380.i32[1] = v1369.u8[1];
                v1384 = vshr_n_s32(vshl_n_s32(v1380, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1384.i32[0];
                v1373.i64[1] = v1384.i32[1];
                v1385 = vcvtq_f64_s64(v1373);
                v1386.i32[0] = v1369.u8[2];
                v1386.i32[1] = v1369.u8[3];
                v1387 = vshr_n_s32(vshl_n_s32(v1386, 0x18uLL), 0x18uLL);
                v1388.i32[0] = v1369.u8[4];
                v1388.i32[1] = v1369.u8[5];
                v1389 = vshr_n_s32(vshl_n_s32(v1388, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1389.i32[0];
                v1373.i64[1] = v1389.i32[1];
                v1390.i32[0] = v1369.u8[6];
                v1390.i32[1] = v1369.u8[7];
                v1391 = vcvtq_f64_s64(v1373);
                v1392 = vshr_n_s32(vshl_n_s32(v1390, 0x18uLL), 0x18uLL);
                v1373.i64[0] = v1392.i32[0];
                v1373.i64[1] = v1392.i32[1];
                v1368[2] = v1391;
                v1368[3] = vcvtq_f64_s64(v1373);
                v1373.i64[0] = v1387.i32[0];
                v1373.i64[1] = v1387.i32[1];
                *v1368 = v1385;
                v1368[1] = vcvtq_f64_s64(v1373);
                v1368[6] = v1381;
                v1368[7] = v1383;
                v1368[4] = v1374;
                v1368[5] = vcvtq_f64_s64(v1377);
                v1368 += 8;
                v1366 -= 16;
              }
              while (v1366);
              if (v1298 == a7)
                return result;
              if ((a7 & 8) == 0)
              {
LABEL_1679:
                v1299 = a7 - v1298;
                v1300 = &v14[v1298];
                v1301 = (double *)&v11[8 * v1298];
                do
                {
                  v1302 = (char)*v1300++;
                  *v1301++ = (double)v1302;
                  --v1299;
                }
                while (v1299);
                return result;
              }
LABEL_1786:
              v1393 = v1298;
              v1298 = a7 & 0xFFFFFFFFFFFFFFF8;
              v1394 = (float64x2_t *)&v11[8 * v1393];
              v1395 = &v14[v1393];
              v1396 = v1393 - (a7 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                v1397 = *(_QWORD *)v1395;
                v1395 += 8;
                v1398.i32[0] = v1397;
                v1398.i32[1] = BYTE1(v1397);
                v1399 = vshr_n_s32(vshl_n_s32(v1398, 0x18uLL), 0x18uLL);
                v1400.i64[0] = v1399.i32[0];
                v1400.i64[1] = v1399.i32[1];
                v1401 = vcvtq_f64_s64(v1400);
                v1402.i32[0] = BYTE2(v1397);
                v1402.i32[1] = BYTE3(v1397);
                v1403 = vshr_n_s32(vshl_n_s32(v1402, 0x18uLL), 0x18uLL);
                v1400.i64[0] = v1403.i32[0];
                v1400.i64[1] = v1403.i32[1];
                v1404 = v1400;
                v1405.i32[0] = BYTE4(v1397);
                v1405.i32[1] = BYTE5(v1397);
                v1406 = vshr_n_s32(vshl_n_s32(v1405, 0x18uLL), 0x18uLL);
                v1400.i64[0] = v1406.i32[0];
                v1400.i64[1] = v1406.i32[1];
                v1407.i32[0] = BYTE6(v1397);
                v1407.i32[1] = HIBYTE(v1397);
                v1408 = vcvtq_f64_s64(v1400);
                v1409 = vshr_n_s32(vshl_n_s32(v1407, 0x18uLL), 0x18uLL);
                v1400.i64[0] = v1409.i32[0];
                v1400.i64[1] = v1409.i32[1];
                v1394[2] = v1408;
                v1394[3] = vcvtq_f64_s64(v1400);
                *v1394 = v1401;
                v1394[1] = vcvtq_f64_s64(v1404);
                v1394 += 4;
                v1396 += 8;
              }
              while (v1396);
              if (v1298 == a7)
                return result;
              goto LABEL_1679;
            }
            goto LABEL_1689;
          }
          goto LABEL_1428;
        }
        goto LABEL_1157;
      }
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_1386;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[8 * a7] > v11 && &v11[a7] > v14)
      {
        v888 = 0;
        goto LABEL_1124;
      }
LABEL_1217:
      if (a7 >= 0x20)
      {
        v888 = a7 & 0xFFFFFFFFFFFFFFE0;
        v955 = v11 + 16;
        v956 = (int8x16x4_t *)(v14 + 128);
        v957 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          *(_QWORD *)&v958 = vqtbl4q_s8(v956[-2], (int8x16_t)xmmword_19CAECB80).u64[0];
          *(_QWORD *)&v959 = vqtbl4q_s8(*v956, (int8x16_t)xmmword_19CAECB80).u64[0];
          *((_QWORD *)&v958 + 1) = vqtbl4q_s8(v956[-1], (int8x16_t)xmmword_19CAECB80).u64[0];
          *((_QWORD *)&v959 + 1) = vqtbl4q_s8(v956[1], (int8x16_t)xmmword_19CAECB80).u64[0];
          *(v955 - 1) = v958;
          *v955 = v959;
          v955 += 2;
          v956 += 4;
          v957 -= 32;
        }
        while (v957);
        if (v888 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_1124:
          v889 = a7 - v888;
          v890 = &v14[8 * v888];
          v891 = &v11[v888];
          do
          {
            v892 = *(_QWORD *)v890;
            v890 += 8;
            *v891++ = v892;
            --v889;
          }
          while (v889);
          return result;
        }
      }
      else
      {
        v888 = 0;
      }
      v960 = v888;
      v888 = a7 & 0xFFFFFFFFFFFFFFF8;
      v961 = &v11[v960];
      v962 = (int8x16x4_t *)&v14[8 * v960];
      v963 = v960 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        *(_QWORD *)v961 = vqtbl4q_s8(*v962, (int8x16_t)xmmword_19CAECB90).u64[0];
        v961 += 8;
        ++v962;
        v963 += 8;
      }
      while (v963);
      if (v888 == a7)
        return result;
      goto LABEL_1124;
    }
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_1368:
      if (v19 == 8 && v16 == 4)
      {
        if (!v11)
          return result;
        if ((a7 & 0x8000000000000000) == 0)
        {
          if (a7)
          {
            v1042 = 0;
            if (a7 < 4)
              goto LABEL_1378;
            if ((unint64_t)(v11 - v14) < 0x20)
              goto LABEL_1378;
            v1042 = a7 & 0xFFFFFFFFFFFFFFFCLL;
            v1043 = v11 + 16;
            v1044 = (__int128 *)(v14 + 16);
            v1045 = a7 & 0xFFFFFFFFFFFFFFFCLL;
            do
            {
              v1046 = *v1044;
              *(v1043 - 1) = *(v1044 - 1);
              *v1043 = v1046;
              v1043 += 2;
              v1044 += 2;
              v1045 -= 4;
            }
            while (v1045);
            if (v1042 != a7)
            {
LABEL_1378:
              v1047 = a7 - v1042;
              v1048 = 8 * v1042;
              v1049 = &v14[8 * v1042];
              v1050 = &v11[v1048];
              do
              {
                v1051 = *(_QWORD *)v1049;
                v1049 += 8;
                *(_QWORD *)v1050 = v1051;
                v1050 += 8;
                --v1047;
              }
              while (v1047);
            }
          }
          return result;
        }
        __break(1u);
        goto LABEL_1600;
      }
LABEL_1386:
      if (v19 != 5 || v16 != 9)
        goto LABEL_1405;
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_1619;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[a7] > v11 && &v11[2 * a7] > v14)
      {
        v1059 = 0;
        goto LABEL_1395;
      }
      if (a7 >= 0x20)
      {
        v1059 = a7 & 0xFFFFFFFFFFFFFFE0;
        v1157 = (float16x8_t *)(v11 + 32);
        v1158 = (int8x8_t *)(v14 + 16);
        v1159 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v1160 = *(int8x16_t *)v1158[-2].i8;
          v1161 = vmovl_s8(*(int8x8_t *)v1160.i8);
          v1162 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v1161.i8))), vcvtq_f32_s32(vmovl_high_s16(v1161)));
          v1163 = vmovl_high_s8(v1160);
          v1164 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v1163.i8))), vcvtq_f32_s32(vmovl_high_s16(v1163)));
          v1165 = vmovl_s8(*v1158);
          v1166 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v1165.i8))), vcvtq_f32_s32(vmovl_high_s16(v1165)));
          v1167 = vmovl_high_s8(*(int8x16_t *)v1158->i8);
          v1157[-2] = v1162;
          v1157[-1] = v1164;
          *v1157 = v1166;
          v1157[1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v1167.i8))), vcvtq_f32_s32(vmovl_high_s16(v1167)));
          v1157 += 4;
          v1158 += 4;
          v1159 -= 32;
        }
        while (v1159);
        if (v1059 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_1395:
          v1060 = a7 - v1059;
          v1061 = &v14[v1059];
          v1062 = &v11[2 * v1059];
          do
          {
            v1063 = (char)*v1061++;
            _S0 = (float)v1063;
            __asm { FCVT            H0, S0 }
            *(_WORD *)v1062 = LOWORD(_S0);
            v1062 += 2;
            --v1060;
          }
          while (v1060);
          return result;
        }
      }
      else
      {
        v1059 = 0;
      }
      v1168 = v1059;
      v1059 = a7 & 0xFFFFFFFFFFFFFFF8;
      v1169 = (float16x8_t *)&v11[2 * v1168];
      v1170 = (int8x8_t *)&v14[v1168];
      v1171 = v1168 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v1172 = *v1170++;
        v1173 = vmovl_s8(v1172);
        *v1169++ = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v1173.i8))), vcvtq_f32_s32(vmovl_high_s16(v1173)));
        v1171 += 8;
      }
      while (v1171);
      if (v1059 == a7)
        return result;
      goto LABEL_1395;
    }
    if (!a7)
      return result;
    if (a7 < 8 || &v14[4 * a7] > v11 && &v11[a7] > v14)
    {
      v875 = 0;
      goto LABEL_1104;
    }
LABEL_1189:
    if (a7 >= 0x20)
    {
      v875 = a7 & 0xFFFFFFFFFFFFFFE0;
      v943 = (int8x16_t *)(v11 + 16);
      v944 = (int8x16x4_t *)(v14 + 64);
      v945 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v1630 = *v944;
        v943[-1] = vqtbl4q_s8(v944[-1], (int8x16_t)xmmword_19CAECBA0);
        *v943 = vqtbl4q_s8(v1630, (int8x16_t)xmmword_19CAECBA0);
        v943 += 2;
        v944 += 2;
        v945 -= 32;
      }
      while (v945);
      if (v875 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_1104:
        v876 = a7 - v875;
        v877 = &v14[4 * v875];
        v878 = &v11[v875];
        do
        {
          v879 = *(_DWORD *)v877;
          v877 += 4;
          *v878++ = v879;
          --v876;
        }
        while (v876);
        return result;
      }
    }
    else
    {
      v875 = 0;
    }
    v946 = v875;
    v875 = a7 & 0xFFFFFFFFFFFFFFF8;
    v947 = &v11[v946];
    v948 = (int8x16x2_t *)&v14[4 * v946];
    v949 = v946 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v1626 = *v948++;
      *(_QWORD *)v947 = vqtbl2q_s8(v1626, (int8x16_t)xmmword_19CAECBB0).u64[0];
      v947 += 8;
      v949 += 8;
    }
    while (v949);
    if (v875 == a7)
      return result;
    goto LABEL_1104;
  }
  if (!v11)
    return result;
  if ((a7 & 0x8000000000000000) == 0)
  {
    if (!a7)
      return result;
    if (a7 < 8 || &v14[a7] > v11 && &v11[4 * a7] > v14)
    {
      v386 = 0;
      goto LABEL_604;
    }
    if (a7 >= 0x20)
    {
      v386 = a7 & 0xFFFFFFFFFFFFFFE0;
      v621 = (int8x16_t *)(v11 + 64);
      v622 = (int8x16_t *)(v14 + 16);
      _Q2.i64[1] = 0xFFFFFF0BFFFFFF0ALL;
      v623 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v624 = v622[-1];
        v625 = *v622;
        v626 = vqtbl1q_s8(*v622, (int8x16_t)xmmword_19CAECBC0);
        v627 = vqtbl1q_s8(*v622, (int8x16_t)xmmword_19CAECBD0);
        v621[-2] = vqtbl1q_s8(v624, (int8x16_t)xmmword_19CAECBE0);
        v621[-1] = vqtbl1q_s8(v624, (int8x16_t)xmmword_19CAECBF0);
        v621[-4] = vqtbl1q_s8(v624, (int8x16_t)xmmword_19CAECBC0);
        v621[-3] = vqtbl1q_s8(v624, (int8x16_t)xmmword_19CAECBD0);
        v621[2] = vqtbl1q_s8(v625, (int8x16_t)xmmword_19CAECBE0);
        v621[3] = vqtbl1q_s8(v625, (int8x16_t)xmmword_19CAECBF0);
        *v621 = v626;
        v621[1] = v627;
        v621 += 8;
        v622 += 2;
        v623 -= 32;
      }
      while (v623);
      if (v386 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_604:
        v387 = a7 - v386;
        v388 = &v14[v386];
        v389 = &v11[4 * v386];
        do
        {
          v390 = *v388++;
          *(_DWORD *)v389 = v390;
          v389 += 4;
          --v387;
        }
        while (v387);
        return result;
      }
    }
    else
    {
      v386 = 0;
    }
    v628 = v386;
    v386 = a7 & 0xFFFFFFFFFFFFFFF8;
    v629 = (int8x16_t *)&v11[4 * v628];
    v630 = &v14[v628];
    v631 = v628 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v632 = *(_QWORD *)v630;
      v630 += 8;
      _Q2.i64[0] = v632;
      v633 = vqtbl1q_s8(_Q2, (int8x16_t)xmmword_19CAECBC0);
      _Q2 = vqtbl1q_s8(_Q2, (int8x16_t)xmmword_19CAECBD0);
      *v629 = v633;
      v629[1] = _Q2;
      v629 += 2;
      v631 += 8;
    }
    while (v631);
    if (v386 == a7)
      return result;
    goto LABEL_604;
  }
LABEL_1156:
  __break(1u);
LABEL_1157:
  if (v19 == 6 && v16 == 2)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (a7)
      {
        v911 = 0;
        if (a7 < 0x10)
          goto LABEL_1167;
        if ((unint64_t)(v11 - v14) < 0x20)
          goto LABEL_1167;
        v911 = a7 & 0xFFFFFFFFFFFFFFF0;
        v912 = v11 + 16;
        v913 = (__int128 *)(v14 + 16);
        v914 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v915 = *v913;
          *(v912 - 1) = *(v913 - 1);
          *v912 = v915;
          v912 += 2;
          v913 += 2;
          v914 -= 16;
        }
        while (v914);
        if (v911 != a7)
        {
LABEL_1167:
          v916 = a7 - v911;
          v917 = 2 * v911;
          v918 = &v14[2 * v911];
          v919 = &v11[v917];
          do
          {
            v920 = *(_WORD *)v918;
            v918 += 2;
            *(_WORD *)v919 = v920;
            v919 += 2;
            --v916;
          }
          while (v916);
        }
      }
      return result;
    }
    __break(1u);
LABEL_1428:
    if (v19 == 7 && v16 == 9)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[4 * a7] <= v11 || &v11[2 * a7] <= v14))
        {
          v1120 = a7 & 0xFFFFFFFFFFFFFFF0;
          v1180 = (float16x8_t *)(v11 + 16);
          v1181 = (int32x4_t *)(v14 + 32);
          v1182 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v1184 = v1181[-2];
            v1183 = v1181[-1];
            v1186 = *v1181;
            v1185 = v1181[1];
            v1181 += 4;
            v1180[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(v1184)), vcvtq_f32_s32(v1183));
            *v1180 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_s32(v1186)), vcvtq_f32_s32(v1185));
            v1180 += 2;
            v1182 -= 16;
          }
          while (v1182);
          if (v1120 == a7)
            return result;
        }
        else
        {
          v1120 = 0;
        }
        v1121 = a7 - v1120;
        v1122 = (int *)&v14[4 * v1120];
        v1123 = &v11[2 * v1120];
        do
        {
          v1124 = *v1122++;
          _S0 = (float)v1124;
          __asm { FCVT            H0, S0 }
          *(_WORD *)v1123 = LOWORD(_S0);
          v1123 += 2;
          --v1121;
        }
        while (v1121);
        return result;
      }
      __break(1u);
      goto LABEL_1655;
    }
    goto LABEL_1445;
  }
LABEL_1176:
  if (v19 != 7 || v16 != 2)
  {
LABEL_1204:
    if (v19 == 8 && v16 == 2)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (!a7)
          return result;
        if (a7 >= 0x10 && (&v14[8 * a7] <= v11 || &v11[2 * a7] <= v14))
        {
          v938 = a7 & 0xFFFFFFFFFFFFFFF0;
          v1002 = (int16x8_t *)(v11 + 16);
          v1003 = (int32x4_t *)(v14 + 64);
          v1004 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v1005 = vuzp1q_s16((int16x8_t)vuzp1q_s32(*v1003, v1003[1]), (int16x8_t)vuzp1q_s32(v1003[2], v1003[3]));
            v1002[-1] = vuzp1q_s16((int16x8_t)vuzp1q_s32(v1003[-4], v1003[-3]), (int16x8_t)vuzp1q_s32(v1003[-2], v1003[-1]));
            *v1002 = v1005;
            v1002 += 2;
            v1003 += 8;
            v1004 -= 16;
          }
          while (v1004);
          if (v938 == a7)
            return result;
        }
        else
        {
          v938 = 0;
        }
        v939 = a7 - v938;
        v940 = &v14[8 * v938];
        v941 = &v11[2 * v938];
        do
        {
          v942 = *(_QWORD *)v940;
          v940 += 8;
          *(_WORD *)v941 = v942;
          v941 += 2;
          --v939;
        }
        while (v939);
        return result;
      }
      __break(1u);
      goto LABEL_1458;
    }
LABEL_1231:
    if (v19 == 5 && v16 == 3)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_1473;
      }
      if (!a7)
        return result;
      if (a7 < 8 || &v14[a7] > v11 && &v11[4 * a7] > v14)
      {
        v950 = 0;
        goto LABEL_1240;
      }
      if (a7 >= 0x20)
      {
        v950 = a7 & 0xFFFFFFFFFFFFFFE0;
        v1022 = (int32x4_t *)(v11 + 64);
        v1023 = (int8x8_t *)(v14 + 16);
        v1024 = a7 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v1025 = *(int8x16_t *)v1023[-2].i8;
          v1026 = *(int8x16_t *)v1023->i8;
          v1027 = vmovl_s8(*(int8x8_t *)v1025.i8);
          v1028 = vmovl_high_s8(v1025);
          v1029 = vmovl_s8(*v1023);
          v1022[-2] = vmovl_s16(*(int16x4_t *)v1028.i8);
          v1022[-1] = vmovl_high_s16(v1028);
          v1030 = vmovl_high_s8(v1026);
          v1022[-4] = vmovl_s16(*(int16x4_t *)v1027.i8);
          v1022[-3] = vmovl_high_s16(v1027);
          v1022[2] = vmovl_s16(*(int16x4_t *)v1030.i8);
          v1022[3] = vmovl_high_s16(v1030);
          *v1022 = vmovl_s16(*(int16x4_t *)v1029.i8);
          v1022[1] = vmovl_high_s16(v1029);
          v1022 += 8;
          v1023 += 4;
          v1024 -= 32;
        }
        while (v1024);
        if (v950 == a7)
          return result;
        if ((a7 & 0x18) == 0)
        {
LABEL_1240:
          v951 = a7 - v950;
          v952 = &v14[v950];
          v953 = &v11[4 * v950];
          do
          {
            v954 = (char)*v952++;
            *(_DWORD *)v953 = v954;
            v953 += 4;
            --v951;
          }
          while (v951);
          return result;
        }
      }
      else
      {
        v950 = 0;
      }
      v1031 = v950;
      v950 = a7 & 0xFFFFFFFFFFFFFFF8;
      v1032 = (int32x4_t *)&v11[4 * v1031];
      v1033 = (int8x8_t *)&v14[v1031];
      v1034 = v1031 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v1035 = *v1033++;
        v1036 = vmovl_s8(v1035);
        *v1032 = vmovl_s16(*(int16x4_t *)v1036.i8);
        v1032[1] = vmovl_high_s16(v1036);
        v1032 += 2;
        v1034 += 8;
      }
      while (v1034);
      if (v950 == a7)
        return result;
      goto LABEL_1240;
    }
    goto LABEL_1258;
  }
  if (!v11)
    return result;
  if ((a7 & 0x8000000000000000) == 0)
  {
    if (!a7)
      return result;
    if (a7 >= 0x10 && (&v14[4 * a7] <= v11 || &v11[2 * a7] <= v14))
    {
      v921 = a7 & 0xFFFFFFFFFFFFFFF0;
      v990 = (int16x8_t *)(v11 + 16);
      v991 = (int16x8_t *)(v14 + 32);
      v992 = a7 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v994 = v991[-2];
        v993 = v991[-1];
        v996 = *v991;
        v995 = v991[1];
        v991 += 4;
        v990[-1] = vuzp1q_s16(v994, v993);
        *v990 = vuzp1q_s16(v996, v995);
        v990 += 2;
        v992 -= 16;
      }
      while (v992);
      if (v921 == a7)
        return result;
    }
    else
    {
      v921 = 0;
    }
    v922 = a7 - v921;
    v923 = &v14[4 * v921];
    v924 = &v11[2 * v921];
    do
    {
      v925 = *(_DWORD *)v923;
      v923 += 4;
      *(_WORD *)v924 = v925;
      v924 += 2;
      --v922;
    }
    while (v922);
    return result;
  }
  __break(1u);
LABEL_1445:
  if (v19 == 8 && v16 == 9)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 >= 0x10 && (&v14[8 * a7] <= v11 || &v11[2 * a7] <= v14))
      {
        v1134 = a7 & 0xFFFFFFFFFFFFFFF0;
        v1193 = (float16x8_t *)(v11 + 16);
        v1194 = (int64x2_t *)(v14 + 64);
        v1195 = a7 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v1196 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(*v1194)), vcvtq_f64_s64(v1194[1]))), vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v1194[2])), vcvtq_f64_s64(v1194[3])));
          v1193[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v1194[-4])), vcvtq_f64_s64(v1194[-3]))), vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v1194[-2])), vcvtq_f64_s64(v1194[-1])));
          *v1193 = v1196;
          v1193 += 2;
          v1194 += 8;
          v1195 -= 16;
        }
        while (v1195);
        if (v1134 == a7)
          return result;
      }
      else
      {
        v1134 = 0;
      }
      v1135 = a7 - v1134;
      v1136 = (uint64_t *)&v14[8 * v1134];
      v1137 = &v11[2 * v1134];
      do
      {
        v1138 = *v1136++;
        _S0 = (float)v1138;
        __asm { FCVT            H0, S0 }
        *(_WORD *)v1137 = LOWORD(_S0);
        v1137 += 2;
        --v1135;
      }
      while (v1135);
      return result;
    }
    __break(1u);
    goto LABEL_1672;
  }
LABEL_1458:
  if (v19 != 1 || v16 != 9)
  {
LABEL_1473:
    if (v19 == 2 && v16 == 9)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) == 0)
      {
        if (a7)
        {
          v1146 = 0;
          if (a7 < 0x10)
            goto LABEL_1483;
          if ((unint64_t)(v11 - v14) < 0x20)
            goto LABEL_1483;
          v1146 = a7 & 0xFFFFFFFFFFFFFFF0;
          v1147 = (float16x8_t *)(v11 + 16);
          v1148 = (uint16x4_t *)(v14 + 16);
          v1149 = a7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v1150 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(*v1148))), vcvtq_f32_u32(vmovl_high_u16(*(uint16x8_t *)v1148->i8)));
            v1147[-1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(v1148[-2]))), vcvtq_f32_u32(vmovl_high_u16(*(uint16x8_t *)v1148[-2].i8)));
            *v1147 = v1150;
            v1147 += 2;
            v1148 += 4;
            v1149 -= 16;
          }
          while (v1149);
          if (v1146 != a7)
          {
LABEL_1483:
            v1151 = a7 - v1146;
            v1152 = 2 * v1146;
            v1153 = &v14[2 * v1146];
            v1154 = &v11[v1152];
            do
            {
              v1155 = *(unsigned __int16 *)v1153;
              v1153 += 2;
              _S0 = (float)v1155;
              __asm { FCVT            H0, S0 }
              *(_WORD *)v1154 = LOWORD(_S0);
              v1154 += 2;
              --v1151;
            }
            while (v1151);
          }
        }
        return result;
      }
      __break(1u);
      goto LABEL_1708;
    }
    goto LABEL_1495;
  }
  if (!v11)
    return result;
  if ((a7 & 0x8000000000000000) == 0)
  {
    if (!a7)
      return result;
    if (a7 < 8 || &v14[a7] > v11 && &v11[2 * a7] > v14)
    {
      v1140 = 0;
      goto LABEL_1467;
    }
    if (a7 >= 0x20)
    {
      v1140 = a7 & 0xFFFFFFFFFFFFFFE0;
      v1207 = (float16x8_t *)(v11 + 32);
      v1208 = (uint8x8_t *)(v14 + 16);
      v1209 = a7 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v1210 = *(uint8x16_t *)v1208[-2].i8;
        v1211 = vmovl_u8(*(uint8x8_t *)v1210.i8);
        v1212 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v1211.i8))), vcvtq_f32_u32(vmovl_high_u16(v1211)));
        v1213 = vmovl_high_u8(v1210);
        v1214 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v1213.i8))), vcvtq_f32_u32(vmovl_high_u16(v1213)));
        v1215 = vmovl_u8(*v1208);
        v1216 = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v1215.i8))), vcvtq_f32_u32(vmovl_high_u16(v1215)));
        v1217 = vmovl_high_u8(*(uint8x16_t *)v1208->i8);
        v1207[-2] = v1212;
        v1207[-1] = v1214;
        *v1207 = v1216;
        v1207[1] = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v1217.i8))), vcvtq_f32_u32(vmovl_high_u16(v1217)));
        v1207 += 4;
        v1208 += 4;
        v1209 -= 32;
      }
      while (v1209);
      if (v1140 == a7)
        return result;
      if ((a7 & 0x18) == 0)
      {
LABEL_1467:
        v1141 = a7 - v1140;
        v1142 = &v14[v1140];
        v1143 = &v11[2 * v1140];
        do
        {
          v1144 = *v1142++;
          _S0 = (float)v1144;
          __asm { FCVT            H0, S0 }
          *(_WORD *)v1143 = LOWORD(_S0);
          v1143 += 2;
          --v1141;
        }
        while (v1141);
        return result;
      }
    }
    else
    {
      v1140 = 0;
    }
    v1218 = v1140;
    v1140 = a7 & 0xFFFFFFFFFFFFFFF8;
    v1219 = (float16x8_t *)&v11[2 * v1218];
    v1220 = (uint8x8_t *)&v14[v1218];
    v1221 = v1218 - (a7 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v1222 = *v1220++;
      v1223 = vmovl_u8(v1222);
      *v1219++ = vcvt_hight_f16_f32((int16x4_t)vcvt_f16_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v1223.i8))), vcvtq_f32_u32(vmovl_high_u16(v1223)));
      v1221 += 8;
    }
    while (v1221);
    if (v1140 == a7)
      return result;
    goto LABEL_1467;
  }
  __break(1u);
LABEL_1689:
  if (v19 == 6 && v16 == 11)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) == 0)
    {
      if (!a7)
        return result;
      if (a7 < 8 || &v14[2 * a7] > v11 && &v11[8 * a7] > v14)
      {
        v1309 = 0;
        goto LABEL_1771;
      }
LABEL_1768:
      v1309 = a7 & 0xFFFFFFFFFFFFFFF8;
      v1340 = a7 & 0xFFFFFFFFFFFFFFF8;
      v1341 = (int16x8_t *)v14;
      v1342 = (float64x2_t *)v11;
      do
      {
        v1343 = *v1341++;
        v1344 = vmovl_s16(*(int16x4_t *)v1343.i8);
        v1345.i64[0] = v1344.i32[0];
        v1345.i64[1] = v1344.i32[1];
        v1346 = vcvtq_f64_s64(v1345);
        v1345.i64[0] = v1344.i32[2];
        v1345.i64[1] = v1344.i32[3];
        v1347 = v1345;
        v1348 = vmovl_high_s16(v1343);
        v1345.i64[0] = v1348.i32[0];
        v1345.i64[1] = v1348.i32[1];
        v1349 = vcvtq_f64_s64(v1345);
        v1345.i64[0] = v1348.i32[2];
        v1345.i64[1] = v1348.i32[3];
        v1342[2] = v1349;
        v1342[3] = vcvtq_f64_s64(v1345);
        *v1342 = v1346;
        v1342[1] = vcvtq_f64_s64(v1347);
        v1342 += 4;
        v1340 -= 8;
      }
      while (v1340);
      if (v1309 == a7)
        return result;
LABEL_1771:
      v1350 = a7 - v1309;
      v1351 = &v14[2 * v1309];
      v1352 = (double *)&v11[8 * v1309];
      do
      {
        v1353 = *(__int16 *)v1351;
        v1351 += 2;
        *v1352++ = (double)v1353;
        --v1350;
      }
      while (v1350);
      return result;
    }
LABEL_1767:
    __break(1u);
    goto LABEL_1768;
  }
LABEL_1708:
  if (v19 == 7 && v16 == 11)
  {
    if (!v11)
      return result;
    if ((a7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (!a7)
        return result;
      if (a7 < 8 || &v14[4 * a7] > v11 && &v11[8 * a7] > v14)
      {
        v1320 = 0;
        goto LABEL_1778;
      }
    }
    v1320 = a7 & 0xFFFFFFFFFFFFFFF8;
    v1354 = (float64x2_t *)(v11 + 32);
    v1355 = v14 + 16;
    v1356 = a7 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v1357 = *((_OWORD *)v1355 - 1);
      v1358.i64[0] = (int)v1357;
      v1358.i64[1] = SDWORD1(v1357);
      v1359 = vcvtq_f64_s64(v1358);
      v1358.i64[0] = SDWORD2(v1357);
      v1358.i64[1] = SHIDWORD(v1357);
      v1360 = vcvtq_f64_s64(v1358);
      v1358.i64[0] = (int)*(_OWORD *)v1355;
      v1358.i64[1] = (int)HIDWORD(*(_QWORD *)v1355);
      v1361 = vcvtq_f64_s64(v1358);
      v1358.i64[0] = (int)*((_QWORD *)v1355 + 1);
      v1358.i64[1] = (int)HIDWORD(*(_OWORD *)v1355);
      v1354[-2] = v1359;
      v1354[-1] = v1360;
      *v1354 = v1361;
      v1354[1] = vcvtq_f64_s64(v1358);
      v1354 += 4;
      v1355 += 32;
      v1356 -= 8;
    }
    while (v1356);
    if (v1320 == a7)
      return result;
LABEL_1778:
    v1362 = a7 - v1320;
    v1363 = (int *)&v14[4 * v1320];
    v1364 = (double *)&v11[8 * v1320];
    do
    {
      v1365 = *v1363++;
      *v1364++ = (double)v1365;
      --v1362;
    }
    while (v1362);
    return result;
  }
LABEL_1718:
  if (v19 != 8 || v16 != 11)
  {
    if (v19 == 1 && v16 == 11)
    {
      if (!v11)
        return result;
      if ((a7 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        if (!a7)
          return result;
        if (a7 < 8 || &v14[a7] > v11 && &v11[8 * a7] > v14)
        {
          v1338 = 0;
          goto LABEL_1816;
        }
      }
      if (a7 >= 0x10)
      {
        v1338 = a7 & 0xFFFFFFFFFFFFFFF0;
        v1425 = a7 & 0xFFFFFFFFFFFFFFF0;
        v1426 = (int8x16_t *)v14;
        v1427 = (float64x2_t *)v11;
        do
        {
          v1428 = *v1426++;
          v1429 = vextq_s8(v1428, v1428, 8uLL).u64[0];
          v1430.i32[0] = v1429;
          v1430.i32[1] = BYTE1(v1429);
          v1431 = vand_s8(v1430, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1431.u32[0];
          v1432.i64[1] = v1431.u32[1];
          v1433 = vcvtq_f64_u64(v1432);
          v1434.i32[0] = BYTE2(v1429);
          v1434.i32[1] = BYTE3(v1429);
          v1435 = vand_s8(v1434, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1435.u32[0];
          v1432.i64[1] = v1435.u32[1];
          v1436.i32[0] = BYTE4(v1429);
          v1437 = vcvtq_f64_u64(v1432);
          v1436.i32[1] = BYTE5(v1429);
          v1438 = vand_s8(v1436, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1438.u32[0];
          v1432.i64[1] = v1438.u32[1];
          v1439.i32[0] = BYTE6(v1429);
          v1439.i32[1] = HIBYTE(v1429);
          v1440 = vcvtq_f64_u64(v1432);
          v1441 = vand_s8(v1439, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1441.u32[0];
          v1432.i64[1] = v1441.u32[1];
          v1442 = v1432;
          v1439.i32[0] = v1428.u8[0];
          v1439.i32[1] = v1428.u8[1];
          v1443 = vand_s8(v1439, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1443.u32[0];
          v1432.i64[1] = v1443.u32[1];
          v1444 = vcvtq_f64_u64(v1432);
          v1445.i32[0] = v1428.u8[2];
          v1445.i32[1] = v1428.u8[3];
          v1446 = vand_s8(v1445, (int8x8_t)0xFF000000FFLL);
          v1447.i32[0] = v1428.u8[4];
          v1447.i32[1] = v1428.u8[5];
          v1448 = vand_s8(v1447, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1448.u32[0];
          v1432.i64[1] = v1448.u32[1];
          v1449 = vcvtq_f64_u64(v1432);
          v1450.i32[0] = v1428.u8[6];
          v1450.i32[1] = v1428.u8[7];
          v1451 = vand_s8(v1450, (int8x8_t)0xFF000000FFLL);
          v1432.i64[0] = v1451.u32[0];
          v1432.i64[1] = v1451.u32[1];
          v1427[2] = v1449;
          v1427[3] = vcvtq_f64_u64(v1432);
          v1432.i64[0] = v1446.u32[0];
          v1432.i64[1] = v1446.u32[1];
          *v1427 = v1444;
          v1427[1] = vcvtq_f64_u64(v1432);
          v1427[6] = v1440;
          v1427[7] = vcvtq_f64_u64(v1442);
          v1427[4] = v1433;
          v1427[5] = v1437;
          v1427 += 8;
          v1425 -= 16;
        }
        while (v1425);
        if (v1338 == a7)
          return result;
        if ((a7 & 8) == 0)
        {
LABEL_1816:
          v1469 = a7 - v1338;
          v1470 = &v14[v1338];
          v1471 = (double *)&v11[8 * v1338];
          do
          {
            v1472 = *v1470++;
            *v1471++ = (double)v1472;
            --v1469;
          }
          while (v1469);
          return result;
        }
      }
      else
      {
        v1338 = 0;
      }
      v1452 = v1338;
      v1338 = a7 & 0xFFFFFFFFFFFFFFF8;
      v1453 = (float64x2_t *)&v11[8 * v1452];
      v1454 = &v14[v1452];
      v1455 = v1452 - (a7 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v1456 = *(_QWORD *)v1454;
        v1454 += 8;
        v1457.i32[0] = v1456;
        v1457.i32[1] = BYTE1(v1456);
        v1458 = vand_s8(v1457, (int8x8_t)0xFF000000FFLL);
        v1459.i64[0] = v1458.u32[0];
        v1459.i64[1] = v1458.u32[1];
        v1460.i32[0] = BYTE2(v1456);
        v1460.i32[1] = BYTE3(v1456);
        v1461 = vcvtq_f64_u64(v1459);
        v1462 = vand_s8(v1460, (int8x8_t)0xFF000000FFLL);
        v1459.i64[0] = v1462.u32[0];
        v1459.i64[1] = v1462.u32[1];
        v1463 = vcvtq_f64_u64(v1459);
        v1464.i32[0] = BYTE4(v1456);
        v1464.i32[1] = BYTE5(v1456);
        v1465 = vand_s8(v1464, (int8x8_t)0xFF000000FFLL);
        v1459.i64[0] = v1465.u32[0];
        v1459.i64[1] = v1465.u32[1];
        v1466.i32[0] = BYTE6(v1456);
        v1467 = vcvtq_f64_u64(v1459);
        v1466.i32[1] = HIBYTE(v1456);
        v1468 = vand_s8(v1466, (int8x8_t)0xFF000000FFLL);
        v1459.i64[0] = v1468.u32[0];
        v1459.i64[1] = v1468.u32[1];
        v1453[2] = v1467;
        v1453[3] = vcvtq_f64_u64(v1459);
        *v1453 = v1461;
        v1453[1] = v1463;
        v1453 += 4;
        v1455 += 8;
      }
      while (v1455);
      if (v1338 == a7)
        return result;
      goto LABEL_1816;
    }
    goto LABEL_1751;
  }
  if (!v11)
    return result;
  if ((a7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_1782;
  }
  if (a7)
  {
    v1321 = 0;
    if (a7 < 4)
      goto LABEL_1728;
    if ((unint64_t)(v11 - v14) < 0x20)
      goto LABEL_1728;
    v1321 = a7 & 0xFFFFFFFFFFFFFFFCLL;
    v1322 = (float64x2_t *)(v11 + 16);
    v1323 = (int64x2_t *)(v14 + 16);
    v1324 = a7 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v1325 = vcvtq_f64_s64(*v1323);
      v1322[-1] = vcvtq_f64_s64(v1323[-1]);
      *v1322 = v1325;
      v1322 += 2;
      v1323 += 2;
      v1324 -= 4;
    }
    while (v1324);
    if (v1321 != a7)
    {
LABEL_1728:
      v1326 = a7 - v1321;
      v1327 = 8 * v1321;
      v1328 = (uint64_t *)&v14[8 * v1321];
      v1329 = (double *)&v11[v1327];
      do
      {
        v1330 = *v1328++;
        *v1329++ = (double)v1330;
        --v1326;
      }
      while (v1326);
    }
  }
  return result;
}

uint64_t sub_19C59A1E0(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t (*a4)(void))
{
  uint64_t v4;

  if (a3[1] >= a2)
    v4 = a2;
  else
    v4 = a3[1];
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*a3)
    return a4();
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_19C59A218@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  __asm { FCVT            S0, H0 }
  if (_S0 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (_S0 < 128.0)
  {
    *a3 = (int)_S0;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59A3E8@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  __asm { FCVT            S0, H0 }
  if (_S0 <= -32800.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (_S0 < 32768.0)
  {
    *a3 = (int)_S0;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59A5BC@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    *a3 = (int)_S0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19C59A768@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    *a3 = (uint64_t)_S0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19C59A914@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  __asm { FCVT            S0, H0 }
  if (_S0 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (_S0 < 256.0)
  {
    *a3 = (int)_S0;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59AAE4@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    if (_S0 > -1.0)
    {
      *a3 = (int)_S0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C59ACA0@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    if (_S0 > -1.0)
    {
      *a3 = _S0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C59AE5C@<X0>(__int16 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v23;
  __int16 v24;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _H8 = *a1;
  v24 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    __asm { FCVT            S0, H8 }
    _S0 = roundf(_S0);
LABEL_11:
    __asm { FCVT            H0, S0 }
    goto LABEL_12;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = rintf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
LABEL_6:
    __asm { FCVT            S0, H8 }
    _S0 = ceilf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
LABEL_8:
    __asm { FCVT            S0, H8 }
    _S0 = floorf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    __asm { FCVT            S0, H8 }
    _S0 = truncf(_S0);
    goto LABEL_11;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    if ((_H8 & 0x8000) == 0)
      goto LABEL_6;
    goto LABEL_8;
  }
  sub_19CAAA334();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOWORD(_S0) = v24;
LABEL_12:
  if ((~LODWORD(_S0) & 0x7C00) != 0)
  {
    __asm { FCVT            S0, H0 }
    if (_S0 > -1.0)
    {
      *a3 = (unint64_t)_S0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C59B018@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 128.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59B1D8@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -32769.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 32768.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59B39C@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -2147500000.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 2147500000.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59B560@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 9.2234e18)
  {
    *a3 = (uint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59B724@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 256.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59B8E4@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 65536.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59BAA4@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 4295000000.0)
  {
    *a3 = v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59BC64@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  uint64_t result;
  float v12;
  float v13;
  uint64_t v14;
  float v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = roundf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rintf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceilf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floorf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = truncf(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceilf(v10);
    v13 = floorf(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B84();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 1.8447e19)
  {
    *a3 = (unint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59BE24@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 128.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59BFEC@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -32769.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 32768.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59C1B4@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -2147483650.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 2147483650.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59C37C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 9.22337204e18)
  {
    *a3 = (uint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59C544@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 256.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59C704@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 65536.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59C8C4@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 4294967300.0)
  {
    *a3 = v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59CA84@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t result;
  double v12;
  double v13;
  uint64_t v14;
  double v15;

  v6 = sub_19CAAA1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)result == *MEMORY[0x1E0DED4F0])
  {
    v12 = round(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E8])
  {
    v12 = rint(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED500])
  {
    v12 = ceil(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED508])
  {
    v12 = floor(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4D8])
  {
    v12 = trunc(v10);
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DED4E0])
  {
    v12 = ceil(v10);
    v13 = floor(v10);
    if (v10 < 0.0)
      v12 = v13;
  }
  else
  {
    sub_19CAA9B6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
  }
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 1.84467441e19)
  {
    *a3 = (unint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_19C59CC44(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t (*a4)(void))
{
  if (a3[1] != a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*a3)
    return a4();
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_19C59CC84(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  __int16 v50;
  int v51;
  int v52;
  unsigned int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(void);
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v126 = a7;
  v124 = a3;
  v125 = a6;
  v11 = sub_19CAA94D0();
  v127 = *(_QWORD *)(v11 - 8);
  v128 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v120 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v119 = (char *)&v107 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v118 = (char *)&v107 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v117 = (char *)&v107 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v116 = (char *)&v107 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v114 = (char *)&v107 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v115 = (char *)&v107 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v113 = (char *)&v107 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v112 = (char *)&v107 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v111 = (char *)&v107 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v110 = (char *)&v107 - v33;
  MEMORY[0x1E0C80A78](v32);
  v109 = (char *)&v107 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424770);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_19CAAA1B4();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v107 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424778);
  v43 = MEMORY[0x1E0C80A78](v42);
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v107 - v45;
  v47 = a5 - a4;
  v123 = a4;
  if (a4)
    v48 = v47;
  else
    v48 = 0;
  if (a1)
  {
    if (v48 < a2 - a1)
      return 0;
  }
  else if (v48 < 0)
  {
    return 0;
  }
  v107 = v48;
  v108 = v44;
  v121 = a2;
  v122 = a1;
  v49 = v125;
  v50 = v124;
  v124 = v124;
  v51 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v126, v38);
  v52 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v41, v38);
  if (v52 == *MEMORY[0x1E0DED4E8])
  {
    v53 = (unsigned int *)MEMORY[0x1E0DE9840];
  }
  else
  {
    if (v52 != *MEMORY[0x1E0DED4D8])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v46, 1, 1, v128);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
      goto LABEL_14;
    }
    v53 = (unsigned int *)MEMORY[0x1E0DE9838];
  }
  v55 = v127;
  v54 = v128;
  (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v46, *v53, v128);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v46, 0, 1, v54);
LABEL_14:
  v56 = (uint64_t)&v37[*(int *)(v35 + 64)];
  *v37 = v124;
  v37[1] = HIBYTE(v50) & 1;
  v37[2] = v51;
  v37[3] = HIBYTE(v49) & 1;
  sub_19C59E134((uint64_t)v46, v56);
  if (v50 == 5 && v49 == 10 || !(_BYTE)v50 && v49 == 10)
  {
    sub_19C5725E8(v56, &qword_1EE424778);
    v57 = v47 / 4;
    v58 = v122;
    if (!v123)
      v57 = 0;
    v131 = v123;
    v132 = v57;
    if (v122)
      v59 = v121 - v122;
    else
      v59 = 0;
    v60 = (uint64_t (*)(void))MEMORY[0x1E0C8C5C8];
LABEL_24:
    sub_19C59CC44(v58, v59, &v131, v60);
    return 1;
  }
  v62 = v121;
  if (v50 == 6 && v49 == 10)
  {
    v63 = v47 / 4;
    v64 = v122;
    if (!v123)
      v63 = 0;
    v131 = v123;
    v132 = v63;
    if (v122)
      v65 = (v121 - v122) / 2;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C598];
LABEL_55:
    sub_19C59CC44(v64, v65, &v131, v68);
LABEL_56:
    sub_19C5725E8(v56, &qword_1EE424778);
    return 1;
  }
  if (v50 == 7 && v49 == 10)
  {
    v66 = v47 / 4;
    v64 = v122;
    if (!v123)
      v66 = 0;
    v131 = v123;
    v132 = v66;
    if (v122)
      v65 = (v121 - v122) / 4;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C5B8];
    goto LABEL_55;
  }
  if (v50 == 1 && v49 == 10)
  {
    sub_19C5725E8(v56, &qword_1EE424778);
    v67 = v47 / 4;
    v58 = v122;
    if (!v123)
      v67 = 0;
    v131 = v123;
    v132 = v67;
    if (v122)
      v59 = v62 - v122;
    else
      v59 = 0;
    v60 = (uint64_t (*)(void))MEMORY[0x1E0C8C608];
    goto LABEL_24;
  }
  if (v50 == 2 && v49 == 10)
  {
    v69 = v47 / 4;
    v64 = v122;
    if (!v123)
      v69 = 0;
    v131 = v123;
    v132 = v69;
    if (v122)
      v65 = (v121 - v122) / 2;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C5E8];
    goto LABEL_55;
  }
  if (v50 == 3 && v49 == 10)
  {
    v70 = v47 / 4;
    v64 = v122;
    if (!v123)
      v70 = 0;
    v131 = v123;
    v132 = v70;
    if (v122)
      v65 = (v121 - v122) / 4;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C5F8];
    goto LABEL_55;
  }
  if ((_BYTE)v50)
    v71 = v50 == 5;
  else
    v71 = 1;
  if (v71 && v49 == 11)
  {
    sub_19C5725E8(v56, &qword_1EE424778);
    v72 = v47 / 8;
    v58 = v122;
    if (!v123)
      v72 = 0;
    v131 = v123;
    v132 = v72;
    if (v122)
      v59 = v62 - v122;
    else
      v59 = 0;
    v60 = (uint64_t (*)(void))MEMORY[0x1E0C8C5D8];
    goto LABEL_24;
  }
  if (v50 == 6 && v49 == 11)
  {
    v73 = v47 / 8;
    v64 = v122;
    if (!v123)
      v73 = 0;
    v131 = v123;
    v132 = v73;
    if (v122)
      v65 = (v121 - v122) / 2;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C5A0];
    goto LABEL_55;
  }
  if (v50 == 7 && v49 == 11)
  {
    v74 = v47 / 8;
    v64 = v122;
    if (!v123)
      v74 = 0;
    v131 = v123;
    v132 = v74;
    if (v122)
      v65 = (v121 - v122) / 4;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C5C0];
    goto LABEL_55;
  }
  if (v50 == 1 && v49 == 11)
  {
    sub_19C5725E8(v56, &qword_1EE424778);
    v75 = v47 / 8;
    v58 = v122;
    if (!v123)
      v75 = 0;
    v131 = v123;
    v132 = v75;
    if (v122)
      v59 = v62 - v122;
    else
      v59 = 0;
    v60 = (uint64_t (*)(void))MEMORY[0x1E0C8C618];
    goto LABEL_24;
  }
  if (v50 == 2 && v49 == 11)
  {
    v76 = v47 / 8;
    v64 = v122;
    if (!v123)
      v76 = 0;
    v131 = v123;
    v132 = v76;
    if (v122)
      v65 = (v121 - v122) / 2;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C5F0];
    goto LABEL_55;
  }
  if (v50 == 3 && v49 == 11)
  {
    v77 = v47 / 8;
    if (!v123)
      v77 = 0;
    v131 = v123;
    v132 = v77;
    if (v122)
      v65 = (v121 - v122) / 4;
    else
      v65 = 0;
    v68 = (uint64_t (*)(void))MEMORY[0x1E0C8C600];
    v64 = v122;
    goto LABEL_55;
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v56, 1, v128) != 1)
  {
    sub_19C59E17C(v56, v108);
    if (v124 == 11)
    {
      switch(v51)
      {
        case 1:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v118, v108, v128);
          v131 = v123;
          v132 = v107;
          v82 = v122;
          if (v122)
            v82 = (v121 - v122) / 8;
          v129 = v122;
          v130 = v82;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247A0);
          sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4247A8, &qword_1EE4247A0, MEMORY[0x1E0DE9B40]);
          v79 = v118;
          sub_19CAA9500();
          break;
        case 2:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v119, v108, v128);
          if (v47 >= 0)
            v95 = v47;
          else
            v95 = v47 + 1;
          v96 = v95 >> 1;
          if (!v123)
            v96 = 0;
          v131 = v123;
          v132 = v96;
          v97 = v122;
          if (v122)
            v97 = (v121 - v122) / 8;
          v129 = v122;
          v130 = v97;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424790);
          sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE424798, &qword_1EE424790, MEMORY[0x1E0DE9B40]);
          v79 = v119;
          sub_19CAA950C();
          break;
        case 3:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v120, v108, v128);
          v98 = v47 / 4;
          if (!v123)
            v98 = 0;
          v131 = v123;
          v132 = v98;
          v99 = v122;
          if (v122)
            v99 = (v121 - v122) / 8;
          v129 = v122;
          v130 = v99;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424780);
          sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE424788, &qword_1EE424780, MEMORY[0x1E0DE9B40]);
          v79 = v120;
          sub_19CAA9518();
          break;
        case 5:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v114, v108, v128);
          v131 = v123;
          v132 = v107;
          v101 = v122;
          if (v122)
            v101 = (v121 - v122) / 8;
          v129 = v122;
          v130 = v101;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247C0);
          sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4247C8, &qword_1EE4247C0, MEMORY[0x1E0DE9B40]);
          v79 = v114;
          sub_19CAA94DC();
          break;
        case 6:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v116, v108, v128);
          if (v47 >= 0)
            v102 = v47;
          else
            v102 = v47 + 1;
          v103 = v102 >> 1;
          if (!v123)
            v103 = 0;
          v131 = v123;
          v132 = v103;
          v104 = v122;
          if (v122)
            v104 = (v121 - v122) / 8;
          v129 = v122;
          v130 = v104;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247B0);
          sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4247B8, &qword_1EE4247B0, MEMORY[0x1E0DE9B40]);
          v79 = v116;
          sub_19CAA94E8();
          break;
        case 7:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v117, v108, v128);
          v105 = v47 / 4;
          if (!v123)
            v105 = 0;
          v131 = v123;
          v132 = v105;
          v106 = v122;
          if (v122)
            v106 = (v121 - v122) / 8;
          v129 = v122;
          v130 = v106;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4234A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246D0);
          sub_19C4D60FC(qword_1EE4246E8, &qword_1EE4234A8, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4246E0, &qword_1EE4246D0, MEMORY[0x1E0DE9B40]);
          v79 = v117;
          sub_19CAA94F4();
          break;
        default:
          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v108, v128);
          goto LABEL_183;
      }
LABEL_209:
      (*(void (**)(char *, uint64_t))(v127 + 8))(v79, v128);
      goto LABEL_56;
    }
    if (v124 == 10)
    {
      switch(v51)
      {
        case 1:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v112, v108, v128);
          v131 = v123;
          v132 = v107;
          v78 = v122;
          if (v122)
            v78 = (v121 - v122) / 4;
          v129 = v122;
          v130 = v78;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247A0);
          sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4247A8, &qword_1EE4247A0, MEMORY[0x1E0DE9B40]);
          v79 = v112;
          sub_19CAA9548();
          goto LABEL_209;
        case 2:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v113, v108, v128);
          if (v47 >= 0)
            v84 = v47;
          else
            v84 = v47 + 1;
          v85 = v84 >> 1;
          if (!v123)
            v85 = 0;
          v131 = v123;
          v132 = v85;
          v86 = v122;
          if (v122)
            v86 = (v121 - v122) / 4;
          v129 = v122;
          v130 = v86;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424790);
          sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE424798, &qword_1EE424790, MEMORY[0x1E0DE9B40]);
          v79 = v113;
          sub_19CAA9554();
          goto LABEL_209;
        case 3:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v115, v108, v128);
          v87 = v47 / 4;
          if (!v123)
            v87 = 0;
          v131 = v123;
          v132 = v87;
          v88 = v122;
          if (v122)
            v88 = (v121 - v122) / 4;
          v129 = v122;
          v130 = v88;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424780);
          sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE424788, &qword_1EE424780, MEMORY[0x1E0DE9B40]);
          v79 = v115;
          sub_19CAA9560();
          goto LABEL_209;
        case 5:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v109, v108, v128);
          v131 = v123;
          v132 = v107;
          v89 = v122;
          if (v122)
            v89 = (v121 - v122) / 4;
          v129 = v122;
          v130 = v89;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247C0);
          sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4247C8, &qword_1EE4247C0, MEMORY[0x1E0DE9B40]);
          v79 = v109;
          sub_19CAA9524();
          goto LABEL_209;
        case 6:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v110, v108, v128);
          if (v47 >= 0)
            v90 = v47;
          else
            v90 = v47 + 1;
          v91 = v90 >> 1;
          if (!v123)
            v91 = 0;
          v131 = v123;
          v132 = v91;
          v92 = v122;
          if (v122)
            v92 = (v121 - v122) / 4;
          v129 = v122;
          v130 = v92;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247B0);
          sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4247B8, &qword_1EE4247B0, MEMORY[0x1E0DE9B40]);
          v79 = v110;
          sub_19CAA9530();
          goto LABEL_209;
        case 7:
          (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v111, v108, v128);
          v93 = v47 / 4;
          if (!v123)
            v93 = 0;
          v131 = v123;
          v132 = v93;
          v94 = v122;
          if (v122)
            v94 = (v121 - v122) / 4;
          v129 = v122;
          v130 = v94;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423490);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4246D0);
          sub_19C4D60FC(&qword_1EE4246D8, &qword_1EE423490, MEMORY[0x1E0DE9AB0]);
          sub_19C4D60FC(&qword_1EE4246E0, &qword_1EE4246D0, MEMORY[0x1E0DE9B40]);
          v79 = v111;
          sub_19CAA953C();
          goto LABEL_209;
        default:
          break;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v108, v128);
  }
  if (v124 == 11)
  {
LABEL_183:
    if (v49 == 10)
    {
      v100 = v47 / 4;
      if (!v123)
        v100 = 0;
      v131 = v123;
      v132 = v100;
      if (v122)
        v81 = (v121 - v122) / 8;
      else
        v81 = 0;
      v83 = (uint64_t (*)(void))MEMORY[0x1E0C8C458];
      goto LABEL_192;
    }
  }
  else if (v124 == 10 && v49 == 11)
  {
    v80 = v47 / 8;
    if (!v123)
      v80 = 0;
    v131 = v123;
    v132 = v80;
    if (v122)
      v81 = (v121 - v122) / 4;
    else
      v81 = 0;
    v83 = (uint64_t (*)(void))MEMORY[0x1E0C8C918];
LABEL_192:
    sub_19C59A1E0(v122, v81, &v131, v83);
    goto LABEL_56;
  }
  sub_19C5725E8((uint64_t)v37, &qword_1EE424770);
  return 0;
}

uint64_t sub_19C59E134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19C59E17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for MLTensorProperties(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MLTensorProperties()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for MLTensorProperties(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for MLTensorProperties(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLTensorProperties(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MLTensorProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLTensorProperties()
{
  return &type metadata for MLTensorProperties;
}

uint64_t sub_19C59E344(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  _QWORD v5[2];

  sub_19CAA9F2C();
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x1A1AD452C](v3, MEMORY[0x1E0DEB418]);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19C59EBA4(a2);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  return v5[0];
}

uint64_t sub_19C59E434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_19CAAA298();
  v2 = *(_QWORD *)(a1 + 16);
  sub_19CAAA2A4();
  if (v2)
  {
    v3 = a1 + 32;
    do
    {
      v3 += 8;
      sub_19CAAA2A4();
      --v2;
    }
    while (v2);
  }
  sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

uint64_t sub_19C59E4B0()
{
  uint64_t *v0;

  return sub_19C59E434(*v0);
}

uint64_t sub_19C59E4D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_19CAAA2A4();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_19CAAA2A4();
      --v2;
    }
    while (v2);
  }
  return sub_19CAAA2A4();
}

uint64_t sub_19C59E52C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_19CAAA298();
  v2 = *(_QWORD *)(v1 + 16);
  sub_19CAAA2A4();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_19CAAA2A4();
      --v2;
    }
    while (v2);
  }
  sub_19CAAA2A4();
  return sub_19CAAA2C8();
}

uint64_t sub_19C59E5A4()
{
  uint64_t v0;

  return sub_19C59E344(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_19C59E5C4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_19C4D4494(*(_QWORD **)a1, *(_QWORD **)a2) & (v2 == v3);
}

unint64_t sub_19C59E608()
{
  unint64_t result;

  result = qword_1EE4247D0;
  if (!qword_1EE4247D0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECC34, &type metadata for MLTensorProperties);
    atomic_store(result, (unint64_t *)&qword_1EE4247D0);
  }
  return result;
}

uint64_t sub_19C59E650(uint64_t a1, char a2)
{
  int v3;
  int v4;
  uint64_t result;

  if (swift_dynamicCastMetatype())
  {
    v3 = 9;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 10;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 5;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 6;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 7;
  }
  else if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    v3 = 8;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 1;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 2;
  }
  else if (swift_dynamicCastMetatype())
  {
    v3 = 3;
  }
  else if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    v3 = 4;
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      sub_19CAA9F2C();
      swift_bridgeObjectRelease();
      sub_19CAAA3A0();
      sub_19CAA992C();
      swift_bridgeObjectRelease();
      sub_19CAA992C();
      result = sub_19CAAA0B8();
      __break(1u);
      return result;
    }
    v3 = 0;
  }
  if ((a2 & 1) != 0)
    v4 = 256;
  else
    v4 = 0;
  return v4 | v3;
}

unint64_t sub_19C59E884@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_19C59F148(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_19C59E8AC()
{
  sub_19C59F158();
  return sub_19CAA99D4();
}

uint64_t sub_19C59E908()
{
  sub_19C59F158();
  return sub_19CAA99C8();
}

uint64_t sub_19C59E954(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19C59F420();
  sub_19CAAA328();
  v10[15] = a2;
  v10[14] = 0;
  sub_19C59F4A8();
  sub_19CAAA178();
  if (!v2)
  {
    v10[13] = 1;
    sub_19CAAA160();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19C59EA80()
{
  _BYTE *v0;

  if (*v0)
    return 0x796C6B6165577369;
  else
    return 0x6570795461746164;
}

uint64_t sub_19C59EAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19C59F19C(a1, a2);
  *a3 = result;
  return result;
}

void sub_19C59EAEC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19C59EAF8()
{
  sub_19C59F420();
  return sub_19CAAA358();
}

uint64_t sub_19C59EB20()
{
  sub_19C59F420();
  return sub_19CAAA364();
}

uint64_t sub_19C59EB48@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_19C59F2B0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_19C59EB78(_QWORD *a1)
{
  char *v1;

  return sub_19C59E954(a1, *v1);
}

uint64_t sub_19C59EBA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19C59EBD0 + 4 * byte_19CAECCD0[a1]))(1819242338, 0xE400000000000000);
}

uint64_t sub_19C59EBD0()
{
  return 0x38746E6975;
}

uint64_t sub_19C59EBE4()
{
  return 0x3631746E6975;
}

uint64_t sub_19C59EBF8()
{
  return 0x3233746E6975;
}

uint64_t sub_19C59EC0C()
{
  return 0x3436746E6975;
}

uint64_t sub_19C59EC20()
{
  return 947154537;
}

uint64_t sub_19C59EC2C()
{
  return 0x3631746E69;
}

uint64_t sub_19C59EC40()
{
  return 0x3233746E69;
}

uint64_t sub_19C59EC54()
{
  return 0x3436746E69;
}

uint64_t sub_19C59EC68()
{
  return 0x363174616F6C66;
}

uint64_t sub_19C59EC80()
{
  return 0x323374616F6C66;
}

uint64_t sub_19C59EC98()
{
  return 0x343674616F6C66;
}

uint64_t sub_19C59ECB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19C59ECDC + 4 * byte_19CAECCDC[a1]))(1819242338, 0xE400000000000000);
}

uint64_t sub_19C59ECDC()
{
  return 0x38746E6975;
}

uint64_t sub_19C59ECF0()
{
  return 0x3631746E6975;
}

uint64_t sub_19C59ED04()
{
  return 0x3233746E6975;
}

uint64_t sub_19C59ED18()
{
  return 0x3436746E6975;
}

uint64_t sub_19C59ED2C()
{
  return 947154537;
}

uint64_t sub_19C59ED38()
{
  return 0x3631746E69;
}

uint64_t sub_19C59ED4C()
{
  return 0x3233746E69;
}

uint64_t sub_19C59ED60()
{
  return 0x3436746E69;
}

uint64_t sub_19C59ED74()
{
  return 0x363174616F6C66;
}

uint64_t sub_19C59ED8C()
{
  return 0x323374616F6C66;
}

uint64_t sub_19C59EDA4()
{
  return 0x343674616F6C66;
}

uint64_t sub_19C59EDBC()
{
  unsigned __int8 *v0;

  return sub_19C59EBA4(*v0);
}

uint64_t sub_19C59EDD8()
{
  unsigned __int8 *v0;

  return sub_19C59ECB0(*v0);
}

uint64_t getEnumTagSinglePayload for MLTensorScalarKind.DataType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MLTensorScalarKind.DataType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_19C59EEBC + 4 * byte_19CAECCED[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_19C59EEF0 + 4 * byte_19CAECCE8[v4]))();
}

uint64_t sub_19C59EEF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19C59EEF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19C59EF00);
  return result;
}

uint64_t sub_19C59EF0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19C59EF14);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_19C59EF18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19C59EF20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLTensorScalarKind.DataType()
{
  return &type metadata for MLTensorScalarKind.DataType;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MLTensorScalarKind(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MLTensorScalarKind(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19C59F038 + 4 * byte_19CAECCF7[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_19C59F06C + 4 * byte_19CAECCF2[v4]))();
}

uint64_t sub_19C59F06C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_19C59F074(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x19C59F07CLL);
  return result;
}

uint64_t sub_19C59F088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x19C59F090);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_19C59F094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_19C59F09C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLTensorScalarKind()
{
  return &type metadata for MLTensorScalarKind;
}

unint64_t sub_19C59F0BC()
{
  unint64_t result;

  result = qword_1EE4247D8;
  if (!qword_1EE4247D8)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECE24, &type metadata for MLTensorScalarKind);
    atomic_store(result, (unint64_t *)&qword_1EE4247D8);
  }
  return result;
}

unint64_t sub_19C59F104()
{
  unint64_t result;

  result = qword_1EE4247E0;
  if (!qword_1EE4247E0)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECFA4, &type metadata for MLTensorScalarKind.DataType);
    atomic_store(result, (unint64_t *)&qword_1EE4247E0);
  }
  return result;
}

unint64_t sub_19C59F148(unint64_t result)
{
  if (result >= 0xC)
    return 12;
  return result;
}

unint64_t sub_19C59F158()
{
  unint64_t result;

  result = qword_1EE4247E8;
  if (!qword_1EE4247E8)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECF2C, &type metadata for MLTensorScalarKind.DataType);
    atomic_store(result, (unint64_t *)&qword_1EE4247E8);
  }
  return result;
}

uint64_t sub_19C59F19C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6570795461746164 && a2 == 0xE800000000000000;
  if (v2 || (sub_19CAAA1E4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C6B6165577369 && a2 == 0xED00006465707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_19CAAA1E4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_19C59F2B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unsigned int v7;
  char v8;
  int v10;
  _BYTE v11[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4247F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19C59F420();
  sub_19CAAA31C();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11[14] = 0;
  sub_19C59F464();
  sub_19CAAA154();
  v7 = v11[15];
  v11[13] = 1;
  v8 = sub_19CAAA13C();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  if ((v8 & 1) != 0)
    v10 = 256;
  else
    v10 = 0;
  return v10 | v7;
}

unint64_t sub_19C59F420()
{
  unint64_t result;

  result = qword_1EE4247F8;
  if (!qword_1EE4247F8)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAED090, &type metadata for MLTensorScalarKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE4247F8);
  }
  return result;
}

unint64_t sub_19C59F464()
{
  unint64_t result;

  result = qword_1EE424800;
  if (!qword_1EE424800)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECF04, &type metadata for MLTensorScalarKind.DataType);
    atomic_store(result, (unint64_t *)&qword_1EE424800);
  }
  return result;
}

unint64_t sub_19C59F4A8()
{
  unint64_t result;

  result = qword_1EE424810;
  if (!qword_1EE424810)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECEDC, &type metadata for MLTensorScalarKind.DataType);
    atomic_store(result, (unint64_t *)&qword_1EE424810);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MLTensorScalarKind.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19C59F538 + 4 * byte_19CAECD01[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19C59F56C + 4 * byte_19CAECCFC[v4]))();
}

uint64_t sub_19C59F56C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19C59F574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19C59F57CLL);
  return result;
}

uint64_t sub_19C59F588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19C59F590);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19C59F594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19C59F59C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLTensorScalarKind.CodingKeys()
{
  return &type metadata for MLTensorScalarKind.CodingKeys;
}

unint64_t sub_19C59F5BC()
{
  unint64_t result;

  result = qword_1EE424818;
  if (!qword_1EE424818)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAED068, &type metadata for MLTensorScalarKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE424818);
  }
  return result;
}

unint64_t sub_19C59F604()
{
  unint64_t result;

  result = qword_1EE424820;
  if (!qword_1EE424820)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAECFD8, &type metadata for MLTensorScalarKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE424820);
  }
  return result;
}

unint64_t sub_19C59F64C()
{
  unint64_t result;

  result = qword_1EE424828[0];
  if (!qword_1EE424828[0])
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAED000, &type metadata for MLTensorScalarKind.CodingKeys);
    atomic_store(result, qword_1EE424828);
  }
  return result;
}

uint64_t sub_19C59F690(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  id v10;
  _QWORD v11[6];
  uint64_t v12;
  char v13;
  id v14;

  v3 = v2;
  v12 = 0;
  v13 = 1;
  v14 = 0;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v12;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = &v14;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_19C5A4B28;
  *(_QWORD *)(v7 + 24) = v6;
  v11[4] = sub_19C5A4B44;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_19C526664;
  v11[3] = &block_descriptor_28_0;
  v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_getMutableBytesWithHandler_, v8);
  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v14)
    {
      v10 = v14;
      swift_willThrow();

      swift_release();
      return v7;
    }
    if ((v13 & 1) == 0)
    {
      v7 = v12;
      swift_release();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_19C59F824(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
  {
LABEL_13:
    a5(&v30, a1, a1 + a2, v15);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = v30;
    *(_BYTE *)(a4 + 8) = 0;
    return result;
  }
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_19C556FD0(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v23 = a2;
    v24 = a1;
    v25 = a6;
    v26 = a5;
    v27 = a4;
    v28 = a7;
    v17 = 0;
    v15 = v29;
    do
    {
      if ((a3 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x1A1AD4A9C](v17, a3);
      else
        v18 = *(id *)(a3 + 8 * v17 + 32);
      v19 = v18;
      v20 = objc_msgSend(v18, sel_integerValue, v23, v24, v25, v26, v27, v28);

      v22 = *(_QWORD *)(v29 + 16);
      v21 = *(_QWORD *)(v29 + 24);
      if (v22 >= v21 >> 1)
        sub_19C556FD0(v21 > 1, v22 + 1, 1);
      ++v17;
      *(_QWORD *)(v29 + 16) = v22 + 1;
      *(_QWORD *)(v29 + 8 * v22 + 32) = v20;
    }
    while (v14 != v17);
    a4 = v27;
    a5 = v26;
    a2 = v23;
    a1 = v24;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_19C59F9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_19C59FA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v1)
  {
    v2 = v1;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_19C524A44(v2);
  v3 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t))((char *)sub_19C59FBA0 + 4 * byte_19CAED0FC[*(unsigned __int8 *)(v0 + 48)]))(v3);
}

id sub_19C59FBA0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(MEMORY[0x1E0CC7660]);
  sub_19C4E8EF8();
  v2 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithMTLBuffer_shape_dataType_, v0, v2, 8);
  swift_release();

  swift_unknownObjectRelease();
  return v3;
}

void sub_19C59FEE0()
{
  sub_19CAA9F2C();
  sub_19CAA992C();
  sub_19C59EBA4(0xBu);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAAA064();
  sub_19CAA992C();
  sub_19CAAA0B8();
  __break(1u);
}

void sub_19C59FFF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_19C5A0050;
  sub_19C5A36D4(a1);
}

uint64_t sub_19C5A0050(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_19C5A00A0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[200];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[11];
  unint64_t v33;
  uint64_t v34[25];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424330);
  MEMORY[0x1E0C80A78](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4248C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v21[-v9 - 8];
  v11 = sub_19CAA9488();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_19C5A3E68(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    __asm { BR              X9 }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (a2 >> 62 == 3)
  {
    v18 = *(_QWORD *)(a2 + 16);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v8, v14, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    swift_retain();
    v15 = sub_19C5A00A0(v8, v18);
    sub_19C5A3EB0((uint64_t)v8);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_19C5A2988(a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4248C8);
    v15 = swift_allocObject();
    sub_19C571794((uint64_t)v21);
    sub_19C4DCE08((uint64_t)v21, v15 + 16, (uint64_t *)&unk_1EE4248D0);
    v32[8] = v29;
    v32[9] = v30;
    v32[10] = v31;
    v32[4] = v25;
    v32[5] = v26;
    v32[6] = v27;
    v32[7] = v28;
    v32[0] = *(_OWORD *)&v21[184];
    v32[1] = v22;
    v32[2] = v23;
    v32[3] = v24;
    v33 = a2;
    nullsub_1(v32, v16, v17);
    sub_19C4DCE08(v15 + 16, (uint64_t)v34, (uint64_t *)&unk_1EE4248D0);
    sub_19C4DCE08((uint64_t)v32, v15 + 16, (uint64_t *)&unk_1EE4248D0);
    sub_19C5717BC(v34);
  }
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

void sub_19C5A0414(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_19C5A045C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_19C5A0490
                            + dword_19C5A07DC[*(unsigned __int8 *)((v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x20)]))();
}

void sub_19C5A04A0(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = a1;
  if (!v1)
    __asm { BR              X9 }
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    v14 = v2;
    v4 = (_QWORD *)sub_19C500C0C(1uLL, v3);
    v5 = 0;
    v6 = v3 - 2;
    v7 = v3 - 3;
    if ((uint64_t)(v3 - 2) >= 1)
      goto LABEL_8;
LABEL_6:
    if (!((v6 != 0) | v5 & 1))
    {
      v7 = 0;
      v5 = 1;
LABEL_8:
      while (1)
      {
        v8 = v6 + 1;
        if ((int64_t)(v6 + 1) >= v4[2])
          break;
        if (v8 >= *(_QWORD *)(v1 + 16))
          goto LABEL_20;
        v9 = v8;
        v10 = v4[v9 + 4];
        v11 = *(_QWORD *)(v1 + 32 + v9 * 8);
        v12 = v10 * v11;
        if ((unsigned __int128)(v10 * (__int128)v11) >> 64 != (v10 * v11) >> 63)
          goto LABEL_21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_19C503550(v4);
        if (v6 >= v4[2])
          goto LABEL_22;
        v4[v6 + 4] = v12;
        v6 = v7;
        v13 = __OFSUB__(v7--, 1);
        if (v7 < 0 != v13)
          goto LABEL_6;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      JUMPOUT(0x19C5A07CCLL);
    }
    v2 = v14;
  }
  __asm { BR              X9 }
}

uint64_t sub_19C5A082C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

void sub_19C5A084C()
{
  __asm { BR              X10 }
}

uint64_t sub_19C5A088C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  swift_retain();
  v2 = swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_19C5A0A6C;
  v3 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 40) = v0;
  *(_OWORD *)(v2 + 16) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 48) = v4;
  *v4 = v2;
  v4[1] = sub_19C5A1C64;
  return sub_19C5A0D04();
}

uint64_t sub_19C5A0904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  swift_retain();
  v2 = swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_19C5A0AD0;
  v3 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 40) = v0 & 0x3FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(v2 + 16) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 48) = v4;
  *v4 = v2;
  v4[1] = sub_19C5A1D98;
  return sub_19C5A1358();
}

uint64_t sub_19C5A0980()
{
  uint64_t v0;

  swift_retain();
  sub_19CAA9620();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A0A6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A0AD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A0B34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A0B98()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A0BD0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A0C08()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A0C40()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19C5A0C78()
{
  __asm { BR              X11 }
}

uint64_t sub_19C5A0CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_19C5A0D04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = sub_19CAA9764();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = sub_19CAA9740();
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19C5A0DA8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  NSObject *v22;
  os_signpost_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);

  if (qword_1EE422E60 != -1)
    swift_once();
  v1 = sub_19CAA9758();
  *(_QWORD *)(v0 + 88) = __swift_project_value_buffer(v1, (uint64_t)qword_1EE4317F0);
  sub_19CAA9734();
  v2 = sub_19CAA974C();
  v3 = sub_19CAA9D64();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v7(v4, *(_QWORD *)(v0 + 80), v5);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v2, v3, v9, "GPU :: Data synchronization", "", v8, 2u);
    MEMORY[0x1A1AD7790](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 56);

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  }
  v12 = (_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 96) = v7;
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 16);
  v7(v11, v13, v14);
  sub_19CAA9788();
  swift_allocObject();
  *(_QWORD *)(v0 + 104) = sub_19CAA977C();
  v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(_QWORD *)(v0 + 112) = v17;
  v17(v13, v14);
  if (*(_QWORD *)(v16 + 24))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
    ObjectType = swift_getObjectType();
    v33 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v18 + 56) + *(_QWORD *)(v18 + 56));
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v20;
    *v20 = v0;
    v20[1] = sub_19C5A1144;
    return v33(ObjectType, v18);
  }
  else
  {
    v22 = sub_19CAA974C();
    sub_19CAA9770();
    v23 = sub_19CAA9D58();
    if ((sub_19CAA9DDC() & 1) != 0)
    {
      v25 = *(_QWORD *)(v0 + 32);
      v24 = *(_QWORD *)(v0 + 40);
      v26 = *(_QWORD *)(v0 + 24);
      swift_retain();
      sub_19CAA9794();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v25 + 88))(v24, v26) == *MEMORY[0x1E0DF2190])
      {
        v27 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
        v27 = "";
      }
      v28 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
      v29 = *(_QWORD *)(v0 + 64);
      v30 = *(_QWORD *)(v0 + 48);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 96))(*(_QWORD *)(v0 + 72), v29, v30);
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      v32 = sub_19CAA9728();
      _os_signpost_emit_with_name_impl(&dword_19C486000, v22, v23, v32, "GPU :: Data synchronization", v27, v31, 2u);
      MEMORY[0x1A1AD7790](v31, -1, -1);

      v28(v29, v30);
    }
    else
    {

      v12 = (_QWORD *)(v0 + 64);
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 112))(*v12, *(_QWORD *)(v0 + 48));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19C5A1144()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A1198()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 64);
  v2 = sub_19CAA974C();
  sub_19CAA9770();
  v3 = sub_19CAA9D58();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 24);
    swift_retain();
    sub_19CAA9794();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x1E0DF2190])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 72);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 96))(*(_QWORD *)(v0 + 72), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v2, v3, v12, "GPU :: Data synchronization", v7, v11, 2u);
    MEMORY[0x1A1AD7790](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 112))(*v1, *(_QWORD *)(v0 + 48));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A1358()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = sub_19CAA9764();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = sub_19CAA9740();
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19C5A13FC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  NSObject *v22;
  os_signpost_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  os_signpost_id_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);

  if (qword_1EE422E60 != -1)
    swift_once();
  v1 = sub_19CAA9758();
  *(_QWORD *)(v0 + 88) = __swift_project_value_buffer(v1, (uint64_t)qword_1EE4317F0);
  sub_19CAA9734();
  v2 = sub_19CAA974C();
  v3 = sub_19CAA9D64();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v7(v4, *(_QWORD *)(v0 + 80), v5);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v2, v3, v9, "CPU :: Data synchronization", "", v8, 2u);
    MEMORY[0x1A1AD7790](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 56);

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  }
  v12 = (_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 96) = v7;
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 16);
  v7(v11, v13, v14);
  sub_19CAA9788();
  swift_allocObject();
  *(_QWORD *)(v0 + 104) = sub_19CAA977C();
  v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(_QWORD *)(v0 + 112) = v17;
  v17(v13, v14);
  if (*(_QWORD *)(v16 + 40))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
    ObjectType = swift_getObjectType();
    v33 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v18 + 56) + *(_QWORD *)(v18 + 56));
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v20;
    *v20 = v0;
    v20[1] = sub_19C5A1798;
    return v33(ObjectType, v18);
  }
  else
  {
    v22 = sub_19CAA974C();
    sub_19CAA9770();
    v23 = sub_19CAA9D58();
    if ((sub_19CAA9DDC() & 1) != 0)
    {
      v25 = *(_QWORD *)(v0 + 32);
      v24 = *(_QWORD *)(v0 + 40);
      v26 = *(_QWORD *)(v0 + 24);
      swift_retain();
      sub_19CAA9794();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v25 + 88))(v24, v26) == *MEMORY[0x1E0DF2190])
      {
        v27 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
        v27 = "";
      }
      v28 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
      v29 = *(_QWORD *)(v0 + 64);
      v30 = *(_QWORD *)(v0 + 48);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 96))(*(_QWORD *)(v0 + 72), v29, v30);
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      v32 = sub_19CAA9728();
      _os_signpost_emit_with_name_impl(&dword_19C486000, v22, v23, v32, "CPU :: Data synchronization", v27, v31, 2u);
      MEMORY[0x1A1AD7790](v31, -1, -1);

      v28(v29, v30);
    }
    else
    {

      v12 = (_QWORD *)(v0 + 64);
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 112))(*v12, *(_QWORD *)(v0 + 48));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19C5A1798()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A17EC()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 64);
  v2 = sub_19CAA974C();
  sub_19CAA9770();
  v3 = sub_19CAA9D58();
  if ((sub_19CAA9DDC() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 24);
    swift_retain();
    sub_19CAA9794();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x1E0DF2190])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 72);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 96))(*(_QWORD *)(v0 + 72), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_19CAA9728();
    _os_signpost_emit_with_name_impl(&dword_19C486000, v2, v3, v12, "CPU :: Data synchronization", v7, v11, 2u);
    MEMORY[0x1A1AD7790](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 112))(*v1, *(_QWORD *)(v0 + 48));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A19AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

void sub_19C5A19C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  *(_QWORD *)(v0 + 24) = v1;
  __asm { BR              X10 }
}

uint64_t sub_19C5A1A00()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_19C5A1AE8;
  return sub_19C5A0D04();
}

uint64_t sub_19C5A1A3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A1A50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_19C5A1BC4;
  v2[2] = v0 & 0x3FFFFFFFFFFFFFFFLL;
  return swift_task_switch();
}

uint64_t sub_19C5A1AA8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_19C5A1B70;
  return sub_19C5A1358();
}

uint64_t sub_19C5A1AE8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A1B3C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A1B70()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A1BC4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A1C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[6] = v5;
  *v5 = v4;
  v5[1] = sub_19C5A1C64;
  return sub_19C5A0D04();
}

uint64_t sub_19C5A1C64()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A1CB8()
{
  uint64_t v0;
  void (*v1)(id, char *);
  void *v2;
  id v3;

  v1 = *(void (**)(id, char *))(v0 + 24);
  v2 = *(void **)(*(_QWORD *)(v0 + 40) + 16);
  v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v1(v3, (char *)objc_msgSend(v2, sel_length) + (_QWORD)v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5A1D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[6] = v5;
  *v5 = v4;
  v5[1] = sub_19C5A1D98;
  return sub_19C5A1358();
}

uint64_t sub_19C5A1D98()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A1DEC()
{
  uint64_t v0;
  void (*v1)(char *, char *);
  char *BaseAddress;
  uint64_t v3;

  v1 = *(void (**)(char *, char *))(v0 + 24);
  BaseAddress = (char *)IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(*(_QWORD *)(v0 + 40) + 16));
  v3 = sub_19C5A2190();
  v1(BaseAddress, &BaseAddress[v3]);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19C5A1E64()
{
  __asm { BR              X10 }
}

uint64_t sub_19C5A1EBC()
{
  uint64_t (*v0)(uint64_t *, char *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;

  v4 = v1;
  v5 = v2;
  v6 = BYTE2(v2);
  v7 = BYTE3(v2);
  v8 = BYTE4(v2);
  v9 = BYTE5(v2);
  return v0(&v4, (char *)&v4 + BYTE6(v2));
}

uint64_t sub_19C5A2038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19C5A2058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_19C5A20CC;
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_19C5A20CC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19C5A2114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(char *)(v0 + 48);
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v1 + 32);
    v5 = 1;
    do
    {
      v6 = *v4++;
      v7 = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
      {
        __break(1u);
        goto LABEL_12;
      }
      v5 = v7;
      --v3;
    }
    while (v3);
    if (v2 > 0xA)
      goto LABEL_8;
    goto LABEL_6;
  }
  v7 = 1;
  if (v2 <= 0xA)
  {
LABEL_6:
    v8 = qword_19CAED338[v2];
    goto LABEL_9;
  }
LABEL_8:
  v8 = 8;
LABEL_9:
  result = v7 * v8;
  if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63)
LABEL_12:
    __break(1u);
  return result;
}

uint64_t sub_19C5A2190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(char *)(v0 + 32);
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v1 + 32);
    v5 = 1;
    do
    {
      v6 = *v4++;
      v7 = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
      {
        __break(1u);
        goto LABEL_12;
      }
      v5 = v7;
      --v3;
    }
    while (v3);
    if (v2 > 0xA)
      goto LABEL_8;
    goto LABEL_6;
  }
  v7 = 1;
  if (v2 <= 0xA)
  {
LABEL_6:
    v8 = qword_19CAED338[v2];
    goto LABEL_9;
  }
LABEL_8:
  v8 = 8;
LABEL_9:
  result = v7 * v8;
  if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63)
LABEL_12:
    __break(1u);
  return result;
}

uint64_t sub_19C5A220C(unint64_t a1)
{
  return ((uint64_t (*)(void))((char *)&loc_19C5A2218 + dword_19C5A22CC[a1 >> 62]))();
}

uint64_t sub_19C5A2228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v1 = *(char *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  v2 = *(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v2 + 32);
    v5 = 1;
    while (1)
    {
      v6 = *v4++;
      v7 = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
        break;
      v5 = v7;
      if (!--v3)
      {
        if (v1 <= 0xA)
          goto LABEL_6;
LABEL_8:
        v8 = 8;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  v7 = 1;
  if (v1 > 0xA)
    goto LABEL_8;
LABEL_6:
  v8 = qword_19CAED338[v1];
LABEL_9:
  result = v7 * v8;
  if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x19C5A22CCLL);
  }
  return result;
}

void sub_19C5A22DC()
{
  __asm { BR              X10 }
}

uint64_t sub_19C5A2330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t *v9;
  char *v10;

  v3 = v0;
  v4 = v1;
  v5 = BYTE2(v1);
  v6 = BYTE3(v1);
  v7 = BYTE4(v1);
  v8 = BYTE5(v1);
  v9 = &v3;
  v10 = (char *)&v3 + BYTE6(v1);
  sub_19C5753F4();
  return sub_19CAA9578();
}

uint64_t sub_19C5A2564()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_19C4D4FE4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MLTensorData()
{
  return objc_opt_self();
}

uint64_t sub_19C5A25B0()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 56);
  if (v1)
    v1(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_19C530F14(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalBufferStorage()
{
  return objc_opt_self();
}

uint64_t sub_19C5A262C()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 56);
  if (v1)
    v1(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_19C530F14(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOSurfaceStorage()
{
  return objc_opt_self();
}

uint64_t sub_19C5A26A8(char a1)
{
  uint64_t v1;
  __IOSurface *v3;
  uint64_t result;

  v3 = *(__IOSurface **)(v1 + 16);
  IOSurfaceIncrementUseCount(v3);
  result = IOSurfaceLock(v3, a1 & 1, 0);
  if ((_DWORD)result)
  {
    sub_19CAA9F44();
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
    }
    result = sub_19CAAA0B8();
    __break(1u);
  }
  return result;
}

void sub_19C5A281C(char a1)
{
  uint64_t v1;
  __IOSurface *v2;

  v2 = *(__IOSurface **)(v1 + 16);
  if (IOSurfaceUnlock(v2, a1 & 1, 0))
  {
    sub_19CAA9F44();
    if (qword_1EE422E38 != -1)
      swift_once();
    if ((byte_1EE4317C9 & 1) != 0)
    {
      sub_19CAA9F2C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
      sub_19CAA992C();
    }
    sub_19CAAA0B8();
    __break(1u);
  }
  else
  {
    IOSurfaceDecrementUseCount(v2);
  }
}

void sub_19C5A2988(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_19CAA9488();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X9 }
}

uint64_t sub_19C5A2A10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  *(_DWORD *)(v0 + 116) = 1048584;
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v0 + 8) = v1 & 0x3FFFFFFFFFFFFFFFLL;
  swift_retain();
  *(_QWORD *)(v0 + 96) = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v3 = v2;
  v4 = sub_19C5A2114();
  return ((uint64_t (*)(uint64_t))((char *)sub_19C5A2A74 + 4 * word_19CAED138[*(unsigned __int8 *)(v1 + 48)]))(v4);
}

uint64_t sub_19C5A2A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(v0 + 116) = sub_19CAA9CE0();
  v5 = v4;
  v6 = v3;
  v7 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v7);
  *(_DWORD *)(v0 + 92) = sub_19CAA9470();
  sub_19CAA9464();
  v8 = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 504);
  *(_QWORD *)(v0 + 80) = v8;
  v9 = *(_QWORD *)(v0 + 512);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 64) = v9;
  v10 = *(_QWORD *)(v0 + 528);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 536);
  *(_QWORD *)(v0 + 48) = v10;
  v11 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 552);
  *(_QWORD *)(v0 + 32) = v11;
  sub_19CAA947C();
  v12 = *(_QWORD *)(v0 + 504);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 512);
  v14 = *(_QWORD *)(v0 + 520);
  v15 = *(_QWORD *)(v0 + 528);
  v16 = v7;
  v17 = *(_QWORD *)(v0 + 536);
  v18 = v5;
  v19 = *(_QWORD *)(v0 + 544);
  v20 = *(_QWORD *)(v0 + 552);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v16);
  swift_release();
  v21 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v0 + 24);
  v22 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 40);
  result = *(_QWORD *)(v0 + 48);
  v27 = *(_QWORD *)(v0 + 56);
  v26 = *(_QWORD *)(v0 + 64);
  v29 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 80);
  v30 = *(_DWORD *)(v0 + 92);
  v31 = *(_DWORD *)(v0 + 116);
  LODWORD(v32) = v31;
  v33 = *(_QWORD *)(v0 + 96);
  *(_DWORD *)v1 = 0;
  *(_DWORD *)(v1 + 4) = v30;
  *(_QWORD *)(v1 + 8) = v28;
  *(_QWORD *)(v1 + 16) = v29;
  *(_QWORD *)(v1 + 24) = v26;
  *(_QWORD *)(v1 + 32) = v27;
  *(_QWORD *)(v1 + 40) = result;
  *(_QWORD *)(v1 + 48) = v25;
  *(_QWORD *)(v1 + 56) = v22;
  *(_QWORD *)(v1 + 64) = v23;
  *(_QWORD *)(v1 + 72) = v21;
  *(_QWORD *)(v1 + 80) = v12;
  *(_QWORD *)(v1 + 88) = v13;
  *(_QWORD *)(v1 + 96) = v14;
  *(_QWORD *)(v1 + 104) = v15;
  *(_QWORD *)(v1 + 112) = v17;
  *(_QWORD *)(v1 + 120) = v19;
  *(_QWORD *)(v1 + 128) = v20;
  *(_QWORD *)(v1 + 136) = v33;
  *(_QWORD *)(v1 + 144) = v32;
  *(_QWORD *)(v1 + 152) = 0;
  *(_DWORD *)(v1 + 160) = v31;
  *(_QWORD *)(v1 + 164) = 1065353216;
  *(_DWORD *)(v1 + 172) = &unk_19CAE8000;
  return result;
}

void sub_19C5A3044()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 496) = 0;
  *(_QWORD *)(v0 + 504) = 0xE000000000000000;
  sub_19CAA9F2C();
  v1 = *(_QWORD *)(v0 + 504);
  *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 504) = v1;
  sub_19CAA992C();
  sub_19C59EBA4(0xBu);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  *(_BYTE *)(v0 + 312) = 0;
  sub_19CAAA064();
  JUMPOUT(0x19C5A3110);
}

void sub_19C5A3154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_19CAA9488();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_19C5A31F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_19CAA9CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
  v6 = sub_19CAA9470();
  sub_19CAA9464();
  *(_OWORD *)(v4 - 320) = *(_OWORD *)(v4 - 272);
  *(_OWORD *)(v4 - 336) = *(_OWORD *)(v4 - 256);
  *(_OWORD *)(v4 - 352) = *(_OWORD *)(v4 - 240);
  v8 = *(_QWORD *)(v4 - 224);
  v7 = *(_QWORD *)(v4 - 216);
  sub_19CAA947C();
  *(_OWORD *)(v4 - 368) = *(_OWORD *)(v4 - 272);
  *(_OWORD *)(v4 - 384) = *(_OWORD *)(v4 - 256);
  *(_OWORD *)(v4 - 400) = *(_OWORD *)(v4 - 240);
  v9 = *(_QWORD *)(v4 - 224);
  v10 = *(_QWORD *)(v4 - 216);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  *(_DWORD *)(v4 - 272) = 0;
  *(_DWORD *)(v4 - 268) = v6;
  *(_OWORD *)(v4 - 264) = *(_OWORD *)(v4 - 320);
  *(_OWORD *)(v4 - 248) = *(_OWORD *)(v4 - 336);
  *(_OWORD *)(v4 - 232) = *(_OWORD *)(v4 - 352);
  *(_QWORD *)(v4 - 216) = v8;
  *(_QWORD *)(v4 - 208) = v7;
  *(_OWORD *)(v4 - 200) = *(_OWORD *)(v4 - 368);
  *(_OWORD *)(v4 - 184) = *(_OWORD *)(v4 - 384);
  *(_OWORD *)(v4 - 168) = *(_OWORD *)(v4 - 400);
  *(_QWORD *)(v4 - 152) = v9;
  *(_QWORD *)(v4 - 144) = v10;
  *(_QWORD *)(v4 - 136) = *(_QWORD *)(v4 - 296);
  *(_DWORD *)(v4 - 128) = v5;
  *(_QWORD *)(v4 - 120) = 0;
  *(_DWORD *)(v4 - 112) = v5;
  *(_QWORD *)(v4 - 108) = 1065353216;
  sub_19C4DCE74(v4 - 272);
  return sub_19C4DCE08(v4 - 272, *(_QWORD *)(v4 - 288), &qword_1EE4233E8);
}

void sub_19C5A33B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 - 272) = 0;
  *(_QWORD *)(v0 - 264) = 0xE000000000000000;
  sub_19CAA9F2C();
  v1 = *(_QWORD *)(v0 - 264);
  *(_QWORD *)(v0 - 272) = *(_QWORD *)(v0 - 272);
  *(_QWORD *)(v0 - 264) = v1;
  sub_19CAA992C();
  sub_19C59EBA4(0xBu);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  *(_BYTE *)(v0 - 65) = 0;
  sub_19CAAA064();
  sub_19CAA992C();
  sub_19CAAA0B8();
  __break(1u);
}

uint64_t sub_19C5A34D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MLTensorStorageView()
{
  return objc_opt_self();
}

uint64_t sub_19C5A3524()
{
  return swift_initClassMetadata2();
}

void sub_19C5A3564()
{
  __asm { BR              X11 }
}

_QWORD *sub_19C5A359C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v1 = (a1 & 0x3FFFFFFFFFFFFFFFLL) + 24;
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)sub_19C500C0C(1uLL, v3);
  v5 = 0;
  v6 = v3 - 2;
  v7 = v3 - 3;
  if ((uint64_t)(v3 - 2) >= 1)
    goto LABEL_5;
LABEL_3:
  if (!((v6 != 0) | v5 & 1))
  {
    v7 = 0;
    v5 = 1;
LABEL_5:
    while (1)
    {
      v8 = v6 + 1;
      if ((int64_t)(v6 + 1) >= v4[2])
        break;
      if (v8 >= *(_QWORD *)(v2 + 16))
        goto LABEL_18;
      v9 = v8;
      v10 = v4[v9 + 4];
      v11 = *(_QWORD *)(v2 + 32 + v9 * 8);
      v12 = v10 * v11;
      if ((unsigned __int128)(v10 * (__int128)v11) >> 64 != (v10 * v11) >> 63)
        goto LABEL_19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_19C503550(v4);
      if (v6 >= v4[2])
        goto LABEL_20;
      v4[v6 + 4] = v12;
      v6 = v7;
      v13 = __OFSUB__(v7--, 1);
      if (v7 < 0 != v13)
        goto LABEL_3;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    JUMPOUT(0x19C5A36C4);
  }
  swift_bridgeObjectRelease();
  return v4;
}

void sub_19C5A36D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  __asm { BR              X10 }
}

uint64_t sub_19C5A370C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_19C5A37F0;
  return sub_19C5A0D04();
}

uint64_t sub_19C5A374C()
{
  return swift_task_switch();
}

uint64_t sub_19C5A37B0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_19C5A3884;
  return sub_19C5A1358();
}

uint64_t sub_19C5A37F0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A3844()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_19C5A3884()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A38D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5A392C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

void sub_19C5A3940()
{
  uint64_t v0;

  sub_19C5A396C(*(_QWORD *)(v0 + 16));
}

void sub_19C5A396C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19C5A39BC()
{
  void (*v0)(char *, char *);
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  uint64_t v5;

  v2 = *(void **)(v1 + 16);
  swift_retain();
  v3 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v4 = v2;
  v5 = sub_19C5A2114();
  v0(v3, &v3[v5]);
  return swift_release();
}

uint64_t sub_19C5A3B24()
{
  uint64_t result;

  sub_19CAA9F44();
  if (qword_1EE422E38 != -1)
    swift_once();
  if ((byte_1EE4317C9 & 1) != 0)
  {
    sub_19CAA9F2C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
    sub_19CAA992C();
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5A3C60()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MLShapedArrayTensorStorageView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MLShapedArrayTensorStorageView);
}

_QWORD *initializeBufferWithCopyOfBuffer for MLTensorStorage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for MLTensorStorage()
{
  return swift_release();
}

_QWORD *assignWithCopy for MLTensorStorage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for MLTensorStorage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLTensorStorage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MLTensorStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_19C5A3DF0(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_19C5A3DFC(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_19C5A3E0C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for MLTensorStorage()
{
  return &type metadata for MLTensorStorage;
}

uint64_t sub_19C5A3E30()
{
  sub_19C5A45F8();
  return swift_bridgeObjectRetain();
}

void sub_19C5A3E48()
{
  sub_19C5A3940();
}

uint64_t sub_19C5A3E5C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_19C5A3B24();
  return sub_19C5A3E68(v0, v1);
}

uint64_t sub_19C5A3E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4248C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19C5A3EB0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4248C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_19C5A3EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C5A3154(a1, a2, *(_QWORD *)(v2 + 16));
}

id sub_19C5A3F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id result;

  result = sub_19C5A4808(a1, a2);
  if (!v3 && !result)
    __asm { BR              X10 }
  return result;
}

void sub_19C5A3FCC()
{
  uint64_t v0;
  IOSurfaceRef *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  void *BaseAddress;
  uint64_t v15;
  uint64_t v16;
  IOSurfaceRef *v17;

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v17 = v1;
    v4 = (_QWORD *)sub_19C500C0C(1uLL, v3);
    v5 = 0;
    v6 = v3 - 2;
    v7 = v3 - 3;
    if (v3 - 2 >= 1)
      goto LABEL_5;
LABEL_3:
    if (!((v6 != 0) | v5 & 1))
    {
      v7 = 0;
      v5 = 1;
LABEL_5:
      while (1)
      {
        v8 = v6 + 1;
        if ((int64_t)(v6 + 1) >= v4[2])
          break;
        if (v8 >= v3)
          goto LABEL_19;
        v9 = v8;
        v10 = v4[v9 + 4];
        v11 = *(_QWORD *)(v2 + 32 + v9 * 8);
        v12 = v10 * v11;
        if ((unsigned __int128)(v10 * (__int128)v11) >> 64 != (v10 * v11) >> 63)
          goto LABEL_20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_19C503550(v4);
        if (v6 >= v4[2])
          goto LABEL_21;
        v4[v6 + 4] = v12;
        v6 = v7;
        v13 = __OFSUB__(v7--, 1);
        if (v7 < 0 != v13)
          goto LABEL_3;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      JUMPOUT(0x19C5A4154);
    }
    v1 = v17;
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  BaseAddress = IOSurfaceGetBaseAddress(v1[2]);
  v15 = sub_19C524A44(v2);
  v16 = sub_19C524A44((uint64_t)v4);
  swift_bridgeObjectRelease();
  objc_allocWithZone((Class)MLMultiArray);
  swift_retain();
  sub_19C5A42A4((uint64_t)BaseAddress, v15, 65552, v16, nullsub_1, v1);
  if (!v0)
    JUMPOUT(0x19C5A3FA8);
  JUMPOUT(0x19C5A3F40);
}

void sub_19C5A4194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_19C5A41C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(void))((char *)sub_19C5A420C
                            + 4
                            * asc_19CAED168[*(unsigned __int8 *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20)]))();
}

id sub_19C5A420C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;

  v4 = sub_19C524A44(a2);
  v5 = objc_allocWithZone((Class)MLMultiArray);
  v6 = v4;
  v7 = v5;
  v8 = sub_19C5A4470(v6, 65552);
  if (!v2)
  {
    v7 = v8;
    sub_19C59F690((uint64_t)sub_19C5A4AEC, v3);
  }
  return v7;
}

id sub_19C5A42A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  void *v6;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  sub_19C4E8EF8();
  v11 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  if (a5)
  {
    aBlock[4] = a5;
    aBlock[5] = a6;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_19C5A4434;
    aBlock[3] = &block_descriptor_8;
    v13 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  aBlock[0] = 0;
  v14 = objc_msgSend(v6, sel_initWithDataPointer_shape_dataType_strides_deallocator_error_, a1, v11, a3, v12, v13, aBlock);
  _Block_release(v13);

  if (v14)
  {
    v15 = aBlock[0];
  }
  else
  {
    v16 = aBlock[0];
    sub_19CAA95C0();

    swift_willThrow();
  }
  return v14;
}

uint64_t sub_19C5A4434(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_19C5A4470(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_19C4E8EF8();
  v4 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_19CAA95C0();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_19C5A4558(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_19CAA9590();
  v7 = result;
  if (result)
  {
    result = sub_19CAA95A8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_19CAA959C();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return a3(v7, v13);
}

uint64_t sub_19C5A45F8()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_19C5A4618 + 4 * byte_19CAED174[*(_QWORD *)(v0 + 16) >> 62]))();
}

uint64_t sub_19C5A4618@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
}

uint64_t sub_19C5A4624@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 40);
}

uint64_t sub_19C5A462C@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
}

void sub_19C5A4638(uint64_t a1, __int16 a2, void (*a3)(char *, char *))
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  os_unfair_lock_s *v16;
  __IOSurface *v17;
  char *BaseAddress;
  char *v19;
  uint64_t v20;
  __IOSurface *v21;

  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = (uint64_t *)(a1 + 32);
    v11 = 1;
    while (1)
    {
      v12 = *v10++;
      v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
        break;
      v11 = v13;
      if (!--v9)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v13 = 1;
LABEL_7:
    if (a2 > 0xAu)
      v14 = 8;
    else
      v14 = qword_19CAED338[(char)a2];
    v5 = v13 * v14;
    if ((unsigned __int128)(v13 * (__int128)v14) >> 64 == (v13 * v14) >> 63)
    {
      v4 = (void *)MEMORY[0x1A1AD6338]();
      if (qword_1EE422E98 == -1)
        goto LABEL_12;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_19:
  swift_once();
LABEL_12:
  v15 = (uint64_t *)(qword_1EE4243D0 + 16);
  v16 = (os_unfair_lock_s *)(qword_1EE4243D0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EE4243D0 + 24));
  sub_19C5782F8(v15, a1, a2 & 0x1FF, 0, 1, &v21);
  if (v3)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v16);
    v17 = v21;
    objc_autoreleasePoolPop(v4);
    BaseAddress = (char *)IOSurfaceGetBaseAddress(v17);
    if (BaseAddress)
      v19 = &BaseAddress[v5];
    else
      v19 = 0;
    a3(BaseAddress, v19);
    type metadata accessor for IOSurfaceStorage();
    v20 = swift_allocObject();
    *(_BYTE *)(v20 + 32) = a2;
    *(_BYTE *)(v20 + 33) = HIBYTE(a2) & 1;
    *(_QWORD *)(v20 + 16) = v17;
    *(_QWORD *)(v20 + 24) = a1;
    *(_QWORD *)(v20 + 40) = 0;
    *(_QWORD *)(v20 + 48) = 0;
    *(_QWORD *)(v20 + 56) = sub_19C569CEC;
    *(_QWORD *)(v20 + 64) = 0;
  }
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

id sub_19C5A4808(uint64_t a1, uint64_t a2)
{
  id v3;
  CVPixelBufferRef v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  id v26;
  void *v27;
  void *v28;
  __CVBuffer *v29;
  CVPixelBufferRef pixelBufferOut[2];

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x1E0C80C00];
  pixelBufferOut[0] = 0;
  v3 = 0;
  if (CVPixelBufferCreateWithIOSurface(0, *(IOSurfaceRef *)(a1 + 16), 0, pixelBufferOut))
    return v3;
  v4 = pixelBufferOut[0];
  if (!pixelBufferOut[0])
    return 0;
  if (CVPixelBufferGetPixelFormatType(pixelBufferOut[0]) != 1278226536)
    goto LABEL_28;
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    sub_19C4FAE24(v5 - 1, a2);
    v9 = (v8 >> 1) - v7;
    if (v8 >> 1 != v7)
    {
      if ((uint64_t)(v8 >> 1) <= v7)
        goto LABEL_39;
      v12 = (uint64_t *)(v6 + 8 * v7);
      v13 = 1;
      while (1)
      {
        v14 = *v12++;
        v10 = v13 * v14;
        if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
          break;
        v13 = v10;
        if (!--v9)
          goto LABEL_12;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
    }
    v10 = 1;
LABEL_12:
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    v11 = *(_QWORD *)(a2 + 8 * (v5 - 1) + 32);
  }
  else
  {
    v11 = 1;
    v10 = 1;
  }
  if (CVPixelBufferGetHeight(v4) != v10 || CVPixelBufferGetWidth(v4) != v11)
  {
LABEL_28:

    return 0;
  }
  if (v5)
  {
    v29 = v4;
    v15 = (_QWORD *)sub_19C500C0C(1uLL, v5);
    v16 = 0;
    v17 = v5 - 2;
    v18 = v5 - 3;
    if (v5 - 2 >= 1)
      goto LABEL_19;
LABEL_17:
    if (!((v17 != 0) | v16 & 1))
    {
      v18 = 0;
      v16 = 1;
LABEL_19:
      while (1)
      {
        v19 = v17 + 1;
        if ((int64_t)(v17 + 1) >= v15[2])
          break;
        if (v19 >= v5)
          goto LABEL_35;
        v20 = v19;
        v21 = v15[v20 + 4];
        v22 = *(_QWORD *)(a2 + 32 + v20 * 8);
        v23 = v21 * v22;
        if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63)
          goto LABEL_36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_19C503550(v15);
        if (v17 >= v15[2])
          goto LABEL_37;
        v15[v17 + 4] = v23;
        v17 = v18;
        v24 = __OFSUB__(v18--, 1);
        if (v18 < 0 != v24)
          goto LABEL_17;
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v4 = v29;
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_19C524A44(a2);
  sub_19C524A44((uint64_t)v15);
  swift_bridgeObjectRelease();
  v26 = objc_allocWithZone((Class)MLMultiArray);
  sub_19C4E8EF8();
  v27 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v28 = (void *)sub_19CAA99EC();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v26, sel_initWithPixelBuffer_shape_strides_, v4, v27, v28);

  return v3;
}

void sub_19C5A4AEC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_19C5A22DC();
  *a1 = v2;
}

uint64_t sub_19C5A4B18()
{
  return swift_deallocObject();
}

uint64_t sub_19C5A4B28(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return sub_19C59F824(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_19C5A4B34()
{
  return swift_deallocObject();
}

uint64_t sub_19C5A4B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19C526644(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t MLTensor.init<A>(_:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  sub_19C556F60(a2, a2);
  v6 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v7 = sub_19CAA9A1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  v11 = sub_19C55283C(v7);
  v9 = sub_19CAA9AA0();
  MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEAF50], v9);
  MLTensor.init<A, B>(shape:scalars:scalarType:)(MEMORY[0x1E0DEE9D8], &v11, a2, v9, &v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v12;
  return result;
}

uint64_t sub_19C5A4C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  sub_19C556F60(a4, a4);
  v10 = *(_QWORD *)(a4 - 8);
  swift_allocObject();
  v11 = sub_19CAA9A1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12, a1, a4);
  v13 = sub_19C55283C(v11);
  sub_19C5A6768(MEMORY[0x1E0DEE9D8], v13, a2, a3, a4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  *a5 = v15;
  return result;
}

_QWORD *MLTensor.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  int64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  if (*(_QWORD *)(v8 + 16) != *(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v18 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v18);
    (*(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t *@<X8>)))(a3 + 152))(&v19, sub_19C5A7F44);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = (_QWORD *)sub_19C4F5110(v9, v8);
  v11 = result[2];
  if (!v11)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v13);
    (*(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t *@<X8>)))(a3 + 152))(&v19, sub_19C5A7F60);
LABEL_14:
    result = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
    *a4 = v19;
    return result;
  }
  if (result[4] != 1)
    goto LABEL_12;
  v12 = v11 - 1;
  if (!v12)
    goto LABEL_5;
  v14 = result[5];
  if (result[6] != v14)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v15 = result + 7;
  while (1)
  {
    v16 = v14 * *v15;
    if ((unsigned __int128)(v14 * (__int128)*v15) >> 64 != v16 >> 63)
      break;
    if (!--v12)
      goto LABEL_5;
    v17 = v15[1];
    v15 += 2;
    v14 = v16;
    if (v17 != v16)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t MLTensor.init(unsafeUninitializedShape:scalarType:initializingWith:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13[7];

  if (qword_1EE422E80 != -1)
    swift_once();
  sub_19CAAA37C();
  v6 = (void *)v13[6];
  sub_19C522A50(MEMORY[0x1E0DEE9D8], v13);
  sub_19C4F382C(v6);
  v7 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  v8 = sub_19C59E650(a2, 0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t (*)()))(v7 + 8))(a1, v9 & 0x1FF, sub_19C5A7F7C);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  if (!v3)
    *a3 = v10;
  return result;
}

uint64_t sub_19C5A508C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t MLTensor.init<A>(shape:scalars:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v8 = *(_QWORD *)(a3 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(v9 + 16);
  if (v12)
  {
    v13 = (uint64_t *)(a1 + 32);
    v14 = 1;
    v15 = *(_QWORD *)(v9 + 16);
    while (1)
    {
      v16 = *v13++;
      v17 = v14 * v16;
      if ((unsigned __int128)(v14 * (__int128)v16) >> 64 != (v14 * v16) >> 63)
        break;
      v14 = v17;
      if (!--v15)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v17 = 1;
LABEL_7:
    if (v17 == sub_19CAA9C08())
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v11, a2, a3);
      MLTensor.init<A, B>(shape:scalars:scalarType:)(a1, v11, MEMORY[0x1E0DEB188], a3, v25);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a2, a3);
      *a4 = v25[0];
      return result;
    }
  }
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  if (v12)
  {
    v19 = (uint64_t *)(a1 + 32);
    v20 = 1;
    while (1)
    {
      v21 = *v19++;
      v22 = v20 * v21;
      if ((unsigned __int128)(v20 * (__int128)v21) >> 64 != (v20 * v21) >> 63)
        break;
      v20 = v22;
      if (!--v12)
        goto LABEL_17;
    }
    __break(1u);
  }
  v22 = 1;
LABEL_17:
  v24 = v22;
  sub_19CAAA190();
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  v24 = sub_19CAA9C08();
  sub_19CAAA190();
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t MLTensor.init<A, B>(shape:scalars:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29[6];

  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(a1 + 32);
    v12 = 1;
    v13 = *(_QWORD *)(a1 + 16);
    while (1)
    {
      v14 = *v11++;
      v15 = v12 * v14;
      if ((unsigned __int128)(v12 * (__int128)v14) >> 64 != (v12 * v14) >> 63)
        break;
      v12 = v15;
      if (!--v13)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_11;
  }
  v15 = 1;
LABEL_7:
  v16 = sub_19CAA9C08();
  if (v15 == v16)
  {
    v27 = (uint64_t)&v27;
    v28 = a5;
    MEMORY[0x1E0C80A78](v16);
    a5 = a2;
    if (qword_1EE422E80 == -1)
    {
LABEL_9:
      sub_19CAAA37C();
      v17 = (void *)v29[5];
      sub_19C522A50(MEMORY[0x1E0DEE9D8], v29);
      sub_19C4F382C(v17);
      v18 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      v19 = sub_19C59E650(a3, 0);
      v20 = MEMORY[0x1E0C80A78](v19);
      v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t (*)()))(v18 + 8))(a1, v20 & 0x1FF, sub_19C5AB1C0);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
      result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a5, a4);
      *v28 = v21;
      return result;
    }
LABEL_11:
    swift_once();
    goto LABEL_9;
  }
  v29[0] = 0;
  v29[1] = 0xE000000000000000;
  sub_19CAA9F2C();
  sub_19CAA992C();
  if (v10)
  {
    v23 = (uint64_t *)(a1 + 32);
    v24 = 1;
    while (1)
    {
      v25 = *v23++;
      v26 = v24 * v25;
      if ((unsigned __int128)(v24 * (__int128)v25) >> 64 != (v24 * v25) >> 63)
        break;
      v24 = v26;
      if (!--v10)
        goto LABEL_18;
    }
    __break(1u);
  }
LABEL_18:
  sub_19CAAA190();
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  sub_19CAA9C08();
  sub_19CAAA190();
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5A569C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  if (!result)
  {
    v8 = 0;
    return sub_19C5A5710(a3, result, v8, a4, a5, a7);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72);
  if (v7)
  {
    if (a2 - result != 0x8000000000000000 || v7 != -1)
    {
      v8 = (a2 - result) / v7;
      return sub_19C5A5710(a3, result, v8, a4, a5, a7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C5A5710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v32 = a1;
  v11 = sub_19CAA9E18();
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v29 = (char *)&v25 - v13;
  v14 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v19 = (char *)&v25 - v18;
  v26 = a4;
  v27 = a2;
  v33 = a4;
  v34 = a5;
  v35 = a6;
  v36 = a2;
  v20 = v32;
  v28 = a3;
  v37 = a3;
  sub_19CAA9968();
  if (v39 != 1)
    return v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v20, a5);
  v21 = sub_19CAA9950();
  swift_getAssociatedConformanceWitness();
  v22 = v29;
  sub_19CAA9E54();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v19, AssociatedTypeWitness);
  v23 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v22, 1);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v31);
  if (v23 != 1)
  {
    __break(1u);
    return v38;
  }
  return v21;
}

uint64_t MLTensor.init<A, B>(_:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_19CAE8180;
  *(_QWORD *)(v11 + 32) = sub_19CAA9C08();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  MLTensor.init<A, B>(shape:scalars:scalarType:)(v11, v10, a2, a3, &v14);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  *a4 = v14;
  return result;
}

uint64_t MLTensor.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19CAE8180;
  *(_QWORD *)(v9 + 32) = sub_19CAA9C08();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  MLTensor.init<A>(shape:scalars:)(v9, (uint64_t)v8, a2, &v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v12;
  return result;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19CAE8180;
  *(_QWORD *)(v9 + 32) = sub_19CAA9C08();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  MLTensor.init<A, B>(shape:scalars:scalarType:)(v9, v8, MEMORY[0x1E0DEDBC8], a2, &v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v12;
  return result;
}

uint64_t MLTensor.init(repeating:shape:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, float a3@<S0>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10[5];
  float v11;

  v11 = a3;
  if (qword_1EE422E80 != -1)
    swift_once();
  sub_19CAAA37C();
  sub_19C522A50(MEMORY[0x1E0DEE9D8], v10);
  sub_19C4F382C(v9);
  v5 = v10[4];
  v6 = __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  MEMORY[0x1E0C80A78](v6);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)()))(v5 + 8))(a1, 10, sub_19C5AB1C0);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  *a2 = v7;
  return result;
}

uint64_t MLTensor.init<A>(repeating:shape:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t result;
  void *v15;
  uint64_t v16[5];

  if (qword_1EE422E80 != -1)
    swift_once();
  sub_19CAAA37C();
  sub_19C522A50(MEMORY[0x1E0DEE9D8], v16);
  sub_19C4F382C(v15);
  v10 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  v11 = sub_19C59E650(a3, 0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t (*)()))(v10 + 8))(a2, v12 & 0x1FF, sub_19C5AB1C0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  *a5 = v13;
  return result;
}

int32x4_t *sub_19C5A5EB0(int32x4_t *result, uint64_t a2, int32x2_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int32x4_t *v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if (result)
  {
    if (a2 - (uint64_t)result >= 0)
      v3 = a2 - (_QWORD)result;
    else
      v3 = a2 - (_QWORD)result + 3;
    if (a2 - (uint64_t)result < -3)
    {
      __break(1u);
      return result;
    }
    if ((unint64_t)(a2 - (_QWORD)result + 3) >= 7)
    {
      v4 = v3 >> 2;
      if ((unint64_t)(v3 >> 2) < 8)
      {
        v5 = 0;
        v6 = result;
LABEL_12:
        v10 = v4 - v5;
        do
        {
          v6->i32[0] = a3.i32[0];
          v6 = (int32x4_t *)((char *)v6 + 4);
          --v10;
        }
        while (v10);
        return result;
      }
      v5 = v4 & 0xFFFFFFFFFFFFFFF8;
      v6 = (int32x4_t *)((char *)result + 4 * (v4 & 0xFFFFFFFFFFFFFFF8));
      v7 = vdupq_lane_s32(a3, 0);
      v8 = result + 1;
      v9 = v4 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v8[-1] = v7;
        *v8 = v7;
        v8 += 2;
        v9 -= 8;
      }
      while (v9);
      if (v4 != v5)
        goto LABEL_12;
    }
  }
  return result;
}

uint64_t MLTensor.init<A>(zeros:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_19C5A5F48(a1, a2, a3, a4);
}

{
  return sub_19C5A6018(a1, a2, a3, a4);
}

uint64_t MLTensor.init<A>(ones:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_19C5A5F48(a1, a2, a3, a4);
}

{
  return sub_19C5A6018(a1, a2, a3, a4);
}

uint64_t sub_19C5A5F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v10;
  sub_19C4F1A8C();
  sub_19CAA9EC0();
  result = MLTensor.init<A>(repeating:shape:scalarType:)((uint64_t)v9, a1, a2, a3, &v13);
  *a4 = v13;
  return result;
}

uint64_t sub_19C5A6018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19CAA9830();
  result = MLTensor.init<A>(repeating:shape:scalarType:)((uint64_t)v9, a1, a2, a3, &v12);
  *a4 = v12;
  return result;
}

void MLTensor.init(rangeFrom:to:by:)(_QWORD *a1@<X8>, float a2@<S0>, float a3@<S1>, float a4@<S2>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[5];

  if (a4 == 0.0)
  {
    __break(1u);
  }
  else
  {
    v10[3] = v4;
    v10[4] = v5;
    sub_19C5A8ACC(a2, a3, a4);
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_19CAE8180;
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v8 + 16);
    sub_19C4FCF90(v9, v8, v10);
    *a1 = v10[0];
  }
}

uint64_t MLTensor.init<A>(rangeFrom:to:by:scalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v15;

  v10 = sub_19CAAA34C();
  MEMORY[0x1E0C80A78](v10);
  sub_19CAAA304();
  MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEE898], v10);
  v15 = sub_19CAA9AAC();
  v11 = sub_19CAA9AA0();
  MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEAF50], v11);
  MLTensor.init<A, B>(_:scalarType:)((uint64_t)&v15, a4, v11, a5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a3, AssociatedTypeWitness);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8);
  v13(a2, a4);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(a1, a4);
}

uint64_t MLTensor.init(linearSpaceFrom:through:count:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t result;
  uint64_t v6;

  result = sub_19C5A62D8(a1, &v6, a3, a4);
  *a2 = v6;
  return result;
}

uint64_t sub_19C5A62D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];
  uint64_t v10;
  float v11;
  float v12;

  v12 = a3;
  if (a1 < 2)
  {
    result = sub_19CAAA0B8();
    __break(1u);
  }
  else
  {
    v11 = (float)(a4 - a3) / (float)(a1 - 1);
    MEMORY[0x1E0C80A78](a1);
    v9[2] = &v12;
    v9[3] = &v11;
    v6 = sub_19C55EBFC(sub_19C5A8E50, (uint64_t)v9, 0, v5);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE422D98);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19CAE8180;
    *(_QWORD *)(v7 + 32) = v6[2];
    result = sub_19C4FCF90(v7, (uint64_t)v6, &v10);
    *a2 = v10;
  }
  return result;
}

uint64_t MLTensor.init<A>(linearSpaceFrom:through:count:scalarType:)@<X0>(char *a1@<X0>, uint64_t a2@<X2>, char *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD v35[2];

  v32 = a4;
  v33 = a6;
  v10 = *((_QWORD *)a3 - 1);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v30 - v18;
  if (v20 < 2)
  {
    result = sub_19CAAA0B8();
    __break(1u);
  }
  else
  {
    v31 = v17;
    sub_19CAAA0D0();
    sub_19CAA9830();
    sub_19CAA9824();
    v21 = *(void (**)(char *, char *))(v10 + 8);
    v21(v13, a3);
    v22 = ((uint64_t (*)(char *, char *))v21)(v16, a3);
    v35[0] = 0;
    v35[1] = a2;
    MEMORY[0x1E0C80A78](v22);
    v23 = v32;
    *(&v30 - 6) = (uint64_t)a3;
    *(&v30 - 5) = v23;
    *(&v30 - 4) = a5;
    *(&v30 - 3) = (uint64_t)a1;
    v29 = v19;
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424180);
    v25 = sub_19C4F158C();
    v34 = sub_19C4EB7D8((void (*)(char *, char *))sub_19C5A8DC0, (uint64_t)(&v30 - 8), v24, a3, MEMORY[0x1E0DEDCE8], v25, MEMORY[0x1E0DEDD18], v26);
    v27 = sub_19CAA9AA0();
    MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEAF50], v27);
    MLTensor.init<A, B>(_:scalarType:)((uint64_t)&v34, (uint64_t)a3, v27, v35);
    v21(v31, a3);
    v21(a1, a3);
    result = ((uint64_t (*)(char *, char *))v21)(v19, a3);
    *v33 = v35[0];
  }
  return result;
}

uint64_t sub_19C5A6660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v5 = *(_QWORD *)(a4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v13 - v9;
  sub_19CAA9830();
  sub_19CAA9BC0();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, a4);
  sub_19CAAA0C4();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, a4);
}

uint64_t sub_19C5A6768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t DynamicType;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37[5];
  void *v38;

  v9 = *(_QWORD **)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v10 + 16);
  if (v16)
  {
    v17 = (uint64_t *)(a1 + 32);
    v18 = 1;
    while (1)
    {
      v19 = *v17++;
      v20 = v18 * v19;
      if ((unsigned __int128)(v18 * (__int128)v19) >> 64 != (v18 * v19) >> 63)
        break;
      v18 = v20;
      if (!--v16)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_15;
  }
  v20 = 1;
LABEL_7:
  v21 = v12;
  v35 = v11;
  v36 = v13;
  v22 = MEMORY[0x1A1AD45B0](a2, a5);
  if (v20 == v22)
  {
    v37[0] = a2;
    v23 = sub_19CAA9AA0();
    MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEAF50], v23);
    if ((sub_19CAA9C80() & 1) == 0)
    {
      sub_19CAA9AB8();
      DynamicType = swift_getDynamicType();
      v25 = ((uint64_t (*)(char *, uint64_t))v9[1])(v15, a5);
      if (DynamicType == a3)
      {
        v38 = (void *)a2;
        result = MLTensor.init<A, B>(shape:scalars:scalarType:)(a1, (uint64_t *)&v38, a5, v23, v37);
        v30 = v37[0];
        goto LABEL_13;
      }
      MEMORY[0x1E0C80A78](v25);
      v9 = &v35 - 8;
      *(&v35 - 6) = (_QWORD *)a5;
      *(&v35 - 5) = v21;
      *(&v35 - 4) = (_QWORD *)a2;
      *(&v35 - 3) = (_QWORD *)DynamicType;
      v33 = a3;
      v34 = v35;
      if (qword_1EE422E80 == -1)
      {
LABEL_11:
        sub_19CAAA37C();
        v26 = v38;
        sub_19C522A50(MEMORY[0x1E0DEE9D8], v37);
        sub_19C4F382C(v26);
        v27 = v37[4];
        __swift_project_boxed_opaque_existential_1(v37, v37[3]);
        v28 = sub_19C59E650(a3, 0);
        v29 = MEMORY[0x1E0C80A78](v28);
        v33 = (uint64_t)sub_19C5A8F2C;
        v34 = v9;
        v30 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t (*)()))(v27 + 8))(a1, v29 & 0x1FF, sub_19C5AB1C0);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
        result = swift_bridgeObjectRelease();
LABEL_13:
        *v36 = v30;
        return result;
      }
LABEL_15:
      swift_once();
      goto LABEL_11;
    }
    LODWORD(v34) = 0;
    v33 = 266;
  }
  else
  {
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    v32 = v22;
    sub_19CAA9F2C();
    sub_19CAA992C();
    v38 = (void *)v20;
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    v38 = (void *)v32;
    sub_19CAAA190();
    sub_19CAA992C();
    swift_bridgeObjectRelease();
    sub_19CAA992C();
    LODWORD(v34) = 0;
    v33 = 263;
  }
  result = sub_19CAAA0B8();
  __break(1u);
  return result;
}

uint64_t sub_19C5A6B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int16 v16;
  __int16 v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v20 = a1;
  v21 = a2;
  v12 = sub_19CAAA1B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19C59E650(a3, 0);
  v17 = sub_19C59E650(a6, 0);
  v18 = MEMORY[0x1A1AD45B0](a8, a9);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DED4D8], v12);
  sub_19C593E88(v20, v21, v16 & 0x1FF, v22, v23, v17 & 0x1FF, v18, (uint64_t)v15);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t MLTensor.init(floatLiteral:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8[5];

  if (qword_1EE422E80 != -1)
    swift_once();
  sub_19CAAA37C();
  v2 = MEMORY[0x1E0DEE9D8];
  sub_19C522A50(MEMORY[0x1E0DEE9D8], v8);
  sub_19C4F382C(v7);
  v3 = v8[4];
  v4 = __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  MEMORY[0x1E0C80A78](v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(float *, uint64_t)))(v3 + 8))(v2, 266, sub_19C5A8DE4);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  *a1 = v5;
  return result;
}

uint64_t sub_19C5A6D98(float *a1, uint64_t a2, float a3)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t result;

  if (a1)
    v5 = (a2 - (uint64_t)a1) / 4;
  else
    v5 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
  inited = swift_initStackObject();
  *(float *)(inited + 32) = a3;
  if (!a1)
LABEL_12:
    __break(1u);
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (inited + 32 < (unint64_t)(a1 + 1) && inited + 36 > (unint64_t)a1)
  {
    result = sub_19CAAA118();
    __break(1u);
  }
  else
  {
    *a1 = a3;
    return swift_setDeallocating();
  }
  return result;
}

uint64_t sub_19C5A6EB4@<X0>(uint64_t *a1@<X8>)
{
  return MLTensor.init(floatLiteral:)(a1);
}

uint64_t MLTensor.init(integerLiteral:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8[5];

  if (qword_1EE422E80 != -1)
    swift_once();
  sub_19CAAA37C();
  v2 = MEMORY[0x1E0DEE9D8];
  sub_19C522A50(MEMORY[0x1E0DEE9D8], v8);
  sub_19C4F382C(v7);
  v3 = v8[4];
  v4 = __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  MEMORY[0x1E0C80A78](v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(_DWORD *, uint64_t)))(v3 + 8))(v2, 263, sub_19C5A8DFC);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  *a1 = v5;
  return result;
}

uint64_t sub_19C5A6FC8(_DWORD *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t result;

  if (a1)
    v5 = (a2 - (uint64_t)a1) / 4;
  else
    v5 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424938);
  inited = swift_initStackObject();
  *(_DWORD *)(inited + 32) = a3;
  if (!a1)
LABEL_12:
    __break(1u);
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (inited + 32 < (unint64_t)(a1 + 1) && inited + 36 > (unint64_t)a1)
  {
    result = sub_19CAAA118();
    __break(1u);
  }
  else
  {
    *a1 = a3;
    return swift_setDeallocating();
  }
  return result;
}

uint64_t sub_19C5A70DC@<X0>(uint64_t *a1@<X8>)
{
  return MLTensor.init(integerLiteral:)(a1);
}

uint64_t MLTensor.init(BOOLeanLiteral:)@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t inited;
  uint64_t result;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424930);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19CAE8180;
  *(_BYTE *)(inited + 32) = a1;
  result = sub_19C4FD294(MEMORY[0x1E0DEE9D8], inited, &v6);
  *a2 = v6;
  return result;
}

uint64_t sub_19C5A714C@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t inited;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424930);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19CAE8180;
  *(_BYTE *)(inited + 32) = v3;
  result = sub_19C4FD294(MEMORY[0x1E0DEE9D8], inited, &v6);
  *a2 = v6;
  return result;
}

uint64_t sub_19C5A71B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_bridgeObjectRetain();
  return MLTensor.init(unsafeUninitializedShape:scalarType:initializingWith:)(v3, AssociatedTypeWitness, a1);
}

uint64_t sub_19C5A7264(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!a1)
    goto LABEL_5;
  result = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (v5)
  {
    if (a2 - a1 != 0x8000000000000000 || v5 != -1)
    {
LABEL_5:
      swift_getAssociatedTypeWitness();
      v6 = sub_19CAA98E4();
      MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEA5E8], v6);
      sub_19CAA9C68();
      v7 = sub_19CAAA280();
      MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEDE38], v7);
      return sub_19CAA9E24();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19C5A73C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_bridgeObjectRetain();
  return MLTensor.init(unsafeUninitializedShape:scalarType:initializingWith:)(v3, AssociatedTypeWitness, a1);
}

uint64_t sub_19C5A7488(uint64_t result, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  int64_t v4;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = a3[2];
  if (v4 != a4[2])
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v7 = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_19C500C0C(0, v4);
  result = swift_bridgeObjectRetain();
  v24 = v7;
  if (v4)
  {
    result = sub_19C500C0C(1uLL, v4);
    v8 = (_QWORD *)result;
    v9 = 0;
    v10 = v4 - 2;
    v11 = v4 - 3;
    if (v4 - 2 >= 1)
      goto LABEL_6;
LABEL_4:
    if (!((v10 != 0) | v9 & 1))
    {
      v11 = 0;
      v9 = 1;
LABEL_6:
      while (1)
      {
        v12 = v10 + 1;
        if ((int64_t)(v10 + 1) >= v8[2])
          break;
        if (v12 >= v4)
          goto LABEL_28;
        v13 = v12;
        v14 = v8[v13 + 4];
        v15 = a3[v13 + 4];
        v16 = v14 * v15;
        if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63)
          goto LABEL_29;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_19C503550(v8);
          v8 = (_QWORD *)result;
        }
        if (v10 >= v8[2])
          goto LABEL_30;
        v8[v10 + 4] = v16;
        v10 = v11;
        v17 = __OFSUB__(v11--, 1);
        if (v11 < 0 != v17)
          goto LABEL_4;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v7 = v24;
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (v4 != v8[2])
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v18 = sub_19C500C0C(0, v4);
  if (v7)
  {
    result = swift_getAssociatedTypeWitness();
    v19 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
    if (!v19)
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    AssociatedTypeWitness = result;
    if (a2 - v7 == 0x8000000000000000 && v19 == -1)
      goto LABEL_34;
  }
  else
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  }
  result = sub_19CAA98CC();
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v21 = result;
  result = sub_19CAA98CC();
  if (result)
  {
    sub_19C591D40(v23, (uint64_t)a3, a4, v18, a3, v8, v21, result, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
LABEL_36:
  __break(1u);
  return result;
}

void MLTensor.init(shape:data:scalarType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_19C5A7A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

void *sub_19C5A7AA0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10, int a11, uint64_t a12, __int16 a13, char __src, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *result;
  uint64_t v44;
  __int16 v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v44 = v41;
  v45 = v42;
  v46 = BYTE2(v42);
  v47 = BYTE3(v42);
  v48 = BYTE4(v42);
  v49 = BYTE5(v42);
  if (v39)
  {
    if (v40 - (uint64_t)v39 >= BYTE6(v42))
      return memcpy(v39, &v44, BYTE6(v42));
LABEL_5:
    sub_19CAAA118();
    __break(1u);
    JUMPOUT(0x19C5A7C98);
  }
  if (BYTE6(v42))
    goto LABEL_5;
  return result;
}

uint64_t MLTensor.init(bytesNoCopy:shape:scalarType:deallocator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X5>, unint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int16 v16;
  __int16 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, _QWORD);
  void (*v29)(char *, uint64_t);
  uint64_t result;
  unint64_t *v31;
  uint64_t v32;
  unint64_t *v33;

  v12 = sub_19CAA9608();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_19C59E650(a4, 0);
  v17 = v16;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v19 = (uint64_t *)(a3 + 32);
    v20 = 1;
    while (1)
    {
      v21 = *v19++;
      v22 = v20 * v21;
      if ((unsigned __int128)(v20 * (__int128)v21) >> 64 != (v20 * v21) >> 63)
        break;
      v20 = v22;
      if (!--v18)
        goto LABEL_7;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    if (a4 < 1)
      __break(1u);
    goto LABEL_21;
  }
  v22 = 1;
LABEL_7:
  if (v16 > 0xAu)
    v23 = 8;
  else
    v23 = qword_19CAED438[(char)v16];
  a4 = v22 * v23;
  if ((unsigned __int128)(v22 * (__int128)v23) >> 64 != (v22 * v23) >> 63)
    goto LABEL_18;
  if (!a1)
    goto LABEL_19;
  v32 = a3;
  v33 = a6;
  if (a2 - a1 < a4)
  {
LABEL_21:
    result = sub_19CAAA0B8();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, a5, v12);
  sub_19CAA95FC();
  if (a4)
  {
    sub_19CAA95B4();
    swift_allocObject();
    swift_retain();
    v24 = sub_19CAA9584();
    v25 = sub_19C559C6C(v24, a4);
    v27 = v26;
    swift_release();
  }
  else
  {
    v28 = (void (*)(uint64_t, _QWORD))sub_19CAA95FC();
    v28(a1, 0);
    swift_release();
    swift_release();
    v25 = 0;
    v27 = 0xC000000000000000;
  }
  v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v15, v12);
  v29(a5, v12);
  type metadata accessor for MLTensorData();
  result = swift_allocObject();
  v31 = v33;
  *(_QWORD *)(result + 16) = v32;
  *(_BYTE *)(result + 24) = v17;
  *(_BYTE *)(result + 25) = HIBYTE(v17) & 1;
  *(_QWORD *)(result + 32) = v25;
  *(_QWORD *)(result + 40) = v27;
  *v31 = result | 0x8000000000000000;
  return result;
}

uint64_t sub_19C5A7F44@<X0>(uint64_t *a1@<X8>)
{
  return sub_19C5A73C8(a1);
}

uint64_t sub_19C5A7F60@<X0>(uint64_t *a1@<X8>)
{
  return sub_19C5A71B4(a1);
}

uint64_t sub_19C5A7F7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_19C5A7F9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_19C5A569C(a1, a2, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_19C5A7FBC(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  const void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = 0;
  if (a2)
  {
    v7 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
    v35 = a1 + 8;
    v36 = a1 + 32;
    v37 = a1;
    while (1)
    {
      v8 = a2 + 2;
      v9 = a2[2];
      if (!v9)
        break;
      v10 = v9 - 1;
      v11 = a2[v9 + 3];
      v12 = __OFADD__(v11, 1);
      v13 = v11 + 1;
      if (v12)
        goto LABEL_52;
      v14 = *(_QWORD *)(a1 + 16);
      if (v9 > v14)
        goto LABEL_53;
      if (v13 >= *(_QWORD *)(v36 + 16 * v10 + 8))
      {
        result = swift_bridgeObjectRetain();
        if (v9 != 1)
        {
          v16 = (_QWORD *)(v35 + 16 * v9);
          v15 = a2;
          while (v15)
          {
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_19C503550(v15);
              v15 = (_QWORD *)result;
            }
            v17 = v9 - 1;
            if ((int64_t)(v9 - 1) >= v15[2])
            {
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v15[v9 + 3] = 0;
            v10 = v9 - 2;
            if ((int64_t)(v9 - 2) >= *v8)
              goto LABEL_48;
            v18 = v8[v9];
            v12 = __OFADD__(v18, 1);
            v19 = v18 + 1;
            if (v12)
              goto LABEL_49;
            if (v10 >= (uint64_t)v14)
              goto LABEL_50;
            if (v19 < *v16)
            {
              a1 = v37;
              goto LABEL_24;
            }
            v16 -= 2;
            --v9;
            if (v17 == 1)
              goto LABEL_21;
          }
LABEL_58:
          __break(1u);
          return result;
        }
LABEL_21:
        result = swift_bridgeObjectRelease();
        v15 = 0;
        a1 = v37;
        if (!v6)
          goto LABEL_29;
      }
      else
      {
        swift_bridgeObjectRetain();
        v15 = a2;
LABEL_24:
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_19C503550(v15);
          v15 = (_QWORD *)result;
        }
        if (v10 >= v15[2])
          goto LABEL_54;
        v20 = v15[v10 + 4];
        v12 = __OFADD__(v20, 1);
        v21 = v20 + 1;
        if (v12)
          goto LABEL_55;
        v15[v10 + 4] = v21;
        if (!v6)
          goto LABEL_29;
      }
LABEL_41:
      v12 = __OFSUB__(v6--, 1);
      if (v12)
      {
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      *v7++ = a2;
      a2 = v15;
      if (!v15)
        goto LABEL_43;
    }
    result = swift_bridgeObjectRetain();
    v15 = a2;
    if (v6)
    {
      v15 = a2;
      goto LABEL_41;
    }
LABEL_29:
    v22 = v5[3];
    if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_56;
    v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
    if (v23 <= 1)
      v24 = 1;
    else
      v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4242B0);
    v25 = (_QWORD *)swift_allocObject();
    v26 = _swift_stdlib_malloc_size(v25);
    v27 = v26 - 32;
    if (v26 < 32)
      v27 = v26 - 25;
    v28 = v27 >> 3;
    v25[2] = v24;
    v25[3] = 2 * (v27 >> 3);
    v29 = (unint64_t)(v25 + 4);
    v30 = v5[3] >> 1;
    if (v5[2])
    {
      v31 = v5 + 4;
      if (v25 != v5 || v29 >= (unint64_t)v31 + 8 * v30)
        memmove(v25 + 4, v31, 8 * v30);
      v5[2] = 0;
    }
    v7 = (_QWORD *)(v29 + 8 * v30);
    v6 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v30;
    result = swift_release();
    v5 = v25;
    a1 = v37;
    goto LABEL_41;
  }
LABEL_43:
  result = swift_bridgeObjectRelease();
  v32 = v5[3];
  if (v32 >= 2)
  {
    v33 = v32 >> 1;
    v12 = __OFSUB__(v33, v6);
    v34 = v33 - v6;
    if (v12)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v5[2] = v34;
  }
  return (uint64_t)v5;
}

int64_t sub_19C5A82A8(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64x2_t v17;
  int64x2_t v18;
  float64x2_t *v19;
  double *v20;
  float64x2_t *v21;
  int64x2_t v22;
  unint64_t v23;
  double *v24;
  float64x2_t v25;
  float64x2_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  float64x2x2_t v39;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (v3 >= v2)
    v4 = *(_QWORD *)(result + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424230);
    v7 = (_QWORD *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v7);
    v8 = result - 32;
    if (result < 32)
      v8 = result - 17;
    v9 = v8 >> 4;
    v7[2] = v4;
    v7[3] = 2 * (v8 >> 4);
    v10 = v7 + 4;
    v11 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    v12 = v4 - 1;
    if (v4 - 1 >= v3)
      v12 = v3;
    if (v12 >= v2)
      v12 = v2;
    if (v12 >= 4)
    {
      v15 = v12 + 1;
      v16 = v15 & 3;
      if ((v15 & 3) == 0)
        v16 = 4;
      v13 = v15 - v16;
      v10 += 2 * v13;
      v17 = (int64x2_t)(unint64_t)v11;
      v18 = 0uLL;
      v19 = (float64x2_t *)(v6 + 48);
      v20 = (double *)(v7 + 8);
      v21 = (float64x2_t *)(a2 + 48);
      v22.i64[0] = -1;
      v22.i64[1] = -1;
      v23 = v13;
      do
      {
        v24 = v20 - 4;
        v39.val[0] = v19[-1];
        v39.val[1] = v21[-1];
        vst2q_f64(v24, v39);
        v25 = *v19;
        v19 += 2;
        v39.val[0] = v25;
        v26 = *v21;
        v21 += 2;
        v39.val[1] = v26;
        vst2q_f64(v20, v39);
        v17 = vaddq_s64(v17, v22);
        v18 = vaddq_s64(v18, v22);
        v20 += 8;
        v23 -= 4;
      }
      while (v23);
      v11 = vaddvq_s64(vaddq_s64(v18, v17));
    }
    else
    {
      v13 = 0;
    }
    v27 = 0;
    v28 = v4 - v13;
    v29 = 8 * v13 + 32;
    v30 = a2 + v29;
    v31 = v6 + v29;
    v32 = v3 - v13;
    v33 = v2 - v13;
    do
    {
      if (v33 == v27)
      {
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (v32 == v27)
        goto LABEL_31;
      v34 = *(_QWORD *)(v30 + 8 * v27);
      *v10 = *(_QWORD *)(v31 + 8 * v27);
      v10[1] = v34;
      v10 += 2;
      ++v27;
    }
    while (v28 != v27);
    v14 = v11 - v27;
    if (v2 <= v3)
      goto LABEL_26;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
    if (!v2)
      goto LABEL_26;
  }
  if (v2 <= v3)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_26:
  v35 = v7[3];
  if (v35 < 2)
    return (int64_t)v7;
  v36 = v35 >> 1;
  v37 = __OFSUB__(v36, v14);
  v38 = v36 - v14;
  if (!v37)
  {
    v7[2] = v38;
    return (int64_t)v7;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_19C5A8470(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  if (a2)
  {
    v2 = result;
    v3 = *(_QWORD *)(result + 16);
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      result = swift_retain();
      v6 = 0;
      v7 = 0;
      v8 = a2 - 1;
      v9 = v4 + 4;
      v10 = v3 - 1;
      while (1)
      {
        v11 = *(_QWORD *)(v2 + 8 * v6 + 32);
        if (!v7)
        {
          v12 = v4[3];
          if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
          if (v13 <= 1)
            v14 = 1;
          else
            v14 = v13;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424228);
          v15 = (_QWORD *)swift_allocObject();
          v16 = _swift_stdlib_malloc_size(v15);
          v17 = v16 - 32;
          if (v16 < 32)
            v17 = v16 - 25;
          v18 = v17 >> 3;
          v15[2] = v14;
          v15[3] = 2 * (v17 >> 3);
          v19 = (unint64_t)(v15 + 4);
          v20 = v4[3] >> 1;
          if (v4[2])
          {
            if (v15 != v4 || v19 >= (unint64_t)&v4[v20 + 4])
              memmove(v15 + 4, v4 + 4, 8 * v20);
            v4[2] = 0;
          }
          v9 = (_QWORD *)(v19 + 8 * v20);
          v7 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v20;
          result = swift_release();
          v4 = v15;
        }
        v22 = __OFSUB__(v7--, 1);
        if (v22)
          break;
        *v9++ = v11;
        if (v8 != v6 && v10 != v6++)
          continue;
        result = swift_release();
        goto LABEL_27;
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v7 = 0;
  }
  else
  {
    v7 = 0;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_27:
  v24 = v4[3];
  if (v24 < 2)
    return (uint64_t)v4;
  v25 = v24 >> 1;
  v22 = __OFSUB__(v25, v7);
  v26 = v25 - v7;
  if (!v22)
  {
    v4[2] = v26;
    return (uint64_t)v4;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_19C5A8608(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  if (a2)
  {
    v2 = result;
    v3 = *(_QWORD *)(result + 16);
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      result = swift_retain();
      v6 = 0;
      v7 = 0;
      v8 = a2 - 1;
      v9 = v4 + 4;
      v10 = v3 - 1;
      while (1)
      {
        v11 = *(_DWORD *)(v2 + 4 * v6 + 32);
        if (!v7)
        {
          v12 = v4[3];
          if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
          if (v13 <= 1)
            v14 = 1;
          else
            v14 = v13;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
          v15 = (_QWORD *)swift_allocObject();
          v16 = _swift_stdlib_malloc_size(v15);
          v17 = v16 - 32;
          if (v16 < 32)
            v17 = v16 - 29;
          v18 = v17 >> 2;
          v15[2] = v14;
          v15[3] = 2 * (v17 >> 2);
          v19 = (unint64_t)(v15 + 4);
          v20 = v4[3] >> 1;
          if (v4[2])
          {
            if (v15 != v4 || v19 >= (unint64_t)v4 + 4 * v20 + 32)
              memmove(v15 + 4, v4 + 4, 4 * v20);
            v4[2] = 0;
          }
          v9 = (_DWORD *)(v19 + 4 * v20);
          v7 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v20;
          result = swift_release();
          v4 = v15;
        }
        v22 = __OFSUB__(v7--, 1);
        if (v22)
          break;
        *v9++ = v11;
        if (v8 != v6 && v10 != v6++)
          continue;
        result = swift_release();
        goto LABEL_27;
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v7 = 0;
  }
  else
  {
    v7 = 0;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_27:
  v24 = v4[3];
  if (v24 < 2)
    return (uint64_t)v4;
  v25 = v24 >> 1;
  v22 = __OFSUB__(v25, v7);
  v26 = v25 - v7;
  if (!v22)
  {
    v4[2] = v26;
    return (uint64_t)v4;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_19C5A87A0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  unint64_t v7;
  _WORD *v8;
  uint64_t v9;
  __int16 v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  BOOL v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;

  if (a2)
  {
    v2 = result;
    v3 = *(_QWORD *)(result + 16);
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      result = swift_retain();
      v6 = 0;
      v7 = 0;
      v8 = v4 + 4;
      v9 = v3 - 1;
      while (1)
      {
        v10 = *(_WORD *)(v2 + 2 * v6 + 32);
        if (!v7)
        {
          v11 = v4[3];
          if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_33;
          v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
          if (v12 <= 1)
            v13 = 1;
          else
            v13 = v12;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424220);
          v14 = (_QWORD *)swift_allocObject();
          v15 = _swift_stdlib_malloc_size(v14);
          if (v15 >= 32)
            v16 = v15 - 32;
          else
            v16 = v15 - 31;
          v14[2] = v13;
          v14[3] = v16 & 0xFFFFFFFFFFFFFFFELL;
          v17 = (unint64_t)(v14 + 4);
          v18 = v4[3];
          v19 = v18 >> 1;
          if (v4[2])
          {
            if (v14 != v4 || v17 >= (unint64_t)v4 + 2 * v19 + 32)
              memmove(v14 + 4, v4 + 4, v18 & 0xFFFFFFFFFFFFFFFELL);
            v4[2] = 0;
          }
          v21 = v16 >> 1;
          v8 = (_WORD *)(v17 + 2 * v19);
          v7 = v21 - v19;
          result = swift_release();
          v4 = v14;
        }
        v22 = __OFSUB__(v7--, 1);
        if (v22)
          break;
        *v8++ = v10;
        if (a2 - 1 != v6 && v9 != v6++)
          continue;
        result = swift_release();
        goto LABEL_28;
      }
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v7 = 0;
  }
  else
  {
    v7 = 0;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_28:
  v24 = v4[3];
  if (v24 < 2)
    return (uint64_t)v4;
  v25 = v24 >> 1;
  v22 = __OFSUB__(v25, v7);
  v26 = v25 - v7;
  if (!v22)
  {
    v4[2] = v26;
    return (uint64_t)v4;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_19C5A8938(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a2)
  {
    v2 = *(_QWORD *)(result + 16);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v2)
    {
      result = swift_retain();
      v5 = 0;
      v6 = 0;
      v7 = a2 - 1;
      v8 = v3 + 4;
      v9 = v2 - 1;
      v26 = result;
      while (1)
      {
        v10 = *(_DWORD *)(result + 4 * v5 + 32);
        if (!v6)
        {
          v11 = v3[3];
          if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_32;
          v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
          if (v12 <= 1)
            v13 = 1;
          else
            v13 = v12;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424938);
          v14 = (_QWORD *)swift_allocObject();
          v15 = _swift_stdlib_malloc_size(v14);
          v16 = v15 - 32;
          if (v15 < 32)
            v16 = v15 - 29;
          v17 = v16 >> 2;
          v14[2] = v13;
          v14[3] = 2 * (v16 >> 2);
          v18 = (unint64_t)(v14 + 4);
          v19 = v3[3] >> 1;
          if (v3[2])
          {
            if (v14 != v3 || v18 >= (unint64_t)v3 + 4 * v19 + 32)
              memmove(v14 + 4, v3 + 4, 4 * v19);
            v3[2] = 0;
          }
          v8 = (_DWORD *)(v18 + 4 * v19);
          v6 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
          swift_release();
          v3 = v14;
          result = v26;
        }
        v21 = __OFSUB__(v6--, 1);
        if (v21)
          break;
        *v8++ = v10;
        if (v7 != v5 && v9 != v5++)
          continue;
        result = swift_release();
        goto LABEL_27;
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v6 = 0;
  }
  else
  {
    v6 = 0;
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_27:
  v23 = v3[3];
  if (v23 < 2)
    return (uint64_t)v3;
  v24 = v23 >> 1;
  v21 = __OFSUB__(v24, v6);
  v25 = v24 - v6;
  if (!v21)
  {
    v3[2] = v25;
    return (uint64_t)v3;
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_19C5A8ACC(float a1, float a2, float a3)
{
  BOOL v6;
  uint64_t v7;
  float *v8;
  float *v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  float v13;
  BOOL v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  BOOL v20;
  BOOL v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  float *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  const void *v31;
  BOOL v32;
  BOOL v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v6 = a1 <= a2;
  if (a3 > 0.0)
    v6 = a1 >= a2;
  if (!v6)
  {
    v12 = -1;
    do
    {
      v7 = ++v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_47;
      }
      v13 = a1 + (float)((float)v7 * a3);
      v14 = v13 <= a2;
      if (a3 > 0.0)
        v14 = v13 >= a2;
    }
    while (!v14);
    if (v7 <= 0)
    {
      v8 = (float *)MEMORY[0x1E0DEE9D8];
      v9 = (float *)(MEMORY[0x1E0DEE9D8] + 32);
      v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
      if (v12 == -1)
        goto LABEL_5;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
      v8 = (float *)swift_allocObject();
      v15 = _swift_stdlib_malloc_size(v8);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 29;
      v17 = v16 >> 2;
      *((_QWORD *)v8 + 2) = v7;
      *((_QWORD *)v8 + 3) = 2 * v17;
      v9 = v8 + 8;
      v10 = v17 & 0x7FFFFFFFFFFFFFFFLL;
    }
    v10 -= v7;
    v18 = -1;
    v19 = a1;
    while (1)
    {
      v20 = v19 <= a2;
      if (a3 > 0.0)
        v20 = v19 >= a2;
      if (v20)
        goto LABEL_49;
      v11 = a1 + (float)((float)(v18 + 2) * a3);
      *v9++ = v19;
      ++v18;
      v19 = v11;
      if (v12 == v18)
        goto LABEL_21;
    }
  }
  v7 = 0;
  v8 = (float *)MEMORY[0x1E0DEE9D8];
  v9 = (float *)(MEMORY[0x1E0DEE9D8] + 32);
  v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
LABEL_5:
  v11 = a1;
LABEL_21:
  v21 = v11 <= a2;
  if (a3 > 0.0)
    v21 = v11 >= a2;
  if (!v21)
  {
    while (!__OFADD__(v7, 1))
    {
      if (!v10)
      {
        v22 = *((_QWORD *)v8 + 3);
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_50;
        v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1)
          v24 = 1;
        else
          v24 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
        v25 = (float *)swift_allocObject();
        v26 = _swift_stdlib_malloc_size(v25);
        v27 = v26 - 32;
        if (v26 < 32)
          v27 = v26 - 29;
        v28 = v27 >> 2;
        *((_QWORD *)v25 + 2) = v24;
        *((_QWORD *)v25 + 3) = 2 * (v27 >> 2);
        v29 = (unint64_t)(v25 + 8);
        v30 = *((_QWORD *)v8 + 3) >> 1;
        if (*((_QWORD *)v8 + 2))
        {
          v31 = v8 + 8;
          if (v25 != v8 || v29 >= (unint64_t)v31 + 4 * v30)
            memmove(v25 + 8, v31, 4 * v30);
          *((_QWORD *)v8 + 2) = 0;
        }
        v9 = (float *)(v29 + 4 * v30);
        v10 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v30;
        swift_release();
        v8 = v25;
      }
      v32 = __OFSUB__(v10--, 1);
      if (v32)
        goto LABEL_48;
      *v9++ = v11;
      v11 = a1 + (float)((float)(v7 + 1) * a3);
      v33 = v11 <= a2;
      if (a3 > 0.0)
        v33 = v11 >= a2;
      ++v7;
      if (v33)
        goto LABEL_42;
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
LABEL_42:
  v34 = *((_QWORD *)v8 + 3);
  if (v34 >= 2)
  {
    v35 = v34 >> 1;
    v32 = __OFSUB__(v35, v10);
    v36 = v35 - v10;
    if (v32)
    {
LABEL_51:
      __break(1u);
      return;
    }
    *((_QWORD *)v8 + 2) = v36;
  }
}

int32x4_t *sub_19C5A8D6C(int32x4_t *a1, uint64_t a2, int32x2_t a3)
{
  uint64_t v3;

  a3.i32[0] = **(_DWORD **)(v3 + 16);
  return sub_19C5A5EB0(a1, a2, a3);
}

uint64_t sub_19C5A8D88()
{
  return sub_19CAA9E6C();
}

uint64_t sub_19C5A8DC0(uint64_t a1)
{
  uint64_t *v1;

  return sub_19C5A6660(a1, v1[5], v1[6], v1[2]);
}

uint64_t sub_19C5A8DE4(float *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5A6D98(a1, a2, *(float *)(v2 + 16));
}

uint64_t sub_19C5A8DFC(_DWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5A6FC8(a1, a2, *(_DWORD *)(v2 + 16));
}

void sub_19C5A8E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C5A7A50(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_19C5A8E2C()
{
  return MEMORY[0x1E0DEB1E0];
}

uint64_t sub_19C5A8E38()
{
  return MEMORY[0x1E0DEDC30];
}

uint64_t sub_19C5A8E44()
{
  return MEMORY[0x1E0DEAFD0];
}

float sub_19C5A8E50@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v2;
  float result;

  result = **(float **)(v2 + 16) + (float)(**(float **)(v2 + 24) * (float)*a1);
  *a2 = result;
  return result;
}

uint64_t sub_19C5A8E74@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  if (!result)
  {
    v5 = 0;
    goto LABEL_7;
  }
  v5 = a2;
  if (!a2)
  {
LABEL_7:
    *a3 = v5;
    return result;
  }
  if (*(_QWORD *)(v3 + 48) >= a2)
  {
    if (*(_QWORD *)(v3 + 40))
      result = sub_19CAA9DF4();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_19C5A8EDC(uint64_t a1, uint64_t a2)
{
  return sub_19C5A7264(a1, a2);
}

uint64_t sub_19C5A8EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_19C5A7488(a1, a2, *(_QWORD **)(v2 + 40), *(_QWORD **)(v2 + 48));
}

uint64_t sub_19C5A8F2C()
{
  return sub_19CAA9A34();
}

uint64_t sub_19C5A8F84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_19C5A6B60(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[2]);
}

uint64_t sub_19C5A8FB4(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  int64_t *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  unint64_t v88;
  int64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  const void *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t *v104;
  _QWORD *v105;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;

  v6 = a3;
  v110 = (_QWORD *)result;
  v7 = *(_QWORD *)(a2 + 16);
  v108 = v7;
  if (v7)
  {
    v8 = (uint64_t *)(a2 + 32);
    v9 = 1;
    v10 = *(_QWORD *)(a2 + 16);
    do
    {
      v11 = *v8++;
      v12 = (unsigned __int128)(v9 * (__int128)v11) >> 64;
      v9 *= v11;
      if (v12 != v9 >> 63)
        goto LABEL_149;
      --v10;
    }
    while (v10);
    if (v9 <= 0)
    {
      if (v9 < 0)
      {
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
        goto LABEL_184;
      }
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v109 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v14 = v13 + 4;
      if (a5)
        goto LABEL_68;
LABEL_137:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v99 = v13[3];
      if (v99 < 2)
        return (uint64_t)v13;
      v100 = v99 >> 1;
      v26 = __OFSUB__(v100, v109);
      v101 = v100 - v109;
      if (!v26)
      {
        v13[2] = v101;
        return (uint64_t)v13;
      }
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
      goto LABEL_186;
    }
  }
  else
  {
    v9 = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424228);
  v15 = (_QWORD *)swift_allocObject();
  v16 = _swift_stdlib_malloc_size(v15);
  v17 = v16 - 32;
  if (v16 < 32)
    v17 = v16 - 25;
  v18 = v17 >> 3;
  v15[2] = v9;
  v15[3] = 2 * v18;
  v103 = v15;
  v14 = v15 + 4;
  v109 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v102 = v6 + 6;
  v7 = v108;
  do
  {
    if (v19 == v9)
      goto LABEL_150;
    if (!a5)
      goto LABEL_187;
    v23 = a5 + 2;
    v22 = a5[2];
    if (!v22)
    {
      result = swift_bridgeObjectRetain();
      v29 = a5;
      if (v7)
        goto LABEL_44;
LABEL_37:
      result = swift_bridgeObjectRelease();
      v21 = v110;
      goto LABEL_15;
    }
    v24 = v22 - 1;
    v25 = a5[v22 + 3];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_152;
    v28 = *(_QWORD *)(a4 + 16);
    if (v22 > v28)
      goto LABEL_153;
    if (v27 < *(_QWORD *)(a4 + 32 + 16 * v24 + 8))
    {
      swift_bridgeObjectRetain();
      v29 = a5;
      goto LABEL_39;
    }
    v105 = v14;
    result = swift_bridgeObjectRetain();
    if (v22 == 1)
    {
LABEL_36:
      result = swift_bridgeObjectRelease();
      v29 = 0;
      v6 = a3;
      v7 = v108;
      v14 = v105;
      if (v108)
        goto LABEL_44;
      goto LABEL_37;
    }
    v30 = (int64_t *)(a4 + 8 + 16 * v22);
    v31 = v22;
    v29 = a5;
    while (1)
    {
      if (!v29)
        goto LABEL_185;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v29);
        v29 = (_QWORD *)result;
      }
      v32 = v31 - 1;
      if ((int64_t)(v31 - 1) >= v29[2])
      {
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
      v29[v31 + 3] = 0;
      v24 = v31 - 2;
      if ((uint64_t)(v31 - 2) >= (uint64_t)*v23)
        goto LABEL_142;
      v33 = v23[v31];
      v26 = __OFADD__(v33, 1);
      v34 = v33 + 1;
      if (v26)
        goto LABEL_143;
      if (v24 >= (uint64_t)v28)
        goto LABEL_144;
      if (v34 < *v30)
        break;
      v30 -= 2;
      --v31;
      if (v32 == 1)
        goto LABEL_36;
    }
    v6 = a3;
    v14 = v105;
LABEL_39:
    result = swift_isUniquelyReferenced_nonNull_native();
    v7 = v108;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v29);
      v29 = (_QWORD *)result;
    }
    if (v24 >= v29[2])
      goto LABEL_158;
    v35 = v29[v24 + 4];
    v26 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v26)
      goto LABEL_159;
    v29[v24 + 4] = v36;
    if (!v108)
      goto LABEL_37;
LABEL_44:
    v37 = *v23;
    v38 = v6[2];
    if (v38 < *v23)
      goto LABEL_154;
    if (!v22)
    {
      v20 = 0;
      goto LABEL_14;
    }
    if (!v37)
      goto LABEL_160;
    v39 = a5[4];
    v40 = v6[4];
    v20 = v39 * v40;
    if ((unsigned __int128)(v39 * (__int128)v40) >> 64 != (v39 * v40) >> 63)
      goto LABEL_161;
    if (v22 == 1)
      goto LABEL_14;
    if (v37 < 2)
      goto LABEL_175;
    if (v38 == 1)
      goto LABEL_14;
    v41 = a5[5];
    v42 = v6[5];
    v43 = v41 * v42;
    if ((unsigned __int128)(v41 * (__int128)v42) >> 64 != (v41 * v42) >> 63)
      goto LABEL_177;
    v26 = __OFADD__(v20, v43);
    v20 += v43;
    if (v26)
    {
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
      goto LABEL_181;
    }
    if (v22 != 2)
    {
      v44 = v37 >= 3;
      v45 = v37 - 3;
      if (!v44)
        goto LABEL_182;
      v46 = v38 - 2;
      if (v38 != 2)
      {
        v47 = a5 + 6;
        if (v38 <= 2)
          v38 = 2;
        v48 = v38 - 2;
        v49 = v22 - 3;
        v50 = v102;
        while (v48)
        {
          v51 = *v47 * *v50;
          if ((unsigned __int128)(*v47 * (__int128)*v50) >> 64 != v51 >> 63)
            goto LABEL_163;
          v26 = __OFADD__(v20, v51);
          v20 += v51;
          if (v26)
            goto LABEL_164;
          if (!v49)
            goto LABEL_14;
          if (!v45)
            goto LABEL_165;
          ++v50;
          ++v47;
          --v45;
          --v48;
          --v49;
          if (!--v46)
            goto LABEL_14;
        }
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
    }
LABEL_14:
    result = swift_bridgeObjectRelease();
    v21 = &v110[v20];
LABEL_15:
    ++v19;
    *v14++ = *v21;
    a5 = v29;
  }
  while (v19 != v9);
  a5 = v29;
  v13 = v103;
  if (!v29)
    goto LABEL_137;
LABEL_68:
  v52 = a4 + 32;
  v104 = v6 + 6;
  while (2)
  {
    v53 = v14;
    v54 = v13;
    v56 = a5 + 2;
    v55 = a5[2];
    if (!v55)
    {
      result = swift_bridgeObjectRetain();
      v61 = a5;
      if (v7)
        goto LABEL_95;
      goto LABEL_88;
    }
    v57 = v55 - 1;
    v58 = a5[v55 + 3];
    v26 = __OFADD__(v58, 1);
    v59 = v58 + 1;
    if (v26)
      goto LABEL_155;
    v60 = *(_QWORD *)(a4 + 16);
    if (v55 > v60)
      goto LABEL_156;
    if (v59 < *(_QWORD *)(v52 + 16 * v57 + 8))
    {
      swift_bridgeObjectRetain();
      v61 = a5;
LABEL_90:
      result = swift_isUniquelyReferenced_nonNull_native();
      v7 = v108;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v61);
        v61 = (_QWORD *)result;
      }
      if (v57 >= v61[2])
        goto LABEL_166;
      v68 = v61[v57 + 4];
      v26 = __OFADD__(v68, 1);
      v69 = v68 + 1;
      if (v26)
        goto LABEL_167;
      v61[v57 + 4] = v69;
      if (v108)
      {
LABEL_95:
        v70 = *v56;
        v71 = v6[2];
        if (v71 < *v56)
          goto LABEL_157;
        if (v55)
        {
          if (!v70)
            goto LABEL_168;
          v72 = a5[4];
          v73 = v6[4];
          v74 = v72 * v73;
          if ((unsigned __int128)(v72 * (__int128)v73) >> 64 != (v72 * v73) >> 63)
            goto LABEL_169;
          if (v55 != 1)
          {
            if (v70 < 2)
              goto LABEL_176;
            if (v71 != 1)
            {
              v75 = a5[5];
              v76 = v6[5];
              v77 = v75 * v76;
              if ((unsigned __int128)(v75 * (__int128)v76) >> 64 != (v75 * v76) >> 63)
                goto LABEL_179;
              v26 = __OFADD__(v74, v77);
              v74 += v77;
              if (v26)
                goto LABEL_180;
              if (v55 != 2)
              {
                v44 = v70 >= 3;
                v78 = v70 - 3;
                if (!v44)
                  goto LABEL_183;
                v79 = v71 - 2;
                if (v71 != 2)
                {
                  v80 = a5 + 6;
                  if (v71 <= 2)
                    v71 = 2;
                  v81 = v71 - 2;
                  v82 = v55 - 3;
                  v83 = v104;
                  while (v81)
                  {
                    v84 = *v80 * *v83;
                    if ((unsigned __int128)(*v80 * (__int128)*v83) >> 64 != v84 >> 63)
                      goto LABEL_171;
                    v26 = __OFADD__(v74, v84);
                    v74 += v84;
                    if (v26)
                      goto LABEL_172;
                    if (!v82)
                      goto LABEL_119;
                    if (!v78)
                      goto LABEL_174;
                    ++v83;
                    ++v80;
                    --v78;
                    --v81;
                    --v82;
                    if (!--v79)
                      goto LABEL_119;
                  }
                  goto LABEL_170;
                }
              }
            }
          }
        }
        else
        {
          v74 = 0;
        }
LABEL_119:
        result = swift_bridgeObjectRelease();
        v67 = &v110[v74];
        goto LABEL_120;
      }
LABEL_88:
      result = swift_bridgeObjectRelease();
      v67 = v110;
LABEL_120:
      v85 = *v67;
      v13 = v54;
      if (v109)
      {
        v86 = v53;
        v87 = v109 - 1;
        if (__OFSUB__(v109, 1))
          goto LABEL_151;
      }
      else
      {
        v88 = v54[3];
        if ((uint64_t)((v88 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_173;
        v89 = v88 & 0xFFFFFFFFFFFFFFFELL;
        if (v89 <= 1)
          v90 = 1;
        else
          v90 = v89;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424228);
        v91 = (_QWORD *)swift_allocObject();
        v92 = _swift_stdlib_malloc_size(v91);
        v93 = v92 - 32;
        if (v92 < 32)
          v93 = v92 - 25;
        v94 = v93 >> 3;
        v91[2] = v90;
        v91[3] = 2 * (v93 >> 3);
        v95 = (unint64_t)(v91 + 4);
        v96 = v13[3] >> 1;
        if (v13[2])
        {
          v97 = v13 + 4;
          if (v91 != v13 || v95 >= (unint64_t)v97 + 8 * v96)
            memmove(v91 + 4, v97, 8 * v96);
          v13[2] = 0;
        }
        v86 = (_QWORD *)(v95 + 8 * v96);
        v98 = (v94 & 0x7FFFFFFFFFFFFFFFLL) - v96;
        result = swift_release();
        v13 = v91;
        v6 = a3;
        v7 = v108;
        v26 = __OFSUB__(v98, 1);
        v87 = v98 - 1;
        if (v26)
          goto LABEL_151;
      }
      v109 = v87;
      *v86 = v85;
      v14 = v86 + 1;
      a5 = v61;
      if (!v61)
        goto LABEL_137;
      continue;
    }
    break;
  }
  result = swift_bridgeObjectRetain();
  if (v55 == 1)
  {
LABEL_87:
    result = swift_bridgeObjectRelease();
    v61 = 0;
    v52 = a4 + 32;
    v6 = a3;
    v7 = v108;
    if (v108)
      goto LABEL_95;
    goto LABEL_88;
  }
  v62 = (int64_t *)(a4 + 8 + 16 * v55);
  v63 = v55;
  v61 = a5;
  while (v61)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v61);
      v61 = (_QWORD *)result;
    }
    v64 = v63 - 1;
    if ((int64_t)(v63 - 1) >= v61[2])
      goto LABEL_145;
    v61[v63 + 3] = 0;
    v57 = v63 - 2;
    if ((uint64_t)(v63 - 2) >= (uint64_t)*v56)
      goto LABEL_146;
    v65 = v56[v63];
    v26 = __OFADD__(v65, 1);
    v66 = v65 + 1;
    if (v26)
      goto LABEL_147;
    if (v57 >= (uint64_t)v60)
      goto LABEL_148;
    if (v66 < *v62)
    {
      v52 = a4 + 32;
      v6 = a3;
      goto LABEL_90;
    }
    v62 -= 2;
    --v63;
    if (v64 == 1)
      goto LABEL_87;
  }
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
  return result;
}

uint64_t sub_19C5A9840(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _DWORD *v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  unint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  int64_t *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  int v85;
  _DWORD *v86;
  uint64_t v87;
  unint64_t v88;
  int64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  const void *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t *v104;
  _DWORD *v105;
  uint64_t v108;
  uint64_t v109;
  _DWORD *v110;

  v6 = a3;
  v110 = (_DWORD *)result;
  v7 = *(_QWORD *)(a2 + 16);
  v108 = v7;
  if (v7)
  {
    v8 = (uint64_t *)(a2 + 32);
    v9 = 1;
    v10 = *(_QWORD *)(a2 + 16);
    do
    {
      v11 = *v8++;
      v12 = (unsigned __int128)(v9 * (__int128)v11) >> 64;
      v9 *= v11;
      if (v12 != v9 >> 63)
        goto LABEL_149;
      --v10;
    }
    while (v10);
    if (v9 <= 0)
    {
      if (v9 < 0)
      {
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
        goto LABEL_184;
      }
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v109 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v14 = v13 + 4;
      if (a5)
        goto LABEL_68;
LABEL_137:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v99 = v13[3];
      if (v99 < 2)
        return (uint64_t)v13;
      v100 = v99 >> 1;
      v26 = __OFSUB__(v100, v109);
      v101 = v100 - v109;
      if (!v26)
      {
        v13[2] = v101;
        return (uint64_t)v13;
      }
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
      goto LABEL_186;
    }
  }
  else
  {
    v9 = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
  v15 = (_QWORD *)swift_allocObject();
  v16 = _swift_stdlib_malloc_size(v15);
  v17 = v16 - 32;
  if (v16 < 32)
    v17 = v16 - 29;
  v18 = v17 >> 2;
  v15[2] = v9;
  v15[3] = 2 * v18;
  v103 = v15;
  v14 = v15 + 4;
  v109 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v102 = v6 + 6;
  v7 = v108;
  do
  {
    if (v19 == v9)
      goto LABEL_150;
    if (!a5)
      goto LABEL_187;
    v23 = a5 + 2;
    v22 = a5[2];
    if (!v22)
    {
      result = swift_bridgeObjectRetain();
      v29 = a5;
      if (v7)
        goto LABEL_44;
LABEL_37:
      result = swift_bridgeObjectRelease();
      v21 = v110;
      goto LABEL_15;
    }
    v24 = v22 - 1;
    v25 = a5[v22 + 3];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_152;
    v28 = *(_QWORD *)(a4 + 16);
    if (v22 > v28)
      goto LABEL_153;
    if (v27 < *(_QWORD *)(a4 + 32 + 16 * v24 + 8))
    {
      swift_bridgeObjectRetain();
      v29 = a5;
      goto LABEL_39;
    }
    v105 = v14;
    result = swift_bridgeObjectRetain();
    if (v22 == 1)
    {
LABEL_36:
      result = swift_bridgeObjectRelease();
      v29 = 0;
      v6 = a3;
      v7 = v108;
      v14 = v105;
      if (v108)
        goto LABEL_44;
      goto LABEL_37;
    }
    v30 = (int64_t *)(a4 + 8 + 16 * v22);
    v31 = v22;
    v29 = a5;
    while (1)
    {
      if (!v29)
        goto LABEL_185;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v29);
        v29 = (_QWORD *)result;
      }
      v32 = v31 - 1;
      if ((int64_t)(v31 - 1) >= v29[2])
      {
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
      v29[v31 + 3] = 0;
      v24 = v31 - 2;
      if ((uint64_t)(v31 - 2) >= (uint64_t)*v23)
        goto LABEL_142;
      v33 = v23[v31];
      v26 = __OFADD__(v33, 1);
      v34 = v33 + 1;
      if (v26)
        goto LABEL_143;
      if (v24 >= (uint64_t)v28)
        goto LABEL_144;
      if (v34 < *v30)
        break;
      v30 -= 2;
      --v31;
      if (v32 == 1)
        goto LABEL_36;
    }
    v6 = a3;
    v14 = v105;
LABEL_39:
    result = swift_isUniquelyReferenced_nonNull_native();
    v7 = v108;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v29);
      v29 = (_QWORD *)result;
    }
    if (v24 >= v29[2])
      goto LABEL_158;
    v35 = v29[v24 + 4];
    v26 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v26)
      goto LABEL_159;
    v29[v24 + 4] = v36;
    if (!v108)
      goto LABEL_37;
LABEL_44:
    v37 = *v23;
    v38 = v6[2];
    if (v38 < *v23)
      goto LABEL_154;
    if (!v22)
    {
      v20 = 0;
      goto LABEL_14;
    }
    if (!v37)
      goto LABEL_160;
    v39 = a5[4];
    v40 = v6[4];
    v20 = v39 * v40;
    if ((unsigned __int128)(v39 * (__int128)v40) >> 64 != (v39 * v40) >> 63)
      goto LABEL_161;
    if (v22 == 1)
      goto LABEL_14;
    if (v37 < 2)
      goto LABEL_175;
    if (v38 == 1)
      goto LABEL_14;
    v41 = a5[5];
    v42 = v6[5];
    v43 = v41 * v42;
    if ((unsigned __int128)(v41 * (__int128)v42) >> 64 != (v41 * v42) >> 63)
      goto LABEL_177;
    v26 = __OFADD__(v20, v43);
    v20 += v43;
    if (v26)
    {
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
      goto LABEL_181;
    }
    if (v22 != 2)
    {
      v44 = v37 >= 3;
      v45 = v37 - 3;
      if (!v44)
        goto LABEL_182;
      v46 = v38 - 2;
      if (v38 != 2)
      {
        v47 = a5 + 6;
        if (v38 <= 2)
          v38 = 2;
        v48 = v38 - 2;
        v49 = v22 - 3;
        v50 = v102;
        while (v48)
        {
          v51 = *v47 * *v50;
          if ((unsigned __int128)(*v47 * (__int128)*v50) >> 64 != v51 >> 63)
            goto LABEL_163;
          v26 = __OFADD__(v20, v51);
          v20 += v51;
          if (v26)
            goto LABEL_164;
          if (!v49)
            goto LABEL_14;
          if (!v45)
            goto LABEL_165;
          ++v50;
          ++v47;
          --v45;
          --v48;
          --v49;
          if (!--v46)
            goto LABEL_14;
        }
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
    }
LABEL_14:
    result = swift_bridgeObjectRelease();
    v21 = &v110[v20];
LABEL_15:
    ++v19;
    *v14++ = *v21;
    a5 = v29;
  }
  while (v19 != v9);
  a5 = v29;
  v13 = v103;
  if (!v29)
    goto LABEL_137;
LABEL_68:
  v52 = a4 + 32;
  v104 = v6 + 6;
  while (2)
  {
    v53 = v14;
    v54 = v13;
    v56 = a5 + 2;
    v55 = a5[2];
    if (!v55)
    {
      result = swift_bridgeObjectRetain();
      v61 = a5;
      if (v7)
        goto LABEL_95;
      goto LABEL_88;
    }
    v57 = v55 - 1;
    v58 = a5[v55 + 3];
    v26 = __OFADD__(v58, 1);
    v59 = v58 + 1;
    if (v26)
      goto LABEL_155;
    v60 = *(_QWORD *)(a4 + 16);
    if (v55 > v60)
      goto LABEL_156;
    if (v59 < *(_QWORD *)(v52 + 16 * v57 + 8))
    {
      swift_bridgeObjectRetain();
      v61 = a5;
LABEL_90:
      result = swift_isUniquelyReferenced_nonNull_native();
      v7 = v108;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v61);
        v61 = (_QWORD *)result;
      }
      if (v57 >= v61[2])
        goto LABEL_166;
      v68 = v61[v57 + 4];
      v26 = __OFADD__(v68, 1);
      v69 = v68 + 1;
      if (v26)
        goto LABEL_167;
      v61[v57 + 4] = v69;
      if (v108)
      {
LABEL_95:
        v70 = *v56;
        v71 = v6[2];
        if (v71 < *v56)
          goto LABEL_157;
        if (v55)
        {
          if (!v70)
            goto LABEL_168;
          v72 = a5[4];
          v73 = v6[4];
          v74 = v72 * v73;
          if ((unsigned __int128)(v72 * (__int128)v73) >> 64 != (v72 * v73) >> 63)
            goto LABEL_169;
          if (v55 != 1)
          {
            if (v70 < 2)
              goto LABEL_176;
            if (v71 != 1)
            {
              v75 = a5[5];
              v76 = v6[5];
              v77 = v75 * v76;
              if ((unsigned __int128)(v75 * (__int128)v76) >> 64 != (v75 * v76) >> 63)
                goto LABEL_179;
              v26 = __OFADD__(v74, v77);
              v74 += v77;
              if (v26)
                goto LABEL_180;
              if (v55 != 2)
              {
                v44 = v70 >= 3;
                v78 = v70 - 3;
                if (!v44)
                  goto LABEL_183;
                v79 = v71 - 2;
                if (v71 != 2)
                {
                  v80 = a5 + 6;
                  if (v71 <= 2)
                    v71 = 2;
                  v81 = v71 - 2;
                  v82 = v55 - 3;
                  v83 = v104;
                  while (v81)
                  {
                    v84 = *v80 * *v83;
                    if ((unsigned __int128)(*v80 * (__int128)*v83) >> 64 != v84 >> 63)
                      goto LABEL_171;
                    v26 = __OFADD__(v74, v84);
                    v74 += v84;
                    if (v26)
                      goto LABEL_172;
                    if (!v82)
                      goto LABEL_119;
                    if (!v78)
                      goto LABEL_174;
                    ++v83;
                    ++v80;
                    --v78;
                    --v81;
                    --v82;
                    if (!--v79)
                      goto LABEL_119;
                  }
                  goto LABEL_170;
                }
              }
            }
          }
        }
        else
        {
          v74 = 0;
        }
LABEL_119:
        result = swift_bridgeObjectRelease();
        v67 = &v110[v74];
        goto LABEL_120;
      }
LABEL_88:
      result = swift_bridgeObjectRelease();
      v67 = v110;
LABEL_120:
      v85 = *v67;
      v13 = v54;
      if (v109)
      {
        v86 = v53;
        v87 = v109 - 1;
        if (__OFSUB__(v109, 1))
          goto LABEL_151;
      }
      else
      {
        v88 = v54[3];
        if ((uint64_t)((v88 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_173;
        v89 = v88 & 0xFFFFFFFFFFFFFFFELL;
        if (v89 <= 1)
          v90 = 1;
        else
          v90 = v89;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423608);
        v91 = (_QWORD *)swift_allocObject();
        v92 = _swift_stdlib_malloc_size(v91);
        v93 = v92 - 32;
        if (v92 < 32)
          v93 = v92 - 29;
        v94 = v93 >> 2;
        v91[2] = v90;
        v91[3] = 2 * (v93 >> 2);
        v95 = (unint64_t)(v91 + 4);
        v96 = v13[3] >> 1;
        if (v13[2])
        {
          v97 = v13 + 4;
          if (v91 != v13 || v95 >= (unint64_t)v97 + 4 * v96)
            memmove(v91 + 4, v97, 4 * v96);
          v13[2] = 0;
        }
        v86 = (_DWORD *)(v95 + 4 * v96);
        v98 = (v94 & 0x7FFFFFFFFFFFFFFFLL) - v96;
        result = swift_release();
        v13 = v91;
        v6 = a3;
        v7 = v108;
        v26 = __OFSUB__(v98, 1);
        v87 = v98 - 1;
        if (v26)
          goto LABEL_151;
      }
      v109 = v87;
      *v86 = v85;
      v14 = v86 + 1;
      a5 = v61;
      if (!v61)
        goto LABEL_137;
      continue;
    }
    break;
  }
  result = swift_bridgeObjectRetain();
  if (v55 == 1)
  {
LABEL_87:
    result = swift_bridgeObjectRelease();
    v61 = 0;
    v52 = a4 + 32;
    v6 = a3;
    v7 = v108;
    if (v108)
      goto LABEL_95;
    goto LABEL_88;
  }
  v62 = (int64_t *)(a4 + 8 + 16 * v55);
  v63 = v55;
  v61 = a5;
  while (v61)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v61);
      v61 = (_QWORD *)result;
    }
    v64 = v63 - 1;
    if ((int64_t)(v63 - 1) >= v61[2])
      goto LABEL_145;
    v61[v63 + 3] = 0;
    v57 = v63 - 2;
    if ((uint64_t)(v63 - 2) >= (uint64_t)*v56)
      goto LABEL_146;
    v65 = v56[v63];
    v26 = __OFADD__(v65, 1);
    v66 = v65 + 1;
    if (v26)
      goto LABEL_147;
    if (v57 >= (uint64_t)v60)
      goto LABEL_148;
    if (v66 < *v62)
    {
      v52 = a4 + 32;
      v6 = a3;
      goto LABEL_90;
    }
    v62 -= 2;
    --v63;
    if (v64 == 1)
      goto LABEL_87;
  }
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
  return result;
}

uint64_t sub_19C5AA0CC(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _WORD *v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  int64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _WORD *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  int64_t *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int64_t v65;
  __int16 *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  __int16 v84;
  _WORD *v85;
  uint64_t v86;
  unint64_t v87;
  int64_t v88;
  uint64_t v89;
  _QWORD *v90;
  int64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  const void *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t *v101;
  _QWORD *v102;
  uint64_t *v103;
  _WORD *v104;
  uint64_t v107;
  uint64_t v108;
  _WORD *v109;

  v6 = a3;
  v109 = (_WORD *)result;
  v7 = *(_QWORD *)(a2 + 16);
  v107 = v7;
  if (v7)
  {
    v8 = (uint64_t *)(a2 + 32);
    v9 = 1;
    v10 = *(_QWORD *)(a2 + 16);
    do
    {
      v11 = *v8++;
      v12 = (unsigned __int128)(v9 * (__int128)v11) >> 64;
      v9 *= v11;
      if (v12 != v9 >> 63)
        goto LABEL_150;
      --v10;
    }
    while (v10);
    if (v9 <= 0)
    {
      if (v9 < 0)
      {
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v108 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v14 = v13 + 4;
      if (a5)
        goto LABEL_68;
LABEL_138:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v98 = v13[3];
      if (v98 < 2)
        return (uint64_t)v13;
      v99 = v98 >> 1;
      v25 = __OFSUB__(v99, v108);
      v100 = v99 - v108;
      if (!v25)
      {
        v13[2] = v100;
        return (uint64_t)v13;
      }
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
      goto LABEL_187;
    }
  }
  else
  {
    v9 = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424220);
  v15 = (_QWORD *)swift_allocObject();
  v16 = _swift_stdlib_malloc_size(v15);
  v17 = v16 - 32;
  if (v16 < 32)
    v17 = v16 - 31;
  v15[2] = v9;
  v15[3] = v17 & 0xFFFFFFFFFFFFFFFELL;
  v102 = v15;
  v14 = v15 + 4;
  v108 = (v17 >> 1) - v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v101 = v6 + 6;
  v7 = v107;
  do
  {
    if (v18 == v9)
      goto LABEL_151;
    if (!a5)
      goto LABEL_188;
    v22 = a5 + 2;
    v21 = a5[2];
    if (!v21)
    {
      result = swift_bridgeObjectRetain();
      v28 = a5;
      if (v7)
        goto LABEL_44;
LABEL_37:
      result = swift_bridgeObjectRelease();
      v20 = v109;
      goto LABEL_15;
    }
    v23 = v21 - 1;
    v24 = a5[v21 + 3];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_153;
    v27 = *(_QWORD *)(a4 + 16);
    if (v21 > v27)
      goto LABEL_154;
    if (v26 < *(_QWORD *)(a4 + 32 + 16 * v23 + 8))
    {
      swift_bridgeObjectRetain();
      v28 = a5;
      goto LABEL_39;
    }
    v104 = v14;
    result = swift_bridgeObjectRetain();
    if (v21 == 1)
    {
LABEL_36:
      result = swift_bridgeObjectRelease();
      v28 = 0;
      v6 = a3;
      v7 = v107;
      v14 = v104;
      if (v107)
        goto LABEL_44;
      goto LABEL_37;
    }
    v29 = (int64_t *)(a4 + 8 + 16 * v21);
    v30 = v21;
    v28 = a5;
    while (1)
    {
      if (!v28)
        goto LABEL_186;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v28);
        v28 = (_QWORD *)result;
      }
      v31 = v30 - 1;
      if ((int64_t)(v30 - 1) >= v28[2])
      {
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
        goto LABEL_163;
      }
      v28[v30 + 3] = 0;
      v23 = v30 - 2;
      if ((uint64_t)(v30 - 2) >= (uint64_t)*v22)
        goto LABEL_143;
      v32 = v22[v30];
      v25 = __OFADD__(v32, 1);
      v33 = v32 + 1;
      if (v25)
        goto LABEL_144;
      if (v23 >= (uint64_t)v27)
        goto LABEL_145;
      if (v33 < *v29)
        break;
      v29 -= 2;
      --v30;
      if (v31 == 1)
        goto LABEL_36;
    }
    v6 = a3;
    v14 = v104;
LABEL_39:
    result = swift_isUniquelyReferenced_nonNull_native();
    v7 = v107;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v28);
      v28 = (_QWORD *)result;
    }
    if (v23 >= v28[2])
      goto LABEL_159;
    v34 = v28[v23 + 4];
    v25 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (v25)
      goto LABEL_160;
    v28[v23 + 4] = v35;
    if (!v107)
      goto LABEL_37;
LABEL_44:
    v36 = *v22;
    v37 = v6[2];
    if (v37 < *v22)
      goto LABEL_155;
    if (!v21)
    {
      v19 = 0;
      goto LABEL_14;
    }
    if (!v36)
      goto LABEL_161;
    v38 = a5[4];
    v39 = v6[4];
    v19 = v38 * v39;
    if ((unsigned __int128)(v38 * (__int128)v39) >> 64 != (v38 * v39) >> 63)
      goto LABEL_162;
    if (v21 == 1)
      goto LABEL_14;
    if (v36 < 2)
      goto LABEL_176;
    if (v37 == 1)
      goto LABEL_14;
    v40 = a5[5];
    v41 = v6[5];
    v42 = v40 * v41;
    if ((unsigned __int128)(v40 * (__int128)v41) >> 64 != (v40 * v41) >> 63)
      goto LABEL_178;
    v25 = __OFADD__(v19, v42);
    v19 += v42;
    if (v25)
    {
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
      goto LABEL_182;
    }
    if (v21 != 2)
    {
      v43 = v36 >= 3;
      v44 = v36 - 3;
      if (!v43)
        goto LABEL_183;
      v45 = v37 - 2;
      if (v37 != 2)
      {
        v46 = a5 + 6;
        if (v37 <= 2)
          v37 = 2;
        v47 = v37 - 2;
        v48 = v21 - 3;
        v49 = v101;
        while (v47)
        {
          v50 = *v46 * *v49;
          if ((unsigned __int128)(*v46 * (__int128)*v49) >> 64 != v50 >> 63)
            goto LABEL_164;
          v25 = __OFADD__(v19, v50);
          v19 += v50;
          if (v25)
            goto LABEL_165;
          if (!v48)
            goto LABEL_14;
          if (!v44)
            goto LABEL_166;
          ++v49;
          ++v46;
          --v44;
          --v47;
          --v48;
          if (!--v45)
            goto LABEL_14;
        }
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
        goto LABEL_179;
      }
    }
LABEL_14:
    result = swift_bridgeObjectRelease();
    v20 = &v109[v19];
LABEL_15:
    ++v18;
    *v14++ = *v20;
    a5 = v28;
  }
  while (v18 != v9);
  a5 = v28;
  v13 = v102;
  if (!v28)
    goto LABEL_138;
LABEL_68:
  v51 = a4 + 32;
  v103 = v6 + 6;
  while (2)
  {
    v52 = v14;
    v53 = v13;
    v55 = a5 + 2;
    v54 = a5[2];
    if (!v54)
    {
      result = swift_bridgeObjectRetain();
      v60 = a5;
      if (v7)
        goto LABEL_95;
      goto LABEL_88;
    }
    v56 = v54 - 1;
    v57 = a5[v54 + 3];
    v25 = __OFADD__(v57, 1);
    v58 = v57 + 1;
    if (v25)
      goto LABEL_156;
    v59 = *(_QWORD *)(a4 + 16);
    if (v54 > v59)
      goto LABEL_157;
    if (v58 < *(_QWORD *)(v51 + 16 * v56 + 8))
    {
      swift_bridgeObjectRetain();
      v60 = a5;
LABEL_90:
      result = swift_isUniquelyReferenced_nonNull_native();
      v7 = v107;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v60);
        v60 = (_QWORD *)result;
      }
      if (v56 >= v60[2])
        goto LABEL_167;
      v67 = v60[v56 + 4];
      v25 = __OFADD__(v67, 1);
      v68 = v67 + 1;
      if (v25)
        goto LABEL_168;
      v60[v56 + 4] = v68;
      if (v107)
      {
LABEL_95:
        v69 = *v55;
        v70 = v6[2];
        if (v70 < *v55)
          goto LABEL_158;
        if (v54)
        {
          if (!v69)
            goto LABEL_169;
          v71 = a5[4];
          v72 = v6[4];
          v73 = v71 * v72;
          if ((unsigned __int128)(v71 * (__int128)v72) >> 64 != (v71 * v72) >> 63)
            goto LABEL_170;
          if (v54 != 1)
          {
            if (v69 < 2)
              goto LABEL_177;
            if (v70 != 1)
            {
              v74 = a5[5];
              v75 = v6[5];
              v76 = v74 * v75;
              if ((unsigned __int128)(v74 * (__int128)v75) >> 64 != (v74 * v75) >> 63)
                goto LABEL_180;
              v25 = __OFADD__(v73, v76);
              v73 += v76;
              if (v25)
                goto LABEL_181;
              if (v54 != 2)
              {
                v43 = v69 >= 3;
                v77 = v69 - 3;
                if (!v43)
                  goto LABEL_184;
                v78 = v70 - 2;
                if (v70 != 2)
                {
                  v79 = a5 + 6;
                  if (v70 <= 2)
                    v70 = 2;
                  v80 = v70 - 2;
                  v81 = v54 - 3;
                  v82 = v103;
                  while (v80)
                  {
                    v83 = *v79 * *v82;
                    if ((unsigned __int128)(*v79 * (__int128)*v82) >> 64 != v83 >> 63)
                      goto LABEL_172;
                    v25 = __OFADD__(v73, v83);
                    v73 += v83;
                    if (v25)
                      goto LABEL_173;
                    if (!v81)
                      goto LABEL_119;
                    if (!v77)
                      goto LABEL_175;
                    ++v82;
                    ++v79;
                    --v77;
                    --v80;
                    --v81;
                    if (!--v78)
                      goto LABEL_119;
                  }
                  goto LABEL_171;
                }
              }
            }
          }
        }
        else
        {
          v73 = 0;
        }
LABEL_119:
        result = swift_bridgeObjectRelease();
        v66 = &v109[v73];
        goto LABEL_120;
      }
LABEL_88:
      result = swift_bridgeObjectRelease();
      v66 = v109;
LABEL_120:
      v84 = *v66;
      v13 = v53;
      if (v108)
      {
        v85 = v52;
        v86 = v108 - 1;
        if (__OFSUB__(v108, 1))
          goto LABEL_152;
      }
      else
      {
        v87 = v53[3];
        if ((uint64_t)((v87 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_174;
        v88 = v87 & 0xFFFFFFFFFFFFFFFELL;
        if (v88 <= 1)
          v89 = 1;
        else
          v89 = v88;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424220);
        v90 = (_QWORD *)swift_allocObject();
        v91 = _swift_stdlib_malloc_size(v90);
        if (v91 >= 32)
          v92 = v91 - 32;
        else
          v92 = v91 - 31;
        v90[2] = v89;
        v90[3] = v92 & 0xFFFFFFFFFFFFFFFELL;
        v93 = (unint64_t)(v90 + 4);
        v94 = v13[3];
        v95 = v94 >> 1;
        if (v13[2])
        {
          v96 = v13 + 4;
          if (v90 != v13 || v93 >= (unint64_t)v96 + 2 * v95)
            memmove(v90 + 4, v96, v94 & 0xFFFFFFFFFFFFFFFELL);
          v13[2] = 0;
        }
        v85 = (_WORD *)(v93 + 2 * v95);
        v97 = (v92 >> 1) - v95;
        result = swift_release();
        v13 = v90;
        v6 = a3;
        v7 = v107;
        v25 = __OFSUB__(v97, 1);
        v86 = v97 - 1;
        if (v25)
          goto LABEL_152;
      }
      v108 = v86;
      *v85 = v84;
      v14 = v85 + 1;
      a5 = v60;
      if (!v60)
        goto LABEL_138;
      continue;
    }
    break;
  }
  result = swift_bridgeObjectRetain();
  if (v54 == 1)
  {
LABEL_87:
    result = swift_bridgeObjectRelease();
    v60 = 0;
    v51 = a4 + 32;
    v6 = a3;
    v7 = v107;
    if (v107)
      goto LABEL_95;
    goto LABEL_88;
  }
  v61 = (int64_t *)(a4 + 8 + 16 * v54);
  v62 = v54;
  v60 = a5;
  while (v60)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v60);
      v60 = (_QWORD *)result;
    }
    v63 = v62 - 1;
    if ((int64_t)(v62 - 1) >= v60[2])
      goto LABEL_146;
    v60[v62 + 3] = 0;
    v56 = v62 - 2;
    if ((uint64_t)(v62 - 2) >= (uint64_t)*v55)
      goto LABEL_147;
    v64 = v55[v62];
    v25 = __OFADD__(v64, 1);
    v65 = v64 + 1;
    if (v25)
      goto LABEL_148;
    if (v56 >= (uint64_t)v59)
      goto LABEL_149;
    if (v65 < *v61)
    {
      v51 = a4 + 32;
      v6 = a3;
      goto LABEL_90;
    }
    v61 -= 2;
    --v62;
    if (v63 == 1)
      goto LABEL_87;
  }
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
  return result;
}

uint64_t sub_19C5AA950(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  unint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  int64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _DWORD *v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  int64_t *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  int v88;
  _QWORD *v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  _QWORD *v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  const void *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *v102;
  _DWORD *v103;
  uint64_t v106;
  _QWORD *v107;
  _DWORD *v108;

  v6 = a3;
  v108 = (_DWORD *)result;
  v7 = *(_QWORD *)(a2 + 16);
  v106 = v7;
  if (v7)
  {
    v8 = (uint64_t *)(a2 + 32);
    v9 = 1;
    v10 = *(_QWORD *)(a2 + 16);
    do
    {
      v11 = *v8++;
      v12 = (unsigned __int128)(v9 * (__int128)v11) >> 64;
      v9 *= v11;
      if (v12 != v9 >> 63)
        goto LABEL_148;
      --v10;
    }
    while (v10);
    if (v9 <= 0)
    {
      if (v9 < 0)
      {
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      v13 = MEMORY[0x1E0DEE9D8];
      v101 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v107 = (_QWORD *)v13;
      v14 = (_DWORD *)(v13 + 32);
      if (a5)
        goto LABEL_72;
LABEL_8:
      v15 = v101;
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = (uint64_t)v107;
      v16 = v107[3];
      if (v16 < 2)
        return result;
      v17 = v16 >> 1;
      v18 = __OFSUB__(v17, v15);
      v19 = v17 - v15;
      if (!v18)
      {
        v107[2] = v19;
        return result;
      }
      goto LABEL_183;
    }
  }
  else
  {
    v9 = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424938);
  v20 = (_QWORD *)swift_allocObject();
  v21 = _swift_stdlib_malloc_size(v20);
  v22 = v21 - 32;
  if (v21 < 32)
    v22 = v21 - 29;
  v23 = v22 >> 2;
  v20[2] = v9;
  v20[3] = 2 * v23;
  v107 = v20;
  v14 = v20 + 4;
  v101 = (v23 & 0x7FFFFFFFFFFFFFFFLL) - v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v100 = v6 + 6;
  v7 = v106;
  do
  {
    if (v24 == v9)
      goto LABEL_149;
    if (!a5)
      goto LABEL_186;
    v28 = a5 + 2;
    v27 = a5[2];
    if (!v27)
    {
      result = swift_bridgeObjectRetain();
      v33 = a5;
      if (v7)
        goto LABEL_48;
LABEL_41:
      result = swift_bridgeObjectRelease();
      v26 = v108;
      goto LABEL_19;
    }
    v29 = v27 - 1;
    v30 = a5[v27 + 3];
    v18 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v18)
      goto LABEL_151;
    v32 = *(_QWORD *)(a4 + 16);
    if (v27 > v32)
      goto LABEL_152;
    if (v31 < *(_QWORD *)(a4 + 32 + 16 * v29 + 8))
    {
      swift_bridgeObjectRetain();
      v33 = a5;
      goto LABEL_43;
    }
    v103 = v14;
    result = swift_bridgeObjectRetain();
    if (v27 == 1)
    {
LABEL_40:
      result = swift_bridgeObjectRelease();
      v33 = 0;
      v6 = a3;
      v7 = v106;
      v14 = v103;
      if (v106)
        goto LABEL_48;
      goto LABEL_41;
    }
    v34 = (int64_t *)(a4 + 8 + 16 * v27);
    v35 = v27;
    v33 = a5;
    while (1)
    {
      if (!v33)
        goto LABEL_184;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v33);
        v33 = (_QWORD *)result;
      }
      v36 = v35 - 1;
      if ((int64_t)(v35 - 1) >= v33[2])
      {
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
        goto LABEL_161;
      }
      v33[v35 + 3] = 0;
      v29 = v35 - 2;
      if ((uint64_t)(v35 - 2) >= (uint64_t)*v28)
        goto LABEL_141;
      v37 = v28[v35];
      v18 = __OFADD__(v37, 1);
      v38 = v37 + 1;
      if (v18)
        goto LABEL_142;
      if (v29 >= (uint64_t)v32)
        goto LABEL_143;
      if (v38 < *v34)
        break;
      v34 -= 2;
      --v35;
      if (v36 == 1)
        goto LABEL_40;
    }
    v6 = a3;
    v14 = v103;
LABEL_43:
    result = swift_isUniquelyReferenced_nonNull_native();
    v7 = v106;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v33);
      v33 = (_QWORD *)result;
    }
    if (v29 >= v33[2])
      goto LABEL_157;
    v39 = v33[v29 + 4];
    v18 = __OFADD__(v39, 1);
    v40 = v39 + 1;
    if (v18)
      goto LABEL_158;
    v33[v29 + 4] = v40;
    if (!v106)
      goto LABEL_41;
LABEL_48:
    v41 = *v28;
    v42 = v6[2];
    if (v42 < *v28)
      goto LABEL_153;
    if (!v27)
    {
      v25 = 0;
      goto LABEL_18;
    }
    if (!v41)
      goto LABEL_159;
    v43 = a5[4];
    v44 = v6[4];
    v25 = v43 * v44;
    if ((unsigned __int128)(v43 * (__int128)v44) >> 64 != (v43 * v44) >> 63)
      goto LABEL_160;
    if (v27 == 1)
      goto LABEL_18;
    if (v41 < 2)
      goto LABEL_174;
    if (v42 == 1)
      goto LABEL_18;
    v45 = a5[5];
    v46 = v6[5];
    v47 = v45 * v46;
    if ((unsigned __int128)(v45 * (__int128)v46) >> 64 != (v45 * v46) >> 63)
      goto LABEL_176;
    v18 = __OFADD__(v25, v47);
    v25 += v47;
    if (v18)
    {
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
    if (v27 != 2)
    {
      v48 = v41 >= 3;
      v49 = v41 - 3;
      if (!v48)
        goto LABEL_181;
      v50 = v42 - 2;
      if (v42 != 2)
      {
        v51 = a5 + 6;
        if (v42 <= 2)
          v42 = 2;
        v52 = v42 - 2;
        v53 = v27 - 3;
        v54 = v100;
        while (v52)
        {
          v55 = *v51 * *v54;
          if ((unsigned __int128)(*v51 * (__int128)*v54) >> 64 != v55 >> 63)
            goto LABEL_162;
          v18 = __OFADD__(v25, v55);
          v25 += v55;
          if (v18)
            goto LABEL_163;
          if (!v53)
            goto LABEL_18;
          if (!v49)
            goto LABEL_164;
          ++v54;
          ++v51;
          --v49;
          --v52;
          --v53;
          if (!--v50)
            goto LABEL_18;
        }
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
        goto LABEL_177;
      }
    }
LABEL_18:
    result = swift_bridgeObjectRelease();
    v26 = &v108[v25];
LABEL_19:
    ++v24;
    *v14++ = *v26;
    a5 = v33;
  }
  while (v24 != v9);
  a5 = v33;
  if (!v33)
    goto LABEL_8;
LABEL_72:
  v56 = a4 + 32;
  v102 = v6 + 6;
  v15 = v101;
  while (2)
  {
    v57 = v14;
    v59 = a5 + 2;
    v58 = a5[2];
    if (!v58)
    {
      result = swift_bridgeObjectRetain();
      v64 = a5;
      if (v7)
        goto LABEL_99;
      goto LABEL_92;
    }
    v60 = v58 - 1;
    v61 = a5[v58 + 3];
    v18 = __OFADD__(v61, 1);
    v62 = v61 + 1;
    if (v18)
      goto LABEL_154;
    v63 = *(_QWORD *)(a4 + 16);
    if (v58 > v63)
      goto LABEL_155;
    if (v62 < *(_QWORD *)(v56 + 16 * v60 + 8))
    {
      swift_bridgeObjectRetain();
      v64 = a5;
LABEL_94:
      result = swift_isUniquelyReferenced_nonNull_native();
      v7 = v106;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v64);
        v64 = (_QWORD *)result;
      }
      if (v60 >= v64[2])
        goto LABEL_165;
      v71 = v64[v60 + 4];
      v18 = __OFADD__(v71, 1);
      v72 = v71 + 1;
      if (v18)
        goto LABEL_166;
      v64[v60 + 4] = v72;
      if (v106)
      {
LABEL_99:
        v73 = *v59;
        v74 = v6[2];
        if (v74 < *v59)
          goto LABEL_156;
        if (v58)
        {
          if (!v73)
            goto LABEL_167;
          v75 = a5[4];
          v76 = v6[4];
          v77 = v75 * v76;
          if ((unsigned __int128)(v75 * (__int128)v76) >> 64 != (v75 * v76) >> 63)
            goto LABEL_168;
          if (v58 != 1)
          {
            if (v73 < 2)
              goto LABEL_175;
            if (v74 != 1)
            {
              v78 = a5[5];
              v79 = v6[5];
              v80 = v78 * v79;
              if ((unsigned __int128)(v78 * (__int128)v79) >> 64 != (v78 * v79) >> 63)
                goto LABEL_178;
              v18 = __OFADD__(v77, v80);
              v77 += v80;
              if (v18)
                goto LABEL_179;
              if (v58 != 2)
              {
                v48 = v73 >= 3;
                v81 = v73 - 3;
                if (!v48)
                  goto LABEL_182;
                v82 = v74 - 2;
                if (v74 != 2)
                {
                  v83 = a5 + 6;
                  if (v74 <= 2)
                    v74 = 2;
                  v84 = v74 - 2;
                  v85 = v58 - 3;
                  v86 = v102;
                  while (v84)
                  {
                    v87 = *v83 * *v86;
                    if ((unsigned __int128)(*v83 * (__int128)*v86) >> 64 != v87 >> 63)
                      goto LABEL_170;
                    v18 = __OFADD__(v77, v87);
                    v77 += v87;
                    if (v18)
                      goto LABEL_171;
                    if (!v85)
                      goto LABEL_123;
                    if (!v81)
                      goto LABEL_173;
                    ++v86;
                    ++v83;
                    --v81;
                    --v84;
                    --v85;
                    if (!--v82)
                      goto LABEL_123;
                  }
                  goto LABEL_169;
                }
              }
            }
          }
        }
        else
        {
          v77 = 0;
        }
LABEL_123:
        result = swift_bridgeObjectRelease();
        v70 = &v108[v77];
        goto LABEL_124;
      }
LABEL_92:
      result = swift_bridgeObjectRelease();
      v70 = v108;
LABEL_124:
      v88 = *v70;
      v89 = v107;
      if (!v15)
      {
        v90 = v107[3];
        if ((uint64_t)((v90 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_172;
        v91 = v90 & 0xFFFFFFFFFFFFFFFELL;
        if (v91 <= 1)
          v92 = 1;
        else
          v92 = v91;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424938);
        v93 = (_QWORD *)swift_allocObject();
        v94 = _swift_stdlib_malloc_size(v93);
        v95 = v94 - 32;
        if (v94 < 32)
          v95 = v94 - 29;
        v96 = v95 >> 2;
        v93[2] = v92;
        v93[3] = 2 * (v95 >> 2);
        v97 = (unint64_t)(v93 + 4);
        v98 = v107[3] >> 1;
        if (v107[2])
        {
          v99 = v107 + 4;
          if (v93 != v107 || v97 >= (unint64_t)v99 + 4 * v98)
            memmove(v93 + 4, v99, 4 * v98);
          v107[2] = 0;
        }
        v57 = (_DWORD *)(v97 + 4 * v98);
        v15 = (v96 & 0x7FFFFFFFFFFFFFFFLL) - v98;
        result = swift_release();
        v89 = v93;
        v6 = a3;
        v7 = v106;
      }
      v18 = __OFSUB__(v15--, 1);
      if (v18)
        goto LABEL_150;
      v107 = v89;
      *v57 = v88;
      v14 = v57 + 1;
      a5 = v64;
      if (!v64)
        goto LABEL_9;
      continue;
    }
    break;
  }
  result = swift_bridgeObjectRetain();
  if (v58 == 1)
  {
LABEL_91:
    result = swift_bridgeObjectRelease();
    v64 = 0;
    v56 = a4 + 32;
    v6 = a3;
    v7 = v106;
    if (v106)
      goto LABEL_99;
    goto LABEL_92;
  }
  v65 = (int64_t *)(a4 + 8 + 16 * v58);
  v66 = v58;
  v64 = a5;
  while (v64)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_19C503550(v64);
      v64 = (_QWORD *)result;
    }
    v67 = v66 - 1;
    if ((int64_t)(v66 - 1) >= v64[2])
      goto LABEL_144;
    v64[v66 + 3] = 0;
    v60 = v66 - 2;
    if ((uint64_t)(v66 - 2) >= (uint64_t)*v59)
      goto LABEL_145;
    v68 = v59[v66];
    v18 = __OFADD__(v68, 1);
    v69 = v68 + 1;
    if (v18)
      goto LABEL_146;
    if (v60 >= (uint64_t)v63)
      goto LABEL_147;
    if (v69 < *v65)
    {
      v56 = a4 + 32;
      v6 = a3;
      goto LABEL_94;
    }
    v65 -= 2;
    --v66;
    if (v67 == 1)
      goto LABEL_91;
  }
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
  return result;
}

uint64_t sub_19C5AB1C0()
{
  return sub_19C5A7F7C();
}

uint64_t MLTensor.rank.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)sub_19C5AB1F4 + 4 * byte_19CAED490[*v0 >> 62]))();
}

uint64_t sub_19C5AB1F4@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(*(_QWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) + 16);
}

uint64_t MLTensor.shape.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)())((char *)sub_19C5AB23C + 4 * byte_19CAED494[*v0 >> 62]))();
}

uint64_t sub_19C5AB23C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19C5AB248()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19C5AB250()
{
  return swift_bridgeObjectRetain();
}

uint64_t MLTensor.scalarCount.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)&loc_19C5AB26C + dword_19C5AB2DC[*v0 >> 62]))();
}

uint64_t sub_19C5AB27C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v1 = (a1 & 0x3FFFFFFFFFFFFFFFLL) + 24;
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v3)
    return 1;
  v4 = (uint64_t *)(v2 + 32);
  v5 = 1;
  do
  {
    v6 = *v4++;
    result = v5 * v6;
    if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
    {
      __break(1u);
      JUMPOUT(0x19C5AB2DCLL);
    }
    v5 = result;
    --v3;
  }
  while (v3);
  return result;
}

uint64_t MLTensor.isScalar.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)&loc_19C5AB2FC + dword_19C5AB374[*v0 >> 62]))();
}

BOOL sub_19C5AB30C@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (a1 & 0x3FFFFFFFFFFFFFFFLL) + 24;
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (!v3)
    return 1;
  v4 = (uint64_t *)(v2 + 32);
  v5 = 1;
  do
  {
    v6 = *v4++;
    v7 = v5 * v6;
    if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
    {
      __break(1u);
      JUMPOUT(0x19C5AB374);
    }
    v5 = v7;
    --v3;
  }
  while (v3);
  return v7 == 1;
}

uint64_t MLTensor.scalarType.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)sub_19C5AB3A4 + 4 * byte_19CAED498[*v0 >> 62]))();
}

uint64_t sub_19C5AB3A4@<X0>(uint64_t a1@<X8>)
{
  return qword_1E3D5F5C0[*(char *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20)];
}

void MLTensor.synchronize()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_QWORD *)(v1 + 16) = v2;
  __asm { BR              X10 }
}

uint64_t sub_19C5AB41C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_19C5AB4EC;
  return sub_19C5A0D04();
}

uint64_t sub_19C5AB458()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5AB46C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_19C5AB5C8;
  return sub_19C5A19AC();
}

uint64_t sub_19C5AB4AC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_19C5AB574;
  return sub_19C5A1358();
}

uint64_t sub_19C5AB4EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5AB540()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5AB574()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5AB5C8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void MLTensor.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_19CAA9F2C();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_19C5AB68C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = swift_bridgeObjectRetain();
  MEMORY[0x1A1AD452C](v1, MEMORY[0x1E0DEB418]);
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = sub_19CAA992C();
  return ((uint64_t (*)(uint64_t))((char *)sub_19C5AB720 + 4 * byte_19CAED4A4[v0]))(v2);
}

uint64_t sub_19C5AB720()
{
  uint64_t v0;
  uint64_t v2;

  sub_19C59EBA4(*(_BYTE *)((v0 & 0x3FFFFFFFFFFFFFFFLL) + 0x20));
  sub_19CAA992C();
  swift_bridgeObjectRelease();
  sub_19CAA992C();
  return v2;
}

void MLTensor.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_19CAAA2E0();
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424510);
  MEMORY[0x1E0C80A78](v2);
  v3 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE424948);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_19CAE8310;
  *(_QWORD *)(v4 + 32) = 0x6570616873;
  *(_QWORD *)(v4 + 40) = 0xE500000000000000;
  __asm { BR              X10 }
}

uint64_t sub_19C5AB89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *(_QWORD *)((v4 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  swift_bridgeObjectRetain();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE424190);
  v3[6] = v7;
  v3[9] = v8;
  v3[10] = 0x795472616C616373;
  v3[11] = 0xEA00000000006570;
  *(_QWORD *)(v6 - 96) = v4;
  v9 = MLTensor.scalarType.getter();
  v3[15] = swift_getMetatypeMetadata();
  v3[12] = v9;
  v10 = *MEMORY[0x1E0DEDFB8];
  v11 = sub_19CAAA2D4();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(v2, v10, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v2, 0, 1, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v0, *MEMORY[0x1E0DEDFE8], v1);
  swift_retain();
  return sub_19CAAA2F8();
}

uint64_t MLTensor.shapedArray<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;

  v6[23] = a3;
  v6[24] = a4;
  v6[21] = a1;
  v6[22] = a2;
  v7 = *v5;
  v6[25] = a5;
  v6[26] = v7;
  return swift_task_switch();
}

void sub_19C5AB9E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  sub_19C59E650(*(_QWORD *)(v0 + 176), 0);
  __asm { BR              X10 }
}

void sub_19C5ABA30(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  _QWORD *v6;

  v3 = *(_QWORD *)(v2 + 208);
  v4 = *(_BYTE *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x21);
  v5 = *(unsigned __int8 *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  *(_BYTE *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 17) = HIBYTE(a1) & 1;
  *(_BYTE *)(v2 + 18) = v5;
  *(_BYTE *)(v2 + 19) = v4;
  *(_BYTE *)(v2 + 80) = 8;
  if (v5 == a1)
  {
    sub_19C4F9E38(v1);
    *(_QWORD *)(v2 + 160) = v3;
    swift_retain();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 216) = v6;
    *v6 = v2;
    v6[1] = sub_19C5ABB54;
    sub_19C554704(*(_QWORD *)(v2 + 168), (uint64_t *)(v2 + 160), *(_QWORD *)(v2 + 184), *(_QWORD *)(v2 + 192));
  }
  else
  {
    sub_19C4D893C(v1, v2 + 88);
    sub_19C4D783C();
    sub_19CAAA0B8();
  }
}

uint64_t sub_19C5ABB54()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t MLTensor.withUnsafeBytes<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = *v4;
  return swift_task_switch();
}

uint64_t sub_19C5ABBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_19C5ABC44;
  return sub_19C5A082C(*(_QWORD *)(v0 + 16), (uint64_t)sub_19C5ABDCC, v3, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40));
}

uint64_t sub_19C5ABC44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19C5ABCB8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19C5ABCEC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    sub_19C4F8F78(a3);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x19C5ABDBCLL);
}

void sub_19C5ABDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_19C5ABCEC(a1, a2, *(_QWORD *)(v2 + 24));
}

uint64_t MLTensor.scalars<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[21] = a1;
  v4[22] = a2;
  v5 = *v3;
  v4[23] = a3;
  v4[24] = v5;
  return swift_task_switch();
}

void sub_19C5ABE08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  sub_19C59E650(*(_QWORD *)(v0 + 168), 0);
  __asm { BR              X10 }
}

uint64_t sub_19C5ABE50(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;

  v3 = *(_QWORD *)(v2 + 192);
  v4 = *(_BYTE *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x21);
  v5 = *(unsigned __int8 *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  *(_BYTE *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 17) = HIBYTE(a1) & 1;
  *(_BYTE *)(v2 + 18) = v5;
  *(_BYTE *)(v2 + 19) = v4;
  *(_BYTE *)(v2 + 80) = 8;
  if (v5 == a1)
  {
    v10 = *(_OWORD *)(v2 + 176);
    sub_19C4F9E38(v1);
    v6 = swift_task_alloc();
    *(_QWORD *)(v2 + 200) = v6;
    *(_OWORD *)(v6 + 16) = v10;
    *(_QWORD *)(v6 + 32) = v3;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 208) = v7;
    v8 = sub_19CAA9AA0();
    *v7 = v2;
    v7[1] = sub_19C5ABFA4;
    return sub_19C5A082C(v2 + 160, (uint64_t)sub_19C5AC0A4, v6, *(_QWORD *)(v2 + 192), v8);
  }
  else
  {
    sub_19C4D893C(v1, v2 + 88);
    sub_19C4D783C();
    return sub_19CAAA0B8();
  }
}

uint64_t sub_19C5ABFA4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19C5AC000()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 160));
}

uint64_t sub_19C5AC00C@<X0>(uint64_t result@<X0>, unint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;

  if (result)
  {
    sub_19C4F8F78(a2);
    sub_19CAA98D8();
    v4 = sub_19CAA98E4();
    MEMORY[0x1A1AD76AC](MEMORY[0x1E0DEA5D8], v4);
    result = sub_19CAA9AAC();
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19C5AC0A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_19C5AC00C(a1, *(_QWORD *)(v2 + 32), a2);
}

ValueMetadata *type metadata accessor for MLTensor()
{
  return &type metadata for MLTensor;
}

uint64_t sub_19C5AC0D4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t MLModel.prediction(from:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_19C5AC158()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_emptyState);
  *(_QWORD *)(v0 + 40) = v1;
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_19C5AC1E8;
  v3 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_19C5AC1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_19C5AC270()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MLModel.prediction(from:using:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_19C5AC318;
  v8[6] = a3;
  v8[7] = v3;
  v8[4] = a1;
  v8[5] = a2;
  return swift_task_switch();
}

uint64_t sub_19C5AC318(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void static MLModel.load(contentsOf:configuration:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *ObjCClassFromMetadata;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v8 = (void *)sub_19CAA95D8();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v11[4] = sub_19C5AD28C;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_19C55B26C;
  v11[3] = &block_descriptor_9;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_loadContentsOfURL_configuration_completionHandler_, v8, a2, v10);
  _Block_release(v10);

}

void sub_19C5AC45C(void *a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  id v7;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else if (a1)
  {
    v7 = a1;
    a3(a1, 0);

  }
  else
  {
    sub_19CAAA0B8();
    __break(1u);
  }
}

uint64_t static MLModel.load(contentsOf:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_19C5AC548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *ObjCClassFromMetadata;
  void *v5;
  uint64_t v6;
  void *v7;

  v1 = v0[18];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_19C5AC68C;
  v2 = swift_continuation_init();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = (void *)sub_19CAA95D8();
  v6 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v6 + 16) = sub_19C5AD2BC;
  *(_QWORD *)(v6 + 24) = v3;
  v0[14] = sub_19C5ADB40;
  v0[15] = v6;
  v0[11] = 1107296256;
  v0[12] = sub_19C55B26C;
  v0[13] = &block_descriptor_14;
  v7 = _Block_copy(v0 + 10);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_loadContentsOfURL_configuration_completionHandler_, v5, v1, v7);
  _Block_release(v7);

  swift_release();
  return swift_continuation_await();
}

uint64_t sub_19C5AC68C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 128));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_19C5AC6FC(void *a1, char a2, uint64_t a3)
{
  id v4;
  _QWORD *v6;
  id v7;

  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
    swift_allocError();
    *v6 = a1;
    v7 = a1;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = a1;
    v4 = a1;
    return swift_continuation_throwingResume();
  }
}

void static MLModel.compileModel(at:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *ObjCClassFromMetadata;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v6 = (void *)sub_19CAA95D8();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v9[4] = sub_19C5AD2C8;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_19C5ACA94;
  v9[3] = &block_descriptor_21_0;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_compileModelAtURL_completionHandler_, v6, v8);
  _Block_release(v8);

}

uint64_t sub_19C5AC86C(uint64_t a1, void *a2, void (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t result;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4249A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4249B0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_19CAA95F0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *v8 = a2;
    swift_storeEnumTagMultiPayload();
    v16 = a2;
    a3(v8);
    return sub_19C5725E8((uint64_t)v8, (uint64_t *)&unk_1EE4249A0);
  }
  else
  {
    sub_19C552104(a1, (uint64_t)v11, &qword_1EE4249B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_19C5725E8((uint64_t)v11, &qword_1EE4249B0);
      result = sub_19CAAA0B8();
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      (*(void (**)(_QWORD *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
      swift_storeEnumTagMultiPayload();
      a3(v8);
      sub_19C5725E8((uint64_t)v8, (uint64_t *)&unk_1EE4249A0);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return result;
}

uint64_t sub_19C5ACA94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, void *);
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE4249B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_19CAA95E4();
    v10 = sub_19CAA95F0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_19CAA95F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_19C5725E8((uint64_t)v8, &qword_1EE4249B0);
}

uint64_t static MLModel.compileModel(at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return swift_task_switch();
}

uint64_t sub_19C5ACBB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *ObjCClassFromMetadata;
  void *v4;
  uint64_t v5;
  void *v6;

  v0[7] = v0[16];
  v0[2] = v0;
  v0[3] = sub_19C5ACCEC;
  v1 = swift_continuation_init();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v4 = (void *)sub_19CAA95D8();
  v5 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v5 + 16) = sub_19C5AD2E0;
  *(_QWORD *)(v5 + 24) = v2;
  v0[14] = sub_19C5ADB44;
  v0[15] = v5;
  v0[11] = 1107296256;
  v0[12] = sub_19C5ACA94;
  v0[13] = &block_descriptor_31_0;
  v6 = _Block_copy(v0 + 10);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel_compileModelAtURL_completionHandler_, v4, v6);
  _Block_release(v6);

  swift_release();
  return swift_continuation_await();
}

uint64_t sub_19C5ACCEC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_19C5ACD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  v4 = sub_19CAA95F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE4249A0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_19C552104(a1, (uint64_t)v13, (uint64_t *)&unk_1EE4249A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = *v13;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
    swift_allocError();
    *v15 = v14;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v17(v10, (char *)v13, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17(*(char **)(*(_QWORD *)(a2 + 64) + 40), v8, v4);
    swift_continuation_throwingResume();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
}

void __swiftcall MLModel.newState()(MLState *__return_ptr retstr)
{
  void *v1;

  objc_msgSend(v1, sel_newState);
}

uint64_t sub_19C5ACEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_19C5ACF44()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  id v9;

  sub_19CAA9B60();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = objc_msgSend(*(id *)(v0 + 56), sel_newRequestWithInputFeatures_usingState_options_error_, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  v2 = *(void **)(v0 + 16);
  if (v1)
  {
    v3 = v1;
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    *(_QWORD *)(v4 + 16) = v3;
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v5 + 16) = v3;
    v6 = v2;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v7;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE4218A8);
    *v7 = v0;
    v7[1] = sub_19C5AD0C8;
    return sub_19CAAA1F0();
  }
  else
  {
    v9 = v2;
    sub_19CAA95C0();

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19C5AD0C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_19C5AD188()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_19C5AD1EC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C5AD268()
{
  swift_release();
  return swift_deallocObject();
}

void sub_19C5AD28C(void *a1, void *a2)
{
  uint64_t v2;

  sub_19C5AC45C(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_19C5AD2AC()
{
  return swift_deallocObject();
}

uint64_t sub_19C5AD2BC(void *a1, char a2)
{
  uint64_t v2;

  return sub_19C5AC6FC(a1, a2 & 1, *(_QWORD *)(v2 + 16));
}

uint64_t sub_19C5AD2C8(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_19C5AC86C(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_19C5AD2D0()
{
  return swift_deallocObject();
}

uint64_t sub_19C5AD2E0(uint64_t a1)
{
  uint64_t v1;

  return sub_19C5ACD40(a1, *(_QWORD *)(v1 + 16));
}

id MLModel.prediction(fromFeatures:options:)(uint64_t a1, uint64_t a2)
{
  return sub_19C5AD388(a1, a2, (SEL *)&selRef_predictionFromFeatures_options_error_);
}

id MLModel.predictions(fromBatch:options:)(uint64_t a1, uint64_t a2)
{
  return sub_19C5AD388(a1, a2, (SEL *)&selRef_predictionsFromBatch_options_error_);
}

id sub_19C5AD388(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v8[0] = 0;
  v4 = objc_msgSend(v3, *a3, a1, a2, v8);
  if (v4)
  {
    v5 = v8[0];
  }
  else
  {
    v6 = v8[0];
    sub_19CAA95C0();

    swift_willThrow();
  }
  return v4;
}

uint64_t sub_19C5AD444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch();
}

uint64_t sub_19C5AD45C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;

  v1 = (void *)v0[18];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_19C5AD544;
  v2 = swift_continuation_init();
  v3 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4[4] = sub_19C5ADAC0;
  v4[5] = v3;
  v4[1] = 1107296256;
  v4[2] = sub_19C5AC0D4;
  v4[3] = &block_descriptor_41;
  v5 = _Block_copy(v4);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v1, sel_submitWithCompletionHandler_, v5);
  _Block_release(v5);
  return swift_continuation_await();
}

uint64_t sub_19C5AD544()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  else
    **(_QWORD **)(v1 + 136) = *(_QWORD *)(v1 + 128);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_19C5AD5A4(uint64_t a1, void *a2, id a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  _QWORD *v15;

  if (objc_msgSend(a3, sel_isCancelled))
  {
    sub_19CAA9ADC();
    sub_19C5ADAC8();
    v7 = swift_allocError();
    sub_19CAA97D0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
    swift_allocError();
    *v8 = v7;
    return swift_continuation_throwingResumeWithError();
  }
  if (!a1)
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
      swift_allocError();
      *v10 = a2;
      v11 = a2;
    }
    else
    {
      sub_19CAA98FC();
      v12 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v13 = (void *)sub_19CAA98F0();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v12, sel_initWithDomain_code_userInfo_, v13, 0, 0);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE423C80);
      swift_allocError();
      *v15 = v14;
    }
    return swift_continuation_throwingResumeWithError();
  }
  **(_QWORD **)(*(_QWORD *)(a4 + 64) + 40) = a1;
  swift_unknownObjectRetain();
  return swift_continuation_throwingResume();
}

uint64_t static MLModel.availableComputeDevices.getter()
{
  id v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t result;
  unint64_t v17;

  v0 = objc_msgSend((id)objc_opt_self(), sel_availableComputeDevices);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE423BA0);
  v1 = sub_19CAA99F8();

  if (v1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain_n();
    v2 = sub_19CAAA0DC();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v17 = v1 & 0xC000000000000001;
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v4 = 4;
      v5 = v1;
      while (1)
      {
        v6 = v4 - 4;
        if (v17)
        {
          v1 = MEMORY[0x1A1AD4A9C](v4 - 4, v1);
          v7 = v4 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_21;
        }
        else
        {
          v1 = *(_QWORD *)(v1 + 8 * v4);
          swift_unknownObjectRetain();
          v7 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        objc_opt_self();
        v8 = swift_dynamicCastObjCClass();
        if (v8)
        {
          v9 = v8;
          v10 = 0;
        }
        else
        {
          objc_opt_self();
          v11 = swift_dynamicCastObjCClass();
          if (v11)
          {
            v9 = v11;
            v10 = 1;
          }
          else
          {
            objc_opt_self();
            v12 = swift_dynamicCastObjCClass();
            if (!v12)
            {
              swift_unknownObjectRetain();
              sub_19CAA9F2C();
              sub_19CAA9908();
              swift_bridgeObjectRelease();
              sub_19CAA992C();
              result = sub_19CAAA0B8();
              __break(1u);
              return result;
            }
            v9 = v12;
            v10 = 2;
          }
        }
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_19C4F9010(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_19C4F9010((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v9;
        *((_BYTE *)v15 + 40) = v10;
        swift_unknownObjectRelease();
        ++v4;
        v1 = v5;
        if (v7 == v2)
          goto LABEL_24;
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_24:
  swift_bridgeObjectRelease_n();
  return (uint64_t)v3;
}

uint64_t sub_19C5ADA28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19C5231F8;
  v5[17] = a1;
  v5[18] = v4;
  return swift_task_switch();
}

id sub_19C5ADA8C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t sub_19C5ADA9C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19C5ADAC0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_19C5AD5A4(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_19C5ADAC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE424A30;
  if (!qword_1EE424A30)
  {
    v1 = sub_19CAA9ADC();
    result = MEMORY[0x1A1AD76AC](MEMORY[0x1E0DF05E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE424A30);
  }
  return result;
}

uint64_t sub_19C5ADB48()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = (_QWORD *)v0[1];
  if (!v2)
    return (uint64_t)v2;
  v3 = v2 + 2;
  v4 = v2[2];
  if (!v4)
  {
    swift_bridgeObjectRetain();
    return (uint64_t)v2;
  }
  v5 = v4 - 1;
  v6 = v2[v4 + 3];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = *v0;
  if (v4 > *(_QWORD *)(*v0 + 16))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    result = (uint64_t)sub_19C503550(v1);
    v1 = (_QWORD *)result;
    goto LABEL_8;
  }
  if (v8 >= *(_QWORD *)(v9 + 16 * v5 + 40))
  {
    result = swift_bridgeObjectRetain();
    if (v4 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      v0[1] = 0;
      return (uint64_t)v2;
    }
    v13 = (_QWORD *)(v9 + 16 * v4 + 8);
    v14 = 1;
    v1 = v2;
    while (v14)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_19C503550(v1);
        v1 = (_QWORD *)result;
      }
      v15 = v4 - 1;
      if ((int64_t)(v4 - 1) >= v1[2])
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v1[v4 + 3] = 0;
      v0[1] = v1;
      v5 = v4 - 2;
      if ((int64_t)(v4 - 2) >= *v3)
        goto LABEL_26;
      v16 = v3[v4];
      v7 = __OFADD__(v16, 1);
      v17 = v16 + 1;
      if (v7)
        goto LABEL_27;
      if (v5 >= *(_QWORD *)(v9 + 16))
        goto LABEL_28;
      if (v17 < *v13)
        goto LABEL_7;
      v13 -= 2;
      --v4;
      v14 = (uint64_t)v1;
      if (v15 == 1)
        goto LABEL_23;
    }
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  v1 = v2;
LABEL_7:
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_31;
LABEL_8:
  if (v5 >= v1[2])
  {
    __break(1u);
  }
  else
  {
    v11 = v1[v5 + 4];
    v7 = __OFADD__(v11, 1);
    v12 = v11 + 1;
    if (!v7)
    {
      v1[v5 + 4] = v12;
      v0[1] = v1;
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_19C5ADCF4(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
}

uint64_t sub_19C5ADD00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_19C5A7FBC(*(_QWORD *)v0, *(_QWORD **)(v0 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19C5ADD48(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_19C4D4A3C(a1, a2, a3, *(_QWORD *)v3, *(_QWORD **)(v3 + 8));
}

uint64_t sub_19C5ADD50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_19C5ADB48();
  *a1 = result;
  return result;
}

_QWORD *sub_19C5ADD74(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = result;
  v2 = result[2];
  if (!v2 || result[4] == result[5])
    return v1;
  if (v2 == 1)
  {
LABEL_9:
    sub_19C4D0078((uint64_t)result);
    return v1;
  }
  v3 = result + 7;
  v4 = 1;
  while (1)
  {
    v5 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (*(v3 - 1) == *v3)
      return v1;
    v3 += 2;
    ++v4;
    if (v5 == v2)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t destroy for RangedIndices()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s6CoreML13RangedIndicesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RangedIndices(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for RangedIndices(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RangedIndices()
{
  return &type metadata for RangedIndices;
}

unint64_t sub_19C5ADF18()
{
  unint64_t result;

  result = qword_1EE424A40;
  if (!qword_1EE424A40)
  {
    result = MEMORY[0x1A1AD76AC](&unk_19CAED594, &type metadata for RangedIndices);
    atomic_store(result, (unint64_t *)&qword_1EE424A40);
  }
  return result;
}

uint64_t MLState.withMultiArray<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  id v26;

  v23 = a4;
  v5 = v4;
  v24 = sub_19CAA9E18();
  v9 = *(_QWORD *)(v24 - 8);
  v10 = MEMORY[0x1E0C80A78](v24);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v22 - v13, 1, 1, a3);
  v26 = 0;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = &v26;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_19C5AE2E0;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_19C527078;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19C5AE300;
  aBlock[3] = &block_descriptor_10;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_getMultiArrayWithHandler_, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (v26)
  {
    v20 = v26;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v24);
    return swift_release();
  }
  v21 = v24;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v24);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, a3);
  if ((_DWORD)result == 1)
    goto LABEL_8;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v23, v12, a3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v21);
  return swift_release();
}

void sub_19C5AE1C4(void *a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, void **a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;

  v13 = sub_19CAA9E18();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - v15;
  if (a1)
  {
    v17 = a1;
    a4();

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 56))(v16, 0, 1, a7);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(a3, v16, v13);
  }
  else
  {
    v18 = *a6;
    *a6 = a2;
    v19 = a2;

  }
}

uint64_t sub_19C5AE2D0()
{
  return swift_deallocObject();
}

void sub_19C5AE2E0(void *a1, void *a2)
{
  uint64_t v2;

  sub_19C5AE1C4(a1, a2, *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40), *(void ***)(v2 + 48), *(_QWORD *)(v2 + 16));
}

uint64_t sub_19C5AE2F0()
{
  return swift_deallocObject();
}

void sub_19C5AE300(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, id);
  id v6;
  id v7;

  v5 = *(void (**)(void *, id))(a1 + 32);
  v7 = a2;
  v6 = a3;
  v5(a2, v6);

}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t MLState.withMultiArray<A>(for:_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD aBlock[6];
  id v25;

  v21 = a4;
  v22 = sub_19CAA9E18();
  v7 = *(_QWORD *)(v22 - 8);
  v8 = MEMORY[0x1E0C80A78](v22);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))((char *)&v21 - v11, 1, 1, a3);
  v25 = 0;
  v14 = (void *)sub_19CAA98F0();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = v12;
  v15[4] = a1;
  v15[5] = a2;
  v15[6] = &v25;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_19C5AE6EC;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_19C527078;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19C5AE70C;
  aBlock[3] = &block_descriptor_12_0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_getMultiArrayForStateNamed_handler_, v14, v17);

  _Block_release(v17);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v17 & 1) != 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (v25)
  {
    v19 = v25;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v22);
    return swift_release();
  }
  v20 = v22;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v22);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, a3);
  if ((_DWORD)result == 1)
    goto LABEL_8;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v21, v10, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v20);
  return swift_release();
}

uint64_t sub_19C5AE5F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = sub_19CAA9E18();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - v12;
  a3(a1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))(v13, 0, 1, a6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(a2, v13, v10);
}

uint64_t sub_19C5AE6DC()
{
  return swift_deallocObject();
}

uint64_t sub_19C5AE6EC(uint64_t a1)
{
  uint64_t v1;

  return sub_19C5AE5F8(a1, *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16));
}

uint64_t sub_19C5AE6FC()
{
  return swift_deallocObject();
}

void sub_19C5AE70C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_19C5AE748(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x1E0C804E8];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_19C5AE9A0(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x1E0C804E8];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_19C5AEB2C(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x1E0C804E8];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_19C5AED18(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_19C5AEE90(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1575213817 * ((((2 * a1) | 0x9688197E) - a1 - 1262750911) ^ 0xC621BC73);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 8) - v1 == 1814094192;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_19C5AEF58()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x56)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((837 * (((v0 + 1) ^ v3) & 1)) ^ v0)))();
}

uint64_t sub_19C5AEFA8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((205 * (v1 != ((2 * (v2 ^ 0x4E0)) ^ 0x802 ^ (v0 + 94)))) ^ v2 ^ 0x4E0)))();
}

uint64_t sub_19C5AEFF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t *v3;
  char v4;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 1814094193;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v6 + v11);
  if (v13 == 69)
    __asm { BR              X11 }
  if (v13 == 197)
  {
    v14 = 480950058;
    v15 = *v3;
    v16 = (*((_BYTE *)v3 + 12) - v4);
    *(_QWORD *)result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 7)
      v17 = -2113562182;
    else
      v17 = -2113562181;
    *(_DWORD *)(result + 16) = 850839497;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 480950058;
    *(_QWORD *)(v15 - 0x6C729AF2542A6DEBLL) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v9 + 8 * (v8 ^ 1)))();
    v14 = -480908045;
  }
  *((_DWORD *)v3 + 4) = v14;
  return result;
}

void sub_19C5AF0D0(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)(a1 + 8) == 0;
  else
    v2 = 1;
  v3 = !v2;
  v1 = *(_DWORD *)(a1 + 48) + 1980347521 * ((2 * (a1 & 0x727F35F7) - a1 - 1920939512) ^ 0x34648AF5);
  __asm { BR              X8 }
}

uint64_t sub_19C5AF19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,int a22,unint64_t *a23)
{
  _QWORD *v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  int v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v38;

  v28 = *(_DWORD **)(v24 + 32);
  *v23 = 0;
  *v25 = 0;
  *v28 = 0;
  v38 = v23;
  a23 = &STACK[0x1BB16424708BAA3];
  a21 = v27
      - 653146051 * ((889355422 - (&a21 | 0x35027C9E) + (&a21 | 0xCAFD8361)) ^ 0x60E93683)
      - 778;
  sub_19C5B7A1C(&a21);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))(v26 + 8 * (((a22 == 480950058) * ((v27 - 1035) ^ 0x293)) ^ v27)))(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, v38);
}

uint64_t sub_19C5AF250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22,uint64_t a23,uint64_t a24,int a25)
{
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;

  v31 = *(_DWORD *)(v25 + 24) - v28;
  v32 = *(_QWORD *)(v25 + 40);
  v33 = 1001500783
      * (((&a21 | 0x7FBA2358) - &a21 + (&a21 & 0x8045DCA0)) ^ 0x350EDCEC);
  a23 = a18;
  a24 = v32;
  a21 = (v27 - 47) ^ v33;
  a22 = v33 + (v31 ^ 0x22501C25) - 1113595976 + ((2 * v31) & 0xCEFF6EF2 ^ 0x8A5F46B0);
  v34 = ((uint64_t (*)(int *))(*(_QWORD *)(v30 + 8 * (v27 ^ 0x19D)) - 8))(&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8 * (((a25 == v26) * (((v27 + 11) | 0x400) - 1258)) ^ v27))
                                          - 8))(v34);
}

uint64_t sub_19C5AF340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,uint64_t a22,unsigned int a23,int a24,int a25,unsigned int a26)
{
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;

  v29 = 1575213817 * ((&a21 & 0xF46579E9 | ~(&a21 | 0xF46579E9)) ^ 0x86FF36DA);
  a21 = &STACK[0x43A4C4D315BFAF95];
  a22 = a18;
  a23 = 1783734812 - v29;
  a25 = (v27 - 871891851) ^ v29;
  a26 = -2003218763 - v29;
  v30 = sub_19C61CA08((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8 * (((a24 == v26) * (((v27 + 775) | 0x104) - 704)) | v27))
                                          - ((v27 + 775) ^ 0x579u)
                                          + 353))(v30);
}

uint64_t sub_19C5AF418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unint64_t *a22,unsigned int a23,unint64_t *a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t **);
  uint64_t v28;

  a23 = (v24 + 87) ^ (1001500783
                    * ((2 * (&a21 & 0x6C2CEA08) - &a21 + 332600818) ^ 0x5967EA46));
  a21 = a16;
  a22 = &STACK[0x143DED155B0DEEC8];
  v27 = (void (*)(unint64_t **))(*(_QWORD *)(v26 + 8 * (v24 - 149)) - 12);
  v27(&a21);
  a23 = v24
      + 511487701 * ((1954754918 - (&a21 | 0x74833166) + (&a21 | 0x8B7CCE99)) ^ 0x9315BA51)
      - 705637162;
  a24 = &STACK[0x1B72FA547311DF50];
  a21 = &STACK[0x7F8EAF18153CC85F];
  a22 = a16;
  sub_19C61C814((uint64_t)&a21);
  a23 = (v24 + 87) ^ (1001500783 * (((&a21 | 0x592A3FCA) - (&a21 & 0x592A3FCA)) ^ 0x139EC07E));
  a21 = a16;
  a22 = &STACK[0x143DED155B0DEEE0];
  v27(&a21);
  a22 = a16;
  LODWORD(a21) = v24
               + 291962093 * ((((2 * &a21) | 0xEE62F0D6) - &a21 - 1999730795) ^ 0x66C37521)
               - 92;
  v28 = sub_19C5F1B8C((uint64_t)&a21);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((1901 * (HIDWORD(a21) == (v24 ^ 0x1CAAB643))) ^ v24)))(v28);
}

uint64_t sub_19C5AF60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  int v21;
  int v22;
  uint64_t v23;

  return (*(uint64_t (**)(void))(v23 + 8 * (((a21 == v21) * (((v22 - 105) | 9) ^ 0x4B1)) ^ v22)))();
}

uint64_t sub_19C5AF63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  int v17;
  uint64_t v18;

  return (*(uint64_t (**)(void))(v18 + 8 * ((229 * (((a16 == v16) ^ (v17 - 96)) & 1)) ^ v17)))();
}

uint64_t sub_19C5AF670@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD, uint64_t))(v4 + 8 * (v2 - 129)))(a1 ^ v1, 4183984400) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (((97 * (v2 ^ 0x162)) ^ 0x522) + 1238)) ^ v2)))();
}

uint64_t sub_19C5AF6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  _BOOL4 v20;

  v19 = ((2 * (a16 ^ v16)) & 0xFBBBA37E)
      + (a16 ^ v16 ^ 0xFDDDD1BF)
      - ((((v18 + 129269876) & 0xF84B7BEB ^ (v18 + 71587806))
        + 2 * (((2 * (a16 ^ v16)) & 0xFBBBA37E) + (a16 ^ v16 ^ 0xFDDDD1BF))) & 0xB77DF670)
      - 572446343;
  v20 = ((2 * v19) & 0xAF1531F6 ^ 0xA7153070) + (v19 ^ 0x8C3463C3) - 67635235 != 1401065688;
  return (*(uint64_t (**)(void))(v17 + 8 * (((8 * v20) | (16 * v20)) ^ v18)))();
}

uint64_t sub_19C5AF78C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * ((1721
                                                                 * (v2 + v1 - 1468700923 >= 419 * (v4 ^ 0x88u) - 1249)) ^ v4))
                                                   - 4))(a1, v3);
}

uint64_t sub_19C5AF808(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((a3 ^ 0x1FD) - 1186) ^ 0x195) * ((unint64_t)(v3 - a1) < 0x20)) ^ a3))
                            - 12))();
}

uint64_t sub_19C5AF840(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a4 ^ (1245 * (v4 > 0x1F))))
                            - ((20 * (a4 ^ 0x33) + 1892809281) & 0x8F2E05FD)
                            + 1361))();
}

uint64_t sub_19C5AF890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int8x16_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v14;

  v10.i64[0] = 0x4545454545454545;
  v10.i64[1] = 0x4545454545454545;
  v11 = v8 + (a5 ^ 0x450 ^ (v6 + 855));
  v12 = *(int8x16_t *)(v5 + v11 - 15);
  v13 = *(int8x16_t *)(v5 + v11 - 31);
  v14 = a1 + v11;
  *(int8x16_t *)(v14 - 15) = veorq_s8(v12, v10);
  *(int8x16_t *)(v14 - 31) = veorq_s8(v13, v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((2007 * ((v7 & 0xFFFFFFE0) == 32)) ^ (a5 - 492))) - 4))();
}

void sub_19C5AF8F8()
{
  JUMPOUT(0x19C5AF8B0);
}

uint64_t sub_19C5AF904(uint64_t a1)
{
  int v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t result;
  int *v7;
  void (*v8)(_BYTE *);
  _QWORD *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _BYTE v13[4];
  unsigned int v14;
  uint64_t v15;

  v5 = (v4 - 1066) | 0x108;
  *v9 = a1;
  *v3 = v1;
  *v7 = v11 ^ (v5 + 480949793);
  v15 = v10;
  v14 = v5 - 291962093 * (v13 ^ 0x11F20D4A) + 574;
  v8(v13);
  v14 = (v5 ^ 0x41D)
      - 291962093
      * (((v13 | 0x11AED1EB) - v13 + (v13 & 0xEE512E10)) ^ 0x5CDCA1)
      - 461;
  v15 = v12;
  result = ((uint64_t (*)(_BYTE *))v8)(v13);
  *v2 = 480950058;
  return result;
}

void sub_19C5AFBA4(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v1 = 1001500783 * ((664209447 - (a1 | 0x27970827) + (a1 | 0xD868F7D8)) ^ 0x92DC086C);
  v2 = *(_DWORD *)(a1 + 24) ^ v1;
  v3 = (*(_DWORD *)(a1 + 8) + v1);
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x26866D3AFFDFE015);
  v6 = v4 - 1323025765;
  v5 = v4 - 1323025765 < 0;
  LODWORD(v7) = 1323025765 - v4;
  if (v5)
    v7 = v7;
  else
    v7 = v6;
  v8 = 4 * (v7 - ((2 * (_DWORD)v7) & 0x1FD22176)) + 0x3390D8B83FA442ECLL;
  v9 = (v8 ^ 0x886F036788522B84) + 0x4400242053F2F88DLL + ((2 * v8) & 0x6721B13F6FECD2D0 ^ 0x6721B1306F4880D0);
  v10 = (v3 | ((unint64_t)(v3 < 0x63336644) << 32)) - 1464468559;
  v11 = (v10 < 0xBE961F5) ^ (v9 < 0xBE961F5);
  v12 = v9 > v10;
  if (v11)
    v12 = v9 < 0xBE961F5;
  __asm { BR              X13 }
}

uint64_t sub_19C5AFD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (int)(v5 ^ (115 * (v3 != a3))))
                                                            - (v5 ^ 0x531)))(a1, a2, 3873474315);
}

uint64_t sub_19C5AFD60()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * ((495 * (((((2 * v1) ^ 0xEBA) - 1075) | 0x540) == 1345)) ^ (2 * v1) ^ 0xEBA)))();
}

uint64_t sub_19C5AFDEC@<X0>(uint64_t a1@<X0>, int a2@<W2>, char a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  uint64_t v6;
  unsigned int v7;

  *(_BYTE *)(*(_QWORD *)(a1 + 16) + (a5 - 1664312901)) = (((a4 ^ v7) >> (a3 + 44))
                                                                      - (((a4 ^ v7) >> (a3 + 44) << (((a2 ^ 0x74) - 1) ^ 0x35)) & 0xE0)
                                                                      + 112) ^ 0x70;
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 | (2 * (a5 - 1 != a6)) | (4 * (a5 - 1 != a6)))))();
}

uint64_t sub_19C5AFE64(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(v4 + 8 * ((495 * (a4 + 8 == v5 + ((a2 - 1075) | 0x540) - 1313)) ^ a2)))();
}

uint64_t sub_19C5AFE9C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  _BOOL4 v8;

  v8 = v2 > v6;
  if (v8 == v7 + 9357107 < -1559078933)
    v8 = v7 + 9357107 < v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v4
                                                                                        + 8
                                                                                        * (int)(((((a2 - 915676883) & 0x36941FDF)
                                                                                                - 1342)
                                                                                               * v8) ^ a2)))(a1, a2, ((_DWORD)a2 - 915676883) & 0x36941FDF, 1244025812, 4214139355, v3);
}

uint64_t sub_19C5AFF10@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_19C5AFDEC(a1, a2 + 269, 212, *(_DWORD *)(*v4 + 4 * (v5 - 579047608)), v3, a3);
}

uint64_t sub_19C5AFF44(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 28) = a3;
  return result;
}

void sub_19C5AFF50(uint64_t a1)
{
  int v1;
  unsigned int v2;
  int v4;
  unint64_t *v5;
  unsigned int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 12) - 511487701 * ((-2 - ((~(_DWORD)a1 | 0xD52738A8) + (a1 | 0x2AD8C757))) ^ 0xCD4E4C60);
  v2 = 1001500783 * (((&v4 | 0x9D73CBAD) - (&v4 & 0x9D73CBAD)) ^ 0xD7C73419);
  v6 = v2 ^ 0x9CAF10F4;
  v4 = v1 + v2 - 167302517;
  v5 = &STACK[0xBC8884B3565C821];
  sub_19C5B3498((uint64_t)&v4);
  __asm { BR              X14 }
}

uint64_t sub_19C5B03EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  int v62;
  char v63;
  int v64;
  uint64_t v65;
  int v66;

  v66 = v62 - 56;
  *(&a62 + (v66 ^ (a3 + 343)) + v64) = v63;
  *(&a62 + (a8 - 311055615)) = *(_BYTE *)(a7 + 1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * (v66 ^ 0x64C)) - (((v66 - 1285567954) & 0x4CA0357Bu) - 245) + 17))(a1, a2, a3, a4, a5, a6, &a62, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_19C5B255C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a1 + (v6 + a3 + 1)) = *(_BYTE *)(a2 + (v4 - 594882713));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((122
                                          * ((((v5 + 86) ^ 0xFFFFFE89 ^ (v5 - 1996724851) & 0x7703997D) & v3) != 594882712)) ^ v5))
                            - 12))();
}

uint64_t sub_19C5B25D0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unint64_t a37,uint64_t (*a38)(uint64_t))
{
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;

  *(_BYTE *)(a1 + (a3 + v38 - 331 - 27)) = *(_BYTE *)(a2 + (v39 - 594882712));
  v41 = 1305237457 * ((((2 * (v40 - 216)) | 0xF73A9A34) - (v40 - 216) + 73577190) ^ 0x4224EBD4);
  STACK[0x400] = a37;
  *(_DWORD *)(v40 - 200) = v41 + v38 - 331 + 1793;
  *(_DWORD *)(v40 - 216) = v41 ^ 0x38D7E972;
  v42 = sub_19C5F6FA0(v40 - 216);
  return a38(v42);
}

uint64_t sub_19C5B2664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  _BOOL4 v33;

  v33 = HIDWORD(a5) < 0x80BB7B31;
  if (v33 == a3 + 295532925 < (v31 - 2135197202))
    v33 = (a3 + 295532925) < HIDWORD(a5);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * (((4 * !v33) | (32 * !v33)) ^ v31)) - 12))(a1, 295532925, HIDWORD(a5), 138, 1856016679, 2438950333, a2, 41, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_19C5B26E4@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, char a4@<W3>, uint64_t a5@<X6>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = a3 < v9;
  *(_BYTE *)(a5 + (v7 + a1)) = *(_BYTE *)(v11 + (a6 + v8))
                                           - (a4 & (2 * *(_BYTE *)(v11 + (a6 + v8))))
                                           + 69;
  if (v12 == a2 + a6 + 1 < v9)
    v12 = a2 + a6 + 1 < a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((4 * !v12) | (32 * !v12)) ^ v6)) - 12))();
}

uint64_t sub_19C5B275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  char a71;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;

  v74 = 1305237457
      * ((((v73 - 216) ^ 0xCDE3E24F | 0xE2FAD15E)
        - ((v73 - 216) ^ 0xCDE3E24F)
        + (((v73 - 216) ^ 0xCDE3E24F) & 0x1D052EA1)) ^ 0x96A095DF);
  STACK[0x400] = a42;
  *(_DWORD *)(v73 - 216) = v74 ^ a10;
  *(_DWORD *)(v73 - 200) = v74 + v72 + 1782;
  v75 = sub_19C5F6FA0(v73 - 216);
  v76 = ((2 * (a71 & 0x3F)) ^ 0x30) + (((v72 + 1010) | 0xC0) ^ 0x5BFFECBD ^ a71 & 0x3F);
  *(&a62 + (v76 - 1543497855)) = -59;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v71
                                                      + 8
                                                      * ((380 * ((v76 - 1543497911) < 0xFFFFFFC8)) ^ v72))
                                          - 8))(v75);
}

uint64_t sub_19C5B28A0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * ((944 * (((v1 - 1213) ^ 0xA400179F) + v0 < 0x40)) ^ v1))
                                                   - 723 * (v1 ^ 0x4D8u)
                                                   + 1438))(69, 647);
}

uint64_t sub_19C5B2900()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((1543497917 - v0 - v1 >= ((v2 - 1417) ^ 0x1Au)) * ((v2 ^ 0x7EF) - 566)) ^ v2))
                            - 8))();
}

uint64_t sub_19C5B2948()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((2 * (((v1 < 0xF) ^ (v0 - 126)) & 1)) & 0xDF | (32
                                                                                                 * (((v1 < 0xF) ^ (v0 - 126)) & 1))) ^ v0)))();
}

uint64_t sub_19C5B2978@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  __int128 v6;

  *(_OWORD *)(a1 + (a2 + v4)) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((777 * (((23 * (v3 ^ 0xFDu)) ^ 0x4CALL) == (v2 & 0x1FFFFFFF0))) ^ ((v3 ^ 0xD6) + 1064)))
                                          - 8))(23);
}

uint64_t sub_19C5B29D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1
                                                              + 8
                                                              * ((1580 * (a1 - 286673284 < ((v2 + 1473) ^ 0x5E6u))) ^ (v2 + 541))))(69, 1888878413, 2406088251);
}

uint64_t sub_19C5B2A28@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((57 * ((((v1 - 990) | 0x12) ^ 0x11164BA9u) - a1 >= ((v1 - 990) ^ 0x6B1u) - 1194)) ^ v1)))();
}

uint64_t sub_19C5B2A74@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)(a3 + v6 + v5 - 570 + ((v4 + a1) & a2)) = 0x4545454545454545;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((16 * (((a4 + 1) & 0x1FFFFFFF8) == 8)) | ((((a4 + 1) & 0x1FFFFFFF8) == 8) << 6)) ^ v4))
                            - 12))();
}

void sub_19C5B2AC0()
{
  JUMPOUT(0x19C5B2A8CLL);
}

uint64_t sub_19C5B2ACC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 831494788) & 0x318F9A5B ^ 0x5F6) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_19C5B2B08(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(a7 + (v8 + v9)) = a1;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 + v8 + 1) > 0x37) * (v7 - 490)) | v7)))();
}

void sub_19C5B2B38()
{
  JUMPOUT(0x19C5B09CCLL);
}

uint64_t sub_19C5B2CBC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((38 * (v0 != v1)) ^ v2)) - 8))(69, 647);
}

uint64_t sub_19C5B2CF0()
{
  char v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((667
                                * (((v1 - 15) ^ ((v0 & 8) == (v1 - 1213) - 29)) & 1)) ^ (v1 - 1032))))();
}

uint64_t sub_19C5B2D2C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + ((v4 ^ 0xFFFFFF34) & (v3 + v5 + a2))) = 0x4545454545454545;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((1734 * (v3 - (v2 & 0x1FFFFFFF8) == -8)) ^ v4)) - 12))();
}

void sub_19C5B2D7C()
{
  JUMPOUT(0x19C5B2D4CLL);
}

uint64_t sub_19C5B2D88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (((((v2 - 204) | 0x1C) ^ 2) * (v0 != v1)) ^ v2)))(69, 647);
}

uint64_t sub_19C5B2DB8(char a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(a7 + (v7 + v9)) = a1;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v7 + 1 + v9) < 0x40) * a2) ^ (v8 + 176))))();
}

void sub_19C5B2DE8()
{
  JUMPOUT(0x19C5B09CCLL);
}

uint64_t sub_19C5B2E00(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,unsigned __int8 a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,char a63)
{
  uint64_t v63;
  int v64;
  uint64_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int8x16_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int8x16x4_t v91;

  v64 = a54 ^ 0xF3;
  if (v64 == 241)
    return ((uint64_t (*)(void))(*(_QWORD *)(v63
                                          + 8
                                          * (((LODWORD(STACK[0x204]) == 1380648494)
                                            * ((a4 - 73269096) & 0x45DFFFB ^ 0xE3)) ^ (a4 + 148)))
                              - 4))();
  if (v64 == 242)
    return ((uint64_t (*)(void))(*(_QWORD *)(v63
                                          + 8
                                          * ((1473
                                            * (LODWORD(STACK[0x204]) != ((a4 - 1482182698) & 0x585850EF ^ 0x524B06CD))) ^ (a4 + 198)))
                              - 4))();
  v66 = 3 * (a4 ^ 0x4Eu);
  v67 = vdupq_n_s64(((2 * (_QWORD)&a62) & 0xACFEEB7F6FF6EFE0)+ ((unint64_t)&a62 ^ 0x567F75BFB7FB7709 ^ v66)- 0x20610284792680);
  v68 = vaddq_s64(v67, (int64x2_t)xmmword_19CAED650);
  v69 = vaddq_s64(v67, (int64x2_t)xmmword_19CAEC290);
  v70 = vaddq_s64(v67, (int64x2_t)xmmword_19CAEC2A0);
  v71 = vaddq_s64(v67, (int64x2_t)xmmword_19CAE7980);
  v72 = vdupq_n_s64(0xA9A0EB42CC7DAE90);
  v73 = (int8x16_t)vdupq_n_s64(0xBAuLL);
  v74 = (int8x16_t)vdupq_n_s64(0x4265E6864CF12246uLL);
  v75 = vdupq_n_s64(0x2132F34326789123uLL);
  v76 = vdupq_n_s64(0xA9A0EB42CC7DAEA1);
  v77 = (int8x16_t)vdupq_n_s64(0x1AuLL);
  v78 = vdupq_n_s64(0xAFuLL);
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v70, v72), v73);
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v71, v72), v73);
  v81 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v69, v72), v73);
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v68, v72), v73);
  v83 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v82, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v82, v82), v74)), v75), (int8x16_t)v75);
  v84 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v81, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v81, v81), v74)), v75), (int8x16_t)v75);
  v85 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v80, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v80, v80), v74)), v75), (int8x16_t)v75);
  v86 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v79, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v79, v79), v74)), v75), (int8x16_t)v75);
  v87 = vaddq_s64(v70, v76);
  v86.i64[0] *= v87.i64[0];
  v86.i64[1] *= v87.i64[1];
  v88 = vaddq_s64(v71, v76);
  v85.i64[0] *= v88.i64[0];
  v85.i64[1] *= v88.i64[1];
  v89 = vaddq_s64(v69, v76);
  v84.i64[0] *= v89.i64[0];
  v84.i64[1] *= v89.i64[1];
  v90 = vaddq_s64(v68, v76);
  v83.i64[0] *= v90.i64[0];
  v83.i64[1] *= v90.i64[1];
  v91.val[1] = (int8x16_t)vaddq_s64(vsubq_s64(v86, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v86, v86), v77)), v78);
  v91.val[0] = (int8x16_t)vaddq_s64(vsubq_s64(v85, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v85, v85), v77)), v78);
  v91.val[2] = (int8x16_t)vaddq_s64(vsubq_s64(v84, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v84, v84), v77)), v78);
  v91.val[3] = (int8x16_t)vaddq_s64(vsubq_s64(v83, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v83, v83), v77)), v78);
  *(int8x8_t *)(&a63 + ((v66 + 43) ^ 0x17FLL)) = vrev64_s8(veor_s8(vadd_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v91, (int8x16_t)xmmword_19CAECB90), (int8x8_t)0xDEDEDEDEDEDEDEDELL), (int8x8_t)0x8D8D8D8D8D8D8D8DLL));
  return (*(uint64_t (**)(void))(v63 + 8 * (int)v66))();
}

