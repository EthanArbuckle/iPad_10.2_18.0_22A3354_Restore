uint64_t RawOrderShippingFulfillment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13[152];
  _QWORD v14[20];
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053FA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233518FF4();
  sub_23361F410();
  v14[0] = *(_QWORD *)v3;
  v13[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256049D50);
  sub_23330A8EC(&qword_256049D78, (uint64_t (*)(void))sub_23330A954, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  if (!v2)
  {
    LOBYTE(v14[0]) = 1;
    sub_23361F0E0();
    LOBYTE(v14[0]) = 2;
    sub_23361F0E0();
    LOBYTE(v14[0]) = *(_BYTE *)(v3 + 40);
    v13[0] = 3;
    sub_233519104();
    sub_23361F17C();
    LOBYTE(v14[0]) = 4;
    sub_23361F0E0();
    LOBYTE(v14[0]) = 5;
    sub_23361F0E0();
    LOBYTE(v14[0]) = 6;
    sub_23361F0E0();
    v9 = type metadata accessor for RawOrderShippingFulfillment();
    v16 = 7;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    sub_233371950(v3 + *(int *)(v9 + 48), (uint64_t)v14);
    sub_233371950((uint64_t)v14, (uint64_t)v13);
    v15 = 8;
    sub_233519148();
    sub_23361F110();
    v13[0] = 9;
    v10 = sub_23361D634();
    v12[1] = sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v12[2] = v10;
    sub_23361F110();
    v13[0] = 10;
    type metadata accessor for Duration();
    sub_233167C58((unint64_t *)&unk_254245170, (uint64_t (*)(uint64_t))type metadata accessor for Duration, (uint64_t)&protocol conformance descriptor for Duration);
    sub_23361F110();
    v13[0] = 11;
    sub_23361F110();
    v13[0] = 12;
    sub_23361F140();
    v13[0] = 13;
    sub_23361F110();
    v13[0] = *(_BYTE *)(v3 + *(int *)(v9 + 72));
    v15 = 14;
    sub_23351918C();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RawOrderShippingStatus.isTerminal.getter()
{
  _BYTE *v0;

  return (*v0 > 6u) | (0x24u >> *v0) & 1;
}

FinanceKit::RawOrderShippingStatus_optional __swiftcall RawOrderShippingStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::RawOrderShippingStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static RawOrderShippingStatus.allCases.getter()
{
  return &unk_25046B878;
}

void sub_233515234(char *a1)
{
  sub_233226984(*a1);
}

void sub_233515240()
{
  char *v0;

  sub_23353F57C(0, *v0);
}

void sub_23351524C(uint64_t a1)
{
  char *v1;

  sub_23353E46C(a1, *v1);
}

void sub_233515254(uint64_t a1)
{
  char *v1;

  sub_23353F57C(a1, *v1);
}

FinanceKit::RawOrderShippingStatus_optional sub_23351525C(Swift::String *a1)
{
  return RawOrderShippingStatus.init(rawValue:)(*a1);
}

uint64_t sub_233515268()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_233515290 + 4 * byte_2336576E8[*v0]))();
}

void sub_233515290(_QWORD *a1@<X8>)
{
  *a1 = 0x69737365636F7270;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_2335152B0(_QWORD *a1@<X8>)
{
  *a1 = 0x64657070696873;
  a1[1] = 0xE700000000000000;
}

void sub_2335152CC(_QWORD *a1@<X8>)
{
  *a1 = 0x7961576568546E6FLL;
  a1[1] = 0xE800000000000000;
}

void sub_2335152E8(char *a1@<X8>)
{
  strcpy(a1, "outForDelivery");
  a1[15] = -18;
}

void sub_233515310(_QWORD *a1@<X8>)
{
  *a1 = 0x65726576696C6564;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_23351535C()
{
  sub_23351C8F0();
  return sub_23361E390();
}

uint64_t sub_2335153B8()
{
  sub_23351C8F0();
  return sub_23361E354();
}

void sub_233515404(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B878;
}

FinanceKit::RawOrderShippingType_optional __swiftcall RawOrderShippingType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FinanceKit::RawOrderShippingType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static RawOrderShippingType.allCases.getter()
{
  return &unk_25046B8F0;
}

uint64_t RawOrderShippingType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x79726576696C6564;
  else
    return 0x676E697070696873;
}

uint64_t sub_2335154B4(char *a1, char *a2)
{
  return sub_233226CB0(*a1, *a2);
}

uint64_t sub_2335154C0()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233515534()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23351557C()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::RawOrderShippingType_optional sub_2335155EC(Swift::String *a1)
{
  return RawOrderShippingType.init(rawValue:)(*a1);
}

void sub_2335155F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x676E697070696873;
  if (*v1)
    v2 = 0x79726576696C6564;
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_233515630()
{
  sub_23351C8AC();
  return sub_23361E390();
}

uint64_t sub_23351568C()
{
  sub_23351C8AC();
  return sub_23361E354();
}

void sub_2335156D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B918;
}

uint64_t static RawOrderShippingFulfillmentError.== infix(_:_:)()
{
  return 1;
}

uint64_t RawOrderShippingFulfillmentError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t RawOrderShippingFulfillmentError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t RawOrderShippingFulfillment.lineItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawOrderShippingFulfillment.lineItems.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.lineItems.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.carrier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingFulfillment.carrier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.carrier.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.carrierIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingFulfillment.carrierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.carrierIdentifier.modify())()
{
  return nullsub_1;
}

void RawOrderShippingFulfillment.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *RawOrderShippingFulfillment.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.status.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingFulfillment.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.statusDescription.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingFulfillment.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.notes.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.trackingNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingFulfillment.trackingNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.trackingNumber.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.trackingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 44), a1, &qword_254248700);
}

uint64_t RawOrderShippingFulfillment.trackingURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 44), &qword_254248700);
}

uint64_t (*RawOrderShippingFulfillment.trackingURL.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

_QWORD *RawOrderShippingFulfillment.recipient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[19];

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  sub_233371950(v1 + *(int *)(v3 + 48), (uint64_t)v5);
  sub_233371950((uint64_t)v5, a1);
  return sub_2335191D0(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233519234);
}

uint64_t RawOrderShippingFulfillment.recipient.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[152];
  _QWORD v5[20];

  sub_233371950(a1, (uint64_t)v4);
  v2 = v1 + *(int *)(type metadata accessor for RawOrderShippingFulfillment() + 48);
  sub_233371950(v2, (uint64_t)v5);
  sub_2335191D0(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2333719F8);
  return sub_233371950((uint64_t)v4, v2);
}

uint64_t (*RawOrderShippingFulfillment.recipient.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.estimatedDeliveryAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 52), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t RawOrderShippingFulfillment.estimatedDeliveryAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 52), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawOrderShippingFulfillment.estimatedDeliveryAt.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.estimatedDeliveryWindowDuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 56), a1, &qword_25604A478);
}

uint64_t RawOrderShippingFulfillment.deliveredAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t RawOrderShippingFulfillment.deliveredAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 60), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawOrderShippingFulfillment.deliveredAt.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.fulfillmentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawOrderShippingFulfillment() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingFulfillment.fulfillmentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawOrderShippingFulfillment() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.fulfillmentIdentifier.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.shippedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 68), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t RawOrderShippingFulfillment.shippedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawOrderShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 68), (uint64_t *)&unk_254247DA0);
}

uint64_t (*RawOrderShippingFulfillment.shippedAt.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.shippingType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RawOrderShippingFulfillment();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 72));
  return result;
}

uint64_t RawOrderShippingFulfillment.shippingType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RawOrderShippingFulfillment();
  *(_BYTE *)(v1 + *(int *)(result + 72)) = v2;
  return result;
}

uint64_t (*RawOrderShippingFulfillment.shippingType.modify())(_QWORD)
{
  type metadata accessor for RawOrderShippingFulfillment();
  return nullsub_1;
}

uint64_t RawOrderShippingFulfillment.estimatedEndOfDeliveryWindow.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v41 = a1;
  v40 = sub_23361D748();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23361D868();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Duration();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v33 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - v13;
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RawOrderShippingFulfillment();
  sub_2331686A0(v1 + *(int *)(v19 + 52), (uint64_t)v14, (uint64_t *)&unk_254247DA0);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v20(v14, 1, v15) == 1)
  {
    sub_233168608((uint64_t)v14, (uint64_t *)&unk_254247DA0);
    v21 = 1;
    v22 = v41;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v22, v21, 1, v15);
  }
  v23 = v14;
  v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v24(v18, v23, v15);
  sub_2331686A0(v1 + *(int *)(v19 + 56), (uint64_t)v6, &qword_25604A478);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_233168608((uint64_t)v6, &qword_25604A478);
    v22 = v41;
    v24(v41, v18, v15);
LABEL_7:
    v21 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v22, v21, 1, v15);
  }
  v25 = v34;
  sub_233168580((uint64_t)v6, v34, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  v26 = v38;
  v27 = v36;
  v28 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v36, *MEMORY[0x24BDCEF50], v40);
  v29 = v35;
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  v30 = v33;
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v39);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v30, 1, v15);
  if ((_DWORD)result != 1)
  {
    v22 = v41;
    v24(v41, v30, v15);
    sub_233168500(v25, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_233516244(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233516280 + 4 * byte_2336576F0[a1]))(0x6D657449656E696CLL, 0xE900000000000073);
}

uint64_t sub_233516280()
{
  return 0x72656972726163;
}

unint64_t sub_233516298()
{
  return 0xD000000000000011;
}

uint64_t sub_2335162D4()
{
  return 0x7365746F6ELL;
}

uint64_t sub_2335162E8()
{
  return 0x676E696B63617274;
}

uint64_t sub_23351631C()
{
  return 0x6E65697069636572;
}

uint64_t sub_2335163BC()
{
  return 0x676E697070696873;
}

uint64_t sub_2335163DC()
{
  unsigned __int8 *v0;

  return sub_233516244(*v0);
}

uint64_t sub_2335163E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23351C270(a1, a2);
  *a3 = result;
  return result;
}

void sub_233516408(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_233516414()
{
  sub_233518FF4();
  return sub_23361F428();
}

uint64_t sub_23351643C()
{
  sub_233518FF4();
  return sub_23361F434();
}

uint64_t sub_233516468@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return RawOrderShippingFulfillment.init(from:configuration:)(a1, *a2, a3);
}

uint64_t sub_233516480(_QWORD *a1)
{
  return RawOrderShippingFulfillment.encode(to:)(a1);
}

Swift::Void __swiftcall RawOrderShippingFulfillment.clearEstimatedDeliveryWindowDuration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RawOrderShippingFulfillment() + 56);
  sub_233168608(v1, &qword_25604A478);
  v2 = type metadata accessor for Duration();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t RawOrderShippingRecipient.familyName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingRecipient.familyName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderShippingRecipient.familyName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingRecipient.givenName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingRecipient.givenName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*RawOrderShippingRecipient.givenName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingRecipient.organizationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderShippingRecipient.organizationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RawOrderShippingRecipient.organizationName.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderShippingRecipient.address.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1[6];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  v6 = v1[10];
  v7 = v1[11];
  v8 = v1[12];
  v9 = v1[13];
  v10 = v1[14];
  v11 = v1[15];
  v12 = v1[16];
  v13 = v1[17];
  v14 = v1[18];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  return sub_23332938C(v2);
}

__n128 RawOrderShippingRecipient.address.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  v5 = a1[4];
  v6 = a1[3];
  v4 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  sub_233329310(*(_QWORD *)(v1 + 48));
  *(_OWORD *)(v1 + 48) = v9;
  *(_OWORD *)(v1 + 64) = v8;
  *(_OWORD *)(v1 + 80) = v7;
  *(_OWORD *)(v1 + 96) = v6;
  result = v4;
  *(_OWORD *)(v1 + 112) = v5;
  *(__n128 *)(v1 + 128) = v4;
  *(_QWORD *)(v1 + 144) = v2;
  return result;
}

uint64_t (*RawOrderShippingRecipient.address.modify())()
{
  return nullsub_1;
}

uint64_t sub_233516748()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23351677C + 4 * byte_2336576FF[*v0]))(0x614E796C696D6166, 0xEA0000000000656DLL);
}

uint64_t sub_23351677C()
{
  return 0x6D614E6E65766967;
}

unint64_t sub_233516798()
{
  return 0xD000000000000010;
}

uint64_t sub_2335167B4()
{
  return 0x73736572646461;
}

uint64_t sub_2335167CC()
{
  sub_233519310();
  return sub_23361F428();
}

uint64_t sub_2335167F4()
{
  sub_233519310();
  return sub_23361F434();
}

uint64_t RawOrderShippingRecipient.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053FC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v29 = v1[3];
  v30 = v7;
  v8 = v1[4];
  v27 = v1[5];
  v28 = v8;
  v9 = v1[6];
  v25 = v1[7];
  v26 = v9;
  v14 = v1[8];
  v15 = v1[9];
  v24 = v1[10];
  v23 = v1[11];
  v22 = v1[12];
  v21 = v1[13];
  v20 = v1[14];
  v19 = v1[15];
  v18 = v1[16];
  v17 = v1[17];
  v16 = v1[18];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233519310();
  sub_23361F410();
  LOBYTE(v32) = 0;
  v10 = v31;
  sub_23361F0E0();
  if (!v10)
  {
    v12 = v25;
    v11 = v26;
    LOBYTE(v32) = 1;
    sub_23361F0E0();
    LOBYTE(v32) = 2;
    sub_23361F0E0();
    v32 = v11;
    v33 = v12;
    v34 = v14;
    v35 = v15;
    v36 = v24;
    v37 = v23;
    v38 = v22;
    v39 = v21;
    v40 = v20;
    v41 = v19;
    v42 = v18;
    v43 = v17;
    v44 = v16;
    v45 = 3;
    sub_23320C808();
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawOrderShippingRecipient.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[32];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _QWORD *v86;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053FD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_233519310();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    v73 = 0;
    v74 = 0;
    v75 = 0;
    v76 = 0;
    v77 = 0;
    v78 = 0;
    v79 = 1;
    v80 = 0u;
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0u;
    v85 = 0u;
  }
  else
  {
    LOBYTE(v73) = 0;
    v10 = sub_23361EFCC();
    v13 = v12;
    v49 = v10;
    LOBYTE(v73) = 1;
    swift_bridgeObjectRetain();
    v14 = sub_23361EFCC();
    v47 = v13;
    v48 = v14;
    LOBYTE(v73) = 2;
    v16 = v15;
    swift_bridgeObjectRetain();
    v17 = sub_23361EFCC();
    v19 = v18;
    v45 = v17;
    v46 = v16;
    v60 = 3;
    sub_23320C7C4();
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v20 = v62;
    v21 = v64;
    v22 = v65;
    v23 = v66;
    v36 = v61;
    v37 = v68;
    v44 = v69;
    v38 = v67;
    *(_QWORD *)v39 = v70;
    *(_OWORD *)&v39[8] = v71;
    *(_QWORD *)&v39[24] = v72;
    v40 = v62;
    v41 = v66;
    v24 = v63;
    v42 = v65;
    v43 = v64;
    sub_23332938C(v61);
    sub_233329310(1);
    *(_QWORD *)&v50 = v49;
    *((_QWORD *)&v50 + 1) = v47;
    *(_QWORD *)&v51 = v48;
    *((_QWORD *)&v51 + 1) = v46;
    *(_QWORD *)&v52 = v45;
    *((_QWORD *)&v52 + 1) = v19;
    *(_QWORD *)&v53 = v36;
    *((_QWORD *)&v53 + 1) = v20;
    v35 = v24;
    *(_QWORD *)&v54 = v24;
    *((_QWORD *)&v54 + 1) = v21;
    *(_QWORD *)&v55 = v22;
    *((_QWORD *)&v55 + 1) = v23;
    *(_QWORD *)&v56 = v38;
    *((_QWORD *)&v56 + 1) = v37;
    *(_QWORD *)&v57 = v44;
    *((_QWORD *)&v57 + 1) = *(_QWORD *)v39;
    v58 = *(_OWORD *)&v39[8];
    v59 = *(_QWORD *)&v39[24];
    sub_233519354((uint64_t)&v50);
    v26 = v36;
    v25 = v37;
    v27 = v38;
    sub_233329310(v36);
    v28 = v47;
    swift_bridgeObjectRelease();
    v29 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v57;
    *(_OWORD *)(a2 + 96) = v56;
    *(_OWORD *)(a2 + 112) = v30;
    *(_OWORD *)(a2 + 128) = v58;
    *(_QWORD *)(a2 + 144) = v59;
    v31 = v53;
    *(_OWORD *)(a2 + 32) = v52;
    *(_OWORD *)(a2 + 48) = v31;
    v32 = v55;
    *(_OWORD *)(a2 + 64) = v54;
    *(_OWORD *)(a2 + 80) = v32;
    v33 = v51;
    *(_OWORD *)a2 = v50;
    *(_OWORD *)(a2 + 16) = v33;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    v73 = v49;
    v74 = v28;
    v75 = v48;
    v76 = v29;
    v77 = v45;
    v78 = v19;
    v79 = v26;
    *(_QWORD *)&v80 = v40;
    *((_QWORD *)&v80 + 1) = v35;
    *(_QWORD *)&v81 = v43;
    *((_QWORD *)&v81 + 1) = v42;
    *(_QWORD *)&v82 = v41;
    *((_QWORD *)&v82 + 1) = v27;
    *(_QWORD *)&v83 = v25;
    *((_QWORD *)&v83 + 1) = v44;
    v84 = *(_OWORD *)v39;
    v85 = *(_OWORD *)&v39[16];
  }
  return sub_23344C338((uint64_t)&v73);
}

uint64_t sub_233516FBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawOrderShippingRecipient.init(from:)(a1, a2);
}

uint64_t sub_233516FD0(_QWORD *a1)
{
  return RawOrderShippingRecipient.encode(to:)(a1);
}

uint64_t sub_233516FE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v4, &qword_256043808);
  return RawOrderShippingFulfillment.estimatedDeliveryWindow.setter((uint64_t)v4);
}

uint64_t RawOrderShippingFulfillment.estimatedDeliveryWindow.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v34);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Order.FulfillmentWindow(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v18, &qword_256043808);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v22(v18, 1, v6) == 1)
  {
    sub_233168608((uint64_t)v18, &qword_256043808);
    v23 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
  }
  else
  {
    sub_2331684BC((uint64_t)v18, (uint64_t)v12, type metadata accessor for Order.FulfillmentWindow);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580((uint64_t)v12, (uint64_t)v5, type metadata accessor for TimeWindow);
      v24 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v5, v24);
      sub_233168500((uint64_t)v5, type metadata accessor for TimeWindow);
    }
    else
    {
      v24 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v12, v24);
    }
    sub_233168500((uint64_t)v18, type metadata accessor for Order.FulfillmentWindow);
    sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 0, 1, v24);
  }
  v25 = v36;
  v26 = type metadata accessor for RawOrderShippingFulfillment();
  sub_233170B8C((uint64_t)v21, v25 + *(int *)(v26 + 52), (uint64_t *)&unk_254247DA0);
  sub_2331686A0(a1, (uint64_t)v16, &qword_256043808);
  if (v22(v16, 1, v6) == 1)
  {
    sub_233168608(a1, &qword_256043808);
    sub_233168608((uint64_t)v16, &qword_256043808);
    v27 = type metadata accessor for Duration();
    v28 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v35, 1, 1, v27);
  }
  else
  {
    sub_2331684BC((uint64_t)v16, (uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v28 = (uint64_t)v35;
    if (EnumCaseMultiPayload == 1)
    {
      sub_233168580((uint64_t)v10, (uint64_t)v5, type metadata accessor for TimeWindow);
      sub_2331684BC((uint64_t)&v5[*(int *)(v34 + 20)], v28, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
      sub_233168500((uint64_t)v5, type metadata accessor for TimeWindow);
      v30 = type metadata accessor for Duration();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 0, 1, v30);
    }
    else
    {
      v31 = type metadata accessor for Duration();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v28, 1, 1, v31);
      sub_233168500((uint64_t)v10, type metadata accessor for Order.FulfillmentWindow);
    }
    sub_233168608(a1, &qword_256043808);
    sub_233168500((uint64_t)v16, type metadata accessor for Order.FulfillmentWindow);
  }
  return sub_233170B8C(v28, v25 + *(int *)(v26 + 56), &qword_25604A478);
}

void (*RawOrderShippingFulfillment.estimatedDeliveryWindow.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  char *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256043808) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = (char *)malloc(v3);
  a1[2] = v4;
  RawOrderShippingFulfillment.estimatedDeliveryWindow.getter(v4);
  return sub_23351753C;
}

void sub_23351753C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_2331686A0(*(_QWORD *)(a1 + 16), (uint64_t)v2, &qword_256043808);
    RawOrderShippingFulfillment.estimatedDeliveryWindow.setter((uint64_t)v2);
    sub_233168608((uint64_t)v3, &qword_256043808);
  }
  else
  {
    RawOrderShippingFulfillment.estimatedDeliveryWindow.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

BOOL _s10FinanceKit25RawOrderShippingRecipientV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  _BOOL8 result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[13];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  v3 = a1[1];
  v107 = a1[2];
  v4 = a1[4];
  v113 = a1[3];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[11];
  v11 = a1[13];
  v100 = a1[14];
  v101 = a1[12];
  v12 = a1[15];
  v14 = a1[17];
  v13 = a1[18];
  v15 = a2[1];
  v102 = a1[16];
  v103 = a2[2];
  v16 = a2[3];
  v98 = a2[4];
  v17 = a2[6];
  v111 = a2[5];
  v19 = a2[7];
  v18 = a2[8];
  v21 = a2[9];
  v20 = a2[10];
  v23 = a2[11];
  v22 = a2[12];
  v24 = a2[13];
  v25 = a2[14];
  v97 = a2[15];
  v26 = a2[16];
  v27 = a2[17];
  v28 = a2[18];
  if (!v3)
  {
    v95 = a1[5];
    if (v15)
      return 0;
    goto LABEL_8;
  }
  if (!v15)
    return 0;
  v95 = a1[5];
  if (*a1 == *a2 && v3 == v15)
    goto LABEL_8;
  v87 = a2[12];
  v91 = a2[10];
  v62 = a1[8];
  v63 = a1[6];
  v60 = a2[11];
  v61 = a1[10];
  v76 = a2[6];
  v79 = a2[9];
  v29 = a1[18];
  v72 = a1[4];
  v30 = a2[13];
  v31 = a2[8];
  v80 = a1[15];
  v83 = a2[7];
  v32 = a2[14];
  v64 = a1[11];
  v68 = a2[16];
  v33 = a2[18];
  v34 = a1[7];
  v35 = a1[9];
  v36 = a1[13];
  v37 = sub_23361F224();
  v11 = v36;
  v10 = v64;
  v26 = v68;
  v8 = v35;
  v6 = v34;
  v28 = v33;
  v12 = v80;
  v19 = v83;
  v17 = v76;
  v25 = v32;
  v18 = v31;
  v22 = v87;
  v20 = v91;
  v23 = v60;
  v9 = v61;
  v24 = v30;
  v4 = v72;
  v13 = v29;
  v21 = v79;
  v7 = v62;
  v5 = v63;
  v38 = v37;
  result = 0;
  if ((v38 & 1) != 0)
  {
LABEL_8:
    if (v113)
    {
      if (!v16)
        return 0;
      if (v107 != v103 || v113 != v16)
      {
        v81 = v12;
        v88 = v22;
        v92 = v20;
        v69 = v13;
        v73 = v4;
        v40 = v24;
        v114 = v18;
        v74 = v27;
        v77 = v17;
        v84 = v19;
        v41 = v25;
        v42 = v26;
        v104 = v8;
        v108 = v28;
        v43 = v6;
        v44 = v10;
        v65 = v11;
        v45 = sub_23361F224();
        v11 = v65;
        v13 = v69;
        v10 = v44;
        v8 = v104;
        v28 = v108;
        v6 = v43;
        v26 = v42;
        v25 = v41;
        v4 = v73;
        v27 = v74;
        v19 = v84;
        v22 = v88;
        v17 = v77;
        v18 = v114;
        v20 = v92;
        v24 = v40;
        v12 = v81;
        v46 = v45;
        result = 0;
        if ((v46 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    if (v95)
    {
      if (!v111)
        return 0;
      if (v4 != v98 || v95 != v111)
      {
        v82 = v12;
        v89 = v22;
        v93 = v20;
        v66 = v11;
        v70 = v13;
        v47 = v24;
        v115 = v18;
        v75 = v27;
        v78 = v17;
        v85 = v19;
        v48 = v25;
        v49 = v26;
        v105 = v8;
        v109 = v28;
        v50 = v6;
        v51 = v10;
        v52 = sub_23361F224();
        v11 = v66;
        v13 = v70;
        v10 = v51;
        v8 = v105;
        v28 = v109;
        v6 = v50;
        v26 = v49;
        v25 = v48;
        v27 = v75;
        v17 = v78;
        v19 = v85;
        v22 = v89;
        v18 = v115;
        v20 = v93;
        v24 = v47;
        v12 = v82;
        v53 = v52;
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
    }
    else if (v111)
    {
      return 0;
    }
    if (v5 == 1)
    {
      if (v17 == 1)
        return 1;
      goto LABEL_27;
    }
    v118 = v5;
    v119 = v6;
    v120 = v7;
    v121 = v8;
    v122 = v9;
    v123 = v10;
    v124 = v101;
    v125 = v11;
    v126 = v100;
    v127 = v12;
    v128 = v102;
    v129 = v14;
    v130 = v13;
    v54 = v5;
    v55 = v7;
    v56 = v9;
    v57 = v13;
    if (v17 == 1)
    {
      v112 = v24;
      v116 = v18;
      v90 = v22;
      v94 = v20;
      v86 = v19;
      v99 = v25;
      v67 = v10;
      v71 = v26;
      v106 = v8;
      v110 = v28;
      v96 = v6;
      v58 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = v58;
      v10 = v67;
      v26 = v71;
      v19 = v86;
      v8 = v106;
      v28 = v110;
      v20 = v94;
      v6 = v96;
      v25 = v99;
      v24 = v112;
      v18 = v116;
      v22 = v90;
      v13 = v57;
      v9 = v56;
      v7 = v55;
      v5 = v54;
LABEL_27:
      v118 = v5;
      v119 = v6;
      v120 = v7;
      v121 = v8;
      v122 = v9;
      v123 = v10;
      v124 = v101;
      v125 = v11;
      v126 = v100;
      v127 = v12;
      v128 = v102;
      v129 = v14;
      v130 = v13;
      v131 = v17;
      v132 = v19;
      v133 = v18;
      v134 = v21;
      v135 = v20;
      v136 = v23;
      v137 = v22;
      v138 = v24;
      v139 = v25;
      v140 = v97;
      v141 = v26;
      v142 = v27;
      v143 = v28;
      sub_23332938C(v17);
      sub_2334C6164(&v118);
      return 0;
    }
    v117[0] = v17;
    v117[1] = v19;
    v117[2] = v18;
    v117[3] = v21;
    v117[4] = v20;
    v117[5] = v23;
    v117[6] = v22;
    v117[7] = v24;
    v117[8] = v25;
    v117[9] = v97;
    v117[10] = v26;
    v117[11] = v27;
    v117[12] = v28;
    v59 = _s10FinanceKit10RawAddressV2eeoiySbAC_ACtFZ_0((uint64_t)&v118, (uint64_t)v117);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v59;
  }
  return result;
}

BOOL _s10FinanceKit27RawOrderShippingFulfillmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _BOOL8 result;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(uint64_t, uint64_t, _QWORD *);
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  char v76;
  void (*v77)(char *, _QWORD *);
  int *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  BOOL v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  int *v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  _QWORD *v164;
  _OWORD v165[9];
  uint64_t v166;
  _OWORD v167[9];
  uint64_t v168;
  _OWORD v169[9];
  uint64_t v170;
  _OWORD v171[9];
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183[19];
  uint64_t v184;
  _QWORD v185[19];
  _QWORD v186[19];
  _BYTE v187[168];

  v4 = type metadata accessor for Duration();
  v152 = *(_QWORD *)(v4 - 8);
  v153 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v143 = (uint64_t)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560536F0);
  MEMORY[0x24BDAC7A8](v151);
  v154 = (uint64_t)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v146 = (uint64_t)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v156 = (uint64_t)&v137 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v157 = (uint64_t)&v137 - v12;
  v163 = sub_23361D634();
  v159 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v149 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v14 = MEMORY[0x24BDAC7A8](v158);
  v144 = (uint64_t)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v150 = (uint64_t)&v137 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v162 = (char *)&v137 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v140 = (uint64_t)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v141 = (uint64_t)&v137 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v142 = (uint64_t)&v137 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v145 = (uint64_t)&v137 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v147 = (uint64_t)&v137 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v137 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v155 = (uint64_t)&v137 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v160 = (char *)&v137 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v161 = (char *)&v137 - v36;
  v164 = (_QWORD *)sub_23361D340();
  v37 = *(v164 - 1);
  MEMORY[0x24BDAC7A8](v164);
  v39 = (char *)&v137 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v137 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v137 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v137 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v137 - v50;
  if ((sub_23322B4CC(*(_QWORD *)a1, *a2) & 1) == 0)
    return 0;
  v52 = *(_QWORD *)(a1 + 16);
  v53 = a2[2];
  if (!v52)
  {
    if (v53)
      return 0;
    goto LABEL_9;
  }
  if (!v53)
    return 0;
  if (*(_QWORD *)(a1 + 8) == a2[1] && v52 == v53 || (v54 = sub_23361F224(), result = 0, (v54 & 1) != 0))
  {
LABEL_9:
    v56 = *(_QWORD *)(a1 + 32);
    v57 = a2[4];
    if (v56)
    {
      if (!v57)
        return 0;
      if (*(_QWORD *)(a1 + 24) != a2[3] || v56 != v57)
      {
        v58 = sub_23361F224();
        result = 0;
        if ((v58 & 1) == 0)
          return result;
      }
    }
    else if (v57)
    {
      return 0;
    }
    sub_233226984(*(_BYTE *)(a1 + 40));
    if ((v59 & 1) == 0)
      return 0;
    v60 = *(_QWORD *)(a1 + 56);
    v61 = a2[7];
    if (v60)
    {
      if (!v61)
        return 0;
      if (*(_QWORD *)(a1 + 48) != a2[6] || v60 != v61)
      {
        v62 = sub_23361F224();
        result = 0;
        if ((v62 & 1) == 0)
          return result;
      }
    }
    else if (v61)
    {
      return 0;
    }
    v63 = *(_QWORD *)(a1 + 72);
    v64 = a2[9];
    if (v63)
    {
      if (!v64)
        return 0;
      if (*(_QWORD *)(a1 + 64) != a2[8] || v63 != v64)
      {
        v65 = sub_23361F224();
        result = 0;
        if ((v65 & 1) == 0)
          return result;
      }
    }
    else if (v64)
    {
      return 0;
    }
    v66 = *(_QWORD *)(a1 + 88);
    v67 = a2[11];
    if (v66)
    {
      if (!v67)
        return 0;
      if (*(_QWORD *)(a1 + 80) != a2[10] || v66 != v67)
      {
        v68 = sub_23361F224();
        result = 0;
        if ((v68 & 1) == 0)
          return result;
      }
    }
    else if (v67)
    {
      return 0;
    }
    v139 = a2;
    v69 = type metadata accessor for RawOrderShippingFulfillment();
    v70 = *(int *)(v69 + 44);
    v138 = a1;
    sub_2331686A0(a1 + v70, (uint64_t)v51, &qword_254248700);
    v137 = (int *)v69;
    sub_2331686A0((uint64_t)v139 + *(int *)(v69 + 44), (uint64_t)v49, &qword_254248700);
    v71 = (uint64_t)&v42[*(int *)(v40 + 48)];
    sub_2331686A0((uint64_t)v51, (uint64_t)v42, &qword_254248700);
    sub_2331686A0((uint64_t)v49, v71, &qword_254248700);
    v72 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v37 + 48);
    v73 = v164;
    if (v72((uint64_t)v42, 1, v164) == 1)
    {
      sub_233168608((uint64_t)v49, &qword_254248700);
      sub_233168608((uint64_t)v51, &qword_254248700);
      if (v72(v71, 1, v73) == 1)
      {
        sub_233168608((uint64_t)v42, &qword_254248700);
        goto LABEL_47;
      }
    }
    else
    {
      sub_2331686A0((uint64_t)v42, (uint64_t)v46, &qword_254248700);
      if (v72(v71, 1, v73) != 1)
      {
        (*(void (**)(char *, uint64_t, _QWORD *))(v37 + 32))(v39, v71, v73);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v76 = sub_23361E108();
        v77 = *(void (**)(char *, _QWORD *))(v37 + 8);
        v77(v39, v73);
        sub_233168608((uint64_t)v49, &qword_254248700);
        sub_233168608((uint64_t)v51, &qword_254248700);
        v77(v46, v73);
        sub_233168608((uint64_t)v42, &qword_254248700);
        if ((v76 & 1) == 0)
          return 0;
LABEL_47:
        v78 = v137;
        sub_233371950(v138 + v137[12], (uint64_t)v185);
        sub_233371950((uint64_t)v139 + v78[12], (uint64_t)v186);
        sub_233371950((uint64_t)v185, (uint64_t)v187);
        if (sub_23327036C((uint64_t)v187) == 1)
        {
          sub_233371950((uint64_t)v186, (uint64_t)v183);
          v79 = sub_23327036C((uint64_t)v183);
          v42 = v162;
          v80 = v163;
          v82 = (uint64_t)v160;
          v81 = (uint64_t)v161;
          if (v79 == 1)
          {
LABEL_54:
            sub_2331686A0(v138 + v78[13], v81, (uint64_t *)&unk_254247DA0);
            sub_2331686A0((uint64_t)v139 + v78[13], v82, (uint64_t *)&unk_254247DA0);
            v85 = (uint64_t)&v42[*(int *)(v158 + 48)];
            sub_2331686A0(v81, (uint64_t)v42, (uint64_t *)&unk_254247DA0);
            sub_2331686A0(v82, v85, (uint64_t *)&unk_254247DA0);
            v86 = *(_QWORD **)(v159 + 48);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v86)(v42, 1, v80) == 1)
            {
              sub_233168608(v82, (uint64_t *)&unk_254247DA0);
              sub_233168608(v81, (uint64_t *)&unk_254247DA0);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(v85, 1, v80) == 1)
              {
                v164 = v86;
                sub_233168608((uint64_t)v42, (uint64_t *)&unk_254247DA0);
                goto LABEL_61;
              }
            }
            else
            {
              v87 = v155;
              sub_2331686A0((uint64_t)v42, v155, (uint64_t *)&unk_254247DA0);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(v85, 1, v80) != 1)
              {
                v164 = v86;
                v88 = v159;
                v89 = v149;
                (*(void (**)(char *, uint64_t, uint64_t))(v159 + 32))(v149, v85, v80);
                sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                LODWORD(v162) = sub_23361E108();
                v90 = v81;
                v91 = *(void (**)(char *, uint64_t))(v88 + 8);
                v91(v89, v80);
                sub_233168608(v82, (uint64_t *)&unk_254247DA0);
                sub_233168608(v90, (uint64_t *)&unk_254247DA0);
                v91((char *)v87, v80);
                sub_233168608((uint64_t)v42, (uint64_t *)&unk_254247DA0);
                if ((v162 & 1) == 0)
                  return 0;
LABEL_61:
                v92 = v157;
                sub_2331686A0(v138 + v78[14], v157, &qword_25604A478);
                v93 = v156;
                sub_2331686A0((uint64_t)v139 + v78[14], v156, &qword_25604A478);
                v94 = v154;
                v95 = v154 + *(int *)(v151 + 48);
                sub_2331686A0(v92, v154, &qword_25604A478);
                sub_2331686A0(v93, v95, &qword_25604A478);
                v96 = v153;
                v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48);
                if (v97(v94, 1, v153) == 1)
                {
                  sub_233168608(v156, &qword_25604A478);
                  sub_233168608(v157, &qword_25604A478);
                  if (v97(v95, 1, v96) == 1)
                  {
                    sub_233168608(v94, &qword_25604A478);
                    goto LABEL_68;
                  }
                }
                else
                {
                  v98 = v146;
                  sub_2331686A0(v94, v146, &qword_25604A478);
                  if (v97(v95, 1, v96) != 1)
                  {
                    v99 = v143;
                    sub_233168580(v95, v143, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
                    v100 = MEMORY[0x234930FF0](v98, v99);
                    sub_233168500(v99, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
                    sub_233168608(v156, &qword_25604A478);
                    sub_233168608(v157, &qword_25604A478);
                    sub_233168500(v98, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
                    sub_233168608(v94, &qword_25604A478);
                    if ((v100 & 1) == 0)
                      return 0;
LABEL_68:
                    v101 = v137;
                    v102 = v148;
                    sub_2331686A0(v138 + v137[15], v148, (uint64_t *)&unk_254247DA0);
                    v103 = v147;
                    sub_2331686A0((uint64_t)v139 + v101[15], v147, (uint64_t *)&unk_254247DA0);
                    v104 = v150;
                    v105 = v150 + *(int *)(v158 + 48);
                    sub_2331686A0(v102, v150, (uint64_t *)&unk_254247DA0);
                    sub_2331686A0(v103, v105, (uint64_t *)&unk_254247DA0);
                    v106 = v104;
                    v107 = v163;
                    v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v164;
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v164)(v106, 1, v163) == 1)
                    {
                      sub_233168608(v147, (uint64_t *)&unk_254247DA0);
                      sub_233168608(v148, (uint64_t *)&unk_254247DA0);
                      v109 = v108;
                      if (v108(v105, 1, v107) == 1)
                      {
                        sub_233168608(v150, (uint64_t *)&unk_254247DA0);
LABEL_75:
                        v116 = v137[16];
                        v117 = (_QWORD *)(v138 + v116);
                        v118 = *(_QWORD *)(v138 + v116 + 8);
                        v119 = (uint64_t *)((char *)v139 + v116);
                        if ((*v117 != *v119 || v118 != v119[1]) && (sub_23361F224() & 1) == 0)
                          return 0;
                        v120 = v137;
                        v121 = v142;
                        sub_2331686A0(v138 + v137[17], v142, (uint64_t *)&unk_254247DA0);
                        v122 = v141;
                        sub_2331686A0((uint64_t)v139 + v120[17], v141, (uint64_t *)&unk_254247DA0);
                        v123 = v144;
                        v124 = v144 + *(int *)(v158 + 48);
                        sub_2331686A0(v121, v144, (uint64_t *)&unk_254247DA0);
                        sub_2331686A0(v122, v124, (uint64_t *)&unk_254247DA0);
                        if (v109(v123, 1, v163) == 1)
                        {
                          sub_233168608(v141, (uint64_t *)&unk_254247DA0);
                          sub_233168608(v142, (uint64_t *)&unk_254247DA0);
                          if (v109(v124, 1, v163) == 1)
                          {
                            sub_233168608(v144, (uint64_t *)&unk_254247DA0);
LABEL_85:
                            v131 = v137[18];
                            v132 = *(unsigned __int8 *)(v138 + v131);
                            v133 = *((unsigned __int8 *)v139 + v131);
                            if (v132)
                              v134 = 0x79726576696C6564;
                            else
                              v134 = 0x676E697070696873;
                            if (v133)
                              v135 = 0x79726576696C6564;
                            else
                              v135 = 0x676E697070696873;
                            if (v134 == v135)
                            {
                              swift_bridgeObjectRelease_n();
                              return 1;
                            }
                            v136 = sub_23361F224();
                            swift_bridgeObjectRelease_n();
                            return (v136 & 1) != 0;
                          }
                        }
                        else
                        {
                          sub_2331686A0(v144, v140, (uint64_t *)&unk_254247DA0);
                          if (v109(v124, 1, v163) != 1)
                          {
                            v125 = v159;
                            v126 = v149;
                            v127 = v163;
                            (*(void (**)(char *, uint64_t, uint64_t))(v159 + 32))(v149, v124, v163);
                            sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                            v128 = v140;
                            v129 = sub_23361E108();
                            v130 = *(void (**)(char *, uint64_t))(v125 + 8);
                            v130(v126, v127);
                            sub_233168608(v141, (uint64_t *)&unk_254247DA0);
                            sub_233168608(v142, (uint64_t *)&unk_254247DA0);
                            v130((char *)v128, v127);
                            sub_233168608(v144, (uint64_t *)&unk_254247DA0);
                            if ((v129 & 1) == 0)
                              return 0;
                            goto LABEL_85;
                          }
                          sub_233168608(v141, (uint64_t *)&unk_254247DA0);
                          sub_233168608(v142, (uint64_t *)&unk_254247DA0);
                          (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v140, v163);
                        }
                        v74 = &qword_256042DA0;
                        v75 = v144;
LABEL_45:
                        sub_233168608(v75, v74);
                        return 0;
                      }
                    }
                    else
                    {
                      sub_2331686A0(v150, v145, (uint64_t *)&unk_254247DA0);
                      v109 = v108;
                      if (v108(v105, 1, v107) != 1)
                      {
                        v110 = v159;
                        v111 = v149;
                        v112 = v163;
                        (*(void (**)(char *, uint64_t, uint64_t))(v159 + 32))(v149, v105, v163);
                        sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                        v113 = v145;
                        v114 = sub_23361E108();
                        v115 = *(void (**)(char *, uint64_t))(v110 + 8);
                        v115(v111, v112);
                        sub_233168608(v147, (uint64_t *)&unk_254247DA0);
                        sub_233168608(v148, (uint64_t *)&unk_254247DA0);
                        v115((char *)v113, v112);
                        sub_233168608(v150, (uint64_t *)&unk_254247DA0);
                        if ((v114 & 1) == 0)
                          return 0;
                        goto LABEL_75;
                      }
                      sub_233168608(v147, (uint64_t *)&unk_254247DA0);
                      sub_233168608(v148, (uint64_t *)&unk_254247DA0);
                      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v145, v163);
                    }
                    v74 = &qword_256042DA0;
                    v75 = v150;
                    goto LABEL_45;
                  }
                  sub_233168608(v156, &qword_25604A478);
                  sub_233168608(v157, &qword_25604A478);
                  sub_233168500(v98, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
                }
                v74 = &qword_2560536F0;
                v75 = v94;
                goto LABEL_45;
              }
              sub_233168608(v82, (uint64_t *)&unk_254247DA0);
              sub_233168608(v81, (uint64_t *)&unk_254247DA0);
              (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v87, v80);
            }
            v74 = &qword_256042DA0;
LABEL_44:
            v75 = (uint64_t)v42;
            goto LABEL_45;
          }
        }
        else
        {
          sub_233371950((uint64_t)v185, (uint64_t)&v173);
          sub_233371950((uint64_t)v186, (uint64_t)v183);
          v83 = sub_23327036C((uint64_t)v183);
          v42 = v162;
          v80 = v163;
          v82 = (uint64_t)v160;
          v81 = (uint64_t)v161;
          if (v83 != 1)
          {
            sub_233371950((uint64_t)v186, (uint64_t)v167);
            v165[6] = v167[6];
            v165[7] = v167[7];
            v165[8] = v167[8];
            v166 = v168;
            v165[2] = v167[2];
            v165[3] = v167[3];
            v165[4] = v167[4];
            v165[5] = v167[5];
            v165[0] = v167[0];
            v165[1] = v167[1];
            sub_233371950((uint64_t)v185, (uint64_t)v169);
            sub_2335191D0(v185, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233519234);
            sub_233519354((uint64_t)v169);
            v84 = _s10FinanceKit25RawOrderShippingRecipientV2eeoiySbAC_ACtFZ_0(&v173, v165);
            v171[6] = v179;
            v171[7] = v180;
            v171[8] = v181;
            v172 = v182;
            v171[2] = v175;
            v171[3] = v176;
            v171[4] = v177;
            v171[5] = v178;
            v171[0] = v173;
            v171[1] = v174;
            sub_23344C338((uint64_t)v171);
            sub_2335191D0(v185, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2333719F8);
            if (!v84)
              return 0;
            goto LABEL_54;
          }
          v169[6] = v179;
          v169[7] = v180;
          v169[8] = v181;
          v170 = v182;
          v169[2] = v175;
          v169[3] = v176;
          v169[4] = v177;
          v169[5] = v178;
          v169[0] = v173;
          v169[1] = v174;
          sub_233371950((uint64_t)v185, (uint64_t)v171);
          sub_233519354((uint64_t)v171);
          sub_233519354((uint64_t)v171);
          sub_23344C338((uint64_t)v169);
        }
        sub_233371950((uint64_t)v185, (uint64_t)v183);
        sub_233371950((uint64_t)v186, (uint64_t)&v184);
        sub_2335191D0(v186, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233519234);
        sub_23351C934(v183);
        return 0;
      }
      sub_233168608((uint64_t)v49, &qword_254248700);
      sub_233168608((uint64_t)v51, &qword_254248700);
      (*(void (**)(char *, _QWORD *))(v37 + 8))(v46, v73);
    }
    v74 = &qword_256045948;
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_233518C64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v39 = a1;
  v3 = sub_23361D748();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D868();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Duration();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_23361D634();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a2, (uint64_t)v18, (uint64_t *)&unk_254247DA0);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v22(v18, 1, v19) == 1)
  {
    v23 = (uint64_t *)&unk_254247DA0;
    v24 = (uint64_t)v18;
    return sub_233168608(v24, v23);
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v40, v18, v19);
  sub_2331686A0(v39, (uint64_t)v9, &qword_25604A478);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v40, v19);
    v23 = &qword_25604A478;
    v24 = (uint64_t)v9;
    return sub_233168608(v24, v23);
  }
  v26 = v36;
  sub_233168580((uint64_t)v9, v36, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  v28 = v32;
  v27 = v33;
  v29 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x24BDCEF50], v34);
  v30 = v35;
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  sub_23361D808();
  LODWORD(v29) = v22(v16, 1, v19);
  sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
  if ((_DWORD)v29 == 1)
  {
    sub_23351CA3C();
    swift_allocError();
    swift_willThrow();
  }
  sub_233168500(v26, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v40, v19);
}

unint64_t sub_233518FF4()
{
  unint64_t result;

  result = qword_256053F78;
  if (!qword_256053F78)
  {
    result = MEMORY[0x234934494](&unk_233657EB8, &type metadata for RawOrderShippingFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053F78);
  }
  return result;
}

unint64_t sub_233519038()
{
  unint64_t result;

  result = qword_256053F88;
  if (!qword_256053F88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingStatus, &type metadata for RawOrderShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256053F88);
  }
  return result;
}

unint64_t sub_23351907C()
{
  unint64_t result;

  result = qword_256053F90;
  if (!qword_256053F90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingRecipient, &type metadata for RawOrderShippingRecipient);
    atomic_store(result, (unint64_t *)&qword_256053F90);
  }
  return result;
}

unint64_t sub_2335190C0()
{
  unint64_t result;

  result = qword_256053F98;
  if (!qword_256053F98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingType, &type metadata for RawOrderShippingType);
    atomic_store(result, (unint64_t *)&qword_256053F98);
  }
  return result;
}

unint64_t sub_233519104()
{
  unint64_t result;

  result = qword_256053FA8;
  if (!qword_256053FA8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingStatus, &type metadata for RawOrderShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256053FA8);
  }
  return result;
}

unint64_t sub_233519148()
{
  unint64_t result;

  result = qword_256053FB0;
  if (!qword_256053FB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingRecipient, &type metadata for RawOrderShippingRecipient);
    atomic_store(result, (unint64_t *)&qword_256053FB0);
  }
  return result;
}

unint64_t sub_23351918C()
{
  unint64_t result;

  result = qword_256053FB8;
  if (!qword_256053FB8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingType, &type metadata for RawOrderShippingType);
    atomic_store(result, (unint64_t *)&qword_256053FB8);
  }
  return result;
}

_QWORD *sub_2335191D0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18]);
  return a1;
}

uint64_t sub_233519234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_23332938C(a7);
  }
  return result;
}

unint64_t sub_233519310()
{
  unint64_t result;

  result = qword_256053FC8;
  if (!qword_256053FC8)
  {
    result = MEMORY[0x234934494](&unk_233657E68, &type metadata for RawOrderShippingRecipient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256053FC8);
  }
  return result;
}

uint64_t sub_233519354(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23332938C(v3);
  return a1;
}

unint64_t sub_233519414()
{
  unint64_t result;

  result = qword_256053FD8;
  if (!qword_256053FD8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingStatus, &type metadata for RawOrderShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256053FD8);
  }
  return result;
}

uint64_t sub_233519458()
{
  return sub_2331B1A14(&qword_256053FE0, &qword_256053FE8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_233519488()
{
  unint64_t result;

  result = qword_256053FF0;
  if (!qword_256053FF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingType, &type metadata for RawOrderShippingType);
    atomic_store(result, (unint64_t *)&qword_256053FF0);
  }
  return result;
}

uint64_t sub_2335194CC()
{
  return sub_2331B1A14(&qword_256053FF8, &qword_256054000, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2335194FC()
{
  unint64_t result;

  result = qword_256054008;
  if (!qword_256054008)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingFulfillmentError, &type metadata for RawOrderShippingFulfillmentError);
    atomic_store(result, (unint64_t *)&qword_256054008);
  }
  return result;
}

uint64_t sub_233519540@<X0>(char *a1@<X8>)
{
  return RawOrderShippingFulfillment.estimatedDeliveryWindow.getter(a1);
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2335195B0 + 4 * byte_233657708[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2335195E4 + 4 * byte_233657703[v4]))();
}

uint64_t sub_2335195E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335195EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335195F4);
  return result;
}

uint64_t sub_233519600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233519608);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23351960C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233519614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderShippingStatus()
{
  return &type metadata for RawOrderShippingStatus;
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23351967C + 4 * byte_233657712[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2335196B0 + 4 * byte_23365770D[v4]))();
}

uint64_t sub_2335196B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335196B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335196C0);
  return result;
}

uint64_t sub_2335196CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335196D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2335196D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335196E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderShippingType()
{
  return &type metadata for RawOrderShippingType;
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingFulfillmentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23351973C + 4 * byte_233657717[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23351975C + 4 * byte_23365771C[v4]))();
}

_BYTE *sub_23351973C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23351975C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233519764(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23351976C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233519774(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23351977C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderShippingFulfillmentError()
{
  return &type metadata for RawOrderShippingFulfillmentError;
}

uint64_t initializeBufferWithCopyOfBuffer for RawOrderShippingFulfillment(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  void *__dst;
  unsigned int (*v70)(const void *, uint64_t, uint64_t);
  char *v71;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v10;
    v11 = a2[11];
    v12 = a3[11];
    __dst = (void *)(a1 + v12);
    v71 = (char *)a2 + v12;
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v11;
    v13 = sub_23361D340();
    v14 = *(_QWORD *)(v13 - 8);
    v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v70(v71, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v71, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v16 = a3[12];
    v17 = v6 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    if (v19 == 1)
    {
      v20 = *(_OWORD *)(v18 + 112);
      *(_OWORD *)(v17 + 96) = *(_OWORD *)(v18 + 96);
      *(_OWORD *)(v17 + 112) = v20;
      *(_OWORD *)(v17 + 128) = *(_OWORD *)(v18 + 128);
      *(_QWORD *)(v17 + 144) = *(_QWORD *)(v18 + 144);
      v21 = *(_OWORD *)(v18 + 48);
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
      *(_OWORD *)(v17 + 48) = v21;
      v22 = *(_OWORD *)(v18 + 80);
      *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
      *(_OWORD *)(v17 + 80) = v22;
      v23 = *(_OWORD *)(v18 + 16);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *(_OWORD *)(v17 + 16) = v23;
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      v24 = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
      *(_QWORD *)(v17 + 24) = v24;
      v25 = *(_QWORD *)(v18 + 40);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 40) = v25;
      v26 = *(_QWORD *)(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26 == 1)
      {
        v27 = *(_OWORD *)(v18 + 128);
        *(_OWORD *)(v17 + 112) = *(_OWORD *)(v18 + 112);
        *(_OWORD *)(v17 + 128) = v27;
        *(_QWORD *)(v17 + 144) = *(_QWORD *)(v18 + 144);
        v28 = *(_OWORD *)(v18 + 64);
        *(_OWORD *)(v17 + 48) = *(_OWORD *)(v18 + 48);
        *(_OWORD *)(v17 + 64) = v28;
        v29 = *(_OWORD *)(v18 + 96);
        *(_OWORD *)(v17 + 80) = *(_OWORD *)(v18 + 80);
        *(_OWORD *)(v17 + 96) = v29;
      }
      else
      {
        v30 = *(_QWORD *)(v18 + 56);
        v31 = *(_QWORD *)(v18 + 64);
        *(_QWORD *)(v17 + 48) = v26;
        *(_QWORD *)(v17 + 56) = v30;
        v32 = *(_QWORD *)(v18 + 72);
        v33 = *(_QWORD *)(v18 + 80);
        *(_QWORD *)(v17 + 64) = v31;
        *(_QWORD *)(v17 + 72) = v32;
        v34 = *(_QWORD *)(v18 + 88);
        v35 = *(_QWORD *)(v18 + 96);
        *(_QWORD *)(v17 + 80) = v33;
        *(_QWORD *)(v17 + 88) = v34;
        v36 = *(_QWORD *)(v18 + 104);
        v37 = *(_QWORD *)(v18 + 112);
        *(_QWORD *)(v17 + 96) = v35;
        *(_QWORD *)(v17 + 104) = v36;
        v38 = *(_QWORD *)(v18 + 120);
        v39 = *(_QWORD *)(v18 + 128);
        *(_QWORD *)(v17 + 112) = v37;
        *(_QWORD *)(v17 + 120) = v38;
        v40 = *(_QWORD *)(v18 + 136);
        v41 = *(_QWORD *)(v18 + 144);
        *(_QWORD *)(v17 + 128) = v39;
        *(_QWORD *)(v17 + 136) = v40;
        *(_QWORD *)(v17 + 144) = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v42 = a3[13];
    v43 = (void *)(v6 + v42);
    v44 = (char *)a2 + v42;
    v45 = sub_23361D634();
    v46 = *(_QWORD *)(v45 - 8);
    v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48);
    if (v47(v44, 1, v45))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v49 = a3[14];
    v50 = (void *)(v6 + v49);
    v51 = (char *)a2 + v49;
    v52 = type metadata accessor for Duration();
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = sub_23361CD40();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v50, v51, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v56 = a3[15];
    v57 = (void *)(v6 + v56);
    v58 = (char *)a2 + v56;
    if (v47((char *)a2 + v56, 1, v45))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v57, v58, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v57, 0, 1, v45);
    }
    v60 = a3[16];
    v61 = a3[17];
    v62 = (_QWORD *)(v6 + v60);
    v63 = (uint64_t *)((char *)a2 + v60);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = (void *)(v6 + v61);
    v66 = (char *)a2 + v61;
    swift_bridgeObjectRetain();
    if (v47(v66, 1, v45))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v65, v66, v45);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v65, 0, 1, v45);
    }
    *(_BYTE *)(v6 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  }
  return v6;
}

uint64_t destroy for RawOrderShippingFulfillment(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[11];
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[12];
  if (*(_QWORD *)(v7 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 48) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v8 = a1 + a2[13];
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v12 = a1 + a2[14];
  v13 = type metadata accessor for Duration();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_23361CD40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  v15 = a1 + a2[15];
  if (!v11(v15, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v9);
  swift_bridgeObjectRelease();
  v16 = a1 + a2[17];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v16, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v16, v9);
  return result;
}

uint64_t initializeWithCopy for RawOrderShippingFulfillment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(const void *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  unsigned int (*v67)(const void *, uint64_t, uint64_t);
  const void *v68;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  v10 = a3[11];
  __dst = (void *)(a1 + v10);
  v68 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67(v68, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v68, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v14 = a3[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  if (v17 == 1)
  {
    v18 = *(_OWORD *)(v16 + 112);
    *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
    *(_OWORD *)(v15 + 112) = v18;
    *(_OWORD *)(v15 + 128) = *(_OWORD *)(v16 + 128);
    *(_QWORD *)(v15 + 144) = *(_QWORD *)(v16 + 144);
    v19 = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    *(_OWORD *)(v15 + 48) = v19;
    v20 = *(_OWORD *)(v16 + 80);
    *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 80) = v20;
    v21 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v21;
  }
  else
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
    v22 = *(_QWORD *)(v16 + 24);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = v22;
    v23 = *(_QWORD *)(v16 + 40);
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = v23;
    v24 = *(_QWORD *)(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24 == 1)
    {
      v25 = *(_OWORD *)(v16 + 128);
      *(_OWORD *)(v15 + 112) = *(_OWORD *)(v16 + 112);
      *(_OWORD *)(v15 + 128) = v25;
      *(_QWORD *)(v15 + 144) = *(_QWORD *)(v16 + 144);
      v26 = *(_OWORD *)(v16 + 64);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v26;
      v27 = *(_OWORD *)(v16 + 96);
      *(_OWORD *)(v15 + 80) = *(_OWORD *)(v16 + 80);
      *(_OWORD *)(v15 + 96) = v27;
    }
    else
    {
      v28 = *(_QWORD *)(v16 + 56);
      v29 = *(_QWORD *)(v16 + 64);
      *(_QWORD *)(v15 + 48) = v24;
      *(_QWORD *)(v15 + 56) = v28;
      v30 = *(_QWORD *)(v16 + 72);
      v31 = *(_QWORD *)(v16 + 80);
      *(_QWORD *)(v15 + 64) = v29;
      *(_QWORD *)(v15 + 72) = v30;
      v32 = *(_QWORD *)(v16 + 88);
      v33 = *(_QWORD *)(v16 + 96);
      *(_QWORD *)(v15 + 80) = v31;
      *(_QWORD *)(v15 + 88) = v32;
      v34 = *(_QWORD *)(v16 + 104);
      v35 = *(_QWORD *)(v16 + 112);
      *(_QWORD *)(v15 + 96) = v33;
      *(_QWORD *)(v15 + 104) = v34;
      v36 = *(_QWORD *)(v16 + 120);
      v37 = *(_QWORD *)(v16 + 128);
      *(_QWORD *)(v15 + 112) = v35;
      *(_QWORD *)(v15 + 120) = v36;
      v38 = *(_QWORD *)(v16 + 136);
      v39 = *(_QWORD *)(v16 + 144);
      *(_QWORD *)(v15 + 128) = v37;
      *(_QWORD *)(v15 + 136) = v38;
      *(_QWORD *)(v15 + 144) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v40 = a3[13];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = sub_23361D634();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48);
  if (v45(v42, 1, v43))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v47 = a3[14];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  v50 = type metadata accessor for Duration();
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v53 = sub_23361CD40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v48, v49, v53);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  v54 = a3[15];
  v55 = (void *)(a1 + v54);
  v56 = (const void *)(a2 + v54);
  if (v45((const void *)(a2 + v54), 1, v43))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v55, v56, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v55, 0, 1, v43);
  }
  v58 = a3[16];
  v59 = a3[17];
  v60 = (_QWORD *)(a1 + v58);
  v61 = (_QWORD *)(a2 + v58);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = (void *)(a1 + v59);
  v64 = (const void *)(a2 + v59);
  swift_bridgeObjectRetain();
  if (v45(v64, 1, v43))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v63, v64, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v63, 0, 1, v43);
  }
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  return a1;
}

uint64_t assignWithCopy for RawOrderShippingFulfillment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 *v40;
  uint64_t v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  void *v82;
  void *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  int *v90;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[11];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[12];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 8);
  v90 = a3;
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v20;
      v21 = *(_OWORD *)(v17 + 32);
      v22 = *(_OWORD *)(v17 + 48);
      v23 = *(_OWORD *)(v17 + 80);
      *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
      *(_OWORD *)(v16 + 80) = v23;
      *(_OWORD *)(v16 + 32) = v21;
      *(_OWORD *)(v16 + 48) = v22;
      v24 = *(_OWORD *)(v17 + 96);
      v25 = *(_OWORD *)(v17 + 112);
      v26 = *(_OWORD *)(v17 + 128);
      *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
      *(_OWORD *)(v16 + 112) = v25;
      *(_OWORD *)(v16 + 128) = v26;
      *(_OWORD *)(v16 + 96) = v24;
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
      *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
      *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
      *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
      v34 = *(_QWORD *)(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34 == 1)
      {
        v35 = *(_OWORD *)(v17 + 48);
        v36 = *(_OWORD *)(v17 + 80);
        *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
        *(_OWORD *)(v16 + 80) = v36;
        *(_OWORD *)(v16 + 48) = v35;
        v37 = *(_OWORD *)(v17 + 96);
        v38 = *(_OWORD *)(v17 + 112);
        v39 = *(_OWORD *)(v17 + 128);
        *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
        *(_OWORD *)(v16 + 112) = v38;
        *(_OWORD *)(v16 + 128) = v39;
        *(_OWORD *)(v16 + 96) = v37;
      }
      else
      {
        *(_QWORD *)(v16 + 48) = v34;
        *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
        *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
        *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
        *(_QWORD *)(v16 + 80) = *(_QWORD *)(v17 + 80);
        *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
        *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
        *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
        *(_QWORD *)(v16 + 112) = *(_QWORD *)(v17 + 112);
        *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
        *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
        *(_QWORD *)(v16 + 136) = *(_QWORD *)(v17 + 136);
        *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
  }
  else if (v19 == 1)
  {
    sub_23351AC1C(v16);
    v27 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v27;
    v28 = *(_OWORD *)(v17 + 80);
    v30 = *(_OWORD *)(v17 + 32);
    v29 = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 80) = v28;
    *(_OWORD *)(v16 + 32) = v30;
    *(_OWORD *)(v16 + 48) = v29;
    v32 = *(_OWORD *)(v17 + 112);
    v31 = *(_OWORD *)(v17 + 128);
    v33 = *(_OWORD *)(v17 + 96);
    *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
    *(_OWORD *)(v16 + 112) = v32;
    *(_OWORD *)(v16 + 128) = v31;
    *(_OWORD *)(v16 + 96) = v33;
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v16 + 24) = *(_QWORD *)(v17 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
    *(_QWORD *)(v16 + 40) = *(_QWORD *)(v17 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v40 = (__int128 *)(v16 + 48);
    v42 = (__int128 *)(v17 + 48);
    v41 = *(_QWORD *)(v17 + 48);
    if (*(_QWORD *)(v16 + 48) == 1)
    {
      if (v41 == 1)
      {
        v43 = *v42;
        v44 = *(_OWORD *)(v17 + 80);
        *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
        *(_OWORD *)(v16 + 80) = v44;
        *v40 = v43;
        v45 = *(_OWORD *)(v17 + 96);
        v46 = *(_OWORD *)(v17 + 112);
        v47 = *(_OWORD *)(v17 + 128);
        *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
        *(_OWORD *)(v16 + 112) = v46;
        *(_OWORD *)(v16 + 128) = v47;
        *(_OWORD *)(v16 + 96) = v45;
      }
      else
      {
        *(_QWORD *)(v16 + 48) = v41;
        *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
        *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
        *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
        *(_QWORD *)(v16 + 80) = *(_QWORD *)(v17 + 80);
        *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
        *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
        *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
        *(_QWORD *)(v16 + 112) = *(_QWORD *)(v17 + 112);
        *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
        *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
        *(_QWORD *)(v16 + 136) = *(_QWORD *)(v17 + 136);
        *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v41 == 1)
    {
      sub_233326AE4(v16 + 48);
      v49 = *(_OWORD *)(v17 + 64);
      v48 = *(_OWORD *)(v17 + 80);
      *v40 = *v42;
      *(_OWORD *)(v16 + 64) = v49;
      *(_OWORD *)(v16 + 80) = v48;
      v51 = *(_OWORD *)(v17 + 112);
      v50 = *(_OWORD *)(v17 + 128);
      v52 = *(_OWORD *)(v17 + 96);
      *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
      *(_OWORD *)(v16 + 112) = v51;
      *(_OWORD *)(v16 + 128) = v50;
      *(_OWORD *)(v16 + 96) = v52;
    }
    else
    {
      *(_QWORD *)(v16 + 48) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
      *(_QWORD *)(v16 + 64) = *(_QWORD *)(v17 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
      *(_QWORD *)(v16 + 80) = *(_QWORD *)(v17 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
      *(_QWORD *)(v16 + 96) = *(_QWORD *)(v17 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
      *(_QWORD *)(v16 + 112) = *(_QWORD *)(v17 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
      *(_QWORD *)(v16 + 128) = *(_QWORD *)(v17 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 136) = *(_QWORD *)(v17 + 136);
      *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  v53 = a3[13];
  v54 = (void *)(a1 + v53);
  v55 = (void *)(a2 + v53);
  v56 = sub_23361D634();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  v89 = v57;
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, void *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v60)
  {
    (*(void (**)(void *, uint64_t))(v57 + 8))(v54, v56);
LABEL_28:
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(void *, void *, uint64_t))(v57 + 24))(v54, v55, v56);
LABEL_29:
  v62 = a3[14];
  v63 = (void *)(a1 + v62);
  v64 = (void *)(a2 + v62);
  v65 = type metadata accessor for Duration();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (v68)
  {
    if (!v69)
    {
      v70 = sub_23361CD40();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v63, v64, v70);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v69)
  {
    sub_233168500((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
LABEL_34:
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_35;
  }
  v88 = sub_23361CD40();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v63, v64, v88);
LABEL_35:
  v72 = v90[15];
  v73 = (void *)(a1 + v72);
  v74 = (void *)(a2 + v72);
  v75 = v58((void *)(a1 + v72), 1, v56);
  v76 = v58(v74, 1, v56);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(void *, void *, uint64_t))(v89 + 16))(v73, v74, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v73, 0, 1, v56);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v76)
  {
    (*(void (**)(void *, uint64_t))(v89 + 8))(v73, v56);
LABEL_40:
    v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v89 + 24))(v73, v74, v56);
LABEL_41:
  v78 = v90[16];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (_QWORD *)(a2 + v78);
  *v79 = *v80;
  v79[1] = v80[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v81 = v90[17];
  v82 = (void *)(a1 + v81);
  v83 = (void *)(a2 + v81);
  v84 = v58((void *)(a1 + v81), 1, v56);
  v85 = v58(v83, 1, v56);
  if (!v84)
  {
    if (!v85)
    {
      (*(void (**)(void *, void *, uint64_t))(v89 + 24))(v82, v83, v56);
      goto LABEL_47;
    }
    (*(void (**)(void *, uint64_t))(v89 + 8))(v82, v56);
    goto LABEL_46;
  }
  if (v85)
  {
LABEL_46:
    v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(void *, void *, uint64_t))(v89 + 16))(v82, v83, v56);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v82, 0, 1, v56);
LABEL_47:
  *(_BYTE *)(a1 + v90[18]) = *(_BYTE *)(a2 + v90[18]);
  return a1;
}

uint64_t sub_23351AC1C(uint64_t a1)
{
  destroy for RawOrderShippingRecipient(a1);
  return a1;
}

uint64_t initializeWithTake for RawOrderShippingFulfillment(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = a3[11];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[12];
  v14 = a3[13];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(v16 + 144);
  v17 = *(_OWORD *)(v16 + 112);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
  *(_OWORD *)(v15 + 112) = v17;
  *(_OWORD *)(v15 + 128) = *(_OWORD *)(v16 + 128);
  v18 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v18;
  v19 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v15 + 80) = v19;
  v20 = *(_OWORD *)(v16 + 16);
  v21 = (void *)(a1 + v14);
  v22 = (const void *)(a2 + v14);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v20;
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[14];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = type metadata accessor for Duration();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = sub_23361CD40();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v28, v29, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v34 = a3[15];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  if (v25((const void *)(a2 + v34), 1, v23))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v35, v36, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
  }
  v38 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  if (v25((const void *)(a2 + v38), 1, v23))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v39, v40, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v39, 0, 1, v23);
  }
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  return a1;
}

uint64_t assignWithTake for RawOrderShippingFulfillment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  int *v79;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  v11 = a3[11];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_23361D340();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[12];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (*(_QWORD *)(a1 + v20 + 8) == 1)
  {
LABEL_10:
    v24 = *(_OWORD *)(v22 + 112);
    *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
    *(_OWORD *)(v21 + 112) = v24;
    *(_OWORD *)(v21 + 128) = *(_OWORD *)(v22 + 128);
    *(_QWORD *)(v21 + 144) = *(_QWORD *)(v22 + 144);
    v25 = *(_OWORD *)(v22 + 48);
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
    *(_OWORD *)(v21 + 48) = v25;
    v26 = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v21 + 64) = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v21 + 80) = v26;
    v27 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v27;
    goto LABEL_17;
  }
  v23 = *(_QWORD *)(v22 + 8);
  if (v23 == 1)
  {
    sub_23351AC1C(v21);
    goto LABEL_10;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = v28;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v22 + 48);
  if (*(_QWORD *)(v21 + 48) == 1)
    goto LABEL_14;
  if (v30 == 1)
  {
    sub_233326AE4(v21 + 48);
LABEL_14:
    v31 = *(_OWORD *)(v22 + 128);
    *(_OWORD *)(v21 + 112) = *(_OWORD *)(v22 + 112);
    *(_OWORD *)(v21 + 128) = v31;
    *(_QWORD *)(v21 + 144) = *(_QWORD *)(v22 + 144);
    v32 = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v21 + 48) = *(_OWORD *)(v22 + 48);
    *(_OWORD *)(v21 + 64) = v32;
    v33 = *(_OWORD *)(v22 + 96);
    *(_OWORD *)(v21 + 80) = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v21 + 96) = v33;
    goto LABEL_17;
  }
  *(_QWORD *)(v21 + 48) = v30;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
  *(_QWORD *)(v21 + 64) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v22 + 80);
  *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
  *(_QWORD *)(v21 + 80) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v22 + 96);
  *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
  *(_QWORD *)(v21 + 96) = v36;
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v22 + 112);
  *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
  *(_QWORD *)(v21 + 112) = v37;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v22 + 128);
  *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
  *(_QWORD *)(v21 + 128) = v38;
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v22 + 144);
  *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
  *(_QWORD *)(v21 + 144) = v39;
  swift_bridgeObjectRelease();
LABEL_17:
  v40 = a3[13];
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  v43 = sub_23361D634();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  v78 = v44;
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
LABEL_22:
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
LABEL_23:
  v79 = a3;
  v49 = a3[14];
  v50 = (void *)(a1 + v49);
  v51 = (void *)(a2 + v49);
  v52 = type metadata accessor for Duration();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      v57 = sub_23361CD40();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v50, v51, v57);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v56)
  {
    sub_233168500((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
LABEL_28:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_29;
  }
  v77 = sub_23361CD40();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v50, v51, v77);
LABEL_29:
  v59 = v79[15];
  v60 = (void *)(a1 + v59);
  v61 = (void *)(a2 + v59);
  v62 = v45((void *)(a1 + v59), 1, v43);
  v63 = v45(v61, 1, v43);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v60, v61, v43);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v60, 0, 1, v43);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v63)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v60, v43);
LABEL_34:
    v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v60, v61, v43);
LABEL_35:
  v65 = v79[16];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (uint64_t *)(a2 + v65);
  v69 = *v67;
  v68 = v67[1];
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  v70 = v79[17];
  v71 = (void *)(a1 + v70);
  v72 = (void *)(a2 + v70);
  v73 = v45((void *)(a1 + v70), 1, v43);
  v74 = v45(v72, 1, v43);
  if (!v73)
  {
    if (!v74)
    {
      (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v71, v72, v43);
      goto LABEL_41;
    }
    (*(void (**)(void *, uint64_t))(v78 + 8))(v71, v43);
    goto LABEL_40;
  }
  if (v74)
  {
LABEL_40:
    v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v71, v72, v43);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v71, 0, 1, v43);
LABEL_41:
  *(_BYTE *)(a1 + v79[18]) = *(_BYTE *)(a2 + v79[18]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderShippingFulfillment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23351B594(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[14];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingFulfillment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23351B670(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A478);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[14];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_23351B73C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&unk_2542460F0, (void (*)(uint64_t))type metadata accessor for Duration);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t destroy for RawOrderShippingRecipient(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 48);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RawOrderShippingRecipient(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v6;
  v8 = a2 + 6;
  v7 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v9 = *((_OWORD *)v8 + 5);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)v8 + 4);
    *(_OWORD *)(a1 + 128) = v9;
    *(_QWORD *)(a1 + 144) = v8[12];
    v10 = *((_OWORD *)v8 + 1);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 64) = v10;
    v11 = *((_OWORD *)v8 + 3);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)v8 + 2);
    *(_OWORD *)(a1 + 96) = v11;
  }
  else
  {
    v12 = a2[7];
    v13 = a2[8];
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v12;
    v14 = a2[9];
    v15 = a2[10];
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    v16 = a2[11];
    v17 = a2[12];
    *(_QWORD *)(a1 + 80) = v15;
    *(_QWORD *)(a1 + 88) = v16;
    v18 = a2[13];
    v19 = a2[14];
    *(_QWORD *)(a1 + 96) = v17;
    *(_QWORD *)(a1 + 104) = v18;
    v20 = a2[15];
    v21 = a2[16];
    *(_QWORD *)(a1 + 112) = v19;
    *(_QWORD *)(a1 + 120) = v20;
    v22 = a2[17];
    v23 = a2[18];
    *(_QWORD *)(a1 + 128) = v21;
    *(_QWORD *)(a1 + 136) = v22;
    *(_QWORD *)(a1 + 144) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for RawOrderShippingRecipient(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 48);
  v6 = (__int128 *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) == 1)
  {
    if (v5 == 1)
    {
      v7 = *v6;
      v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v8;
      *v4 = v7;
      v9 = *(_OWORD *)(a2 + 96);
      v10 = *(_OWORD *)(a2 + 112);
      v11 = *(_OWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v10;
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 96) = v9;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = v5;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_233326AE4(a1 + 48);
    v13 = *(_OWORD *)(a2 + 64);
    v12 = *(_OWORD *)(a2 + 80);
    *v4 = *v6;
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 80) = v12;
    v15 = *(_OWORD *)(a2 + 112);
    v14 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v15;
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 96) = v16;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

_QWORD *assignWithTake for RawOrderShippingRecipient(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  if (a1[6] != 1)
  {
    if (v7 != 1)
    {
      a1[6] = v7;
      swift_bridgeObjectRelease();
      v11 = a2[8];
      a1[7] = a2[7];
      a1[8] = v11;
      swift_bridgeObjectRelease();
      v12 = a2[10];
      a1[9] = a2[9];
      a1[10] = v12;
      swift_bridgeObjectRelease();
      v13 = a2[12];
      a1[11] = a2[11];
      a1[12] = v13;
      swift_bridgeObjectRelease();
      v14 = a2[14];
      a1[13] = a2[13];
      a1[14] = v14;
      swift_bridgeObjectRelease();
      v15 = a2[16];
      a1[15] = a2[15];
      a1[16] = v15;
      swift_bridgeObjectRelease();
      v16 = a2[18];
      a1[17] = a2[17];
      a1[18] = v16;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_233326AE4((uint64_t)(a1 + 6));
  }
  v8 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v8;
  a1[18] = a2[18];
  v9 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v9;
  v10 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderShippingRecipient(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 152))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingRecipient(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 152) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderShippingRecipient()
{
  return &type metadata for RawOrderShippingRecipient;
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingRecipient.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23351BEE4 + 4 * byte_233657726[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23351BF18 + 4 * byte_233657721[v4]))();
}

uint64_t sub_23351BF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23351BF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23351BF28);
  return result;
}

uint64_t sub_23351BF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23351BF3CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23351BF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23351BF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderShippingRecipient.CodingKeys()
{
  return &type metadata for RawOrderShippingRecipient.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RawOrderShippingFulfillment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderShippingFulfillment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_23351C040 + 4 * byte_233657730[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_23351C074 + 4 * byte_23365772B[v4]))();
}

uint64_t sub_23351C074(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23351C07C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23351C084);
  return result;
}

uint64_t sub_23351C090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23351C098);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_23351C09C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23351C0A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderShippingFulfillment.CodingKeys()
{
  return &type metadata for RawOrderShippingFulfillment.CodingKeys;
}

unint64_t sub_23351C0C4()
{
  unint64_t result;

  result = qword_256054010;
  if (!qword_256054010)
  {
    result = MEMORY[0x234934494](&unk_233657D88, &type metadata for RawOrderShippingFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054010);
  }
  return result;
}

unint64_t sub_23351C10C()
{
  unint64_t result;

  result = qword_256054018;
  if (!qword_256054018)
  {
    result = MEMORY[0x234934494](&unk_233657E40, &type metadata for RawOrderShippingRecipient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054018);
  }
  return result;
}

unint64_t sub_23351C154()
{
  unint64_t result;

  result = qword_256054020;
  if (!qword_256054020)
  {
    result = MEMORY[0x234934494](&unk_233657DB0, &type metadata for RawOrderShippingRecipient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054020);
  }
  return result;
}

unint64_t sub_23351C19C()
{
  unint64_t result;

  result = qword_256054028;
  if (!qword_256054028)
  {
    result = MEMORY[0x234934494](&unk_233657DD8, &type metadata for RawOrderShippingRecipient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054028);
  }
  return result;
}

unint64_t sub_23351C1E4()
{
  unint64_t result;

  result = qword_256054030;
  if (!qword_256054030)
  {
    result = MEMORY[0x234934494](&unk_233657CF8, &type metadata for RawOrderShippingFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054030);
  }
  return result;
}

unint64_t sub_23351C22C()
{
  unint64_t result;

  result = qword_256054038;
  if (!qword_256054038)
  {
    result = MEMORY[0x234934494](&unk_233657D20, &type metadata for RawOrderShippingFulfillment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054038);
  }
  return result;
}

uint64_t sub_23351C270(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6D657449656E696CLL && a2 == 0xE900000000000073 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656972726163 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233673B40 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233669A10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xEE007265626D754ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xEB000000004C5255 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E65697069636572 && a2 == 0xE900000000000074 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A1D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023367A1F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65726576696C6564 && a2 == 0xEB00000000744164 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233673680 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x4164657070696873 && a2 == 0xE900000000000074 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x676E697070696873 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

unint64_t sub_23351C8AC()
{
  unint64_t result;

  result = qword_256054040;
  if (!qword_256054040)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingType, &type metadata for RawOrderShippingType);
    atomic_store(result, (unint64_t *)&qword_256054040);
  }
  return result;
}

unint64_t sub_23351C8F0()
{
  unint64_t result;

  result = qword_256054048;
  if (!qword_256054048)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingStatus, &type metadata for RawOrderShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256054048);
  }
  return result;
}

uint64_t *sub_23351C934(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[19];
  v3 = a1[20];
  v4 = a1[21];
  v5 = a1[22];
  v6 = a1[23];
  v7 = a1[24];
  v8 = a1[25];
  sub_2333719F8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_2333719F8(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

unint64_t sub_23351CA3C()
{
  unint64_t result;

  result = qword_256054050;
  if (!qword_256054050)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderShippingFulfillmentError, &type metadata for RawOrderShippingFulfillmentError);
    atomic_store(result, (unint64_t *)&qword_256054050);
  }
  return result;
}

id WalletBankCredentialImporter.__allocating_init(financeStore:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____FKWalletBankCredentialImporter_financeStore] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id WalletBankCredentialImporter.init(financeStore:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____FKWalletBankCredentialImporter_financeStore] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id static WalletBankCredentialImporter.makeImporter()()
{
  objc_class *v0;
  void *v1;
  char *v2;
  objc_super v4;

  if (qword_254244AD0 != -1)
    swift_once();
  v1 = off_254245198;
  v2 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v2[OBJC_IVAR____FKWalletBankCredentialImporter_financeStore] = v1;
  v4.receiver = v2;
  v4.super_class = v0;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t WalletBankCredentialImporter.insertCredential(from:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for BankCredential(0);
  v2[4] = swift_task_alloc();
  type metadata accessor for BankCredential.ACH(0);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23351CCA4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  char *v19;
  _QWORD *v21;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_accountNumber);
  if (!v1)
  {
    v18 = 0;
LABEL_7:
    sub_23351CF7C();
    swift_allocError();
    *v19 = v18;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = v1;
  v3 = *(void **)(v0 + 16);
  v4 = sub_23361E150();
  v6 = v5;

  v7 = objc_msgSend(v3, sel_routingNumber);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    v18 = 1;
    goto LABEL_7;
  }
  v8 = v7;
  v9 = *(void **)(v0 + 16);
  v10 = sub_23361E150();
  v12 = v11;

  v13 = objc_msgSend(v9, sel_bankName);
  if (v13)
  {
    v14 = v13;
    v15 = sub_23361E150();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  BankCredential.ACH.init(routingNumber:accountNumber:nickname:)(v10, v12, v4, v6, v15, v17, *(_QWORD *)(v0 + 40));
  sub_23351CFC0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 32));
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v21;
  *v21 = v0;
  v21[1] = sub_23351CE68;
  return FinanceStore.insertOrUpdateBankCredential(credential:)(*(_QWORD *)(v0 + 32));
}

uint64_t sub_23351CE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_233168500(v2, type metadata accessor for BankCredential);
  return swift_task_switch();
}

uint64_t sub_23351CEE0()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 40), type metadata accessor for BankCredential.ACH);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23351CF30()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 40), type metadata accessor for BankCredential.ACH);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23351CF7C()
{
  unint64_t result;

  result = qword_256054068;
  if (!qword_256054068)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankCredentialError, &type metadata for BankCredentialError);
    atomic_store(result, (unint64_t *)&qword_256054068);
  }
  return result;
}

uint64_t sub_23351CFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankCredential.ACH(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23351D134(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_23351D1B0;
  return WalletBankCredentialImporter.insertCredential(from:)((uint64_t)v6);
}

uint64_t sub_23351D1B0()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)(*v1 + 16);
  v2 = *(void **)(*v1 + 24);
  v4 = *v1;
  swift_task_dealloc();

  v5 = *(_QWORD *)(v4 + 32);
  if (v0)
  {
    v6 = (void *)sub_23361D1A8();

    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 32), 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t WalletBankCredentialImporter.insert(credential:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23351D26C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23351D2CC;
  return FinanceStore.insertOrUpdateBankCredential(credential:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23351D2CC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id WalletBankCredentialImporter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WalletBankCredentialImporter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WalletBankCredentialImporter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WalletBankCredentialImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for WalletBankCredentialImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WalletBankCredentialImporter.__allocating_init(financeStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23351D404()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_23351D438()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_2331676FC;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2560540A0 + dword_2560540A0))(v2, v3, v4);
}

uint64_t static FinanceXPCConfiguration<>.clientInterface.getter()
{
  return 0;
}

uint64_t dispatch thunk of static FinanceXPCConfiguration.serviceInterface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static FinanceXPCConfiguration.clientInterface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

id ManagedNetworkResponseEvent.__allocating_init(response:body:traceID:context:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD v51[2];
  char *v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  id v57[2];

  v6 = v5;
  v55 = a5;
  v56 = a4;
  v53 = a2;
  v54 = a3;
  v57[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = sub_23361E1B0();
  MEMORY[0x24BDAC7A8](v8);
  v51[1] = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23361D340();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v52 = (char *)v51 - v22;
  v23 = objc_msgSend(a1, sel_URL);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_6;
  }
  v24 = v23;
  sub_23361D2D4();

  v25 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v25(v16, v21, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_6:

    sub_2331B04E8(v53, v54);
    v33 = sub_23361D6A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v56, v33);
    sub_2331A046C((uint64_t)v16);
    return 0;
  }
  v25(v52, v16, v17);
  v26 = objc_allocWithZone(v6);
  v27 = objc_msgSend(v26, sel_initWithContext_, v55);
  sub_23361D5F8();
  v28 = (void *)sub_23361D5B0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  objc_msgSend(v27, sel_setEventDate_, v28);

  v29 = (void *)sub_23361D658();
  objc_msgSend(v27, sel_setTraceID_, v29);

  v30 = (void *)sub_23361D268();
  objc_msgSend(v27, sel_setEventURL_, v30);

  v31 = v54;
  if (v54 >> 60 == 15)
  {
    v32 = 0;
  }
  else
  {
    v34 = v53;
    sub_2331D1374(v53, v54);
    v32 = (void *)sub_23361D3AC();
    sub_2331B04E8(v34, v31);
  }
  objc_msgSend(v27, sel_setResponseBody_, v32);

  v35 = (uint64_t)objc_msgSend(a1, sel_statusCode);
  if (v35 < -32768)
  {
    __break(1u);
LABEL_19:
    __break(1u);
  }
  if (v35 >= 0x8000)
    goto LABEL_19;
  objc_msgSend(v27, sel_setResponseStatusCode_, (__int16)v35);
  v36 = (void *)objc_opt_self();
  v37 = objc_msgSend(a1, sel_allHeaderFields);
  sub_23361E06C();

  v38 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v57[0] = 0;
  v39 = objc_msgSend(v36, sel_dataWithJSONObject_options_error_, v38, 0, v57);

  v40 = v57[0];
  if (v39)
  {
    v41 = sub_23361D3C4();
    v43 = v42;

    sub_23361E198();
    sub_23361E168();
    if (v44)
    {
      v45 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v45 = 0;
    }
    v48 = v54;
    objc_msgSend(v27, sel_setResponseHeaders_, v45);

    sub_23316BEA4(v41, v43);
    sub_2331B04E8(v53, v48);

  }
  else
  {
    v46 = v40;
    v47 = (void *)sub_23361D1B4();

    swift_willThrow();
    sub_2331B04E8(v53, v54);

  }
  v49 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v56, v49);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v52, v17);
  return v27;
}

void sub_23351DA14(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_responseBody);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361D3C4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_23351DA78(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_23361D3AC();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setResponseBody_);

}

void sub_23351DADC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_responseHeaders);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_23351DB40(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setResponseHeaders_);

}

id static ManagedNetworkResponseEvent.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedNetworkResponseEvent;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id ManagedNetworkResponseEvent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedNetworkResponseEvent.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedNetworkResponseEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *keypath_get_selector_eventDate()
{
  return sel_eventDate;
}

void sub_23351DD28(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_eventDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_23351DD4C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setEventDate_);
}

char *keypath_get_selector_eventURL()
{
  return sel_eventURL;
}

void sub_23351DD6C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_eventURL, (void (*)(void))MEMORY[0x24BDCD9C0]);
}

void sub_23351DD90(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCD8D0], (SEL *)&selRef_setEventURL_);
}

char *keypath_get_selector_traceID()
{
  return sel_traceID;
}

void sub_23351DDB0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_traceID, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_23351DDD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setTraceID_);
}

char *keypath_get_selector_responseBody()
{
  return sel_responseBody;
}

char *keypath_get_selector_responseStatusCode()
{
  return sel_responseStatusCode;
}

id sub_23351DE08@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_responseStatusCode);
  *a2 = (_WORD)result;
  return result;
}

id sub_23351DE38(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResponseStatusCode_, *a1);
}

char *keypath_get_selector_responseHeaders()
{
  return sel_responseHeaders;
}

uint64_t type metadata accessor for ManagedNetworkResponseEvent()
{
  return objc_opt_self();
}

uint64_t BankCredential.CredentialType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (unsigned __int16)result != 1;
  return result;
}

uint64_t BankCredential.CredentialType.rawValue.getter()
{
  return 1;
}

uint64_t static BankCredential.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E28);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2331684BC(a1, (uint64_t)v10, type metadata accessor for BankCredential);
  sub_2331684BC(a2, v11, type metadata accessor for BankCredential);
  sub_233168580((uint64_t)v10, (uint64_t)v6, type metadata accessor for BankCredential.ACH);
  LOBYTE(a2) = _s10FinanceKit14BankCredentialO3ACHV2eeoiySbAE_AEtFZ_0((uint64_t)v6, v11);
  sub_233168500(v11, type metadata accessor for BankCredential.ACH);
  sub_233168500((uint64_t)v6, type metadata accessor for BankCredential.ACH);
  return a2 & 1;
}

uint64_t type metadata accessor for BankCredential.ACH(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254247C08);
}

uint64_t type metadata accessor for BankCredential(uint64_t a1)
{
  return sub_233177414(a1, qword_254247C18);
}

uint64_t BankCredential.ACH.init(routingNumber:accountNumber:nickname:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  void (*v37)(char *, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v48 = a5;
  v49 = a6;
  v50 = a4;
  v43 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540B0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540B8);
  v46 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v40 - v19;
  v21 = type metadata accessor for BankCredential.ACH(0);
  v22 = (uint64_t *)(a7 + *(int *)(v21 + 20));
  sub_23361D694();
  v42 = v22;
  v23 = v49;
  *v22 = v48;
  v22[1] = (uint64_t)v23;
  v47 = a7;
  v48 = v21;
  v44 = a7 + *(int *)(v21 + 32);
  sub_23361D5F8();
  sub_23361D9E8();
  v49 = v18;
  sub_23361D9E8();
  v41 = a1;
  v24 = a2;
  v25 = v45;
  sub_23361D9F4();
  if (v25)
  {
    swift_unexpectedError();
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540C0);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
    LODWORD(v45) = v27(v14, 1, v26);
    if ((_DWORD)v45 == 1)
    {
      swift_bridgeObjectRelease();
      v28 = 1;
      v29 = (uint64_t)v14;
      v30 = v47;
    }
    else
    {
      sub_233168608((uint64_t)v14, &qword_2560540B0);
      v30 = v47;
      v31 = (_QWORD *)(v47 + *(int *)(v48 + 24));
      v29 = (uint64_t)v40;
      *v31 = v41;
      v31[1] = v24;
      sub_23361D9F4();
      if (v27((char *)v29, 1, v26) != 1)
      {
        sub_233168608(v29, &qword_2560540B0);
        v37 = *(void (**)(char *, uint64_t))(v46 + 8);
        v37(v49, v15);
        result = ((uint64_t (*)(char *, uint64_t))v37)(v20, v15);
        v38 = (_QWORD *)(v30 + *(int *)(v48 + 28));
        v39 = v50;
        *v38 = v43;
        v38[1] = v39;
        return result;
      }
      v28 = 0;
    }
    swift_bridgeObjectRelease();
    sub_233168608(v29, &qword_2560540B0);
    sub_23351CF7C();
    swift_allocError();
    *v32 = v28;
    swift_willThrow();
    v33 = *(void (**)(char *, uint64_t))(v46 + 8);
    v33(v49, v15);
    v33(v20, v15);
    v34 = sub_23361D6A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v30, v34);
    swift_bridgeObjectRelease();
    if ((_DWORD)v45 != 1)
      swift_bridgeObjectRelease();
    v35 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v44, v35);
  }
  return result;
}

uint64_t BankCredential.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v8, v9);
  sub_233168580((uint64_t)v8, (uint64_t)v5, type metadata accessor for BankCredential.ACH);
  v10 = sub_23361D6A0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v5, v10);
  return sub_233168500((uint64_t)v5, type metadata accessor for BankCredential.ACH);
}

uint64_t BankCredential.nickname.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v0, (uint64_t)v6, v7);
  sub_233168580((uint64_t)v6, (uint64_t)v3, type metadata accessor for BankCredential.ACH);
  v8 = *(_QWORD *)&v3[*(int *)(v1 + 20)];
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v3, type metadata accessor for BankCredential.ACH);
  return v8;
}

uint64_t BankCredential.seal(using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char **v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;

  v3 = v2;
  v69 = a1;
  v61 = a2;
  v4 = sub_23361D634();
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v55);
  v56 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v7);
  v54 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_23361D6A0();
  v65 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v64 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D8F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361DE98();
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23361DF04();
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v66 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23361CAC4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v18, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v22, v18);
  sub_23361CADC();
  sub_233167C58(&qword_256050AE8, type metadata accessor for BankCredential, (uint64_t)&protocol conformance descriptor for BankCredential);
  v23 = v74;
  v24 = sub_23361CAE8();
  if (v23)
    return swift_release();
  v26 = v24;
  v27 = v25;
  v72 = v24;
  v73 = v25;
  v28 = (uint64_t *)(v69 + *(int *)(type metadata accessor for CredentialCenterKey() + 20));
  v29 = v28[1];
  v70 = *v28;
  v71 = v29;
  sub_2331D1374(v70, v29);
  sub_23361DE80();
  v30 = sub_23361DEE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
  sub_2332640A8();
  v31 = v66;
  sub_23361DED4();
  v52 = v26;
  v53 = v27;
  sub_233168608((uint64_t)v12, &qword_25604D8F8);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v68);
  v74 = sub_23361DEEC();
  v34 = v33;
  result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v31, v63);
  v68 = v34;
  if (v34 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v35 = v54;
    sub_2331684BC(v3, v54, type metadata accessor for BankCredential);
    v36 = v3;
    v37 = v56;
    sub_233168580(v35, v56, type metadata accessor for BankCredential.ACH);
    v67 = *(_QWORD *)(v65 + 16);
    v38 = v57;
    ((void (*)(char *, uint64_t, uint64_t))v67)(v64, v37, v57);
    sub_233168500(v37, type metadata accessor for BankCredential.ACH);
    sub_2331684BC(v3, v35, type metadata accessor for BankCredential);
    sub_233168580(v35, v37, type metadata accessor for BankCredential.ACH);
    v39 = v55;
    v40 = (char **)(v37 + *(int *)(v55 + 20));
    v41 = v40[1];
    v66 = *v40;
    swift_bridgeObjectRetain();
    sub_233168500(v37, type metadata accessor for BankCredential.ACH);
    sub_2331684BC(v36, v35, type metadata accessor for BankCredential);
    sub_233168580(v35, v37, type metadata accessor for BankCredential.ACH);
    v42 = v37 + *(int *)(v39 + 32);
    v44 = v58;
    v43 = v59;
    v45 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v42, v60);
    sub_233168500(v37, type metadata accessor for BankCredential.ACH);
    sub_23316BEA4(v52, v53);
    swift_release();
    v46 = (int *)type metadata accessor for BankCredential.SealedBox(0);
    v47 = v61;
    ((void (*)(uint64_t, uint64_t, uint64_t))v67)(v61 + v46[9], v69, v38);
    (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v47, v64, v38);
    v48 = (_QWORD *)(v47 + v46[5]);
    *v48 = v66;
    v48[1] = v41;
    v49 = (uint64_t *)(v47 + v46[7]);
    v50 = v68;
    *v49 = v74;
    v49[1] = v50;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v43 + 32))(v47 + v46[8], v44, v45);
  }
  return result;
}

uint64_t BankCredential.updatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v8, v9);
  sub_233168580((uint64_t)v8, (uint64_t)v5, type metadata accessor for BankCredential.ACH);
  v10 = &v5[*(int *)(v3 + 32)];
  v11 = sub_23361D634();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, v10, v11);
  return sub_233168500((uint64_t)v5, type metadata accessor for BankCredential.ACH);
}

uint64_t BankCredential.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v1 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v0, (uint64_t)v6, v7);
  sub_233168580((uint64_t)v6, (uint64_t)v3, type metadata accessor for BankCredential.ACH);
  sub_23361F35C();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  if (*(_QWORD *)&v3[*(int *)(v1 + 20) + 8])
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  return sub_233168500((uint64_t)v3, type metadata accessor for BankCredential.ACH);
}

uint64_t sub_23351EE5C()
{
  sub_233521F1C();
  return sub_23361F428();
}

uint64_t sub_23351EE84()
{
  sub_233521F1C();
  return sub_23361F434();
}

uint64_t sub_23351EEAC()
{
  return 6841185;
}

uint64_t sub_23351EEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 6841185 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23351EF40()
{
  sub_233521ED8();
  return sub_23361F428();
}

uint64_t sub_23351EF68()
{
  sub_233521ED8();
  return sub_23361F434();
}

uint64_t BankCredential.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540C8);
  v3 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  v20 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540D0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233521ED8();
  sub_23361F410();
  sub_2331684BC(v17, (uint64_t)v10, type metadata accessor for BankCredential);
  sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for BankCredential.ACH);
  sub_233521F1C();
  sub_23361F0C8();
  sub_233167C58(&qword_2560540E8, type metadata accessor for BankCredential.ACH, (uint64_t)&protocol conformance descriptor for BankCredential.ACH);
  v15 = v19;
  sub_23361F17C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  sub_233168500((uint64_t)v7, type metadata accessor for BankCredential.ACH);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t BankCredential.hashValue.getter()
{
  return sub_2332423A0((void (*)(_BYTE *))BankCredential.hash(into:));
}

uint64_t BankCredential.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v23 = a2;
  v24 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560540F8);
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233521ED8();
  v28 = v10;
  v11 = v27;
  sub_23361F3EC();
  if (!v11)
  {
    v12 = v7;
    v22 = v5;
    v13 = v4;
    v27 = v8;
    v15 = (uint64_t)v25;
    v14 = v26;
    if (*(_QWORD *)(sub_23361F098() + 16) == 1)
    {
      sub_233521F1C();
      sub_23361EFA8();
      v16 = v27;
      type metadata accessor for BankCredential.ACH(0);
      sub_233167C58(&qword_256054100, type metadata accessor for BankCredential.ACH, (uint64_t)&protocol conformance descriptor for BankCredential.ACH);
      sub_23361F068();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v14);
      sub_233168580(v15, v23, type metadata accessor for BankCredential);
    }
    else
    {
      v17 = sub_23361EE10();
      swift_allocError();
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
      *v19 = v24;
      sub_23361EFC0();
      sub_23361EDEC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
      swift_willThrow();
      v20 = v27;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v14);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23351F4C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankCredential.init(from:)(a1, a2);
}

uint64_t sub_23351F4D8(_QWORD *a1)
{
  return BankCredential.encode(to:)(a1);
}

uint64_t sub_23351F4EC(uint64_t a1, uint64_t a2)
{
  return sub_233242BC4(a1, a2, (void (*)(_BYTE *))BankCredential.hash(into:));
}

uint64_t sub_23351F4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_233242C14(a1, a2, a3, (void (*)(_BYTE *))BankCredential.hash(into:));
}

uint64_t sub_23351F508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for BankCredential.ACH(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v8, type metadata accessor for BankCredential);
  sub_233168580((uint64_t)v8, (uint64_t)v6, type metadata accessor for BankCredential.ACH);
  v9 = sub_23361D6A0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, v6, v9);
  return sub_233168500((uint64_t)v6, type metadata accessor for BankCredential.ACH);
}

uint64_t sub_23351F5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E28);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2331684BC(a1, (uint64_t)v10, type metadata accessor for BankCredential);
  sub_2331684BC(a2, v11, type metadata accessor for BankCredential);
  sub_233168580((uint64_t)v10, (uint64_t)v6, type metadata accessor for BankCredential.ACH);
  LOBYTE(a2) = _s10FinanceKit14BankCredentialO3ACHV2eeoiySbAE_AEtFZ_0((uint64_t)v6, v11);
  sub_233168500(v11, type metadata accessor for BankCredential.ACH);
  sub_233168500((uint64_t)v6, type metadata accessor for BankCredential.ACH);
  return a2 & 1;
}

uint64_t (*BankCredential.SealedBox.id.modify())()
{
  return nullsub_1;
}

uint64_t BankCredential.SealedBox.nickname.getter()
{
  return sub_2331F9D44(type metadata accessor for BankCredential.SealedBox);
}

uint64_t BankCredential.SealedBox.nickname.setter(uint64_t a1, uint64_t a2)
{
  return sub_233520BE8(a1, a2, type metadata accessor for BankCredential.SealedBox);
}

uint64_t (*BankCredential.SealedBox.nickname.modify())(_QWORD)
{
  type metadata accessor for BankCredential.SealedBox(0);
  return nullsub_1;
}

uint64_t (*BankCredential.SealedBox.credentialType.modify())()
{
  return nullsub_1;
}

uint64_t BankCredential.SealedBox.keyIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankCredential.SealedBox(0) + 36);
  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankCredential.SealedBox.keyIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankCredential.SealedBox(0) + 36);
  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankCredential.SealedBox.keyIdentifier.modify())(_QWORD)
{
  type metadata accessor for BankCredential.SealedBox(0);
  return nullsub_1;
}

uint64_t BankCredential.SealedBox.open(using:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v2;
  v43 = a1;
  v4 = sub_23361CA40();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361DF04();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041C90 != -1)
    swift_once();
  v10 = sub_23361DB80();
  v44 = __swift_project_value_buffer(v10, (uint64_t)qword_256049580);
  v11 = sub_23361DB68();
  v12 = sub_23361E750();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_233151000, v11, v12, "Decrypting bank credential.", v13, 2u);
    v3 = v2;
    MEMORY[0x234934590](v13, -1, -1);
  }

  v14 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BankCredential.SealedBox(0) + 28));
  v15 = *v14;
  v16 = v14[1];
  sub_2331D1374(*v14, v16);
  sub_23357D188(v15, v16);
  if (v3)
  {
    v17 = v3;
    v18 = v3;
    v19 = sub_23361DB68();
    v20 = sub_23361E768();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v21 = 138412290;
      v23 = v3;
      v24 = _swift_stdlib_bridgeErrorToNSError();
      v46 = v24;
      sub_23361EBC4();
      *v22 = v24;

      _os_log_impl(&dword_233151000, v19, v20, "Failed decrypting bank credential. Error: %@", v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v22, -1, -1);
      MEMORY[0x234934590](v21, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  else
  {
    v26 = sub_23361DEC8();
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_2331D1374(v26, v28);
    sub_2331D1374(v26, v28);
    sub_2331D1374(v26, v28);
    v29 = sub_23361DB68();
    v30 = sub_23361E750();
    if (os_log_type_enabled(v29, v30))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v46 = v44;
      *(_DWORD *)v32 = 136315138;
      v39[1] = v32 + 4;
      sub_2331D1374(v26, v28);
      v33 = sub_23361D364();
      v35 = v34;
      sub_23316BEA4(v26, v28);
      v45 = sub_233164DCC(v33, v35, &v46);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_23316BEA4(v26, v28);
      sub_23316BEA4(v26, v28);
      _os_log_impl(&dword_233151000, v29, v30, "    Decrypted bank credential. Decoding [BankCredential]     from %s.", v32, 0xCu);
      v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x234934590](v36, -1, -1);
      MEMORY[0x234934590](v32, -1, -1);
    }
    else
    {
      sub_23316BEA4(v26, v28);
      sub_23316BEA4(v26, v28);
    }

    sub_23361CA70();
    swift_allocObject();
    sub_23361CA64();
    if (qword_256041BF0 != -1)
      swift_once();
    v37 = v42;
    v38 = __swift_project_value_buffer(v42, (uint64_t)qword_2560458E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v38, v37);
    sub_23361CA4C();
    type metadata accessor for BankCredential(0);
    sub_233167C58(&qword_256050B88, type metadata accessor for BankCredential, (uint64_t)&protocol conformance descriptor for BankCredential);
    sub_23361CA58();
    sub_23316BEA4(v26, v28);
    sub_23316BEA4(v26, v28);
    return swift_release();
  }
}

uint64_t sub_23351FDF8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23351FE1C + 4 * byte_233657FB0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23351FE1C()
{
  return 0x656D616E6B63696ELL;
}

uint64_t sub_23351FE34()
{
  return 0x69746E6564657263;
}

unint64_t sub_23351FE58()
{
  return 0xD000000000000014;
}

uint64_t sub_23351FE74()
{
  return 0x4464657461647075;
}

uint64_t sub_23351FE94()
{
  return 0x746E65644979656BLL;
}

uint64_t sub_23351FEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233524000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23351FEDC()
{
  sub_233521F60();
  return sub_23361F428();
}

uint64_t sub_23351FF04()
{
  sub_233521F60();
  return sub_23361F434();
}

uint64_t BankCredential.SealedBox.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054108);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233521F60();
  sub_23361F410();
  LOBYTE(v12) = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v2)
  {
    v9 = type metadata accessor for BankCredential.SealedBox(0);
    LOBYTE(v12) = 1;
    sub_23361F0E0();
    LOBYTE(v12) = 2;
    sub_233521FA4();
    sub_23361F17C();
    v12 = *(_OWORD *)(v3 + *(int *)(v9 + 28));
    v13 = 3;
    sub_2331A6BA8();
    sub_23361F17C();
    v11[1] = v3 + *(int *)(v9 + 32);
    LOBYTE(v12) = 4;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    LOBYTE(v12) = 5;
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BankCredential.SealedBox.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD v24[2];
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t *v36;
  __int128 v37;
  char v38;

  v26 = a2;
  v31 = sub_23361D634();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v28 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23361D6A0();
  v30 = *(_QWORD *)(v32 - 8);
  v4 = MEMORY[0x24BDAC7A8](v32);
  v27 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)v24 - v6;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054120);
  v7 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BankCredential.SealedBox(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v13[*(int *)(v11 + 20)];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233521F60();
  v35 = v9;
  v15 = v36;
  sub_23361F3EC();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v36 = (uint64_t *)v14;
    v25 = (int *)v10;
    v16 = v31;
    LOBYTE(v37) = 0;
    v17 = sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v18 = v32;
    sub_23361F068();
    v24[1] = v17;
    v19 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v19(v13, v34, v18);
    LOBYTE(v37) = 1;
    v20 = sub_23361EFCC();
    v21 = v36;
    *v36 = v20;
    v21[1] = v22;
    LOBYTE(v37) = 2;
    sub_233521FE8();
    sub_23361F068();
    v38 = 3;
    sub_2331A6B08();
    sub_23361F068();
    *(_OWORD *)&v13[v25[7]] = v37;
    LOBYTE(v37) = 4;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361F068();
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v13[v25[8]], v28, v16);
    LOBYTE(v37) = 5;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v33);
    v19(&v13[v25[9]], v27, v18);
    sub_2331684BC((uint64_t)v13, v26, type metadata accessor for BankCredential.SealedBox);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_233168500((uint64_t)v13, type metadata accessor for BankCredential.SealedBox);
  }
}

uint64_t sub_233520660@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankCredential.SealedBox.init(from:)(a1, a2);
}

uint64_t sub_233520674(_QWORD *a1)
{
  return BankCredential.SealedBox.encode(to:)(a1);
}

FinanceKit::BankCredentialError::FieldName_optional __swiftcall BankCredentialError.FieldName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FinanceKit::BankCredentialError::FieldName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t BankCredentialError.FieldName.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x4E676E6974756F72;
  else
    return 0x4E746E756F636361;
}

uint64_t sub_233520730(char *a1, char *a2)
{
  return sub_233227104(*a1, *a2);
}

uint64_t sub_23352073C()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2335207C8()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233520828()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::BankCredentialError::FieldName_optional sub_2335208B0(Swift::String *a1)
{
  return BankCredentialError.FieldName.init(rawValue:)(*a1);
}

void sub_2335208BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x4E746E756F636361;
  if (*v1)
    v2 = 0x4E676E6974756F72;
  *a1 = v2;
  a1[1] = 0xED00007265626D75;
}

uint64_t BankCredential.CredentialType.localizedDescription.getter()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

void *BankCredential.CredentialType.preferredISORegionCodes.getter()
{
  return &unk_25046B990;
}

void *static BankCredential.CredentialType.allCases.getter()
{
  return &unk_25046B9C0;
}

uint64_t sub_233520A08()
{
  sub_23361F350();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t sub_233520A48()
{
  return sub_23361F374();
}

uint64_t sub_233520A6C()
{
  sub_23361F350();
  sub_23361F374();
  return sub_23361F3A4();
}

unsigned __int16 *sub_233520AA8@<X0>(unsigned __int16 *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_233520ABC(_WORD *a1@<X8>)
{
  *a1 = 1;
}

void sub_233520AC8(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046B9E8;
}

uint64_t sub_233520AD8()
{
  sub_233524680();
  return sub_23361E3A8();
}

uint64_t sub_233520B34()
{
  sub_233524680();
  return sub_23361E36C();
}

uint64_t _s10FinanceKit14BankCredentialO9SealedBoxV2id10Foundation4UUIDVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*BankCredential.ACH.id.modify())()
{
  return nullsub_1;
}

uint64_t BankCredential.ACH.nickname.getter()
{
  return sub_2331F9D44(type metadata accessor for BankCredential.ACH);
}

uint64_t BankCredential.ACH.nickname.setter(uint64_t a1, uint64_t a2)
{
  return sub_233520BE8(a1, a2, type metadata accessor for BankCredential.ACH);
}

uint64_t sub_233520BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 20));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*BankCredential.ACH.nickname.modify())(_QWORD)
{
  type metadata accessor for BankCredential.ACH(0);
  return nullsub_1;
}

uint64_t BankCredential.ACH.routingNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankCredential.ACH.routingNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BankCredential.ACH.routingNumber.modify())(_QWORD)
{
  type metadata accessor for BankCredential.ACH(0);
  return nullsub_1;
}

uint64_t BankCredential.ACH.accountNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankCredential.ACH.accountNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BankCredential.ACH.accountNumber.modify())(_QWORD)
{
  type metadata accessor for BankCredential.ACH(0);
  return nullsub_1;
}

uint64_t BankCredential.ACH.updatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 32);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankCredential.ACH.updatedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 32);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankCredential.ACH.updatedDate.modify())(_QWORD)
{
  type metadata accessor for BankCredential.ACH(0);
  return nullsub_1;
}

uint64_t BankCredential.ACH.hash(into:)()
{
  uint64_t v0;

  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for BankCredential.ACH(0) + 20) + 8))
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361F368();
  }
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23361E090();
}

uint64_t sub_233520FB8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233520FDC + 4 * byte_233657FB6[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_233520FDC()
{
  return 0x656D616E6B63696ELL;
}

uint64_t sub_233520FF4()
{
  return 0x4E676E6974756F72;
}

uint64_t sub_23352102C()
{
  return 0x4464657461647075;
}

uint64_t sub_23352104C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335242C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233521070()
{
  sub_2335220D4();
  return sub_23361F428();
}

uint64_t sub_233521098()
{
  sub_2335220D4();
  return sub_23361F434();
}

uint64_t BankCredential.ACH.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054130);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335220D4();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for BankCredential.ACH(0);
    v8[14] = 1;
    sub_23361F0E0();
    v8[13] = 2;
    sub_23361F140();
    v8[12] = 3;
    sub_23361F140();
    v8[11] = 4;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t BankCredential.ACH.hashValue.getter()
{
  return sub_2332423A0((void (*)(_BYTE *))BankCredential.ACH.hash(into:));
}

uint64_t BankCredential.ACH.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t *v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v32 = a2;
  v33 = sub_23361D634();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D6A0();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054140);
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for BankCredential.ACH(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v12[*(int *)(v10 + 20)];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335220D4();
  v39 = v8;
  v14 = v40;
  sub_23361F3EC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v6;
    v40 = (uint64_t *)v13;
    v16 = v35;
    v30 = a1;
    v45 = 0;
    sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v17 = v36;
    sub_23361F068();
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v38, v17);
    v44 = 1;
    v18 = sub_23361EFCC();
    v19 = v40;
    *v40 = v18;
    v19[1] = v20;
    v43 = 2;
    v21 = sub_23361F02C();
    v22 = (uint64_t *)&v12[v9[6]];
    *v22 = v21;
    v22[1] = v23;
    v42 = 3;
    v24 = sub_23361F02C();
    v25 = (uint64_t *)&v12[v9[7]];
    *v25 = v24;
    v25[1] = v26;
    v41 = 4;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v27 = v33;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v37);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v12[v9[8]], v34, v27);
    sub_2331684BC((uint64_t)v12, v32, type metadata accessor for BankCredential.ACH);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    return sub_233168500((uint64_t)v12, type metadata accessor for BankCredential.ACH);
  }
}

uint64_t sub_233521718@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankCredential.ACH.init(from:)(a1, a2);
}

uint64_t sub_23352172C(_QWORD *a1)
{
  return BankCredential.ACH.encode(to:)(a1);
}

uint64_t sub_233521740(uint64_t a1, uint64_t a2)
{
  return sub_233242BC4(a1, a2, (void (*)(_BYTE *))BankCredential.ACH.hash(into:));
}

uint64_t sub_233521750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_233242C14(a1, a2, a3, (void (*)(_BYTE *))BankCredential.ACH.hash(into:));
}

uint64_t BankCredentials.credentials.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BankCredentials.credentials.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*BankCredentials.credentials.modify())()
{
  return nullsub_1;
}

uint64_t BankCredentials.credentialsWithInvalidData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BankCredentials.credentialsWithInvalidData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*BankCredentials.credentialsWithInvalidData.modify())()
{
  return nullsub_1;
}

uint64_t BankCredentials.credentialsWithMissingKey.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BankCredentials.credentialsWithMissingKey.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*BankCredentials.credentialsWithMissingKey.modify())()
{
  return nullsub_1;
}

FinanceKit::BankCredentials __swiftcall BankCredentials.init(credentials:credentialsWithInvalidData:credentialsWithMissingKey:)(Swift::OpaquePointer credentials, Swift::OpaquePointer credentialsWithInvalidData, Swift::OpaquePointer credentialsWithMissingKey)
{
  Swift::OpaquePointer *v3;
  FinanceKit::BankCredentials result;

  v3->_rawValue = credentials._rawValue;
  v3[1]._rawValue = credentialsWithInvalidData._rawValue;
  v3[2]._rawValue = credentialsWithMissingKey._rawValue;
  result.credentialsWithMissingKey = credentialsWithMissingKey;
  result.credentialsWithInvalidData = credentialsWithInvalidData;
  result.credentials = credentials;
  return result;
}

uint64_t sub_23352182C()
{
  _BYTE *v0;
  int v1;
  unint64_t v2;

  v1 = *v0;
  if (v1 == 1)
    v2 = 0xD00000000000001ALL;
  else
    v2 = 0xD000000000000019;
  if (*v0)
    return v2;
  else
    return 0x69746E6564657263;
}

uint64_t sub_233521898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23352451C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2335218BC()
{
  sub_233522118();
  return sub_23361F428();
}

uint64_t sub_2335218E4()
{
  sub_233522118();
  return sub_23361F434();
}

uint64_t BankCredentials.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054148);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233522118();
  sub_23361F410();
  v16 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054158);
  sub_2335221E0(&qword_256054160, &qword_256050AE8, (uint64_t)&protocol conformance descriptor for BankCredential, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  if (!v2)
  {
    v10 = v13;
    v16 = v14;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256054168);
    sub_23352215C(&qword_256054170, &qword_256054178, (uint64_t)&protocol conformance descriptor for BankCredential.SealedBox, MEMORY[0x24BEE12A0]);
    sub_23361F17C();
    v16 = v10;
    v15 = 2;
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BankCredentials.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054180);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233522118();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054158);
  v18 = 0;
  sub_2335221E0(&qword_256054188, &qword_256050B88, (uint64_t)&protocol conformance descriptor for BankCredential, MEMORY[0x24BEE12D0]);
  sub_23361F068();
  v16 = a2;
  v9 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054168);
  v18 = 1;
  v10 = sub_23352215C(&qword_256054190, &qword_256054198, (uint64_t)&protocol conformance descriptor for BankCredential.SealedBox, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  v17 = v10;
  sub_23361F068();
  v18 = 2;
  v15 = v19;
  swift_bridgeObjectRetain();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v15;
  v12 = v16;
  *v16 = v9;
  v12[1] = v13;
  v12[2] = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233521DA4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return BankCredentials.init(from:)(a1, a2);
}

uint64_t sub_233521DB8(_QWORD *a1)
{
  return BankCredentials.encode(to:)(a1);
}

uint64_t _s10FinanceKit14BankCredentialO3ACHV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;

  if ((sub_23361D670() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for BankCredential.ACH(0);
  v5 = v4[5];
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (v7)
  {
    if (!v9)
      return 0;
    v10 = *v6 == *v8 && v7 == v9;
    if (!v10 && (sub_23361F224() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  v11 = v4[6];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v12 == *v14 && v13 == v14[1];
  if (v15 || (sub_23361F224() & 1) != 0)
  {
    v16 = v4[7];
    v17 = *(_QWORD *)(a1 + v16);
    v18 = *(_QWORD *)(a1 + v16 + 8);
    v19 = (_QWORD *)(a2 + v16);
    v20 = v17 == *v19 && v18 == v19[1];
    if (v20 || (sub_23361F224() & 1) != 0)
      return sub_23361D5E0();
  }
  return 0;
}

uint64_t type metadata accessor for BankCredential.SealedBox(uint64_t a1)
{
  return sub_233177414(a1, qword_256054228);
}

unint64_t sub_233521ED8()
{
  unint64_t result;

  result = qword_2560540D8;
  if (!qword_2560540D8)
  {
    result = MEMORY[0x234934494](&unk_233658AB4, &type metadata for BankCredential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560540D8);
  }
  return result;
}

unint64_t sub_233521F1C()
{
  unint64_t result;

  result = qword_2560540E0;
  if (!qword_2560540E0)
  {
    result = MEMORY[0x234934494](&unk_233658A64, &type metadata for BankCredential.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560540E0);
  }
  return result;
}

unint64_t sub_233521F60()
{
  unint64_t result;

  result = qword_256054110;
  if (!qword_256054110)
  {
    result = MEMORY[0x234934494](&unk_233658A14, &type metadata for BankCredential.SealedBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054110);
  }
  return result;
}

unint64_t sub_233521FA4()
{
  unint64_t result;

  result = qword_256054118;
  if (!qword_256054118)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankCredential.CredentialType, &type metadata for BankCredential.CredentialType);
    atomic_store(result, (unint64_t *)&qword_256054118);
  }
  return result;
}

unint64_t sub_233521FE8()
{
  unint64_t result;

  result = qword_256054128;
  if (!qword_256054128)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankCredential.CredentialType, &type metadata for BankCredential.CredentialType);
    atomic_store(result, (unint64_t *)&qword_256054128);
  }
  return result;
}

uint64_t _s10FinanceKit19BankCredentialErrorO2eeoiySbAC_ACtFZ_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (*a1)
    v2 = 0x4E676E6974756F72;
  else
    v2 = 0x4E746E756F636361;
  if (*a2)
    v3 = 0x4E676E6974756F72;
  else
    v3 = 0x4E746E756F636361;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23361F224();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

unint64_t sub_2335220D4()
{
  unint64_t result;

  result = qword_256054138;
  if (!qword_256054138)
  {
    result = MEMORY[0x234934494](&unk_2336589C4, &type metadata for BankCredential.ACH.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054138);
  }
  return result;
}

unint64_t sub_233522118()
{
  unint64_t result;

  result = qword_256054150;
  if (!qword_256054150)
  {
    result = MEMORY[0x234934494](&unk_233658974, &type metadata for BankCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054150);
  }
  return result;
}

uint64_t sub_23352215C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256054168);
    v10 = sub_233167C58(a2, type metadata accessor for BankCredential.SealedBox, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2335221E0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256054158);
    v10 = sub_233167C58(a2, type metadata accessor for BankCredential, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233522264()
{
  return sub_233167C58(&qword_2560541A0, type metadata accessor for BankCredential, (uint64_t)&protocol conformance descriptor for BankCredential);
}

unint64_t sub_233522294()
{
  unint64_t result;

  result = qword_2560541A8;
  if (!qword_2560541A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankCredentialError.FieldName, &type metadata for BankCredentialError.FieldName);
    atomic_store(result, (unint64_t *)&qword_2560541A8);
  }
  return result;
}

unint64_t sub_2335222DC()
{
  unint64_t result;

  result = qword_2560541B0;
  if (!qword_2560541B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankCredential.CredentialType, &type metadata for BankCredential.CredentialType);
    atomic_store(result, (unint64_t *)&qword_2560541B0);
  }
  return result;
}

unint64_t sub_233522324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560541B8;
  if (!qword_2560541B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560541C0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2560541B8);
  }
  return result;
}

uint64_t sub_233522370()
{
  return sub_233167C58(&qword_2560541C8, type metadata accessor for BankCredential.ACH, (uint64_t)&protocol conformance descriptor for BankCredential.ACH);
}

uint64_t *initializeBufferWithCopyOfBuffer for BankCredential(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for BankCredential.ACH(0);
    v8 = v7[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v7[6];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v7[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v7[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23361D634();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for BankCredential(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for BankCredential.ACH(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(v3 + 32);
  v5 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for BankCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankCredential.ACH(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = v5[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = v5[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v5[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23361D634();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for BankCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankCredential.ACH(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = v5[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v5[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v5[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for BankCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankCredential.ACH(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  v6 = v5[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for BankCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankCredential.ACH(0);
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v11 = v5[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = v5[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankCredential()
{
  type metadata accessor for BankCredential.ACH(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for BankCredential()
{
  type metadata accessor for BankCredential.ACH(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233522940(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for BankCredential.ACH(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankCredential.SealedBox(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    sub_2331D1374(v16, v17);
    *v14 = v16;
    v14[1] = v17;
    v18 = a3[8];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
  }
  return a1;
}

uint64_t destroy for BankCredential.SealedBox(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23361D6A0();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  sub_23316BEA4(*(_QWORD *)(a1 + a2[7]), *(_QWORD *)(a1 + a2[7] + 8));
  v5 = a1 + a2[8];
  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + a2[9], v4);
}

uint64_t initializeWithCopy for BankCredential.SealedBox(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23361D6A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[7];
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  swift_bridgeObjectRetain();
  sub_2331D1374(v15, v16);
  *v13 = v15;
  v13[1] = v16;
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t assignWithCopy for BankCredential.SealedBox(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23361D6A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  v15 = v13[1];
  sub_2331D1374(*v13, v15);
  v16 = *v12;
  v17 = v12[1];
  *v12 = v14;
  v12[1] = v15;
  sub_23316BEA4(v16, v17);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t initializeWithTake for BankCredential.SealedBox(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23361D6A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t assignWithTake for BankCredential.SealedBox(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23361D6A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = *(_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  sub_23316BEA4(v14, v15);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankCredential.SealedBox()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233522EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for BankCredential.SealedBox()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233522F84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v10 = sub_23361D634();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23352302C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BankCredentialError()
{
  return &type metadata for BankCredentialError;
}

uint64_t _s10FinanceKit19BankCredentialErrorO9FieldNameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233523130 + 4 * byte_233657FC0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233523164 + 4 * byte_233657FBB[v4]))();
}

uint64_t sub_233523164(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23352316C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233523174);
  return result;
}

uint64_t sub_233523180(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233523188);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23352318C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523194(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankCredentialError.FieldName()
{
  return &type metadata for BankCredentialError.FieldName;
}

ValueMetadata *type metadata accessor for BankCredential.CredentialType()
{
  return &type metadata for BankCredential.CredentialType;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankCredential.ACH(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v23 = sub_23361D634();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for BankCredential.ACH(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for BankCredential.ACH(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = sub_23361D634();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for BankCredential.ACH(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for BankCredential.ACH(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for BankCredential.ACH(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankCredential.ACH()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23361D634();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for BankCredential.ACH()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_23361D634();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_233523810()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BankCredentials()
{
  return &type metadata for BankCredentials;
}

uint64_t storeEnumTagSinglePayload for BankCredentials.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233523904 + 4 * byte_233657FCA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233523938 + 4 * byte_233657FC5[v4]))();
}

uint64_t sub_233523938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233523948);
  return result;
}

uint64_t sub_233523954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23352395CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233523960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankCredentials.CodingKeys()
{
  return &type metadata for BankCredentials.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for BankCredential.ACH.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2335239D0 + 4 * byte_233657FD4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_233523A04 + 4 * byte_233657FCF[v4]))();
}

uint64_t sub_233523A04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233523A14);
  return result;
}

uint64_t sub_233523A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233523A28);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233523A2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523A34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankCredential.ACH.CodingKeys()
{
  return &type metadata for BankCredential.ACH.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for BankCredential.SealedBox.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233523A9C + 4 * byte_233657FDE[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233523AD0 + 4 * byte_233657FD9[v4]))();
}

uint64_t sub_233523AD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523AD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233523AE0);
  return result;
}

uint64_t sub_233523AEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233523AF4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233523AF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233523B00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankCredential.SealedBox.CodingKeys()
{
  return &type metadata for BankCredential.SealedBox.CodingKeys;
}

ValueMetadata *type metadata accessor for BankCredential.CodingKeys()
{
  return &type metadata for BankCredential.CodingKeys;
}

uint64_t _s10FinanceKit14BankCredentialO14CredentialTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233523B6C + 4 * byte_233657FE3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233523B8C + 4 * byte_233657FE8[v4]))();
}

_BYTE *sub_233523B6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233523B8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233523B94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233523B9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233523BA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233523BAC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankCredential.AchCodingKeys()
{
  return &type metadata for BankCredential.AchCodingKeys;
}

unint64_t sub_233523BCC()
{
  unint64_t result;

  result = qword_256054270;
  if (!qword_256054270)
  {
    result = MEMORY[0x234934494](&unk_23365866C, &type metadata for BankCredential.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054270);
  }
  return result;
}

unint64_t sub_233523C14()
{
  unint64_t result;

  result = qword_256054278;
  if (!qword_256054278)
  {
    result = MEMORY[0x234934494](&unk_233658724, &type metadata for BankCredential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054278);
  }
  return result;
}

unint64_t sub_233523C5C()
{
  unint64_t result;

  result = qword_256054280;
  if (!qword_256054280)
  {
    result = MEMORY[0x234934494](&unk_2336587DC, &type metadata for BankCredential.SealedBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054280);
  }
  return result;
}

unint64_t sub_233523CA4()
{
  unint64_t result;

  result = qword_256054288;
  if (!qword_256054288)
  {
    result = MEMORY[0x234934494](&unk_233658894, &type metadata for BankCredential.ACH.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054288);
  }
  return result;
}

unint64_t sub_233523CEC()
{
  unint64_t result;

  result = qword_256054290;
  if (!qword_256054290)
  {
    result = MEMORY[0x234934494](&unk_23365894C, &type metadata for BankCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054290);
  }
  return result;
}

unint64_t sub_233523D34()
{
  unint64_t result;

  result = qword_256054298;
  if (!qword_256054298)
  {
    result = MEMORY[0x234934494](&unk_2336588BC, &type metadata for BankCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054298);
  }
  return result;
}

unint64_t sub_233523D7C()
{
  unint64_t result;

  result = qword_2560542A0;
  if (!qword_2560542A0)
  {
    result = MEMORY[0x234934494](&unk_2336588E4, &type metadata for BankCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542A0);
  }
  return result;
}

unint64_t sub_233523DC4()
{
  unint64_t result;

  result = qword_2560542A8;
  if (!qword_2560542A8)
  {
    result = MEMORY[0x234934494](&unk_233658804, &type metadata for BankCredential.ACH.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542A8);
  }
  return result;
}

unint64_t sub_233523E0C()
{
  unint64_t result;

  result = qword_2560542B0;
  if (!qword_2560542B0)
  {
    result = MEMORY[0x234934494](&unk_23365882C, &type metadata for BankCredential.ACH.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542B0);
  }
  return result;
}

unint64_t sub_233523E54()
{
  unint64_t result;

  result = qword_2560542B8;
  if (!qword_2560542B8)
  {
    result = MEMORY[0x234934494](&unk_23365874C, &type metadata for BankCredential.SealedBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542B8);
  }
  return result;
}

unint64_t sub_233523E9C()
{
  unint64_t result;

  result = qword_2560542C0;
  if (!qword_2560542C0)
  {
    result = MEMORY[0x234934494](&unk_233658774, &type metadata for BankCredential.SealedBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542C0);
  }
  return result;
}

unint64_t sub_233523EE4()
{
  unint64_t result;

  result = qword_2560542C8;
  if (!qword_2560542C8)
  {
    result = MEMORY[0x234934494](&unk_2336585DC, &type metadata for BankCredential.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542C8);
  }
  return result;
}

unint64_t sub_233523F2C()
{
  unint64_t result;

  result = qword_2560542D0;
  if (!qword_2560542D0)
  {
    result = MEMORY[0x234934494](&unk_233658604, &type metadata for BankCredential.AchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542D0);
  }
  return result;
}

unint64_t sub_233523F74()
{
  unint64_t result;

  result = qword_2560542D8;
  if (!qword_2560542D8)
  {
    result = MEMORY[0x234934494](&unk_233658694, &type metadata for BankCredential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542D8);
  }
  return result;
}

unint64_t sub_233523FBC()
{
  unint64_t result;

  result = qword_2560542E0;
  if (!qword_2560542E0)
  {
    result = MEMORY[0x234934494](&unk_2336586BC, &type metadata for BankCredential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542E0);
  }
  return result;
}

uint64_t sub_233524000(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E6B63696ELL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEE00657079546C61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023367A3A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464657461647075 && a2 == 0xEB00000000657461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E65644979656BLL && a2 == 0xED00007265696669)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2335242C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E6B63696ELL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E676E6974756F72 && a2 == 0xED00007265626D75 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E746E756F636361 && a2 == 0xED00007265626D75 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464657461647075 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23352451C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023367A3C0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023367A3E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_233524680()
{
  unint64_t result;

  result = qword_2560542E8;
  if (!qword_2560542E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankCredential.CredentialType, &type metadata for BankCredential.CredentialType);
    atomic_store(result, (unint64_t *)&qword_2560542E8);
  }
  return result;
}

id CLLocation.init(_:)(double *a1)
{
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  id v9;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  type metadata accessor for ApplePayTransactionInsight.Location(0);
  v8 = (void *)sub_23361D5B0();
  v9 = objc_msgSend(v2, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v8, v3, v4, v5, v6, v7);

  sub_233168500((uint64_t)a1, type metadata accessor for ApplePayTransactionInsight.Location);
  return v9;
}

uint64_t type metadata accessor for ApplePayTransactionInsight.Location(uint64_t a1)
{
  return sub_233177414(a1, qword_256054480);
}

uint64_t ApplePayTransactionInsight.init(paymentHash:transactionDate:merchantName:merchantRawName:industryCategory:industryCode:merchantType:merchantCountryCode:terminalIdentifier:merchantAdditionalData:paymentNetwork:isCoarseLocation:location:merchantIdentifier:merchantRawCANL:merchantRawCity:merchantRawState:merchantRawCountry:merchantCity:merchantZip:merchantState:merchantCleanConfidenceLevel:adamIdentifier:webURL:webMerchantIdentifier:webMerchantName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,__int16 a41,char a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t result;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  char *v82;

  v50 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
  v51 = (char *)a9 + v50[5];
  v67 = (uint64_t)v51;
  v52 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
  v53 = (_QWORD *)((char *)a9 + v50[6]);
  *v53 = 0;
  v53[1] = 0;
  v54 = (_QWORD *)((char *)a9 + v50[7]);
  *v54 = 0;
  v54[1] = 0;
  v55 = (_QWORD *)((char *)a9 + v50[8]);
  *v55 = 0;
  v55[1] = 0;
  v68 = (char *)a9 + v50[9];
  *(_WORD *)v68 = 0;
  v68[2] = 1;
  v56 = (_QWORD *)((char *)a9 + v50[10]);
  *v56 = 0;
  v56[1] = 0;
  v57 = (_QWORD *)((char *)a9 + v50[11]);
  *v57 = 0;
  v57[1] = 0;
  v58 = (_QWORD *)((char *)a9 + v50[12]);
  *v58 = 0;
  v58[1] = 0;
  v70 = (_QWORD *)((char *)a9 + v50[13]);
  *v70 = 0;
  v70[1] = 0;
  v73 = (_QWORD *)((char *)a9 + v50[14]);
  *v73 = 0;
  v73[1] = 0;
  v76 = v50[15];
  *((_BYTE *)a9 + v76) = 2;
  v59 = (char *)a9 + v50[16];
  v71 = (uint64_t)v59;
  v60 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = (_QWORD *)((char *)a9 + v50[17]);
  *v61 = 0;
  v61[1] = 0;
  v69 = (_QWORD *)((char *)a9 + v50[18]);
  *v69 = 0;
  v69[1] = 0;
  v72 = (_QWORD *)((char *)a9 + v50[19]);
  *v72 = 0;
  v72[1] = 0;
  v74 = (_QWORD *)((char *)a9 + v50[20]);
  *v74 = 0;
  v74[1] = 0;
  v75 = (_QWORD *)((char *)a9 + v50[21]);
  *v75 = 0;
  v75[1] = 0;
  v77 = (_QWORD *)((char *)a9 + v50[22]);
  *v77 = 0;
  v77[1] = 0;
  v78 = (_QWORD *)((char *)a9 + v50[23]);
  *v78 = 0;
  v78[1] = 0;
  v80 = (_QWORD *)((char *)a9 + v50[24]);
  *v80 = 0;
  v80[1] = 0;
  v82 = (char *)a9 + v50[25];
  *(_WORD *)v82 = 0;
  v82[2] = 1;
  v81 = (char *)a9 + v50[26];
  *(_QWORD *)v81 = 0;
  v81[8] = 1;
  v62 = (char *)a9 + v50[27];
  v79 = (uint64_t)v62;
  v63 = sub_23361D340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 1, 1, v63);
  v64 = (_QWORD *)((char *)a9 + v50[28]);
  *v64 = 0;
  v64[1] = 0;
  v65 = (_QWORD *)((char *)a9 + v50[29]);
  *v65 = 0;
  v65[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_233170B8C(a3, v67, (uint64_t *)&unk_254247DA0);
  swift_bridgeObjectRelease();
  *v53 = a4;
  v53[1] = a5;
  swift_bridgeObjectRelease();
  *v54 = a6;
  v54[1] = a7;
  swift_bridgeObjectRelease();
  *v55 = a8;
  v55[1] = a10;
  *(_WORD *)v68 = a11;
  v68[2] = a12 & 1;
  swift_bridgeObjectRelease();
  *v56 = a13;
  v56[1] = a14;
  swift_bridgeObjectRelease();
  *v57 = a15;
  v57[1] = a16;
  swift_bridgeObjectRelease();
  *v58 = a17;
  v58[1] = a18;
  swift_bridgeObjectRelease();
  *v70 = a19;
  v70[1] = a20;
  swift_bridgeObjectRelease();
  *v73 = a21;
  v73[1] = a22;
  *((_BYTE *)a9 + v76) = a23;
  sub_233170B8C(a24, v71, &qword_256055AE0);
  swift_bridgeObjectRelease();
  *v61 = a25;
  v61[1] = a26;
  swift_bridgeObjectRelease();
  *v69 = a27;
  v69[1] = a28;
  swift_bridgeObjectRelease();
  *v72 = a29;
  v72[1] = a30;
  swift_bridgeObjectRelease();
  *v74 = a31;
  v74[1] = a32;
  swift_bridgeObjectRelease();
  *v75 = a33;
  v75[1] = a34;
  swift_bridgeObjectRelease();
  *v77 = a35;
  v77[1] = a36;
  swift_bridgeObjectRelease();
  *v78 = a37;
  v78[1] = a38;
  swift_bridgeObjectRelease();
  *v80 = a39;
  v80[1] = a40;
  *(_WORD *)v82 = a41;
  v82[2] = a42 & 1;
  *(_QWORD *)v81 = a43;
  v81[8] = a44 & 1;
  sub_233170B8C(a45, v79, &qword_254248700);
  swift_bridgeObjectRelease();
  *v64 = a46;
  v64[1] = a47;
  result = swift_bridgeObjectRelease();
  *v65 = a48;
  v65[1] = a49;
  return result;
}

uint64_t type metadata accessor for ApplePayTransactionInsight(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256054388);
}

double ApplePayTransactionInsight.Location.latitude.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ApplePayTransactionInsight.Location.latitude.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*ApplePayTransactionInsight.Location.latitude.modify())()
{
  return nullsub_1;
}

double ApplePayTransactionInsight.Location.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void ApplePayTransactionInsight.Location.longitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*ApplePayTransactionInsight.Location.longitude.modify())()
{
  return nullsub_1;
}

double ApplePayTransactionInsight.Location.altitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void ApplePayTransactionInsight.Location.altitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*ApplePayTransactionInsight.Location.altitude.modify())()
{
  return nullsub_1;
}

double ApplePayTransactionInsight.Location.horizontalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void ApplePayTransactionInsight.Location.horizontalAccuracy.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*ApplePayTransactionInsight.Location.horizontalAccuracy.modify())()
{
  return nullsub_1;
}

double ApplePayTransactionInsight.Location.verticalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ApplePayTransactionInsight.Location.verticalAccuracy.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ApplePayTransactionInsight.Location.verticalAccuracy.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.Location.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ApplePayTransactionInsight.Location(0) + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ApplePayTransactionInsight.Location.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ApplePayTransactionInsight.Location(0) + 36);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ApplePayTransactionInsight.Location.timestamp.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight.Location(0);
  return nullsub_1;
}

uint64_t sub_233524E7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233524EB0 + 4 * byte_233658B10[a1]))(0x656475746974616CLL, 0xE800000000000000);
}

uint64_t sub_233524EB0()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_233524ECC(uint64_t a1)
{
  return a1 + 2805;
}

unint64_t sub_233524ED4()
{
  return 0xD000000000000012;
}

unint64_t sub_233524EF4()
{
  return 0xD000000000000010;
}

uint64_t sub_233524F10()
{
  return 0x6D617473656D6974;
}

uint64_t sub_233524F30()
{
  unsigned __int8 *v0;

  return sub_233524E7C(*v0);
}

uint64_t sub_233524F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23352B2E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233524F5C()
{
  sub_233527DA0();
  return sub_23361F428();
}

uint64_t sub_233524F84()
{
  sub_233527DA0();
  return sub_23361F434();
}

uint64_t ApplePayTransactionInsight.Location.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560542F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233527DA0();
  sub_23361F410();
  v8[15] = 0;
  sub_23361F158();
  if (!v1)
  {
    v8[14] = 1;
    sub_23361F158();
    v8[13] = 2;
    sub_23361F158();
    v8[12] = 3;
    sub_23361F158();
    v8[11] = 4;
    sub_23361F158();
    type metadata accessor for ApplePayTransactionInsight.Location(0);
    v8[10] = 5;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ApplePayTransactionInsight.Location.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v26 = a2;
  v27 = sub_23361D634();
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054300);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_233527DA0();
  v29 = v8;
  v13 = v31;
  sub_23361F3EC();
  if (v13)
  {
    v22 = (uint64_t)v30;
  }
  else
  {
    v31 = v9;
    v14 = v5;
    v15 = v3;
    v17 = v27;
    v16 = v28;
    v37 = 0;
    sub_23361F044();
    *(_QWORD *)v11 = v18;
    v36 = 1;
    sub_23361F044();
    *((_QWORD *)v11 + 1) = v19;
    v35 = 2;
    sub_23361F044();
    *((_QWORD *)v11 + 2) = v20;
    v34 = 3;
    sub_23361F044();
    *((_QWORD *)v11 + 3) = v21;
    v33 = 4;
    sub_23361F044();
    *((_QWORD *)v11 + 4) = v24;
    v32 = 5;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v25 = v29;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v16);
    v22 = (uint64_t)v30;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v11[*(int *)(v31 + 36)], v14, v17);
    sub_233527DE4((uint64_t)v11, v26);
  }
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

uint64_t sub_233525470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ApplePayTransactionInsight.Location.init(from:)(a1, a2);
}

uint64_t sub_233525484(_QWORD *a1)
{
  return ApplePayTransactionInsight.Location.encode(to:)(a1);
}

uint64_t ApplePayTransactionInsight.paymentHash.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.paymentHash.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.paymentHash.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.transactionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ApplePayTransactionInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t ApplePayTransactionInsight.transactionDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ApplePayTransactionInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_254247DA0);
}

uint64_t (*ApplePayTransactionInsight.transactionDate.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantName.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantRawName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantRawName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantRawName.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.industryCategory.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.industryCategory.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.industryCategory.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.industryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ApplePayTransactionInsight(0);
  return *(unsigned __int16 *)(v0 + *(int *)(v1 + 36)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 36) + 2) << 16);
}

uint64_t ApplePayTransactionInsight.industryCode.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for ApplePayTransactionInsight(0);
  v4 = v1 + *(int *)(result + 36);
  *(_WORD *)v4 = a1;
  *(_BYTE *)(v4 + 2) = BYTE2(a1) & 1;
  return result;
}

uint64_t (*ApplePayTransactionInsight.industryCode.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantType.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantCountryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantCountryCode.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.terminalIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.terminalIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.terminalIdentifier.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantAdditionalData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantAdditionalData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantAdditionalData.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.paymentNetwork.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.paymentNetwork.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.paymentNetwork.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.isCoarseLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 60));
}

uint64_t ApplePayTransactionInsight.isCoarseLocation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ApplePayTransactionInsight(0);
  *(_BYTE *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*ApplePayTransactionInsight.isCoarseLocation.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ApplePayTransactionInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 64), a1, &qword_256055AE0);
}

uint64_t ApplePayTransactionInsight.location.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ApplePayTransactionInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 64), &qword_256055AE0);
}

uint64_t (*ApplePayTransactionInsight.location.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 68));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantIdentifier.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantRawCANL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantRawCANL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 72));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantRawCANL.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantRawCity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantRawCity.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantRawCity.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantRawState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantRawState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 80));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantRawState.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantRawCountry.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantRawCountry.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantRawCountry.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantCity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantCity.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 88));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantCity.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantZip.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantZip.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 92));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantZip.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 96));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.merchantState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 96));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantState.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.merchantCleanConfidenceLevel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ApplePayTransactionInsight(0);
  return *(unsigned __int16 *)(v0 + *(int *)(v1 + 100)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 100) + 2) << 16);
}

uint64_t ApplePayTransactionInsight.merchantCleanConfidenceLevel.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for ApplePayTransactionInsight(0);
  v4 = v1 + *(int *)(result + 100);
  *(_WORD *)v4 = a1;
  *(_BYTE *)(v4 + 2) = BYTE2(a1) & 1;
  return result;
}

uint64_t (*ApplePayTransactionInsight.merchantCleanConfidenceLevel.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.adamIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 104));
}

uint64_t ApplePayTransactionInsight.adamIdentifier.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for ApplePayTransactionInsight(0);
  v6 = v2 + *(int *)(result + 104);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ApplePayTransactionInsight.adamIdentifier.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.webURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ApplePayTransactionInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 108), a1, &qword_254248700);
}

uint64_t ApplePayTransactionInsight.webURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ApplePayTransactionInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 108), &qword_254248700);
}

uint64_t (*ApplePayTransactionInsight.webURL.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.webMerchantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 112));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.webMerchantIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 112));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.webMerchantIdentifier.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t ApplePayTransactionInsight.webMerchantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 116));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplePayTransactionInsight.webMerchantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ApplePayTransactionInsight(0) + 116));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ApplePayTransactionInsight.webMerchantName.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInsight(0);
  return nullsub_1;
}

uint64_t sub_2335264EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233526528 + 4 * byte_233658B16[a1]))(0x48746E656D796170, 0xEB00000000687361);
}

uint64_t sub_233526528()
{
  return 0x746361736E617274;
}

uint64_t sub_23352654C()
{
  return 0x746E61686372656DLL;
}

unint64_t sub_2335266EC()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_233526704()
{
  return 0x6E6564496D616461;
}

uint64_t sub_233526728()
{
  return 0x4C5255626577;
}

void sub_23352673C()
{
  JUMPOUT(0x233526754);
}

uint64_t sub_233526760()
{
  return 0x686372654D626577;
}

uint64_t sub_233526784()
{
  unsigned __int8 *v0;

  return sub_2335264EC(*v0);
}

uint64_t sub_23352678C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23352B53C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2335267B0(_BYTE *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_2335267BC()
{
  sub_233528E14();
  return sub_23361F428();
}

uint64_t sub_2335267E4()
{
  sub_233528E14();
  return sub_23361F434();
}

uint64_t ApplePayTransactionInsight.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054308);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233528E14();
  sub_23361F410();
  v9 = 0;
  sub_23361F140();
  if (!v1)
  {
    type metadata accessor for ApplePayTransactionInsight(0);
    v9 = 1;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    v9 = 2;
    sub_23361F0E0();
    v9 = 3;
    sub_23361F0E0();
    v9 = 4;
    sub_23361F0E0();
    v9 = 5;
    sub_23361F11C();
    v9 = 6;
    sub_23361F0E0();
    v9 = 7;
    sub_23361F0E0();
    v9 = 8;
    sub_23361F0E0();
    v9 = 9;
    sub_23361F0E0();
    v9 = 10;
    sub_23361F0E0();
    v9 = 11;
    sub_23361F0EC();
    v9 = 12;
    type metadata accessor for ApplePayTransactionInsight.Location(0);
    sub_233167C58(&qword_256054318, type metadata accessor for ApplePayTransactionInsight.Location, (uint64_t)&protocol conformance descriptor for ApplePayTransactionInsight.Location);
    sub_23361F110();
    v9 = 13;
    sub_23361F0E0();
    v9 = 14;
    sub_23361F0E0();
    v9 = 15;
    sub_23361F0E0();
    v9 = 16;
    sub_23361F0E0();
    v9 = 17;
    sub_23361F0E0();
    v9 = 18;
    sub_23361F0E0();
    v9 = 19;
    sub_23361F0E0();
    v9 = 20;
    sub_23361F0E0();
    v9 = 21;
    sub_23361F11C();
    v9 = 22;
    sub_23361F134();
    v9 = 23;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    v9 = 24;
    sub_23361F0E0();
    v9 = 25;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ApplePayTransactionInsight.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  char *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _WORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  _WORD *v119;
  uint64_t v120;
  uint64_t *v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  _WORD *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _WORD *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t *v150;
  uint64_t *v151;
  uint64_t *v152;
  uint64_t *v153;
  uint64_t *v154;
  _QWORD *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t *v159;
  uint64_t *v160;
  uint64_t *v161;
  uint64_t *v162;
  uint64_t *v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t *v166;
  char *v167;
  char v168;

  v136 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v3);
  v135 = (uint64_t)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
  MEMORY[0x24BDAC7A8](v5);
  v138 = (uint64_t)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v7);
  v141 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054320);
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v167 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t)v13 + *(int *)(v11 + 20);
  v15 = sub_23361D634();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v165 = v14;
  v140 = v15;
  v16(v14, 1, 1);
  v17 = (uint64_t *)((char *)v13 + v10[6]);
  *v17 = 0;
  v17[1] = 0;
  v164 = v17;
  v18 = (uint64_t *)((char *)v13 + v10[7]);
  *v18 = 0;
  v18[1] = 0;
  v163 = v18;
  v19 = (uint64_t *)((char *)v13 + v10[8]);
  *v19 = 0;
  v19[1] = 0;
  v162 = v19;
  v20 = (char *)v13 + v10[9];
  *(_WORD *)v20 = 0;
  v139 = v20;
  v20[2] = 1;
  v21 = (uint64_t *)((char *)v13 + v10[10]);
  *v21 = 0;
  v21[1] = 0;
  v161 = v21;
  v22 = (uint64_t *)((char *)v13 + v10[11]);
  *v22 = 0;
  v22[1] = 0;
  v166 = v22;
  v23 = (uint64_t *)((char *)v13 + v10[12]);
  *v23 = 0;
  v23[1] = 0;
  v160 = v23;
  v24 = (uint64_t *)((char *)v13 + v10[13]);
  *v24 = 0;
  v24[1] = 0;
  v159 = v24;
  v25 = (uint64_t *)((char *)v13 + v10[14]);
  *v25 = 0;
  v25[1] = 0;
  v158 = v25;
  v137 = v10[15];
  *((_BYTE *)v13 + v137) = 2;
  v26 = (uint64_t)v13 + v10[16];
  v27 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v157 = v26;
  v28(v26, 1, 1, v27);
  v29 = (uint64_t *)((char *)v13 + v10[17]);
  *v29 = 0;
  v29[1] = 0;
  v156 = v29;
  v30 = (uint64_t *)((char *)v13 + v10[18]);
  *v30 = 0;
  v30[1] = 0;
  v154 = v30;
  v31 = (uint64_t *)((char *)v13 + v10[19]);
  *v31 = 0;
  v31[1] = 0;
  v153 = v31;
  v32 = (uint64_t *)((char *)v13 + v10[20]);
  *v32 = 0;
  v32[1] = 0;
  v152 = v32;
  v33 = (uint64_t *)((char *)v13 + v10[21]);
  *v33 = 0;
  v33[1] = 0;
  v151 = v33;
  v34 = (uint64_t *)((char *)v13 + v10[22]);
  *v34 = 0;
  v34[1] = 0;
  v150 = v34;
  v35 = (uint64_t *)((char *)v13 + v10[23]);
  *v35 = 0;
  v35[1] = 0;
  v149 = v35;
  v36 = (uint64_t *)((char *)v13 + v10[24]);
  *v36 = 0;
  v36[1] = 0;
  v148 = v36;
  v37 = (char *)v13 + v10[25];
  *(_WORD *)v37 = 0;
  v37[2] = 1;
  v38 = (uint64_t *)((char *)v13 + v10[26]);
  *v38 = 0;
  *((_BYTE *)v38 + 8) = 1;
  v39 = (uint64_t)v13 + v10[27];
  v40 = sub_23361D340();
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v146 = v39;
  v41(v39, 1, 1, v40);
  v42 = (uint64_t *)((char *)v13 + v10[28]);
  *v42 = 0;
  v42[1] = 0;
  v145 = v42;
  v43 = (uint64_t *)((char *)v13 + v10[29]);
  *v43 = 0;
  v43[1] = 0;
  v147 = v43;
  v44 = a1[3];
  v155 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v44);
  sub_233528E14();
  v45 = v144;
  sub_23361F3EC();
  if (v45)
  {
    v46 = v165;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
    sub_233168608(v46, (uint64_t *)&unk_254247DA0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608(v157, &qword_256055AE0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608(v146, &qword_254248700);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v47 = (uint64_t)v141;
    v144 = v27;
    v132 = v37;
    v133 = v38;
    v134 = v40;
    v168 = 0;
    v48 = sub_23361F02C();
    v49 = v162;
    *v13 = v48;
    v13[1] = v51;
    v168 = 1;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361EFFC();
    v52 = v164;
    sub_233170B8C(v47, v165, (uint64_t *)&unk_254247DA0);
    v168 = 2;
    v53 = sub_23361EFCC();
    v55 = v54;
    swift_bridgeObjectRelease();
    *v52 = v53;
    v52[1] = v55;
    v168 = 3;
    v56 = sub_23361EFCC();
    v57 = v163;
    v58 = v56;
    v60 = v59;
    swift_bridgeObjectRelease();
    *v57 = v58;
    v57[1] = v60;
    v168 = 4;
    v61 = sub_23361EFCC();
    v63 = v62;
    swift_bridgeObjectRelease();
    *v49 = v61;
    v49[1] = v63;
    v168 = 5;
    v64 = sub_23361F008();
    v65 = v139;
    *v139 = v64;
    *((_BYTE *)v65 + 2) = BYTE2(v64) & 1;
    v168 = 6;
    v66 = sub_23361EFCC();
    v68 = v67;
    v69 = v161;
    swift_bridgeObjectRelease();
    *v69 = v66;
    v69[1] = v68;
    v168 = 7;
    v70 = sub_23361EFCC();
    v71 = v166;
    v141 = v72;
    swift_bridgeObjectRelease();
    v73 = v141;
    *v71 = v70;
    v71[1] = (uint64_t)v73;
    v168 = 8;
    v74 = sub_23361EFCC();
    v76 = v75;
    v77 = v160;
    swift_bridgeObjectRelease();
    *v77 = v74;
    v77[1] = v76;
    v168 = 9;
    v78 = sub_23361EFCC();
    v80 = v79;
    v81 = v159;
    swift_bridgeObjectRelease();
    *v81 = v78;
    v81[1] = v80;
    v168 = 10;
    v82 = sub_23361EFCC();
    v84 = v83;
    v85 = v158;
    swift_bridgeObjectRelease();
    *v85 = v82;
    v85[1] = v84;
    v168 = 11;
    *((_BYTE *)v13 + v137) = sub_23361EFD8();
    v168 = 12;
    sub_233167C58(&qword_256054328, type metadata accessor for ApplePayTransactionInsight.Location, (uint64_t)&protocol conformance descriptor for ApplePayTransactionInsight.Location);
    sub_23361EFFC();
    sub_233170B8C(v138, v157, &qword_256055AE0);
    v168 = 13;
    v86 = sub_23361EFCC();
    v88 = v87;
    v89 = v156;
    swift_bridgeObjectRelease();
    *v89 = v86;
    v89[1] = v88;
    v168 = 14;
    v90 = sub_23361EFCC();
    v92 = v91;
    v93 = v154;
    swift_bridgeObjectRelease();
    *v93 = v90;
    v93[1] = v92;
    v168 = 15;
    v94 = sub_23361EFCC();
    v96 = v95;
    v97 = v153;
    swift_bridgeObjectRelease();
    *v97 = v94;
    v97[1] = v96;
    v168 = 16;
    v98 = sub_23361EFCC();
    v100 = v99;
    v101 = v152;
    swift_bridgeObjectRelease();
    *v101 = v98;
    v101[1] = v100;
    v168 = 17;
    v102 = sub_23361EFCC();
    v104 = v103;
    v105 = v151;
    swift_bridgeObjectRelease();
    *v105 = v102;
    v105[1] = v104;
    v168 = 18;
    v106 = sub_23361EFCC();
    v108 = v107;
    v109 = v150;
    swift_bridgeObjectRelease();
    *v109 = v106;
    v109[1] = v108;
    v168 = 19;
    v110 = sub_23361EFCC();
    v112 = v111;
    v113 = v149;
    swift_bridgeObjectRelease();
    *v113 = v110;
    v113[1] = v112;
    v168 = 20;
    v114 = sub_23361EFCC();
    v116 = v115;
    v117 = v148;
    swift_bridgeObjectRelease();
    *v117 = v114;
    v117[1] = v116;
    v168 = 21;
    v118 = sub_23361F008();
    v119 = v132;
    *v132 = v118;
    *((_BYTE *)v119 + 2) = BYTE2(v118) & 1;
    v168 = 22;
    v120 = sub_23361F020();
    v121 = v133;
    *v133 = v120;
    *((_BYTE *)v121 + 8) = v122 & 1;
    v168 = 23;
    sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_23361EFFC();
    sub_233170B8C(v135, v146, &qword_254248700);
    v168 = 24;
    v123 = sub_23361EFCC();
    v125 = v124;
    v126 = v145;
    swift_bridgeObjectRelease();
    *v126 = v123;
    v126[1] = v125;
    v168 = 25;
    v127 = sub_23361EFCC();
    v129 = v128;
    (*(void (**)(char *, uint64_t))(v142 + 8))(v167, v143);
    v130 = v147;
    swift_bridgeObjectRelease();
    *v130 = v127;
    v130[1] = v129;
    sub_233528E58((uint64_t)v13, v136);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
    return sub_233168500((uint64_t)v13, type metadata accessor for ApplePayTransactionInsight);
  }
}

uint64_t sub_233527C00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ApplePayTransactionInsight.init(from:)(a1, a2);
}

uint64_t sub_233527C14(_QWORD *a1)
{
  return ApplePayTransactionInsight.encode(to:)(a1);
}

void ApplePayTransactionInsight.Location.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  objc_msgSend(a1, sel_coordinate);
  v5 = v4;
  objc_msgSend(a1, sel_coordinate);
  v7 = v6;
  objc_msgSend(a1, sel_altitude);
  v9 = v8;
  objc_msgSend(a1, sel_horizontalAccuracy);
  v11 = v10;
  objc_msgSend(a1, sel_verticalAccuracy);
  v13 = v12;
  v14 = objc_msgSend(a1, sel_timestamp);
  type metadata accessor for ApplePayTransactionInsight.Location(0);
  sub_23361D5EC();

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = v13;
}

uint64_t _s10FinanceKit26ApplePayTransactionInsightV8LocationV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2] || a1[3] != a2[3] || a1[4] != a2[4])
    return 0;
  type metadata accessor for ApplePayTransactionInsight.Location(0);
  return sub_23361D5E0();
}

unint64_t sub_233527DA0()
{
  unint64_t result;

  result = qword_2560542F8;
  if (!qword_2560542F8)
  {
    result = MEMORY[0x234934494](&unk_233658F8C, &type metadata for ApplePayTransactionInsight.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560542F8);
  }
  return result;
}

uint64_t sub_233527DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s10FinanceKit26ApplePayTransactionInsightV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  unsigned __int16 *v70;
  char v71;
  unsigned __int16 *v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  int v105;
  int v106;
  _BOOL4 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  double *v116;
  double *v117;
  char v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  int *v126;
  char v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  int *v135;
  char v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  int *v144;
  char v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  int *v153;
  char v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  int *v162;
  char v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  int *v171;
  char v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  int *v180;
  char v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  int *v189;
  char v190;
  uint64_t v191;
  unsigned __int16 *v192;
  char v193;
  unsigned __int16 *v194;
  int v195;
  uint64_t v196;
  _QWORD *v197;
  char v198;
  _QWORD *v199;
  int v200;
  int *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int (*v206)(uint64_t, uint64_t, uint64_t);
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  void (*v212)(char *, uint64_t);
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  int *v220;
  char v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  double *v237;
  uint64_t v238;
  uint64_t v239;
  double *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int *v245;
  _QWORD *v246;
  _QWORD *v247;

  v236 = sub_23361D340();
  v234 = *(_QWORD *)(v236 - 8);
  MEMORY[0x24BDAC7A8](v236);
  v233 = (char *)&v227 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v229);
  v235 = (uint64_t)&v227 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v232 = (uint64_t)&v227 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v230 = (uint64_t)&v227 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v231 = (uint64_t)&v227 - v11;
  v241 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v239 = *(_QWORD *)(v241 - 8);
  MEMORY[0x24BDAC7A8](v241);
  v237 = (double *)((char *)&v227 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560544F8);
  MEMORY[0x24BDAC7A8](v238);
  v244 = (uint64_t)&v227 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v240 = (double *)((char *)&v227 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v242 = (uint64_t)&v227 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v243 = (uint64_t)&v227 - v19;
  v20 = sub_23361D634();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v227 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v227 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v227 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v227 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v227 - v34;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v36 = sub_23361F224();
    result = 0;
    if ((v36 & 1) == 0)
      return result;
  }
  v228 = v23;
  v38 = type metadata accessor for ApplePayTransactionInsight(0);
  v39 = *(int *)(v38 + 20);
  v246 = a1;
  sub_2331686A0((uint64_t)a1 + v39, (uint64_t)v35, (uint64_t *)&unk_254247DA0);
  v245 = (int *)v38;
  v40 = *(int *)(v38 + 20);
  v247 = a2;
  sub_2331686A0((uint64_t)a2 + v40, (uint64_t)v33, (uint64_t *)&unk_254247DA0);
  v41 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_2331686A0((uint64_t)v35, (uint64_t)v26, (uint64_t *)&unk_254247DA0);
  sub_2331686A0((uint64_t)v33, v41, (uint64_t *)&unk_254247DA0);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v42((uint64_t)v26, 1, v20) == 1)
  {
    sub_233168608((uint64_t)v33, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v35, (uint64_t *)&unk_254247DA0);
    if (v42(v41, 1, v20) == 1)
    {
      sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
      goto LABEL_14;
    }
LABEL_9:
    v43 = &qword_256042DA0;
    v44 = (uint64_t)v26;
LABEL_10:
    sub_233168608(v44, v43);
    return 0;
  }
  sub_2331686A0((uint64_t)v26, (uint64_t)v30, (uint64_t *)&unk_254247DA0);
  if (v42(v41, 1, v20) == 1)
  {
    sub_233168608((uint64_t)v33, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v35, (uint64_t *)&unk_254247DA0);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v20);
    goto LABEL_9;
  }
  v45 = v228;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v228, v41, v20);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v46 = sub_23361E108();
  v47 = *(void (**)(char *, uint64_t))(v21 + 8);
  v47(v45, v20);
  sub_233168608((uint64_t)v33, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v35, (uint64_t *)&unk_254247DA0);
  v47(v30, v20);
  sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
  if ((v46 & 1) == 0)
    return 0;
LABEL_14:
  v49 = v245;
  v48 = v246;
  v50 = v245[6];
  v51 = (_QWORD *)((char *)v246 + v50);
  v52 = *(_QWORD *)((char *)v246 + v50 + 8);
  v53 = v247;
  v54 = (_QWORD *)((char *)v247 + v50);
  v55 = v54[1];
  if (v52)
  {
    if (!v55)
      return 0;
    if (*v51 != *v54 || v52 != v55)
    {
      v56 = sub_23361F224();
      result = 0;
      if ((v56 & 1) == 0)
        return result;
    }
  }
  else if (v55)
  {
    return 0;
  }
  v57 = v49[7];
  v58 = (_QWORD *)((char *)v48 + v57);
  v59 = *(_QWORD *)((char *)v48 + v57 + 8);
  v60 = (_QWORD *)((char *)v53 + v57);
  v61 = v60[1];
  if (v59)
  {
    if (!v61)
      return 0;
    if (*v58 != *v60 || v59 != v61)
    {
      v62 = sub_23361F224();
      result = 0;
      if ((v62 & 1) == 0)
        return result;
    }
  }
  else if (v61)
  {
    return 0;
  }
  v63 = v49[8];
  v64 = (_QWORD *)((char *)v48 + v63);
  v65 = *(_QWORD *)((char *)v48 + v63 + 8);
  v66 = (_QWORD *)((char *)v53 + v63);
  v67 = v66[1];
  if (v65)
  {
    if (!v67)
      return 0;
    if (*v64 != *v66 || v65 != v67)
    {
      v68 = sub_23361F224();
      result = 0;
      if ((v68 & 1) == 0)
        return result;
    }
  }
  else if (v67)
  {
    return 0;
  }
  v69 = v49[9];
  v70 = (unsigned __int16 *)((char *)v48 + v69);
  v71 = *((_BYTE *)v48 + v69 + 2);
  v72 = (unsigned __int16 *)((char *)v53 + v69);
  v73 = *((unsigned __int8 *)v53 + v69 + 2);
  if ((v71 & 1) != 0)
  {
    if (!v73)
      return 0;
  }
  else
  {
    if (*v70 != *v72)
      LOBYTE(v73) = 1;
    if ((v73 & 1) != 0)
      return 0;
  }
  v74 = v49[10];
  v75 = (_QWORD *)((char *)v48 + v74);
  v76 = *(_QWORD *)((char *)v48 + v74 + 8);
  v77 = (_QWORD *)((char *)v53 + v74);
  v78 = v77[1];
  if (v76)
  {
    if (!v78)
      return 0;
    if (*v75 != *v77 || v76 != v78)
    {
      v79 = sub_23361F224();
      result = 0;
      if ((v79 & 1) == 0)
        return result;
    }
  }
  else if (v78)
  {
    return 0;
  }
  v80 = v49[11];
  v81 = (_QWORD *)((char *)v48 + v80);
  v82 = *(_QWORD *)((char *)v48 + v80 + 8);
  v83 = (_QWORD *)((char *)v53 + v80);
  v84 = v83[1];
  if (v82)
  {
    if (!v84)
      return 0;
    if (*v81 != *v83 || v82 != v84)
    {
      v85 = sub_23361F224();
      result = 0;
      if ((v85 & 1) == 0)
        return result;
    }
  }
  else if (v84)
  {
    return 0;
  }
  v86 = v49[12];
  v87 = (_QWORD *)((char *)v48 + v86);
  v88 = *(_QWORD *)((char *)v48 + v86 + 8);
  v89 = (_QWORD *)((char *)v53 + v86);
  v90 = v89[1];
  if (v88)
  {
    if (!v90)
      return 0;
    if (*v87 != *v89 || v88 != v90)
    {
      v91 = sub_23361F224();
      result = 0;
      if ((v91 & 1) == 0)
        return result;
    }
  }
  else if (v90)
  {
    return 0;
  }
  v92 = v49[13];
  v93 = (_QWORD *)((char *)v48 + v92);
  v94 = *(_QWORD *)((char *)v48 + v92 + 8);
  v95 = (_QWORD *)((char *)v53 + v92);
  v96 = v95[1];
  if (v94)
  {
    if (!v96)
      return 0;
    if (*v93 != *v95 || v94 != v96)
    {
      v97 = sub_23361F224();
      result = 0;
      if ((v97 & 1) == 0)
        return result;
    }
  }
  else if (v96)
  {
    return 0;
  }
  v98 = v49[14];
  v99 = (_QWORD *)((char *)v48 + v98);
  v100 = *(_QWORD *)((char *)v48 + v98 + 8);
  v101 = (_QWORD *)((char *)v53 + v98);
  v102 = v101[1];
  if (v100)
  {
    if (!v102)
      return 0;
    if (*v99 != *v101 || v100 != v102)
    {
      v103 = sub_23361F224();
      result = 0;
      if ((v103 & 1) == 0)
        return result;
    }
  }
  else if (v102)
  {
    return 0;
  }
  v104 = v49[15];
  v105 = *((unsigned __int8 *)v48 + v104);
  v106 = *((unsigned __int8 *)v53 + v104);
  if (v105 == 2)
  {
    if (v106 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v107 = (v105 & 1) == 0;
    if (v106 == 2 || ((v107 ^ v106) & 1) == 0)
      return result;
  }
  v108 = v243;
  sub_2331686A0((uint64_t)v48 + v49[16], v243, &qword_256055AE0);
  v109 = (uint64_t)v53 + v49[16];
  v110 = v242;
  sub_2331686A0(v109, v242, &qword_256055AE0);
  v111 = v244;
  v112 = v244 + *(int *)(v238 + 48);
  sub_2331686A0(v108, v244, &qword_256055AE0);
  sub_2331686A0(v110, v112, &qword_256055AE0);
  v113 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v239 + 48);
  v114 = v111;
  v115 = v241;
  if (v113(v114, 1, v241) == 1)
  {
    sub_233168608(v242, &qword_256055AE0);
    sub_233168608(v243, &qword_256055AE0);
    if (v113(v112, 1, v115) == 1)
    {
      sub_233168608(v244, &qword_256055AE0);
      goto LABEL_88;
    }
    goto LABEL_86;
  }
  sub_2331686A0(v244, (uint64_t)v240, &qword_256055AE0);
  if (v113(v112, 1, v115) == 1)
  {
    sub_233168608(v242, &qword_256055AE0);
    sub_233168608(v243, &qword_256055AE0);
    sub_233168500((uint64_t)v240, type metadata accessor for ApplePayTransactionInsight.Location);
LABEL_86:
    v43 = &qword_2560544F8;
    v44 = v244;
    goto LABEL_10;
  }
  v116 = v237;
  sub_233527DE4(v112, (uint64_t)v237);
  v117 = v240;
  v118 = _s10FinanceKit26ApplePayTransactionInsightV8LocationV2eeoiySbAE_AEtFZ_0(v240, v116);
  sub_233168500((uint64_t)v116, type metadata accessor for ApplePayTransactionInsight.Location);
  sub_233168608(v242, &qword_256055AE0);
  sub_233168608(v243, &qword_256055AE0);
  sub_233168500((uint64_t)v117, type metadata accessor for ApplePayTransactionInsight.Location);
  sub_233168608(v244, &qword_256055AE0);
  if ((v118 & 1) == 0)
    return 0;
LABEL_88:
  v119 = v245[17];
  v120 = (_QWORD *)((char *)v246 + v119);
  v121 = *(_QWORD *)((char *)v246 + v119 + 8);
  v122 = (_QWORD *)((char *)v247 + v119);
  v123 = v122[1];
  if (v121)
  {
    if (!v123)
      return 0;
    v125 = v246;
    v124 = v247;
    v126 = v245;
    if (*v120 != *v122 || v121 != v123)
    {
      v127 = sub_23361F224();
      result = 0;
      if ((v127 & 1) == 0)
        return result;
    }
  }
  else
  {
    v125 = v246;
    v124 = v247;
    v126 = v245;
    if (v123)
      return 0;
  }
  v128 = v126[18];
  v129 = (_QWORD *)((char *)v125 + v128);
  v130 = *(_QWORD *)((char *)v125 + v128 + 8);
  v131 = (_QWORD *)((char *)v124 + v128);
  v132 = v131[1];
  if (v130)
  {
    if (!v132)
      return 0;
    v134 = v246;
    v133 = v247;
    v135 = v245;
    if (*v129 != *v131 || v130 != v132)
    {
      v136 = sub_23361F224();
      result = 0;
      if ((v136 & 1) == 0)
        return result;
    }
  }
  else
  {
    v134 = v246;
    v133 = v247;
    v135 = v245;
    if (v132)
      return 0;
  }
  v137 = v135[19];
  v138 = (_QWORD *)((char *)v134 + v137);
  v139 = *(_QWORD *)((char *)v134 + v137 + 8);
  v140 = (_QWORD *)((char *)v133 + v137);
  v141 = v140[1];
  if (v139)
  {
    if (!v141)
      return 0;
    v143 = v246;
    v142 = v247;
    v144 = v245;
    if (*v138 != *v140 || v139 != v141)
    {
      v145 = sub_23361F224();
      result = 0;
      if ((v145 & 1) == 0)
        return result;
    }
  }
  else
  {
    v143 = v246;
    v142 = v247;
    v144 = v245;
    if (v141)
      return 0;
  }
  v146 = v144[20];
  v147 = (_QWORD *)((char *)v143 + v146);
  v148 = *(_QWORD *)((char *)v143 + v146 + 8);
  v149 = (_QWORD *)((char *)v142 + v146);
  v150 = v149[1];
  if (v148)
  {
    if (!v150)
      return 0;
    v152 = v246;
    v151 = v247;
    v153 = v245;
    if (*v147 != *v149 || v148 != v150)
    {
      v154 = sub_23361F224();
      result = 0;
      if ((v154 & 1) == 0)
        return result;
    }
  }
  else
  {
    v152 = v246;
    v151 = v247;
    v153 = v245;
    if (v150)
      return 0;
  }
  v155 = v153[21];
  v156 = (_QWORD *)((char *)v152 + v155);
  v157 = *(_QWORD *)((char *)v152 + v155 + 8);
  v158 = (_QWORD *)((char *)v151 + v155);
  v159 = v158[1];
  if (v157)
  {
    if (!v159)
      return 0;
    v161 = v246;
    v160 = v247;
    v162 = v245;
    if (*v156 != *v158 || v157 != v159)
    {
      v163 = sub_23361F224();
      result = 0;
      if ((v163 & 1) == 0)
        return result;
    }
  }
  else
  {
    v161 = v246;
    v160 = v247;
    v162 = v245;
    if (v159)
      return 0;
  }
  v164 = v162[22];
  v165 = (_QWORD *)((char *)v161 + v164);
  v166 = *(_QWORD *)((char *)v161 + v164 + 8);
  v167 = (_QWORD *)((char *)v160 + v164);
  v168 = v167[1];
  if (v166)
  {
    if (!v168)
      return 0;
    v170 = v246;
    v169 = v247;
    v171 = v245;
    if (*v165 != *v167 || v166 != v168)
    {
      v172 = sub_23361F224();
      result = 0;
      if ((v172 & 1) == 0)
        return result;
    }
  }
  else
  {
    v170 = v246;
    v169 = v247;
    v171 = v245;
    if (v168)
      return 0;
  }
  v173 = v171[23];
  v174 = (_QWORD *)((char *)v170 + v173);
  v175 = *(_QWORD *)((char *)v170 + v173 + 8);
  v176 = (_QWORD *)((char *)v169 + v173);
  v177 = v176[1];
  if (v175)
  {
    if (!v177)
      return 0;
    v179 = v246;
    v178 = v247;
    v180 = v245;
    if (*v174 != *v176 || v175 != v177)
    {
      v181 = sub_23361F224();
      result = 0;
      if ((v181 & 1) == 0)
        return result;
    }
  }
  else
  {
    v179 = v246;
    v178 = v247;
    v180 = v245;
    if (v177)
      return 0;
  }
  v182 = v180[24];
  v183 = (_QWORD *)((char *)v179 + v182);
  v184 = *(_QWORD *)((char *)v179 + v182 + 8);
  v185 = (_QWORD *)((char *)v178 + v182);
  v186 = v185[1];
  if (v184)
  {
    if (!v186)
      return 0;
    v188 = v246;
    v187 = v247;
    v189 = v245;
    if (*v183 != *v185 || v184 != v186)
    {
      v190 = sub_23361F224();
      result = 0;
      if ((v190 & 1) == 0)
        return result;
    }
  }
  else
  {
    v188 = v246;
    v187 = v247;
    v189 = v245;
    if (v186)
      return 0;
  }
  v191 = v189[25];
  v192 = (unsigned __int16 *)((char *)v188 + v191);
  v193 = *((_BYTE *)v188 + v191 + 2);
  v194 = (unsigned __int16 *)((char *)v187 + v191);
  v195 = *((unsigned __int8 *)v187 + v191 + 2);
  if ((v193 & 1) != 0)
  {
    if (!v195)
      return 0;
  }
  else
  {
    if (*v192 != *v194)
      LOBYTE(v195) = 1;
    if ((v195 & 1) != 0)
      return 0;
  }
  v196 = v245[26];
  v197 = (_QWORD *)((char *)v246 + v196);
  v198 = *((_BYTE *)v246 + v196 + 8);
  v199 = (_QWORD *)((char *)v247 + v196);
  v200 = *((unsigned __int8 *)v247 + v196 + 8);
  if ((v198 & 1) != 0)
  {
    if (!v200)
      return 0;
  }
  else
  {
    if (*v197 != *v199)
      LOBYTE(v200) = 1;
    if ((v200 & 1) != 0)
      return 0;
  }
  v201 = v245;
  v202 = v231;
  sub_2331686A0((uint64_t)v246 + v245[27], v231, &qword_254248700);
  v203 = v230;
  sub_2331686A0((uint64_t)v247 + v201[27], v230, &qword_254248700);
  v204 = v235;
  v205 = v235 + *(int *)(v229 + 48);
  sub_2331686A0(v202, v235, &qword_254248700);
  sub_2331686A0(v203, v205, &qword_254248700);
  v206 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48);
  if (v206(v204, 1, v236) == 1)
  {
    sub_233168608(v230, &qword_254248700);
    sub_233168608(v231, &qword_254248700);
    if (v206(v205, 1, v236) == 1)
    {
      sub_233168608(v235, &qword_254248700);
      goto LABEL_163;
    }
    goto LABEL_161;
  }
  sub_2331686A0(v235, v232, &qword_254248700);
  if (v206(v205, 1, v236) == 1)
  {
    sub_233168608(v230, &qword_254248700);
    sub_233168608(v231, &qword_254248700);
    (*(void (**)(uint64_t, uint64_t))(v234 + 8))(v232, v236);
LABEL_161:
    v43 = &qword_256045948;
    v44 = v235;
    goto LABEL_10;
  }
  v208 = v233;
  v207 = v234;
  v209 = v236;
  (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v233, v205, v236);
  sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v210 = v232;
  v211 = sub_23361E108();
  v212 = *(void (**)(char *, uint64_t))(v207 + 8);
  v212(v208, v209);
  sub_233168608(v230, &qword_254248700);
  sub_233168608(v231, &qword_254248700);
  v212((char *)v210, v209);
  sub_233168608(v235, &qword_254248700);
  if ((v211 & 1) == 0)
    return 0;
LABEL_163:
  v213 = v245[28];
  v214 = (_QWORD *)((char *)v246 + v213);
  v215 = *(_QWORD *)((char *)v246 + v213 + 8);
  v216 = (_QWORD *)((char *)v247 + v213);
  v217 = v216[1];
  if (!v215)
  {
    v219 = v246;
    v218 = v247;
    v220 = v245;
    if (!v217)
      goto LABEL_170;
    return 0;
  }
  if (!v217)
    return 0;
  v219 = v246;
  v218 = v247;
  v220 = v245;
  if (*v214 == *v216 && v215 == v217 || (v221 = sub_23361F224(), result = 0, (v221 & 1) != 0))
  {
LABEL_170:
    v222 = v220[29];
    v223 = (_QWORD *)((char *)v219 + v222);
    v224 = *(_QWORD *)((char *)v219 + v222 + 8);
    v225 = (_QWORD *)((char *)v218 + v222);
    v226 = v225[1];
    if (v224)
    {
      if (v226 && (*v223 == *v225 && v224 == v226 || (sub_23361F224() & 1) != 0))
        return 1;
    }
    else if (!v226)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_233528E14()
{
  unint64_t result;

  result = qword_256054310;
  if (!qword_256054310)
  {
    result = MEMORY[0x234934494](&unk_233658F3C, &type metadata for ApplePayTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054310);
  }
  return result;
}

uint64_t sub_233528E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplePayTransactionInsight(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ApplePayTransactionInsight(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);
  unsigned int (*v107)(_OWORD *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _OWORD *__dst;
  char *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    v104 = v12;
    v105 = v11;
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (_QWORD *)((char *)v4 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v111 = v19[1];
    *v18 = *v19;
    v18[1] = v111;
    v20 = (_QWORD *)((char *)v4 + v17);
    v21 = (_QWORD *)((char *)a2 + v17);
    v113 = v21[1];
    *v20 = *v21;
    v20[1] = v113;
    v22 = a3[8];
    v23 = a3[9];
    v24 = (_QWORD *)((char *)v4 + v22);
    v25 = (_QWORD *)((char *)a2 + v22);
    v109 = v25[1];
    *v24 = *v25;
    v24[1] = v109;
    v26 = (char *)v4 + v23;
    v27 = (char *)a2 + v23;
    *(_WORD *)v26 = *(_WORD *)v27;
    v26[2] = v27[2];
    v28 = a3[10];
    v29 = a3[11];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (_QWORD *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (_QWORD *)((char *)v4 + v29);
    v34 = (_QWORD *)((char *)a2 + v29);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = a3[12];
    v37 = a3[13];
    v38 = (_QWORD *)((char *)v4 + v36);
    v39 = (_QWORD *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (_QWORD *)((char *)v4 + v37);
    v42 = (_QWORD *)((char *)a2 + v37);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = a3[14];
    v45 = a3[15];
    v46 = (_QWORD *)((char *)v4 + v44);
    v47 = (_QWORD *)((char *)a2 + v44);
    v48 = *v47;
    v49 = v47[1];
    LOBYTE(v47) = *((_BYTE *)a2 + v45);
    *v46 = v48;
    v46[1] = v49;
    *((_BYTE *)v4 + v45) = (_BYTE)v47;
    v50 = a3[16];
    __dst = (_OWORD *)((char *)v4 + v50);
    v51 = (_OWORD *)((char *)a2 + v50);
    v52 = type metadata accessor for ApplePayTransactionInsight.Location(0);
    v103 = *(_QWORD *)(v52 - 8);
    v107 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v103 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v107(v51, 1, v52))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
      memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v54 = v51[1];
      *__dst = *v51;
      __dst[1] = v54;
      *((_QWORD *)__dst + 4) = *((_QWORD *)v51 + 4);
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))((char *)__dst + *(int *)(v52 + 36), (char *)v51 + *(int *)(v52 + 36), v105);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v103 + 56))(__dst, 0, 1, v52);
    }
    v55 = a3[17];
    v56 = a3[18];
    v57 = (_QWORD *)((char *)v4 + v55);
    v58 = (_QWORD *)((char *)a2 + v55);
    v112 = v58[1];
    *v57 = *v58;
    v57[1] = v112;
    v59 = (_QWORD *)((char *)v4 + v56);
    v60 = (_QWORD *)((char *)a2 + v56);
    v114 = v60[1];
    *v59 = *v60;
    v59[1] = v114;
    v61 = a3[19];
    v62 = a3[20];
    v63 = (_QWORD *)((char *)v4 + v61);
    v64 = (_QWORD *)((char *)a2 + v61);
    v108 = v64[1];
    *v63 = *v64;
    v63[1] = v108;
    v65 = (_QWORD *)((char *)v4 + v62);
    v66 = (_QWORD *)((char *)a2 + v62);
    v110 = v66[1];
    *v65 = *v66;
    v65[1] = v110;
    v67 = a3[21];
    v68 = a3[22];
    v69 = (_QWORD *)((char *)v4 + v67);
    v70 = (_QWORD *)((char *)a2 + v67);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = (_QWORD *)((char *)v4 + v68);
    v73 = (_QWORD *)((char *)a2 + v68);
    v74 = v73[1];
    *v72 = *v73;
    v72[1] = v74;
    v75 = a3[23];
    v76 = a3[24];
    v77 = (_QWORD *)((char *)v4 + v75);
    v78 = (_QWORD *)((char *)a2 + v75);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    v80 = (_QWORD *)((char *)v4 + v76);
    v81 = (_QWORD *)((char *)a2 + v76);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    v83 = a3[25];
    v84 = a3[26];
    v85 = (char *)v4 + v83;
    v86 = (char *)a2 + v83;
    *(_WORD *)v85 = *(_WORD *)v86;
    v85[2] = v86[2];
    v87 = (char *)v4 + v84;
    v88 = (char *)a2 + v84;
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v87[8] = v88[8];
    v89 = a3[27];
    __dsta = (char *)v4 + v89;
    v90 = (char *)a2 + v89;
    v91 = sub_23361D340();
    v92 = *(_QWORD *)(v91 - 8);
    v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v106(v90, 1, v91))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dsta, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(__dsta, v90, v91);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(__dsta, 0, 1, v91);
    }
    v94 = a3[28];
    v95 = a3[29];
    v96 = (_QWORD *)((char *)v4 + v94);
    v97 = (_QWORD *)((char *)a2 + v94);
    v98 = v97[1];
    *v96 = *v97;
    v96[1] = v98;
    v99 = (_QWORD *)((char *)v4 + v95);
    v100 = (_QWORD *)((char *)a2 + v95);
    v101 = v100[1];
    *v99 = *v100;
    v99[1] = v101;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ApplePayTransactionInsight(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[16];
  v8 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7 + *(int *)(v8 + 36), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[27];
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ApplePayTransactionInsight(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(char *, uint64_t, uint64_t);
  unsigned int (*v105)(_OWORD *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD *__dst;
  char *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  v102 = v11;
  v103 = v10;
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v109 = v17[1];
  *v16 = *v17;
  v16[1] = v109;
  v18 = (_QWORD *)((char *)a1 + v15);
  v19 = (_QWORD *)((char *)a2 + v15);
  v111 = v19[1];
  *v18 = *v19;
  v18[1] = v111;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v107 = v23[1];
  *v22 = *v23;
  v22[1] = v107;
  v24 = (char *)a1 + v21;
  v25 = (char *)a2 + v21;
  *(_WORD *)v24 = *(_WORD *)v25;
  v24[2] = v25[2];
  v26 = a3[10];
  v27 = a3[11];
  v28 = (_QWORD *)((char *)a1 + v26);
  v29 = (_QWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)((char *)a1 + v27);
  v32 = (_QWORD *)((char *)a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[12];
  v35 = a3[13];
  v36 = (_QWORD *)((char *)a1 + v34);
  v37 = (_QWORD *)((char *)a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = (_QWORD *)((char *)a1 + v35);
  v40 = (_QWORD *)((char *)a2 + v35);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a3[14];
  v43 = a3[15];
  v44 = (_QWORD *)((char *)a1 + v42);
  v45 = (_QWORD *)((char *)a2 + v42);
  v46 = *v45;
  v47 = v45[1];
  LOBYTE(v45) = *((_BYTE *)a2 + v43);
  *v44 = v46;
  v44[1] = v47;
  *((_BYTE *)a1 + v43) = (_BYTE)v45;
  v48 = a3[16];
  __dst = (_OWORD *)((char *)a1 + v48);
  v49 = (_OWORD *)((char *)a2 + v48);
  v50 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v101 = *(_QWORD *)(v50 - 8);
  v105 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v101 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v105(v49, 1, v50))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
    memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = v49[1];
    *__dst = *v49;
    __dst[1] = v52;
    *((_QWORD *)__dst + 4) = *((_QWORD *)v49 + 4);
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))((char *)__dst + *(int *)(v50 + 36), (char *)v49 + *(int *)(v50 + 36), v103);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v101 + 56))(__dst, 0, 1, v50);
  }
  v53 = a3[17];
  v54 = a3[18];
  v55 = (_QWORD *)((char *)a1 + v53);
  v56 = (_QWORD *)((char *)a2 + v53);
  v110 = v56[1];
  *v55 = *v56;
  v55[1] = v110;
  v57 = (_QWORD *)((char *)a1 + v54);
  v58 = (_QWORD *)((char *)a2 + v54);
  v112 = v58[1];
  *v57 = *v58;
  v57[1] = v112;
  v59 = a3[19];
  v60 = a3[20];
  v61 = (_QWORD *)((char *)a1 + v59);
  v62 = (_QWORD *)((char *)a2 + v59);
  v106 = v62[1];
  *v61 = *v62;
  v61[1] = v106;
  v63 = (_QWORD *)((char *)a1 + v60);
  v64 = (_QWORD *)((char *)a2 + v60);
  v108 = v64[1];
  *v63 = *v64;
  v63[1] = v108;
  v65 = a3[21];
  v66 = a3[22];
  v67 = (_QWORD *)((char *)a1 + v65);
  v68 = (_QWORD *)((char *)a2 + v65);
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  v70 = (_QWORD *)((char *)a1 + v66);
  v71 = (_QWORD *)((char *)a2 + v66);
  v72 = v71[1];
  *v70 = *v71;
  v70[1] = v72;
  v73 = a3[23];
  v74 = a3[24];
  v75 = (_QWORD *)((char *)a1 + v73);
  v76 = (_QWORD *)((char *)a2 + v73);
  v77 = v76[1];
  *v75 = *v76;
  v75[1] = v77;
  v78 = (_QWORD *)((char *)a1 + v74);
  v79 = (_QWORD *)((char *)a2 + v74);
  v80 = v79[1];
  *v78 = *v79;
  v78[1] = v80;
  v81 = a3[25];
  v82 = a3[26];
  v83 = (char *)a1 + v81;
  v84 = (char *)a2 + v81;
  *(_WORD *)v83 = *(_WORD *)v84;
  v83[2] = v84[2];
  v85 = (char *)a1 + v82;
  v86 = (char *)a2 + v82;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v85[8] = v86[8];
  v87 = a3[27];
  __dsta = (char *)a1 + v87;
  v88 = (char *)a2 + v87;
  v89 = sub_23361D340();
  v90 = *(_QWORD *)(v89 - 8);
  v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v104(v88, 1, v89))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(__dsta, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(__dsta, v88, v89);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(__dsta, 0, 1, v89);
  }
  v92 = a3[28];
  v93 = a3[29];
  v94 = (_QWORD *)((char *)a1 + v92);
  v95 = (_QWORD *)((char *)a2 + v92);
  v96 = v95[1];
  *v94 = *v95;
  v94[1] = v96;
  v97 = (_QWORD *)((char *)a1 + v93);
  v98 = (_QWORD *)((char *)a2 + v93);
  v99 = v98[1];
  *v97 = *v98;
  v97[1] = v99;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ApplePayTransactionInsight(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int16 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __int16 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v100;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  v100 = v10;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_WORD *)v26;
  v25[2] = v26[2];
  *(_WORD *)v25 = v27;
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[11];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[12];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[13];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3[14];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v43 = a3[16];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
      *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
      *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
      *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(&v44[*(int *)(v46 + 36)], &v45[*(int *)(v46 + 36)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v50)
  {
    sub_233168500((uint64_t)v44, type metadata accessor for ApplePayTransactionInsight.Location);
LABEL_12:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
  *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
  *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
  (*(void (**)(char *, char *, uint64_t))(v100 + 24))(&v44[*(int *)(v46 + 36)], &v45[*(int *)(v46 + 36)], v9);
LABEL_13:
  v52 = a3[17];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (_QWORD *)((char *)a2 + v52);
  *v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = a3[18];
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (_QWORD *)((char *)a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = a3[19];
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = a3[20];
  v62 = (_QWORD *)((char *)a1 + v61);
  v63 = (_QWORD *)((char *)a2 + v61);
  *v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = a3[21];
  v65 = (_QWORD *)((char *)a1 + v64);
  v66 = (_QWORD *)((char *)a2 + v64);
  *v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = a3[22];
  v68 = (_QWORD *)((char *)a1 + v67);
  v69 = (_QWORD *)((char *)a2 + v67);
  *v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v70 = a3[23];
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (_QWORD *)((char *)a2 + v70);
  *v71 = *v72;
  v71[1] = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = a3[24];
  v74 = (_QWORD *)((char *)a1 + v73);
  v75 = (_QWORD *)((char *)a2 + v73);
  *v74 = *v75;
  v74[1] = v75[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v76 = a3[25];
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  v79 = *(_WORD *)v78;
  v77[2] = v78[2];
  *(_WORD *)v77 = v79;
  v80 = a3[26];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = *(_QWORD *)v82;
  v81[8] = v82[8];
  *(_QWORD *)v81 = v83;
  v84 = a3[27];
  v85 = (char *)a1 + v84;
  v86 = (char *)a2 + v84;
  v87 = sub_23361D340();
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
  v90 = v89(v85, 1, v87);
  v91 = v89(v86, 1, v87);
  if (!v90)
  {
    if (!v91)
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 24))(v85, v86, v87);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v87);
    goto LABEL_18;
  }
  if (v91)
  {
LABEL_18:
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v86, v87);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
LABEL_19:
  v93 = a3[28];
  v94 = (_QWORD *)((char *)a1 + v93);
  v95 = (_QWORD *)((char *)a2 + v93);
  *v94 = *v95;
  v94[1] = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v96 = a3[29];
  v97 = (_QWORD *)((char *)a1 + v96);
  v98 = (_QWORD *)((char *)a2 + v96);
  *v97 = *v98;
  v97[1] = v98[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ApplePayTransactionInsight(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_WORD *)v14 = *(_WORD *)v15;
  v14[2] = v15[2];
  v16 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  v17 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  v18 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  v19 = a3[16];
  v20 = (_OWORD *)((char *)a1 + v19);
  v21 = (_OWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v21[1];
    *v20 = *v21;
    v20[1] = v25;
    *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v20 + *(int *)(v22 + 36), (char *)v21 + *(int *)(v22 + 36), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v26 = a3[18];
  *(_OWORD *)((char *)a1 + a3[17]) = *(_OWORD *)((char *)a2 + a3[17]);
  *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
  v27 = a3[20];
  *(_OWORD *)((char *)a1 + a3[19]) = *(_OWORD *)((char *)a2 + a3[19]);
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  v28 = a3[22];
  *(_OWORD *)((char *)a1 + a3[21]) = *(_OWORD *)((char *)a2 + a3[21]);
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)((char *)a2 + v28);
  v29 = a3[24];
  *(_OWORD *)((char *)a1 + a3[23]) = *(_OWORD *)((char *)a2 + a3[23]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v30 = a3[25];
  v31 = a3[26];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  v32[2] = v33[2];
  *(_WORD *)v32 = *(_WORD *)v33;
  v34 = (char *)a1 + v31;
  v35 = (char *)a2 + v31;
  v34[8] = v35[8];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v36 = a3[27];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_23361D340();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[29];
  *(_OWORD *)((char *)a1 + a3[28]) = *(_OWORD *)((char *)a2 + a3[28]);
  *(_OWORD *)((char *)a1 + v42) = *(_OWORD *)((char *)a2 + v42);
  return a1;
}

_QWORD *assignWithTake for ApplePayTransactionInsight(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  int v65;
  int v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(char *, uint64_t, uint64_t);
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v135;
  uint64_t v136;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  v136 = v11;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[9];
  v32 = a3[10];
  v33 = (char *)a1 + v31;
  v34 = (char *)a2 + v31;
  *(_WORD *)v33 = *(_WORD *)v34;
  v33[2] = v34[2];
  v35 = (_QWORD *)((char *)a1 + v32);
  v36 = (_QWORD *)((char *)a2 + v32);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[11];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v44 = a3[12];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)((char *)a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = a3[13];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[14];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  v59 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v60 = (uint64_t)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64((uint64_t)v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      v67 = *((_OWORD *)v61 + 1);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v67;
      *(_QWORD *)(v60 + 32) = *((_QWORD *)v61 + 4);
      (*(void (**)(uint64_t, char *, uint64_t))(v136 + 32))(v60 + *(int *)(v62 + 36), &v61[*(int *)(v62 + 36)], v10);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v66)
  {
    sub_233168500(v60, type metadata accessor for ApplePayTransactionInsight.Location);
LABEL_12:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
    memcpy((void *)v60, v61, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_13;
  }
  v135 = *((_OWORD *)v61 + 1);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *(_OWORD *)(v60 + 16) = v135;
  *(_QWORD *)(v60 + 32) = *((_QWORD *)v61 + 4);
  (*(void (**)(uint64_t, char *, uint64_t))(v136 + 40))(v60 + *(int *)(v62 + 36), &v61[*(int *)(v62 + 36)], v10);
LABEL_13:
  v69 = a3[17];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v73 = *v71;
  v72 = v71[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  v74 = a3[18];
  v75 = (_QWORD *)((char *)a1 + v74);
  v76 = (_QWORD *)((char *)a2 + v74);
  v78 = *v76;
  v77 = v76[1];
  *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease();
  v79 = a3[19];
  v80 = (_QWORD *)((char *)a1 + v79);
  v81 = (_QWORD *)((char *)a2 + v79);
  v83 = *v81;
  v82 = v81[1];
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  v84 = a3[20];
  v85 = (_QWORD *)((char *)a1 + v84);
  v86 = (_QWORD *)((char *)a2 + v84);
  v88 = *v86;
  v87 = v86[1];
  *v85 = v88;
  v85[1] = v87;
  swift_bridgeObjectRelease();
  v89 = a3[21];
  v90 = (_QWORD *)((char *)a1 + v89);
  v91 = (_QWORD *)((char *)a2 + v89);
  v93 = *v91;
  v92 = v91[1];
  *v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  v94 = a3[22];
  v95 = (_QWORD *)((char *)a1 + v94);
  v96 = (_QWORD *)((char *)a2 + v94);
  v98 = *v96;
  v97 = v96[1];
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  v99 = a3[23];
  v100 = (_QWORD *)((char *)a1 + v99);
  v101 = (_QWORD *)((char *)a2 + v99);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  v104 = a3[24];
  v105 = (_QWORD *)((char *)a1 + v104);
  v106 = (_QWORD *)((char *)a2 + v104);
  v108 = *v106;
  v107 = v106[1];
  *v105 = v108;
  v105[1] = v107;
  swift_bridgeObjectRelease();
  v109 = a3[25];
  v110 = a3[26];
  v111 = (char *)a1 + v109;
  v112 = (char *)a2 + v109;
  *(_WORD *)v111 = *(_WORD *)v112;
  v111[2] = v112[2];
  v113 = (char *)a1 + v110;
  v114 = (char *)a2 + v110;
  *(_QWORD *)v113 = *(_QWORD *)v114;
  v113[8] = v114[8];
  v115 = a3[27];
  v116 = (char *)a1 + v115;
  v117 = (char *)a2 + v115;
  v118 = sub_23361D340();
  v119 = *(_QWORD *)(v118 - 8);
  v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
  v121 = v120(v116, 1, v118);
  v122 = v120(v117, 1, v118);
  if (!v121)
  {
    if (!v122)
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 40))(v116, v117, v118);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v119 + 8))(v116, v118);
    goto LABEL_18;
  }
  if (v122)
  {
LABEL_18:
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v116, v117, v118);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
LABEL_19:
  v124 = a3[28];
  v125 = (_QWORD *)((char *)a1 + v124);
  v126 = (_QWORD *)((char *)a2 + v124);
  v128 = *v126;
  v127 = v126[1];
  *v125 = v128;
  v125[1] = v127;
  swift_bridgeObjectRelease();
  v129 = a3[29];
  v130 = (_QWORD *)((char *)a1 + v129);
  v131 = (_QWORD *)((char *)a2 + v129);
  v133 = *v131;
  v132 = v131[1];
  *v130 = v133;
  v130[1] = v132;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplePayTransactionInsight()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23352A8A4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[16];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[27];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ApplePayTransactionInsight()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23352A980(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[16];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[27];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23352AA4C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, qword_256054398, (void (*)(uint64_t))type metadata accessor for ApplePayTransactionInsight.Location);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ApplePayTransactionInsight.Location(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = a2[4];
    v6 = *(int *)(a3 + 36);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ApplePayTransactionInsight.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ApplePayTransactionInsight.Location(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ApplePayTransactionInsight.Location(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for ApplePayTransactionInsight.Location(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ApplePayTransactionInsight.Location(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplePayTransactionInsight.Location()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23352ADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 36);
  v5 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ApplePayTransactionInsight.Location()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23352AE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 36);
  v6 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23352AE88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ApplePayTransactionInsight.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplePayTransactionInsight.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_23352AFE4 + 4 * byte_233658B35[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_23352B018 + 4 * byte_233658B30[v4]))();
}

uint64_t sub_23352B018(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23352B020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23352B028);
  return result;
}

uint64_t sub_23352B034(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23352B03CLL);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_23352B040(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23352B048(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplePayTransactionInsight.CodingKeys()
{
  return &type metadata for ApplePayTransactionInsight.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ApplePayTransactionInsight.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23352B0B0 + 4 * byte_233658B3F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23352B0E4 + 4 * byte_233658B3A[v4]))();
}

uint64_t sub_23352B0E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23352B0EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23352B0F4);
  return result;
}

uint64_t sub_23352B100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23352B108);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23352B10C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23352B114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplePayTransactionInsight.Location.CodingKeys()
{
  return &type metadata for ApplePayTransactionInsight.Location.CodingKeys;
}

unint64_t sub_23352B134()
{
  unint64_t result;

  result = qword_2560544C8;
  if (!qword_2560544C8)
  {
    result = MEMORY[0x234934494](&unk_233658E5C, &type metadata for ApplePayTransactionInsight.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560544C8);
  }
  return result;
}

unint64_t sub_23352B17C()
{
  unint64_t result;

  result = qword_2560544D0;
  if (!qword_2560544D0)
  {
    result = MEMORY[0x234934494](&unk_233658F14, &type metadata for ApplePayTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560544D0);
  }
  return result;
}

unint64_t sub_23352B1C4()
{
  unint64_t result;

  result = qword_2560544D8;
  if (!qword_2560544D8)
  {
    result = MEMORY[0x234934494](&unk_233658E84, &type metadata for ApplePayTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560544D8);
  }
  return result;
}

unint64_t sub_23352B20C()
{
  unint64_t result;

  result = qword_2560544E0;
  if (!qword_2560544E0)
  {
    result = MEMORY[0x234934494](&unk_233658EAC, &type metadata for ApplePayTransactionInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560544E0);
  }
  return result;
}

unint64_t sub_23352B254()
{
  unint64_t result;

  result = qword_2560544E8;
  if (!qword_2560544E8)
  {
    result = MEMORY[0x234934494](&unk_233658DCC, &type metadata for ApplePayTransactionInsight.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560544E8);
  }
  return result;
}

unint64_t sub_23352B29C()
{
  unint64_t result;

  result = qword_2560544F0;
  if (!qword_2560544F0)
  {
    result = MEMORY[0x234934494](&unk_233658DF4, &type metadata for ApplePayTransactionInsight.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560544F0);
  }
  return result;
}

uint64_t sub_23352B2E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023367A400 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023367A420 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23352B53C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x48746E656D796170 && a2 == 0xEB00000000687361;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657461446E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC000000656D614ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEF656D614E776152 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233672220 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7972747375646E69 && a2 == 0xEC00000065646F43 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC00000065707954 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233672260 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233672280 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002336722A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4E746E656D796170 && a2 == 0xEE006B726F777465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023367A440 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233672360 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEF4C4E4143776152 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEF79746943776152 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002336723A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002336723C0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC00000079746943 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEB0000000070695ALL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xED00006574617453 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023367A460 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6E6564496D616461 && a2 == 0xEE00726569666974 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x4C5255626577 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233672450 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x686372654D626577 && a2 == 0xEF656D614E746E61)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 25;
    else
      return 26;
  }
}

void sub_23352C0CC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_23361ECA8();
    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    sub_23352E958((unint64_t *)&qword_25604DD48, (unint64_t *)&qword_2560466E8);
    sub_23361E60C();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_2331961F0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_2333092EC(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_23361ED08())
      {
        sub_233168668(0, (unint64_t *)&qword_2560466E8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_23352C380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24[9];

  v2 = a2;
  v24[8] = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23361ECA8();
    sub_233168668(0, &qword_256042100);
    sub_23352E958((unint64_t *)&qword_256042108, &qword_256042100);
    sub_23361E60C();
    v2 = v24[2];
    v23 = v24[3];
    v4 = v24[4];
    v3 = v24[5];
    v5 = v24[6];
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a2 + 32);
    v23 = a2 + 56;
    v4 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v21 = v4;
  v22 = (unint64_t)(v4 + 64) >> 6;
  while (v2 < 0)
  {
    if (!sub_23361ED08())
      goto LABEL_42;
    sub_233168668(0, &qword_256042100);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = (id)v24[0];
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v5;
    if (!v12)
      goto LABEL_42;
LABEL_33:
    v16 = objc_msgSend(v12, sel_name, v21);
    v17 = sub_23361E150();
    v19 = v18;

    if (v17 == 0x6E6F4D726564726FLL && v19 == 0xEA00000000006874
      || (sub_23361F224() & 1) != 0
      || v17 == 0x41734173776F6873 && v19 == 0xED00006576697463)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = sub_23361F224();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {

        goto LABEL_9;
      }
    }
    sub_233308400(v24, 0x6E6F4D726564726FLL, 0xEA00000000006874);

    swift_bridgeObjectRelease();
LABEL_9:
    v3 = v11;
    v5 = v9;
  }
  if (v5)
  {
    v9 = (v5 - 1) & v5;
    v10 = __clz(__rbit64(v5)) | (v3 << 6);
    v11 = v3;
LABEL_32:
    v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_42;
    goto LABEL_33;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v22)
      goto LABEL_42;
    v14 = *(_QWORD *)(v23 + 8 * v13);
    v11 = v3 + 1;
    if (!v14)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v22)
        goto LABEL_42;
      v14 = *(_QWORD *)(v23 + 8 * v11);
      if (!v14)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v22)
          goto LABEL_42;
        v14 = *(_QWORD *)(v23 + 8 * v11);
        if (!v14)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v22)
            goto LABEL_42;
          v14 = *(_QWORD *)(v23 + 8 * v11);
          if (!v14)
          {
            v11 = v3 + 5;
            if (v3 + 5 >= v22)
              goto LABEL_42;
            v14 = *(_QWORD *)(v23 + 8 * v11);
            if (!v14)
            {
              v15 = v3 + 6;
              while (v22 != v15)
              {
                v14 = *(_QWORD *)(v23 + 8 * v15++);
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_42:
              sub_2331961F0();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_23352C7B0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
  {
    swift_retain();
    sub_23361E54C();
    swift_release();
  }

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteStoreManager()
{
  return objc_opt_self();
}

uint64_t sub_23352C844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[22] = a4;
  v5[23] = a5;
  v6 = sub_23361E96C();
  v5[24] = v6;
  v5[25] = *(_QWORD *)(v6 - 8);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  v7 = sub_23361CBA8();
  v5[28] = v7;
  v5[29] = *(_QWORD *)(v7 - 8);
  v5[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247050);
  v5[31] = swift_task_alloc();
  v8 = sub_23361E900();
  v5[32] = v8;
  v5[33] = *(_QWORD *)(v8 - 8);
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23352C928()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[35] = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v0[36] = sub_23361E90C();
  swift_retain();
  sub_23361E8E8();
  swift_beginAccess();
  v0[37] = sub_23352E7FC();
  v1 = (_QWORD *)swift_task_alloc();
  v0[38] = v1;
  *v1 = v0;
  v1[1] = sub_23352CA08;
  return sub_23361E4D4();
}

uint64_t sub_23352CA08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 320) = v0;
  }
  else
  {
    *(_QWORD *)(v2 + 312) = *MEMORY[0x24BDBB588];
    *(_DWORD *)(v2 + 488) = *MEMORY[0x24BDBB370];
  }
  return swift_task_switch();
}

uint64_t sub_23352CA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  _QWORD *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  id v47;
  _QWORD *v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(void **)(v0 + 280);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = (_OWORD *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 240), v1, v2);
  v7 = sub_23361CB9C();
  if (!v7)
  {
    *v6 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_27:
    sub_23319F5C0(v0 + 56);
    goto LABEL_28;
  }
  v8 = v7;
  *(_QWORD *)(v0 + 112) = sub_23361E150();
  *(_QWORD *)(v0 + 120) = v9;
  sub_23361ED50();
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_2331E3EC4(v0 + 16), (v11 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v8 + 56) + 32 * v10, v0 + 56);
  }
  else
  {
    *v6 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C(v0 + 16);
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_27;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_28;
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 136);
  v14 = objc_msgSend(*(id *)(v0 + 176), sel_persistentStoreCoordinator);
  if (!v14)
    goto LABEL_25;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_persistentStores);

  sub_233168668(0, (unint64_t *)&qword_2542482A0);
  v17 = sub_23361E3F0();

  v49 = v12;
  if (v17 >> 62)
    goto LABEL_42;
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_24:
    swift_bridgeObjectRelease_n();
LABEL_25:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
LABEL_13:
  v19 = 0;
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x234933120](v19, v17);
    else
      v20 = *(id *)(v17 + 8 * v19 + 32);
    v21 = v20;
    *(_QWORD *)(v0 + 336) = v20;
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      v18 = sub_23361EF30();
      if (!v18)
        goto LABEL_24;
      goto LABEL_13;
    }
    v23 = objc_msgSend(v20, sel_configurationName);
    v24 = sub_23361E150();
    v26 = v25;

    if (v24 == 0x6C61636F4CLL && v26 == 0xE500000000000000)
      break;
    v28 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      goto LABEL_31;

    ++v19;
    if (v22 == v18)
      goto LABEL_24;
  }
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease_n();
  v30 = objc_msgSend(v21, sel_identifier);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  v31 = v30;
  v32 = sub_23361E150();
  v34 = v33;

  if (v49 == v32 && v13 == v34)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_37;
  }
  v35 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
LABEL_39:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));

    goto LABEL_29;
  }
LABEL_37:
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 344) = Strong;
  if (Strong)
  {
    v37 = *(unsigned int *)(v0 + 488);
    v38 = *(_QWORD *)(v0 + 216);
    v39 = *(_QWORD *)(v0 + 192);
    v40 = *(_QWORD *)(v0 + 200);
    v41 = *(void **)(Strong + 24);
    *(_QWORD *)(v0 + 352) = v41;
    v42 = *(void **)(Strong + 16);
    *(_QWORD *)(v0 + 360) = v42;
    v43 = v41;
    v44 = objc_msgSend(v42, sel_newBackgroundContext);
    *(_QWORD *)(v0 + 368) = v44;
    v45 = swift_allocObject();
    *(_QWORD *)(v0 + 376) = v45;
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v45 + 24) = v41;
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104);
    *(_QWORD *)(v0 + 384) = v46;
    v46(v38, v37, v39);
    v47 = v43;
    v44;
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 392) = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254247CF8);
    *v48 = v0;
    v48[1] = sub_23352D0C0;
    return sub_23361E990();
  }

LABEL_28:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
LABEL_29:
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v29;
  *v29 = v0;
  v29[1] = sub_23352D05C;
  return sub_23361E4D4();
}

uint64_t sub_23352CFFC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_23352D05C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 320) = v0;
  return swift_task_switch();
}

uint64_t sub_23352D0C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  v4 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 400) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v2 + 408) = v6;
  v6(v3, v4);
  swift_release();
  return swift_task_switch();
}

void sub_23352D15C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 416) = v1;
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 424) = v2;
    if (v2)
      goto LABEL_3;
LABEL_9:
    v16 = *(void **)(v0 + 368);
    v17 = *(void **)(v0 + 352);
    v18 = *(void **)(v0 + 336);
    swift_release();

    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v19;
    *v19 = v0;
    v19[1] = sub_23352D05C;
    sub_23361E4D4();
    return;
  }
  swift_bridgeObjectRetain();
  v2 = sub_23361EF30();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 424) = v2;
  if (!v2)
    goto LABEL_9;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 432) = 0;
    v3 = *(_QWORD *)(v0 + 416);
    if ((v3 & 0xC000000000000001) != 0)
      v4 = (id)MEMORY[0x234933120](0);
    else
      v4 = *(id *)(v3 + 32);
    v5 = v4;
    *(_QWORD *)(v0 + 440) = v4;
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
    v7 = *(void **)(v0 + 368);
    v8 = *(_QWORD *)(v0 + 344);
    v9 = *(unsigned int *)(v0 + 488);
    v10 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 192);
    v12 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 448) = v12;
    v12[2] = v8;
    v12[3] = v5;
    v12[4] = v7;
    v6(v10, v9, v11);
    v13 = v7;
    v14 = v5;
    swift_retain();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256054510);
    *v15 = v0;
    v15[1] = sub_23352D368;
    sub_23361E990();
  }
}

uint64_t sub_23352D368()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 408);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc();
  swift_release();
  v1(v2, v3);
  return swift_task_switch();
}

uint64_t sub_23352D3E4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  _QWORD *v33;

  v1 = *(_QWORD *)(v0 + 168);
  if (v1)
  {
    v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
    v3 = *(_QWORD *)(v0 + 344);
    v4 = *(unsigned int *)(v0 + 488);
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v0 + 464) = objc_msgSend(*(id *)(v0 + 360), sel_viewContext);
    v7 = swift_allocObject();
    *(_QWORD *)(v0 + 472) = v7;
    *(_QWORD *)(v7 + 16) = v1;
    *(_QWORD *)(v7 + 24) = v3;
    v2(v5, v4, v6);
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v8;
    *v8 = v0;
    v8[1] = sub_23352D6A0;
  }
  else
  {
    v9 = *(void **)(v0 + 440);
    v10 = *(_QWORD *)(v0 + 424);
    v11 = *(_QWORD *)(v0 + 344);
    v12 = *(_QWORD *)(v0 + 432) + 1;
    v13 = objc_msgSend(v9, sel_token);

    v14 = *(void **)(v11 + 24);
    *(_QWORD *)(v11 + 24) = v13;

    if (v12 == v10)
    {
      v15 = *(void **)(v0 + 368);
      v16 = *(void **)(v0 + 352);
      v17 = *(void **)(v0 + 336);
      swift_release();

      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 328) = v18;
      *v18 = v0;
      v18[1] = sub_23352D05C;
      return sub_23361E4D4();
    }
    v20 = *(_QWORD *)(v0 + 432) + 1;
    *(_QWORD *)(v0 + 432) = v20;
    v21 = *(_QWORD *)(v0 + 416);
    if ((v21 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x234933120]();
    else
      v22 = *(id *)(v21 + 8 * v20 + 32);
    v23 = v22;
    *(_QWORD *)(v0 + 440) = v22;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
    v25 = *(void **)(v0 + 368);
    v26 = *(_QWORD *)(v0 + 344);
    v27 = *(unsigned int *)(v0 + 488);
    v28 = *(_QWORD *)(v0 + 208);
    v29 = *(_QWORD *)(v0 + 192);
    v30 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 448) = v30;
    v30[2] = v26;
    v30[3] = v23;
    v30[4] = v25;
    v24(v28, v27, v29);
    v31 = v25;
    v32 = v23;
    swift_retain();
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256054510);
    *v33 = v0;
    v33[1] = sub_23352D368;
  }
  return sub_23361E990();
}

uint64_t sub_23352D6A0()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(*(_QWORD *)v0 + 464);
  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 408);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc();
  swift_release();

  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_23352D72C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  _QWORD *v25;

  v1 = *(void **)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 432) + 1;
  v5 = objc_msgSend(v1, sel_token);

  v6 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v5;

  if (v4 == v2)
  {
    v7 = *(void **)(v0 + 368);
    v8 = *(void **)(v0 + 352);
    v9 = *(void **)(v0 + 336);
    swift_release();

    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v10;
    *v10 = v0;
    v10[1] = sub_23352D05C;
    return sub_23361E4D4();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 432) + 1;
    *(_QWORD *)(v0 + 432) = v12;
    v13 = *(_QWORD *)(v0 + 416);
    if ((v13 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x234933120]();
    else
      v14 = *(id *)(v13 + 8 * v12 + 32);
    v15 = v14;
    *(_QWORD *)(v0 + 440) = v14;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
    v17 = *(void **)(v0 + 368);
    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(unsigned int *)(v0 + 488);
    v20 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 192);
    v22 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 448) = v22;
    v22[2] = v18;
    v22[3] = v15;
    v22[4] = v17;
    v16(v20, v19, v21);
    v23 = v17;
    v24 = v15;
    swift_retain();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256054510);
    *v25 = v0;
    v25[1] = sub_23352D368;
    return sub_23361E990();
  }
}

uint64_t sub_23352D928()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v16;

  v1 = *(void **)(v0 + 352);

  swift_release();
  if (qword_254246760 != -1)
    swift_once();
  v2 = *(void **)(v0 + 400);
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246748);
  v4 = v2;
  v5 = v2;
  v6 = sub_23361DB68();
  v7 = sub_23361E768();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 400);
  if (v8)
  {
    v16 = *(void **)(v0 + 336);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 160) = v13;
    sub_23361EBC4();
    *v11 = v13;

    _os_log_impl(&dword_233151000, v6, v7, "Failed to apply remote changes: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v11, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v14;
  *v14 = v0;
  v14[1] = sub_23352D05C;
  return sub_23361E4D4();
}

uint64_t sub_23352DB5C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  void *v21;
  uint64_t v22;
  _OWORD v23[2];
  _BYTE v24[40];
  __int128 v25;
  __int128 v26;

  v4 = sub_23361CBA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_objectIDNotification);
  sub_23361CB90();

  v9 = sub_23361CB9C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_23352DF18(a1, a2);
    v11 = v10;
    if ((v10 & 0xC000000000000001) != 0)
    {
      if (sub_23361ECE4())
      {
LABEL_4:
        *(_QWORD *)&v23[0] = sub_23361E150();
        *((_QWORD *)&v23[0] + 1) = v12;
        sub_23361ED50();
        if (*(_QWORD *)(v9 + 16) && (v13 = sub_2331E3EC4((uint64_t)v24), (v14 & 1) != 0))
        {
          sub_233168350(*(_QWORD *)(v9 + 56) + 32 * v13, (uint64_t)&v25);
        }
        else
        {
          v25 = 0u;
          v26 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_23316831C((uint64_t)v24);
        if (*((_QWORD *)&v26 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256049D00);
          if (swift_dynamicCast())
          {
            v15 = *(void **)&v23[0];
LABEL_16:
            *(_QWORD *)&v25 = sub_23361E150();
            *((_QWORD *)&v25 + 1) = v16;
            sub_23361ED50();
            sub_2334EF970(v11, v15);
            v18 = v17;
            *((_QWORD *)&v26 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_256049D00);
            *(_QWORD *)&v25 = v18;
            sub_2331683D0(&v25, v23);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v22 = v9;
            sub_23328F064(v23, (uint64_t)v24, isUniquelyReferenced_nonNull_native);
            v9 = v22;
            swift_bridgeObjectRelease();
            sub_23316831C((uint64_t)v24);
            return v9;
          }
        }
        else
        {
          sub_23319F5C0((uint64_t)&v25);
        }
        if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23361EF30())
        {
          sub_2333F1468(MEMORY[0x24BEE4AF8]);
          v15 = v21;
        }
        else
        {
          v15 = (void *)MEMORY[0x24BEE4B08];
        }
        goto LABEL_16;
      }
    }
    else if (*(_QWORD *)(v10 + 16))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

void sub_23352DDFC(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_23361E054();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233625CF0;
  *(_QWORD *)(v5 + 32) = objc_msgSend(*(id *)(a2 + 16), sel_viewContext);
  sub_23361E408();
  sub_233168668(0, &qword_256054518);
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_mergeChangesFromRemoteContextSave_intoContexts_, v4, v6);

}

void sub_23352DF18(void *a1, void *a2)
{
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;

  v3 = objc_msgSend(a1, sel_changes);
  if (!v3)
  {
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) == 0)
      return;
    goto LABEL_19;
  }
  v4 = v3;
  sub_233168668(0, &qword_25604C730);
  v5 = sub_23361E3F0();

  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23361EF30())
    sub_2333F1468(MEMORY[0x24BEE4AF8]);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_17;
LABEL_5:
  if (v6 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x234933120](v7, v5);
      else
        v8 = *(id *)(v5 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      sub_23352E0EC(v8, a2);
      sub_23352C0CC(v10);

    }
    while (v6 != v7);
    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  if (sub_23361EF30())
    sub_2333F1468(MEMORY[0x24BEE4AF8]);
}

void sub_23352E0EC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v33;

  v3 = v2;
  v6 = objc_msgSend(a1, sel_changedObjectID);
  v7 = objc_msgSend(v6, sel_entityName);

  v8 = sub_23361E150();
  v10 = v9;

  type metadata accessor for ManagedOrder();
  v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  v12 = sub_23361E150();
  v14 = v13;

  if (v8 == v12 && v10 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
LABEL_26:
      if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
      {
        if (sub_23361EF30())
          sub_2333F1468(MEMORY[0x24BEE4AF8]);
      }
      return;
    }
  }
  v17 = objc_msgSend(a1, sel_changeType);
  if (!v17 || v17 == (id)2)
  {
    v22 = sub_2333F17C4((uint64_t)&unk_25046BA10);
    swift_arrayDestroy();
    if (*(_QWORD *)(v22 + 16))
      goto LABEL_15;
    goto LABEL_25;
  }
  if (v17 != (id)1 || (v18 = objc_msgSend(a1, sel_updatedProperties)) == 0)
  {
    v22 = MEMORY[0x24BEE4B08];
    if (*(_QWORD *)(MEMORY[0x24BEE4B08] + 16))
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v19 = v18;
  sub_233168668(0, &qword_256042100);
  sub_23352E958((unint64_t *)&qword_256042108, &qword_256042100);
  v20 = sub_23361E5DC();

  sub_23352C380(MEMORY[0x24BEE4B08], v20);
  v22 = v21;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v22 + 16))
    goto LABEL_25;
LABEL_15:
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23361EF30())
    sub_2333F1468(MEMORY[0x24BEE4AF8]);
  else
    v23 = MEMORY[0x24BEE4B08];
  v33 = v23;
  if (!objc_msgSend(a1, sel_changeType) || objc_msgSend(a1, sel_changeType) == (id)1)
  {
    v24 = objc_msgSend(a1, sel_changedObjectID);
    v25 = sub_23352E9F0((uint64_t)v24, v22, a2);

    sub_23352C0CC((unint64_t)v25);
  }
  if (objc_msgSend(a1, sel_changeType) == (id)2 || objc_msgSend(a1, sel_changeType) == (id)1)
  {
    v26 = objc_msgSend(*(id *)(v3 + 16), sel_viewContext);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = &v33;
    v27[3] = v3;
    v27[4] = a1;
    v27[5] = v22;
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = sub_23352E9CC;
    *(_QWORD *)(v28 + 24) = v27;
    aBlock[4] = sub_233167E10;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2332714C0;
    aBlock[3] = &block_descriptor_22;
    v29 = _Block_copy(aBlock);
    swift_retain();
    v30 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v26, sel_performBlockAndWait_, v29);

    _Block_release(v29);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
    else
      swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_23352E554(int a1, uint64_t a2, id a3, uint64_t a4)
{
  id v6;
  id v7;
  id v8;

  v6 = objc_msgSend(a3, sel_changedObjectID);
  v7 = objc_msgSend(*(id *)(a2 + 16), sel_viewContext);
  v8 = sub_23352E9F0((uint64_t)v6, a4, v7);

  sub_23352C0CC((unint64_t)v8);
}

uint64_t sub_23352E5E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  v7 = objc_msgSend(a1, sel_viewContext);
  v8 = NSManagedObjectContext.currentLocalHistoryToken.getter();

  v9 = *(void **)(v2 + 24);
  *(_QWORD *)(v2 + 24) = v8;

  v10 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = objc_msgSend(*(id *)(v2 + 16), sel_viewContext);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v12;
  v13[5] = v11;
  *(_QWORD *)(v2 + 32) = sub_2333B205C((uint64_t)v6, (uint64_t)&unk_256054508, (uint64_t)v13);
  swift_release();
  return v2;
}

uint64_t sub_23352E72C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23352E750()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23352E784(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2331676FC;
  return sub_23352C844(a1, v4, v5, v7, v6);
}

unint64_t sub_23352E7FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254247070;
  if (!qword_254247070)
  {
    v1 = sub_23361E900();
    result = MEMORY[0x234934494](MEMORY[0x24BDD0038], v1);
    atomic_store(result, (unint64_t *)&qword_254247070);
  }
  return result;
}

uint64_t sub_23352E844()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23352E870(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  NSManagedObjectContext.fetchPersistentHistory(after:)(*(_QWORD *)(v1 + 24));
  if (!v2)
    *a1 = v4;
}

uint64_t sub_23352E8A0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23352E8D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23352DB5C(*(void **)(v1 + 24), *(void **)(v1 + 32));
  *a1 = result;
  return result;
}

uint64_t sub_23352E914()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23352E940()
{
  uint64_t v0;

  sub_23352DDFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23352E958(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_233168668(255, a2);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23352E998()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23352E9CC()
{
  uint64_t v0;

  sub_23352E554(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23352E9D8()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

id sub_23352E9F0(uint64_t a1, uint64_t a2, id a3)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  _QWORD *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t i;
  void *v31;
  uint64_t j;
  void *v33;
  uint64_t v34;
  uint64_t v36;
  id v37;
  id v38;

  v4 = sub_23330408C(a1, a3);
  v5 = MEMORY[0x24BEE4AF8];
  v14 = v4;
  v15 = v14;
  if ((v5 & 0xC000000000000000) != 0 && sub_23361EF30())
    sub_2333F1468(MEMORY[0x24BEE4AF8]);
  else
    v16 = (void *)MEMORY[0x24BEE4B08];
  v38 = v16;
  v17 = a2 + 56;
  v18 = 1 << *(_BYTE *)(a2 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(a2 + 56);
  v21 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain();
  v22 = 0;
  while (1)
  {
    if (v20)
    {
      v20 &= v20 - 1;
    }
    else
    {
      v23 = v22 + 1;
      if (__OFADD__(v22, 1))
        goto LABEL_44;
      if (v23 >= v21)
      {
LABEL_38:

        swift_release();
        return v38;
      }
      v24 = *(_QWORD *)(v17 + 8 * v23);
      ++v22;
      if (!v24)
      {
        v22 = v23 + 1;
        if (v23 + 1 >= v21)
          goto LABEL_38;
        v24 = *(_QWORD *)(v17 + 8 * v22);
        if (!v24)
        {
          v22 = v23 + 2;
          if (v23 + 2 >= v21)
            goto LABEL_38;
          v24 = *(_QWORD *)(v17 + 8 * v22);
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v21)
              goto LABEL_38;
            v24 = *(_QWORD *)(v17 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                v22 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v22 >= v21)
                  goto LABEL_38;
                v24 = *(_QWORD *)(v17 + 8 * v22);
                ++v25;
                if (v24)
                  goto LABEL_25;
              }
            }
            v22 = v25;
          }
        }
      }
LABEL_25:
      v20 = (v24 - 1) & v24;
    }
    v26 = v15;
    swift_bridgeObjectRetain();
    v27 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_objectIDsForRelationshipNamed_, v27);

    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    v5 = sub_23361E3F0();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v29 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (!v29)
        goto LABEL_9;
    }
    else
    {
      v29 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v29)
        goto LABEL_9;
    }
    if (v29 < 1)
      break;
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v29; ++i)
      {
        v31 = (void *)MEMORY[0x234933120](i, v5);
        sub_2333092EC(&v37, v31);

      }
    }
    else
    {
      for (j = 0; j != v29; ++j)
      {
        v33 = *(void **)(v5 + 8 * j + 32);
        sub_2333092EC(&v37, v33);

      }
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_254246748);
  v7 = v15;
  v8 = sub_23361DB68();
  v9 = sub_23361E780();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v38 = v7;
    v12 = v7;
    sub_23361EBC4();
    *v11 = v7;

    _os_log_impl(&dword_233151000, v8, v9, "Failed to retrieve order with object ID: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    v13 = v11;
    v5 = MEMORY[0x24BEE4AF8];
    MEMORY[0x234934590](v13, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {

  }
  if ((v5 & 0xC000000000000000) != 0 && sub_23361EF30())
  {
    sub_2333F1468(MEMORY[0x24BEE4AF8]);
    v34 = v36;

  }
  else
  {

    return (id)MEMORY[0x24BEE4B08];
  }
  return (id)v34;
}

uint64_t SpotlightSearchableManagedObject.searchableItemAttributeSet(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SpotlightSearchableManagedObject.searchableItemAttributeSet(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id static ManagedAccount.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedAccount;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

uint64_t static ManagedAccount.predicateForAccount(withPublicAccountID:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_2331B372C();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

uint64_t static ManagedAccount.predicateForAccounts(withPublicAccountIDs:)(uint64_t a1)
{
  uint64_t v2;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D60;
  *(_QWORD *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
  *(_QWORD *)(v2 + 64) = sub_23338EFD4();
  *(_QWORD *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

id PaymentTransactionProcessor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PaymentTransactionProcessor.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaymentTransactionProcessor();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for PaymentTransactionProcessor()
{
  return objc_opt_self();
}

id PaymentTransactionProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaymentTransactionProcessor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall PaymentTransactionProcessor.deleteTransaction(with:for:)(Swift::String with, Swift::String a2)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;

  object = a2._object;
  countAndFlagsBits = a2._countAndFlagsBits;
  v4 = with._object;
  v5 = with._countAndFlagsBits;
  if (qword_254245080 != -1)
    swift_once();
  v6 = *((_QWORD *)off_254245078 + 2);
  type metadata accessor for BankConnectPassKitTransactionsDeleter();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v6;
  swift_retain();
  _s10FinanceKit27PaymentTransactionProcessorC06deleteD04with3for18bankConnectDeleterySS_SSAA04Bankj4Passb12TransactionsK0CtF_0(v5, (unint64_t)v4, countAndFlagsBits, (unint64_t)object, inited);
  swift_release();
}

uint64_t _s10FinanceKit27PaymentTransactionProcessorC14insertOrUpdate11transaction3for19bankConnectImporterySo09FKPaymentD0C_SSAA04Bankl4Passb12TransactionsM0CtF_0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  NSObject *v8;
  os_activity_scope_state_s state;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v8 = _os_activity_create(&dword_233151000, "bankConnect/insertOrUpdatePaymentTransaction", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v8, &state);
  sub_2334164E0(a4, a1, a2, a3);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

uint64_t _s10FinanceKit27PaymentTransactionProcessorC06deleteD04with3for18bankConnectDeleterySS_SSAA04Bankj4Passb12TransactionsK0CtF_0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  NSObject *v10;
  os_activity_scope_state_s state;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v10 = _os_activity_create(&dword_233151000, "bankConnect/deletePaymentTransaction", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v10, &state);
  sub_233455EFC(a5, a1, a2, a3, a4);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

uint64_t _s10FinanceKit27PaymentTransactionProcessorC14insertOrUpdate11transaction3forySo09FKPaymentD0C_SStF_0(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  _QWORD *inited;
  uint64_t v8;

  if (qword_254245080 != -1)
    swift_once();
  v6 = *((_QWORD *)off_254245078 + 2);
  type metadata accessor for BankConnectPassKitTransactionsImporter();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v6;
  type metadata accessor for ManagedTransactionImporter();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  inited[3] = v8;
  type metadata accessor for BankConnectTransactionsMatcher();
  inited[4] = swift_allocObject();
  swift_retain();
  _s10FinanceKit27PaymentTransactionProcessorC14insertOrUpdate11transaction3for19bankConnectImporterySo09FKPaymentD0C_SSAA04Bankl4Passb12TransactionsM0CtF_0(a1, a2, a3, (uint64_t)inited);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t method lookup function for PaymentTransactionProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t ManagedApplePayTransactionInsightImporter.__allocating_init()()
{
  return swift_allocObject();
}

void ManagedApplePayTransactionInsightImporter.insertOrUpdateInsight(_:on:in:)(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;

  v7 = ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(a3);
  if (!v3)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_applePayInsightObject);
    if (!v9)
    {
      type metadata accessor for ManagedApplePayTransactionInsight();
      v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
      objc_msgSend(v8, sel_setApplePayInsightObject_, v9);
    }

    sub_23352FB68(v9, a1, a2);
  }
}

uint64_t ManagedApplePayTransactionInsightImporter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedApplePayTransactionInsightImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedApplePayTransactionInsightImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL sub_23352FA2C(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5, uint64_t (*a6)(uint64_t), SEL *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  SEL *v23;

  v23 = a7;
  v11 = a4(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v17, a5);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  if (v18 != 1)
  {
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    v20 = (void *)a6(v19);
    objc_msgSend(a2, *v23, v20);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v18 == 1;
}

void sub_23352FB68(void *a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  void *v98;
  void *v99;
  id v100;
  void *v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  _BYTE v107[8];
  _BYTE v108[16];

  v106 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v107[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v107[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v107[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = objc_msgSend(a2, sel_paymentHash);
  if (v14)
  {
    v15 = v14;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v16 = (void *)sub_23361E12C();
    objc_msgSend(a1, sel_setPaymentHash_, v16);
    swift_bridgeObjectRelease_n();

  }
  v17 = objc_msgSend(a2, sel_transactionDate, v106);
  if (v17)
  {
    v18 = v17;
    sub_23361D5EC();

    v19 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 0, 1, v19);
  }
  else
  {
    v20 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  }
  v21 = a1;
  sub_23352FA2C((uint64_t)v13, v21, (uint64_t)v108, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], (uint64_t *)&unk_254247DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE5D8], (SEL *)&selRef_setTransactionDate_);

  sub_233168608((uint64_t)v13, (uint64_t *)&unk_254247DA0);
  v22 = objc_msgSend(a2, sel_merchantName);
  if (v22)
  {
    v23 = v22;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v24 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantName_, v24);
    swift_bridgeObjectRelease_n();

  }
  v25 = objc_msgSend(a2, sel_merchantRawName);
  if (v25)
  {
    v26 = v25;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v27 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantRawName_, v27);
    swift_bridgeObjectRelease_n();

  }
  v28 = objc_msgSend(a2, sel_industryCategory);
  if (v28)
  {
    v29 = v28;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v30 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setIndustryCategory_, v30);
    swift_bridgeObjectRelease_n();

  }
  v31 = objc_msgSend(a2, sel_industryCode);
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v21, sel_setIndustryCodeValue_, v31);

  }
  v33 = objc_msgSend(a2, sel_merchantType);
  if (v33)
  {
    v34 = v33;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v35 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantType_, v35);
    swift_bridgeObjectRelease_n();

  }
  v36 = objc_msgSend(a2, sel_merchantCountryCode);
  if (v36)
  {
    v37 = v36;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v38 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantCountryCode_, v38);
    swift_bridgeObjectRelease_n();

  }
  v39 = objc_msgSend(a2, sel_terminalIdentifier);
  if (v39)
  {
    v40 = v39;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v41 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setTerminalIdentifier_, v41);
    swift_bridgeObjectRelease_n();

  }
  v42 = objc_msgSend(a2, sel_merchantAdditionalData);
  if (v42)
  {
    v43 = v42;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v44 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantAdditionalData_, v44);
    swift_bridgeObjectRelease_n();

  }
  v45 = objc_msgSend(a2, sel_paymentNetwork);
  if (v45)
  {
    v46 = v45;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v47 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setPaymentNetwork_, v47);
    swift_bridgeObjectRelease_n();

  }
  v48 = objc_msgSend(a2, sel_isCoarseLocation);
  if (v48)
  {
    v49 = v48;
    objc_msgSend(v21, sel_setIsCoarseLocationValue_, v48);

  }
  v50 = objc_msgSend(a2, sel_location);
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v51, sel_coordinate);
    v53 = v52;
    objc_msgSend(v51, sel_coordinate);
    v55 = v54;
    objc_msgSend(v51, sel_altitude);
    v57 = v56;
    objc_msgSend(v51, sel_horizontalAccuracy);
    v59 = v58;
    objc_msgSend(v51, sel_verticalAccuracy);
    v61 = v60;
    v62 = objc_msgSend(v51, sel_timestamp);
    v63 = type metadata accessor for ApplePayTransactionInsight.Location(0);
    sub_23361D5EC();

    *v10 = v53;
    v10[1] = v55;
    v10[2] = v57;
    v10[3] = v59;
    v10[4] = v61;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v10, 0, 1, v63);
    ManagedApplePayTransactionInsight.location.setter((uint64_t)v10);

  }
  v64 = objc_msgSend(a2, sel_merchantIdentifier);
  if (v64)
  {
    v65 = v64;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v66 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantIdentifier_, v66);
    swift_bridgeObjectRelease_n();

  }
  v67 = objc_msgSend(a2, sel_merchantRawCANL);
  if (v67)
  {
    v68 = v67;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v69 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantRawCANL_, v69);
    swift_bridgeObjectRelease_n();

  }
  v70 = objc_msgSend(a2, sel_merchantRawCity);
  if (v70)
  {
    v71 = v70;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v72 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantRawCity_, v72);
    swift_bridgeObjectRelease_n();

  }
  v73 = objc_msgSend(a2, sel_merchantRawCountry);
  if (v73)
  {
    v74 = v73;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v75 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantRawCountry_, v75);
    swift_bridgeObjectRelease_n();

  }
  v76 = objc_msgSend(a2, sel_merchantRawState);
  if (v76)
  {
    v77 = v76;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v78 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantRawState_, v78);
    swift_bridgeObjectRelease_n();

  }
  v79 = objc_msgSend(a2, sel_merchantCity);
  if (v79)
  {
    v80 = v79;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v81 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantCity_, v81);
    swift_bridgeObjectRelease_n();

  }
  v82 = objc_msgSend(a2, sel_merchantZip);
  if (v82)
  {
    v83 = v82;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v84 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantZip_, v84);
    swift_bridgeObjectRelease_n();

  }
  v85 = objc_msgSend(a2, sel_merchantState);
  if (v85)
  {
    v86 = v85;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v87 = (void *)sub_23361E12C();
    objc_msgSend(v21, sel_setMerchantState_, v87);
    swift_bridgeObjectRelease_n();

  }
  v88 = objc_msgSend(a2, sel_merchantCleanConfidenceLevel);
  if (v88)
  {
    v89 = v88;
    objc_msgSend(v21, sel_setMerchantCleanConfidenceLevelValue_, v88);

  }
  v90 = objc_msgSend(a2, sel_adamIdentifier);
  if (v90)
  {
    v91 = v90;
    objc_msgSend(v21, sel_setAdamIdentifierValue_, v90);

  }
  v92 = objc_msgSend(a2, sel_webURL);
  if (v92)
  {
    v93 = v92;
    sub_23361D2D4();

    v94 = sub_23361D340();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v7, 0, 1, v94);
  }
  else
  {
    v95 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v7, 1, 1, v95);
  }
  v96 = v21;
  sub_23352FA2C((uint64_t)v7, v96, (uint64_t)v107, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_254248700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD8D0], (SEL *)&selRef_setWebURL_);

  sub_233168608((uint64_t)v7, &qword_254248700);
  v97 = objc_msgSend(a2, sel_webMerchantIdentifier);
  if (v97)
  {
    v98 = v97;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v99 = (void *)sub_23361E12C();
    objc_msgSend(v96, sel_setWebMerchantIdentifier_, v99);
    swift_bridgeObjectRelease_n();

  }
  v100 = objc_msgSend(a2, sel_webMerchantName);
  if (v100)
  {
    v101 = v100;
    sub_23361E150();

    swift_bridgeObjectRetain();
    v102 = (void *)sub_23361E12C();
    objc_msgSend(v96, sel_setWebMerchantName_, v102);
    swift_bridgeObjectRelease_n();

  }
  v103 = objc_msgSend(a2, sel_merchantName);
  if (v103)
  {
    v104 = v103;
    v105 = objc_msgSend(v106, sel_publicTransactionObject);
    objc_msgSend(v105, sel_setMerchantName_, v104);

  }
}

uint64_t type metadata accessor for ManagedApplePayTransactionInsightImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedApplePayTransactionInsightImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedApplePayTransactionInsightImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t TransactionType.init(_:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result > 0x16)
    *a2 = 0;
  else
    *a2 = byte_2336590E4[result];
  return result;
}

uint64_t TransactionType.init(from:withdrawalSubtype:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  char v3;
  char v4;

  v3 = 10;
  switch(result)
  {
    case 0:
    case 1:
      goto LABEL_3;
    case 3:
      *a3 = 11;
      break;
    case 4:
      *a3 = 8;
      break;
    case 5:
      if (a2 >= 5)
        v4 = 12;
      else
        v4 = 0xB0E0D020CuLL >> (8 * a2);
      *a3 = v4;
      break;
    case 6:
      *a3 = 5;
      break;
    case 7:
      *a3 = 1;
      break;
    case 8:
      *a3 = 4;
      break;
    case 10:
      *a3 = 3;
      break;
    case 11:
      *a3 = 9;
      break;
    case 12:
    case 17:
      *a3 = 7;
      break;
    default:
      v3 = 0;
LABEL_3:
      *a3 = v3;
      break;
  }
  return result;
}

uint64_t PKPaymentTransactionType.init(from:)(char *a1)
{
  return qword_233659100[*a1];
}

uint64_t PKPaymentTransactionWithdrawalSubtype.init(from:)(char *a1)
{
  return qword_233659188[*a1];
}

uint64_t _sSo24FKPaymentTransactionTypeV10FinanceKitEyAbC0bC0OcfC_0(char *a1)
{
  return qword_233659210[*a1];
}

uint64_t sub_2335309A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x23493465C](v1);
}

uint64_t sub_233530A40()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_233530A98(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x23493465C](v5);
  return sub_2333B2350;
}

id sub_233530BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_super v24;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_transactions] = MEMORY[0x24BEE4AF8];
  v18 = &v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_primaryAccountIdentifier];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_store] = a3;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_context] = a4;
  v19 = &v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_dateFromYear];
  v20 = sub_23361D634();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a6, v20);
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_transactionExporter] = a8;
  sub_23332DC20(a5, (uint64_t)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_formatterConfiguration]);
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_groupType] = a7;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_transactionChangesObserver] = a9;
  v24.receiver = v9;
  v24.super_class = (Class)type metadata accessor for TransactionsListProvider();
  v22 = objc_msgSendSuper2(&v24, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a6, v20);
  sub_233168500(a5, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  return v22;
}

void sub_233530D34()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  _QWORD v7[6];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_transactionChangesObserver];
  *(_QWORD *)(v1 + 32) = &off_250490FF8;
  swift_unknownObjectWeakAssign();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v1, sel_contextDidMergeChangesObjectIDsNotificationWithNotification_, *MEMORY[0x24BDBB450], *(_QWORD *)(v1 + 16));

  v3 = *(void **)&v0[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_context];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  v7[4] = sub_233532188;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2331C9ED4;
  v7[3] = &block_descriptor_23;
  v5 = _Block_copy(v7);
  v6 = v0;
  swift_release();
  objc_msgSend(v3, sel_performBlock_, v5);
  _Block_release(v5);
}

id TransactionsListProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TransactionsListProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TransactionsListProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransactionsListProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_233531010()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  _QWORD v5[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_context];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v5[4] = sub_2335325E4;
  v5[5] = v2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_2331C9ED4;
  v5[3] = &block_descriptor_7_1;
  v3 = _Block_copy(v5);
  v4 = v0;
  swift_release();
  objc_msgSend(v1, sel_performBlock_, v3);
  _Block_release(v3);
}

void sub_2335310CC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  unsigned int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _QWORD, uint64_t);
  unint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  char v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint8_t *v69;
  const char *v70;
  uint64_t v71;
  _BOOL4 v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint8_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101[2];

  v101[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361CD40();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)&a1[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_context];
  v16 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v101[0] = 0;
  v17 = objc_msgSend(v15, sel_setQueryGenerationFromToken_error_, v16, v101);

  v18 = v101[0];
  if (v17)
  {
    v95 = v4;
    v96 = v7;
    v98 = v12;
    v99 = v11;
    v97 = type metadata accessor for FormatterConfiguration();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
    v19 = sub_23361D850();
    v20 = *(_QWORD *)(v19 - 8);
    v100 = a1;
    v21 = *(_QWORD *)(v20 + 72);
    v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_233623D50;
    v24 = v23 + v22;
    v25 = *(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104);
    v25(v24, *MEMORY[0x24BDCF240], v19);
    v26 = v24 + v21;
    v27 = v100;
    v25(v26, *MEMORY[0x24BDCF250], v19);
    v28 = v18;
    sub_2333EF4B0(v23);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23361D790();
    swift_bridgeObjectRelease();
    type metadata accessor for ManagedInternalTransaction();
    v29 = *(_QWORD *)&v27[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_primaryAccountIdentifier];
    v30 = *(_QWORD *)&v27[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_primaryAccountIdentifier + 8];
    LOBYTE(v101[0]) = 1;
    static ManagedInternalTransaction.latestTransactionDate(externalAccountId:source:in:)(v29, v30, v101, (uint64_t)v10);
    v93 = v10;
    v94 = v14;
    v42 = *(_QWORD *)&v27[OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_groupType];
    if (v42 == 1)
    {
      v57 = v94;
      v58 = sub_23361CCD4();
      if ((v59 & 1) == 0)
      {
        v60 = sub_2335323DC(v29, v30, v58, (uint64_t)v93);
        v56 = sub_2334954A4((uint64_t)v60, 0, 1);

        goto LABEL_17;
      }
      if (qword_256041CA0 != -1)
        swift_once();
      v73 = sub_23361DB80();
      __swift_project_value_buffer(v73, (uint64_t)qword_2560495B0);
      v74 = sub_23361DB68();
      v75 = sub_23361E768();
      v76 = os_log_type_enabled(v74, v75);
      v78 = v98;
      v77 = v99;
      v79 = (uint64_t)v93;
      if (v76)
      {
        v80 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v80 = 0;
        MEMORY[0x234934590](v80, -1, -1);
      }

      sub_2331D0F20(v79);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v57, v77);
LABEL_33:
      v92 = (uint64_t)v100;
      goto LABEL_34;
    }
    if (v42)
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v61 = sub_23361DB80();
      __swift_project_value_buffer(v61, (uint64_t)qword_2560495B0);
      v62 = sub_23361DB68();
      v63 = sub_23361E768();
      v64 = os_log_type_enabled(v62, v63);
      v66 = v98;
      v65 = v99;
      v68 = (uint64_t)v93;
      v67 = v94;
      if (!v64)
        goto LABEL_27;
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      v70 = "Not able to fetch transactions for unknown group type";
    }
    else
    {
      v43 = sub_23361CCEC();
      if ((v44 & 1) == 0)
      {
        v45 = v43;
        v46 = sub_23361CCD4();
        if ((v47 & 1) == 0)
        {
          v48 = v46;
          sub_23361D6D0();
          sub_23361D7D8();
          sub_23361D88C();
          v49 = 100 * v48;
          if ((unsigned __int128)(v48 * (__int128)100) >> 64 == (100 * v48) >> 63)
          {
            v50 = __OFADD__(v49, v45);
            v51 = (void *)(v49 + v45);
            if (!v50)
            {
              v101[0] = v51;
              v52 = sub_23361F1D0();
              v54 = v53;
              sub_233168500((uint64_t)v96, (uint64_t (*)(_QWORD))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
              v55 = sub_2334961C8(v29, v30, v52, v54, (uint64_t)v93);
              swift_bridgeObjectRelease();
              v56 = sub_2334954A4((uint64_t)v55, 0, 1);

LABEL_17:
              v81 = sub_23361E984();
              v83 = v98;
              v82 = v99;

              v84 = v27;
              v85 = sub_233531DD8(v81, (uint64_t)v84);
              swift_bridgeObjectRelease();

              v86 = sub_23361E534();
              v87 = (uint64_t)v95;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v95, 1, 1, v86);
              sub_23361E4F8();
              v88 = v84;
              v89 = sub_23361E4EC();
              v90 = (_QWORD *)swift_allocObject();
              v91 = MEMORY[0x24BEE6930];
              v90[2] = v89;
              v90[3] = v91;
              v90[4] = v88;
              v90[5] = v85;
              sub_2333B205C(v87, (uint64_t)&unk_2560546A8, (uint64_t)v90);
              swift_release();
              sub_2331D0F20((uint64_t)v93);
              (*(void (**)(char *, uint64_t))(v83 + 8))(v94, v82);
              v92 = (uint64_t)v88;
LABEL_34:
              sub_233531A14(v92);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
        }
      }
      if (qword_256041CA0 != -1)
        swift_once();
      v71 = sub_23361DB80();
      __swift_project_value_buffer(v71, (uint64_t)qword_2560495B0);
      v62 = sub_23361DB68();
      v63 = sub_23361E768();
      v72 = os_log_type_enabled(v62, v63);
      v66 = v98;
      v65 = v99;
      v68 = (uint64_t)v93;
      v67 = v94;
      if (!v72)
        goto LABEL_27;
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
    }
    _os_log_impl(&dword_233151000, v62, v63, v70, v69, 2u);
    MEMORY[0x234934590](v69, -1, -1);
LABEL_27:

    sub_2331D0F20(v68);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
    goto LABEL_33;
  }
  v31 = v101[0];
  v32 = (void *)sub_23361D1B4();

  swift_willThrow();
  if (qword_256041CA0 != -1)
    swift_once();
  v33 = sub_23361DB80();
  __swift_project_value_buffer(v33, (uint64_t)qword_2560495B0);
  v34 = v32;
  v35 = v32;
  v36 = sub_23361DB68();
  v37 = sub_23361E768();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v38 = 138412290;
    v40 = v32;
    v41 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v101[0] = v41;
    sub_23361EBC4();
    *v39 = v41;

    _os_log_impl(&dword_233151000, v36, v37, "Failed to fetch latest transactions: %@.", v38, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v39, -1, -1);
    MEMORY[0x234934590](v38, -1, -1);

  }
  else
  {

  }
}

void sub_233531A14(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_context);
  v14[0] = 0;
  if (objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, 0, v14))
  {
    v2 = v14[0];
  }
  else
  {
    v3 = v14[0];
    v4 = (void *)sub_23361D1B4();

    swift_willThrow();
    if (qword_256041CA0 != -1)
      swift_once();
    v5 = sub_23361DB80();
    __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
    v6 = v4;
    v7 = v4;
    v8 = sub_23361DB68();
    v9 = sub_23361E768();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v4;
      v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v14[0] = v13;
      sub_23361EBC4();
      *v11 = v13;

      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v11, -1, -1);
      MEMORY[0x234934590](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_233531C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  sub_23361E4F8();
  v5[7] = sub_23361E4EC();
  sub_23361E474();
  return swift_task_switch();
}

uint64_t sub_233531CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_transactions) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = v2 + OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_delegate;
  swift_beginAccess();
  v4 = MEMORY[0x23493465C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_233168668(0, &qword_256051D10);
    swift_bridgeObjectRetain();
    v6 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_didUpdateTransactions_, v6);
    swift_unknownObjectRelease();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233531DD8(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v4)
      break;
    v9 = MEMORY[0x24BEE4AF8];
    result = sub_23361EE70();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_transactionExporter);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x234933120](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      ++v6;
      sub_2331BED58(v7, 1);

      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      if (v4 == v6)
        return v9;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_233531F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v23 = a1;
  v24 = a4;
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254247048 != -1)
    swift_once();
  v13 = *((_QWORD *)off_254247040 + 2);
  v14 = *(void **)(v13 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v15 = objc_msgSend(v14, sel_newBackgroundContext);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  if (qword_256041D40 != -1)
    swift_once();
  v16 = off_256054E98;
  type metadata accessor for ManagedTransactionExporter();
  v17 = (_QWORD *)swift_allocObject();
  v17[5] = type metadata accessor for BankConnectService();
  v17[6] = &protocol witness table for BankConnectService;
  v17[2] = v16;
  v18 = *(void **)(*((_QWORD *)off_254247040 + 2) + 16);
  swift_retain();
  v19 = objc_msgSend(v18, sel_viewContext);
  type metadata accessor for TransactionChangesObserver();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v20 + 16) = v19;
  v21 = objc_allocWithZone((Class)type metadata accessor for TransactionsListProvider());
  return sub_233530BD4(v23, a2, v13, (uint64_t)v15, (uint64_t)v12, (uint64_t)v9, v24, (uint64_t)v17, v20);
}

uint64_t sub_233532164()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_233532188()
{
  uint64_t v0;

  sub_2335310CC(*(char **)(v0 + 16));
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t type metadata accessor for TransactionsListProvider()
{
  uint64_t result;

  result = qword_256054630;
  if (!qword_256054630)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2335321D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC10FinanceKit24TransactionsListProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_233532228()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23353227C()
{
  return type metadata accessor for TransactionsListProvider();
}

uint64_t sub_233532284()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for TransactionsListProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransactionsListProvider.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TransactionsListProvider.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TransactionsListProvider.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of static TransactionsListProvider.makeProvider(primaryAccountIdentifier:dateFromYear:groupType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of TransactionsListProvider.performFetchAndStartObservingNotifications()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

id sub_2335323DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233626360;
  *(_QWORD *)(v8 + 32) = _s10FinanceKit26ManagedInternalTransactionC012predicateForE021withExternalAccountID04passB6CutoffSo11NSPredicateCSS_10Foundation4DateVSgtFZ_0(a1, a2, a4);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  v11 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v8 + 40) = sub_23361E6B4();
  sub_23361E408();
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  return v13;
}

uint64_t sub_233532530()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_233532564(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2331676FC;
  return sub_233531C78(a1, v4, v5, v7, v6);
}

uint64_t JSONHTTPRequest.makeAdditionalHTTPHeaderFields()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t JSONHTTPRequest.makeJSONEncoder()()
{
  sub_23361CB00();
  swift_allocObject();
  return sub_23361CAF4();
}

void *sub_233532630()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_2504672A0;
}

void *JSONHTTPRequest.makeHTTPHeaderFields()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (*(uint64_t (**)(void))(a2 + 40))();
  if (!v2)
  {
    sub_233189574(v3);
    return &unk_250467A38;
  }
  return (void *)v4;
}

uint64_t sub_2335326C8()
{
  return sub_2334773E0();
}

uint64_t JSONHTTPRequest.makeHTTPBody()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v12 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  swift_getAssociatedConformanceWitness();
  v9 = sub_23361CAE8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  swift_release();
  if (v2)
  {
    type metadata accessor for FinanceNetworkError();
    sub_2332F3EFC();
    swift_allocError();
    *v10 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_23353285C()
{
  return sub_2334759B0();
}

uint64_t sub_233532870()
{
  return sub_233477264();
}

uint64_t sub_233532884()
{
  return sub_233475960();
}

uint64_t sub_233532898()
{
  return sub_233476D68();
}

uint64_t dispatch thunk of JSONHTTPRequest.jsonBody.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of JSONHTTPRequest.makeAdditionalHTTPHeaderFields()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void *sub_2335328CC()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_250467220;
}

uint64_t sub_233532914()
{
  return sub_233476EF4();
}

uint64_t sub_233532928()
{
  sub_23361CB00();
  swift_allocObject();
  return sub_23361CAF4();
}

void *sub_23353295C()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_2504671A0;
}

uint64_t sub_2335329A4()
{
  return sub_233476B60();
}

void *sub_2335329EC()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_2504673E0;
}

uint64_t sub_233532A34()
{
  uint64_t *v0;

  return sub_233477E80(*v0, v0[1]);
}

_QWORD *sub_233532A4C()
{
  return sub_233476298();
}

uint64_t sub_233532A60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  sub_23338084C();
  v1 = sub_23361CAE8();
  swift_release();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_2332F3EFC();
    swift_allocError();
    *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_233532B4C()
{
  return sub_233475F48();
}

uint64_t sub_233532B60()
{
  return sub_233477754();
}

uint64_t sub_233532B74()
{
  return sub_2334763E4();
}

uint64_t sub_233532B88()
{
  return sub_233477FDC();
}

void *sub_233532B9C()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_250467460;
}

uint64_t sub_233532BE4()
{
  return sub_233478134();
}

char *sub_233532BFC()
{
  return sub_233475404();
}

uint64_t sub_233532C3C()
{
  return sub_233476550();
}

void *sub_233532C7C()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_250467020;
}

uint64_t sub_233532CC4()
{
  return sub_233476434();
}

uint64_t sub_233532CDC()
{
  return sub_233475608();
}

uint64_t sub_233532CF0()
{
  return sub_233476A1C();
}

uint64_t sub_233532D04()
{
  return sub_2334755B8();
}

uint64_t sub_233532D18()
{
  return sub_233476A00();
}

void *sub_233532D2C()
{
  sub_233189574(MEMORY[0x24BEE4AF8]);
  return &unk_250467360;
}

uint64_t sub_233532D74()
{
  uint64_t *v0;

  return sub_2334779A0(*v0, v0[1]);
}

uint64_t dispatch thunk of JSONHTTPRequest.makeJSONEncoder()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void *sub_233532D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = BankConnectWebServiceAccountsRequest.makeAdditionalHTTPHeaderFields()();
  if (!v0)
  {
    sub_233189574(v1);
    return &unk_2504670E0;
  }
  return (void *)v2;
}

uint64_t sub_233532DE0()
{
  return sub_2334768C8();
}

uint64_t sub_233532DF4()
{
  return sub_233475594();
}

uint64_t sub_233532E08()
{
  return sub_2334766EC();
}

uint64_t sub_233532E1C()
{
  return sub_233475F98();
}

uint64_t sub_233532E30()
{
  return sub_233477B74();
}

uint64_t sub_233532E44()
{
  return sub_233475C20();
}

uint64_t sub_233532E58()
{
  return sub_233477594();
}

uint64_t Change.init(previous:current:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v35 = a4;
  v40 = a5;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361EBAC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v15 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v17 = (char *)&v33 - v16;
  v18 = (char *)&v33 + *(int *)(v15 + 48) - v16;
  v37 = v11;
  v38 = a1;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19((char *)&v33 - v16, (uint64_t)a1, v10);
  v39 = a2;
  v19(v18, (uint64_t)a2, v10);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v20(v17, 1, a3) == 1)
  {
    v21 = v20(v18, 1, a3);
    v22 = v37;
    if (v21 == 1)
    {
      v23 = *(void (**)(char *, uint64_t))(v37 + 8);
      v23(v17, v10);
LABEL_8:
      v23(v39, v10);
      v23(v38, v10);
      v27 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v40, 1, 1, v27);
    }
    goto LABEL_6;
  }
  v19(v13, (uint64_t)v17, v10);
  if (v20(v18, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, a3);
    v22 = v37;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v17, TupleTypeMetadata2);
    goto LABEL_9;
  }
  v24 = v34;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v34, v18, a3);
  v25 = sub_23361E108();
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v24, a3);
  v26(v13, a3);
  v22 = v37;
  v23 = *(void (**)(char *, uint64_t))(v37 + 8);
  v23(v17, v10);
  if ((v25 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v29 = swift_getTupleTypeMetadata2();
  v30 = v40;
  v31 = v40 + *(int *)(v29 + 48);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
  v32(v40, (uint64_t)v38, v10);
  v32(v31, (uint64_t)v39, v10);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v30, 0, 1, v29);
}

uint64_t static Change.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(void);
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  char v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v64;
  char *v65;
  char *v66;
  char v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t TupleTypeMetadata2;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;

  v77 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v71 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361EBAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v75 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)&v69 - v12;
  v84 = *(char **)(v8 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v70 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v69 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v81 = (char *)&v69 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)&v69 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v79 = (char *)&v69 - v21;
  v76 = a3;
  v72 = a4;
  v23 = type metadata accessor for Change(0, a3, a4, v22);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v69 - v25;
  v27 = swift_getTupleTypeMetadata2();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v69 + *(int *)(v27 + 48) - v29;
  v83 = v24;
  v31 = *(void (**)(void))(v24 + 16);
  v32 = (char *)&v69 - v29;
  v31();
  ((void (*)(char *, uint64_t, uint64_t))v31)(v30, a2, v23);
  v33 = swift_getTupleTypeMetadata2();
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48);
  if (v34(v32, 1, v33) == 1)
  {
    v35 = 1;
    v36 = v34(v30, 1, v33);
    v37 = v83;
    if (v36 == 1)
      goto LABEL_23;
    goto LABEL_6;
  }
  v69 = v32;
  ((void (*)(char *, char *, uint64_t))v31)(v26, v32, v23);
  v38 = *(int *)(v33 + 48);
  v39 = &v26[v38];
  if (v34(v30, 1, v33) != 1)
  {
    v41 = &v30[v38];
    v42 = v84;
    v43 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v84 + 4);
    v44 = v79;
    v43(v79, v30, v8);
    v43(v82, v39, v8);
    v43(v81, v41, v8);
    v45 = v78;
    v46 = &v78[*(int *)(TupleTypeMetadata2 + 48)];
    v43(v78, v26, v8);
    v47 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v42 + 2);
    v47(v46, v44, v8);
    v48 = v76;
    v49 = v77;
    v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
    if (v50(v45, 1, v76) == 1)
    {
      if (v50(v46, 1, v48) == 1)
      {
        v51 = v45;
        v52 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
        v52(v51, v8);
        goto LABEL_16;
      }
    }
    else
    {
      v53 = v74;
      v47(v74, v45, v8);
      if (v50(v46, 1, v48) != 1)
      {
        v54 = v71;
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v71, v46, v48);
        v55 = sub_23361E108();
        v56 = *(void (**)(char *, uint64_t))(v49 + 8);
        v56(v54, v48);
        v56(v53, v48);
        v52 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
        v52(v78, v8);
        if ((v55 & 1) != 0)
        {
LABEL_16:
          v57 = v81;
          v58 = v73;
          v59 = &v73[*(int *)(TupleTypeMetadata2 + 48)];
          v60 = v82;
          v47(v73, v82, v8);
          v84 = v59;
          v47(v59, v57, v8);
          if (v50(v58, 1, v48) == 1)
          {
            v52(v57, v8);
            v52(v60, v8);
            v52(v79, v8);
            if (v50(v84, 1, v48) == 1)
            {
              v52(v58, v8);
              v35 = 1;
              goto LABEL_14;
            }
          }
          else
          {
            v61 = v70;
            v47(v70, v58, v8);
            v62 = v84;
            if (v50(v84, 1, v48) != 1)
            {
              v64 = v77;
              v65 = v71;
              (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v71, v62, v48);
              v66 = v58;
              v67 = sub_23361E108();
              v68 = *(void (**)(char *, uint64_t))(v64 + 8);
              v68(v65, v48);
              v52(v81, v8);
              v52(v82, v8);
              v52(v79, v8);
              v68(v61, v48);
              v52(v66, v8);
              v37 = v83;
              v32 = v69;
              if ((v67 & 1) != 0)
              {
                v35 = 1;
                goto LABEL_23;
              }
              goto LABEL_22;
            }
            v52(v81, v8);
            v52(v82, v8);
            v52(v79, v8);
            (*(void (**)(char *, uint64_t))(v77 + 8))(v61, v48);
          }
          (*(void (**)(char *, uint64_t))(v75 + 8))(v58, TupleTypeMetadata2);
          v37 = v83;
          v32 = v69;
LABEL_22:
          v35 = 0;
          goto LABEL_23;
        }
LABEL_13:
        v52(v81, v8);
        v52(v82, v8);
        v52(v79, v8);
        v35 = 0;
LABEL_14:
        v37 = v83;
        v32 = v69;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v53, v48);
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v45, TupleTypeMetadata2);
    v52 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
    goto LABEL_13;
  }
  v40 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
  v40(v39, v8);
  v40(v26, v8);
  v32 = v69;
LABEL_6:
  v35 = 0;
  v37 = v28;
  v23 = v27;
LABEL_23:
  (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v23);
  return v35;
}

uint64_t type metadata accessor for Change(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Change);
}

uint64_t sub_23353383C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Change.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_233533848()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361EBAC();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2335338B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  size_t v13;
  uint64_t v16;
  int v17;
  int v18;
  _QWORD *v19;
  unsigned int (*v21)(uint64_t *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(_DWORD *)(v6 + 80);
  v10 = ~v9;
  v11 = v8 + v9;
  v12 = ((v8 + v9) & v10) + v8;
  if (v7 >= 2)
    v13 = (v11 & v10) + v8;
  else
    v13 = v12 + 1;
  if (v9 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v13 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    if (v7 > 1)
    {
      if ((*(unsigned int (**)(uint64_t *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
      {
LABEL_35:
        memcpy(a1, a2, v13);
        return a1;
      }
    }
    else if (*((_BYTE *)a2 + v12))
    {
      v17 = (*((unsigned __int8 *)a2 + v12) - 1) << (8 * v12);
      if (v12 > 3)
        v17 = 0;
      if ((_DWORD)v12)
      {
        if (v12 <= 3)
          v18 = (v11 & v10) + v8;
        else
          v18 = 4;
        __asm { BR              X11 }
      }
      if (v17 != -1)
        goto LABEL_35;
    }
    v21 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v21(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v19 = (_QWORD *)(((unint64_t)a2 + v11) & v10);
    if (v21(v19, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v10), v19, v8);
      if (v7 > 1)
        return a1;
      goto LABEL_33;
    }
    (*(void (**)(unint64_t, _QWORD *, uint64_t))(v6 + 16))(((unint64_t)a1 + v11) & v10, v19, v5);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v11) & v10, 0, 1, v5);
    if (v7 <= 1)
LABEL_33:
      *((_BYTE *)a1 + v12) = 0;
  }
  return a1;
}

uint64_t sub_233533AF8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v6;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = v6 + v7;
  if (v5 > 1)
  {
    result = (*(uint64_t (**)(uint64_t))(v4 + 48))(result);
    if (result >= 2)
      return result;
    goto LABEL_14;
  }
  v9 = (v8 & ~v7) + v6;
  if (!*(_BYTE *)(result + v9))
    goto LABEL_14;
  v10 = (*(unsigned __int8 *)(result + v9) - 1) << (8 * v9);
  if (v9 > 3)
    v10 = 0;
  if ((_DWORD)v9)
  {
    if (v9 > 3)
      LODWORD(v9) = 4;
    __asm { BR              X11 }
  }
  if (v10 == -1)
  {
LABEL_14:
    v11 = ~v7;
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v12(v2, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    v13 = (v8 + v2) & v11;
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v13, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v13, v3);
  }
  return result;
}

void *sub_233533C50(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int (*v15)(unsigned __int8 *, uint64_t, uint64_t);
  void *v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = ((v8 + v9) & ~v9) + v8;
  if (v7 > 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
    {
LABEL_23:
      if (v7 >= 2)
        v17 = ((v8 + v9) & ~v9) + v8;
      else
        v17 = v11 + 1;
      memcpy(a1, a2, v17);
      return a1;
    }
  }
  else if (a2[v11])
  {
    v12 = (a2[v11] - 1) << (8 * v11);
    if (v11 > 3)
      v12 = 0;
    if ((_DWORD)v11)
    {
      if (v11 <= 3)
        v13 = ((v8 + v9) & ~(_DWORD)v9) + v8;
      else
        v13 = 4;
      __asm { BR              X11 }
    }
    if (v12 != -1)
      goto LABEL_23;
  }
  v14 = ~v9;
  v15 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
  if (v15(a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v16 = (void *)((unint64_t)&a2[v10] & v14);
  if (v15((unsigned __int8 *)v16, 1, v5))
  {
    memcpy((void *)(((unint64_t)a1 + v10) & v14), v16, v8);
  }
  else
  {
    (*(void (**)(unint64_t, void *, uint64_t))(v6 + 16))(((unint64_t)a1 + v10) & v14, v16, v5);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v10) & v14, 0, 1, v5);
  }
  if (v7 <= 1)
    *((_BYTE *)a1 + ((v8 + v9) & ~v9) + v8) = 0;
  return a1;
}

unsigned __int8 *sub_233533E54(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  char v13;
  int v14;
  int v15;
  uint64_t (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(unsigned __int8 *, uint64_t, uint64_t);
  int v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  int v29;
  int v30;
  size_t v31;
  unsigned int (*v32)(const void *, uint64_t, uint64_t);
  void *v33;
  const void *v34;
  size_t v36;
  size_t v37;
  uint64_t v38;

  v3 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v38 = ~v9;
  v10 = v8 + v9;
  v11 = (v8 + v9) & ~v9;
  v12 = v11 + v8;
  if (v7 > 1)
  {
    v36 = v11 + v8;
    v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, v7, v5);
    v19 = v17(a2, v7, v5);
    if (v18 >= 2)
    {
      v3 = a2;
      v12 = v36;
      if (v19 >= 2)
        goto LABEL_50;
      goto LABEL_54;
    }
    v3 = a2;
    v12 = v36;
    if (v19 >= 2)
    {
LABEL_31:
      if (!v17(a1, 1, v5))
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      v22 = (unint64_t)&a1[v10] & v38;
      if (!v17((unsigned __int8 *)v22, 1, v5))
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v22, v5);
      goto LABEL_50;
    }
LABEL_35:
    v23 = v6;
    v24 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v25 = v24(a1, 1, v5);
    v26 = v24(v3, 1, v5);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, v3, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v5);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 24))(a1, v3, v5);
LABEL_41:
        v27 = (unsigned __int8 *)((unint64_t)&a1[v10] & v38);
        v28 = (unsigned __int8 *)((unint64_t)&v3[v10] & v38);
        v29 = v24(v27, 1, v5);
        v30 = v24(v28, 1, v5);
        if (v29)
        {
          if (!v30)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(v27, v28, v5);
            (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v5);
            return a1;
          }
        }
        else
        {
          if (!v30)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 24))(v27, v28, v5);
            return a1;
          }
          (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v27, v5);
        }
        memcpy(v27, v28, v8);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(a1, v5);
    }
    memcpy(a1, v3, v8);
    goto LABEL_41;
  }
  v13 = 8 * v12;
  if (!a1[v12])
    goto LABEL_29;
  v14 = (a1[v12] - 1) << v13;
  if (v12 > 3)
    v14 = 0;
  if ((_DWORD)v12)
  {
    if (v12 <= 3)
      v15 = v12;
    else
      v15 = 4;
    __asm { BR              X12 }
  }
  if (v14 == -1)
  {
LABEL_29:
    if (a2[v12])
    {
      v20 = (a2[v12] - 1) << v13;
      if (v12 > 3)
        v20 = 0;
      if ((_DWORD)v12)
      {
        if (v12 <= 3)
          v21 = v12;
        else
          v21 = 4;
        __asm { BR              X11 }
      }
      if (v20 != -1)
      {
        v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_35;
  }
  if (a2[v12] && (a2[v12] - 1) << v13 != -1)
  {
LABEL_50:
    if (v7 >= 2)
      v31 = v12;
    else
      v31 = v12 + 1;
    memcpy(a1, v3, v31);
    return a1;
  }
LABEL_54:
  v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  v37 = v12;
  if (v32(v3, 1, v5))
  {
    memcpy(a1, v3, v8);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, v3, v5);
    (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v33 = (void *)((unint64_t)&a1[v10] & v38);
  v34 = (const void *)((unint64_t)&v3[v10] & v38);
  if (v32(v34, 1, v5))
  {
    memcpy(v33, v34, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v33, v34, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v33, 0, 1, v5);
  }
  if (v7 <= 1)
    a1[v37] = 0;
  return a1;
}

void *sub_233534368(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int (*v15)(unsigned __int8 *, uint64_t, uint64_t);
  void *v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = ((v8 + v9) & ~v9) + v8;
  if (v7 > 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
    {
LABEL_23:
      if (v7 >= 2)
        v17 = ((v8 + v9) & ~v9) + v8;
      else
        v17 = v11 + 1;
      memcpy(a1, a2, v17);
      return a1;
    }
  }
  else if (a2[v11])
  {
    v12 = (a2[v11] - 1) << (8 * v11);
    if (v11 > 3)
      v12 = 0;
    if ((_DWORD)v11)
    {
      if (v11 <= 3)
        v13 = ((v8 + v9) & ~(_DWORD)v9) + v8;
      else
        v13 = 4;
      __asm { BR              X11 }
    }
    if (v12 != -1)
      goto LABEL_23;
  }
  v14 = ~v9;
  v15 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
  if (v15(a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v16 = (void *)((unint64_t)&a2[v10] & v14);
  if (v15((unsigned __int8 *)v16, 1, v5))
  {
    memcpy((void *)(((unint64_t)a1 + v10) & v14), v16, v8);
  }
  else
  {
    (*(void (**)(unint64_t, void *, uint64_t))(v6 + 32))(((unint64_t)a1 + v10) & v14, v16, v5);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v10) & v14, 0, 1, v5);
  }
  if (v7 <= 1)
    *((_BYTE *)a1 + ((v8 + v9) & ~v9) + v8) = 0;
  return a1;
}

unsigned __int8 *sub_23353456C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  char v13;
  int v14;
  int v15;
  uint64_t (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(unsigned __int8 *, uint64_t, uint64_t);
  int v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  int v29;
  int v30;
  size_t v31;
  unsigned int (*v32)(const void *, uint64_t, uint64_t);
  void *v33;
  const void *v34;
  size_t v36;
  size_t v37;
  uint64_t v38;

  v3 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v38 = ~v9;
  v10 = v8 + v9;
  v11 = (v8 + v9) & ~v9;
  v12 = v11 + v8;
  if (v7 > 1)
  {
    v36 = v11 + v8;
    v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, v7, v5);
    v19 = v17(a2, v7, v5);
    if (v18 >= 2)
    {
      v3 = a2;
      v12 = v36;
      if (v19 >= 2)
        goto LABEL_50;
      goto LABEL_54;
    }
    v3 = a2;
    v12 = v36;
    if (v19 >= 2)
    {
LABEL_31:
      if (!v17(a1, 1, v5))
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      v22 = (unint64_t)&a1[v10] & v38;
      if (!v17((unsigned __int8 *)v22, 1, v5))
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v22, v5);
      goto LABEL_50;
    }
LABEL_35:
    v23 = v6;
    v24 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v25 = v24(a1, 1, v5);
    v26 = v24(v3, 1, v5);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, v3, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v5);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 40))(a1, v3, v5);
LABEL_41:
        v27 = (unsigned __int8 *)((unint64_t)&a1[v10] & v38);
        v28 = (unsigned __int8 *)((unint64_t)&v3[v10] & v38);
        v29 = v24(v27, 1, v5);
        v30 = v24(v28, 1, v5);
        if (v29)
        {
          if (!v30)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(v27, v28, v5);
            (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v5);
            return a1;
          }
        }
        else
        {
          if (!v30)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 40))(v27, v28, v5);
            return a1;
          }
          (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(v27, v5);
        }
        memcpy(v27, v28, v8);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v23 + 8))(a1, v5);
    }
    memcpy(a1, v3, v8);
    goto LABEL_41;
  }
  v13 = 8 * v12;
  if (!a1[v12])
    goto LABEL_29;
  v14 = (a1[v12] - 1) << v13;
  if (v12 > 3)
    v14 = 0;
  if ((_DWORD)v12)
  {
    if (v12 <= 3)
      v15 = v12;
    else
      v15 = 4;
    __asm { BR              X12 }
  }
  if (v14 == -1)
  {
LABEL_29:
    if (a2[v12])
    {
      v20 = (a2[v12] - 1) << v13;
      if (v12 > 3)
        v20 = 0;
      if ((_DWORD)v12)
      {
        if (v12 <= 3)
          v21 = v12;
        else
          v21 = 4;
        __asm { BR              X11 }
      }
      if (v20 != -1)
      {
        v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_35;
  }
  if (a2[v12] && (a2[v12] - 1) << v13 != -1)
  {
LABEL_50:
    if (v7 >= 2)
      v31 = v12;
    else
      v31 = v12 + 1;
    memcpy(a1, v3, v31);
    return a1;
  }
LABEL_54:
  v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  v37 = v12;
  if (v32(v3, 1, v5))
  {
    memcpy(a1, v3, v8);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, v3, v5);
    (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v33 = (void *)((unint64_t)&a1[v10] & v38);
  v34 = (const void *)((unint64_t)&v3[v10] & v38);
  if (v32(v34, 1, v5))
  {
    memcpy(v33, v34, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v33, v34, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v33, 0, 1, v5);
  }
  if (v7 <= 1)
    a1[v37] = 0;
  return a1;
}

uint64_t sub_233534A80(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  BOOL v17;
  uint64_t result;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (v5 >= 2)
  {
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = v8 + 1;
  }
  if (!a2)
    return 0;
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_25;
  v11 = v9 + ((v8 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v12 = 8 * v11;
  if (v11 > 3)
    goto LABEL_11;
  v14 = ((v10 + ~(-1 << v12)) >> v12) + 1;
  if (HIWORD(v14))
  {
    v13 = *(_DWORD *)(a1 + v11);
    if (v13)
      goto LABEL_18;
  }
  else
  {
    if (v14 <= 0xFF)
    {
      if (v14 < 2)
        goto LABEL_25;
LABEL_11:
      v13 = *(unsigned __int8 *)(a1 + v11);
      if (!*(_BYTE *)(a1 + v11))
        goto LABEL_25;
LABEL_18:
      v15 = (v13 - 1) << v12;
      if (v11 > 3)
        v15 = 0;
      if ((_DWORD)v11)
      {
        if (v11 > 3)
          LODWORD(v11) = 4;
        __asm { BR              X12 }
      }
      return v7 + v15 + 1;
    }
    v13 = *(unsigned __int16 *)(a1 + v11);
    if (*(_WORD *)(a1 + v11))
      goto LABEL_18;
  }
LABEL_25:
  if (!v7)
    return 0;
  if (v5 < 2)
    return 0;
  v16 = (*(uint64_t (**)(void))(v4 + 48))();
  v17 = v16 >= 2;
  result = v16 - 2;
  if ((_DWORD)result == 0 || !v17)
    return 0;
  return result;
}

void sub_233534BD0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  size_t v12;
  size_t v13;
  BOOL v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = v9 - 1;
  if (v8 < 2)
    v11 = 0;
  v12 = ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v10;
  if (v8 >= 2)
    v13 = v12;
  else
    v13 = v12 + 1;
  v14 = a3 >= v11;
  v15 = a3 - v11;
  if (v15 != 0 && v14)
  {
    if (v13 > 3)
    {
      v6 = 1u;
      if (v11 < a2)
        goto LABEL_21;
      goto LABEL_28;
    }
    v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v6 = 4u;
      if (v11 < a2)
      {
LABEL_21:
        v17 = ~v11 + a2;
        if (v13 < 4)
        {
          if ((_DWORD)v13)
          {
            v18 = v17 & ~(-1 << (8 * v13));
            bzero(a1, v13);
            if ((_DWORD)v13 == 3)
            {
              *a1 = v18;
              *((_BYTE *)a1 + 2) = BYTE2(v18);
            }
            else if ((_DWORD)v13 == 2)
            {
              *a1 = v18;
            }
            else
            {
              *(_BYTE *)a1 = v18;
            }
          }
        }
        else
        {
          bzero(a1, v13);
          *(_DWORD *)a1 = v17;
        }
        __asm { BR              X10 }
      }
LABEL_28:
      __asm { BR              X13 }
    }
    if (v16 >= 0x100)
      v6 = 2;
    else
      v6 = v16 > 1;
  }
  if (v11 < a2)
    goto LABEL_21;
  goto LABEL_28;
}

void sub_233534E04()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_233534E0C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_233534E2C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_233534E3C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_233534E44()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_233534E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (!v3)
    ++v4;
  if (v3 > 1)
  {
    v7 = (*(uint64_t (**)(void))(v2 + 48))();
    if (v7 >= 2)
      return v7 - 1;
    else
      return 0;
  }
  else
  {
    v5 = ((v4 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v4;
    if (*(_BYTE *)(a1 + v5))
    {
      v6 = (*(unsigned __int8 *)(a1 + v5) - 1) << (8 * v5);
      if (v5 > 3)
        v6 = 0;
      if ((_DWORD)v5)
      {
        if (v5 > 3)
          LODWORD(v5) = 4;
        __asm { BR              X11 }
      }
      return (v6 + 1);
    }
    else
    {
      return 0;
    }
  }
}

void sub_233534F2C(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = ((v7 + v8) & ~v8) + v7;
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v9 >= 4)
    {
      bzero(a1, ((v7 + v8) & ~v8) + v7);
      *a1 = v10;
      LOBYTE(v11) = 1;
      if (v5 > 1)
        return;
LABEL_20:
      *((_BYTE *)a1 + v9) = v11;
      return;
    }
    v11 = (v10 >> (8 * v9)) + 1;
    if ((_DWORD)v9)
    {
      v12 = v10 & ~(-1 << (8 * v9));
      bzero(a1, ((v7 + v8) & ~v8) + v7);
      if ((_DWORD)v9 != 3)
      {
        if ((_DWORD)v9 == 2)
        {
          *(_WORD *)a1 = v12;
          if (v5 > 1)
            return;
        }
        else
        {
          *(_BYTE *)a1 = v12;
          if (v5 > 1)
            return;
        }
        goto LABEL_20;
      }
      *(_WORD *)a1 = v12;
      *((_BYTE *)a1 + 2) = BYTE2(v12);
    }
    if (v5 > 1)
      return;
    goto LABEL_20;
  }
  if (v5 > 1)
  {
    if (a2)
      (*(void (**)(unsigned int *, _QWORD, _QWORD))(v4 + 56))(a1, a2 + 1, *(unsigned int *)(v4 + 84));
  }
  else
  {
    *((_BYTE *)a1 + v9) = 0;
  }
}

uint64_t sub_233535068(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    v4 = (void **)(a1 + 40);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> BankConnectTransactionsMatcher.matchTransactions(for:in:)(FinanceKit::FullyQualifiedAccountIdentifier a1, NSManagedObjectContext in)
{
  sub_2335374D4((uint64_t *)a1.accountID._countAndFlagsBits, a1.accountID._object);
}

uint64_t sub_233535128(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_23361D6A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_sharedId);
  if (v9)
  {
    v10 = v9;
    sub_23361D67C();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
    v12 = 0;
    if (v11 != 1)
      goto LABEL_6;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  v12 = 1;
LABEL_6:
  sub_233168608((uint64_t)v8, &qword_254246740);
  return v12;
}

uint64_t BankConnectTransactionsMatcher.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BankConnectTransactionsMatcher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23353528C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  double v30;
  id *v31;
  char **v32;
  id v33;
  id v34;
  double v35;
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t);

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 >> 62;
  if (!(a2 >> 62))
  {
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_39:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_23361EF30();
  v9 = result;
  if (!result)
    goto LABEL_39;
LABEL_3:
  v49 = v4;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x234933120](0, a2);
  }
  else
  {
    if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v11 = *(id *)(a2 + 32);
  }
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = v12;
  v14 = objc_msgSend(v13, sel_publicTransactionObject);
  v15 = objc_msgSend(v14, sel_transactionDate);

  sub_23361D5EC();
  sub_23361D52C();
  v17 = v16;
  v50 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v50(v7, v49);
  if (v9 < 1)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    result = sub_23361EF30();
    if (result < 1)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    swift_bridgeObjectRetain();
    v18 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v18)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    result = swift_bridgeObjectRetain();
  }
  if (v18 < v9)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((a2 & 0xC000000000000001) != 0 && v9 != 1)
  {
    type metadata accessor for ManagedInternalTransaction();
    result = 1;
    do
    {
      v19 = result + 1;
      sub_23361EDB0();
      result = v19;
    }
    while (v9 != v19);
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    v20 = sub_23361EF3C();
    v21 = v23;
    v22 = v24;
    v26 = v25;
    result = swift_bridgeObjectRelease_n();
    v9 = v26 >> 1;
  }
  else
  {
    v20 = a2 & 0xFFFFFFFFFFFFFF8;
    v21 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
    v22 = 1;
  }
  v27 = v49;
  v28 = v9 - v22;
  v47 = v20;
  if (v9 == v22)
  {
    v29 = v13;
LABEL_22:
    swift_unknownObjectRelease();
    return (uint64_t)v29;
  }
  if (v9 > v22)
  {
    v30 = fabs(v17);
    v31 = (id *)(v21 + 8 * v22);
    v32 = &selRef__initWithImage_;
    v48 = a1;
    while (1)
    {
      v29 = *v31;
      v33 = objc_msgSend(v29, v32[493], v47, v48);
      v34 = objc_msgSend(v33, sel_transactionDate);

      sub_23361D5EC();
      sub_23361D52C();
      v36 = v35;
      v50(v7, v27);
      v37 = fabs(v36);
      if (v37 < v30)
      {

      }
      else
      {
        if (v30 == v37)
        {
          v38 = objc_msgSend(v29, sel_transactionId);
          v39 = sub_23361E150();
          v41 = v40;

          v42 = objc_msgSend(v13, sel_transactionId);
          v43 = sub_23361E150();
          v45 = v44;

          if (v39 == v43 && v41 == v45)
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_36;
          }
          v46 = sub_23361F224();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v46 & 1) != 0)
          {

          }
          else
          {

LABEL_36:
            v29 = v13;
          }
          v37 = v30;
          v27 = v49;
          v32 = &selRef__initWithImage_;
          goto LABEL_26;
        }

        v29 = v13;
        v37 = v30;
      }
LABEL_26:
      ++v31;
      v13 = v29;
      v30 = v37;
      if (!--v28)
        goto LABEL_22;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_2335356C8(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = a1;
  v18 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v6 & 0xFFFFFFFFFFFFFF8;
      v17 = v6 & 0xC000000000000001;
      v15 = v6;
      while (v17)
      {
        v9 = (id)MEMORY[0x234933120](v8, v6);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v12 = a3;
        v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_23361EE4C();
          sub_23361EE7C();
          v6 = v15;
          sub_23361EE88();
          sub_23361EE58();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_23361EF30();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_233535868(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  float v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = v3;
  v46 = a2;
  v47 = a3;
  v6 = sub_23361CB30();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v52 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)v45 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044098);
  MEMORY[0x24BDAC7A8](v10);
  v50 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  if (a1 >> 62)
    goto LABEL_25;
  v12 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    if (!v12)
      return v13;
    v59 = MEMORY[0x24BEE4AF8];
    result = sub_233273FB0(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
      break;
    v45[1] = v4;
    v15 = 0;
    v13 = v59;
    v16 = v54;
    v48 = v12;
    v49 = v55 & 0xC000000000000001;
    while (v12 != v15)
    {
      if (v49)
        v17 = (id)MEMORY[0x234933120](v15, v55);
      else
        v17 = *(id *)(v55 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_publicTransactionObject);
      v20 = objc_msgSend(v19, sel_merchantName);

      if (!v20)
      {
        v21 = objc_msgSend(v18, sel_publicTransactionObject);
        v20 = objc_msgSend(v21, sel_transactionDescription);

      }
      v56 = v18;
      v22 = sub_23361E150();
      v24 = v23;

      v57 = v22;
      v58 = v24;
      v25 = sub_23361D73C();
      v26 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v50, 1, 1, v25);
      sub_2331685C4();
      v27 = sub_23361EC0C();
      v29 = v28;
      sub_233168608(v26, &qword_256044098);
      v57 = v27;
      v58 = v29;
      v30 = v51;
      sub_23361CB0C();
      v31 = v52;
      sub_23361CB24();
      v32 = *(void (**)(char *, uint64_t))(v53 + 8);
      v32(v30, v16);
      v33 = sub_23361EBDC();
      v32(v31, v16);
      swift_bridgeObjectRelease();
      v57 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
      sub_23319C29C();
      sub_23361E0D8();
      swift_bridgeObjectRelease();
      v34 = sub_23361E1EC();
      v36 = v35;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = HIBYTE(v36) & 0xF;
      if ((v36 & 0x2000000000000000) == 0)
        v37 = v34 & 0xFFFFFFFFFFFFLL;
      if (v37)
      {
        v38 = sub_23336B728(v34, v36, v46, v47);
        v39 = sub_23361E234();
        v40 = sub_23361E234();

        swift_bridgeObjectRelease();
        if (v40 >= v39)
          v41 = v39;
        else
          v41 = v40;
        v42 = (float)v38 / (float)v41;
      }
      else
      {

        swift_bridgeObjectRelease();
        v42 = 0.0;
      }
      v12 = v48;
      v59 = v13;
      v44 = *(_QWORD *)(v13 + 16);
      v43 = *(_QWORD *)(v13 + 24);
      v4 = v44 + 1;
      if (v44 >= v43 >> 1)
      {
        sub_233273FB0(v43 > 1, v44 + 1, 1);
        v13 = v59;
      }
      ++v15;
      *(_QWORD *)(v13 + 16) = v4;
      *(float *)(v13 + 4 * v44 + 32) = v42;
      if (v12 == v15)
        return v13;
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v12 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_233535CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, unint64_t *a10, uint64_t a11, uint64_t (*a12)(id), uint64_t a13, void *a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t result;
  int64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  float v73;
  uint64_t v74;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  void (*v85)(unint64_t, uint64_t);
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  char *v101;
  char *v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char **v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  char *v119;
  unint64_t v120;
  id v121;
  __int128 v122;
  unint64_t v123;
  unint64_t v124;
  objc_super v125;
  unsigned __int8 v126;

  v114 = a8;
  v111 = a6;
  v112 = a7;
  LODWORD(v110) = a5;
  v109 = a4;
  v108 = (char **)a3;
  v115 = a1;
  v121 = a14;
  v105 = sub_23361CB30();
  v103 = *(_QWORD *)(v105 - 8);
  v15 = MEMORY[0x24BDAC7A8](v105);
  v104 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v102 = (char *)&v101 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044098);
  MEMORY[0x24BDAC7A8](v18);
  v101 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23361D634();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v101 - v24;
  v107 = sub_23361CB84();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v113 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23361DB80();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a10[1];
  v120 = *a10;
  v32 = a10[2];
  v33 = a10[3];
  if (qword_256041CA0 != -1)
    swift_once();
  v34 = __swift_project_value_buffer(v27, (uint64_t)qword_2560495B0);
  v116 = v27;
  v117 = v28;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v119 = v30;
  v35(v30, v34, v27);
  if (a2)
  {
    v36 = type metadata accessor for ManagedInternalTransaction();
    *(_QWORD *)&v122 = v120;
    *((_QWORD *)&v122 + 1) = v31;
    v123 = v32;
    v124 = v33;
    v126 = 1;
    v37 = a2;
    v38 = (id)v36;
    v39 = v118;
    v40 = static ManagedInternalTransaction.existingTransaction(withPaymentHash:fqai:source:in:)(v115, v37, (uint64_t)&v122, &v126);
    v41 = v39;
    if (v39)
      goto LABEL_6;
    v38 = (id)v40;
    if (v40)
      goto LABEL_6;
  }
  else
  {
    v41 = v118;
  }
  Date.advancedByDays(_:)(-2, (uint64_t)v25);
  Date.advancedByDays(_:)(3, (uint64_t)v23);
  v42 = (unint64_t)v113;
  sub_23361CB54();
  type metadata accessor for ManagedInternalTransaction();
  v125.receiver = (id)swift_getObjCClassFromMetadata();
  v125.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v43 = objc_msgSendSuper2(&v125, sel_fetchRequest);
  v44 = (void *)sub_23361E3D8();
  objc_msgSend(v43, sel_setRelationshipKeyPathsForPrefetching_, v44);

  *(_QWORD *)&v122 = v120;
  *((_QWORD *)&v122 + 1) = v31;
  v123 = v32;
  v124 = v33;
  v126 = 1;
  v45 = _s10FinanceKit26ManagedInternalTransactionC012predicateForE04with6amount8currency12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_So9NSDecimalaSS10Foundation04DateL0VAA0E6SourceOtFZ_0(&v122, (uint64_t)v108, v109, v110, v111, v112, v42, &v126);
  objc_msgSend(v43, sel_setPredicate_, v45);

  v38 = v121;
  v46 = sub_23361E984();
  if (v41)
  {

    (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v42, v107);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v117 + 8))(v119, v116);
    return (unint64_t)v38;
  }
  v47 = v46;
  v48 = (unint64_t)v119;
  if (!(v46 >> 62))
  {
    if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
LABEL_55:
    swift_bridgeObjectRelease();
    v87 = sub_23361DB68();
    v88 = sub_23361E750();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v89 = 0;
      _os_log_impl(&dword_233151000, v87, v88, "Failed to match transaction using amount, currency and time window", v89, 2u);
      MEMORY[0x234934590](v89, -1, -1);
    }

    goto LABEL_74;
  }
  swift_bridgeObjectRetain();
  v86 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v86)
    goto LABEL_55;
LABEL_13:
  v121 = v43;
  result = sub_2335356C8(v47, a12, a13);
  v50 = result;
  v51 = result >> 62;
  if (result >> 62)
  {
LABEL_60:
    swift_bridgeObjectRetain();
    v90 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v90)
    {
      swift_bridgeObjectRetain();
      v91 = sub_23361EF30();
      result = swift_bridgeObjectRelease();
      if (v91 >= 2)
        goto LABEL_16;
      goto LABEL_62;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    v94 = sub_23361DB68();
    v95 = sub_23361E750();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v96 = 0;
      _os_log_impl(&dword_233151000, v94, v95, "Failed to match transaction. All similar transactions are matched already", v96, 2u);
      MEMORY[0x234934590](v96, -1, -1);
    }

    goto LABEL_74;
  }
  v52 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v52)
    goto LABEL_67;
  if (v52 >= 2)
  {
LABEL_16:
    if (*((_QWORD *)&a9 + 1))
    {
      v122 = a9;
      v53 = sub_23361D73C();
      v54 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v101, 1, 1, v53);
      sub_2331685C4();
      v55 = sub_23361EC0C();
      v57 = v56;
      sub_233168608(v54, &qword_256044098);
      *(_QWORD *)&v122 = v55;
      *((_QWORD *)&v122 + 1) = v57;
      v58 = v102;
      sub_23361CB0C();
      v59 = v104;
      sub_23361CB24();
      v60 = *(void (**)(char *, uint64_t))(v103 + 8);
      v61 = v105;
      v60(v58, v105);
      v62 = sub_23361EBDC();
      v60(v59, v61);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v122 = v62;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
      sub_23319C29C();
      sub_23361E0D8();
      swift_bridgeObjectRelease();
      v63 = sub_23361E1EC();
      v65 = v64;
      swift_bridgeObjectRelease();
      v66 = HIBYTE(v65) & 0xF;
      if ((v65 & 0x2000000000000000) == 0)
        v66 = v63 & 0xFFFFFFFFFFFFLL;
      if (v66)
      {
        swift_bridgeObjectRetain();
        v67 = sub_233535868(v50, v63, v65);
        v109 = (uint64_t)v41;
        v110 = v65;
        swift_bridgeObjectRelease();
        v42 = sub_233300E2C(v67);
        v108 = &v101;
        v68 = *(void **)(v67 + 16);
        swift_bridgeObjectRetain();
        v118 = (void *)v50;
        v48 = (unint64_t)v119;
        if (v68)
        {
          v69 = 0;
          v70 = (char *)(v67 + 32);
          v71 = v50 & 0xFFFFFFFFFFFFFF8;
          if (v50 < 0)
            v72 = v50;
          else
            v72 = v50 & 0xFFFFFFFFFFFFFF8;
          v115 = v72;
          v120 = v50 & 0xC000000000000001;
          v50 += 32;
          v105 = (uint64_t)v68 - 1;
          v111 = MEMORY[0x24BEE4AF8];
          v112 = v71;
          while (1)
          {
            v48 = (unint64_t)v69;
            while (1)
            {
              if (v48 >= *(_QWORD *)(v67 + 16))
              {
                __break(1u);
LABEL_59:
                __break(1u);
                goto LABEL_60;
              }
              v73 = *(float *)&v70[4 * v48];
              if (v51)
              {
                swift_bridgeObjectRetain();
                v41 = (id)sub_23361EF30();
                v71 = v112;
                swift_bridgeObjectRelease();
              }
              else
              {
                v41 = *(id *)(v71 + 16);
              }
              if ((id)v48 == v41)
              {
LABEL_47:
                v48 = (unint64_t)v119;
                goto LABEL_50;
              }
              if (v120)
                break;
              if (v48 >= *(_QWORD *)(v71 + 16))
                goto LABEL_59;
              v41 = *(id *)(v50 + 8 * v48);
              if ((v42 & 0x100000000) == 0)
                goto LABEL_35;
LABEL_26:
              ++v48;

              if (v68 == (void *)v48)
                goto LABEL_47;
            }
            v41 = (id)MEMORY[0x234933120](v48, v118);
            if ((v42 & 0x100000000) != 0)
              goto LABEL_26;
LABEL_35:
            if (v73 != *(float *)&v42)
              goto LABEL_26;
            v104 = v70;
            v74 = v111;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v122 = v74;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_233273F94(0, *(_QWORD *)(v111 + 16) + 1, 1);
              v111 = v122;
            }
            v70 = v104;
            v77 = *(_QWORD *)(v111 + 16);
            v76 = *(_QWORD *)(v111 + 24);
            v78 = v77 + 1;
            if (v77 >= v76 >> 1)
            {
              v103 = v77 + 1;
              v102 = (char *)v77;
              sub_233273F94(v76 > 1, v77 + 1, 1);
              v78 = v103;
              v77 = (unint64_t)v102;
              v70 = v104;
              v111 = v122;
            }
            v69 = (char *)(v48 + 1);
            v79 = v111;
            *(_QWORD *)(v111 + 16) = v78;
            v80 = v79 + 16 * v77;
            *(float *)(v80 + 32) = v73;
            *(_QWORD *)(v80 + 40) = v41;
            v81 = v105 == v48;
            v48 = (unint64_t)v119;
            if (v81)
              goto LABEL_50;
          }
        }
        v111 = MEMORY[0x24BEE4AF8];
LABEL_50:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v82 = sub_233535068(v111);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v50 = v82;
        v42 = (unint64_t)v113;
      }
      else
      {
        swift_bridgeObjectRelease();
        v82 = v50;
        v48 = (unint64_t)v119;
      }
    }
    else
    {
      v82 = v50;
    }
    v83 = v121;
    if ((unint64_t)v50 >> 62)
    {
      swift_bridgeObjectRetain();
      v97 = sub_23361EF30();
      swift_bridgeObjectRelease();
      v84 = v114;
      if (v97)
        goto LABEL_53;
    }
    else
    {
      v84 = v114;
      if (*(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_53:
        v38 = (id)sub_23353528C(v84, v50);
        swift_bridgeObjectRelease();

        (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v42, v107);
        v85 = *(void (**)(unint64_t, uint64_t))(v117 + 8);
LABEL_66:
        v85(v48, v116);
        return (unint64_t)v38;
      }
    }
    swift_bridgeObjectRelease();
    v98 = sub_23361DB68();
    v99 = sub_23361E750();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v100 = 0;
      _os_log_impl(&dword_233151000, v98, v99, "Failed to match transaction using merchant name", v100, 2u);
      MEMORY[0x234934590](v100, -1, -1);
    }

LABEL_74:
    (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v42, v107);
    (*(void (**)(unint64_t, uint64_t))(v117 + 8))(v48, v116);
    return 0;
  }
LABEL_62:
  v92 = v117;
  if ((v50 & 0xC000000000000001) != 0)
  {
    v38 = (id)MEMORY[0x234933120](0, v50);
    v93 = v121;
    goto LABEL_65;
  }
  v93 = v121;
  if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v38 = *(id *)(v50 + 32);
LABEL_65:
    swift_bridgeObjectRelease();

    (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v42, v107);
    v85 = *(void (**)(unint64_t, uint64_t))(v92 + 8);
    goto LABEL_66;
  }
  __break(1u);
  return result;
}

uint64_t sub_2335368A0(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  unsigned __int8 v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047470);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  type metadata accessor for ManagedInternalTransaction();
  v18.receiver = (id)swift_getObjCClassFromMetadata();
  v18.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v7 = objc_msgSendSuper2(&v18, sel_fetchRequest);
  v8 = (void *)sub_23361E3D8();
  objc_msgSend(v7, sel_setRelationshipKeyPathsForPrefetching_, v8);

  v15 = v14;
  v16 = v5;
  v17 = v6;
  v9 = sub_23361CB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v19 = 2;
  v10 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with14transactionIDs12dateInterval6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_SaySSGSg10Foundation04DateM0VSgAA0E6SourceOSgtFZ_0((uint64_t *)&v15, 0, (uint64_t)v4, &v19);
  sub_233168608((uint64_t)v4, &qword_256047470);
  objc_msgSend(v7, sel_setPredicate_, v10);

  swift_getKeyPath();
  _s10FinanceKit26ManagedInternalTransactionC27transactionsSortDescriptors9ascending27withKeyPathForSortingByDateSaySo16NSSortDescriptorCGSb_s0kL0CyAC10Foundation0P0VGtFZ_0(0);
  swift_release();
  sub_233233C60();
  v11 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v11);

  objc_msgSend(v7, sel_setReturnsObjectsAsFaults_, 0);
  v12 = sub_23361E984();

  return v12;
}

uint64_t sub_233536AA8(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  int v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  void *v46;
  id v47;
  id v48;
  void *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  int v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  void *v62;
  void *v63;
  uint64_t inited;
  unint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  id v75;
  char *v76;
  id v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  int v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  id v99;
  id v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123[5];
  uint64_t v124;

  v122 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v5);
  v104 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_23361D6A0();
  v108 = *(_QWORD *)(v107 - 8);
  v7 = MEMORY[0x24BDAC7A8](v107);
  v105 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v103 = (char *)&v102 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v106 = (char *)&v102 - v11;
  v12 = sub_23361D868();
  v117 = *(_QWORD *)(v12 - 8);
  v118 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361D634();
  v120 = *(_QWORD *)(v15 - 8);
  v121 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v115 = a2[1];
  v116 = v18;
  v19 = a2[2];
  v113 = a2[3];
  v114 = v19;
  v20 = objc_msgSend(a1, sel_publicTransactionObject);
  v21 = objc_msgSend(v20, sel_amount);

  objc_msgSend(v21, sel_decimalValue);
  v112 = sub_23361EB28();
  v111 = v22;
  v110 = v23;
  v24 = objc_msgSend(a1, sel_publicTransactionObject);
  v25 = objc_msgSend(v24, sel_currency);

  v109 = sub_23361E150();
  v27 = v26;

  v28 = objc_msgSend(a1, sel_publicTransactionObject);
  v29 = objc_msgSend(v28, sel_transactionDate);

  v30 = (uint64_t)v17;
  sub_23361D5EC();

  v31 = objc_msgSend(a1, sel_publicTransactionObject);
  v32 = objc_msgSend(v31, sel_merchantName);

  if (!v32)
  {
    v33 = objc_msgSend(a1, sel_publicTransactionObject);
    v32 = objc_msgSend(v33, sel_transactionDescription);

  }
  v34 = sub_23361E150();
  v36 = v35;

  v37 = objc_msgSend(a1, sel_paymentHash);
  if (v37)
  {
    v38 = v37;
    v39 = sub_23361E150();
    v41 = v40;

  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  v123[0] = v116;
  v123[1] = v115;
  v123[2] = v114;
  v123[3] = v113;
  sub_23361D7D8();
  *((_QWORD *)&v101 + 1) = v36;
  *(_QWORD *)&v101 = v34;
  v42 = (void *)v30;
  v43 = v119;
  v44 = sub_233535CB4(v39, v41, v112, v111, v110, v109, v27, v30, v101, (unint64_t *)v123, (uint64_t)v14, sub_233535128, 0, v122);
  if (v43)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v14, v118);
    return (*(uint64_t (**)(void *, uint64_t))(v120 + 8))(v42, v121);
  }
  v46 = (void *)v44;
  (*(void (**)(char *, uint64_t))(v117 + 8))(v14, v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v46)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v58 = sub_23361DB80();
    __swift_project_value_buffer(v58, (uint64_t)qword_2560495B0);
    v59 = sub_23361DB68();
    v60 = sub_23361E750();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v61 = 0;
      _os_log_impl(&dword_233151000, v59, v60, "All similar transactions are matched already.", v61, 2u);
      MEMORY[0x234934590](v61, -1, -1);
    }

    return (*(uint64_t (**)(void *, uint64_t))(v120 + 8))(v42, v121);
  }
  v47 = v46;
  v48 = objc_msgSend(a1, sel_sharedId);
  if (v48)
  {
    v49 = v48;
    v50 = v103;
    sub_23361D67C();

    v51 = v108;
    v52 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
    v53 = (uint64_t)v104;
    v54 = v50;
    v55 = v107;
    v52(v104, v54, v107);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v53, 0, 1, v55);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v53, 1, v55);
    v57 = v106;
    if (v56 != 1)
    {
      v52(v106, (char *)v53, v55);
      goto LABEL_20;
    }
  }
  else
  {
    v53 = (uint64_t)v104;
    v55 = v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v104, 1, 1, v107);
    v57 = v106;
  }
  sub_23361D694();
  sub_233168608(v53, &qword_254246740);
LABEL_20:
  v62 = (void *)sub_23361D658();
  objc_msgSend(a1, sel_setSharedId_, v62);

  v63 = (void *)sub_23361D658();
  objc_msgSend(v47, sel_setSharedId_, v63);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233626360;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = v47;
  v123[0] = inited;
  sub_23361E408();
  v65 = v123[0];
  if ((unint64_t)v123[0] >> 62)
  {
    v99 = v47;
    v100 = a1;
    swift_bridgeObjectRetain();
    v66 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v66 = *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = v47;
    v68 = a1;
  }
  v69 = v105;
  if (v66)
  {
    sub_2333F1454(v65);
    v71 = v70;
  }
  else
  {
    v71 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  _s10FinanceKit26ManagedTransactionInsightsC05mergedE012transactions2inACSgShyAA0c8InternalD0CG_So22NSManagedObjectContextCtFZ_0(v71, (uint64_t)v122);
  v73 = v72;
  swift_bridgeObjectRelease();

  if (qword_256041CA0 != -1)
    swift_once();
  v74 = sub_23361DB80();
  __swift_project_value_buffer(v74, (uint64_t)qword_2560495B0);
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v69, v57, v55);
  v75 = v47;
  v76 = v69;
  v77 = a1;
  v78 = v75;
  v79 = v77;
  v80 = sub_23361DB68();
  v81 = sub_23361E780();
  v82 = v81;
  if (!os_log_type_enabled(v80, v81))
  {

    v98 = *(void (**)(char *, uint64_t))(v108 + 8);
    v98(v76, v55);

    v98(v57, v55);
    return (*(uint64_t (**)(void *, uint64_t))(v120 + 8))(v42, v121);
  }
  v83 = swift_slowAlloc();
  v119 = swift_slowAlloc();
  v123[0] = v119;
  *(_DWORD *)v83 = 136315650;
  LODWORD(v118) = v82;
  v84 = objc_msgSend(v79, sel_transactionId);
  v85 = sub_23361E150();
  v122 = v42;
  v87 = v86;

  v124 = sub_233164DCC(v85, v87, v123);
  sub_23361EBC4();

  swift_bridgeObjectRelease();
  *(_WORD *)(v83 + 12) = 2080;
  v88 = objc_msgSend(v78, sel_transactionId);
  v89 = sub_23361E150();
  v91 = v90;

  v124 = sub_233164DCC(v89, v91, v123);
  sub_23361EBC4();

  swift_bridgeObjectRelease();
  *(_WORD *)(v83 + 22) = 2080;
  sub_2331C17C8();
  v92 = v105;
  v93 = v107;
  v94 = sub_23361F1D0();
  v124 = sub_233164DCC(v94, v95, v123);
  sub_23361EBC4();
  swift_bridgeObjectRelease();
  v96 = *(void (**)(char *, uint64_t))(v108 + 8);
  v96(v92, v93);
  _os_log_impl(&dword_233151000, v80, (os_log_type_t)v118, "Similar transaction found for transactionID: %s. Linking with Bank Connect transaction with transactionID: %s using sharedID: %s.", (uint8_t *)v83, 0x20u);
  v97 = v119;
  swift_arrayDestroy();
  MEMORY[0x234934590](v97, -1, -1);
  MEMORY[0x234934590](v83, -1, -1);

  v96(v106, v93);
  return (*(uint64_t (**)(void *, uint64_t))(v120 + 8))(v122, v121);
}

void sub_2335374D4(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v31;
  id v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  id v39;
  void *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  _DWORD *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  __int128 v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint8_t *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  objc_super v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v84 = a2;
  v3 = sub_23361D6A0();
  v89 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)v70 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (unint64_t)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)v70 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)v70 - v13;
  v14 = *a1;
  v15 = a1[1];
  v17 = a1[2];
  v16 = a1[3];
  if (qword_256041CA0 != -1)
    goto LABEL_54;
  while (1)
  {
    v18 = sub_23361DB80();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v76 = v19;
    v20 = sub_23361DB68();
    v21 = sub_23361E780();
    v22 = os_log_type_enabled(v20, v21);
    v75 = v10;
    if (v22)
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v88 = v24;
      v83 = v14;
      *(_DWORD *)v23 = 136315138;
      v95 = v24;
      v86 = v23 + 4;
      *(_QWORD *)&v92 = 0;
      *((_QWORD *)&v92 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361ED98();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v92 = sub_233164DCC(v92, *((unint64_t *)&v92 + 1), &v95);
      v14 = v83;
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v20, v21, "Attempting to match Bank Connect and PassKit transactions for %s.", v23, 0xCu);
      v25 = v88;
      swift_arrayDestroy();
      MEMORY[0x234934590](v25, -1, -1);
      MEMORY[0x234934590](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    *(_QWORD *)&v92 = v14;
    *((_QWORD *)&v92 + 1) = v15;
    v93 = v17;
    v94 = v16;
    v26 = v90;
    v27 = sub_2335368A0(&v92);
    if (v26)
      return;
    v10 = v27;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_23361EF30();
    }
    else
    {
      v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v85 = 0;
    v86 = (uint8_t *)v10;
    v88 = v28;
    if (!v28)
      break;
    v79 = v16;
    v80 = v17;
    v81 = v15;
    v83 = v14;
    v90 = v10 & 0xC000000000000001;
    v17 = 4;
    *(_QWORD *)&v29 = 136315138;
    v71 = v29;
    v70[1] = MEMORY[0x24BEE4AD8] + 8;
    v16 = (uint64_t)v82;
    v14 = v88;
    while (1)
    {
      v31 = v90 ? (id)MEMORY[0x234933120](v17 - 4, v10) : *(id *)(v10 + 8 * v17);
      v32 = v31;
      v15 = v17 - 3;
      if (__OFADD__(v17 - 4, 1))
        break;
      v33 = objc_msgSend(v31, sel_sharedId);
      if (v33)
      {
        v34 = v33;
        v35 = v87;
        sub_23361D67C();

        v36 = v89;
        v37 = *(void (**)(uint64_t, char *, uint64_t))(v89 + 32);
        v37(v16, v35, v3);
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
        v30(v16, 0, 1, v3);
        v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
        if (v38(v16, 1, v3) != 1)
        {
          sub_233168608(v16, &qword_254246740);
          v39 = objc_msgSend(v32, sel_sharedId);
          if (v39)
          {
            v40 = v39;
            v41 = v87;
            sub_23361D67C();

            v42 = (uint64_t)v78;
            v43 = v41;
            v44 = (uint64_t)v77;
            v37((uint64_t)v78, v43, v3);
            v30(v42, 0, 1, v3);
            if (v38(v42, 1, v3) != 1)
            {
              v37(v44, (char *)v42, v3);
              type metadata accessor for ManagedInternalTransaction();
              v91.receiver = (id)swift_getObjCClassFromMetadata();
              v91.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
              v45 = objc_msgSendSuper2(&v91, sel_fetchRequest);
              v46 = (void *)sub_23361E3D8();
              objc_msgSend(v45, sel_setRelationshipKeyPathsForPrefetching_, v46);

              *(_QWORD *)&v92 = v83;
              *((_QWORD *)&v92 + 1) = v81;
              v93 = v80;
              v94 = v79;
              LOBYTE(v95) = 1;
              v47 = _s10FinanceKit26ManagedInternalTransactionC24predicateForTransactions4with8sharedId6sourceSo11NSPredicateCAA31FullyQualifiedAccountIdentifierV_10Foundation4UUIDVAA0E6SourceOtFZ_0(&v92, v44, (unsigned __int8 *)&v95);
              objc_msgSend(v45, sel_setPredicate_, v47);

              v48 = v85;
              v49 = sub_23361E984();
              v85 = v48;
              if (v48)
              {
                (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v44, v3);

                swift_bridgeObjectRelease_n();
                return;
              }
              v50 = v49;
              (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v44, v3);

              goto LABEL_26;
            }
          }
          else
          {
            v42 = (uint64_t)v78;
            v30((uint64_t)v78, 1, 1, v3);
          }
          sub_233168608(v42, &qword_254246740);
          v50 = MEMORY[0x24BEE4AF8];
LABEL_26:
          v16 = (uint64_t)v82;
          v14 = v88;
          if (v50 >> 62)
          {
            swift_bridgeObjectRetain();
            v51 = sub_23361EF30();
            swift_bridgeObjectRelease();
          }
          else
          {
            v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (!v51)
          {
            v32 = v32;
            v52 = sub_23361DB68();
            v53 = sub_23361E780();
            v54 = v53;
            if (os_log_type_enabled(v52, v53))
            {
              v55 = swift_slowAlloc();
              v73 = v54;
              v56 = (_DWORD *)v55;
              v74 = v55;
              v72 = swift_slowAlloc();
              *(_QWORD *)&v92 = v72;
              *v56 = v71;
              v57 = objc_msgSend(v32, sel_transactionId);
              v58 = sub_23361E150();
              v60 = v59;

              v16 = (uint64_t)v82;
              v61 = sub_233164DCC(v58, v60, (uint64_t *)&v92);
              v62 = (uint8_t *)v74;
              *(_QWORD *)(v74 + 4) = v61;

              v14 = v88;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_233151000, v52, (os_log_type_t)v73, "No similar transaction found for transactionID: %s, resetting sharedID to nil.", v62, 0xCu);
              v63 = v72;
              swift_arrayDestroy();
              MEMORY[0x234934590](v63, -1, -1);
              MEMORY[0x234934590](v74, -1, -1);

            }
            else
            {

            }
            objc_msgSend(v32, sel_setSharedId_, 0);
          }

          v10 = (unint64_t)v86;
          goto LABEL_12;
        }
        v10 = (unint64_t)v86;
        v14 = v88;
      }
      else
      {
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
        v30(v16, 1, 1, v3);
      }

      sub_233168608(v16, &qword_254246740);
LABEL_12:
      ++v17;
      if (v15 == v14)
      {
        swift_bridgeObjectRelease();
        v14 = 4;
        v17 = v75;
        v16 = (uint64_t)v87;
        while (1)
        {
          v10 = v14 - 4;
          if (v90)
            v64 = (id)MEMORY[0x234933120](v14 - 4, v86);
          else
            v64 = *(id *)&v86[8 * v14];
          v65 = v64;
          v15 = v14 - 3;
          if (__OFADD__(v10, 1))
            goto LABEL_53;
          v66 = objc_msgSend(v64, sel_sharedId);
          if (v66)
          {
            v67 = v66;
            sub_23361D67C();

            v68 = v89;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v17, v16, v3);
            v30(v17, 0, 1, v3);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v17, 1, v3) != 1)
            {

              sub_233168608(v17, &qword_254246740);
              goto LABEL_37;
            }
          }
          else
          {
            v30(v17, 1, 1, v3);
          }
          sub_233168608(v17, &qword_254246740);
          *(_QWORD *)&v92 = v83;
          *((_QWORD *)&v92 + 1) = v81;
          v93 = v80;
          v94 = v79;
          v69 = v85;
          sub_233536AA8(v65, (uint64_t *)&v92, v84);

          v85 = v69;
          if (v69)
            goto LABEL_49;
LABEL_37:
          ++v14;
          if (v15 == v88)
            goto LABEL_49;
        }
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_49:
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for BankConnectTransactionsMatcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectTransactionsMatcher()
{
  return swift_lookUpClassMethod();
}

uint64_t RawBankConnectData.NotificationEventType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.init(eventTypes:subscriptionId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t RawBankConnectData.NotificationEventsRequestBody.fromDateTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RawBankConnectData.NotificationEventsRequestBody.fromDateTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RawBankConnectData.NotificationEventsRequestBody.fromDateTime.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.NotificationEventsRequestBody.subscriptionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(uint64_t a1)
{
  return sub_233177414(a1, qword_2560548E8);
}

uint64_t RawBankConnectData.NotificationEventsRequestBody.subscriptionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.NotificationEventsRequestBody.subscriptionId.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0);
  return nullsub_1;
}

uint64_t sub_2335380EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7069726373627573;
  else
    return 0x657461446D6F7266;
}

uint64_t sub_23353813C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23353BEAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233538160()
{
  sub_23353A89C();
  return sub_23361F428();
}

uint64_t sub_233538188()
{
  sub_23353A89C();
  return sub_23361F434();
}

uint64_t RawBankConnectData.NotificationEventsRequestBody.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560547C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353A89C();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0);
    v8[14] = 1;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.NotificationEventsRequestBody.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v24 = a2;
  v27 = sub_23361D634();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560547D8);
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)&v11[*(int *)(v9 + 20)];
  *v12 = 0;
  v12[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353A89C();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v21 = v11;
    v22 = a1;
    v23 = v5;
    v13 = v25;
    v30 = 0;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v15 = v26;
    v14 = v27;
    sub_23361F068();
    v16 = (uint64_t)v21;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v14);
    v29 = 1;
    v17 = sub_23361EFCC();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v28);
    swift_bridgeObjectRelease();
    *v12 = v17;
    v12[1] = v19;
    sub_2331684BC(v16, v24, type metadata accessor for RawBankConnectData.NotificationEventsRequestBody);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    return sub_233168500(v16, type metadata accessor for RawBankConnectData.NotificationEventsRequestBody);
  }
}

uint64_t sub_2335385A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.NotificationEventsRequestBody.init(from:)(a1, a2);
}

uint64_t sub_2335385B4(_QWORD *a1)
{
  return RawBankConnectData.NotificationEventsRequestBody.encode(to:)(a1);
}

uint64_t RawBankConnectData.NotificationEventsResponse.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.NotificationEventsResponse.events.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawBankConnectData.NotificationEventsResponse.events.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.NotificationEventsResponse.init(events:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static RawBankConnectData.NotificationEventsResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23322C834(*a1, *a2);
}

uint64_t sub_233538620()
{
  return 0x73746E657665;
}

uint64_t sub_233538634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2335386C0()
{
  sub_23353A8E0();
  return sub_23361F428();
}

uint64_t sub_2335386E8()
{
  sub_23353A8E0();
  return sub_23361F434();
}

uint64_t RawBankConnectData.NotificationEventsResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560547E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353A8E0();
  sub_23361F410();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560547F0);
  sub_23353A938(&qword_2560547F8, &qword_256054800, (uint64_t)&protocol conformance descriptor for RawBankConnectData.NotificationEvent, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RawBankConnectData.NotificationEventsResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353A8E0();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560547F0);
    sub_23353A938(&qword_256054810, &qword_256054818, (uint64_t)&protocol conformance descriptor for RawBankConnectData.NotificationEvent, MEMORY[0x24BEE12D0]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233538980@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RawBankConnectData.NotificationEventsResponse.init(from:)(a1, a2);
}

uint64_t sub_233538994(_QWORD *a1)
{
  return RawBankConnectData.NotificationEventsResponse.encode(to:)(a1);
}

uint64_t sub_2335389A8(uint64_t *a1, uint64_t *a2)
{
  return sub_23322C834(*a1, *a2);
}

uint64_t RawBankConnectData.NotificationEvent.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.NotificationEvent.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.NotificationEvent.id.modify())()
{
  return nullsub_1;
}

void RawBankConnectData.NotificationEvent.eventType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *RawBankConnectData.NotificationEvent.eventType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*RawBankConnectData.NotificationEvent.eventType.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.NotificationEvent.eventTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEvent(0) + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RawBankConnectData.NotificationEvent.eventTimestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEvent(0) + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RawBankConnectData.NotificationEvent.eventTimestamp.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.NotificationEvent(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.NotificationEvent.consentId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEvent(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.NotificationEvent.consentId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEvent(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.NotificationEvent.consentId.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.NotificationEvent(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.NotificationEvent.resourceId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEvent(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.NotificationEvent.resourceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEvent(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.NotificationEvent.resourceId.modify())(_QWORD)
{
  type metadata accessor for RawBankConnectData.NotificationEvent(0);
  return nullsub_1;
}

uint64_t RawBankConnectData.NotificationEvent.init(id:eventType:eventTimestamp:consentId:resourceId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;

  v16 = *a3;
  v17 = (int *)type metadata accessor for RawBankConnectData.NotificationEvent(0);
  v18 = (_QWORD *)(a9 + v17[8]);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v16;
  v19 = a9 + v17[6];
  v20 = sub_23361D634();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a4, v20);
  v22 = (_QWORD *)(a9 + v17[7]);
  *v22 = a5;
  v22[1] = a6;
  *v18 = a7;
  v18[1] = a8;
  return result;
}

uint64_t RawBankConnectData.NotificationEvent.description.getter()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  sub_23361ED98();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23361EEE8();
  sub_23361E27C();
  type metadata accessor for RawBankConnectData.NotificationEvent(0);
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256045060, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return *(_QWORD *)((char *)&v2 + 1);
}

uint64_t sub_233538F54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233538F78 + 4 * byte_233659440[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_233538F78()
{
  return 0x707954746E657665;
}

uint64_t sub_233538F98()
{
  return 0x6D6954746E657665;
}

uint64_t sub_233538FBC()
{
  return 0x49746E65736E6F63;
}

uint64_t sub_233538FD8()
{
  return 0x656372756F736572;
}

uint64_t sub_233538FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23353BFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233539018()
{
  sub_23353A9BC();
  return sub_23361F428();
}

uint64_t sub_233539040()
{
  sub_23353A9BC();
  return sub_23361F434();
}

uint64_t RawBankConnectData.NotificationEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054820);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353A9BC();
  sub_23361F410();
  v10[15] = 0;
  sub_23361F140();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + 16);
    v10[13] = 1;
    sub_23333B0FC();
    sub_23361F17C();
    type metadata accessor for RawBankConnectData.NotificationEvent(0);
    v10[12] = 2;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    v10[11] = 3;
    sub_23361F140();
    v10[10] = 4;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RawBankConnectData.NotificationEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v31 = a2;
  v3 = sub_23361D634();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054830);
  v6 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RawBankConnectData.NotificationEvent(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v12[*(int *)(v10 + 32)];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v36 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353A9BC();
  v35 = v8;
  v14 = (uint64_t)v37;
  sub_23361F3EC();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v5;
    v16 = v6;
    v37 = a1;
    v30 = v9;
    v17 = v32;
    v18 = v33;
    v43 = 0;
    v19 = (uint64_t)v12;
    *(_QWORD *)v12 = sub_23361F02C();
    *((_QWORD *)v12 + 1) = v20;
    v41 = 1;
    sub_23333B2F8();
    sub_23361F068();
    v12[16] = v42;
    v40 = 2;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361F068();
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v12[*(int *)(v30 + 24)], v15, v18);
    v39 = 3;
    v21 = sub_23361F02C();
    v22 = (uint64_t *)&v12[*(int *)(v30 + 28)];
    *v22 = v21;
    v22[1] = v23;
    v38 = 4;
    v24 = sub_23361EFCC();
    v25 = v36;
    v26 = v24;
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v34);
    swift_bridgeObjectRelease();
    *v25 = v26;
    v25[1] = v28;
    sub_2331684BC(v19, v31, type metadata accessor for RawBankConnectData.NotificationEvent);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    return sub_233168500(v19, type metadata accessor for RawBankConnectData.NotificationEvent);
  }
}

uint64_t sub_233539614@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RawBankConnectData.NotificationEvent.init(from:)(a1, a2);
}

uint64_t sub_233539628(_QWORD *a1)
{
  return RawBankConnectData.NotificationEvent.encode(to:)(a1);
}

uint64_t RawBankConnectData.NotificationEventType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  char v5;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3E0();
  if (v2)
  {

    v5 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_23361F230();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    RawBankConnectData.NotificationEventType.init(rawValue:)((char *)v7);
    v5 = v7[0];
    if (LOBYTE(v7[0]) == 3)
      v5 = 0;
  }
  *a2 = v5;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void *static RawBankConnectData.NotificationEventType.allCases.getter()
{
  return &unk_25046BA40;
}

uint64_t RawBankConnectData.NotificationEventType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x5F544E45534E4F43;
  if (*v0 != 1)
    v1 = 0x5F544E554F434341;
  if (*v0)
    return v1;
  else
    return 0x4E574F4E4B4E55;
}

uint64_t sub_2335397BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23322733C(*a1, *a2);
}

uint64_t sub_2335397C8()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233539880()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233539914()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2335399C8@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.NotificationEventType.init(rawValue:)(a1);
}

void sub_2335399D4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEF44454B4F564552;
  v5 = 0x5F544E45534E4F43;
  if (v2 != 1)
  {
    v5 = 0x5F544E554F434341;
    v4 = 0xEF4445474E414843;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x4E574F4E4B4E55;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_233539A4C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RawBankConnectData.NotificationEventType.init(from:)(a1, a2);
}

uint64_t sub_233539A60()
{
  sub_23353C340();
  return sub_23361E354();
}

void sub_233539AAC(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046BA68;
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.eventTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.eventTypes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RawBankConnectData.RegisterToNotificationEventsRequestBody.eventTypes.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.subscriptionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.subscriptionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*RawBankConnectData.RegisterToNotificationEventsRequestBody.subscriptionId.modify())()
{
  return nullsub_1;
}

uint64_t sub_233539B70()
{
  _BYTE *v0;

  if (*v0)
    return 0x7069726373627573;
  else
    return 0x707954746E657665;
}

uint64_t sub_233539BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23353C220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233539BE0()
{
  sub_23353AA84();
  return sub_23361F428();
}

uint64_t sub_233539C08()
{
  sub_23353AA84();
  return sub_23361F434();
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054838);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v11[1] = v1[2];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353AA84();
  sub_23361F410();
  v14 = v9;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604A7A8);
  sub_23353AAC8(&qword_25604A7B0, (uint64_t (*)(void))sub_23333B0FC, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  if (!v2)
  {
    v12 = 1;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RawBankConnectData.RegisterToNotificationEventsRequestBody.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054848);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23353AA84();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604A7A8);
    v14[15] = 0;
    sub_23353AAC8(&qword_25604A7F8, (uint64_t (*)(void))sub_23333B2F8, MEMORY[0x24BEE12D0]);
    sub_23361F068();
    v10 = v15;
    v14[14] = 1;
    swift_bridgeObjectRetain();
    v11 = sub_23361EFCC();
    v13 = v12;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v13;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_233539F7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RawBankConnectData.RegisterToNotificationEventsRequestBody.init(from:)(a1, a2);
}

uint64_t sub_233539F90(_QWORD *a1)
{
  return RawBankConnectData.RegisterToNotificationEventsRequestBody.encode(to:)(a1);
}

uint64_t RawBankConnectData.RegisterToNotificationEventsResponse.subscriptionId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawBankConnectData.RegisterToNotificationEventsResponse.subscriptionId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawBankConnectData.RegisterToNotificationEventsResponse.subscriptionId.modify())()
{
  return nullsub_1;
}

uint64_t RawBankConnectData.RegisterToNotificationEventsResponse.init(subscriptionId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_23353A024()
{
  return 0x7069726373627573;
}

uint64_t sub_23353A04C()
{
  sub_23353AB30();
  return sub_23361F428();
}

uint64_t sub_23353A074()
{
  sub_23353AB30();
  return sub_23361F434();
}

uint64_t RawBankConnectData.RegisterToNotificationEventsResponse.encode(to:)(_QWORD *a1)
{
  return sub_23353A280(a1, &qword_256054850, (void (*)(void))sub_23353AB30);
}

uint64_t RawBankConnectData.RegisterToNotificationEventsResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23353A3A4(a1, &qword_256054860, (void (*)(void))sub_23353AB30, a2);
}

uint64_t sub_23353A0F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.RegisterToNotificationEventsResponse.init(from:)(a1, a2);
}

uint64_t sub_23353A108(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23353A50C(a1, a2, a3, &qword_256054850, (void (*)(void))sub_23353AB30);
}

uint64_t (*RawBankConnectData.UnregisterFromNotificationEventsRequestBody.subscriptionId.modify())()
{
  return nullsub_1;
}

uint64_t sub_23353A14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7069726373627573 && a2 == 0xEE0064496E6F6974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23353A204()
{
  sub_23353AB74();
  return sub_23361F428();
}

uint64_t sub_23353A22C()
{
  sub_23353AB74();
  return sub_23361F434();
}

uint64_t RawBankConnectData.UnregisterFromNotificationEventsRequestBody.encode(to:)(_QWORD *a1)
{
  return sub_23353A280(a1, &qword_256054868, (void (*)(void))sub_23353AB74);
}

uint64_t sub_23353A280(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  void (*v11)(void);

  v11 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11();
  sub_23361F410();
  sub_23361F140();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RawBankConnectData.UnregisterFromNotificationEventsRequestBody.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23353A3A4(a1, &qword_256054878, (void (*)(void))sub_23353AB74, a2);
}

uint64_t sub_23353A3A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23361F3EC();
  if (!v4)
  {
    v10 = v17;
    v11 = v18;
    v12 = sub_23361F02C();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v11);
    *v10 = v12;
    v10[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23353A4CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawBankConnectData.UnregisterFromNotificationEventsRequestBody.init(from:)(a1, a2);
}

uint64_t sub_23353A4E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23353A50C(a1, a2, a3, &qword_256054868, (void (*)(void))sub_23353AB74);
}

uint64_t sub_23353A50C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  void (*v13)(void);

  v13 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_23361F410();
  sub_23361F140();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t _s10FinanceKit18RawBankConnectDataO17NotificationEventV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_23361F224(), result = 0, (v5 & 1) != 0))
  {
    v7 = 0x5F544E45534E4F43;
    v8 = 0xEF44454B4F564552;
    if (*(_BYTE *)(a1 + 16) != 1)
    {
      v7 = 0x5F544E554F434341;
      v8 = 0xEF4445474E414843;
    }
    if (*(_BYTE *)(a1 + 16))
      v9 = v7;
    else
      v9 = 0x4E574F4E4B4E55;
    if (*(_BYTE *)(a1 + 16))
      v10 = v8;
    else
      v10 = 0xE700000000000000;
    v11 = 0x5F544E45534E4F43;
    v12 = 0xEF44454B4F564552;
    if (*(_BYTE *)(a2 + 16) != 1)
    {
      v11 = 0x5F544E554F434341;
      v12 = 0xEF4445474E414843;
    }
    if (*(_BYTE *)(a2 + 16))
      v13 = v11;
    else
      v13 = 0x4E574F4E4B4E55;
    if (*(_BYTE *)(a2 + 16))
      v14 = v12;
    else
      v14 = 0xE700000000000000;
    if (v9 == v13 && v10 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v15 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
    v16 = type metadata accessor for RawBankConnectData.NotificationEvent(0);
    if ((sub_23361D5E0() & 1) == 0)
      return 0;
    v17 = *(int *)(v16 + 28);
    v18 = *(_QWORD *)(a1 + v17);
    v19 = *(_QWORD *)(a1 + v17 + 8);
    v20 = (_QWORD *)(a2 + v17);
    v21 = v18 == *v20 && v19 == v20[1];
    if (v21 || (v22 = sub_23361F224(), result = 0, (v22 & 1) != 0))
    {
      v23 = *(int *)(v16 + 32);
      v24 = (_QWORD *)(a1 + v23);
      v25 = *(_QWORD *)(a1 + v23 + 8);
      v26 = (_QWORD *)(a2 + v23);
      v27 = v26[1];
      if (v25)
      {
        if (v27 && (*v24 == *v26 && v25 == v27 || (sub_23361F224() & 1) != 0))
          return 1;
      }
      else if (!v27)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t _s10FinanceKit18RawBankConnectDataO29NotificationEventsRequestBodyV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;

  if ((sub_23361D5E0() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0) + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_23361F224() & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_23353A89C()
{
  unint64_t result;

  result = qword_2560547D0;
  if (!qword_2560547D0)
  {
    result = MEMORY[0x234934494](&unk_23365A038, &_s29NotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560547D0);
  }
  return result;
}

unint64_t sub_23353A8E0()
{
  unint64_t result;

  result = qword_2560547E8;
  if (!qword_2560547E8)
  {
    result = MEMORY[0x234934494](&unk_233659FE8, &_s26NotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560547E8);
  }
  return result;
}

uint64_t type metadata accessor for RawBankConnectData.NotificationEvent(uint64_t a1)
{
  return sub_233177414(a1, qword_256054978);
}

uint64_t sub_23353A938(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560547F0);
    v10 = sub_233167C58(a2, type metadata accessor for RawBankConnectData.NotificationEvent, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23353A9BC()
{
  unint64_t result;

  result = qword_256054828;
  if (!qword_256054828)
  {
    result = MEMORY[0x234934494](&unk_233659F98, &_s17NotificationEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054828);
  }
  return result;
}

uint64_t _s10FinanceKit18RawBankConnectDataO39RegisterToNotificationEventsRequestBodyV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_23322BFE8(*a1, *a2) & 1) != 0)
  {
    if (v3)
    {
      if (v5 && (v2 == v4 && v3 == v5 || (sub_23361F224() & 1) != 0))
        return 1;
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_23353AA84()
{
  unint64_t result;

  result = qword_256054840;
  if (!qword_256054840)
  {
    result = MEMORY[0x234934494](&unk_233659F48, &_s39RegisterToNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054840);
  }
  return result;
}

uint64_t sub_23353AAC8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604A7A8);
    v8 = a2();
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23353AB30()
{
  unint64_t result;

  result = qword_256054858;
  if (!qword_256054858)
  {
    result = MEMORY[0x234934494](&unk_233659EF8, &_s36RegisterToNotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054858);
  }
  return result;
}

unint64_t sub_23353AB74()
{
  unint64_t result;

  result = qword_256054870;
  if (!qword_256054870)
  {
    result = MEMORY[0x234934494](&unk_233659EA8, &_s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054870);
  }
  return result;
}

unint64_t sub_23353ABBC()
{
  unint64_t result;

  result = qword_256054880;
  if (!qword_256054880)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.NotificationEventType, &type metadata for RawBankConnectData.NotificationEventType);
    atomic_store(result, (unint64_t *)&qword_256054880);
  }
  return result;
}

unint64_t sub_23353AC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256054888;
  if (!qword_256054888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604A7A8);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256054888);
  }
  return result;
}

uint64_t *_s29NotificationEventsRequestBodyVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s29NotificationEventsRequestBodyVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s29NotificationEventsRequestBodyVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s29NotificationEventsRequestBodyVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s29NotificationEventsRequestBodyVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s29NotificationEventsRequestBodyVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s29NotificationEventsRequestBodyVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23353AEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s29NotificationEventsRequestBodyVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23353AF7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23361D634();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_23353AFF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.NotificationEventsResponse()
{
  return &type metadata for RawBankConnectData.NotificationEventsResponse;
}

_QWORD *_s17NotificationEventVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23361D634();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s17NotificationEventVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17NotificationEventVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D634();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17NotificationEventVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17NotificationEventVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t _s17NotificationEventVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17NotificationEventVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23353B4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t _s17NotificationEventVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23353B538(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23353B5AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s21NotificationEventTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23353B680 + 4 * byte_23365944A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23353B6B4 + 4 * byte_233659445[v4]))();
}

uint64_t sub_23353B6B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23353B6BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23353B6C4);
  return result;
}

uint64_t sub_23353B6D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23353B6D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23353B6DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23353B6E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.NotificationEventType()
{
  return &type metadata for RawBankConnectData.NotificationEventType;
}

ValueMetadata *type metadata accessor for RawBankConnectData.RegisterToNotificationEventsRequestBody()
{
  return &type metadata for RawBankConnectData.RegisterToNotificationEventsRequestBody;
}

ValueMetadata *type metadata accessor for RawBankConnectData.RegisterToNotificationEventsResponse()
{
  return &type metadata for RawBankConnectData.RegisterToNotificationEventsResponse;
}

ValueMetadata *type metadata accessor for RawBankConnectData.UnregisterFromNotificationEventsRequestBody()
{
  return &type metadata for RawBankConnectData.UnregisterFromNotificationEventsRequestBody;
}

ValueMetadata *_s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysOMa()
{
  return &_s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysON;
}

ValueMetadata *_s36RegisterToNotificationEventsResponseV10CodingKeysOMa()
{
  return &_s36RegisterToNotificationEventsResponseV10CodingKeysON;
}

ValueMetadata *_s39RegisterToNotificationEventsRequestBodyV10CodingKeysOMa()
{
  return &_s39RegisterToNotificationEventsRequestBodyV10CodingKeysON;
}

uint64_t _s17NotificationEventV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23353B7B4 + 4 * byte_233659454[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23353B7E8 + 4 * byte_23365944F[v4]))();
}

uint64_t sub_23353B7E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23353B7F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23353B7F8);
  return result;
}

uint64_t sub_23353B804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23353B80CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23353B810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23353B818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17NotificationEventV10CodingKeysOMa()
{
  return &_s17NotificationEventV10CodingKeysON;
}

uint64_t _s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23353B874 + 4 * byte_233659459[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23353B894 + 4 * byte_23365945E[v4]))();
}

_BYTE *sub_23353B874(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23353B894(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23353B89C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23353B8A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23353B8AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23353B8B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s26NotificationEventsResponseV10CodingKeysOMa()
{
  return &_s26NotificationEventsResponseV10CodingKeysON;
}

uint64_t _s39RegisterToNotificationEventsRequestBodyV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23353B91C + 4 * byte_233659468[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23353B950 + 4 * byte_233659463[v4]))();
}

uint64_t sub_23353B950(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23353B958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23353B960);
  return result;
}

uint64_t sub_23353B96C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23353B974);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23353B978(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23353B980(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s29NotificationEventsRequestBodyV10CodingKeysOMa()
{
  return &_s29NotificationEventsRequestBodyV10CodingKeysON;
}

unint64_t sub_23353B9A0()
{
  unint64_t result;

  result = qword_2560549C0;
  if (!qword_2560549C0)
  {
    result = MEMORY[0x234934494](&unk_233659AE8, &_s29NotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549C0);
  }
  return result;
}

unint64_t sub_23353B9E8()
{
  unint64_t result;

  result = qword_2560549C8;
  if (!qword_2560549C8)
  {
    result = MEMORY[0x234934494](&unk_233659BA0, &_s26NotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549C8);
  }
  return result;
}

unint64_t sub_23353BA30()
{
  unint64_t result;

  result = qword_2560549D0;
  if (!qword_2560549D0)
  {
    result = MEMORY[0x234934494](&unk_233659C58, &_s17NotificationEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549D0);
  }
  return result;
}

unint64_t sub_23353BA78()
{
  unint64_t result;

  result = qword_2560549D8;
  if (!qword_2560549D8)
  {
    result = MEMORY[0x234934494](&unk_233659D10, &_s39RegisterToNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549D8);
  }
  return result;
}

unint64_t sub_23353BAC0()
{
  unint64_t result;

  result = qword_2560549E0;
  if (!qword_2560549E0)
  {
    result = MEMORY[0x234934494](&unk_233659DC8, &_s36RegisterToNotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549E0);
  }
  return result;
}

unint64_t sub_23353BB08()
{
  unint64_t result;

  result = qword_2560549E8;
  if (!qword_2560549E8)
  {
    result = MEMORY[0x234934494](&unk_233659E80, &_s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549E8);
  }
  return result;
}

unint64_t sub_23353BB50()
{
  unint64_t result;

  result = qword_2560549F0;
  if (!qword_2560549F0)
  {
    result = MEMORY[0x234934494](&unk_233659DF0, &_s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549F0);
  }
  return result;
}

unint64_t sub_23353BB98()
{
  unint64_t result;

  result = qword_2560549F8;
  if (!qword_2560549F8)
  {
    result = MEMORY[0x234934494](&unk_233659E18, &_s43UnregisterFromNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560549F8);
  }
  return result;
}

unint64_t sub_23353BBE0()
{
  unint64_t result;

  result = qword_256054A00;
  if (!qword_256054A00)
  {
    result = MEMORY[0x234934494](&unk_233659D38, &_s36RegisterToNotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A00);
  }
  return result;
}

unint64_t sub_23353BC28()
{
  unint64_t result;

  result = qword_256054A08;
  if (!qword_256054A08)
  {
    result = MEMORY[0x234934494](&unk_233659D60, &_s36RegisterToNotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A08);
  }
  return result;
}

unint64_t sub_23353BC70()
{
  unint64_t result;

  result = qword_256054A10;
  if (!qword_256054A10)
  {
    result = MEMORY[0x234934494](&unk_233659C80, &_s39RegisterToNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A10);
  }
  return result;
}

unint64_t sub_23353BCB8()
{
  unint64_t result;

  result = qword_256054A18;
  if (!qword_256054A18)
  {
    result = MEMORY[0x234934494](&unk_233659CA8, &_s39RegisterToNotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A18);
  }
  return result;
}

unint64_t sub_23353BD00()
{
  unint64_t result;

  result = qword_256054A20;
  if (!qword_256054A20)
  {
    result = MEMORY[0x234934494](&unk_233659BC8, &_s17NotificationEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A20);
  }
  return result;
}

unint64_t sub_23353BD48()
{
  unint64_t result;

  result = qword_256054A28;
  if (!qword_256054A28)
  {
    result = MEMORY[0x234934494](&unk_233659BF0, &_s17NotificationEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A28);
  }
  return result;
}

unint64_t sub_23353BD90()
{
  unint64_t result;

  result = qword_256054A30;
  if (!qword_256054A30)
  {
    result = MEMORY[0x234934494](&unk_233659B10, &_s26NotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A30);
  }
  return result;
}

unint64_t sub_23353BDD8()
{
  unint64_t result;

  result = qword_256054A38;
  if (!qword_256054A38)
  {
    result = MEMORY[0x234934494](&unk_233659B38, &_s26NotificationEventsResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A38);
  }
  return result;
}

unint64_t sub_23353BE20()
{
  unint64_t result;

  result = qword_256054A40;
  if (!qword_256054A40)
  {
    result = MEMORY[0x234934494](&unk_233659A58, &_s29NotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A40);
  }
  return result;
}

unint64_t sub_23353BE68()
{
  unint64_t result;

  result = qword_256054A48;
  if (!qword_256054A48)
  {
    result = MEMORY[0x234934494](&unk_233659A80, &_s29NotificationEventsRequestBodyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256054A48);
  }
  return result;
}

uint64_t sub_23353BEAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657461446D6F7266 && a2 == 0xEC000000656D6954;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xEE0064496E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23353BFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6954746E657665 && a2 == 0xEE00706D61747365 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746E65736E6F63 && a2 == 0xE900000000000064 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656372756F736572 && a2 == 0xEA00000000006449)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23353C220(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x707954746E657665 && a2 == 0xEA00000000007365;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xEE0064496E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23353C340()
{
  unint64_t result;

  result = qword_256054A50;
  if (!qword_256054A50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.NotificationEventType, &type metadata for RawBankConnectData.NotificationEventType);
    atomic_store(result, (unint64_t *)&qword_256054A50);
  }
  return result;
}

uint64_t DeviceIdentitySignature.signature.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2331D1374(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t DeviceIdentitySignature.certificates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DeviceIdentityProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DeviceIdentityProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DeviceIdentityProvider.isSupported.getter()
{
  return DeviceIdentityIsSupported();
}

void DeviceIdentityProvider.sign(_:)(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  SecAccessControlRef v7;
  SecAccessControlRef v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  dispatch_semaphore_t v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  NSObject *v34;
  int v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  CFErrorRef v40;
  CFErrorRef *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  __SecAccessControl *v45;
  _QWORD aBlock[6];
  CFErrorRef error[3];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  error[0] = 0;
  v7 = SecAccessControlCreateWithFlags((CFAllocatorRef)*MEMORY[0x24BDBD240], (CFTypeRef)*MEMORY[0x24BDE8F70], 0x40000000uLL, error);
  if (v7)
  {
    v8 = v7;
    v44 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_233629CC0;
    *(_QWORD *)(inited + 32) = sub_23361E150();
    *(_QWORD *)(inited + 40) = v10;
    v11 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = 0xD000000000000016;
    *(_QWORD *)(inited + 56) = 0x800000023367A6E0;
    *(_QWORD *)(inited + 80) = sub_23361E150();
    *(_QWORD *)(inited + 88) = v12;
    *(_QWORD *)(inited + 120) = v11;
    *(_QWORD *)(inited + 96) = 0xD000000000000014;
    *(_QWORD *)(inited + 104) = 0x800000023366C020;
    *(_QWORD *)(inited + 128) = sub_23361E150();
    *(_QWORD *)(inited + 136) = v13;
    v14 = MEMORY[0x24BEE1328];
    *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 144) = 1;
    *(_QWORD *)(inited + 176) = sub_23361E150();
    *(_QWORD *)(inited + 184) = v15;
    *(_QWORD *)(inited + 216) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 192) = 10;
    *(_QWORD *)(inited + 224) = sub_23361E150();
    *(_QWORD *)(inited + 232) = v16;
    *(_QWORD *)(inited + 264) = v14;
    *(_BYTE *)(inited + 240) = 0;
    *(_QWORD *)(inited + 272) = sub_23361E150();
    *(_QWORD *)(inited + 280) = v17;
    *(_QWORD *)(inited + 312) = v14;
    *(_BYTE *)(inited + 288) = 1;
    *(_QWORD *)(inited + 320) = sub_23361E150();
    *(_QWORD *)(inited + 328) = v18;
    type metadata accessor for SecAccessControl(0);
    *(_QWORD *)(inited + 360) = v19;
    *(_QWORD *)(inited + 336) = v8;
    *(_QWORD *)(inited + 368) = sub_23361E150();
    *(_QWORD *)(inited + 376) = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_23362AF00;
    *(_QWORD *)(v21 + 32) = sub_23361E150();
    *(_QWORD *)(v21 + 40) = v22;
    *(_QWORD *)(v21 + 48) = sub_23361E150();
    *(_QWORD *)(v21 + 56) = v23;
    *(_QWORD *)(v21 + 64) = sub_23361E150();
    *(_QWORD *)(v21 + 72) = v24;
    *(_QWORD *)(v21 + 80) = sub_23361E150();
    *(_QWORD *)(v21 + 88) = v25;
    *(_QWORD *)(inited + 408) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    *(_QWORD *)(inited + 384) = v21;
    v45 = v8;
    v26 = sub_23315F6D0(inited);
    v27 = dispatch_semaphore_create(0);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 24) = 0;
    *(_QWORD *)(v28 + 32) = 0;
    *(_QWORD *)(v28 + 16) = 0;
    v29 = (void **)(v28 + 16);
    *(_BYTE *)(v28 + 40) = -1;
    sub_2331956E4(v26);
    v30 = a1;
    swift_bridgeObjectRelease();
    v31 = (void *)sub_23361E054();
    swift_bridgeObjectRelease();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v27;
    v32[3] = v28;
    v32[4] = v3;
    v32[5] = a1;
    v32[6] = a2;
    aBlock[4] = sub_23353CE60;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23353CC4C;
    aBlock[3] = &block_descriptor_24;
    v33 = _Block_copy(aBlock);
    v34 = v27;
    swift_retain();
    swift_retain();
    sub_2331D1374(v30, a2);
    swift_release();
    DeviceIdentityIssueClientCertificateWithCompletion();
    _Block_release(v33);

    sub_23361E930();
    swift_beginAccess();
    v35 = *(unsigned __int8 *)(v28 + 40);
    if (v35 == 255)
    {
      sub_23353CD7C();
      swift_allocError();
      *v42 = 1;
      swift_willThrow();

      swift_release();
    }
    else
    {
      v36 = *v29;
      v38 = *(_QWORD *)(v28 + 24);
      v37 = *(_QWORD *)(v28 + 32);
      v39 = *v29;
      if ((v35 & 1) != 0)
      {
        sub_23353CE78(v39, *(_QWORD *)(v28 + 24), *(_QWORD *)(v28 + 32), 1);
        swift_willThrow();

        swift_release();
      }
      else
      {
        sub_23353CEA4(v39, *(_QWORD *)(v28 + 24), *(_QWORD *)(v28 + 32), v35);
        swift_release();

        *v44 = v36;
        v44[1] = v38;
        v44[2] = v37;
      }
    }
  }
  else
  {
    v40 = error[0];
    if (error[0])
    {
      type metadata accessor for CFError(0);
      sub_23353CD34();
      swift_allocError();
      *v41 = v40;
    }
    else
    {
      sub_23353CD7C();
      swift_allocError();
      *v43 = 1;
    }
    swift_willThrow();
  }
}

uint64_t sub_23353C928(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  CFDataRef v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __SecKey *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  __SecCertificate *certificate;
  _BYTE v43[32];
  _BYTE v44[32];
  uint64_t v45;

  if (!a3)
  {
    if (a2)
    {
      v20 = a8;
      v21 = a7;
      v22 = *(_QWORD *)(a2 + 16);
      if (v22)
      {
        v39 = a1;
        v45 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_23327439C(0, v22, 0);
        v23 = a2 + 32;
        do
        {
          sub_233168350(v23, (uint64_t)v44);
          sub_233168350((uint64_t)v44, (uint64_t)v43);
          type metadata accessor for SecCertificate(0);
          swift_dynamicCast();
          v24 = SecCertificateCopyData(certificate);

          v25 = sub_23361D3C4();
          v27 = v26;

          __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
          v28 = v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23327439C(0, *(_QWORD *)(v28 + 16) + 1, 1);
            v28 = v45;
          }
          v30 = *(_QWORD *)(v28 + 16);
          v29 = *(_QWORD *)(v28 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_23327439C(v29 > 1, v30 + 1, 1);
            v28 = v45;
          }
          *(_QWORD *)(v28 + 16) = v30 + 1;
          v31 = v28 + 16 * v30;
          *(_QWORD *)(v31 + 32) = v25;
          *(_QWORD *)(v31 + 40) = v27;
          v23 += 32;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        v21 = a7;
        v20 = a8;
        a1 = v39;
        if (!v39)
          goto LABEL_18;
LABEL_16:
        if (*(_QWORD *)(v28 + 16))
        {
          v32 = a1;
          v36 = sub_23353D2D4(v21, v20, v32);
          v38 = v37;

          swift_beginAccess();
          v15 = *(void **)(a5 + 16);
          v16 = *(_QWORD *)(a5 + 24);
          v17 = *(_QWORD *)(a5 + 32);
          *(_QWORD *)(a5 + 16) = v36;
          *(_QWORD *)(a5 + 24) = v38;
          *(_QWORD *)(a5 + 32) = v28;
          v18 = *(_BYTE *)(a5 + 40);
          *(_BYTE *)(a5 + 40) = 0;
          goto LABEL_20;
        }
        goto LABEL_18;
      }
      v28 = MEMORY[0x24BEE4AF8];
      if (a1)
        goto LABEL_16;
    }
    else if (a1)
    {
LABEL_19:
      sub_23353CD7C();
      v33 = swift_allocError();
      *v34 = 3;
      swift_beginAccess();
      v15 = *(void **)(a5 + 16);
      v16 = *(_QWORD *)(a5 + 24);
      v17 = *(_QWORD *)(a5 + 32);
      *(_QWORD *)(a5 + 24) = 0;
      *(_QWORD *)(a5 + 32) = 0;
      *(_QWORD *)(a5 + 16) = v33;
      v18 = *(_BYTE *)(a5 + 40);
      *(_BYTE *)(a5 + 40) = 1;
      goto LABEL_20;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_beginAccess();
  v10 = *(void **)(a5 + 16);
  v11 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  *(_QWORD *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 16) = a3;
  v13 = *(_BYTE *)(a5 + 40);
  *(_BYTE *)(a5 + 40) = 1;
  v14 = a3;
  v15 = v10;
  v16 = v11;
  v17 = v12;
  v18 = v13;
LABEL_20:
  sub_23353D2BC(v15, v16, v17, v18);
  return sub_23361E93C();
}

uint64_t sub_23353CC4C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v6)(void *, uint64_t, void *);
  uint64_t v7;
  id v8;
  id v9;

  v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3)
    v7 = sub_23361E3F0();
  else
    v7 = 0;
  swift_retain();
  v8 = a2;
  v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t DeviceIdentityProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DeviceIdentityProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23353CD00()
{
  return DeviceIdentityIsSupported();
}

void sub_23353CD14(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  DeviceIdentityProvider.sign(_:)(a1, a2, a3);
}

unint64_t sub_23353CD34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256054A58;
  if (!qword_256054A58)
  {
    type metadata accessor for CFError(255);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFD90], v1);
    atomic_store(result, (unint64_t *)&qword_256054A58);
  }
  return result;
}

unint64_t sub_23353CD7C()
{
  unint64_t result;

  result = qword_256054A60;
  if (!qword_256054A60)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for DeviceIdentityError, &type metadata for DeviceIdentityError);
    atomic_store(result, (unint64_t *)&qword_256054A60);
  }
  return result;
}

uint64_t sub_23353CDC0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255)
    sub_23353CDF8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1 & 1);
  return swift_deallocObject();
}

void sub_23353CDF8(void *a1, unint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {

  }
  else
  {
    sub_23316BEA4((uint64_t)a1, a2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23353CE24()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23316BEA4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23353CE60(void *a1, uint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_23353C928(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

id sub_23353CE78(void *a1, unint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  sub_2331D1374((uint64_t)a1, a2);
  return (id)swift_bridgeObjectRetain();
}

id sub_23353CEA4(id result, unint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_23353CE78(result, a2, a3, a4 & 1);
  return result;
}

uint64_t dispatch thunk of DeviceIdentityProviding.isSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceIdentityProviding.sign(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t destroy for DeviceIdentitySignature(uint64_t a1)
{
  sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *_s10FinanceKit23DeviceIdentitySignatureVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_2331D1374(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for DeviceIdentitySignature(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_2331D1374(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23316BEA4(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for DeviceIdentitySignature(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23316BEA4(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DeviceIdentitySignature()
{
  return &type metadata for DeviceIdentitySignature;
}

void destroy for DeviceIdentityError(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

_QWORD *_s10FinanceKit19DeviceIdentityErrorOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 1 < 0)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for DeviceIdentityError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  id v9;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 - 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      v11 = v7;
      *a1 = v7;

    }
    else
    {

      *a1 = *a2;
    }
  }
  else
  {
    if (v8 < 0)
      v9 = v7;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for DeviceIdentityError(void **a1, unint64_t *a2)
{
  void *v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  v4 = -1;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    v4 = (int)v3;
  v5 = *a2;
  if (v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }

  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceIdentityError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DeviceIdentityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

uint64_t sub_23353D22C(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_23353D250(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2)
LABEL_5:
    *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentityError()
{
  return &type metadata for DeviceIdentityError;
}

uint64_t type metadata accessor for DeviceIdentityProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DeviceIdentityProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceIdentityProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_23353D2BC(void *a1, unint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    sub_23353CDF8(a1, a2, a3, a4 & 1);
}

uint64_t sub_23353D2D4(uint64_t a1, uint64_t a2, __SecKey *a3)
{
  const __CFString *v4;
  const __CFData *v5;
  CFDataRef Signature;
  const __CFData *v7;
  uint64_t v8;
  CFErrorRef v9;
  CFErrorRef *v10;
  uint64_t *v11;
  CFErrorRef v13[2];

  v13[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  v13[0] = 0;
  v4 = (const __CFString *)*MEMORY[0x24BDE92D0];
  v5 = (const __CFData *)sub_23361D3AC();
  Signature = SecKeyCreateSignature(a3, v4, v5, v13);

  if (Signature)
  {
    v7 = Signature;
    v8 = sub_23361D3C4();

  }
  else
  {
    v9 = v13[0];
    if (v13[0])
    {
      type metadata accessor for CFError(0);
      sub_23353CD34();
      v8 = swift_allocError();
      *v10 = v9;
    }
    else
    {
      v8 = 0;
    }
    sub_23353CD7C();
    swift_allocError();
    *v11 = v8;
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_23353D400()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353D47C()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353D520()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353D5A4()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353D648(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353D6A0()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353D718(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353D770()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353D7F8(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353D850()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353D8CC(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353D924()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353D9B8(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353DA00()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353DAB0(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353DAF8()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353DB98(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353DBE8()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353DC80()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353DD30()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353DDC8(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353DE20()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353DE84(char a1)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353DEE0()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353DF64()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353DFE8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23353E030()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E09C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E0E0()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E194(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E1E0()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E2A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E2F4()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E3E0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E424()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E46C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E4A4()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23353E56C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E5E8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E630()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E6B0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E6F4()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E754(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23353E79C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E83C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E880()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23353E8EC()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

void sub_23353E918(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23353E95C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23353E9B8()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23353EA34()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353EAD4(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353EB28()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353EBA0()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353EC20()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353EC78(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353ECCC()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353ED54(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353ED9C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353EE34(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353EE8C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353EF44(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353EF98()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353F014()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F08C(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F0E0()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353F174()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F214(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F258()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F308(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F34C()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F3EC(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F438()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353F4D0()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F57C(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F5C0()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353F69C()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F730(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F784()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F7E8(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F840()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353F940(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353F998()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

void sub_23353FA74(uint64_t a1, char a2)
{
  sub_23361F350();
  __asm { BR              X10 }
}

uint64_t sub_23353FACC()
{
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23353FB50()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

_QWORD *FinancialDataPersistentHistoryTransaction.init(xpcValue:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_23353FBDC(char *a1, char *a2)
{
  return sub_233225534(*a1, *a2);
}

uint64_t sub_23353FBE8()
{
  return sub_23353DF64();
}

uint64_t sub_23353FBF0()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23353FC50()
{
  return sub_23353FB50();
}

uint64_t sub_23353FC58@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23353FCB4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000010;
  else
    v2 = 0xD000000000000011;
  v3 = 0x8000000233669CD0;
  if (*v1)
    v3 = 0x8000000233669CF0;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_23353FCF8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0xD000000000000011;
}

uint64_t sub_23353FD38@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23353FD98()
{
  sub_233540064();
  return sub_23361F428();
}

uint64_t sub_23353FDC0()
{
  sub_233540064();
  return sub_23361F434();
}

uint64_t FinancialDataPersistentHistoryTransaction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054B00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233540064();
  sub_23361F3EC();
  if (!v2)
  {
    LOBYTE(v16) = 0;
    v9 = sub_23361F080();
    v18 = 1;
    sub_2331A6B08();
    sub_23361F068();
    v11 = v16;
    v15 = v17;
    sub_233168668(0, &qword_2560430A0);
    sub_233168668(0, (unint64_t *)&unk_256048680);
    v14 = v11;
    v12 = sub_23361E81C();
    v13 = v12;
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_23316BEA4(v14, v15);
      *a2 = v9;
      a2[1] = v13;
    }
    else
    {
      LOBYTE(v16) = 1;
      sub_23361EE10();
      swift_allocError();
      sub_2331B1A14(&qword_256054B10, &qword_256054B00, MEMORY[0x24BEE33F8]);
      sub_23361EDE0();
      swift_willThrow();
      sub_23316BEA4(v14, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_233540064()
{
  unint64_t result;

  result = qword_256054B08;
  if (!qword_256054B08)
  {
    result = MEMORY[0x234934494](&unk_23365A554, &type metadata for FinancialDataPersistentHistoryTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B08);
  }
  return result;
}

uint64_t FinancialDataPersistentHistoryTransaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19[3];

  v19[2] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054B18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233540064();
  sub_23361F410();
  LOBYTE(v19[0]) = 0;
  sub_23361F194();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = (void *)objc_opt_self();
  v19[0] = 0;
  v10 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, v19);
  v11 = v19[0];
  if (!v10)
  {
    v15 = v11;
    sub_23361D1B4();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v12 = (void *)sub_23361D3C4();
  v14 = v13;

  v19[0] = v12;
  v19[1] = v14;
  v18 = 1;
  sub_2331A6BA8();
  sub_23361F17C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_23316BEA4((uint64_t)v12, (unint64_t)v14);
}

uint64_t FinancialDataPersistentHistoryTransaction.init(transactionNumber:transactionToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_2335402A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FinancialDataPersistentHistoryTransaction.init(from:)(a1, a2);
}

uint64_t sub_2335402B4(_QWORD *a1)
{
  return FinancialDataPersistentHistoryTransaction.encode(to:)(a1);
}

uint64_t FinancialDataPersistentHistoryTransaction.XPC.transactionNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FinancialDataPersistentHistoryTransaction.XPC.transactionNumber.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FinancialDataPersistentHistoryTransaction.XPC.transactionNumber.modify())()
{
  return nullsub_1;
}

id FinancialDataPersistentHistoryTransaction.XPC.transactionTokenWrapper.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 8);
  *a1 = v2;
  return v2;
}

void FinancialDataPersistentHistoryTransaction.XPC.transactionTokenWrapper.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;

  *(_QWORD *)(v1 + 8) = v2;
}

uint64_t (*FinancialDataPersistentHistoryTransaction.XPC.transactionTokenWrapper.modify())()
{
  return nullsub_1;
}

_QWORD *FinancialDataPersistentHistoryTransaction.XPC.init(value:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

unint64_t sub_233540338()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0xD000000000000011;
}

uint64_t sub_233540378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233540A8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23354039C()
{
  sub_233540548();
  return sub_23361F428();
}

uint64_t sub_2335403C4()
{
  sub_233540548();
  return sub_23361F434();
}

uint64_t FinancialDataPersistentHistoryTransaction.XPC.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054B20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233540548();
  sub_23361F410();
  v11 = 0;
  sub_23361F194();
  if (!v2)
  {
    v9[1] = v9[0];
    v10 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256050AB8);
    sub_2331B1A14(&qword_256050AC0, &qword_256050AB8, (uint64_t)&protocol conformance descriptor for XPCSecureCodingCodableWrapper<A>);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_233540548()
{
  unint64_t result;

  result = qword_256054B28;
  if (!qword_256054B28)
  {
    result = MEMORY[0x234934494](&unk_23365A504, &type metadata for FinancialDataPersistentHistoryTransaction.XPC.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B28);
  }
  return result;
}

uint64_t FinancialDataPersistentHistoryTransaction.XPC.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054B30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233540548();
  sub_23361F3EC();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_23361F080();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256050AB8);
    v13 = 1;
    sub_2331B1A14(&qword_256050B80, &qword_256050AB8, (uint64_t)&protocol conformance descriptor for XPCSecureCodingCodableWrapper<A>);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233540714@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FinancialDataPersistentHistoryTransaction.XPC.init(from:)(a1, a2);
}

uint64_t sub_233540728(_QWORD *a1)
{
  return FinancialDataPersistentHistoryTransaction.XPC.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FinancialDataPersistentHistoryTransaction()
{
  return &type metadata for FinancialDataPersistentHistoryTransaction;
}

_QWORD *initializeBufferWithCopyOfBuffer for FinancialDataPersistentHistoryTransaction.XPC(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for FinancialDataPersistentHistoryTransaction.XPC(uint64_t a1)
{

}

_QWORD *assignWithCopy for FinancialDataPersistentHistoryTransaction.XPC(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for FinancialDataPersistentHistoryTransaction.XPC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for FinancialDataPersistentHistoryTransaction.XPC()
{
  return &type metadata for FinancialDataPersistentHistoryTransaction.XPC;
}

ValueMetadata *type metadata accessor for FinancialDataPersistentHistoryTransaction.XPC.CodingKeys()
{
  return &type metadata for FinancialDataPersistentHistoryTransaction.XPC.CodingKeys;
}

uint64_t _s10FinanceKit41FinancialDataPersistentHistoryTransactionV3XPCV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23354085C + 4 * byte_23365A266[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233540890 + 4 * byte_23365A261[v4]))();
}

uint64_t sub_233540890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233540898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335408A0);
  return result;
}

uint64_t sub_2335408AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335408B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2335408B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335408C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinancialDataPersistentHistoryTransaction.CodingKeys()
{
  return &type metadata for FinancialDataPersistentHistoryTransaction.CodingKeys;
}

unint64_t sub_2335408E0()
{
  unint64_t result;

  result = qword_256054B38;
  if (!qword_256054B38)
  {
    result = MEMORY[0x234934494](&unk_23365A424, &type metadata for FinancialDataPersistentHistoryTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B38);
  }
  return result;
}

unint64_t sub_233540928()
{
  unint64_t result;

  result = qword_256054B40;
  if (!qword_256054B40)
  {
    result = MEMORY[0x234934494](&unk_23365A4DC, &type metadata for FinancialDataPersistentHistoryTransaction.XPC.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B40);
  }
  return result;
}

unint64_t sub_233540970()
{
  unint64_t result;

  result = qword_256054B48;
  if (!qword_256054B48)
  {
    result = MEMORY[0x234934494](&unk_23365A44C, &type metadata for FinancialDataPersistentHistoryTransaction.XPC.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B48);
  }
  return result;
}

unint64_t sub_2335409B8()
{
  unint64_t result;

  result = qword_256054B50;
  if (!qword_256054B50)
  {
    result = MEMORY[0x234934494](&unk_23365A474, &type metadata for FinancialDataPersistentHistoryTransaction.XPC.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B50);
  }
  return result;
}

unint64_t sub_233540A00()
{
  unint64_t result;

  result = qword_256054B58;
  if (!qword_256054B58)
  {
    result = MEMORY[0x234934494](&unk_23365A35C, &type metadata for FinancialDataPersistentHistoryTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B58);
  }
  return result;
}

unint64_t sub_233540A48()
{
  unint64_t result;

  result = qword_256054B60;
  if (!qword_256054B60)
  {
    result = MEMORY[0x234934494](&unk_23365A384, &type metadata for FinancialDataPersistentHistoryTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054B60);
  }
  return result;
}

uint64_t sub_233540A8C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000233669CD0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023367A790)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of BankConnectWebServiceClientProviding.makeBankConnectWebServiceClient()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FraudAssessmentOutcomeType.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465747365676E69;
  if (*v0 != 1)
    v1 = 0x74756F656D6974;
  if (*v0)
    return v1;
  else
    return 0x6564726163736964;
}

BOOL static FraudAssessmentOutcomeType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FraudAssessmentOutcomeType.hash(into:)()
{
  return sub_23361F35C();
}

void *static FraudAssessmentOutcomeType.allCases.getter()
{
  return &unk_25046BAE0;
}

uint64_t FraudAssessmentOutcomeType.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

unint64_t sub_233540C7C()
{
  unint64_t result;

  result = qword_256054B68;
  if (!qword_256054B68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FraudAssessmentOutcomeType, &type metadata for FraudAssessmentOutcomeType);
    atomic_store(result, (unint64_t *)&qword_256054B68);
  }
  return result;
}

uint64_t sub_233540CC0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465747365676E69;
  if (*v0 != 1)
    v1 = 0x74756F656D6974;
  if (*v0)
    return v1;
  else
    return 0x6564726163736964;
}

unint64_t sub_233540D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256054B70;
  if (!qword_256054B70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256054B78);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256054B70);
  }
  return result;
}

void sub_233540D70(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046BB08;
}

uint64_t storeEnumTagSinglePayload for FraudAssessmentOutcomeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233540DCC + 4 * byte_23365A625[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233540E00 + 4 * byte_23365A620[v4]))();
}

uint64_t sub_233540E00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233540E08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233540E10);
  return result;
}

uint64_t sub_233540E1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233540E24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233540E28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233540E30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FraudAssessmentOutcomeType()
{
  return &type metadata for FraudAssessmentOutcomeType;
}

uint64_t sub_233540E94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x23493465C](v1);
}

uint64_t sub_233540F2C()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_233540F84(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x23493465C](v5);
  return sub_2333B2350;
}

id BankConnectInstitutionsProvider.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_233543538(a1);
  swift_release();
  return v4;
}

id BankConnectInstitutionsProvider.init(store:)(uint64_t a1)
{
  id v1;

  v1 = sub_233543538(a1);
  swift_release();
  return v1;
}

id sub_233541064()
{
  id v0;
  uint64_t v1;
  id v2;

  if (qword_254247048 != -1)
    swift_once();
  v0 = objc_allocWithZone((Class)type metadata accessor for BankConnectInstitutionsProvider());
  v1 = swift_retain();
  v2 = sub_233543538(v1);
  swift_release();
  return v2;
}

uint64_t sub_23354115C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  v6 = sub_23361DB68();
  v7 = sub_23361E780();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_233151000, v6, v7, "Starting to observe persistent store remote change notifications", v8, 2u);
    MEMORY[0x234934590](v8, -1, -1);
  }

  v9 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_remoteChangeNotificationTask) = sub_2333B205C((uint64_t)v4, (uint64_t)&unk_256054C50, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_233541300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[35] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v4[36] = swift_task_alloc();
  v5 = sub_23361CBA8();
  v4[37] = v5;
  v4[38] = *(_QWORD *)(v5 - 8);
  v4[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247050);
  v4[40] = swift_task_alloc();
  v6 = sub_23361E900();
  v4[41] = v6;
  v4[42] = *(_QWORD *)(v6 - 8);
  v4[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2335413D0()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v0[44] = sub_23361E90C();

  swift_retain();
  sub_23361E8E8();
  swift_beginAccess();
  v0[45] = sub_233167C58((unint64_t *)&qword_254247070, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[46] = v2;
  *v2 = v0;
  v2[1] = sub_2335414D8;
  return sub_23361E4D4();
}

uint64_t sub_2335414D8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[49] = v0;
  }
  else
  {
    v3 = *MEMORY[0x24BDBB4B0];
    v2[47] = *MEMORY[0x24BDBB588];
    v2[48] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_233541558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  char v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  id v79;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 280) + 16;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 312), v1, v2);
  v5 = MEMORY[0x23493465C](v4);
  if (!v5)
  {
    v13 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 328);
    v15 = *(_QWORD *)(v0 + 336);
    v17 = *(_QWORD *)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 296);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    goto LABEL_9;
  }
  v6 = (char *)v5;
  v7 = (_OWORD *)(v0 + 128);
  v8 = sub_23361CB9C();
  if (!v8)
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
LABEL_18:

LABEL_19:
    sub_233168608((uint64_t)v7, &qword_254245020);
LABEL_21:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    goto LABEL_22;
  }
  v9 = v8;
  *(_QWORD *)(v0 + 216) = sub_23361E150();
  *(_QWORD *)(v0 + 224) = v10;
  sub_23361ED50();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_2331E3EC4(v0 + 56), (v12 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v9 + 56) + 32 * v11, v0 + 128);
  }
  else
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C(v0 + 56);
  if (!*(_QWORD *)(v0 + 152))
    goto LABEL_18;
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_21;
  }
  v7 = (_OWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 248);
  v20 = *(_QWORD *)(v0 + 256);
  v22 = sub_23361CB9C();
  if (!v22)
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
LABEL_43:

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v23 = v22;
  *(_QWORD *)(v0 + 232) = sub_23361E150();
  *(_QWORD *)(v0 + 240) = v24;
  sub_23361ED50();
  if (*(_QWORD *)(v23 + 16) && (v25 = sub_2331E3EC4(v0 + 16), (v26 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v23 + 56) + 32 * v25, v0 + 160);
  }
  else
  {
    *v7 = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C(v0 + 16);
  if (!*(_QWORD *)(v0 + 184))
    goto LABEL_43;
  sub_233168668(0, (unint64_t *)&unk_256048680);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v75 = v21;
  v77 = *(void **)(v0 + 272);
  v76 = objc_msgSend(*(id *)(*(_QWORD *)&v6[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_store] + 16), sel_persistentStoreCoordinator);
  v28 = objc_msgSend(v76, sel_persistentStores);
  sub_233168668(0, (unint64_t *)&qword_2542482A0);
  v29 = sub_23361E3F0();

  if (v29 >> 62)
    goto LABEL_71;
  v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v30)
  {
LABEL_40:
    v41 = *(_QWORD *)(v0 + 304);
    v40 = *(_QWORD *)(v0 + 312);
    v42 = *(_QWORD *)(v0 + 296);
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);

    swift_bridgeObjectRelease();
LABEL_41:

    goto LABEL_22;
  }
LABEL_28:
  v31 = 0;
  v74 = (_QWORD *)(v0 + 96);
  while (1)
  {
    if ((v29 & 0xC000000000000001) != 0)
    {
      v32 = (id)MEMORY[0x234933120](v31, v29);
      v33 = v31 + 1;
      if (__OFADD__(v31, 1))
        goto LABEL_70;
    }
    else
    {
      v32 = *(id *)(v29 + 8 * v31 + 32);
      v33 = v31 + 1;
      if (__OFADD__(v31, 1))
      {
LABEL_70:
        __break(1u);
LABEL_71:
        swift_bridgeObjectRetain();
        v30 = sub_23361EF30();
        if (!v30)
          goto LABEL_40;
        goto LABEL_28;
      }
    }
    v79 = v32;
    v34 = objc_msgSend(v32, sel_configurationName, v74);
    v35 = sub_23361E150();
    v37 = v36;

    if (v35 == 0x6C61636F4CLL && v37 == 0xE500000000000000)
      break;
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      goto LABEL_46;

    ++v31;
    if (v33 == v30)
      goto LABEL_40;
  }
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease_n();
  v43 = objc_msgSend(v79, sel_identifier);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    v48 = v77;
    goto LABEL_59;
  }
  v44 = v43;
  v45 = sub_23361E150();
  v47 = v46;

  v48 = v77;
  if (v75 == v45 && v20 == v47)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_52;
  }
  v49 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0)
  {
LABEL_59:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));

    goto LABEL_22;
  }
LABEL_52:
  if (qword_256041CA0 != -1)
    swift_once();
  v50 = sub_23361DB80();
  __swift_project_value_buffer(v50, (uint64_t)qword_2560495B0);
  v51 = sub_23361DB68();
  v52 = sub_23361E780();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_233151000, v51, v52, "Received remote change notification for local persistent store", v53, 2u);
    MEMORY[0x234934590](v53, -1, -1);
  }

  v54 = OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_lastNotificationToken;
  v55 = *(void **)&v6[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_lastNotificationToken];
  if (v55)
  {
    v56 = v77;
    v57 = v55;
    v58 = sub_23361EA14();

    if ((v58 & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));

      goto LABEL_41;
    }
    v59 = *(void **)&v6[v54];
  }
  else
  {
    v59 = 0;
  }
  v60 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)&v6[v54] = v77;
  v61 = sub_23361E534();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  v78 = v77;
  v63(v60, 1, 1, v61);
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = 0;
  v64[3] = 0;
  v64[4] = v6;
  v64[5] = v59;
  LODWORD(v63) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61);
  v65 = v59;
  v66 = v6;
  v67 = *(_QWORD *)(v0 + 288);
  if ((_DWORD)v63 == 1)
  {
    sub_233168608(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_254247060);
    v68 = 0;
    v69 = 0;
  }
  else
  {
    sub_23361E528();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v67, v61);
    if (v64[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v68 = sub_23361E474();
      v69 = v70;
      swift_unknownObjectRelease();
    }
    else
    {
      v68 = 0;
      v69 = 0;
    }
  }
  if (v69 | v68)
  {
    *v74 = 0;
    v74[1] = 0;
    *(_QWORD *)(v0 + 112) = v68;
    *(_QWORD *)(v0 + 120) = v69;
  }
  v72 = *(_QWORD *)(v0 + 304);
  v71 = *(_QWORD *)(v0 + 312);
  v73 = *(_QWORD *)(v0 + 296);
  swift_task_create();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
LABEL_22:
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v27;
  *v27 = v0;
  v27[1] = sub_233541DF8;
  return sub_23361E4D4();
}

uint64_t sub_233541DF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 392) = v0;
  return swift_task_switch();
}

uint64_t sub_233541E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_233541E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  sub_23361E960();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233541F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  unsigned int v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  void *v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void *v67;
  id ObjCClassFromMetadata;
  unint64_t v69;
  id aBlock[8];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = sub_23361DDD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361DDFC();
  v65 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = (void *)a1;
  v11 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_context);
  v12 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  aBlock[0] = 0;
  v13 = objc_msgSend(v11, sel_setQueryGenerationFromToken_error_, v12, aBlock);

  if (v13)
  {
    v14 = aBlock[0];
    NSManagedObjectContext.fetchPersistentHistory(after:)(a2);
    v16 = v2;
    if (!v2)
    {
      v18 = v15;
      if (v15 >> 62)
        goto LABEL_46;
      v19 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v19)
      {
        v62 = v18 & 0xC000000000000001;
        v58 = v18 + 32;
        swift_bridgeObjectRetain();
        v20 = 0;
        v56 = v5;
        v55 = v6;
        v54 = v8;
        v59 = v18;
        v60 = v16;
        v57 = v19;
        v53 = v9;
        while (1)
        {
          v22 = v62 ? (id)MEMORY[0x234933120](v20, v18) : *(id *)(v58 + 8 * v20);
          v21 = v22;
          v23 = __OFADD__(v20, 1);
          v24 = v20 + 1;
          if (v23)
            break;
          v63 = v24;
          v25 = objc_msgSend(v22, sel_changes);
          if (v25)
          {
            v26 = v25;
            sub_233168668(0, &qword_25604C730);
            v9 = sub_23361E3F0();

            v61 = v21;
            if (v9 >> 62)
            {
              swift_bridgeObjectRetain_n();
              v27 = sub_23361EF30();
              swift_bridgeObjectRelease();
              if (v27)
              {
LABEL_17:
                v69 = v9 & 0xC000000000000001;
                type metadata accessor for ManagedInstitution();
                ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
                v28 = 4;
                v66 = (char *)v27;
                while (1)
                {
                  v18 = v28 - 4;
                  v29 = v69 ? (id)MEMORY[0x234933120](v28 - 4, v9) : *(id *)(v9 + 8 * v28);
                  v30 = v29;
                  v8 = (char *)(v28 - 3);
                  if (__OFADD__(v18, 1))
                    break;
                  v31 = objc_msgSend(v29, sel_changedObjectID);
                  v32 = objc_msgSend(v31, sel_entity);

                  v33 = objc_msgSend(v32, sel_name);
                  if (v33)
                  {
                    v5 = sub_23361E150();
                    v35 = v34;

                  }
                  else
                  {
                    v5 = 0;
                    v35 = 0;
                  }
                  v36 = objc_msgSend(ObjCClassFromMetadata, sel_entityName);
                  v37 = sub_23361E150();
                  v39 = v38;

                  if (v35)
                  {
                    if (v37 == v5 && v35 == v39)
                    {
LABEL_40:
                      swift_bridgeObjectRelease();
LABEL_41:
                      swift_bridgeObjectRelease();

LABEL_42:
                      swift_bridgeObjectRelease_n();

                      swift_bridgeObjectRelease_n();
                      v43 = v67;
                      v44 = sub_233542A48();
                      sub_233168668(0, qword_254245350);
                      v45 = (void *)sub_23361E870();
                      v46 = (_QWORD *)swift_allocObject();
                      v46[2] = v43;
                      v46[3] = v44;
                      aBlock[4] = sub_233543934;
                      aBlock[5] = v46;
                      aBlock[0] = (id)MEMORY[0x24BDAC760];
                      aBlock[1] = (id)1107296256;
                      aBlock[2] = sub_2331C9ED4;
                      aBlock[3] = &block_descriptor_21;
                      v47 = _Block_copy(aBlock);
                      v48 = v43;
                      swift_release();
                      v49 = v64;
                      sub_23361DDF0();
                      aBlock[0] = (id)MEMORY[0x24BEE4AF8];
                      sub_233167C58(&qword_25604C6F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C700);
                      sub_2333B6D54();
                      v50 = v54;
                      v51 = v56;
                      sub_23361EC6C();
                      MEMORY[0x234932BEC](0, v49, v50, v47);
                      _Block_release(v47);

                      (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v51);
                      (*(void (**)(char *, unint64_t))(v65 + 8))(v49, v53);
                      sub_2335425F0((uint64_t)v48);
                      return;
                    }
                    v40 = sub_23361F224();
                    swift_bridgeObjectRelease();
                    if ((v40 & 1) != 0)
                      goto LABEL_41;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                  }
                  type metadata accessor for ManagedConsent();
                  v16 = (uint64_t)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
                  v41 = sub_23361E150();
                  v6 = v42;

                  if (v35)
                  {
                    if (v41 == v5 && v35 == v6)
                      goto LABEL_40;
                    v16 = sub_23361F224();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    if ((v16 & 1) != 0)
                      goto LABEL_42;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();

                  }
                  ++v28;
                  if (v8 == v66)
                    goto LABEL_8;
                }
                __break(1u);
                break;
              }
            }
            else
            {
              v27 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v27)
                goto LABEL_17;
            }
LABEL_8:
            swift_bridgeObjectRelease_n();
            v18 = v59;
            v16 = v60;
            v19 = v57;
            v21 = v61;
          }

          v20 = v63;
          if (v63 == v19)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_3;
          }
        }
        __break(1u);
LABEL_46:
        swift_bridgeObjectRetain();
        v19 = sub_23361EF30();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
LABEL_3:
    sub_2335425F0((uint64_t)v67);
  }
  else
  {
    v17 = aBlock[0];
    sub_23361D1B4();

    swift_willThrow();
  }
}

void sub_2335425F0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_context);
  v5[0] = 0;
  if (objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, 0, v5))
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    v4 = (void *)sub_23361D1B4();

    swift_willThrow();
  }
}

uint64_t sub_2335426CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  void *v4;

  v1 = a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v1);
  if (result)
  {
    v3 = (void *)result;
    sub_233168668(0, (unint64_t *)&unk_256054C70);
    v4 = (void *)sub_23361E3D8();
    objc_msgSend(v3, sel_connectedInstitutionsDidChange_, v4);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_233542768(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  _QWORD *v6;
  void *v7;
  char *v8;
  _QWORD v9[6];

  v5 = *(void **)&v2[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_context];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v9[4] = sub_233543628;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2331C9ED4;
  v9[3] = &block_descriptor_25;
  v7 = _Block_copy(v9);
  v8 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlock_, v7);
  _Block_release(v7);
}

uint64_t sub_233542840(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  id v5;
  void *v6;

  v4 = sub_233542A48();
  v5 = NSManagedObjectContext.currentLocalHistoryToken.getter();
  v6 = *(void **)(a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_lastNotificationToken);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_lastNotificationToken) = v5;

  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_remoteChangeNotificationTask))
    sub_23354115C();
  a2(v4);
  return swift_bridgeObjectRelease();
}

void sub_2335429E4(uint64_t a1, uint64_t a2)
{
  id v3;

  sub_233168668(0, (unint64_t *)&unk_256054C70);
  v3 = (id)sub_23361E3D8();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

uint64_t sub_233542A48()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  objc_super v16;

  type metadata accessor for ManagedInstitution();
  v16.receiver = (id)swift_getObjCClassFromMetadata();
  v16.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  v0 = objc_msgSendSuper2(&v16, sel_fetchRequest);
  objc_msgSend(v0, sel_setReturnsObjectsAsFaults_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  *(_QWORD *)(v1 + 32) = sub_23361E6B4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D50;
  v3 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  v4 = sub_2331683F0();
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = 25705;
  *(_QWORD *)(v2 + 40) = 0xE200000000000000;
  if (qword_254246F08 != -1)
    swift_once();
  v5 = type metadata accessor for Institution(0);
  v6 = (uint64_t *)__swift_project_value_buffer(v5, (uint64_t)qword_254247630);
  v8 = *v6;
  v7 = v6[1];
  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 72) = v8;
  *(_QWORD *)(v2 + 80) = v7;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v1 + 40) = sub_23361E6B4();
  sub_23361E408();
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v9);

  objc_msgSend(v0, sel_setPredicate_, v10);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v11 + 32) = sub_23361E7EC();
  v15 = v11;
  sub_23361E408();
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setSortDescriptors_, v12);

  MEMORY[0x24BDAC7A8](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256054C38);
  sub_23361E960();

  return v15;
}

uint64_t sub_233542EE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void *ObjCClassFromMetadata;
  unint64_t v37;
  objc_super v38;
  uint64_t v39;

  v3 = v2;
  v39 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_context);
  type metadata accessor for ManagedInstitution();
  v6 = sub_23361E984();
  if (v2)
    return swift_bridgeObjectRelease();
  v8 = v6;
  if (v6 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    v9 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_5;
LABEL_36:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
    return result;
  }
  v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_36;
LABEL_5:
  v31 = (_QWORD *)a2;
  type metadata accessor for ManagedConsent();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  a2 = 0;
  v37 = v8 & 0xC000000000000001;
  v33 = v8 & 0xFFFFFFFFFFFFFF8;
  v34 = v8;
  v32 = (_QWORD *)(v8 + 32);
  v35 = (_QWORD *)v9;
  while (1)
  {
    if (v37)
    {
      v10 = (id)MEMORY[0x234933120](a2, v34);
    }
    else
    {
      if (a2 >= *(_QWORD *)(v33 + 16))
        goto LABEL_34;
      v10 = (id)v32[a2];
    }
    v11 = v10;
    if (__OFADD__(a2++, 1))
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v13 = objc_msgSend(v10, "id");
    v14 = sub_23361E150();
    v16 = v15;

    v38.receiver = ObjCClassFromMetadata;
    v38.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
    v17 = objc_msgSendSuper2(&v38, sel_fetchRequest);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_233623D60;
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 64) = sub_2331683F0();
    *(_QWORD *)(v18 + 32) = v14;
    *(_QWORD *)(v18 + 40) = v16;
    swift_bridgeObjectRetain();
    v19 = (void *)sub_23361E6B4();
    objc_msgSend(v17, sel_setPredicate_, v19);

    v20 = v3;
    v21 = sub_23361E984();
    if (v3)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v8 = v21;
    swift_bridgeObjectRelease();

    if (v8 >> 62)
      break;
    v22 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_14;
LABEL_26:
    swift_bridgeObjectRelease_n();
    v28 = 0;
LABEL_27:
    sub_233168668(0, (unint64_t *)&qword_25604C778);
    v29 = v11;
    v30 = FKInstitution.init(_:)(v29);
    objc_msgSend(objc_allocWithZone((Class)FKBankConnectInstitutionsProviderResponse), sel_initWithInstitution_consentStatus_, v30, v28);

    v8 = (unint64_t)&v39;
    MEMORY[0x234932730]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23361E414();
    sub_23361E438();
    sub_23361E408();

    if ((_QWORD *)a2 == v35)
    {
      result = swift_bridgeObjectRelease();
      *v31 = v39;
      return result;
    }
  }
  swift_bridgeObjectRetain_n();
  v22 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v22)
    goto LABEL_26;
LABEL_14:
  v3 = v5;
  v5 = v8 & 0xC000000000000001;
  v23 = 4;
  while (1)
  {
    if (v5)
      v24 = (id)MEMORY[0x234933120](v23 - 4, v8);
    else
      v24 = *(id *)(v8 + 8 * v23);
    v25 = v24;
    v26 = v23 - 3;
    if (__OFADD__(v23 - 4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    v27 = objc_msgSend(v24, sel_consentStatusValue);
    if (v27)
      break;

    ++v23;
    if (v26 == v22)
    {
      swift_bridgeObjectRelease_n();
      v28 = 0;
LABEL_24:
      v5 = v3;
      v3 = v20;
      goto LABEL_27;
    }
  }
  if ((unsigned __int16)v27 == 1)
  {
    swift_bridgeObjectRelease_n();

    v28 = 1;
    goto LABEL_24;
  }
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_consentStatusValue);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = sub_23361EF24();
  __break(1u);
  return result;
}

id BankConnectInstitutionsProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectInstitutionsProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectInstitutionsProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectInstitutionsProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_233543538(uint64_t a1)
{
  char *v1;
  void *v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_lastNotificationToken] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_remoteChangeNotificationTask] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_store] = a1;
  v3 = *(void **)(a1 + 16);
  v4 = v1;
  swift_retain();
  v5 = objc_msgSend(v3, sel_newBackgroundContext);
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_context] = v5;
  v6 = v5;
  objc_msgSend(v6, sel_setAutomaticallyMergesChangesFromParent_, 0);

  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for BankConnectInstitutionsProvider();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for BankConnectInstitutionsProvider()
{
  return objc_opt_self();
}

uint64_t sub_233543628()
{
  uint64_t v0;

  return sub_233542840(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t sub_23354363C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC10FinanceKit31BankConnectInstitutionsProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_233543690()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for BankConnectInstitutionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectInstitutionsProvider.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BankConnectInstitutionsProvider.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BankConnectInstitutionsProvider.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BankConnectInstitutionsProvider.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of static BankConnectInstitutionsProvider.makeProvider()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of BankConnectInstitutionsProvider.fetchConnectedInstitutions(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t sub_233543788@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233542EE4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2335437A0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2335437C4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2335437F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2331676FC;
  return sub_233541300(a1, v4, v5, v6);
}

uint64_t sub_23354385C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_233543890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2331676FC;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch();
}

void sub_2335438F0()
{
  uint64_t v0;

  sub_233541F04(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_233543908()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_233543934()
{
  uint64_t v0;

  return sub_2335426CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23354393C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_233543960(uint64_t a1)
{
  uint64_t v1;

  sub_2335429E4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t BankConnectService.decrypt(accountPaymentInformation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for BankConnectService.Message();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2335439E0()
{
  _QWORD *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1 = (uint64_t *)v0[6];
  v2 = v0[3];
  v3 = v0[2];
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  sub_2331D1374(v3, v2);
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_256043060 + dword_256043060);
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_233543A70;
  return v6(v0[6]);
}

uint64_t sub_233543A70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 64) = v1;
  swift_task_dealloc();
  sub_2331A0DF4(*(_QWORD *)(v4 + 48));
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_233543B04()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.encrypt(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = type metadata accessor for BankConnectService.Message();
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233543B94()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 32);
  swift_storeEnumTagMultiPayload();
  v3 = (char *)&dword_256043040 + dword_256043040;
  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_233543C2C;
  return ((uint64_t (*)(uint64_t, _QWORD))v3)(v0 + 16, *(_QWORD *)(v0 + 56));
}

uint64_t sub_233543C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  return swift_task_switch();
}

uint64_t sub_233543C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_233543CD8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331A5C30;
  return BankConnectService.encrypt(_:)(a1);
}

uint64_t sub_233543D28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *v2;
  v3[5] = v4;
  v3[6] = v5;
  return swift_task_switch();
}

uint64_t sub_233543D88()
{
  _QWORD *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1 = (uint64_t *)v0[5];
  v2 = v0[3];
  v3 = v0[2];
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  sub_2331D1374(v3, v2);
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_256043060 + dword_256043060);
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_233543E18;
  return v6(v0[5]);
}

uint64_t sub_233543E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 64) = v1;
  swift_task_dealloc();
  sub_2331A0DF4(*(_QWORD *)(v4 + 40));
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_233543EAC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of BankConnectCryptoServiceProviding.encrypt(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331A5D78;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of BankConnectCryptoServiceProviding.decrypt(accountPaymentInformation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331D7608;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_233543FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  _QWORD v13[2];
  objc_super v14;
  uint64_t v15;

  v3 = type metadata accessor for InternalTransaction(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v13[1] = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_2331684BC(v9, (uint64_t)v6, type metadata accessor for InternalTransaction);
      v11 = (objc_class *)type metadata accessor for InternalTransaction.XPC(0);
      v12 = objc_allocWithZone(v11);
      sub_2331684BC((uint64_t)v6, (uint64_t)v12 + OBJC_IVAR___XPCInternalTransaction_value, type metadata accessor for InternalTransaction);
      v14.receiver = v12;
      v14.super_class = v11;
      objc_msgSendSuper2(&v14, sel_init);
      sub_2332AB59C((uint64_t)v6);
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      v9 += v10;
      --v7;
    }
    while (v7);
    return v15;
  }
  return result;
}

uint64_t sub_233544138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[7];

  v29 = a3;
  v30 = a4;
  v27 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054D60);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(a2 + 16);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v16(v15 + ((v14 + 16) & ~v14), v11, v8);
  aBlock[4] = sub_233547BA4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2332D74A4;
  aBlock[3] = &block_descriptor_33;
  v17 = _Block_copy(aBlock);
  v18 = v12;
  swift_release();
  v19 = objc_msgSend(v18, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);

  sub_23361EC24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D68);
  swift_dynamicCast();
  v20 = sub_23361E534();
  v21 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v28, 1, 1, v20);
  v22 = aBlock[6];
  v13(v11, v27, v8);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v24 = v30;
  v23[4] = v29;
  v23[5] = v24;
  v23[6] = v22;
  v16((uint64_t)v23 + ((v14 + 56) & ~v14), v11, v8);
  swift_unknownObjectRetain();
  swift_retain();
  sub_2333B205C(v21, (uint64_t)&unk_256054D78, (uint64_t)v23);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2335443C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[7];

  v29 = a3;
  v30 = a4;
  v27 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054D28);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(a2 + 16);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v16(v15 + ((v14 + 16) & ~v14), v11, v8);
  aBlock[4] = sub_2335475C0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2332D74A4;
  aBlock[3] = &block_descriptor_20;
  v17 = _Block_copy(aBlock);
  v18 = v12;
  swift_release();
  v19 = objc_msgSend(v18, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);

  sub_23361EC24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D30);
  swift_dynamicCast();
  v20 = sub_23361E534();
  v21 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v28, 1, 1, v20);
  v22 = aBlock[6];
  v13(v11, v27, v8);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v24 = v30;
  v23[4] = v29;
  v23[5] = v24;
  v23[6] = v22;
  v16((uint64_t)v23 + ((v14 + 56) & ~v14), v11, v8);
  swift_unknownObjectRetain();
  swift_retain();
  sub_2333B205C(v21, (uint64_t)&unk_256054D40, (uint64_t)v23);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_233544650(void *a1, uint64_t a2, uint64_t *a3)
{
  id v4;

  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_23361E480();
}

uint64_t sub_233544694(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  int *v10;

  v7[6] = a7;
  v7[2] = a6;
  v10 = (int *)((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v7[7] = v8;
  *v8 = v7;
  v8[1] = sub_23354470C;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v10)(v7 + 3, v7 + 2);
}

uint64_t sub_23354470C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233544770()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D60);
  sub_23361E48C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2335447C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D60);
  sub_23361E480();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233544810(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  int *v10;

  v7[6] = a7;
  v7[2] = a6;
  v10 = (int *)((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v7[7] = v8;
  *v8 = v7;
  v8[1] = sub_233544888;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v10)(v7 + 3, v7 + 2);
}

uint64_t sub_233544888()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2335448EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D28);
  sub_23361E48C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23354493C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D28);
  sub_23361E480();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FinancialInsightsService.financialInsights(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  v3 = sub_23361D6A0();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054CB8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233544A20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t (*v21)(int *);
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_233160C74(MEMORY[0x24BEE4AF8]);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 128) = v3;
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 136) = v4;
    if (v4)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    sub_233166944(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
  }
  swift_bridgeObjectRetain_n();
  v20 = sub_23361EF30();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 136) = v20;
  if (!v20)
    goto LABEL_20;
LABEL_3:
  *(_QWORD *)(v0 + 144) = v2;
  *(_QWORD *)(v0 + 152) = 0;
  v6 = *(_QWORD *)(v0 + 128);
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = MEMORY[0x234933120](0);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v7 = *(_QWORD *)(v6 + 32);
    swift_retain();
  }
  *(_QWORD *)(v0 + 160) = v7;
  *(_QWORD *)(v0 + 168) = 1;
  if (qword_256041C48 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560494A8);
  swift_retain_n();
  v9 = sub_23361DB68();
  v10 = sub_23361E750();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v22 = v12;
    *(_DWORD *)v11 = 136315138;
    sub_2332D69A8(v0 + 16);
    v13 = *(_QWORD *)(v0 + 32);
    if (v13)
      v14 = *(_QWORD *)(v0 + 24);
    else
      v14 = 1280070990;
    if (v13)
      v15 = *(_QWORD *)(v0 + 32);
    else
      v15 = 0xE400000000000000;
    *(_QWORD *)(v0 + 64) = sub_233164DCC(v14, v15, &v22);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_233151000, v9, v10, "Extension (%s) found.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v12, -1, -1);
    MEMORY[0x234934590](v11, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v16 = *(_QWORD *)(v0 + 72);
  v17 = swift_allocObject();
  *(_QWORD *)(v0 + 176) = v17;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v0 + 48) = v7;
  swift_bridgeObjectRetain();
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v18;
  v18[2] = v0 + 48;
  v18[3] = &unk_256054CD0;
  v18[4] = v17;
  v21 = (uint64_t (*)(int *))((char *)&dword_2560443E0 + dword_2560443E0);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v19;
  *v19 = v0;
  v19[1] = sub_233544D98;
  return v21((int *)&unk_256054CD8);
}

uint64_t sub_233544D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

void sub_233544E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  void (*v8)(_QWORD *@<X8>);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, uint64_t, uint64_t);
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  int64_t v50;
  int v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  int64_t v87;
  unint64_t v88;
  void (*v89)(int *);
  uint64_t v90;

  v87 = 0;
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v1 + 64);
  v84 = v1 + 64;
  v86 = v1;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v86 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v85 = (unint64_t)(63 - v4) >> 6;
  v6 = (uint64_t *)&unk_256054CE0;
  v7 = *(_QWORD **)(v0 + 144);
  v8 = *(void (**)(_QWORD *@<X8>))(v0 + 152);
  while (1)
  {
    if (v5)
    {
      v12 = __clz(__rbit64(v5));
      v13 = (v5 - 1) & v5;
      v14 = v12 | (v87 << 6);
LABEL_8:
      v15 = *(_QWORD *)(v0 + 112);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 16))(v15, *(_QWORD *)(v86 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 96) + 72) * v14, *(_QWORD *)(v0 + 88));
      v16 = *(_QWORD *)(v86 + 56);
      v17 = __swift_instantiateConcreteTypeFromMangledName(v6);
      *(_QWORD *)(v15 + *(int *)(v17 + 48)) = *(_QWORD *)(v16 + 8 * v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 0, 1, v17);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v18 = v87 + 1;
    if (__OFADD__(v87, 1))
      goto LABEL_80;
    if (v18 < v85)
    {
      v19 = *(_QWORD *)(v84 + 8 * v18);
      if (v19)
        goto LABEL_12;
      v20 = v87 + 2;
      ++v87;
      if (v18 + 1 < v85)
      {
        v19 = *(_QWORD *)(v84 + 8 * v20);
        if (v19)
          goto LABEL_15;
        v87 = v18 + 1;
        if (v18 + 2 < v85)
        {
          v19 = *(_QWORD *)(v84 + 8 * (v18 + 2));
          if (v19)
          {
            v18 += 2;
LABEL_12:
            v13 = (v19 - 1) & v19;
            v14 = __clz(__rbit64(v19)) + (v18 << 6);
            v87 = v18;
            goto LABEL_8;
          }
          v20 = v18 + 3;
          v87 = v18 + 2;
          if (v18 + 3 < v85)
          {
            v19 = *(_QWORD *)(v84 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                v18 = v20 + 1;
                if (__OFADD__(v20, 1))
                  break;
                if (v18 >= v85)
                {
                  v87 = v85 - 1;
                  goto LABEL_26;
                }
                v19 = *(_QWORD *)(v84 + 8 * v18);
                ++v20;
                if (v19)
                  goto LABEL_12;
              }
              __break(1u);
              goto LABEL_86;
            }
LABEL_15:
            v18 = v20;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_26:
    v21 = *(_QWORD *)(v0 + 112);
    v22 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v13 = 0;
LABEL_27:
    v23 = *(_QWORD *)(v0 + 120);
    sub_2335473F8(*(_QWORD *)(v0 + 112), v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24) == 1)
      break;
    v88 = v13;
    v25 = v6;
    v26 = *(_QWORD *)(v0 + 104);
    v27 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + *(int *)(v24 + 48));
    (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 96) + 32))(v26);
    sub_233166944((uint64_t)v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 56) = v7;
    v30 = sub_2331E3D7C(v26);
    v31 = v7[2];
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      sub_23361EF6C();
      return;
    }
    v34 = v29;
    if (v7[3] >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23327FA6C();
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 104);
      sub_23327C974(v33, isUniquelyReferenced_nonNull_native);
      v36 = sub_2331E3D7C(v35);
      if ((v34 & 1) != (v37 & 1))
      {
        sub_23361F2B4();
        return;
      }
      v30 = v36;
    }
    v7 = *(_QWORD **)(v0 + 56);
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 96);
      v39 = *(_QWORD *)(v0 + 104);
      v40 = *(_QWORD *)(v0 + 88);
      v7[(v30 >> 6) + 8] |= 1 << v30;
      v41 = v7[6] + *(_QWORD *)(v38 + 72) * v30;
      v42 = *(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 16);
      swift_bridgeObjectRetain();
      v42(v41, v39, v40);
      *(_QWORD *)(v7[7] + 8 * v30) = MEMORY[0x24BEE4AF8];
      v43 = v7[2];
      v44 = __OFADD__(v43, 1);
      v45 = v43 + 1;
      if (v44)
        goto LABEL_79;
      v7[2] = v45;
    }
    v46 = v7[7];
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v27 + 16);
    v48 = *(_QWORD *)(v46 + 8 * v30);
    v49 = *(_QWORD *)(v48 + 16);
    v50 = v49 + v47;
    if (__OFADD__(v49, v47))
      goto LABEL_76;
    v51 = swift_isUniquelyReferenced_nonNull_native();
    if (v51 && v50 <= *(_QWORD *)(v48 + 24) >> 1)
    {
      if (!*(_QWORD *)(v27 + 16))
        goto LABEL_4;
    }
    else
    {
      if (v49 <= v50)
        v52 = v49 + v47;
      else
        v52 = v49;
      v48 = sub_2334A58FC(v51, v52, 1, v48);
      if (!*(_QWORD *)(v27 + 16))
      {
LABEL_4:
        if (v47)
          goto LABEL_77;
        goto LABEL_5;
      }
    }
    v53 = *(_QWORD *)(v48 + 16);
    v54 = (*(_QWORD *)(v48 + 24) >> 1) - v53;
    v55 = type metadata accessor for Transaction.Insight(0);
    if (v54 < v47)
      goto LABEL_78;
    v56 = *(_QWORD *)(v55 - 8);
    v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v58 = *(_QWORD *)(v56 + 72);
    v59 = v48 + v57 + v58 * v53;
    v60 = v27 + v57;
    v61 = v58 * v47;
    v62 = v59 + v61;
    v63 = v60 + v61;
    if (v60 < v62 && v59 < v63)
      goto LABEL_82;
    swift_arrayInitWithCopy();
    if (v47)
    {
      v65 = *(_QWORD *)(v48 + 16);
      v44 = __OFADD__(v65, v47);
      v66 = v65 + v47;
      if (v44)
        goto LABEL_81;
      *(_QWORD *)(v48 + 16) = v66;
    }
LABEL_5:
    v10 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v46 + 8 * v30) = v48;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v8 = sub_233545DAC;
    v6 = v25;
    v5 = v88;
  }
  v67 = *(_QWORD *)(v0 + 168);
  v68 = *(_QWORD *)(v0 + 136);
  swift_release();
  swift_release();
  if (v67 == v68)
  {
    swift_bridgeObjectRelease();
    sub_233166944((uint64_t)v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(_QWORD *))(v0 + 8))(v7);
    return;
  }
  v69 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 144) = v7;
  *(_QWORD *)(v0 + 152) = v8;
  v70 = *(_QWORD *)(v0 + 128);
  if ((v70 & 0xC000000000000001) != 0)
  {
    v71 = MEMORY[0x234933120](v69);
    goto LABEL_63;
  }
  if (v69 >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_86:
    __break(1u);
    return;
  }
  v71 = *(_QWORD *)(v70 + 8 * v69 + 32);
  swift_retain();
LABEL_63:
  *(_QWORD *)(v0 + 160) = v71;
  *(_QWORD *)(v0 + 168) = v69 + 1;
  if (__OFADD__(v69, 1))
  {
    __break(1u);
    goto LABEL_84;
  }
  if (qword_256041C48 != -1)
LABEL_84:
    swift_once();
  v72 = sub_23361DB80();
  __swift_project_value_buffer(v72, (uint64_t)qword_2560494A8);
  swift_retain_n();
  v73 = sub_23361DB68();
  v74 = sub_23361E750();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)swift_slowAlloc();
    v76 = swift_slowAlloc();
    v90 = v76;
    *(_DWORD *)v75 = 136315138;
    sub_2332D69A8(v0 + 16);
    v77 = *(_QWORD *)(v0 + 32);
    if (v77)
      v78 = *(_QWORD *)(v0 + 24);
    else
      v78 = 1280070990;
    if (v77)
      v79 = *(_QWORD *)(v0 + 32);
    else
      v79 = 0xE400000000000000;
    *(_QWORD *)(v0 + 64) = sub_233164DCC(v78, v79, &v90);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_233151000, v73, v74, "Extension (%s) found.", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v76, -1, -1);
    MEMORY[0x234934590](v75, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v80 = *(_QWORD *)(v0 + 72);
  v81 = swift_allocObject();
  *(_QWORD *)(v0 + 176) = v81;
  *(_QWORD *)(v81 + 16) = v80;
  *(_QWORD *)(v0 + 48) = v71;
  swift_bridgeObjectRetain();
  v82 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v82;
  v82[2] = v0 + 48;
  v82[3] = &unk_256054CD0;
  v82[4] = v81;
  v89 = (void (*)(int *))((char *)&dword_2560443E0 + dword_2560443E0);
  v83 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v83;
  *v83 = v0;
  v83[1] = sub_233544D98;
  v89((int *)&unk_256054CD8);
}

uint64_t sub_233545678()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  sub_233166944(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233545718(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[17] = a1;
  v3[18] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v3[19] = swift_task_alloc();
  v5 = sub_23361D6A0();
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v6 = swift_task_alloc();
  v7 = *a2;
  v3[23] = v6;
  v3[24] = v7;
  return swift_task_switch();
}

uint64_t sub_2335457B4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[24];
  sub_233543FDC(v0[18]);
  type metadata accessor for InternalTransaction.XPC(0);
  v2 = sub_23361E3D8();
  v0[25] = v2;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_233545894;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_233545D58;
  v4[3] = &block_descriptor_27;
  v4[4] = v3;
  objc_msgSend(v1, sel_financialInsightsFor_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_233545894()
{
  return swift_task_switch();
}

void sub_2335458E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;

  v1 = *(_QWORD *)(v0 + 120);
  v48 = v1 + 64;
  v50 = *(_QWORD *)(v0 + 168);
  v2 = -1;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  v4 = v2 & *(_QWORD *)(v1 + 64);
  v49 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
  v47 = v1;
  while (1)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v51 = v5;
      v8 = v7 | (v5 << 6);
      goto LABEL_26;
    }
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_42;
    if (v9 >= v49)
    {
LABEL_39:
      v45 = *(void **)(v0 + 200);
      v46 = *(_QWORD **)(v0 + 136);
      swift_release();
      swift_bridgeObjectRelease();
      *v46 = v6;

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v10 = *(_QWORD *)(v48 + 8 * v9);
    v11 = v5 + 1;
    if (!v10)
    {
      v11 = v5 + 2;
      if (v5 + 2 >= v49)
        goto LABEL_39;
      v10 = *(_QWORD *)(v48 + 8 * v11);
      if (!v10)
      {
        v11 = v5 + 3;
        if (v5 + 3 >= v49)
          goto LABEL_39;
        v10 = *(_QWORD *)(v48 + 8 * v11);
        if (!v10)
        {
          v11 = v5 + 4;
          if (v5 + 4 >= v49)
            goto LABEL_39;
          v10 = *(_QWORD *)(v48 + 8 * v11);
          if (!v10)
          {
            v11 = v5 + 5;
            if (v5 + 5 >= v49)
              goto LABEL_39;
            v10 = *(_QWORD *)(v48 + 8 * v11);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_25:
    v4 = (v10 - 1) & v10;
    v51 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_26:
    v14 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 160);
    v15 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
    v16 = v15;
    sub_23361D640();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v14, 1, v13) == 1)
    {
      sub_2331D76B8(*(_QWORD *)(v0 + 152));
      goto LABEL_5;
    }
    v18 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 32))(v17, *(_QWORD *)(v0 + 152), v19);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    v20(v18, v17, v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256051FE0);
    v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Transaction.Insight(0) - 8) + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_233623D60;
    sub_2331684BC((uint64_t)v16 + OBJC_IVAR___XPCTransactionInsight_value, v23 + v22, type metadata accessor for Transaction.Insight);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = sub_2331E3D7C(v18);
    v27 = v6[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v30 = v25;
    if (v6[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v25 & 1) == 0)
          goto LABEL_36;
      }
      else
      {
        sub_23327FA6C();
        if ((v30 & 1) == 0)
          goto LABEL_36;
      }
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 176);
      sub_23327C974(v29, isUniquelyReferenced_nonNull_native);
      v32 = sub_2331E3D7C(v31);
      if ((v30 & 1) != (v33 & 1))
      {
        sub_23361F2B4();
        return;
      }
      v26 = v32;
      if ((v30 & 1) == 0)
      {
LABEL_36:
        v36 = *(_QWORD *)(v0 + 176);
        v37 = *(_QWORD *)(v0 + 160);
        v6[(v26 >> 6) + 8] |= 1 << v26;
        v35 = v50;
        v20(v6[6] + *(_QWORD *)(v50 + 72) * v26, v36, v37);
        *(_QWORD *)(v6[7] + 8 * v26) = v23;
        v38 = v6[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_43;
        v6[2] = v40;
        goto LABEL_38;
      }
    }
    v34 = v6[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 8 * v26) = v23;
    v35 = v50;
LABEL_38:
    v42 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 160);
    swift_bridgeObjectRelease();
    v44 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v44(v42, v43);
    v44(v41, v43);
    v1 = v47;
LABEL_5:
    swift_bridgeObjectRelease();

    v5 = v51;
  }
  v12 = v5 + 6;
  if (v5 + 6 >= v49)
    goto LABEL_39;
  v10 = *(_QWORD *)(v48 + 8 * v12);
  if (v10)
  {
    v11 = v5 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v49)
      goto LABEL_39;
    v10 = *(_QWORD *)(v48 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_25;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_233545D58(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  type metadata accessor for Transaction.Insight.XPC(0);
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_23361E06C();
  return swift_continuation_resume();
}

void sub_233545DAC(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t FinancialInsightsService.financialInsights()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  v2 = sub_23361D6A0();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054CB8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233545E50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(int *);
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_233160C74(MEMORY[0x24BEE4AF8]);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 120) = v3;
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 128) = v4;
    if (v4)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    sub_233166944(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
  }
  swift_bridgeObjectRetain_n();
  v18 = sub_23361EF30();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = v18;
  if (!v18)
    goto LABEL_20;
LABEL_3:
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)(v0 + 144) = 0;
  v6 = *(_QWORD *)(v0 + 120);
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = MEMORY[0x234933120](0);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v7 = *(_QWORD *)(v6 + 32);
    swift_retain();
  }
  *(_QWORD *)(v0 + 152) = v7;
  *(_QWORD *)(v0 + 160) = 1;
  if (qword_256041C48 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560494A8);
  swift_retain_n();
  v9 = sub_23361DB68();
  v10 = sub_23361E750();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136315138;
    sub_2332D69A8(v0 + 16);
    v13 = *(_QWORD *)(v0 + 32);
    if (v13)
      v14 = *(_QWORD *)(v0 + 24);
    else
      v14 = 1280070990;
    if (v13)
      v15 = *(_QWORD *)(v0 + 32);
    else
      v15 = 0xE400000000000000;
    *(_QWORD *)(v0 + 64) = sub_233164DCC(v14, v15, &v20);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_233151000, v9, v10, "Extension (%s) found.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v12, -1, -1);
    MEMORY[0x234934590](v11, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  *(_QWORD *)(v0 + 48) = v7;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v16;
  v16[2] = v0 + 48;
  v16[3] = &unk_256054CF0;
  v16[4] = 0;
  v19 = (uint64_t (*)(int *))((char *)&dword_2560443E0 + dword_2560443E0);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v17;
  *v17 = v0;
  v17[1] = sub_23354619C;
  return v19((int *)&unk_256054CF8);
}

uint64_t sub_23354619C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_233546210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  void (*v8)(_QWORD *@<X8>);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, uint64_t, uint64_t);
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  int64_t v50;
  int v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  int64_t v85;
  unint64_t v86;
  void (*v87)(int *);
  uint64_t v88;

  v85 = 0;
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v1 + 64);
  v82 = v1 + 64;
  v84 = v1;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v84 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v83 = (unint64_t)(63 - v4) >> 6;
  v6 = (uint64_t *)&unk_256054CE0;
  v7 = *(_QWORD **)(v0 + 136);
  v8 = *(void (**)(_QWORD *@<X8>))(v0 + 144);
  while (1)
  {
    if (v5)
    {
      v12 = __clz(__rbit64(v5));
      v13 = (v5 - 1) & v5;
      v14 = v12 | (v85 << 6);
LABEL_8:
      v15 = *(_QWORD *)(v0 + 104);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(v15, *(_QWORD *)(v84 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 88) + 72) * v14, *(_QWORD *)(v0 + 80));
      v16 = *(_QWORD *)(v84 + 56);
      v17 = __swift_instantiateConcreteTypeFromMangledName(v6);
      *(_QWORD *)(v15 + *(int *)(v17 + 48)) = *(_QWORD *)(v16 + 8 * v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 0, 1, v17);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v18 = v85 + 1;
    if (__OFADD__(v85, 1))
      goto LABEL_80;
    if (v18 < v83)
    {
      v19 = *(_QWORD *)(v82 + 8 * v18);
      if (v19)
        goto LABEL_12;
      v20 = v85 + 2;
      ++v85;
      if (v18 + 1 < v83)
      {
        v19 = *(_QWORD *)(v82 + 8 * v20);
        if (v19)
          goto LABEL_15;
        v85 = v18 + 1;
        if (v18 + 2 < v83)
        {
          v19 = *(_QWORD *)(v82 + 8 * (v18 + 2));
          if (v19)
          {
            v18 += 2;
LABEL_12:
            v13 = (v19 - 1) & v19;
            v14 = __clz(__rbit64(v19)) + (v18 << 6);
            v85 = v18;
            goto LABEL_8;
          }
          v20 = v18 + 3;
          v85 = v18 + 2;
          if (v18 + 3 < v83)
          {
            v19 = *(_QWORD *)(v82 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                v18 = v20 + 1;
                if (__OFADD__(v20, 1))
                  break;
                if (v18 >= v83)
                {
                  v85 = v83 - 1;
                  goto LABEL_26;
                }
                v19 = *(_QWORD *)(v82 + 8 * v18);
                ++v20;
                if (v19)
                  goto LABEL_12;
              }
              __break(1u);
              goto LABEL_86;
            }
LABEL_15:
            v18 = v20;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_26:
    v21 = *(_QWORD *)(v0 + 104);
    v22 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    v13 = 0;
LABEL_27:
    v23 = *(_QWORD *)(v0 + 112);
    sub_2335473F8(*(_QWORD *)(v0 + 104), v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24) == 1)
      break;
    v86 = v13;
    v25 = v6;
    v26 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(int *)(v24 + 48));
    (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 88) + 32))(v26);
    sub_233166944((uint64_t)v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 56) = v7;
    v30 = sub_2331E3D7C(v26);
    v31 = v7[2];
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      sub_23361EF6C();
      return;
    }
    v34 = v29;
    if (v7[3] >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23327FA6C();
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 96);
      sub_23327C974(v33, isUniquelyReferenced_nonNull_native);
      v36 = sub_2331E3D7C(v35);
      if ((v34 & 1) != (v37 & 1))
      {
        sub_23361F2B4();
        return;
      }
      v30 = v36;
    }
    v7 = *(_QWORD **)(v0 + 56);
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 88);
      v39 = *(_QWORD *)(v0 + 96);
      v40 = *(_QWORD *)(v0 + 80);
      v7[(v30 >> 6) + 8] |= 1 << v30;
      v41 = v7[6] + *(_QWORD *)(v38 + 72) * v30;
      v42 = *(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 16);
      swift_bridgeObjectRetain();
      v42(v41, v39, v40);
      *(_QWORD *)(v7[7] + 8 * v30) = MEMORY[0x24BEE4AF8];
      v43 = v7[2];
      v44 = __OFADD__(v43, 1);
      v45 = v43 + 1;
      if (v44)
        goto LABEL_79;
      v7[2] = v45;
    }
    v46 = v7[7];
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v27 + 16);
    v48 = *(_QWORD *)(v46 + 8 * v30);
    v49 = *(_QWORD *)(v48 + 16);
    v50 = v49 + v47;
    if (__OFADD__(v49, v47))
      goto LABEL_76;
    v51 = swift_isUniquelyReferenced_nonNull_native();
    if (v51 && v50 <= *(_QWORD *)(v48 + 24) >> 1)
    {
      if (!*(_QWORD *)(v27 + 16))
        goto LABEL_4;
    }
    else
    {
      if (v49 <= v50)
        v52 = v49 + v47;
      else
        v52 = v49;
      v48 = sub_2334A58FC(v51, v52, 1, v48);
      if (!*(_QWORD *)(v27 + 16))
      {
LABEL_4:
        if (v47)
          goto LABEL_77;
        goto LABEL_5;
      }
    }
    v53 = *(_QWORD *)(v48 + 16);
    v54 = (*(_QWORD *)(v48 + 24) >> 1) - v53;
    v55 = type metadata accessor for Transaction.Insight(0);
    if (v54 < v47)
      goto LABEL_78;
    v56 = *(_QWORD *)(v55 - 8);
    v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v58 = *(_QWORD *)(v56 + 72);
    v59 = v48 + v57 + v58 * v53;
    v60 = v27 + v57;
    v61 = v58 * v47;
    v62 = v59 + v61;
    v63 = v60 + v61;
    if (v60 < v62 && v59 < v63)
      goto LABEL_82;
    swift_arrayInitWithCopy();
    if (v47)
    {
      v65 = *(_QWORD *)(v48 + 16);
      v44 = __OFADD__(v65, v47);
      v66 = v65 + v47;
      if (v44)
        goto LABEL_81;
      *(_QWORD *)(v48 + 16) = v66;
    }
LABEL_5:
    v10 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v46 + 8 * v30) = v48;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v8 = sub_233545DAC;
    v6 = v25;
    v5 = v86;
  }
  v67 = *(_QWORD *)(v0 + 160);
  v68 = *(_QWORD *)(v0 + 128);
  swift_release();
  swift_release();
  if (v67 == v68)
  {
    swift_bridgeObjectRelease();
    sub_233166944((uint64_t)v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(_QWORD *))(v0 + 8))(v7);
    return;
  }
  v69 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = v8;
  v70 = *(_QWORD *)(v0 + 120);
  if ((v70 & 0xC000000000000001) != 0)
  {
    v71 = MEMORY[0x234933120](v69);
    goto LABEL_63;
  }
  if (v69 >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_86:
    __break(1u);
    return;
  }
  v71 = *(_QWORD *)(v70 + 8 * v69 + 32);
  swift_retain();
LABEL_63:
  *(_QWORD *)(v0 + 152) = v71;
  *(_QWORD *)(v0 + 160) = v69 + 1;
  if (__OFADD__(v69, 1))
  {
    __break(1u);
    goto LABEL_84;
  }
  if (qword_256041C48 != -1)
LABEL_84:
    swift_once();
  v72 = sub_23361DB80();
  __swift_project_value_buffer(v72, (uint64_t)qword_2560494A8);
  swift_retain_n();
  v73 = sub_23361DB68();
  v74 = sub_23361E750();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)swift_slowAlloc();
    v76 = swift_slowAlloc();
    v88 = v76;
    *(_DWORD *)v75 = 136315138;
    sub_2332D69A8(v0 + 16);
    v77 = *(_QWORD *)(v0 + 32);
    if (v77)
      v78 = *(_QWORD *)(v0 + 24);
    else
      v78 = 1280070990;
    if (v77)
      v79 = *(_QWORD *)(v0 + 32);
    else
      v79 = 0xE400000000000000;
    *(_QWORD *)(v0 + 64) = sub_233164DCC(v78, v79, &v88);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_233151000, v73, v74, "Extension (%s) found.", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v76, -1, -1);
    MEMORY[0x234934590](v75, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  *(_QWORD *)(v0 + 48) = v71;
  v80 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v80;
  v80[2] = v0 + 48;
  v80[3] = &unk_256054CF0;
  v80[4] = 0;
  v87 = (void (*)(int *))((char *)&dword_2560443E0 + dword_2560443E0);
  v81 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v81;
  *v81 = v0;
  v81[1] = sub_23354619C;
  v87((int *)&unk_256054CF8);
}

uint64_t sub_233546A48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  sub_233166944(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233546AE0(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[16] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v2[17] = swift_task_alloc();
  v4 = sub_23361D6A0();
  v2[18] = v4;
  v2[19] = *(_QWORD *)(v4 - 8);
  v2[20] = swift_task_alloc();
  v5 = swift_task_alloc();
  v6 = *a2;
  v2[21] = v5;
  v2[22] = v6;
  return swift_task_switch();
}

uint64_t sub_233546B7C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[22];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_233546C10;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_233545D58;
  v3[3] = &block_descriptor_26;
  v3[4] = v2;
  objc_msgSend(v1, sel_cachedFinancialInsightsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_233546C10()
{
  return swift_task_switch();
}

void sub_233546C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;

  v1 = *(_QWORD *)(v0 + 120);
  v47 = v1 + 64;
  v49 = *(_QWORD *)(v0 + 152);
  v2 = -1;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  v4 = v2 & *(_QWORD *)(v1 + 64);
  v48 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
  v46 = v1;
  while (1)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v50 = v5;
      v8 = v7 | (v5 << 6);
      goto LABEL_26;
    }
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_42;
    if (v9 >= v48)
    {
LABEL_39:
      v45 = *(_QWORD **)(v0 + 128);
      swift_release();
      swift_bridgeObjectRelease();
      *v45 = v6;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v10 = *(_QWORD *)(v47 + 8 * v9);
    v11 = v5 + 1;
    if (!v10)
    {
      v11 = v5 + 2;
      if (v5 + 2 >= v48)
        goto LABEL_39;
      v10 = *(_QWORD *)(v47 + 8 * v11);
      if (!v10)
      {
        v11 = v5 + 3;
        if (v5 + 3 >= v48)
          goto LABEL_39;
        v10 = *(_QWORD *)(v47 + 8 * v11);
        if (!v10)
        {
          v11 = v5 + 4;
          if (v5 + 4 >= v48)
            goto LABEL_39;
          v10 = *(_QWORD *)(v47 + 8 * v11);
          if (!v10)
          {
            v11 = v5 + 5;
            if (v5 + 5 >= v48)
              goto LABEL_39;
            v10 = *(_QWORD *)(v47 + 8 * v11);
            if (!v10)
              break;
          }
        }
      }
    }
LABEL_25:
    v4 = (v10 - 1) & v10;
    v50 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_26:
    v14 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 144);
    v15 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
    v16 = v15;
    sub_23361D640();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v14, 1, v13) == 1)
    {
      sub_2331D76B8(*(_QWORD *)(v0 + 136));
      goto LABEL_5;
    }
    v18 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 32))(v17, *(_QWORD *)(v0 + 136), v19);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    v20(v18, v17, v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256051FE0);
    v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Transaction.Insight(0) - 8) + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_233623D60;
    sub_2331684BC((uint64_t)v16 + OBJC_IVAR___XPCTransactionInsight_value, v23 + v22, type metadata accessor for Transaction.Insight);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = sub_2331E3D7C(v18);
    v27 = v6[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v30 = v25;
    if (v6[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v25 & 1) == 0)
          goto LABEL_36;
      }
      else
      {
        sub_23327FA6C();
        if ((v30 & 1) == 0)
          goto LABEL_36;
      }
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 160);
      sub_23327C974(v29, isUniquelyReferenced_nonNull_native);
      v32 = sub_2331E3D7C(v31);
      if ((v30 & 1) != (v33 & 1))
      {
        sub_23361F2B4();
        return;
      }
      v26 = v32;
      if ((v30 & 1) == 0)
      {
LABEL_36:
        v36 = *(_QWORD *)(v0 + 160);
        v37 = *(_QWORD *)(v0 + 144);
        v6[(v26 >> 6) + 8] |= 1 << v26;
        v35 = v49;
        v20(v6[6] + *(_QWORD *)(v49 + 72) * v26, v36, v37);
        *(_QWORD *)(v6[7] + 8 * v26) = v23;
        v38 = v6[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_43;
        v6[2] = v40;
        goto LABEL_38;
      }
    }
    v34 = v6[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 8 * v26) = v23;
    v35 = v49;
LABEL_38:
    v42 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 168);
    v43 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease();
    v44 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v44(v42, v43);
    v44(v41, v43);
    v1 = v46;
LABEL_5:
    swift_bridgeObjectRelease();

    v5 = v50;
  }
  v12 = v5 + 6;
  if (v5 + 6 >= v48)
    goto LABEL_39;
  v10 = *(_QWORD *)(v47 + 8 * v12);
  if (v10)
  {
    v11 = v5 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v48)
      goto LABEL_39;
    v10 = *(_QWORD *)(v47 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_25;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_2335470C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_233160FEC;
  return FinancialInsightsService.financialInsights(for:)(a1);
}

uint64_t sub_233547118()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23334E4CC;
  return FinancialInsightsService.financialInsights()();
}

uint64_t sub_233547160(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v14;

  v10 = *a6;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v11;
  *v11 = v7;
  v11[1] = sub_23318C26C;
  v11[6] = a7;
  v11[2] = v10;
  v14 = (int *)((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v11[7] = v12;
  *v12 = v11;
  v12[1] = sub_23354470C;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v14)(v11 + 3, v11 + 2);
}

uint64_t sub_233547210(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = *a2;
  v4[4] = a1;
  return swift_task_switch();
}

uint64_t sub_233547230()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v0 + 24;
  *(_OWORD *)(v1 + 24) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D20);
  *v3 = v0;
  v3[1] = sub_23335BB00;
  return sub_23361F284();
}

uint64_t sub_2335472EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_233547310(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318C26C;
  return sub_233545718(a1, a2, v6);
}

uint64_t sub_233547378(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (_QWORD *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23318C26C;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))((char *)&dword_256054CC8 + dword_256054CC8))(a1, v4, v5, v6);
}

uint64_t sub_2335473F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054CB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233547440(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (_QWORD *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2331676FC;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))((char *)&dword_256054CC8 + dword_256054CC8))(a1, v4, v5, v6);
}

uint64_t dispatch thunk of FinancialTransactionInsightsProviding.financialInsights(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331D7608;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FinancialTransactionInsightsProviding.financialInsights()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2334DDFB0;
  return v7(a1, a2);
}

uint64_t sub_2335475A4(uint64_t a1)
{
  uint64_t v1;

  return sub_2335443C4(a1, **(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_2335475B4()
{
  return objectdestroy_18Tm(&qword_256054D28);
}

uint64_t sub_2335475C0(void *a1)
{
  return sub_233547BB0(a1, &qword_256054D28);
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t sub_2335475D4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v14;

  v10 = *a6;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v11;
  *v11 = v7;
  v11[1] = sub_23318C26C;
  v11[6] = a7;
  v11[2] = v10;
  v14 = (int *)((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v11[7] = v12;
  *v12 = v11;
  v12[1] = sub_233544888;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v14)(v11 + 3, v11 + 2);
}

uint64_t sub_233547684()
{
  return objectdestroy_22Tm(&qword_256054D28);
}

uint64_t sub_233547690(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256054D28) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (int *)v1[4];
  v8 = v1[5];
  v9 = v1 + 6;
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23318C26C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t *, uint64_t))((char *)&dword_256054D38
                                                                                                + dword_256054D38))(a1, v5, v6, v7, v8, v9, v10);
}

void sub_233547748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D50;
  v1 = type metadata accessor for InternalTransaction.XPC(0);
  *(_QWORD *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_256054D50);
  *(_QWORD *)(v0 + 32) = v1;
  v2 = sub_233168668(0, &qword_254247130);
  *(_QWORD *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(qword_254247138);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v4 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithArray_, v4);

  sub_23361E5C4();
  __break(1u);
  __break(1u);
  __break(1u);
}

uint64_t sub_233547B3C()
{
  return objectdestroy_18Tm(&qword_256054D60);
}

uint64_t objectdestroy_18Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_233547BA4(void *a1)
{
  return sub_233547BB0(a1, &qword_256054D60);
}

uint64_t sub_233547BB0(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return sub_233544650(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_233547C00()
{
  return objectdestroy_22Tm(&qword_256054D60);
}

uint64_t objectdestroy_22Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_233547C8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256054D60) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (int *)v1[4];
  v8 = v1[5];
  v9 = v1 + 6;
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_2331676FC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t *, uint64_t))((char *)&dword_256054D70
                                                                                                + dword_256054D70))(a1, v5, v6, v7, v8, v9, v10);
}

PKPaymentPass_optional __swiftcall BankConnectPaymentPassDataSource.paymentPass(with:)(Swift::String with)
{
  void **v1;
  void *v2;
  void *v3;
  objc_class *v4;
  Swift::Bool v5;
  objc_class *v6;
  PKPaymentPass_optional result;

  v2 = *v1;
  v3 = (void *)sub_23361E12C();
  v4 = (objc_class *)objc_msgSend(v2, sel_passWithFPANIdentifier_, v3);

  v6 = v4;
  result.value.super.super.super.super.isa = v6;
  result.is_nil = v5;
  return result;
}

uint64_t BankConnectPaymentPassDataSource.paymentPasses()()
{
  id *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_passesOfType_, 1);
  sub_233547E18();
  v2 = sub_23361E3F0();

  v3 = sub_233547E54(v2);
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_233547E18()
{
  unint64_t result;

  result = qword_256042B88;
  if (!qword_256042B88)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_256042B88);
  }
  return result;
}

uint64_t sub_233547E54(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23361EF30())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_paymentPass);

      if (v7)
      {
        MEMORY[0x234932730]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23361E414();
        sub_23361E438();
        sub_23361E408();
      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

Swift::Void __swiftcall BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(Swift::Bool enabled, Swift::String a2)
{
  void **v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  object = a2._object;
  countAndFlagsBits = a2._countAndFlagsBits;
  v6 = sub_23361DB80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v40 - v11;
  v13 = *v2;
  v43 = countAndFlagsBits;
  v14 = (void *)sub_23361E12C();
  v15 = objc_msgSend(v13, sel_passWithFPANIdentifier_, v14);

  if (v15 && (v16 = objc_msgSend(v15, sel_uniqueID), v15, v16))
  {
    v17 = sub_23361E150();
    v19 = v18;

    v20 = qword_256041CB8;
    v21 = v13;
    if (v20 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v6, (uint64_t)qword_2560495F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v22, v6);

    swift_bridgeObjectRetain_n();
    v23 = sub_23361DB68();
    v24 = sub_23361E780();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v41 = v21;
      v26 = v25;
      v27 = swift_slowAlloc();
      v43 = v17;
      v28 = v27;
      v45 = v27;
      *(_DWORD *)v26 = 67109378;
      LODWORD(v44) = enabled;
      v42 = v7;
      sub_23361EBC4();
      *(_WORD *)(v26 + 8) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_233164DCC(v43, v19, &v45);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v23, v24, "Calling setLiveRenderingEnabled(%{BOOL}d, %s)", (uint8_t *)v26, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v28, -1, -1);
      v29 = v26;
      v21 = v41;
      MEMORY[0x234934590](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v6);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    v39 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setLiveRenderingEnabled_forPassUniqueID_, enabled, v39);

  }
  else
  {
    v30 = qword_256041CB8;
    v31 = v13;
    if (v30 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v6, (uint64_t)qword_2560495F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v32, v6);

    swift_bridgeObjectRetain_n();
    v33 = sub_23361DB68();
    v34 = sub_23361E768();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v45 = v36;
      *(_DWORD *)v35 = 136315394;
      if (enabled)
        v37 = 0x656C62616E65;
      else
        v37 = 0x656C6261736964;
      if (enabled)
        v38 = 0xE600000000000000;
      else
        v38 = 0xE700000000000000;
      v42 = v7;
      v44 = sub_233164DCC(v37, v38, &v45);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_233164DCC(v43, (unint64_t)object, &v45);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v33, v34, "Failed to %s dynamic card art, payment pass not found for fpanID %s.", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v36, -1, -1);
      MEMORY[0x234934590](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v6);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
}

FinanceKit::BankConnectPaymentPassDataSource __swiftcall BankConnectPaymentPassDataSourceProvider.makePaymentPassDataSource()()
{
  FinanceKit::BankConnectPaymentPassDataSource *v0;
  FinanceKit::BankConnectPaymentPassDataSource *v1;
  FinanceKit::BankConnectPaymentPassDataSource result;

  v1 = v0;
  result.passLibrary.super.isa = (Class)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6EC00]), sel_init);
  v1->passLibrary.super.isa = result.passLibrary.super.isa;
  return result;
}

FinanceKit::BankConnectPaymentPassDataSource __swiftcall BankConnectPaymentPassDataSource.init(passLibrary:)(FinanceKit::BankConnectPaymentPassDataSource passLibrary)
{
  FinanceKit::BankConnectPaymentPassDataSource *v1;

  v1->passLibrary.super.isa = passLibrary.passLibrary.super.isa;
  return passLibrary;
}

id sub_23354851C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6EC00]), sel_init);
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of BankConnectPaymentPassDataSourceProviding.makePaymentPassDataSource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for BankConnectPaymentPassDataSourceProvider()
{
  return &type metadata for BankConnectPaymentPassDataSourceProvider;
}

ValueMetadata *type metadata accessor for BankConnectPaymentPassDataSource()
{
  return &type metadata for BankConnectPaymentPassDataSource;
}

id ManagedNetworkRequestEvent.__allocating_init(_:context:)(uint64_t a1, objc_class *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  Class v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  Class v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57[2];

  v57[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23361E1B0();
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D6A0();
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23361D340();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a1;
  sub_23361C9C8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v51 = v16;
    v22(v19, v15, v16);
    v23 = objc_allocWithZone(v53);
    v53 = a2;
    v21 = objc_msgSend(v23, sel_initWithContext_, a2);
    sub_23361D5F8();
    v24 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    objc_msgSend(v21, sel_setEventDate_, v24);

    sub_23361D694();
    v25 = (void *)sub_23361D658();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v55);
    objc_msgSend(v21, sel_setTraceID_, v25);

    v26 = (void *)sub_23361D268();
    objc_msgSend(v21, sel_setEventURL_, v26);

    v27 = v56;
    v28 = sub_23361C9E0();
    if (v29 >> 60 == 15)
    {
      v30 = 0;
    }
    else
    {
      v31 = v28;
      v32 = v29;
      v30 = (void *)sub_23361D3AC();
      sub_2331B04E8(v31, v32);
    }
    objc_msgSend(v21, sel_setRequestBody_, v30);

    if (sub_23361C998())
    {
      v33 = (void *)objc_opt_self();
      v34 = (void *)sub_23361E054();
      swift_bridgeObjectRelease();
      v57[0] = 0;
      v35 = objc_msgSend(v33, sel_dataWithJSONObject_options_error_, v34, 0, v57);

      v36 = v57[0];
      if (v35)
      {
        v37 = sub_23361D3C4();
        v39 = v38;

        sub_23361E198();
        sub_23361E168();
        if (v40)
        {
          v41 = (void *)sub_23361E12C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v41 = 0;
        }
        objc_msgSend(v21, sel_setRequestHeaders_, v41);

        sub_23316BEA4(v37, v39);
        sub_23361C950();
        if (!v46)
          goto LABEL_15;
        goto LABEL_12;
      }
      v42 = v36;
      v43 = (void *)sub_23361D1B4();

      swift_willThrow();
    }
    sub_23361C950();
    if (!v44)
    {
LABEL_15:
      v45 = 0;
      goto LABEL_16;
    }
LABEL_12:
    v45 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
LABEL_16:
    v47 = v53;
    objc_msgSend(v21, sel_setRequestMethod_, v45);

    v48 = sub_23361C9F8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v27, v48);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v51);
    return v21;
  }

  v20 = sub_23361C9F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v56, v20);
  sub_233168608((uint64_t)v15, &qword_254248700);
  return 0;
}

void sub_233548A28(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_requestBody);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361D3C4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_233548A8C(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_23361D3AC();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setRequestBody_);

}

uint64_t ManagedNetworkRequestEvent.queryParameters.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_23361D340();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054D88);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361CC14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v1, sel_eventURL);
  sub_23361D2D4();

  sub_23361CBFC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_233168608((uint64_t)v8, &qword_256054D88);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v14 = sub_23361CBD8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v14;
}

id static ManagedNetworkRequestEvent.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedNetworkRequestEvent;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

unint64_t static ManagedNetworkRequestEvent.existingRequest(withTraceID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t result;
  unint64_t v9;
  id v10;
  objc_super v11;

  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedNetworkRequestEvent;
  v4 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  v6 = sub_23361D658();
  *(_QWORD *)(v5 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v5 + 64) = sub_2331B372C();
  *(_QWORD *)(v5 + 32) = v6;
  v7 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v7);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v9 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x234933120](0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    a2 = (uint64_t)v10;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id ManagedNetworkRequestEvent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedNetworkRequestEvent.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedNetworkRequestEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_233548FE8(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_eventDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_23354900C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setEventDate_);
}

void sub_233549020(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_traceID, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_233549044(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setTraceID_);
}

void sub_233549058(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_eventURL, (void (*)(void))MEMORY[0x24BDCD9C0]);
}

void sub_23354907C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCD8D0], (SEL *)&selRef_setEventURL_);
}

char *keypath_get_selector_requestBody()
{
  return sel_requestBody;
}

char *keypath_get_selector_requestHeaders()
{
  return sel_requestHeaders;
}

void sub_2335490B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_requestHeaders, a2);
}

void sub_2335490CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setRequestHeaders_);
}

char *keypath_get_selector_requestMethod()
{
  return sel_requestMethod;
}

void sub_2335490F4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_requestMethod, a2);
}

void sub_233549110(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setRequestMethod_);
}

uint64_t type metadata accessor for ManagedNetworkRequestEvent()
{
  return objc_opt_self();
}

uint64_t sub_23354914C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v17 = sub_23361D6A0();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    if (!v7)
      return v8;
    v18 = MEMORY[0x24BEE4AF8];
    result = sub_233273918(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v16 = v2;
    v10 = 0;
    v8 = v18;
    v2 = a1 & 0xC000000000000001;
    while (v7 != v10)
    {
      if (v2)
        v11 = (id)MEMORY[0x234933120](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, "id", v16);
      sub_23361D67C();

      v18 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_233273918(v14 > 1, v15 + 1, 1);
        v8 = v18;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, v6, v17);
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v7 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t BankConnectConsentConfirmationDetector.detectExpiredAccounts(in:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  unint64_t v17;

  v3 = type metadata accessor for InternalAccount();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23354999C(a1, v7, (uint64_t)&unk_25046BB30, (uint64_t (*)(void))sub_23354A5FC);
  if (v1)
    return a1;
  v16[-2] = MEMORY[0x24BDAC7A8](v8);
  v16[-1] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D90);
  sub_23361E960();
  swift_bridgeObjectRelease();
  v10 = v17;
  if (!(v17 >> 62))
  {
    v11 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_6;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v11 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_6:
  v16[1] = 0;
  v17 = MEMORY[0x24BEE4AF8];
  result = sub_2332738EC(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    a1 = v17;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x234933120](v12, v10);
      else
        v13 = *(id *)(v10 + 8 * v12 + 32);
      InternalAccount.init(_:)(v13, (uint64_t)v6);
      v17 = a1;
      v15 = *(_QWORD *)(a1 + 16);
      v14 = *(_QWORD *)(a1 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_2332738EC(v14 > 1, v15 + 1, 1);
        a1 = v17;
      }
      ++v12;
      *(_QWORD *)(a1 + 16) = v15 + 1;
      sub_233398524((uint64_t)v6, a1+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15);
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t ManagedConsent.isExpired.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t refreshed;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  id v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v51 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v51 - v7;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  v55 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v51 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v51 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v51 - v19;
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  MEMORY[0x24BDAC7A8](refreshed);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Institution.init(_:)(objc_msgSend(v1, sel_institutionObject), (uint64_t)v26);
  sub_233389F2C((uint64_t)&v26[*(int *)(v24 + 48)], (uint64_t)v23);
  sub_233168500((uint64_t)v26, type metadata accessor for Institution);
  LOBYTE(v24) = v23[*(int *)(refreshed + 36) + 8];
  sub_233168500((uint64_t)v23, type metadata accessor for Institution.BackgroundRefreshConfiguration);
  if ((v24 & 1) != 0)
  {
    v27 = 0;
  }
  else
  {
    v29 = (uint64_t)v56;
    v28 = v57;
    v52 = v20;
    v30 = v54;
    v31 = v55;
    v32 = objc_msgSend(v1, sel_backgroundRefreshLastConfirmedAt);
    v53 = v1;
    if (v32)
    {
      v33 = v32;
      v34 = (uint64_t)v28;
      sub_23361D5EC();

      v35 = v31;
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v37 = v28;
      v38 = 0;
    }
    else
    {
      v35 = v31;
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v34 = (uint64_t)v28;
      v37 = v28;
      v38 = 1;
    }
    v39 = v30;
    v36(v37, v38, 1, v30);
    v40 = v18;
    v41 = v15;
    v42 = v12;
    v43 = (uint64_t)v58;
    sub_2331B05C8(v34, v29);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    if (v44(v29, 1, v39))
    {
      sub_2331D0F20(v29);
      v36((char *)v43, 1, 1, v39);
      v45 = v39;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v40, v29, v39);
      sub_2331D0F20(v29);
      sub_23361D544();
      v43 = (uint64_t)v58;
      v45 = v39;
      v46 = *(void (**)(char *, uint64_t))(v35 + 8);
      v46(v40, v45);
      v36((char *)v43, 0, 1, v45);
      if (v44(v43, 1, v45) != 1)
      {
        v49 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v52, v43, v45);
        sub_23361D5F8();
        v27 = sub_23361D5BC();
        v46(v40, v45);
        v46(v49, v45);
        return v27 & 1;
      }
    }
    sub_2331D0F20(v43);
    sub_23361D5F8();
    v47 = objc_msgSend(v53, sel_authorizedAt);
    sub_23361D5EC();

    sub_23361D544();
    v48 = *(void (**)(char *, uint64_t))(v35 + 8);
    v48(v42, v45);
    v27 = sub_23361D5BC();
    v48(v41, v45);
    v48(v40, v45);
  }
  return v27 & 1;
}

uint64_t sub_23354999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  objc_super v14;
  uint64_t v15;

  type metadata accessor for ManagedConsent();
  v14.receiver = (id)swift_getObjCClassFromMetadata();
  v14.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v5 = objc_msgSendSuper2(&v14, sel_fetchRequest);
  objc_msgSend(v5, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v5, sel_setReturnsDistinctResults_, 1);
  v6 = (void *)sub_23361E3D8();
  objc_msgSend(v5, sel_setRelationshipKeyPathsForPrefetching_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23362D290;
  sub_2331E28A0();
  v8 = 0xD000000000000038;
  *(_QWORD *)(v7 + 32) = sub_23361E6B4();
  *(_QWORD *)(v7 + 40) = sub_23361E6B4();
  *(_QWORD *)(v7 + 48) = sub_23361E6B4();
  v15 = v7;
  sub_23361E408();
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v9);

  objc_msgSend(v5, sel_setPredicate_, v10);
  sub_23361E984();
  if (!v4)
  {
    v11 = a4();
    swift_bridgeObjectRelease();
    v8 = sub_23354914C(v11);
    swift_bridgeObjectRelease();
  }

  return v8;
}

uint64_t BankConnectConsentConfirmationDetector.detectAccountsForReconfirmation(in:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = type metadata accessor for InternalAccount();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23354999C(a1, v8, (uint64_t)&unk_25046BB60, (uint64_t (*)(void))sub_23354A868);
  if (v1)
    return v2;
  v11 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease();
  v2 = MEMORY[0x24BEE4AF8];
  if (!v11)
    return v2;
  v13 = sub_23354999C(a1, v12, (uint64_t)&unk_25046BB90, (uint64_t (*)(void))sub_23354A73C);
  *(&v21 - 2) = MEMORY[0x24BDAC7A8](v13);
  *(&v21 - 1) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256054D90);
  sub_23361E960();
  swift_bridgeObjectRelease();
  v14 = v23;
  if (!(v23 >> 62))
  {
    v15 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRetain();
  v15 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_16;
LABEL_6:
  v21 = v14;
  v23 = v2;
  result = sub_2332738EC(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = 0;
    v2 = v23;
    v17 = v21;
    v22 = v21 & 0xC000000000000001;
    do
    {
      if (v22)
        v18 = (id)MEMORY[0x234933120](v16, v17);
      else
        v18 = *(id *)(v17 + 8 * v16 + 32);
      InternalAccount.init(_:)(v18, (uint64_t)v7);
      v23 = v2;
      v20 = *(_QWORD *)(v2 + 16);
      v19 = *(_QWORD *)(v2 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2332738EC(v19 > 1, v20 + 1, 1);
        v17 = v21;
        v2 = v23;
      }
      ++v16;
      *(_QWORD *)(v2 + 16) = v20 + 1;
      sub_233398524((uint64_t)v7, v2+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v20);
    }
    while (v15 != v16);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t ManagedConsent.isPromptable.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t refreshed;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  id v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v51 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v51 - v7;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  v55 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v51 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v51 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v51 - v19;
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  MEMORY[0x24BDAC7A8](refreshed);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Institution.init(_:)(objc_msgSend(v1, sel_institutionObject), (uint64_t)v26);
  sub_233389F2C((uint64_t)&v26[*(int *)(v24 + 48)], (uint64_t)v23);
  sub_233168500((uint64_t)v26, type metadata accessor for Institution);
  LOBYTE(v24) = v23[*(int *)(refreshed + 32) + 8];
  sub_233168500((uint64_t)v23, type metadata accessor for Institution.BackgroundRefreshConfiguration);
  if ((v24 & 1) != 0)
  {
    v27 = 0;
  }
  else
  {
    v29 = (uint64_t)v56;
    v28 = v57;
    v52 = v20;
    v30 = v54;
    v31 = v55;
    v32 = objc_msgSend(v1, sel_backgroundRefreshLastConfirmedAt);
    v53 = v1;
    if (v32)
    {
      v33 = v32;
      v34 = (uint64_t)v28;
      sub_23361D5EC();

      v35 = v31;
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v37 = v28;
      v38 = 0;
    }
    else
    {
      v35 = v31;
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v34 = (uint64_t)v28;
      v37 = v28;
      v38 = 1;
    }
    v39 = v30;
    v36(v37, v38, 1, v30);
    v40 = v18;
    v41 = v15;
    v42 = v12;
    v43 = (uint64_t)v58;
    sub_2331B05C8(v34, v29);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    if (v44(v29, 1, v39))
    {
      sub_2331D0F20(v29);
      v36((char *)v43, 1, 1, v39);
      v45 = v39;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v40, v29, v39);
      sub_2331D0F20(v29);
      sub_23361D544();
      v43 = (uint64_t)v58;
      v45 = v39;
      v46 = *(void (**)(char *, uint64_t))(v35 + 8);
      v46(v40, v45);
      v36((char *)v43, 0, 1, v45);
      if (v44(v43, 1, v45) != 1)
      {
        v49 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v52, v43, v45);
        sub_23361D5F8();
        v27 = sub_23361D5BC();
        v46(v40, v45);
        v46(v49, v45);
        return v27 & 1;
      }
    }
    sub_2331D0F20(v43);
    sub_23361D5F8();
    v47 = objc_msgSend(v53, sel_authorizedAt);
    sub_23361D5EC();

    sub_23361D544();
    v48 = *(void (**)(char *, uint64_t))(v35 + 8);
    v48(v42, v45);
    v27 = sub_23361D5BC();
    v48(v41, v45);
    v48(v40, v45);
  }
  return v27 & 1;
}

void sub_23354A2A4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t inited;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;

  type metadata accessor for ManagedInternalAccount();
  v17.receiver = (id)swift_getObjCClassFromMetadata();
  v17.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v3 = objc_msgSendSuper2(&v17, sel_fetchRequest);
  v4 = (void *)sub_23361E3D8();
  objc_msgSend(v3, sel_setRelationshipKeyPathsForPrefetching_, v4);

  objc_msgSend(v3, sel_setReturnsObjectsAsFaults_, 0);
  objc_msgSend(v3, sel_setReturnsDistinctResults_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233625CF0;
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = sub_23338EFD4();
  *(_QWORD *)(v6 + 32) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23361E6B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = 0x53544E45534E4F43;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 48) = a1;
  swift_bridgeObjectRetain();
  sub_23315F6D0(inited);
  v10 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_predicateWithSubstitutionVariables_, v10);

  *(_QWORD *)(v5 + 32) = v11;
  v18 = v5;
  sub_23361E408();
  v12 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v12);

  objc_msgSend(v3, sel_setPredicate_, v13);
  v14 = sub_23361E984();

  if (!v16)
    *a2 = v14;
}

void sub_23354A57C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_23354A2A4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23354A594(uint64_t a1)
{
  return BankConnectConsentConfirmationDetector.detectAccountsForReconfirmation(in:)(a1);
}

uint64_t sub_23354A5A8(uint64_t a1)
{
  return BankConnectConsentConfirmationDetector.detectExpiredAccounts(in:)(a1);
}

uint64_t dispatch thunk of BankConnectConsentConfirmationDetecting.detectAccountsForReconfirmation(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of BankConnectConsentConfirmationDetecting.detectExpiredAccounts(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for BankConnectConsentConfirmationDetector()
{
  return &type metadata for BankConnectConsentConfirmationDetector;
}

uint64_t sub_23354A5FC(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x234933120](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        if ((ManagedConsent.isExpired.getter() & 1) != 0)
        {
          sub_23361EE4C();
          sub_23361EE7C();
          sub_23361EE88();
          sub_23361EE58();
        }
        else
        {

        }
        ++v3;
        if (v6 == v2)
          return v8;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_23361EF30();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23354A73C(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x234933120](v3, a1);
LABEL_7:
        v5 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_12;
        sub_23361EE4C();
        sub_23361EE7C();
        sub_23361EE88();
        sub_23361EE58();
        ++v3;
        if (v5 == v2)
          return v7;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      v2 = sub_23361EF30();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23354A868(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x234933120](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_16;
        if ((ManagedConsent.isExpired.getter() & 1) != 0 || (ManagedConsent.isPromptable.getter() & 1) != 0)
        {
          sub_23361EE4C();
          sub_23361EE7C();
          sub_23361EE88();
          sub_23361EE58();
        }
        else
        {

        }
        ++v3;
        if (v6 == v2)
          return v8;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      v2 = sub_23361EF30();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

void sub_23354A9B4(uint64_t *a1@<X8>)
{
  sub_23354A57C(a1);
}

BOOL static StoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StoreError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t StoreError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

unint64_t sub_23354AA4C()
{
  unint64_t result;

  result = qword_256054D98;
  if (!qword_256054D98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for StoreError, &type metadata for StoreError);
    atomic_store(result, (unint64_t *)&qword_256054D98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23354AADC + 4 * byte_23365A97D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23354AB10 + 4 * asc_23365A978[v4]))();
}

uint64_t sub_23354AB10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23354AB18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23354AB20);
  return result;
}

uint64_t sub_23354AB2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23354AB34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23354AB38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23354AB40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreError()
{
  return &type metadata for StoreError;
}

void sub_23354AB5C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_transactionDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

uint64_t Transaction.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  int v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  BOOL v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  _BYTE v103[20];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_23361D6A0();
  v95 = *(_QWORD *)(v97 - 8);
  v11 = MEMORY[0x24BDAC7A8](v97);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v76 - v14;
  v16 = objc_msgSend(a1, "id");
  v94 = v15;
  sub_23361D67C();

  v17 = objc_msgSend(a1, sel_accountId);
  v96 = v13;
  sub_23361D67C();

  v18 = objc_msgSend(a1, sel_amount);
  objc_msgSend(v18, sel_decimalValue);
  v93 = *(_DWORD *)v103;
  v19 = *(_QWORD *)&v103[4];
  v20 = *(_QWORD *)&v103[12];

  v21 = objc_msgSend(a1, sel_currency);
  v22 = sub_23361E150();
  v91 = v23;
  v92 = v22;

  v24 = objc_msgSend(a1, sel_foreignAmount);
  v99 = v7;
  if (!v24)
    goto LABEL_4;
  v25 = v24;
  objc_msgSend(v24, sel_decimalValue);
  v26 = *(unsigned int *)v103;
  v27 = *(unsigned __int16 *)&v103[4];
  v28 = *(unsigned __int16 *)&v103[6];
  v100 = *(unsigned int *)&v103[16];
  v101 = *(_QWORD *)&v103[8];

  v29 = objc_msgSend(a1, sel_foreignCurrency);
  if (v29)
  {
    v30 = v29;
    v84 = sub_23361E150();
    v83 = v31;

    v82 = v26 | (v27 << 32) | (v28 << 48);
  }
  else
  {
LABEL_4:
    v82 = 0;
    v100 = 0;
    v101 = 0;
    v84 = 0;
    v83 = 0;
  }
  v32 = objc_msgSend(a1, sel_foreignCurrencyExchangeRate);
  v33 = v32;
  if (v32)
  {
    objc_msgSend(v32, sel_decimalValue);
    v81 = *(_DWORD *)&v103[16];
    v80 = *(_QWORD *)&v103[8];
    v79 = *(_QWORD *)v103;

  }
  else
  {
    v79 = 0;
    v80 = 0;
    v81 = 0;
  }
  ManagedTransaction.creditDebitIndicator.getter(v103);
  v34 = v103[0];
  v35 = a1;
  v36 = sub_23354B3AC();
  v88 = v37;

  v38 = objc_msgSend(v35, sel_originalTransactionDescription);
  v39 = sub_23361E150();
  v86 = v40;
  v87 = v39;

  v41 = objc_msgSend(v35, sel_merchantCategoryCodeValue);
  v90 = v34;
  if (v41 < 0)
    v78 = 0;
  else
    v78 = objc_msgSend(v35, sel_merchantCategoryCodeValue);
  v42 = objc_msgSend(v35, sel_merchantName);
  if (v42)
  {
    v43 = v42;
    v44 = v8;
    v77 = sub_23361E150();
    v76 = v45;

  }
  else
  {
    v44 = v8;
    v77 = 0;
    v76 = 0;
  }
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v35, sel_transactionTypeValue, v76, v77));
  v46 = v102;
  ManagedTransaction.status.getter(&v102);
  v85 = v102;
  v47 = objc_msgSend(v35, sel_transactionDate);
  sub_23361D5EC();

  v48 = objc_msgSend(v35, sel_postedDate);
  v98 = v10;
  v89 = v36;
  if (v48)
  {
    v49 = v48;
    sub_23361D5EC();

    v50 = 0;
  }
  else
  {
    v50 = 1;
  }
  v51 = (uint64_t)v6;
  v52 = v41 < 0;
  v53 = v33 == 0;

  v54 = v44;
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
  v56 = v99;
  v55(v51, v50, 1, v99);
  if (v46 == 17)
    v57 = 0;
  else
    v57 = v46;
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 32);
  v59 = v97;
  v58(a2, v94, v97);
  v60 = (int *)type metadata accessor for Transaction();
  v58(a2 + v60[5], v96, v59);
  v61 = a2 + v60[6];
  *(_DWORD *)v61 = v93;
  *(_QWORD *)(v61 + 4) = v19;
  *(_QWORD *)(v61 + 12) = v20;
  v62 = v91;
  *(_QWORD *)(v61 + 24) = v92;
  *(_QWORD *)(v61 + 32) = v62;
  v63 = (uint64_t *)(a2 + v60[7]);
  v64 = v101;
  *v63 = v82;
  v63[1] = v64;
  v65 = v84;
  v63[2] = v100;
  v63[3] = v65;
  v63[4] = v83;
  v66 = a2 + v60[8];
  v67 = v80;
  *(_QWORD *)v66 = v79;
  *(_QWORD *)(v66 + 8) = v67;
  *(_DWORD *)(v66 + 16) = v81;
  *(_BYTE *)(v66 + 20) = v53;
  *(_BYTE *)(a2 + v60[9]) = v90;
  v68 = (uint64_t *)(a2 + v60[10]);
  v69 = v88;
  *v68 = v89;
  v68[1] = v69;
  v70 = (uint64_t *)(a2 + v60[11]);
  v71 = v86;
  *v70 = v87;
  v70[1] = v71;
  v72 = a2 + v60[12];
  *(_WORD *)v72 = v78;
  *(_BYTE *)(v72 + 2) = v52;
  v73 = (uint64_t *)(a2 + v60[13]);
  v74 = v76;
  *v73 = v77;
  v73[1] = v74;
  *(_BYTE *)(a2 + v60[14]) = v57;
  *(_BYTE *)(a2 + v60[15]) = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(a2 + v60[16], v98, v56);
  return sub_233168478(v51, a2 + v60[17], (uint64_t *)&unk_254247DA0);
}

void ManagedTransaction.transactionAmount.setter(int *a1)
{
  void *v1;
  int v3;
  id v4;
  id v5;
  void *v6;
  int v7;
  __int128 v8;

  v3 = *a1;
  v4 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  v7 = v3;
  v8 = *(_OWORD *)(a1 + 1);
  v5 = objc_msgSend(v4, sel_initWithDecimal_, &v7);
  objc_msgSend(v1, sel_setAmount_, v5);

  v6 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCurrency_, v6);

}

void ManagedTransaction.foreignCurrencyAmount.setter(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  int v8;
  __int16 v9;
  __int16 v10;
  uint64_t v11;
  int v12;

  if (a1[4])
  {
    v2 = a1[2];
    v3 = a1[1];
    v4 = HIDWORD(*a1);
    v5 = HIWORD(*a1);
    v8 = *a1;
    v9 = v4;
    v10 = v5;
    v11 = v3;
    v12 = v2;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDecimal_, &v8);
    objc_msgSend(v1, sel_setForeignAmount_, v6);

    v7 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(v1, sel_setForeignAmount_, 0);
    v7 = 0;
  }
  objc_msgSend(v1, sel_setForeignCurrency_, v7);

}

id ManagedTransaction.creditDebitIndicator.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setCreditDebitIndicatorValue_, *a1);
}

id ManagedTransaction.transactionType.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setTransactionTypeValue_, *a1);
}

id ManagedTransaction.status.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setStatusValue_, *a1);
}

id ManagedTransaction.merchantCategoryCode.setter(int a1)
{
  void *v1;
  __int16 v2;

  if ((a1 & 0x10000) != 0)
    v2 = -1;
  else
    v2 = a1;
  return objc_msgSend(v1, sel_setMerchantCategoryCodeValue_, v2);
}

uint64_t sub_23354B3AC()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v1 = objc_msgSend(v0, sel_merchantName);
  if (v1)
  {
    v2 = v1;
    v3 = sub_23361E150();
    v5 = v4;

    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v3 & 0xFFFFFFFFFFFFLL;
    if (v6)
      return v3;
    swift_bridgeObjectRelease();
  }
  v7 = objc_msgSend(v0, sel_transactionDescription);
  v8 = sub_23361E150();
  v10 = v9;

  swift_bridgeObjectRelease();
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    v12 = objc_msgSend(v0, sel_transactionDescription);
    v13 = sub_23361E150();

    return v13;
  }
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v0, sel_transactionTypeValue));
  TransactionType.localizedDescription.getter();
  return v15;
}

uint64_t sub_23354B4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for InternalTransaction(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 52));
  v3 = v2[1];
  if (v3)
  {
    v4 = *v2;
    v5 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v5 = v4 & 0xFFFFFFFFFFFFLL;
    if (v5)
      goto LABEL_8;
  }
  v6 = (uint64_t *)(v0 + *(int *)(v1 + 56));
  v4 = *v6;
  v7 = v6[1];
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v4 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
LABEL_8:
    swift_bridgeObjectRetain();
  }
  else
  {
    TransactionType.localizedDescription.getter();
    return v9;
  }
  return v4;
}

uint64_t sub_23354B58C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_merchantName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23361E150();

  return v3;
}

uint64_t sub_23354B5F0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_transactionDescription);
  v2 = sub_23361E150();

  return v2;
}

FinanceKit::TransactionType_optional sub_23354B644@<W0>(_BYTE *a1@<X8>)
{
  id *v1;
  FinanceKit::TransactionType_optional result;
  char v4;
  char v5;

  result.value = TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(*v1, sel_transactionTypeValue)).value;
  v4 = v5;
  if (v5 == 17)
    v4 = 0;
  *a1 = v4;
  return result;
}

FinanceKit::TransactionType_optional ManagedTransaction.transactionType.getter@<W0>(_BYTE *a1@<X8>)
{
  void *v1;
  FinanceKit::TransactionType_optional result;
  char v4;
  char v5;

  result.value = TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v1, sel_transactionTypeValue)).value;
  v4 = v5;
  if (v5 == 17)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23354B6DC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_postedDate);
  if (v3)
  {
    v4 = v3;
    sub_23361D5EC();

    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_23354B760(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23319F164(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setPostedDate_, v10);

}

id ManagedTransaction.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransaction.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransaction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedTransaction.__allocating_init(_:for:context:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  int *v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  unint64_t v54;
  id v55;
  unint64_t v56;
  char *v57;
  void *v58;
  void *v59;
  __int128 v60;
  uint64_t v61;
  int v62;
  __int128 v63;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_allocWithZone(v3);
  v59 = a3;
  v14 = objc_msgSend(v13, sel_initWithContext_, a3);
  v15 = (void *)sub_23361D658();
  objc_msgSend(v14, sel_setId_, v15);

  v58 = a2;
  v16 = objc_msgSend(a2, sel_publicAccountObject);
  v17 = objc_msgSend(v16, "id");

  sub_23361D67C();
  v18 = (void *)sub_23361D658();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v14, sel_setAccountId_, v18);

  v19 = (int *)type metadata accessor for InternalTransaction(0);
  v20 = a1 + v19[8];
  LODWORD(a3) = *(_DWORD *)v20;
  v60 = *(_OWORD *)(v20 + 4);
  v21 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  swift_bridgeObjectRetain();
  v62 = (int)a3;
  v63 = v60;
  v22 = objc_msgSend(v21, sel_initWithDecimal_, &v62);
  objc_msgSend(v14, sel_setAmount_, v22);

  v23 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setCurrency_, v23);

  v24 = (uint64_t *)(a1 + v19[9]);
  v25 = v24[4];
  v61 = a1;
  if (v25)
  {
    v26 = v24[2];
    *(_QWORD *)&v60 = v24[3];
    v27 = *v24;
    v28 = v24[1];
    v29 = HIDWORD(*v24);
    v30 = HIWORD(*v24);
    v54 = HIWORD(v28);
    v56 = v26 >> 16;
    v55 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    swift_bridgeObjectRetain();
    v62 = v27;
    LOWORD(v63) = v29;
    WORD1(v63) = v30;
    DWORD1(v63) = v28;
    WORD4(v63) = WORD2(v28);
    a1 = v61;
    WORD5(v63) = v54;
    WORD6(v63) = v26;
    HIWORD(v63) = v56;
    v31 = objc_msgSend(v55, sel_initWithDecimal_, &v62);
    objc_msgSend(v14, sel_setForeignAmount_, v31);

    v32 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(v14, sel_setForeignAmount_, 0);
    v32 = 0;
  }
  objc_msgSend(v14, sel_setForeignCurrency_, v32);

  v33 = a1 + v19[10];
  if ((*(_BYTE *)(v33 + 20) & 1) != 0)
  {
    v34 = 0;
  }
  else
  {
    v35 = *(_DWORD *)(v33 + 16);
    v37 = *(_QWORD *)v33;
    v36 = *(_QWORD *)(v33 + 8);
    v38 = HIDWORD(*(_QWORD *)v33);
    v39 = HIWORD(*(_QWORD *)v33);
    LODWORD(v60) = HIWORD(v35);
    v40 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v62 = v37;
    LOWORD(v63) = v38;
    WORD1(v63) = v39;
    *(_QWORD *)((char *)&v63 + 4) = v36;
    WORD6(v63) = v35;
    a1 = v61;
    HIWORD(v63) = v60;
    v34 = objc_msgSend(v40, sel_initWithDecimal_, &v62);
  }
  v42 = v58;
  v41 = v59;
  v43 = (uint64_t)v57;
  objc_msgSend(v14, sel_setForeignCurrencyExchangeRate_, v34);

  objc_msgSend(v14, sel_setCreditDebitIndicatorValue_, *(unsigned __int8 *)(a1 + v19[11]));
  v44 = a1 + v19[12];
  if ((*(_BYTE *)(v44 + 2) & 1) != 0)
    v45 = -1;
  else
    v45 = *(_WORD *)v44;
  objc_msgSend(v14, sel_setMerchantCategoryCodeValue_, v45);
  if (*(_QWORD *)(a1 + v19[13] + 8))
  {
    swift_bridgeObjectRetain();
    v46 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v14, sel_setMerchantName_, v46);

  objc_msgSend(v14, sel_setTransactionTypeValue_, *(unsigned __int8 *)(a1 + v19[16]));
  objc_msgSend(v14, sel_setStatusValue_, *(unsigned __int8 *)(a1 + v19[17]));
  v47 = (void *)sub_23361E12C();
  objc_msgSend(v14, sel_setTransactionDescription_, v47);

  v48 = (void *)sub_23361E12C();
  objc_msgSend(v14, sel_setOriginalTransactionDescription_, v48);

  v49 = (void *)sub_23361D5B0();
  objc_msgSend(v14, sel_setTransactionDate_, v49);

  sub_23319F164(a1 + v19[20], v43);
  v50 = sub_23361D634();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v43, 1, v50) != 1)
  {
    v52 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v43, v50);
  }
  objc_msgSend(v14, sel_setPostedDate_, v52);

  sub_233168500(a1, type metadata accessor for InternalTransaction);
  return v14;
}

{
  id v5;

  v5 = sub_23354D59C(a1, a2, (uint64_t)a3);

  return v5;
}

__n128 ManagedTransaction.transactionAmount.getter@<Q0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  int v11;
  __n128 v12;

  v3 = objc_msgSend(v1, sel_amount);
  objc_msgSend(v3, sel_decimalValue);
  v4 = v11;
  v10 = v12;

  v5 = objc_msgSend(v1, sel_currency);
  v6 = sub_23361E150();
  v8 = v7;

  *(_DWORD *)a1 = v4;
  result = v10;
  *(__n128 *)(a1 + 4) = v10;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v8;
  return result;
}

double ManagedTransaction.foreignCurrencyAmount.getter@<D0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  unsigned int v16;
  unsigned __int16 v17;
  unsigned __int16 v18;
  uint64_t v19;
  unsigned int v20;

  v3 = objc_msgSend(v1, sel_foreignAmount);
  if (!v3)
    goto LABEL_4;
  v4 = v3;
  objc_msgSend(v3, sel_decimalValue);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  v8 = v19;
  v9 = v20;

  v10 = objc_msgSend(v1, sel_foreignCurrency);
  if (v10)
  {
    v11 = v10;
    v12 = sub_23361E150();
    v14 = v13;

    *a1 = v5 | (v6 << 32) | (v7 << 48);
    a1[1] = v8;
    a1[2] = v9;
    a1[3] = v12;
    a1[4] = v14;
  }
  else
  {
LABEL_4:
    a1[4] = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

id ManagedTransaction.creditDebitIndicator.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;
  char v5;

  v2 = v1;
  result = objc_msgSend(v2, sel_creditDebitIndicatorValue);
  if (!(_DWORD)result)
  {
    v5 = 0;
LABEL_4:
    *a1 = v5;
    return result;
  }
  v5 = (char)result;
  if ((unsigned __int16)result == 1)
    goto LABEL_4;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_creditDebitIndicatorValue);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = (id)sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t ManagedTransaction.merchantCategoryCode.getter()
{
  void *v0;
  int v1;
  int v2;

  v1 = objc_msgSend(v0, sel_merchantCategoryCodeValue);
  if (v1 < 0)
    v2 = 0;
  else
    v2 = (unsigned __int16)objc_msgSend(v0, sel_merchantCategoryCodeValue);
  return v2 | ((v1 < 0) << 16);
}

id ManagedTransaction.status.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;

  v2 = v1;
  result = objc_msgSend(v2, sel_statusValue);
  if (result > 4)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_statusValue);
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = (id)sub_23361EF24();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

__n128 sub_23354C364@<Q0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __n128 v11;
  int v12;
  __n128 v13;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_amount);
  objc_msgSend(v4, sel_decimalValue);
  v5 = v12;
  v11 = v13;

  v6 = objc_msgSend(v3, sel_currency);
  v7 = sub_23361E150();
  v9 = v8;

  *(_DWORD *)a2 = v5;
  result = v11;
  *(__n128 *)(a2 + 4) = v11;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v9;
  return result;
}

void sub_23354C414(int *a1, void **a2)
{
  int v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  int v8;
  __int128 v9;

  v3 = *a1;
  v4 = *a2;
  v5 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  swift_bridgeObjectRetain();
  v8 = v3;
  v9 = *(_OWORD *)(a1 + 1);
  v6 = objc_msgSend(v5, sel_initWithDecimal_, &v8);
  objc_msgSend(v4, sel_setAmount_, v6);

  v7 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setCurrency_, v7);

}

void (*ManagedTransaction.transactionAmount.modify(_QWORD *a1))(int **a1, char a2)
{
  void *v1;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  __int128 v11;

  v3 = (char *)malloc(0x48uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 5) = v1;
  v4 = objc_msgSend(v1, sel_amount);
  objc_msgSend(v4, sel_decimalValue);

  v5 = objc_msgSend(v1, sel_currency);
  v6 = sub_23361E150();
  v8 = v7;

  *(_DWORD *)v3 = v10;
  *(_OWORD *)(v3 + 4) = v11;
  *((_QWORD *)v3 + 3) = v6;
  *((_QWORD *)v3 + 4) = v8;
  return sub_23354C5A4;
}

void sub_23354C5A4(int **a1, char a2)
{
  int *v3;
  int v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  id v20;

  v3 = *a1;
  v4 = **a1;
  v5 = *((_WORD *)*a1 + 2);
  v6 = *((_WORD *)*a1 + 3);
  v7 = *((_WORD *)*a1 + 4);
  v8 = *((_WORD *)*a1 + 5);
  v9 = *((_WORD *)*a1 + 6);
  v10 = *((_WORD *)*a1 + 7);
  v17 = *((_WORD *)*a1 + 8);
  v18 = *((_WORD *)*a1 + 9);
  v19 = (uint64_t)(*a1 + 12);
  v11 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  v12 = v11;
  v20 = (id)*((_QWORD *)v3 + 5);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v3[12] = v4;
    *((_WORD *)v3 + 26) = v5;
    *((_WORD *)v3 + 27) = v6;
    *((_WORD *)v3 + 28) = v7;
    *((_WORD *)v3 + 29) = v8;
    *((_WORD *)v3 + 30) = v9;
    *((_WORD *)v3 + 31) = v10;
    *((_WORD *)v3 + 32) = v17;
    *((_WORD *)v3 + 33) = v18;
    v13 = objc_msgSend(v12, sel_initWithDecimal_, v19);
    objc_msgSend(v20, sel_setAmount_, v13);

    v14 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setCurrency_, v14);

    swift_bridgeObjectRelease();
  }
  else
  {
    v3[12] = v4;
    *((_WORD *)v3 + 26) = v5;
    *((_WORD *)v3 + 27) = v6;
    *((_WORD *)v3 + 28) = v7;
    *((_WORD *)v3 + 29) = v8;
    *((_WORD *)v3 + 30) = v9;
    *((_WORD *)v3 + 31) = v10;
    *((_WORD *)v3 + 32) = v17;
    *((_WORD *)v3 + 33) = v18;
    v15 = objc_msgSend(v11, sel_initWithDecimal_, v19);
    objc_msgSend(v20, sel_setAmount_, v15);

    v16 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setCurrency_, v16);

  }
  free(v3);
}

void sub_23354C780(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unsigned int v16;
  unsigned __int16 v17;
  unsigned __int16 v18;
  uint64_t v19;
  unsigned int v20;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_foreignAmount);
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, sel_decimalValue);
    v6 = v16;
    v7 = v17;
    v8 = v18;
    v9 = v19;
    v10 = v20;

    v11 = objc_msgSend(v3, sel_foreignCurrency);
    if (v11)
    {
      v12 = v11;
      v13 = sub_23361E150();
      v5 = v14;

      v15 = v6 | (v7 << 32) | (v8 << 48);
    }
    else
    {
      v15 = 0;
      v9 = 0;
      v10 = 0;
      v13 = 0;
      v5 = 0;
    }
  }
  else
  {
    v15 = 0;
    v9 = 0;
    v10 = 0;
    v13 = 0;
  }
  *a2 = v15;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v13;
  a2[4] = (uint64_t)v5;
}

void sub_23354C884(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v3[2];
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_OWORD *)(a1 + 16);
  v3[0] = *(_OWORD *)a1;
  v3[1] = v2;
  v4 = v1;
  swift_bridgeObjectRetain();
  ManagedTransaction.foreignCurrencyAmount.setter(v3);
}

void (*ManagedTransaction.foreignCurrencyAmount.modify(_QWORD *a1))(unint64_t **a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v12;
  unsigned __int16 v13;
  unsigned __int16 v14;
  uint64_t v15;
  unsigned int v16;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_foreignAmount);
  if (v4
    && (v5 = v4,
        objc_msgSend(v4, sel_decimalValue),
        v5,
        (v6 = objc_msgSend(v1, sel_foreignCurrency)) != 0))
  {
    v7 = v6;
    v8 = sub_23361E150();
    v10 = v9;

    *v3 = v12 | ((unint64_t)v13 << 32) | ((unint64_t)v14 << 48);
    v3[1] = v15;
    v3[2] = v16;
    v3[3] = v8;
    v3[4] = v10;
  }
  else
  {
    v3[4] = 0;
    *(_OWORD *)v3 = 0u;
    *((_OWORD *)v3 + 1) = 0u;
  }
  return sub_23354C9C8;
}

void sub_23354C9C8(unint64_t **a1, char a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  void *v21;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 6);
  v4 = (*a1)[4];
  v5 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    if (v4)
    {
      v6 = v2[2];
      v8 = *v2;
      v7 = v2[1];
      v9 = HIDWORD(*v2);
      v10 = HIWORD(*v2);
      v11 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      swift_bridgeObjectRetain();
      *((_DWORD *)v2 + 12) = v8;
      *((_WORD *)v2 + 26) = v9;
      *((_WORD *)v2 + 27) = v10;
      v2[7] = v7;
      *((_DWORD *)v2 + 16) = v6;
      v12 = objc_msgSend(v11, sel_initWithDecimal_, v3);
      objc_msgSend(v5, sel_setForeignAmount_, v12);

      v13 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      objc_msgSend((id)(*a1)[5], sel_setForeignAmount_, 0);
      v13 = 0;
    }
    objc_msgSend((id)v2[5], sel_setForeignCurrency_, v13);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v4)
    {
      v14 = v2[2];
      v16 = *v2;
      v15 = v2[1];
      v17 = HIDWORD(*v2);
      v18 = HIWORD(*v2);
      v19 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      *((_DWORD *)v2 + 12) = v16;
      *((_WORD *)v2 + 26) = v17;
      *((_WORD *)v2 + 27) = v18;
      v2[7] = v15;
      *((_DWORD *)v2 + 16) = v14;
      v20 = objc_msgSend(v19, sel_initWithDecimal_, v3);
      objc_msgSend(v5, sel_setForeignAmount_, v20);

      v21 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    else
    {
      objc_msgSend((id)(*a1)[5], sel_setForeignAmount_, 0);
      v21 = 0;
    }
    objc_msgSend((id)v2[5], sel_setForeignCurrency_, v21);

  }
  free(v2);
}

id (*ManagedTransaction.creditDebitIndicator.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedTransaction.creditDebitIndicator.getter((_BYTE *)(a1 + 8));
  return sub_23354CC34;
}

id sub_23354CC34(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setCreditDebitIndicatorValue_, *(unsigned __int8 *)(a1 + 8));
}

id (*ManagedTransaction.merchantCategoryCode.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v2;
  int v4;
  unsigned __int16 v5;

  v2 = v1;
  *(_QWORD *)a1 = v2;
  v4 = objc_msgSend(v2, sel_merchantCategoryCodeValue);
  if (v4 < 0)
    v5 = 0;
  else
    v5 = (unsigned __int16)objc_msgSend(v2, sel_merchantCategoryCodeValue);
  *(_WORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 10) = v4 < 0;
  return sub_23354CCCC;
}

id sub_23354CCCC(uint64_t a1)
{
  __int16 v1;

  v1 = *(_WORD *)(a1 + 8);
  if (*(_BYTE *)(a1 + 10))
    v1 = -1;
  return objc_msgSend(*(id *)a1, sel_setMerchantCategoryCodeValue_, v1);
}

id (*ManagedTransaction.status.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedTransaction.status.getter((_BYTE *)(a1 + 8));
  return sub_23354CD28;
}

id sub_23354CD28(uint64_t a1, uint64_t a2)
{
  return sub_23354CD9C(a1, a2, (SEL *)&selRef_setStatusValue_);
}

id (*ManagedTransaction.transactionType.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  void *v1;
  char v3;
  char v5;

  *(_QWORD *)a1 = v1;
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v1, sel_transactionTypeValue));
  v3 = v5;
  if (v5 == 17)
    v3 = 0;
  *(_BYTE *)(a1 + 8) = v3;
  return sub_23354CD90;
}

id sub_23354CD90(uint64_t a1, uint64_t a2)
{
  return sub_23354CD9C(a1, a2, (SEL *)&selRef_setTransactionTypeValue_);
}

id sub_23354CD9C(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend(*(id *)a1, *a3, *(unsigned __int8 *)(a1 + 8));
}

void _s10FinanceKit18ManagedTransactionC6update_07withRawD0yAC_AA0G15BankConnectDataO0D0VtFZ_0(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  id v11;
  id v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  int *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v45;
  unsigned int v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 *v54;
  unsigned int v55;
  int v56;
  uint64_t v57;
  unsigned __int8 *v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  unsigned __int8 *v62;
  unsigned int v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  __int128 v74;
  _QWORD v75[2];
  char v76[2];
  _BYTE v77[160];
  _BYTE v78[160];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawBankConnectData.Transaction(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v72 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)(a2 + *(int *)(v7 + 56));
  v10 = *v9;
  v74 = *(_OWORD *)(v9 + 1);
  v11 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  swift_bridgeObjectRetain();
  *(_DWORD *)v78 = v10;
  *(_OWORD *)&v78[4] = v74;
  v12 = objc_msgSend(v11, sel_initWithDecimal_, v78);
  objc_msgSend(a1, sel_setAmount_, v12);

  v13 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setCurrency_, v13);

  v73 = (int *)v6;
  *(_QWORD *)&v74 = a2;
  v14 = (uint64_t *)(a2 + *(int *)(v6 + 60));
  v15 = v14[7];
  if (v15)
  {
    v16 = v14[6];
    v18 = v14[1];
    v17 = v14[2];
    v19 = *v14;
    v20 = a1;
    v21 = HIDWORD(*v14);
    v22 = HIWORD(*v14);
    v66 = HIDWORD(v18);
    v67 = HIWORD(v18);
    v69 = v17 >> 16;
    v70 = v16;
    v68 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    swift_bridgeObjectRetain();
    *(_DWORD *)v78 = v19;
    *(_WORD *)&v78[4] = v21;
    a1 = v20;
    *(_WORD *)&v78[6] = v22;
    *(_DWORD *)&v78[8] = v18;
    *(_WORD *)&v78[12] = v66;
    *(_WORD *)&v78[14] = v67;
    *(_WORD *)&v78[16] = v17;
    *(_WORD *)&v78[18] = v69;
    v23 = objc_msgSend(v68, sel_initWithDecimal_, v78);
  }
  else
  {
    v23 = 0;
    v70 = 0;
  }
  objc_msgSend(a1, sel_setForeignAmount_, v23);

  v24 = (uint64_t)v72;
  if (v15)
  {
    v25 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v27 = v73;
  v26 = v74;
  objc_msgSend(a1, sel_setForeignCurrency_, v25);

  v28 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setTransactionDescription_, v28);

  v29 = *(_QWORD *)(v26 + v27[9] + 8);
  sub_2332702E0(v26, v24);
  if (!v29)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233168500(v24, type metadata accessor for RawBankConnectData.Transaction);
  v30 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setOriginalTransactionDescription_, v30);

  if (!v14[7] || (v31 = v14[5], (v31 & 0x100000000) != 0))
  {
    v38 = 0;
  }
  else
  {
    v72 = a1;
    v32 = v14[3];
    v33 = v14[4];
    v34 = v33 >> 16;
    v35 = HIDWORD(v33);
    v36 = HIWORD(v33);
    v37 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    *(_QWORD *)v78 = v32;
    *(_WORD *)&v78[8] = v33;
    a1 = v72;
    *(_WORD *)&v78[10] = v34;
    v27 = v73;
    v26 = v74;
    *(_WORD *)&v78[12] = v35;
    *(_WORD *)&v78[14] = v36;
    *(_DWORD *)&v78[16] = v31;
    v38 = objc_msgSend(v37, sel_initWithDecimal_, v78);
  }
  v39 = (uint64_t)v71;
  objc_msgSend(a1, sel_setForeignCurrencyExchangeRate_, v38);

  objc_msgSend(a1, sel_setCreditDebitIndicatorValue_, (*(_BYTE *)(v26 + v27[10]) & 1) == 0);
  sub_233168478(v26 + v27[16], (uint64_t)v77, &qword_256047460);
  sub_233168478((uint64_t)v77, (uint64_t)v78, &qword_256047460);
  if (sub_23327036C((uint64_t)v78) == 1)
    goto LABEL_24;
  v40 = *(_QWORD *)&v78[8];
  if (!*(_QWORD *)&v78[8])
    goto LABEL_24;
  v41 = *(_QWORD *)v78;
  v42 = HIBYTE(*(_QWORD *)&v78[8]) & 0xFLL;
  v43 = *(_QWORD *)v78 & 0xFFFFFFFFFFFFLL;
  if (!((*(_QWORD *)&v78[8] & 0x2000000000000000) != 0
       ? HIBYTE(*(_QWORD *)&v78[8]) & 0xFLL
       : *(_QWORD *)v78 & 0xFFFFFFFFFFFFLL))
    goto LABEL_24;
  if ((*(_QWORD *)&v78[8] & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v65 = sub_2334903FC(v41, v40, 10);
    swift_bridgeObjectRelease();
    LOWORD(v46) = v65;
    if ((v65 & 0x10000) == 0)
      goto LABEL_25;
    goto LABEL_24;
  }
  if ((*(_QWORD *)&v78[8] & 0x2000000000000000) == 0)
  {
    if ((*(_QWORD *)v78 & 0x1000000000000000) != 0)
      v45 = (unsigned __int8 *)((*(_QWORD *)&v78[8] & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v45 = (unsigned __int8 *)sub_23361EE34();
    v46 = sub_233490304(v45, v43, 10);
    if ((v46 & 0x10000) == 0)
      goto LABEL_25;
    goto LABEL_24;
  }
  v75[0] = *(_QWORD *)v78;
  v75[1] = *(_QWORD *)&v78[8] & 0xFFFFFFFFFFFFFFLL;
  if (v78[0] == 43)
  {
    if (v42)
    {
      if (v42 != 1)
      {
        v46 = (v78[1] - 48);
        if (v46 <= 9)
        {
          if (v42 == 2)
            goto LABEL_25;
          if ((v78[2] - 48) <= 9u)
          {
            LOWORD(v46) = 10 * v46 + (v78[2] - 48);
            v53 = v42 - 3;
            if (v42 == 3)
              goto LABEL_25;
            v54 = (unsigned __int8 *)v75 + 3;
            while (1)
            {
              v55 = *v54 - 48;
              if (v55 > 9)
                break;
              v56 = (__int16)(10 * v46);
              if (v56 != 10 * (__int16)v46)
                break;
              v46 = v56 + v55;
              if ((__int16)(v56 + v55) != v46)
                break;
              ++v54;
              if (!--v53)
                goto LABEL_25;
            }
          }
        }
      }
      goto LABEL_24;
    }
LABEL_76:
    __break(1u);
    return;
  }
  if (v78[0] != 45)
  {
    if (v42)
    {
      v46 = (v78[0] - 48);
      if (v46 <= 9)
      {
        if (v42 == 1)
          goto LABEL_25;
        if ((v78[1] - 48) <= 9u)
        {
          LOWORD(v46) = 10 * v46 + (v78[1] - 48);
          v57 = v42 - 2;
          if (v42 == 2)
            goto LABEL_25;
          v58 = (unsigned __int8 *)v75 + 2;
          while (1)
          {
            v59 = *v58 - 48;
            if (v59 > 9)
              break;
            v60 = (__int16)(10 * v46);
            if (v60 != 10 * (__int16)v46)
              break;
            v46 = v60 + v59;
            if ((__int16)(v60 + v59) != v46)
              break;
            ++v58;
            if (!--v57)
              goto LABEL_25;
          }
        }
      }
    }
    goto LABEL_24;
  }
  if (!v42)
  {
    __break(1u);
    goto LABEL_76;
  }
  if (v42 != 1)
  {
    v52 = (v78[1] - 48);
    if (v52 <= 9)
    {
      if (v42 == 2)
      {
        v46 = -v52;
        goto LABEL_25;
      }
      if ((v78[2] - 48) <= 9u)
      {
        LOWORD(v46) = -10 * v52 - (v78[2] - 48);
        v61 = v42 - 3;
        if (v42 == 3)
          goto LABEL_25;
        v62 = (unsigned __int8 *)v75 + 3;
        while (1)
        {
          v63 = *v62 - 48;
          if (v63 > 9)
            break;
          v64 = (__int16)(10 * v46);
          if (v64 != 10 * (__int16)v46)
            break;
          v46 = v64 - v63;
          if ((__int16)(v64 - v63) != v46)
            break;
          ++v62;
          if (!--v61)
            goto LABEL_25;
        }
      }
    }
  }
LABEL_24:
  LOWORD(v46) = -1;
LABEL_25:
  objc_msgSend(a1, sel_setMerchantCategoryCodeValue_, (__int16)v46);
  if (*(_BYTE *)(v26 + v27[13]) == 16)
  {
    v47 = 0;
  }
  else
  {
    v76[0] = *(_BYTE *)(v26 + v27[13]);
    TransactionType.init(_:)(v76, v75);
    v47 = LOBYTE(v75[0]);
  }
  objc_msgSend(a1, sel_setTransactionTypeValue_, v47);
  objc_msgSend(a1, sel_setStatusValue_, *(unsigned __int8 *)(v26 + v27[12]));
  v48 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setTransactionDate_, v48);

  sub_23319F164(v26 + v27[6], v39);
  v49 = sub_23361D634();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v39, 1, v49) != 1)
  {
    v51 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v39, v49);
  }
  objc_msgSend(a1, sel_setPostedDate_, v51);

}

id sub_23354D59C(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  id v15;
  id v16;
  void *v17;
  uint64_t v19;

  v4 = v3;
  v8 = sub_23361D6A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  sub_23361D694();
  v13 = (void *)sub_23361D658();
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  objc_msgSend(v12, sel_setId_, v13);

  v15 = objc_msgSend(a2, sel_publicAccountObject);
  v16 = objc_msgSend(v15, "id");

  sub_23361D67C();
  v17 = (void *)sub_23361D658();
  v14(v11, v8);
  objc_msgSend(v12, sel_setAccountId_, v17);

  _s10FinanceKit18ManagedTransactionC6update_07withRawD0yAC_AA0G15BankConnectDataO0D0VtFZ_0((char *)v12, a1);
  sub_233168500(a1, type metadata accessor for RawBankConnectData.Transaction);
  return v12;
}

void sub_23354D708(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_id, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_23354D72C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setId_);
}

void sub_23354D740(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_accountId, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_23354D764(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setAccountId_);
}

char *keypath_get_selector_amount()
{
  return sel_amount;
}

id sub_23354D784@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_amount);
  *a2 = result;
  return result;
}

id sub_23354D7BC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAmount_, *a1);
}

char *keypath_get_selector_transactionDescription()
{
  return sel_transactionDescription;
}

void sub_23354D7DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_transactionDescription, a2);
}

void sub_23354D7F8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setTransactionDescription_);
}

char *keypath_get_selector_originalTransactionDescription()
{
  return sel_originalTransactionDescription;
}

void sub_23354D810(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_originalTransactionDescription, a2);
}

void sub_23354D82C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setOriginalTransactionDescription_);
}

void sub_23354D838(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_currency, a2);
}

void sub_23354D854(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setCurrency_);
}

char *keypath_get_selector_foreignAmount()
{
  return sel_foreignAmount;
}

id sub_23354D86C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_foreignAmount);
  *a2 = result;
  return result;
}

id sub_23354D8A4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setForeignAmount_, *a1);
}

char *keypath_get_selector_foreignCurrency()
{
  return sel_foreignCurrency;
}

void sub_23354D8C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_foreignCurrency, a2);
}

void sub_23354D8E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setForeignCurrency_);
}

char *keypath_get_selector_foreignCurrencyExchangeRate()
{
  return sel_foreignCurrencyExchangeRate;
}

id sub_23354D908@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_foreignCurrencyExchangeRate);
  *a2 = result;
  return result;
}

id sub_23354D940(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setForeignCurrencyExchangeRate_, *a1);
}

char *keypath_get_selector_creditDebitIndicatorValue()
{
  return sel_creditDebitIndicatorValue;
}

id sub_23354D960@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_creditDebitIndicatorValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_23354D990(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreditDebitIndicatorValue_, *a1);
}

void sub_23354D9A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_merchantName, a2);
}

void sub_23354D9C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setMerchantName_);
}

char *keypath_get_selector_merchantCategoryCodeValue()
{
  return sel_merchantCategoryCodeValue;
}

id sub_23354D9E8@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_merchantCategoryCodeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_23354DA18(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMerchantCategoryCodeValue_, *a1);
}

char *keypath_get_selector_transactionTypeValue()
{
  return sel_transactionTypeValue;
}

id sub_23354DA38@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_transactionTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_23354DA68(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTransactionTypeValue_, *a1);
}

char *keypath_get_selector_statusValue()
{
  return sel_statusValue;
}

id sub_23354DA88@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_statusValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_23354DAB8(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStatusValue_, *a1);
}

void sub_23354DACC(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_transactionDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_23354DAF0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setTransactionDate_);
}

char *keypath_get_selector_postedDate()
{
  return sel_postedDate;
}

id sub_23354DB28@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedTransaction.creditDebitIndicator.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_23354DB60(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreditDebitIndicatorValue_, *a1);
}

id sub_23354DB74@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  int v4;
  id result;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_merchantCategoryCodeValue);
  if (v4 < 0)
    result = 0;
  else
    result = objc_msgSend(v3, sel_merchantCategoryCodeValue);
  *(_WORD *)a2 = (_WORD)result;
  *(_BYTE *)(a2 + 2) = v4 < 0;
  return result;
}

id sub_23354DBD8(uint64_t a1, id *a2)
{
  __int16 v2;

  if (*(_BYTE *)(a1 + 2))
    v2 = -1;
  else
    v2 = *(_WORD *)a1;
  return objc_msgSend(*a2, sel_setMerchantCategoryCodeValue_, v2);
}

id sub_23354DBFC@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedTransaction.status.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_23354DC34(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_40Tm(a1, a2, a3, a4, (SEL *)&selRef_setStatusValue_);
}

FinanceKit::TransactionType_optional sub_23354DC40@<W0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  FinanceKit::TransactionType_optional result;
  char v4;
  char v5;

  result.value = TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(*a1, sel_transactionTypeValue)).value;
  v4 = v5;
  if (v5 == 17)
    v4 = 0;
  *a2 = v4;
  return result;
}

id sub_23354DC8C(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_40Tm(a1, a2, a3, a4, (SEL *)&selRef_setTransactionTypeValue_);
}

id keypath_set_40Tm(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  return objc_msgSend(*a2, *a5, *a1);
}

uint64_t type metadata accessor for ManagedTransaction()
{
  return objc_opt_self();
}

uint64_t CodableWrapper.init(value:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id CodableWrapper.value.getter()
{
  id *v0;

  return *v0;
}

void CodableWrapper.value.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*CodableWrapper.value.modify())()
{
  return nullsub_1;
}

uint64_t CodableWrapper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  id v7;
  id v8;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3D4();
  if (!v3)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_2331A6B08();
    sub_23361F1E8();
    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    sub_2331D1374(v13, v14);
    v8 = sub_233613994();
    sub_23316BEA4(v13, v14);
    objc_msgSend(v8, sel_setRequiresSecureCoding_, 1);
    sub_23361E150();
    v10 = sub_23361E9CC();
    swift_bridgeObjectRelease();
    if (v10)
    {
      sub_23316BEA4(v13, v14);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
      *a3 = v10;
    }
    else
    {
      v17 = sub_23361EE10();
      swift_allocError();
      v12 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
      *v12 = a2;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_23361F3C8();
      sub_23361EDEC();
      (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v17 - 8) + 104))(v12, *MEMORY[0x24BEE26D0]);
      swift_willThrow();

      sub_23316BEA4(v13, v14);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t CodableWrapper.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v10[2];
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3F8();
  v10[0] = 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v10);
  v4 = v10[0];
  if (v3)
  {
    v5 = (void *)sub_23361D3C4();
    v7 = v6;

    v10[0] = v5;
    v10[1] = v7;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_2331A6BA8();
    sub_23361F200();
    sub_23316BEA4((uint64_t)v5, (unint64_t)v7);
  }
  else
  {
    v8 = v4;
    sub_23361D1B4();

    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
}

uint64_t sub_23354E0B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return CodableWrapper.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

uint64_t sub_23354E0C8(_QWORD *a1)
{
  return CodableWrapper.encode(to:)(a1);
}

uint64_t static CodableWrapper.== infix(_:_:)()
{
  sub_23331CE10();
  return sub_23361EA14() & 1;
}

void CodableWrapper.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_23361EA20();

}

uint64_t CodableWrapper.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_23361F350();
  v2 = v1;
  sub_23361EA20();

  return sub_23361F3A4();
}

uint64_t sub_23354E1B8()
{
  sub_23361F350();
  CodableWrapper.hash(into:)();
  return sub_23361F3A4();
}

void sub_23354E1F0()
{
  JUMPOUT(0x234934494);
}

uint64_t type metadata accessor for CodableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableWrapper);
}

uint64_t static RawOrderPaymentMethod.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23361F224();
}

FinanceKit::RawOrderPaymentMethod __swiftcall RawOrderPaymentMethod.init(displayName:)(FinanceKit::RawOrderPaymentMethod displayName)
{
  FinanceKit::RawOrderPaymentMethod *v1;

  *v1 = displayName;
  return displayName;
}

uint64_t RawOrderPaymentMethod.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawOrderPaymentMethod.displayName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RawOrderPaymentMethod.displayName.modify())()
{
  return nullsub_1;
}

uint64_t sub_23354E2B4()
{
  sub_23354E3F0();
  return sub_23361F428();
}

uint64_t sub_23354E2DC()
{
  sub_23354E3F0();
  return sub_23361F434();
}

uint64_t RawOrderPaymentMethod.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054E40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23354E3F0();
  sub_23361F410();
  sub_23361F140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_23354E3F0()
{
  unint64_t result;

  result = qword_256054E48;
  if (!qword_256054E48)
  {
    result = MEMORY[0x234934494](&unk_23365ACDC, &type metadata for RawOrderPaymentMethod.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054E48);
  }
  return result;
}

uint64_t RawOrderPaymentMethod.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054E50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23354E3F0();
  sub_23361F3EC();
  if (!v2)
  {
    v9 = sub_23361F02C();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23354E550@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RawOrderPaymentMethod.init(from:)(a1, a2);
}

uint64_t sub_23354E564(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054E40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23354E3F0();
  sub_23361F410();
  sub_23361F140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for RawOrderPaymentMethod()
{
  return &type metadata for RawOrderPaymentMethod;
}

uint64_t storeEnumTagSinglePayload for RawOrderPaymentMethod.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23354E6A0 + 4 * byte_23365AB70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23354E6C0 + 4 * byte_23365AB75[v4]))();
}

_BYTE *sub_23354E6A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23354E6C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23354E6C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23354E6D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23354E6D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23354E6E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderPaymentMethod.CodingKeys()
{
  return &type metadata for RawOrderPaymentMethod.CodingKeys;
}

unint64_t sub_23354E700()
{
  unint64_t result;

  result = qword_256054E58;
  if (!qword_256054E58)
  {
    result = MEMORY[0x234934494](&unk_23365ACB4, &type metadata for RawOrderPaymentMethod.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054E58);
  }
  return result;
}

unint64_t sub_23354E748()
{
  unint64_t result;

  result = qword_256054E60;
  if (!qword_256054E60)
  {
    result = MEMORY[0x234934494](&unk_23365AC24, &type metadata for RawOrderPaymentMethod.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054E60);
  }
  return result;
}

unint64_t sub_23354E790()
{
  unint64_t result;

  result = qword_256054E68;
  if (!qword_256054E68)
  {
    result = MEMORY[0x234934494](&unk_23365AC4C, &type metadata for RawOrderPaymentMethod.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054E68);
  }
  return result;
}

uint64_t FinanceStore.authorizationStatus()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for FinanceStore.Message();
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23354E830()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t, uint64_t);
  char v3;

  static DeviceInfo.deviceType.getter(&v3);
  if (v3)
  {
    __break(1u);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    v2 = (void (*)(uint64_t, uint64_t))((char *)&dword_256043038 + dword_256043038);
    v1 = (_QWORD *)swift_task_alloc();
    v0[7] = v1;
    *v1 = v0;
    v1[1] = sub_23354E8BC;
    v2(v0[3], v0[6]);
  }
}

uint64_t sub_23354E8BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_2331CB0F4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23354E944()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if ((swift_dynamicCast() & 1) != 0 && *(_BYTE *)(v0 + 72) == 4)
    return sub_23361EF24();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23354EA34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for FinanceStore.Message();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23354EA90()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 24);
  swift_storeEnumTagMultiPayload();
  return swift_task_switch();
}

uint64_t sub_23354EADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_23354EB40;
  v2 = swift_continuation_init();
  sub_2332990F0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_23354EB40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 120) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 104);
    **(_BYTE **)(v1 + 80) = *(_BYTE *)(v1 + 128);
    sub_2331CB0F4(v4);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_23354EBDC()
{
  uint64_t v0;

  sub_2331CB0F4(*(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FinanceStore.requestAuthorization()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_23354EC34()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;

  static DeviceInfo.deviceType.getter(&v2);
  if (v2)
  {
    __break(1u);
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v1;
    *v1 = v0;
    v1[1] = sub_23354EC94;
    sub_23354EA34(*(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_23354EC94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23354ED00()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if ((swift_dynamicCast() & 1) != 0 && *(_BYTE *)(v0 + 56) == 4)
    return sub_23361EF24();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t static ManagedInstitution.existingInstitution(withInstitutionID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23354EE78(a1, a2, a3);
}

id static ManagedInstitution.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

unint64_t static ManagedInstitution.existingInstitution(forConsentID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23354EE78(a1, a2, a3);
}

unint64_t sub_23354EE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;
  uint64_t v14;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  v6 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2331683F0();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v6, sel_setPredicate_, v8);

  v9 = v14;
  result = sub_23361E984();
  if (v9)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_23354F048@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_institutionObject);
  *a2 = result;
  return result;
}

id sub_23354F080(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInstitutionObject_, *a1);
}

uint64_t static ManagedInstitution.predicateForConnectedInstitution.getter()
{
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  return sub_23361E6B4();
}

uint64_t static ManagedInstitution.predicateToExcludeAppleData()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D50;
  v1 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  v2 = sub_2331683F0();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 32) = 25705;
  *(_QWORD *)(v0 + 40) = 0xE200000000000000;
  if (qword_254246F08 != -1)
    swift_once();
  v3 = type metadata accessor for Institution(0);
  v4 = (uint64_t *)__swift_project_value_buffer(v3, (uint64_t)qword_254247630);
  v6 = *v4;
  v5 = v4[1];
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

id static ManagedInstitution.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t static ManagedInstitution.predicateForInstitution(withInstitutionID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

uint64_t static ManagedInstitution.predicateForInstitution(forConsentID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

void static ManagedInstitution.deleteInstitution(withInstitutionID:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;

  v17.receiver = (id)swift_getObjCClassFromMetadata();
  v17.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  v7 = objc_msgSendSuper2(&v17, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  objc_msgSend(v7, sel_setIncludesPropertyValues_, 0);
  v10 = sub_23361E984();
  if (v3)
  {

    return;
  }
  v11 = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v15 <= 1)
    {
      swift_bridgeObjectRetain();
      v16 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v16)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    sub_23361EF24();
    __break(1u);
    return;
  }
  v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v12 > 1)
    goto LABEL_16;
  if (v12)
  {
LABEL_6:
    if ((v11 & 0xC000000000000001) != 0)
    {
      v13 = (id)MEMORY[0x234933120](0, v11);
      goto LABEL_9;
    }
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v13 = *(id *)(v11 + 32);
LABEL_9:
      v14 = v13;
      swift_bridgeObjectRelease();
      objc_msgSend(a3, sel_deleteObject_, v14);

      return;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_12:

  swift_bridgeObjectRelease();
}

void *static ManagedInstitution.fetchRequest(for:)(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  void *v4;
  void *ObjCClassFromMetadata;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  objc_super v18;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  v4 = (void *)a1[2];
  v3 = a1[3];
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v18.receiver = ObjCClassFromMetadata;
  v18.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
  v6 = objc_msgSendSuper2(&v18, sel_fetchRequest);
  v7 = v6;
  if (v2)
    v8 = 0;
  else
    v8 = v1;
  objc_msgSend(v6, sel_setFetchLimit_, v8);
  if (v4)
  {
    v9 = qword_256041D38;
    v10 = v4;
    if (v9 != -1)
      swift_once();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_2333B13C8(v11);
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setPredicate_, v12);

  }
  if (v3)
  {
    v13 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
    v14 = objc_msgSend(v13, sel_attributesByName);

    sub_233168668(0, &qword_256042E58);
    v15 = sub_23361E06C();

    swift_bridgeObjectRetain();
    sub_23354FB60(v3, v15);
    swift_bridgeObjectRelease();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v16 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSortDescriptors_, v16);
    swift_bridgeObjectRelease();

  }
  return v7;
}

void *sub_23354F748()
{
  void *result;

  result = (void *)sub_23315F950((uint64_t)&unk_250467720);
  off_256054E88 = result;
  return result;
}

uint64_t static ManagedInstitution.attributeNamesByKeyPath.getter()
{
  if (qword_256041D38 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23354F7AC()
{
  if (qword_256041D38 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

id static ManagedInstitution.userConsentFetchRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v20;
  uint64_t v21;
  objc_super v22;

  v0 = sub_23361E120();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v20 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054E90);
  MEMORY[0x24BDAC7A8](v7);
  type metadata accessor for ManagedConsent();
  v22.receiver = (id)swift_getObjCClassFromMetadata();
  v22.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit14ManagedConsent;
  v20 = objc_msgSendSuper2(&v22, sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  sub_23361E114();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  sub_23361CD94();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  *(_QWORD *)(v8 + 32) = sub_23361E804();
  v21 = v8;
  sub_23361E408();
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v10 = v20;
  objc_msgSend(v20, sel_setSortDescriptors_, v9);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  v11 = (void *)sub_23361E6B4();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_233626360;
  *(_QWORD *)(v12 + 32) = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_233623D50;
  v14 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  v15 = sub_2331683F0();
  *(_QWORD *)(v13 + 32) = 0x49746E65736E6F63;
  *(_QWORD *)(v13 + 40) = 0xE900000000000044;
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 72) = 0xD000000000000019;
  *(_QWORD *)(v13 + 80) = 0x800000023366AA20;
  v16 = v11;
  *(_QWORD *)(v12 + 40) = sub_23361E6B4();
  v21 = v12;
  sub_23361E408();
  v17 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v17);

  objc_msgSend(v10, sel_setPredicate_, v18);
  return v10;
}

uint64_t sub_23354FB60(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v20 = a2;
      for (i = 4; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x234933120](i - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * i);
        v7 = v6;
        v8 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v9 = objc_msgSend(v6, sel_key);
        if (!v9)
          goto LABEL_20;
        v10 = v9;
        v11 = sub_23361E150();
        v13 = v12;

        if (*(_QWORD *)(a2 + 16))
        {
          sub_2331E3D18(v11, v13);
          if ((v14 & 1) != 0)
            break;
        }
        if (qword_256041D38 != -1)
          swift_once();
        if (*((_QWORD *)off_256054E88 + 2))
        {
          swift_bridgeObjectRetain();
          sub_2331E3D18(v11, v13);
          if ((v15 & 1) != 0)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v16 = objc_msgSend(v7, sel_ascending);
            v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
            v18 = (void *)sub_23361E12C();
            swift_bridgeObjectRelease();
            objc_msgSend(v17, sel_initWithKey_ascending_, v18, v16);

            a2 = v20;
            swift_bridgeObjectRelease();

            goto LABEL_20;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        swift_bridgeObjectRelease();
LABEL_6:
        if (v8 == v4)
        {
          swift_bridgeObjectRelease();
          return v21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

id sub_23354FE28@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_institutionObject);
  *a2 = result;
  return result;
}

id sub_23354FE60(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInstitutionObject_, *a1);
}

void sub_23354FE78(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setName_, v3);

}

uint64_t static BankConnectService.shared.getter()
{
  if (qword_256041D40 != -1)
    swift_once();
  return swift_retain();
}

FinanceKit::BankConnectServiceError::Code_optional __swiftcall BankConnectServiceError.Code.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FinanceKit::BankConnectServiceError::Code_optional)rawValue;
}

uint64_t BankConnectServiceError.Code.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::BankConnectServiceError::Code_optional sub_23354FF24(Swift::Int *a1)
{
  return BankConnectServiceError.Code.init(rawValue:)(*a1);
}

unint64_t static BankConnectServiceError.errorDomain.getter()
{
  return 0xD000000000000023;
}

uint64_t BankConnectServiceError.errorCode.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(unsigned __int8 *)(v0 + 16);
  if (*(_BYTE *)(v0 + 16))
  {
    if ((_DWORD)result == 1)
    {
      return 2;
    }
    else if (*(_OWORD *)v0 == 0)
    {
      return 1;
    }
    else
    {
      return 3;
    }
  }
  return result;
}

unint64_t BankConnectServiceError.errorUserInfo.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (*(_BYTE *)(v0 + 16) != 1)
    return sub_23315F6D0(MEMORY[0x24BEE4AF8]);
  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = sub_23361E150();
  *(_QWORD *)(inited + 40) = v4;
  swift_getErrorValue();
  *(_QWORD *)(inited + 72) = v14;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *))(*(_QWORD *)(v14 - 8) + 16))(boxed_opaque_existential_0);
  *(_QWORD *)(inited + 80) = sub_23361E150();
  *(_QWORD *)(inited + 88) = v6;
  v7 = v2;
  v8 = BankConnectServiceError.errorDescription.getter();
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
  if (v9)
    v10 = v8;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (v9)
    v11 = v9;
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = v11;
  v12 = sub_23315F6D0(inited);
  sub_233550340(v2, v1, 1);
  return v12;
}

unint64_t BankConnectServiceError.errorDescription.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v3 = v1;
    sub_23361ED98();
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    sub_23361F2E4();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_233550340(v1, v2, 1);
    return 0xD000000000000014;
  }
  else if (*(_BYTE *)(v0 + 16))
  {
    return 0;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return (unint64_t)v1;
}

uint64_t sub_2335501A4()
{
  sub_23356387C();
  return sub_23361F2D8();
}

uint64_t sub_2335501CC()
{
  sub_23356387C();
  return sub_23361F2CC();
}

unint64_t sub_2335501F4()
{
  return 0xD000000000000023;
}

uint64_t sub_233550210()
{
  uint64_t v0;
  uint64_t result;

  result = *(unsigned __int8 *)(v0 + 16);
  if (*(_BYTE *)(v0 + 16))
  {
    if ((_DWORD)result == 1)
    {
      return 2;
    }
    else if (*(_OWORD *)v0 == 0)
    {
      return 1;
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t sub_233550248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - v4;
  *((_BYTE *)&v9 - v4) = 3;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BankConnectService();
  v6 = swift_allocObject();
  sub_2335638C0((uint64_t)v5, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560556C0);
  swift_allocObject();
  v7 = sub_233462E64((uint64_t)v3, 0, 0);
  result = sub_233563908((uint64_t)v5);
  *(_QWORD *)(v6 + 16) = v7;
  off_256054E98 = (_UNKNOWN *)v6;
  return result;
}

void sub_233550340(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t BankConnectService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t result;
  _QWORD v7[6];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(NSObject **)(v1 + 16);
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = v1;
  v3[3] = 0xD00000000000001ELL;
  v3[4] = 0x800000023367ACA0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_2335504E4;
  *(_QWORD *)(v4 + 24) = v3;
  v7[4] = sub_233167E10;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2332714C0;
  v7[3] = &block_descriptor_27;
  v5 = _Block_copy(v7);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    return v0;
  }
  return result;
}

uint64_t sub_2335504B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2335504E4()
{
  _QWORD *v0;

  return sub_2334631E4(v0[2], v0[3], v0[4]);
}

uint64_t sub_2335504F0()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t BankConnectService.__deallocating_deinit()
{
  BankConnectService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_233550528(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233550564 + 4 * byte_23365ADA0[a1]))(0xD000000000000026, 0x800000023367ACF0);
}

uint64_t sub_233550564()
{
  return 0x6F63634164616F6CLL;
}

uint64_t sub_233550584()
{
  return 0x417463656E6E6F63;
}

uint64_t sub_2335505A8()
{
  uint64_t v0;

  return v0 - 8;
}

uint64_t sub_2335507B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2335507EC + 4 * byte_23365ADC1[a1]))(0x507972616D697270, 0xEB00000000737361);
}

unint64_t sub_2335507EC()
{
  return 0xD000000000000016;
}

uint64_t sub_233550808()
{
  return 0x7475746974736E69;
}

unint64_t sub_233550828()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_233550860()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 12383;
}

uint64_t sub_233550894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335624E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2335508B8()
{
  sub_233553FB0();
  return sub_23361F428();
}

uint64_t sub_2335508E0()
{
  sub_233553FB0();
  return sub_23361F434();
}

uint64_t sub_233550908()
{
  unsigned __int8 *v0;

  return sub_233550528(*v0);
}

uint64_t sub_233550910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335625B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_233550934(_BYTE *a1@<X8>)
{
  *a1 = 33;
}

uint64_t sub_233550940()
{
  sub_233553DD4();
  return sub_23361F428();
}

uint64_t sub_233550968()
{
  sub_233553DD4();
  return sub_23361F434();
}

uint64_t sub_233550990()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2335509C0 + 4 * byte_23365ADC6[*v0]))(0x6E6F6973736573, 0xE700000000000000);
}

unint64_t sub_2335509C0()
{
  return 0xD000000000000014;
}

uint64_t sub_2335509DC()
{
  return 0x7373416475617266;
}

uint64_t sub_233550A00()
{
  return 0x72756769666E6F63;
}

uint64_t sub_233550A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335631AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233550A48()
{
  sub_233554588();
  return sub_23361F428();
}

uint64_t sub_233550A70()
{
  sub_233554588();
  return sub_23361F434();
}

uint64_t sub_233550A98()
{
  unsigned __int8 *v0;

  return sub_2335507B0(*v0);
}

uint64_t sub_233550AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335633A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233550AC4()
{
  sub_233554698();
  return sub_23361F428();
}

uint64_t sub_233550AEC()
{
  sub_233554698();
  return sub_23361F434();
}

uint64_t sub_233550B14()
{
  sub_233554654();
  return sub_23361F428();
}

uint64_t sub_233550B3C()
{
  sub_233554654();
  return sub_23361F434();
}

uint64_t sub_233550B64()
{
  sub_233554500();
  return sub_23361F428();
}

uint64_t sub_233550B8C()
{
  sub_233554500();
  return sub_23361F434();
}

uint64_t sub_233550BB4()
{
  sub_233554038();
  return sub_23361F428();
}

uint64_t sub_233550BDC()
{
  sub_233554038();
  return sub_23361F434();
}

uint64_t sub_233550C04()
{
  sub_233553E5C();
  return sub_23361F428();
}

uint64_t sub_233550C2C()
{
  sub_233553E5C();
  return sub_23361F434();
}

uint64_t sub_233550C54()
{
  sub_233554544();
  return sub_23361F428();
}

uint64_t sub_233550C7C()
{
  sub_233554544();
  return sub_23361F434();
}

uint64_t sub_233550CA4()
{
  sub_233554610();
  return sub_23361F428();
}

uint64_t sub_233550CCC()
{
  sub_233554610();
  return sub_23361F434();
}

uint64_t sub_233550CF4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233550D2C + 4 * byte_23365ADCA[*v0]))(0x7475746974736E69, 0xEB000000006E6F69);
}

uint64_t sub_233550D2C()
{
  return 0x44496E617066;
}

unint64_t sub_233550D40()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_233550D60()
{
  return 0xD000000000000013;
}

uint64_t sub_233550D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2335635D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233550DA0()
{
  sub_233554324();
  return sub_23361F428();
}

uint64_t sub_233550DC8()
{
  sub_233554324();
  return sub_23361F434();
}

uint64_t sub_233550DF0()
{
  sub_233553EA0();
  return sub_23361F428();
}

uint64_t sub_233550E18()
{
  sub_233553EA0();
  return sub_23361F434();
}

uint64_t sub_233550E40()
{
  sub_2335543AC();
  return sub_23361F428();
}

uint64_t sub_233550E68()
{
  sub_2335543AC();
  return sub_23361F434();
}

uint64_t sub_233550E90()
{
  sub_2335546DC();
  return sub_23361F428();
}

uint64_t sub_233550EB8()
{
  sub_2335546DC();
  return sub_23361F434();
}

uint64_t sub_233550EE0()
{
  sub_233554720();
  return sub_23361F428();
}

uint64_t sub_233550F08()
{
  sub_233554720();
  return sub_23361F434();
}

uint64_t sub_233550F30()
{
  sub_2335544BC();
  return sub_23361F428();
}

uint64_t sub_233550F58()
{
  sub_2335544BC();
  return sub_23361F434();
}

uint64_t sub_233550F80()
{
  sub_23355418C();
  return sub_23361F428();
}

uint64_t sub_233550FA8()
{
  sub_23355418C();
  return sub_23361F434();
}

uint64_t sub_233550FD0()
{
  sub_2335541D0();
  return sub_23361F428();
}

uint64_t sub_233550FF8()
{
  sub_2335541D0();
  return sub_23361F434();
}

uint64_t sub_233551020()
{
  sub_23355407C();
  return sub_23361F428();
}

uint64_t sub_233551048()
{
  sub_23355407C();
  return sub_23361F434();
}

uint64_t sub_233551070()
{
  sub_2335540C0();
  return sub_23361F428();
}

uint64_t sub_233551098()
{
  sub_2335540C0();
  return sub_23361F434();
}

uint64_t sub_2335510C0()
{
  sub_233554434();
  return sub_23361F428();
}

uint64_t sub_2335510E8()
{
  sub_233554434();
  return sub_23361F434();
}

uint64_t sub_233551110()
{
  sub_2335542E0();
  return sub_23361F428();
}

uint64_t sub_233551138()
{
  sub_2335542E0();
  return sub_23361F434();
}

uint64_t sub_233551160()
{
  sub_23355429C();
  return sub_23361F428();
}

uint64_t sub_233551188()
{
  sub_23355429C();
  return sub_23361F434();
}

uint64_t sub_2335511B0()
{
  sub_233554214();
  return sub_23361F428();
}

uint64_t sub_2335511D8()
{
  sub_233554214();
  return sub_23361F434();
}

uint64_t sub_233551200()
{
  sub_2335543F0();
  return sub_23361F428();
}

uint64_t sub_233551228()
{
  sub_2335543F0();
  return sub_23361F434();
}

uint64_t sub_233551250()
{
  sub_233554148();
  return sub_23361F428();
}

uint64_t sub_233551278()
{
  sub_233554148();
  return sub_23361F434();
}

uint64_t sub_2335512A0()
{
  sub_233554104();
  return sub_23361F428();
}

uint64_t sub_2335512C8()
{
  sub_233554104();
  return sub_23361F434();
}

uint64_t sub_2335512F0()
{
  sub_233554478();
  return sub_23361F428();
}

uint64_t sub_233551318()
{
  sub_233554478();
  return sub_23361F434();
}

uint64_t sub_233551340()
{
  sub_233554258();
  return sub_23361F428();
}

uint64_t sub_233551368()
{
  sub_233554258();
  return sub_23361F434();
}

uint64_t sub_233551390()
{
  sub_233553F28();
  return sub_23361F428();
}

uint64_t sub_2335513B8()
{
  sub_233553F28();
  return sub_23361F434();
}

uint64_t sub_2335513E0()
{
  sub_233553F6C();
  return sub_23361F428();
}

uint64_t sub_233551408()
{
  sub_233553F6C();
  return sub_23361F434();
}

uint64_t sub_233551430()
{
  sub_2335545CC();
  return sub_23361F428();
}

uint64_t sub_233551458()
{
  sub_2335545CC();
  return sub_23361F434();
}

uint64_t sub_233551480()
{
  _BYTE *v0;

  if (*v0)
    return 0x6465776569766572;
  else
    return 12383;
}

uint64_t sub_2335514B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233563798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2335514D8()
{
  sub_233553EE4();
  return sub_23361F428();
}

uint64_t sub_233551500()
{
  sub_233553EE4();
  return sub_23361F434();
}

uint64_t sub_233551528()
{
  sub_233553FF4();
  return sub_23361F428();
}

uint64_t sub_233551550()
{
  sub_233553FF4();
  return sub_23361F434();
}

void BankConnectService.Message.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;

  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EA0);
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EA8);
  v85 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v156 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EB0);
  v61 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v159 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_23361D634();
  v160 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v158 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EB8);
  v84 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EC0);
  v83 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v147 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EC8);
  v60 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152);
  v150 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054ED0);
  v82 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v145 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054ED8);
  v81 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v143 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EE0);
  v80 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v141 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EE8);
  v79 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v139 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EF0);
  v78 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v137 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054EF8);
  v77 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v135 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F00);
  v76 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v132 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F08);
  v75 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v129 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F10);
  v74 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v126 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_23361D340();
  v125 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v124 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F18);
  v73 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v122 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F20);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v117 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F28);
  v113 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v112 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F30);
  v59 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v130 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F38);
  v72 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v111 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F40);
  v71 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v109 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F48);
  v70 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v107 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F50);
  v69 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v105 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F58);
  v68 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v103 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F60);
  v67 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F68);
  v66 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v97 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F70);
  v58 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v114 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for BankConnectAuthorizationConfiguration();
  v31 = MEMORY[0x24BDAC7A8](v55);
  v165 = (char *)&v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v162 = (char *)&v55 - v33;
  v56 = type metadata accessor for BankConnectAuthorizationPayload(0);
  MEMORY[0x24BDAC7A8](v56);
  v118 = (char *)&v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for BankConnectAuthorizationSession();
  MEMORY[0x24BDAC7A8](v96);
  v166 = (char *)&v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F78);
  v65 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)&v55 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F80);
  v64 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v92 = (char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F88);
  v63 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v90 = (char *)&v55 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F90);
  v57 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v98 = (char *)&v55 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for Institution(0);
  v40 = MEMORY[0x24BDAC7A8](v168);
  v89 = (char *)&v55 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v163 = (char *)&v55 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v88 = (char *)&v55 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v164 = (char *)&v55 - v46;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054F98);
  v62 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v86 = (char *)&v55 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054FA0);
  MEMORY[0x24BDAC7A8](v48);
  v49 = type metadata accessor for BankConnectService.Message();
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v55 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_256054FA8);
  v169 = *(_QWORD *)(v171 - 8);
  MEMORY[0x24BDAC7A8](v171);
  v53 = (char *)&v55 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233553DD4();
  v172 = v53;
  sub_23361F410();
  sub_233553E18(v170, (uint64_t)v51);
  v54 = (char *)sub_2335522CC + 4 * word_23365ADCE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2335522CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 120) = 0;
  sub_233554720();
  v4 = *(_QWORD *)(v3 - 136);
  v5 = *(_QWORD *)(v3 - 128);
  sub_23361F0C8();
  sub_23361F140();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8))(v5, v4);
}

uint64_t type metadata accessor for BankConnectService.Message()
{
  uint64_t result;

  result = qword_256055368;
  if (!qword_256055368)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_233553DD4()
{
  unint64_t result;

  result = qword_256054FB0;
  if (!qword_256054FB0)
  {
    result = MEMORY[0x234934494](&unk_23365DACC, &type metadata for BankConnectService.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FB0);
  }
  return result;
}

uint64_t sub_233553E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectService.Message();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_233553E5C()
{
  unint64_t result;

  result = qword_256054FB8;
  if (!qword_256054FB8)
  {
    result = MEMORY[0x234934494](&unk_23365DA7C, &type metadata for BankConnectService.Message.DiscoveryCardEligibilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FB8);
  }
  return result;
}

unint64_t sub_233553EA0()
{
  unint64_t result;

  result = qword_256054FC0;
  if (!qword_256054FC0)
  {
    result = MEMORY[0x234934494](&unk_23365DA2C, &type metadata for BankConnectService.Message.InsertOrUpdateInstitutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FC0);
  }
  return result;
}

unint64_t sub_233553EE4()
{
  unint64_t result;

  result = qword_256054FC8;
  if (!qword_256054FC8)
  {
    result = MEMORY[0x234934494](&unk_23365D9DC, &type metadata for BankConnectService.Message.UpdateTermsAndConditionsWithTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FC8);
  }
  return result;
}

unint64_t sub_233553F28()
{
  unint64_t result;

  result = qword_256054FD0;
  if (!qword_256054FD0)
  {
    result = MEMORY[0x234934494](&unk_23365D98C, &type metadata for BankConnectService.Message.TermsAndConditionsURLForTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FD0);
  }
  return result;
}

unint64_t sub_233553F6C()
{
  unint64_t result;

  result = qword_256054FD8;
  if (!qword_256054FD8)
  {
    result = MEMORY[0x234934494](&unk_23365D93C, &type metadata for BankConnectService.Message.TermsAndConditionsWithInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FD8);
  }
  return result;
}

unint64_t sub_233553FB0()
{
  unint64_t result;

  result = qword_256054FE0;
  if (!qword_256054FE0)
  {
    result = MEMORY[0x234934494](&unk_23365D8EC, &type metadata for BankConnectService.Message.ClassifyTransactionsWithTransactionIdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FE0);
  }
  return result;
}

unint64_t sub_233553FF4()
{
  unint64_t result;

  result = qword_256054FE8;
  if (!qword_256054FE8)
  {
    result = MEMORY[0x234934494](&unk_23365D89C, &type metadata for BankConnectService.Message.ValidateAccountConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FE8);
  }
  return result;
}

unint64_t sub_233554038()
{
  unint64_t result;

  result = qword_256054FF0;
  if (!qword_256054FF0)
  {
    result = MEMORY[0x234934494](&unk_23365D84C, &type metadata for BankConnectService.Message.DisconnectAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FF0);
  }
  return result;
}

unint64_t sub_23355407C()
{
  unint64_t result;

  result = qword_256054FF8;
  if (!qword_256054FF8)
  {
    result = MEMORY[0x234934494](&unk_23365D7FC, &type metadata for BankConnectService.Message.LoadTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256054FF8);
  }
  return result;
}

unint64_t sub_2335540C0()
{
  unint64_t result;

  result = qword_256055000;
  if (!qword_256055000)
  {
    result = MEMORY[0x234934494](&unk_23365D7AC, &type metadata for BankConnectService.Message.LoadTransactionsForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055000);
  }
  return result;
}

unint64_t sub_233554104()
{
  unint64_t result;

  result = qword_256055008;
  if (!qword_256055008)
  {
    result = MEMORY[0x234934494](&unk_23365D75C, &type metadata for BankConnectService.Message.RevokeConsentsForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055008);
  }
  return result;
}

unint64_t sub_233554148()
{
  unint64_t result;

  result = qword_256055010;
  if (!qword_256055010)
  {
    result = MEMORY[0x234934494](&unk_23365D70C, &type metadata for BankConnectService.Message.RevokeConnectionAuthorizationForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055010);
  }
  return result;
}

unint64_t sub_23355418C()
{
  unint64_t result;

  result = qword_256055018;
  if (!qword_256055018)
  {
    result = MEMORY[0x234934494](&unk_23365D6BC, &type metadata for BankConnectService.Message.LoadPaymentInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055018);
  }
  return result;
}

unint64_t sub_2335541D0()
{
  unint64_t result;

  result = qword_256055020;
  if (!qword_256055020)
  {
    result = MEMORY[0x234934494](&unk_23365D66C, &type metadata for BankConnectService.Message.LoadPaymentInfoForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055020);
  }
  return result;
}

unint64_t sub_233554214()
{
  unint64_t result;

  result = qword_256055028;
  if (!qword_256055028)
  {
    result = MEMORY[0x234934494](&unk_23365D61C, &type metadata for BankConnectService.Message.PostOfflineLabItemsToURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055028);
  }
  return result;
}

unint64_t sub_233554258()
{
  unint64_t result;

  result = qword_256055030;
  if (!qword_256055030)
  {
    result = MEMORY[0x234934494](&unk_23365D5CC, &type metadata for BankConnectService.Message.SetOfflineLabSharingPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055030);
  }
  return result;
}

unint64_t sub_23355429C()
{
  unint64_t result;

  result = qword_256055038;
  if (!qword_256055038)
  {
    result = MEMORY[0x234934494](&unk_23365D57C, &type metadata for BankConnectService.Message.OfflineLabSharingPreferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055038);
  }
  return result;
}

unint64_t sub_2335542E0()
{
  unint64_t result;

  result = qword_256055040;
  if (!qword_256055040)
  {
    result = MEMORY[0x234934494](&unk_23365D52C, &type metadata for BankConnectService.Message.OfflineLabPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055040);
  }
  return result;
}

unint64_t sub_233554324()
{
  unint64_t result;

  result = qword_256055048;
  if (!qword_256055048)
  {
    result = MEMORY[0x234934494](&unk_23365D4DC, &type metadata for BankConnectService.Message.InitiateConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055048);
  }
  return result;
}

unint64_t sub_233554368()
{
  unint64_t result;

  result = qword_256055058;
  if (!qword_256055058)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAuthorizationSession.AuthSource, &type metadata for BankConnectAuthorizationSession.AuthSource);
    atomic_store(result, (unint64_t *)&qword_256055058);
  }
  return result;
}

unint64_t sub_2335543AC()
{
  unint64_t result;

  result = qword_256055060;
  if (!qword_256055060)
  {
    result = MEMORY[0x234934494](&unk_23365D48C, &type metadata for BankConnectService.Message.InstitutionForPaymentPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055060);
  }
  return result;
}

unint64_t sub_2335543F0()
{
  unint64_t result;

  result = qword_256055078;
  if (!qword_256055078)
  {
    result = MEMORY[0x234934494](&unk_23365D43C, &type metadata for BankConnectService.Message.RemoveLogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055078);
  }
  return result;
}

unint64_t sub_233554434()
{
  unint64_t result;

  result = qword_256055080;
  if (!qword_256055080)
  {
    result = MEMORY[0x234934494](&unk_23365D3EC, &type metadata for BankConnectService.Message.LogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055080);
  }
  return result;
}

unint64_t sub_233554478()
{
  unint64_t result;

  result = qword_256055088;
  if (!qword_256055088)
  {
    result = MEMORY[0x234934494](&unk_23365D39C, &type metadata for BankConnectService.Message.ScheduleHistoricalTransactionTaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055088);
  }
  return result;
}

unint64_t sub_2335544BC()
{
  unint64_t result;

  result = qword_256055090;
  if (!qword_256055090)
  {
    result = MEMORY[0x234934494](&unk_23365D34C, &type metadata for BankConnectService.Message.LoadGrantedAccountsForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055090);
  }
  return result;
}

unint64_t sub_233554500()
{
  unint64_t result;

  result = qword_256055098;
  if (!qword_256055098)
  {
    result = MEMORY[0x234934494](&unk_23365D2FC, &type metadata for BankConnectService.Message.DecryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055098);
  }
  return result;
}

unint64_t sub_233554544()
{
  unint64_t result;

  result = qword_2560550A0;
  if (!qword_2560550A0)
  {
    result = MEMORY[0x234934494](&unk_23365D2AC, &type metadata for BankConnectService.Message.EncryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550A0);
  }
  return result;
}

unint64_t sub_233554588()
{
  unint64_t result;

  result = qword_2560550A8;
  if (!qword_2560550A8)
  {
    result = MEMORY[0x234934494](&unk_23365D25C, &type metadata for BankConnectService.Message.CompleteConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550A8);
  }
  return result;
}

unint64_t sub_2335545CC()
{
  unint64_t result;

  result = qword_2560550C8;
  if (!qword_2560550C8)
  {
    result = MEMORY[0x234934494](&unk_23365D20C, &type metadata for BankConnectService.Message.UpdateConsentStatusForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550C8);
  }
  return result;
}

unint64_t sub_233554610()
{
  unint64_t result;

  result = qword_2560550D0;
  if (!qword_2560550D0)
  {
    result = MEMORY[0x234934494](&unk_23365D1BC, &type metadata for BankConnectService.Message.GetConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550D0);
  }
  return result;
}

unint64_t sub_233554654()
{
  unint64_t result;

  result = qword_2560550D8;
  if (!qword_2560550D8)
  {
    result = MEMORY[0x234934494](&unk_23365D16C, &type metadata for BankConnectService.Message.ConnectUnlinkedAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550D8);
  }
  return result;
}

unint64_t sub_233554698()
{
  unint64_t result;

  result = qword_2560550E0;
  if (!qword_2560550E0)
  {
    result = MEMORY[0x234934494](&unk_23365D11C, &type metadata for BankConnectService.Message.ConnectAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550E0);
  }
  return result;
}

unint64_t sub_2335546DC()
{
  unint64_t result;

  result = qword_2560550F8;
  if (!qword_2560550F8)
  {
    result = MEMORY[0x234934494](&unk_23365D0CC, &type metadata for BankConnectService.Message.LoadAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560550F8);
  }
  return result;
}

unint64_t sub_233554720()
{
  unint64_t result;

  result = qword_256055100;
  if (!qword_256055100)
  {
    result = MEMORY[0x234934494](&unk_23365D07C, &type metadata for BankConnectService.Message.LoadAccountForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055100);
  }
  return result;
}

uint64_t BankConnectService.Message.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  _QWORD v115[33];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  char *v220;

  v210 = a2;
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055108);
  v171 = *(_QWORD *)(v214 - 8);
  MEMORY[0x24BDAC7A8](v214);
  v206 = (char *)v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055110);
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173);
  v207 = (char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055118);
  v212 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v208 = (char *)v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055120);
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v204 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055128);
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v203 = (char *)v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055130);
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v205 = (char *)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055138);
  v163 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v202 = (char *)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055140);
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v201 = (char *)v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055148);
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v200 = (char *)v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055150);
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v199 = (char *)v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055158);
  v154 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v198 = (char *)v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055160);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v196 = (char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055168);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v195 = (char *)v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055170);
  v147 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v194 = (char *)v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055178);
  v146 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v193 = (char *)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055180);
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v192 = (char *)v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055188);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v190 = (char *)v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055190);
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v188 = (char *)v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055198);
  v115[29] = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v197 = (char *)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551A0);
  v138 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v189 = (char *)v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551A8);
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v187 = (char *)v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551B0);
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v186 = (char *)v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551B8);
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v185 = (char *)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551C0);
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v184 = (char *)v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551C8);
  v126 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v183 = (char *)v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551D0);
  v125 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v182 = (char *)v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551D8);
  v115[28] = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v191 = (char *)v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551E0);
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v181 = (char *)v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551E8);
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v180 = (char *)v115 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551F0);
  v211 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v179 = (char *)v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560551F8);
  v115[27] = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v209 = (char *)v115 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055200);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v178 = (char *)v115 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055208);
  v115[32] = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v177 = (char *)v115 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055210);
  v216 = *(_QWORD *)(v36 - 8);
  v217 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v220 = (char *)v115 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for BankConnectService.Message();
  v38 = MEMORY[0x24BDAC7A8](v215);
  v115[31] = (char *)v115 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v213 = (char *)v115 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v115[26] = (char *)v115 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v115[25] = (char *)v115 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v115[7] = (char *)v115 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v115[24] = (char *)v115 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v115[23] = (char *)v115 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v115[22] = (char *)v115 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v115[21] = (char *)v115 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v115[20] = (char *)v115 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v115[18] = (char *)v115 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v115[19] = (char *)v115 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v115[17] = (char *)v115 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v115[30] = (char *)v115 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v115[15] = (char *)v115 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v176 = (char *)v115 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v115[16] = (char *)v115 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v115[14] = (char *)v115 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v115[12] = (char *)v115 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v115[13] = (char *)v115 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v115[10] = (char *)v115 - v79;
  v80 = MEMORY[0x24BDAC7A8](v78);
  v115[9] = (char *)v115 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v115[11] = (char *)v115 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v119 = (char *)v115 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v115[8] = (char *)v115 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v90 = (char *)v115 - v89;
  v91 = MEMORY[0x24BDAC7A8](v88);
  v93 = (char *)v115 - v92;
  v94 = MEMORY[0x24BDAC7A8](v91);
  v96 = (char *)v115 - v95;
  v97 = MEMORY[0x24BDAC7A8](v94);
  v99 = (char *)v115 - v98;
  v100 = MEMORY[0x24BDAC7A8](v97);
  v102 = (char *)v115 - v101;
  MEMORY[0x24BDAC7A8](v100);
  v104 = (char *)v115 - v103;
  v105 = a1[3];
  v218 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v105);
  sub_233553DD4();
  v106 = v219;
  sub_23361F3EC();
  if (!v106)
  {
    v115[1] = v102;
    v115[2] = v99;
    v115[4] = v93;
    v115[3] = v90;
    v115[5] = v96;
    v219 = 0;
    v107 = v215;
    v115[6] = v104;
    v108 = v220;
    v109 = sub_23361F098();
    if (*(_QWORD *)(v109 + 16) == 1)
      __asm { BR              X10 }
    v110 = sub_23361EE10();
    swift_allocError();
    v112 = v111;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v112 = v107;
    v113 = v217;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v110 - 8) + 104))(v112, *MEMORY[0x24BEE26D0], v110);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v216 + 8))(v108, v113);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v218);
}

void sub_233555890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v1 - 128) = 1;
  sub_2335546DC();
  v2 = *(_QWORD *)(v1 - 472);
  v3 = v0;
  v5 = *(_QWORD *)(v1 - 144);
  v4 = *(_QWORD *)(v1 - 136);
  sub_23361EFA8();
  if (!v5)
  {
    sub_2331723E8();
    v6 = *(_QWORD *)(v1 - 952);
    sub_23361F068();
    v7 = *(_QWORD *)(v1 - 168);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 960) + 8))(v2, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v7 + 8))(*(_QWORD *)(v1 - 136), v3);
    v8 = *(_QWORD *)(v1 - 112);
    v9 = *(_QWORD *)(v1 - 104);
    v10 = *(_QWORD *)(v1 - 1216);
    *(_OWORD *)v10 = *(_OWORD *)(v1 - 128);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = v9;
    swift_storeEnumTagMultiPayload();
    sub_233168580(v10, *(_QWORD *)(v1 - 1184), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    JUMPOUT(0x23355774CLL);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v4, v0);
  JUMPOUT(0x233555868);
}

void sub_23355592C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v2 - 128) = 2;
  sub_233554698();
  v3 = *(_QWORD *)(v2 - 144);
  sub_23361EFA8();
  if (v3)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x233556EA4);
  }
  *(_QWORD *)(v2 - 144) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560550E8);
  *(_BYTE *)(v2 - 128) = 0;
  sub_2331B1A14(&qword_256055248, &qword_2560550E8, (uint64_t)&protocol conformance descriptor for XPCSecureCodingCodableWrapper<A>);
  v4 = *(_QWORD *)(v2 - 1192);
  sub_23361F068();
  *(_BYTE *)(v2 - 128) = 1;
  sub_2331723E8();
  sub_23361EFFC();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
  *(_QWORD *)(v2 - 192) = v5;
  v6 = v4 + *(int *)(v5 + 64);
  type metadata accessor for Institution(0);
  *(_BYTE *)(v2 - 128) = 2;
  sub_233167C58(&qword_256047E48, type metadata accessor for Institution, (uint64_t)&protocol conformance descriptor for Institution);
  *(_QWORD *)(v2 - 184) = v6;
  sub_23361F068();
  *(_BYTE *)(v2 - 128) = 3;
  *(_BYTE *)(*(_QWORD *)(v2 - 1192) + *(int *)(*(_QWORD *)(v2 - 192) + 80)) = sub_23361F038() & 1;
  *(_BYTE *)(v2 - 128) = 4;
  v7 = sub_23361F038();
  v8 = *(int *)(*(_QWORD *)(v2 - 192) + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 1016) + 8))(*(_QWORD *)(v2 - 224), *(_QWORD *)(v2 - 496));
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(*(_QWORD *)(v2 - 136), v1);
  v9 = v7 & 1;
  v10 = *(_QWORD *)(v2 - 1192);
  *(_BYTE *)(v10 + v8) = v9;
  swift_storeEnumTagMultiPayload();
  v11 = v10;
  v12 = *(_QWORD *)(v2 - 1184);
  sub_233168580(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  sub_233168580(v12, *(_QWORD *)(v2 - 216), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  JUMPOUT(0x233555868);
}

void sub_233555980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 128) = 3;
  sub_233554654();
  v3 = *(_QWORD *)(v2 - 464);
  v4 = *(_QWORD *)(v2 - 144);
  sub_23361EFA8();
  if (v4)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x233555860);
  }
  type metadata accessor for Institution(0);
  sub_233167C58(&qword_256047E48, type metadata accessor for Institution, (uint64_t)&protocol conformance descriptor for Institution);
  v5 = *(_QWORD *)(v2 - 1200);
  v6 = *(_QWORD *)(v2 - 936);
  sub_23361F068();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(*(_QWORD *)(v2 - 136), v1);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v2 - 1184);
  sub_233168580(v5, v7, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  sub_233168580(v7, *(_QWORD *)(v2 - 216), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  JUMPOUT(0x233555868);
}

void sub_2335559E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v1 - 128) = 4;
  sub_233554610();
  v2 = *(_QWORD *)(v1 - 456);
  v3 = *(_QWORD *)(v1 - 144);
  sub_23361EFA8();
  if (!v3)
  {
    sub_2331723E8();
    v4 = *(_QWORD *)(v1 - 920);
    sub_23361F068();
    v5 = *(_QWORD *)(v1 - 168);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 928) + 8))(v2, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v1 - 136), v0);
    v6 = *(_QWORD *)(v1 - 112);
    v7 = *(_QWORD *)(v1 - 104);
    v8 = *(_QWORD *)(v1 - 1208);
    *(_OWORD *)v8 = *(_OWORD *)(v1 - 128);
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x233557414);
  }
  JUMPOUT(0x233555848);
}

void sub_233556970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v1 - 128) = 27;
  sub_233553FB0();
  v2 = *(_QWORD *)(v1 - 256);
  v3 = v0;
  v4 = *(_QWORD *)(v1 - 144);
  sub_23361EFA8();
  if (!v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
    *(_BYTE *)(v1 - 65) = 0;
    sub_233465608((unint64_t *)&qword_256042348, &qword_256042350, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
    v5 = *(_QWORD *)(v1 - 536);
    sub_23361F068();
    v6 = *(_QWORD *)(v1 - 168);
    v7 = *(_QWORD *)(v1 - 128);
    *(_BYTE *)(v1 - 65) = 1;
    v8 = sub_23361F038();
    *(_QWORD *)(v1 - 144) = 0;
    v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 544) + 8))(v2, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v6 + 8))(*(_QWORD *)(v1 - 136), v3);
    v10 = *(_QWORD *)(v1 - 1176);
    *(_QWORD *)v10 = v7;
    *(_BYTE *)(v10 + 8) = v9 & 1;
    swift_storeEnumTagMultiPayload();
    v11 = *(_QWORD *)(v1 - 1184);
    sub_233168580(v10, v11, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    sub_233168580(v11, *(_QWORD *)(v1 - 216), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    JUMPOUT(0x233555868);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x233556EA0);
}

void sub_233556A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  *(_BYTE *)(v1 - 128) = 28;
  sub_233553F6C();
  v2 = *(_QWORD *)(v1 - 272);
  v3 = v0;
  v5 = *(_QWORD *)(v1 - 144);
  v4 = *(_QWORD *)(v1 - 136);
  sub_23361EFA8();
  if (!v5)
  {
    v6 = *(_QWORD *)(v1 - 568);
    v7 = sub_23361F02C();
    v8 = *(_QWORD *)(v1 - 168);
    v9 = v7;
    v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 576) + 8))(v2, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v1 - 136), v3);
    v12 = *(uint64_t **)(v1 - 1032);
    *v12 = v9;
    v12[1] = v11;
    swift_storeEnumTagMultiPayload();
    sub_233168580((uint64_t)v12, *(_QWORD *)(v1 - 1184), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    JUMPOUT(0x23355774CLL);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v4, v0);
  JUMPOUT(0x233555868);
}

void sub_233556AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  *(_BYTE *)(v1 - 128) = 29;
  sub_233553F28();
  v2 = *(_QWORD *)(v1 - 264);
  v3 = v0;
  v5 = *(_QWORD *)(v1 - 144);
  v4 = *(_QWORD *)(v1 - 136);
  sub_23361EFA8();
  if (!v5)
  {
    v6 = *(_QWORD *)(v1 - 552);
    v7 = sub_23361F02C();
    v8 = *(_QWORD *)(v1 - 168);
    v9 = v7;
    v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 560) + 8))(v2, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v1 - 136), v3);
    v12 = *(uint64_t **)(v1 - 1024);
    *v12 = v9;
    v12[1] = v11;
    JUMPOUT(0x233557540);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v4, v0);
  JUMPOUT(0x233555868);
}

void sub_233556B48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);

  *(_BYTE *)(v2 - 128) = 30;
  sub_233553EE4();
  v3 = *(_QWORD *)(v2 - 232);
  v4 = v0;
  v5 = *(_QWORD *)(v2 - 144);
  sub_23361EFA8();
  if (v5)
    JUMPOUT(0x233556B88);
  *(_BYTE *)(v2 - 128) = 0;
  v6 = *(_QWORD *)(v2 - 504);
  v7 = sub_23361F02C();
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0);
  *v1 = v7;
  v1[1] = v9;
  sub_23361D634();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  *(_BYTE *)(v2 - 128) = 1;
  sub_233167C58(&qword_254244F00, v10, MEMORY[0x24BDCE960]);
  sub_23361F068();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v3, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(*(_QWORD *)(v2 - 136), v4);
  swift_storeEnumTagMultiPayload();
  sub_233168580((uint64_t)v1, *(_QWORD *)(v2 - 1184), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  JUMPOUT(0x23355774CLL);
}

void sub_233556BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v1 - 128) = 31;
  sub_233553EA0();
  v2 = *(_QWORD *)(v1 - 240);
  v3 = *(_QWORD *)(v1 - 144);
  sub_23361EFA8();
  if (v3)
    JUMPOUT(0x233556BF4);
  type metadata accessor for Institution(0);
  sub_233167C58(&qword_256047E48, type metadata accessor for Institution, (uint64_t)&protocol conformance descriptor for Institution);
  v4 = *(_QWORD *)(v1 - 512);
  sub_23361F068();
  v5 = *(_QWORD *)(v1 - 168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 520) + 8))(v2, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v1 - 136), v0);
  JUMPOUT(0x233557720);
}

void sub_233556C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 128) = 32;
  sub_233553E5C();
  v3 = *(_QWORD *)(v2 - 248);
  v5 = *(_QWORD *)(v2 - 144);
  v4 = *(_QWORD *)(v2 - 136);
  sub_23361EFA8();
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 528) + 8))(v3, v0);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v4, v1);
    JUMPOUT(0x233556C90);
  }
  JUMPOUT(0x233555848);
}

unint64_t sub_233557E28()
{
  unint64_t result;

  result = qword_256055220;
  if (!qword_256055220)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAuthorizationSession.AuthSource, &type metadata for BankConnectAuthorizationSession.AuthSource);
    atomic_store(result, (unint64_t *)&qword_256055220);
  }
  return result;
}

unint64_t sub_233557E70()
{
  unint64_t result;

  result = qword_256055250;
  if (!qword_256055250)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectServiceError.Code, &type metadata for BankConnectServiceError.Code);
    atomic_store(result, (unint64_t *)&qword_256055250);
  }
  return result;
}

uint64_t sub_233557EB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankConnectService.Message.init(from:)(a1, a2);
}

void sub_233557ECC(_QWORD *a1)
{
  BankConnectService.Message.encode(to:)(a1);
}

id sub_233557EE4(id result, id a2, char a3)
{
  if (a3 == 1)
    return result;
  if (!a3)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void destroy for BankConnectServiceError(uint64_t a1)
{
  sub_233550340(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FinanceKit23BankConnectServiceErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_233557EE4(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BankConnectServiceError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_233557EE4(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_233550340(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BankConnectServiceError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_233550340(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for BankConnectServiceError()
{
  return &type metadata for BankConnectServiceError;
}

ValueMetadata *type metadata accessor for BankConnectServiceError.Code()
{
  return &type metadata for BankConnectServiceError.Code;
}

uint64_t type metadata accessor for BankConnectService()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectService()
{
  return swift_lookUpClassMethod();
}

char *initializeBufferWithCopyOfBuffer for BankConnectService.Message(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  int *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  int *v172;
  unsigned int (**v173)(_QWORD *, uint64_t, int *);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  void (*v180)(char *, char *, uint64_t);
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  int *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  void (*v204)(char *, char *, uint64_t);
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(char *, char *, uint64_t);
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  void (*v226)(char *, char *, uint64_t);
  uint64_t v227;
  char *v228;
  uint64_t v229;
  int *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  int *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  char *v260;
  void (*v261)(char *, char *, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;
  int *__dstc;
  unsigned int (*__dstd)(char *, uint64_t, uint64_t);
  char *v267;
  char *v268;
  char *v269;
  uint64_t v270;
  unsigned int (*v271)(char *, uint64_t, uint64_t);
  int *v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  void (*v276)(char *, char *, uint64_t);
  char *v277;
  char *v278;
  int *v279;
  uint64_t v280;
  uint64_t v281;
  unsigned int (*v282)(char *, uint64_t, uint64_t);
  uint64_t v283;
  unsigned int (*v284)(char *, uint64_t, uint64_t);
  unsigned int (*v285)(char *, uint64_t, uint64_t);
  int *refreshed;
  int *v287;
  char *v288;
  void (*v289)(char *, char *, uint64_t);
  uint64_t v290;
  int *v291;
  char *v292;
  int *v293;
  char *v294;
  char *v295;
  void (**v296)(char *, _QWORD, uint64_t, int *);
  char *v297;
  char *v298;
  int *v299;
  int *v300;
  int *v301;
  int *v302;
  char *v303;
  char *v304;
  char *v305;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
      case 9u:
      case 0xBu:
      case 0xCu:
      case 0x11u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x1Au:
      case 0x1Bu:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 4u:
      case 0xAu:
      case 0x12u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
        v58 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v58;
        v59 = *((_QWORD *)a2 + 2);
        v60 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v59;
        *((_QWORD *)a1 + 3) = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v10 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v11 = *((_QWORD *)a2 + 2);
        v12 = v10;
        if (v11)
        {
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = v11;
          v13 = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v77 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 24) = v77;
        }
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
        v79 = *(int *)(v78 + 64);
        v80 = &a1[v79];
        v81 = &a2[v79];
        __dstc = (int *)v78;
        v270 = *(_QWORD *)&a2[v79 + 8];
        *(_QWORD *)v80 = *(_QWORD *)&a2[v79];
        *((_QWORD *)v80 + 1) = v270;
        v82 = *(_QWORD *)&a2[v79 + 24];
        *((_QWORD *)v80 + 2) = *(_QWORD *)&a2[v79 + 16];
        *((_QWORD *)v80 + 3) = v82;
        v80[32] = a2[v79 + 32];
        *((_WORD *)v80 + 17) = *(_WORD *)&a2[v79 + 34];
        v80[48] = a2[v79 + 48];
        *((_QWORD *)v80 + 5) = *(_QWORD *)&a2[v79 + 40];
        *(_OWORD *)(v80 + 56) = *(_OWORD *)&a2[v79 + 56];
        *((_QWORD *)v80 + 9) = *(_QWORD *)&a2[v79 + 72];
        v279 = (int *)type metadata accessor for Institution(0);
        v83 = v279[12];
        v84 = &v80[v83];
        v85 = &v81[v83];
        *(_DWORD *)&v80[v83] = *(_DWORD *)&v81[v83];
        refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v294 = v85;
        v86 = refreshed[6];
        v303 = v84;
        v259 = &v84[v86];
        v87 = &v85[v86];
        v88 = sub_23361D634();
        v89 = *(_QWORD *)(v88 - 8);
        v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v271 = v90;
        if (v90(v87, 1, v88))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v259, v87, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v259, v87, v88);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v259, 0, 1, v88);
        }
        v120 = v89;
        v121 = refreshed[7];
        v122 = &v303[v121];
        v123 = &v294[v121];
        v124 = v279;
        v256 = v120;
        v257 = v88;
        if (v271(&v294[v121], 1, v88))
        {
          v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v122, v123, v88);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v122, 0, 1, v88);
        }
        v163 = refreshed[8];
        v164 = &v303[v163];
        v165 = &v294[v163];
        *(_QWORD *)v164 = *(_QWORD *)v165;
        v164[8] = v165[8];
        v166 = refreshed[9];
        v167 = &v303[v166];
        v168 = &v294[v166];
        v167[8] = v168[8];
        *(_QWORD *)v167 = *(_QWORD *)v168;
        v80[v279[13]] = v81[v279[13]];
        v80[v279[14]] = v81[v279[14]];
        v169 = v279[15];
        v170 = &v80[v169];
        v171 = &v81[v169];
        v172 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v173 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v172 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v173)[6](v171, 1, v172))
        {
          v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
        }
        else
        {
          v216 = *((_QWORD *)v171 + 1);
          *(_QWORD *)v170 = *(_QWORD *)v171;
          *((_QWORD *)v170 + 1) = v216;
          v217 = v172[5];
          v296 = (void (**)(char *, _QWORD, uint64_t, int *))v173;
          v304 = &v170[v217];
          v288 = &v171[v217];
          v218 = *(void (**)(char *, char *, uint64_t))(v256 + 16);
          swift_bridgeObjectRetain();
          v219 = v288;
          v289 = v218;
          v218(v304, v219, v257);
          v220 = v172[6];
          v305 = &v170[v220];
          v221 = &v171[v220];
          if (v271(&v171[v220], 1, v257))
          {
            v222 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v305, v221, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          else
          {
            v289(v305, v221, v257);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v305, 0, 1, v257);
          }
          v289(&v170[v172[7]], &v171[v172[7]], v257);
          v296[7](v170, 0, 1, v172);
          v124 = v279;
        }
        v80[v124[16]] = v81[v124[16]];
        v80[v124[17]] = v81[v124[17]];
        *(_QWORD *)&v80[v124[18]] = *(_QWORD *)&v81[v124[18]];
        *(_WORD *)&v80[v124[19]] = *(_WORD *)&v81[v124[19]];
        *(_OWORD *)&v80[v124[20]] = *(_OWORD *)&v81[v124[20]];
        a1[__dstc[20]] = a2[__dstc[20]];
        a1[__dstc[24]] = a2[__dstc[24]];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v14 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v14;
        v15 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v15;
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v291 = (int *)type metadata accessor for Institution(0);
        v16 = v291[12];
        v17 = &a1[v16];
        v18 = &a2[v16];
        *(_DWORD *)&a1[v16] = *(_DWORD *)&a2[v16];
        v299 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v19 = v299[6];
        v267 = v18;
        v275 = v17;
        __dst = &v17[v19];
        v20 = &v18[v19];
        v21 = sub_23361D634();
        v22 = *(_QWORD *)(v21 - 8);
        v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v282 = v23;
        if (v23(v20, 1, v21))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        v92 = v299[7];
        v93 = &v275[v92];
        v94 = &v267[v92];
        v95 = v291;
        if (v23(&v267[v92], 1, v21))
        {
          v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v93, v94, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v93, 0, 1, v21);
        }
        v126 = v299[8];
        v127 = &v275[v126];
        v128 = &v267[v126];
        *(_QWORD *)v127 = *(_QWORD *)v128;
        v127[8] = v128[8];
        v129 = v299[9];
        v130 = &v275[v129];
        v131 = &v267[v129];
        v130[8] = v131[8];
        *(_QWORD *)v130 = *(_QWORD *)v131;
        a1[v291[13]] = a2[v291[13]];
        a1[v291[14]] = a2[v291[14]];
        v132 = v291[15];
        v133 = &a1[v132];
        v134 = &a2[v132];
        v135 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v136 = *((_QWORD *)v135 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v136 + 48))(v134, 1, v135))
          goto LABEL_44;
        v175 = *((_QWORD *)v134 + 1);
        *(_QWORD *)v133 = *(_QWORD *)v134;
        *((_QWORD *)v133 + 1) = v175;
        v176 = v135[5];
        v177 = &v133[v176];
        v178 = v22;
        v179 = &v134[v176];
        v273 = v178;
        v280 = v136;
        v180 = *(void (**)(char *, char *, uint64_t))(v178 + 16);
        swift_bridgeObjectRetain();
        v180(v177, v179, v21);
        v181 = v135[6];
        v182 = &v133[v181];
        v183 = v21;
        v184 = &v134[v181];
        if (!v282(&v134[v181], 1, v183))
          goto LABEL_70;
        goto LABEL_58;
      case 6u:
        v25 = sub_23361D6A0();
        v26 = *(_QWORD *)(v25 - 8);
        v276 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
        v276(a1, a2, v25);
        v27 = (int *)type metadata accessor for BankConnectAuthorizationSession();
        v28 = v27[5];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = *((_QWORD *)v30 + 1);
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *((_QWORD *)v29 + 1) = v31;
        v32 = *((_QWORD *)v30 + 3);
        *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
        *((_QWORD *)v29 + 3) = v32;
        v33 = *((_QWORD *)v30 + 5);
        *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
        *((_QWORD *)v29 + 5) = v33;
        *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
        v34 = v27[6];
        v35 = &a1[v34];
        v36 = &a2[v34];
        v37 = *((_QWORD *)v36 + 1);
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = v37;
        v38 = v27[7];
        v292 = &a1[v38];
        v300 = v27;
        v39 = &a2[v38];
        v283 = v26;
        v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v255 = v25;
        if (v40(v39, 1, v25))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          memcpy(v292, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v276(v292, v39, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v292, 0, 1, v25);
        }
        v97 = v300[8];
        v98 = &a1[v97];
        v99 = &a2[v97];
        v100 = *(_QWORD *)&a2[v97 + 8];
        *(_QWORD *)v98 = *(_QWORD *)&a2[v97];
        *((_QWORD *)v98 + 1) = v100;
        v101 = *(_QWORD *)&a2[v97 + 24];
        *((_QWORD *)v98 + 2) = *(_QWORD *)&a2[v97 + 16];
        *((_QWORD *)v98 + 3) = v101;
        v98[32] = a2[v97 + 32];
        *((_WORD *)v98 + 17) = *(_WORD *)&a2[v97 + 34];
        *((_QWORD *)v98 + 5) = *(_QWORD *)&a2[v97 + 40];
        v98[48] = a2[v97 + 48];
        *(_OWORD *)(v98 + 56) = *(_OWORD *)&a2[v97 + 56];
        *((_QWORD *)v98 + 9) = *(_QWORD *)&a2[v97 + 72];
        v272 = (int *)type metadata accessor for Institution(0);
        v102 = v272[12];
        v103 = &v98[v102];
        v104 = &v99[v102];
        *(_DWORD *)&v98[v102] = *(_DWORD *)&v99[v102];
        v287 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v295 = v104;
        v105 = v287[6];
        v258 = &v103[v105];
        v260 = v103;
        v106 = &v104[v105];
        v107 = sub_23361D634();
        v108 = *(_QWORD *)(v107 - 8);
        v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dstd = v109;
        if (v109(v106, 1, v107))
        {
          v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v258, v106, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v258, v106, v107);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v258, 0, 1, v107);
        }
        v138 = v108;
        v139 = v287[7];
        v140 = &v260[v139];
        v141 = &v295[v139];
        v253 = v107;
        v254 = v138;
        if (__dstd(&v295[v139], 1, v107))
        {
          v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v140, v141, v107);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v140, 0, 1, v107);
        }
        v186 = v287[8];
        v187 = &v260[v186];
        v188 = &v295[v186];
        *(_QWORD *)v187 = *(_QWORD *)v188;
        v187[8] = v188[8];
        v189 = v287[9];
        v190 = &v260[v189];
        v191 = &v295[v189];
        v190[8] = v191[8];
        *(_QWORD *)v190 = *(_QWORD *)v191;
        v192 = v272;
        v98[v272[13]] = v99[v272[13]];
        v98[v272[14]] = v99[v272[14]];
        v193 = v272[15];
        v194 = &v98[v193];
        v195 = &v99[v193];
        v196 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v197 = *((_QWORD *)v196 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v197 + 48))(v195, 1, v196))
        {
          v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
        }
        else
        {
          v223 = *((_QWORD *)v195 + 1);
          *(_QWORD *)v194 = *(_QWORD *)v195;
          *((_QWORD *)v194 + 1) = v223;
          v224 = v196[5];
          v290 = v197;
          v297 = &v194[v224];
          v225 = &v195[v224];
          v226 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
          swift_bridgeObjectRetain();
          v261 = v226;
          v226(v297, v225, v253);
          v227 = v196[6];
          v298 = &v194[v227];
          v228 = &v195[v227];
          if (__dstd(&v195[v227], 1, v253))
          {
            v229 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v298, v228, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
          }
          else
          {
            v261(v298, v228, v253);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v298, 0, 1, v253);
          }
          v261(&v194[v196[7]], &v195[v196[7]], v253);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v290 + 56))(v194, 0, 1, v196);
          v192 = v272;
        }
        v98[v192[16]] = v99[v192[16]];
        v98[v192[17]] = v99[v192[17]];
        *(_QWORD *)&v98[v192[18]] = *(_QWORD *)&v99[v192[18]];
        *(_WORD *)&v98[v192[19]] = *(_WORD *)&v99[v192[19]];
        *(_OWORD *)&v98[v192[20]] = *(_OWORD *)&v99[v192[20]];
        v240 = v300[9];
        v241 = &a1[v240];
        v242 = &a2[v240];
        v243 = *((_QWORD *)v242 + 1);
        *(_QWORD *)v241 = *(_QWORD *)v242;
        *((_QWORD *)v241 + 1) = v243;
        *(_WORD *)&a1[v300[10]] = *(_WORD *)&a2[v300[10]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v244 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
        v245 = v244[12];
        v246 = &a1[v245];
        v247 = &a2[v245];
        type metadata accessor for BankConnectAuthorizationPayload(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)v246 = *(_QWORD *)v247;
          swift_bridgeObjectRetain();
        }
        else
        {
          v248 = sub_23361D340();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(v246, v247, v248);
        }
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)&a1[v244[16]] = *(_QWORD *)&a2[v244[16]];
        v249 = v244[20];
        v250 = &a1[v249];
        v251 = &a2[v249];
        v252 = type metadata accessor for BankConnectAuthorizationConfiguration();
        swift_retain();
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          v276(v250, v251, v255);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v43 = *(_QWORD *)a2;
        v42 = *((_QWORD *)a2 + 1);
        sub_2331D1374(v43, v42);
        *(_QWORD *)a1 = v43;
        *((_QWORD *)a1 + 1) = v42;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v44 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v45 = v44;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v46 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v46;
        v47 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v47;
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v293 = (int *)type metadata accessor for Institution(0);
        v48 = v293[12];
        v49 = &a1[v48];
        v50 = &a2[v48];
        *(_DWORD *)&a1[v48] = *(_DWORD *)&a2[v48];
        v301 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v51 = v301[6];
        v268 = v50;
        v277 = v49;
        __dsta = &v49[v51];
        v52 = &v50[v51];
        v53 = sub_23361D634();
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v284 = v55;
        if (v55(v52, 1, v53))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dsta, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dsta, v52, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dsta, 0, 1, v53);
        }
        v111 = v301[7];
        v112 = &v277[v111];
        v113 = &v268[v111];
        v114 = v293;
        if (v55(&v268[v111], 1, v53))
        {
          v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v112, v113, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v112, 0, 1, v53);
        }
        v143 = v301[8];
        v144 = &v277[v143];
        v145 = &v268[v143];
        *(_QWORD *)v144 = *(_QWORD *)v145;
        v144[8] = v145[8];
        v146 = v301[9];
        v147 = &v277[v146];
        v148 = &v268[v146];
        v147[8] = v148[8];
        *(_QWORD *)v147 = *(_QWORD *)v148;
        a1[v293[13]] = a2[v293[13]];
        a1[v293[14]] = a2[v293[14]];
        v149 = v293[15];
        v150 = &a1[v149];
        v151 = &a2[v149];
        v152 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v153 = *((_QWORD *)v152 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v153 + 48))(v151, 1, v152))
        {
          v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          v199 = *((_QWORD *)v151 + 1);
          *(_QWORD *)v150 = *(_QWORD *)v151;
          *((_QWORD *)v150 + 1) = v199;
          v200 = v152[5];
          v201 = &v150[v200];
          v202 = v54;
          v203 = &v151[v200];
          v274 = v202;
          v281 = v153;
          v204 = *(void (**)(char *, char *, uint64_t))(v202 + 16);
          swift_bridgeObjectRetain();
          v204(v201, v203, v53);
          v205 = v152[6];
          v206 = &v150[v205];
          v207 = v53;
          v208 = &v151[v205];
          if (v284(&v151[v205], 1, v207))
          {
            v209 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v206, v208, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
          }
          else
          {
            v204(v206, v208, v207);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v274 + 56))(v206, 0, 1, v207);
          }
          v204(&v150[v152[7]], &v151[v152[7]], v207);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v281 + 56))(v150, 0, 1, v152);
          v114 = v293;
        }
        a1[v114[16]] = a2[v114[16]];
        a1[v114[17]] = a2[v114[17]];
        *(_QWORD *)&a1[v114[18]] = *(_QWORD *)&a2[v114[18]];
        *(_WORD *)&a1[v114[19]] = *(_WORD *)&a2[v114[19]];
        *(_OWORD *)&a1[v114[20]] = *(_OWORD *)&a2[v114[20]];
        swift_bridgeObjectRetain();
        v230 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
        v231 = v230[12];
        v232 = &a1[v231];
        v233 = &a2[v231];
        v234 = *((_QWORD *)v233 + 1);
        *(_QWORD *)v232 = *(_QWORD *)v233;
        *((_QWORD *)v232 + 1) = v234;
        v235 = v230[16];
        v236 = &a1[v235];
        v237 = &a2[v235];
        v238 = type metadata accessor for BankConnectAuthorizationConfiguration();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
        }
        else
        {
          v239 = sub_23361D6A0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(v236, v237, v239);
          swift_storeEnumTagMultiPayload();
        }
        *(_WORD *)&a1[v230[20]] = *(_WORD *)&a2[v230[20]];
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        v57 = sub_23361D340();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1, a2, v57);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x19u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Cu:
        v61 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v61;
        swift_bridgeObjectRetain();
        v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Du:
        v66 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v66;
        v67 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v67;
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v291 = (int *)type metadata accessor for Institution(0);
        v68 = v291[12];
        v69 = &a1[v68];
        v70 = &a2[v68];
        *(_DWORD *)&a1[v68] = *(_DWORD *)&a2[v68];
        v302 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v71 = v302[6];
        v269 = v70;
        v278 = v69;
        __dstb = &v69[v71];
        v72 = &v70[v71];
        v73 = sub_23361D634();
        v74 = *(_QWORD *)(v73 - 8);
        v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v285 = v75;
        if (v75(v72, 1, v73))
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dstb, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dstb, v72, v73);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dstb, 0, 1, v73);
        }
        v116 = v302[7];
        v117 = &v278[v116];
        v118 = &v269[v116];
        v95 = v291;
        if (v75(&v269[v116], 1, v73))
        {
          v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v117, v118, v73);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v117, 0, 1, v73);
        }
        v155 = v302[8];
        v156 = &v278[v155];
        v157 = &v269[v155];
        *(_QWORD *)v156 = *(_QWORD *)v157;
        v156[8] = v157[8];
        v158 = v302[9];
        v159 = &v278[v158];
        v160 = &v269[v158];
        v159[8] = v160[8];
        *(_QWORD *)v159 = *(_QWORD *)v160;
        a1[v291[13]] = a2[v291[13]];
        a1[v291[14]] = a2[v291[14]];
        v161 = v291[15];
        v133 = &a1[v161];
        v134 = &a2[v161];
        v135 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v162 = *((_QWORD *)v135 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v162 + 48))(v134, 1, v135))
        {
LABEL_44:
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          v210 = *((_QWORD *)v134 + 1);
          *(_QWORD *)v133 = *(_QWORD *)v134;
          *((_QWORD *)v133 + 1) = v210;
          v211 = v135[5];
          v212 = &v133[v211];
          v213 = v74;
          v214 = &v134[v211];
          v273 = v213;
          v280 = v162;
          v180 = *(void (**)(char *, char *, uint64_t))(v213 + 16);
          swift_bridgeObjectRetain();
          v180(v212, v214, v73);
          v215 = v135[6];
          v182 = &v133[v215];
          v183 = v73;
          v184 = &v134[v215];
          if (v285(&v134[v215], 1, v183))
          {
LABEL_58:
            v185 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v182, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
          }
          else
          {
LABEL_70:
            v180(v182, v184, v183);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v273 + 56))(v182, 0, 1, v183);
          }
          v180(&v133[v135[7]], &v134[v135[7]], v183);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v280 + 56))(v133, 0, 1, v135);
          v95 = v291;
        }
        a1[v95[16]] = a2[v95[16]];
        a1[v95[17]] = a2[v95[17]];
        *(_QWORD *)&a1[v95[18]] = *(_QWORD *)&a2[v95[18]];
        *(_WORD *)&a1[v95[19]] = *(_WORD *)&a2[v95[19]];
        *(_OWORD *)&a1[v95[20]] = *(_OWORD *)&a2[v95[20]];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for BankConnectService.Message(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t refreshed;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  int *v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  int *v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
    case 7u:
    case 9u:
    case 0xBu:
    case 0xCu:
    case 0x11u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
      goto LABEL_22;
    case 1u:
    case 4u:
    case 0xAu:
    case 0x12u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    case 2u:

      if (*(_QWORD *)(a1 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v14 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8) + 64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = type metadata accessor for Institution(0);
      v16 = v14 + *(int *)(v15 + 48);
      refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v18 = v16 + *(int *)(refreshed + 24);
      v19 = sub_23361D634();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      if (!v21(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      v22 = v16 + *(int *)(refreshed + 28);
      if (!v21(v22, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
      v23 = v14 + *(int *)(v15 + 60);
      v24 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v24 - 1) + 48))(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        v25 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v25(v23 + v24[5], v19);
        v26 = v23 + v24[6];
        if (!v21(v26, 1, v19))
          v25(v26, v19);
        v25(v23 + v24[7], v19);
      }
      goto LABEL_22;
    case 3u:
    case 0x1Du:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = type metadata accessor for Institution(0);
      v3 = a1 + *(int *)(v2 + 48);
      v4 = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v5 = v3 + *(int *)(v4 + 24);
      v6 = sub_23361D634();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      if (!v8(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      v9 = v3 + *(int *)(v4 + 28);
      if (!v8(v9, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
      v10 = a1 + *(int *)(v2 + 60);
      v11 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
      {
        swift_bridgeObjectRelease();
        v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v12(v10 + v11[5], v6);
        v13 = v10 + v11[6];
        if (!v8(v13, 1, v6))
          v12(v13, v6);
        v12(v10 + v11[7], v6);
      }
LABEL_22:
      swift_bridgeObjectRelease();
      return;
    case 6u:
      v27 = sub_23361D6A0();
      v28 = *(_QWORD *)(v27 - 8);
      v66 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v66(a1, v27);
      v29 = type metadata accessor for BankConnectAuthorizationSession();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = a1 + *(int *)(v29 + 28);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v27))
        v66(v30, v27);
      v65 = v27;
      v31 = a1 + *(int *)(v29 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = type metadata accessor for Institution(0);
      v33 = v31 + *(int *)(v32 + 48);
      v34 = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v35 = v33 + *(int *)(v34 + 24);
      v36 = sub_23361D634();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
      if (!v38(v35, 1, v36))
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      v39 = v33 + *(int *)(v34 + 28);
      if (!v38(v39, 1, v36))
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v36);
      v40 = v31 + *(int *)(v32 + 60);
      v41 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v41 - 1) + 48))(v40, 1, v41))
      {
        swift_bridgeObjectRelease();
        v42 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
        v42(v40 + v41[5], v36);
        v43 = v40 + v41[6];
        if (!v38(v43, 1, v36))
          v42(v43, v36);
        v42(v40 + v41[7], v36);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
      v45 = a1 + *(int *)(v44 + 48);
      type metadata accessor for BankConnectAuthorizationPayload(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v63 = sub_23361D340();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v45, v63);
      }
      swift_release();
      v64 = a1 + *(int *)(v44 + 80);
      type metadata accessor for BankConnectAuthorizationConfiguration();
      if (swift_getEnumCaseMultiPayload() > 1)
        return;
      v62 = v64;
      v60 = v65;
      v61 = v66;
      break;
    case 8u:
      sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      return;
    case 0xDu:

      return;
    case 0xEu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = type metadata accessor for Institution(0);
      v47 = a1 + *(int *)(v46 + 48);
      v48 = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v49 = v47 + *(int *)(v48 + 24);
      v50 = sub_23361D634();
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      if (!v52(v49, 1, v50))
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
      v53 = v47 + *(int *)(v48 + 28);
      if (!v52(v53, 1, v50))
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v50);
      v54 = a1 + *(int *)(v46 + 60);
      v55 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v55 - 1) + 48))(v54, 1, v55))
      {
        swift_bridgeObjectRelease();
        v56 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        v56(v54 + v55[5], v50);
        v57 = v54 + v55[6];
        if (!v52(v57, 1, v50))
          v56(v57, v50);
        v56(v54 + v55[7], v50);
      }
      swift_bridgeObjectRelease();
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
      swift_bridgeObjectRelease();
      a1 += *(int *)(v58 + 64);
      type metadata accessor for BankConnectAuthorizationConfiguration();
      if (swift_getEnumCaseMultiPayload() > 1)
        return;
      v59 = sub_23361D6A0();
LABEL_49:
      v60 = v59;
      v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8);
      v62 = a1;
      break;
    case 0x10u:
      v59 = sub_23361D340();
      goto LABEL_49;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
      v59 = sub_23361D634();
      goto LABEL_49;
    default:
      return;
  }
  v61(v62, v60);
}

char *initializeWithCopy for BankConnectService.Message(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  int *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  void (*v176)(char *, char *, uint64_t);
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  int *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  void (*v200)(char *, char *, uint64_t);
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  void (*v215)(char *, char *, uint64_t);
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  void (*v222)(char *, char *, uint64_t);
  uint64_t v223;
  char *v224;
  uint64_t v225;
  int *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  int *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  void (*v259)(char *, char *, uint64_t);
  void (*v260)(char *, char *, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;
  int *__dstc;
  unsigned int (*__dstd)(char *, uint64_t, uint64_t);
  char *v266;
  char *v267;
  char *v268;
  uint64_t v269;
  unsigned int (*v270)(char *, uint64_t, uint64_t);
  int *v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  void (*v275)(char *, char *, uint64_t);
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  unsigned int (*v280)(char *, uint64_t, uint64_t);
  uint64_t v281;
  unsigned int (*v282)(char *, uint64_t, uint64_t);
  unsigned int (*v283)(char *, uint64_t, uint64_t);
  int *v284;
  int *v285;
  uint64_t v286;
  int *v287;
  char *v288;
  int *v289;
  int *refreshed;
  char *v291;
  char *v292;
  char *v293;
  int *v294;
  int *v295;
  int *v296;
  int *v297;
  char *v298;
  char *v299;
  char *v300;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
    case 9u:
    case 0xBu:
    case 0xCu:
    case 0x11u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x1Au:
    case 0x1Bu:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      swift_bridgeObjectRetain();
      goto LABEL_88;
    case 1u:
    case 4u:
    case 0xAu:
    case 0x12u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
      v55 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v55;
      v56 = *((_QWORD *)a2 + 2);
      v57 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v56;
      *((_QWORD *)a1 + 3) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_88;
    case 2u:
      v7 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = *((_QWORD *)a2 + 2);
      v9 = v7;
      if (v8)
      {
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v8;
        v10 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v74 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = v74;
      }
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
      v76 = *(int *)(v75 + 64);
      v77 = &a1[v76];
      v78 = &a2[v76];
      __dstc = (int *)v75;
      v269 = *(_QWORD *)&a2[v76 + 8];
      *(_QWORD *)v77 = *(_QWORD *)&a2[v76];
      *((_QWORD *)v77 + 1) = v269;
      v79 = *(_QWORD *)&a2[v76 + 24];
      *((_QWORD *)v77 + 2) = *(_QWORD *)&a2[v76 + 16];
      *((_QWORD *)v77 + 3) = v79;
      v77[32] = a2[v76 + 32];
      *((_WORD *)v77 + 17) = *(_WORD *)&a2[v76 + 34];
      v77[48] = a2[v76 + 48];
      *((_QWORD *)v77 + 5) = *(_QWORD *)&a2[v76 + 40];
      *(_OWORD *)(v77 + 56) = *(_OWORD *)&a2[v76 + 56];
      *((_QWORD *)v77 + 9) = *(_QWORD *)&a2[v76 + 72];
      v284 = (int *)type metadata accessor for Institution(0);
      v80 = v284[12];
      v81 = &v77[v80];
      v82 = &v78[v80];
      *(_DWORD *)&v77[v80] = *(_DWORD *)&v78[v80];
      refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v298 = v82;
      v83 = refreshed[6];
      v255 = &v81[v83];
      v257 = v81;
      v84 = &v82[v83];
      v85 = sub_23361D634();
      v86 = *(_QWORD *)(v85 - 8);
      v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v270 = v87;
      if (v87(v84, 1, v85))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v255, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v255, v84, v85);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v255, 0, 1, v85);
      }
      v117 = refreshed[7];
      v118 = &v257[v117];
      v119 = &v298[v117];
      v120 = v284;
      v253 = v85;
      v254 = v86;
      if (v270(&v298[v117], 1, v85))
      {
        v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v118, v119, v85);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v118, 0, 1, v85);
      }
      v159 = refreshed[8];
      v160 = &v257[v159];
      v161 = &v298[v159];
      *(_QWORD *)v160 = *(_QWORD *)v161;
      v160[8] = v161[8];
      v162 = refreshed[9];
      v163 = &v257[v162];
      v164 = &v298[v162];
      v163[8] = v164[8];
      *(_QWORD *)v163 = *(_QWORD *)v164;
      v77[v284[13]] = v78[v284[13]];
      v77[v284[14]] = v78[v284[14]];
      v165 = v284[15];
      v166 = &v77[v165];
      v167 = &v78[v165];
      v168 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v169 = *((_QWORD *)v168 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v169 + 48))(v167, 1, v168))
      {
        v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
      }
      else
      {
        v212 = *((_QWORD *)v167 + 1);
        *(_QWORD *)v166 = *(_QWORD *)v167;
        *((_QWORD *)v166 + 1) = v212;
        v213 = v168[5];
        v299 = &v166[v213];
        v214 = &v167[v213];
        v215 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        swift_bridgeObjectRetain();
        v259 = v215;
        v215(v299, v214, v253);
        v216 = v168[6];
        v300 = &v166[v216];
        v217 = &v167[v216];
        if (v270(&v167[v216], 1, v253))
        {
          v218 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v300, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
        }
        else
        {
          v259(v300, v217, v253);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v300, 0, 1, v253);
        }
        v259(&v166[v168[7]], &v167[v168[7]], v253);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v169 + 56))(v166, 0, 1, v168);
        v120 = v284;
      }
      v77[v120[16]] = v78[v120[16]];
      v77[v120[17]] = v78[v120[17]];
      *(_QWORD *)&v77[v120[18]] = *(_QWORD *)&v78[v120[18]];
      *(_WORD *)&v77[v120[19]] = *(_WORD *)&v78[v120[19]];
      *(_OWORD *)&v77[v120[20]] = *(_OWORD *)&v78[v120[20]];
      a1[__dstc[20]] = a2[__dstc[20]];
      a1[__dstc[24]] = a2[__dstc[24]];
      swift_bridgeObjectRetain();
      goto LABEL_88;
    case 3u:
      v11 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v11;
      v12 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v12;
      a1[32] = a2[32];
      *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v287 = (int *)type metadata accessor for Institution(0);
      v13 = v287[12];
      v14 = &a1[v13];
      v15 = &a2[v13];
      *(_DWORD *)&a1[v13] = *(_DWORD *)&a2[v13];
      v294 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v16 = v294[6];
      v266 = v15;
      v274 = v14;
      __dst = &v14[v16];
      v17 = &v15[v16];
      v18 = sub_23361D634();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v280 = v20;
      if (v20(v17, 1, v18))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      v89 = v294[7];
      v90 = &v274[v89];
      v91 = &v266[v89];
      v92 = v287;
      if (v20(&v266[v89], 1, v18))
      {
        v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v90, v91, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v90, 0, 1, v18);
      }
      v122 = v294[8];
      v123 = &v274[v122];
      v124 = &v266[v122];
      *(_QWORD *)v123 = *(_QWORD *)v124;
      v123[8] = v124[8];
      v125 = v294[9];
      v126 = &v274[v125];
      v127 = &v266[v125];
      v126[8] = v127[8];
      *(_QWORD *)v126 = *(_QWORD *)v127;
      a1[v287[13]] = a2[v287[13]];
      a1[v287[14]] = a2[v287[14]];
      v128 = v287[15];
      v129 = &a1[v128];
      v130 = &a2[v128];
      v131 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v132 = *((_QWORD *)v131 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v132 + 48))(v130, 1, v131))
        goto LABEL_41;
      v171 = *((_QWORD *)v130 + 1);
      *(_QWORD *)v129 = *(_QWORD *)v130;
      *((_QWORD *)v129 + 1) = v171;
      v172 = v131[5];
      v173 = &v129[v172];
      v174 = v19;
      v175 = &v130[v172];
      v272 = v174;
      v278 = v132;
      v176 = *(void (**)(char *, char *, uint64_t))(v174 + 16);
      swift_bridgeObjectRetain();
      v176(v173, v175, v18);
      v177 = v131[6];
      v178 = &v129[v177];
      v179 = v18;
      v180 = &v130[v177];
      if (v280(&v130[v177], 1, v179))
        goto LABEL_55;
      goto LABEL_67;
    case 6u:
      v22 = sub_23361D6A0();
      v23 = *(_QWORD *)(v22 - 8);
      v275 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
      v275(a1, a2, v22);
      v24 = (int *)type metadata accessor for BankConnectAuthorizationSession();
      v25 = v24[5];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *((_QWORD *)v26 + 1) = v28;
      v29 = *((_QWORD *)v27 + 3);
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
      *((_QWORD *)v26 + 3) = v29;
      v30 = *((_QWORD *)v27 + 5);
      *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
      *((_QWORD *)v26 + 5) = v30;
      *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
      v31 = v24[6];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      v35 = v24[7];
      v288 = &a1[v35];
      v295 = v24;
      v36 = &a2[v35];
      v281 = v23;
      v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v252 = v22;
      if (v37(v36, 1, v22))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
        memcpy(v288, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v275(v288, v36, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v288, 0, 1, v22);
      }
      v94 = v295[8];
      v95 = &a1[v94];
      v96 = &a2[v94];
      v97 = *(_QWORD *)&a2[v94 + 8];
      *(_QWORD *)v95 = *(_QWORD *)&a2[v94];
      *((_QWORD *)v95 + 1) = v97;
      v98 = *(_QWORD *)&a2[v94 + 24];
      *((_QWORD *)v95 + 2) = *(_QWORD *)&a2[v94 + 16];
      *((_QWORD *)v95 + 3) = v98;
      v95[32] = a2[v94 + 32];
      *((_WORD *)v95 + 17) = *(_WORD *)&a2[v94 + 34];
      *((_QWORD *)v95 + 5) = *(_QWORD *)&a2[v94 + 40];
      v95[48] = a2[v94 + 48];
      *(_OWORD *)(v95 + 56) = *(_OWORD *)&a2[v94 + 56];
      *((_QWORD *)v95 + 9) = *(_QWORD *)&a2[v94 + 72];
      v271 = (int *)type metadata accessor for Institution(0);
      v99 = v271[12];
      v100 = &v95[v99];
      v101 = &v96[v99];
      *(_DWORD *)&v95[v99] = *(_DWORD *)&v96[v99];
      v285 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v291 = v101;
      v102 = v285[6];
      v256 = &v100[v102];
      v258 = v100;
      v103 = &v101[v102];
      v104 = sub_23361D634();
      v105 = *(_QWORD *)(v104 - 8);
      v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dstd = v106;
      if (v106(v103, 1, v104))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v256, v103, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v256, v103, v104);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v256, 0, 1, v104);
      }
      v134 = v105;
      v135 = v285[7];
      v136 = &v258[v135];
      v137 = &v291[v135];
      v250 = v104;
      v251 = v134;
      if (__dstd(&v291[v135], 1, v104))
      {
        v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v136, v137, v104);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v136, 0, 1, v104);
      }
      v182 = v285[8];
      v183 = &v258[v182];
      v184 = &v291[v182];
      *(_QWORD *)v183 = *(_QWORD *)v184;
      v183[8] = v184[8];
      v185 = v285[9];
      v186 = &v258[v185];
      v187 = &v291[v185];
      v186[8] = v187[8];
      *(_QWORD *)v186 = *(_QWORD *)v187;
      v188 = v271;
      v95[v271[13]] = v96[v271[13]];
      v95[v271[14]] = v96[v271[14]];
      v189 = v271[15];
      v190 = &v95[v189];
      v191 = &v96[v189];
      v192 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v193 = *((_QWORD *)v192 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v193 + 48))(v191, 1, v192))
      {
        v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
      }
      else
      {
        v219 = *((_QWORD *)v191 + 1);
        *(_QWORD *)v190 = *(_QWORD *)v191;
        *((_QWORD *)v190 + 1) = v219;
        v220 = v192[5];
        v286 = v193;
        v292 = &v190[v220];
        v221 = &v191[v220];
        v222 = *(void (**)(char *, char *, uint64_t))(v251 + 16);
        swift_bridgeObjectRetain();
        v260 = v222;
        v222(v292, v221, v250);
        v223 = v192[6];
        v293 = &v190[v223];
        v224 = &v191[v223];
        if (__dstd(&v191[v223], 1, v250))
        {
          v225 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v293, v224, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          v260(v293, v224, v250);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v293, 0, 1, v250);
        }
        v260(&v190[v192[7]], &v191[v192[7]], v250);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v286 + 56))(v190, 0, 1, v192);
        v188 = v271;
      }
      v95[v188[16]] = v96[v188[16]];
      v95[v188[17]] = v96[v188[17]];
      *(_QWORD *)&v95[v188[18]] = *(_QWORD *)&v96[v188[18]];
      *(_WORD *)&v95[v188[19]] = *(_WORD *)&v96[v188[19]];
      *(_OWORD *)&v95[v188[20]] = *(_OWORD *)&v96[v188[20]];
      v236 = v295[9];
      v237 = &a1[v236];
      v238 = &a2[v236];
      v239 = *((_QWORD *)v238 + 1);
      *(_QWORD *)v237 = *(_QWORD *)v238;
      *((_QWORD *)v237 + 1) = v239;
      *(_WORD *)&a1[v295[10]] = *(_WORD *)&a2[v295[10]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v240 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
      v241 = v240[12];
      v242 = &a1[v241];
      v243 = &a2[v241];
      type metadata accessor for BankConnectAuthorizationPayload(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)v242 = *(_QWORD *)v243;
        swift_bridgeObjectRetain();
      }
      else
      {
        v244 = sub_23361D340();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v242, v243, v244);
      }
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)&a1[v240[16]] = *(_QWORD *)&a2[v240[16]];
      v245 = v240[20];
      v246 = &a1[v245];
      v247 = &a2[v245];
      v248 = type metadata accessor for BankConnectAuthorizationConfiguration();
      swift_retain();
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
      }
      else
      {
        v275(v246, v247, v252);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_88;
    case 7u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_88;
    case 8u:
      v40 = *(_QWORD *)a2;
      v39 = *((_QWORD *)a2 + 1);
      sub_2331D1374(v40, v39);
      *(_QWORD *)a1 = v40;
      *((_QWORD *)a1 + 1) = v39;
      goto LABEL_88;
    case 0xDu:
      v41 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v42 = v41;
      goto LABEL_88;
    case 0xEu:
      v43 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v43;
      v44 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v44;
      a1[32] = a2[32];
      *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v289 = (int *)type metadata accessor for Institution(0);
      v45 = v289[12];
      v46 = &a1[v45];
      v47 = &a2[v45];
      *(_DWORD *)&a1[v45] = *(_DWORD *)&a2[v45];
      v296 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v48 = v296[6];
      v267 = v47;
      v276 = v46;
      __dsta = &v46[v48];
      v49 = &v47[v48];
      v50 = sub_23361D634();
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v282 = v52;
      if (v52(v49, 1, v50))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dsta, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dsta, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dsta, 0, 1, v50);
      }
      v108 = v296[7];
      v109 = &v276[v108];
      v110 = &v267[v108];
      v111 = v289;
      if (v52(&v267[v108], 1, v50))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v109, v110, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v109, 0, 1, v50);
      }
      v139 = v296[8];
      v140 = &v276[v139];
      v141 = &v267[v139];
      *(_QWORD *)v140 = *(_QWORD *)v141;
      v140[8] = v141[8];
      v142 = v296[9];
      v143 = &v276[v142];
      v144 = &v267[v142];
      v143[8] = v144[8];
      *(_QWORD *)v143 = *(_QWORD *)v144;
      a1[v289[13]] = a2[v289[13]];
      a1[v289[14]] = a2[v289[14]];
      v145 = v289[15];
      v146 = &a1[v145];
      v147 = &a2[v145];
      v148 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v149 = *((_QWORD *)v148 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v149 + 48))(v147, 1, v148))
      {
        v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
      }
      else
      {
        v195 = *((_QWORD *)v147 + 1);
        *(_QWORD *)v146 = *(_QWORD *)v147;
        *((_QWORD *)v146 + 1) = v195;
        v196 = v148[5];
        v197 = &v146[v196];
        v198 = v51;
        v199 = &v147[v196];
        v273 = v198;
        v279 = v149;
        v200 = *(void (**)(char *, char *, uint64_t))(v198 + 16);
        swift_bridgeObjectRetain();
        v200(v197, v199, v50);
        v201 = v148[6];
        v202 = &v146[v201];
        v203 = v50;
        v204 = &v147[v201];
        if (v282(&v147[v201], 1, v203))
        {
          v205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v202, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
        }
        else
        {
          v200(v202, v204, v203);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v273 + 56))(v202, 0, 1, v203);
        }
        v200(&v146[v148[7]], &v147[v148[7]], v203);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v279 + 56))(v146, 0, 1, v148);
        v111 = v289;
      }
      a1[v111[16]] = a2[v111[16]];
      a1[v111[17]] = a2[v111[17]];
      *(_QWORD *)&a1[v111[18]] = *(_QWORD *)&a2[v111[18]];
      *(_WORD *)&a1[v111[19]] = *(_WORD *)&a2[v111[19]];
      *(_OWORD *)&a1[v111[20]] = *(_OWORD *)&a2[v111[20]];
      swift_bridgeObjectRetain();
      v226 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
      v227 = v226[12];
      v228 = &a1[v227];
      v229 = &a2[v227];
      v230 = *((_QWORD *)v229 + 1);
      *(_QWORD *)v228 = *(_QWORD *)v229;
      *((_QWORD *)v228 + 1) = v230;
      v231 = v226[16];
      v232 = &a1[v231];
      v233 = &a2[v231];
      v234 = type metadata accessor for BankConnectAuthorizationConfiguration();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        memcpy(v232, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
      }
      else
      {
        v235 = sub_23361D6A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16))(v232, v233, v235);
        swift_storeEnumTagMultiPayload();
      }
      *(_WORD *)&a1[v226[20]] = *(_WORD *)&a2[v226[20]];
      goto LABEL_88;
    case 0x10u:
      v54 = sub_23361D340();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(a1, a2, v54);
      goto LABEL_88;
    case 0x19u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_88;
    case 0x1Cu:
      v58 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v58;
      swift_bridgeObjectRetain();
      v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
      v60 = &a1[v59];
      v61 = &a2[v59];
      v62 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      goto LABEL_88;
    case 0x1Du:
      v63 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v63;
      v64 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v64;
      a1[32] = a2[32];
      *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v287 = (int *)type metadata accessor for Institution(0);
      v65 = v287[12];
      v66 = &a1[v65];
      v67 = &a2[v65];
      *(_DWORD *)&a1[v65] = *(_DWORD *)&a2[v65];
      v297 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v68 = v297[6];
      v268 = v67;
      v277 = v66;
      __dstb = &v66[v68];
      v69 = &v67[v68];
      v70 = sub_23361D634();
      v71 = *(_QWORD *)(v70 - 8);
      v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v283 = v72;
      if (v72(v69, 1, v70))
      {
        v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dstb, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__dstb, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dstb, 0, 1, v70);
      }
      v113 = v297[7];
      v114 = &v277[v113];
      v115 = &v268[v113];
      v92 = v287;
      if (v72(&v268[v113], 1, v70))
      {
        v116 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v114, v115, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v114, 0, 1, v70);
      }
      v151 = v297[8];
      v152 = &v277[v151];
      v153 = &v268[v151];
      *(_QWORD *)v152 = *(_QWORD *)v153;
      v152[8] = v153[8];
      v154 = v297[9];
      v155 = &v277[v154];
      v156 = &v268[v154];
      v155[8] = v156[8];
      *(_QWORD *)v155 = *(_QWORD *)v156;
      a1[v287[13]] = a2[v287[13]];
      a1[v287[14]] = a2[v287[14]];
      v157 = v287[15];
      v129 = &a1[v157];
      v130 = &a2[v157];
      v131 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v158 = *((_QWORD *)v131 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v158 + 48))(v130, 1, v131))
      {
LABEL_41:
        v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        v206 = *((_QWORD *)v130 + 1);
        *(_QWORD *)v129 = *(_QWORD *)v130;
        *((_QWORD *)v129 + 1) = v206;
        v207 = v131[5];
        v208 = &v129[v207];
        v209 = v71;
        v210 = &v130[v207];
        v272 = v209;
        v278 = v158;
        v176 = *(void (**)(char *, char *, uint64_t))(v209 + 16);
        swift_bridgeObjectRetain();
        v176(v208, v210, v70);
        v211 = v131[6];
        v178 = &v129[v211];
        v179 = v70;
        v180 = &v130[v211];
        if (v283(&v130[v211], 1, v179))
        {
LABEL_55:
          v181 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v178, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
        }
        else
        {
LABEL_67:
          v176(v178, v180, v179);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v272 + 56))(v178, 0, 1, v179);
        }
        v176(&v129[v131[7]], &v130[v131[7]], v179);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v278 + 56))(v129, 0, 1, v131);
        v92 = v287;
      }
      a1[v92[16]] = a2[v92[16]];
      a1[v92[17]] = a2[v92[17]];
      *(_QWORD *)&a1[v92[18]] = *(_QWORD *)&a2[v92[18]];
      *(_WORD *)&a1[v92[19]] = *(_WORD *)&a2[v92[19]];
      *(_OWORD *)&a1[v92[20]] = *(_OWORD *)&a2[v92[20]];
      swift_bridgeObjectRetain();
LABEL_88:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

char *assignWithCopy for BankConnectService.Message(char *a1, char *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _WORD *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  int *v118;
  unsigned int (**v119)(_QWORD *, uint64_t, int *);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  int *v137;
  unsigned int (**v138)(_QWORD *, uint64_t, int *);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  unsigned int (**v149)(_QWORD *, uint64_t, int *);
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  int *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  int *v162;
  unsigned int (**v163)(_QWORD *, uint64_t, int *);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  int *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  int *v187;
  unsigned int (**v188)(_QWORD *, uint64_t, int *);
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  void (*v194)(char *, char *, uint64_t);
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(void *, const void *, uint64_t);
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  void (*v213)(char *, char *, uint64_t);
  uint64_t v214;
  char *v215;
  uint64_t v216;
  int *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  int *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  void (**v243)(void *, const void *, uint64_t);
  char *v244;
  void (**v245)(char *, _QWORD, uint64_t, int *);
  char *v246;
  char *v247;
  void (**v248)(char *, _QWORD, uint64_t, int *);
  void (*v249)(char *, char *, uint64_t);
  int *v250;
  uint64_t v251;
  _WORD *v252;
  unsigned int (*v253)(char *, uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255;
  char *v256;
  void (*v257)(void *, const void *, uint64_t);
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);
  char *__dstb;
  char *__dstc;
  unsigned int (*__dstd)(char *, uint64_t, uint64_t);
  int *__dste;
  void (**__dstf)(char *, _QWORD, uint64_t, int *);
  void (**__dstg)(char *, _QWORD, uint64_t, int *);
  unsigned int (*v266)(char *, uint64_t, uint64_t);
  void (*v267)(char *, char *, uint64_t);
  unsigned int (*v268)(char *, uint64_t, uint64_t);
  unsigned int (*v269)(char *, uint64_t, uint64_t);
  int *v270;
  int *v271;
  char *v272;
  int *v273;
  int *refreshed;
  int *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  int *v280;
  int *v281;
  int *v282;
  int *v283;
  uint64_t v284;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 5u:
      case 9u:
      case 0xBu:
      case 0xCu:
      case 0x11u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x1Au:
      case 0x1Bu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_89;
      case 1u:
      case 4u:
      case 0xAu:
      case 0x12u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_89;
      case 2u:
        v6 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = *((_QWORD *)a2 + 2);
        v8 = v6;
        if (v7)
        {
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v61 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 24) = v61;
        }
        v250 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
        v62 = v250[16];
        v63 = &a1[v62];
        v64 = &a2[v62];
        *(_QWORD *)v63 = *(_QWORD *)&a2[v62];
        *((_QWORD *)v63 + 1) = *(_QWORD *)&a2[v62 + 8];
        *((_QWORD *)v63 + 2) = *(_QWORD *)&a2[v62 + 16];
        *((_QWORD *)v63 + 3) = *(_QWORD *)&a2[v62 + 24];
        v63[32] = a2[v62 + 32];
        *((_WORD *)v63 + 17) = *(_WORD *)&a2[v62 + 34];
        v65 = *(_QWORD *)&a2[v62 + 40];
        v63[48] = v64[48];
        *((_QWORD *)v63 + 5) = v65;
        *((_QWORD *)v63 + 7) = *((_QWORD *)v64 + 7);
        *((_QWORD *)v63 + 8) = *((_QWORD *)v64 + 8);
        *((_QWORD *)v63 + 9) = *((_QWORD *)v64 + 9);
        v270 = (int *)type metadata accessor for Institution(0);
        v66 = v270[12];
        v67 = &v63[v66];
        v68 = &v64[v66];
        *(_WORD *)v67 = *(_WORD *)&v64[v66];
        *((_WORD *)v67 + 1) = *(_WORD *)&v64[v66 + 2];
        refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v69 = refreshed[6];
        v252 = v67;
        v246 = &v67[v69];
        v241 = v68;
        v70 = &v68[v69];
        v71 = sub_23361D634();
        v72 = *(_QWORD *)(v71 - 8);
        v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v284 = v71;
        __dstd = v73;
        v243 = (void (**)(void *, const void *, uint64_t))v72;
        if (v73(v70, 1, v71))
        {
          v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v246, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v246, v70, v71);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v246, 0, 1, v71);
        }
        v102 = refreshed[7];
        v103 = v252;
        v104 = (char *)v252 + v102;
        v105 = &v241[v102];
        if (__dstd(&v241[v102], 1, v71))
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          v243[2](v104, v105, v71);
          v103 = v252;
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v243[7])(v104, 0, 1, v71);
        }
        v150 = refreshed[8];
        v151 = (uint64_t)v103 + v150;
        v152 = &v241[v150];
        v153 = *(_QWORD *)v152;
        *(_BYTE *)(v151 + 8) = v152[8];
        *(_QWORD *)v151 = v153;
        v154 = refreshed[9];
        v155 = (uint64_t)v103 + v154;
        v156 = &v241[v154];
        v157 = *(_QWORD *)v156;
        *(_BYTE *)(v155 + 8) = v156[8];
        *(_QWORD *)v155 = v157;
        v158 = v270;
        v63[v270[13]] = v64[v270[13]];
        v63[v270[14]] = v64[v270[14]];
        v159 = v270[15];
        v160 = &v63[v159];
        v161 = &v64[v159];
        v162 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v163 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v162 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v163)[6](v161, 1, v162))
        {
          v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
        }
        else
        {
          v248 = (void (**)(char *, _QWORD, uint64_t, int *))v163;
          *(_QWORD *)v160 = *(_QWORD *)v161;
          *((_QWORD *)v160 + 1) = *((_QWORD *)v161 + 1);
          v205 = v162[5];
          v276 = &v160[v205];
          v256 = &v161[v205];
          v206 = v243[2];
          swift_bridgeObjectRetain();
          v207 = v256;
          v257 = v206;
          v206(v276, v207, v284);
          v208 = v162[6];
          v277 = &v160[v208];
          v209 = &v161[v208];
          if (__dstd(&v161[v208], 1, v284))
          {
            v210 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v277, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
          }
          else
          {
            v257(v277, v209, v284);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v243[7])(v277, 0, 1, v284);
          }
          v257(&v160[v162[7]], &v161[v162[7]], v284);
          v248[7](v160, 0, 1, v162);
          v158 = v270;
        }
        v63[v158[16]] = v64[v158[16]];
        v63[v158[17]] = v64[v158[17]];
        *(_QWORD *)&v63[v158[18]] = *(_QWORD *)&v64[v158[18]];
        *(_WORD *)&v63[v158[19]] = *(_WORD *)&v64[v158[19]];
        *(_OWORD *)&v63[v158[20]] = *(_OWORD *)&v64[v158[20]];
        a1[v250[20]] = a2[v250[20]];
        a1[v250[24]] = a2[v250[24]];
        swift_bridgeObjectRetain();
        goto LABEL_89;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        v9 = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *((_QWORD *)a1 + 5) = v9;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v271 = (int *)type metadata accessor for Institution(0);
        v10 = v271[12];
        v11 = &a1[v10];
        v12 = &a2[v10];
        *(_WORD *)v11 = *(_WORD *)&a2[v10];
        *((_WORD *)v11 + 1) = *(_WORD *)&a2[v10 + 2];
        v280 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v13 = v280[6];
        __dst = &v11[v13];
        v14 = &v12[v13];
        v15 = sub_23361D634();
        v16 = *(_QWORD *)(v15 - 8);
        v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v266 = v17;
        if (v17(v14, 1, v15))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
        }
        v75 = v280[7];
        v76 = &v11[v75];
        v77 = &v12[v75];
        v78 = v271;
        if (v266(&v12[v75], 1, v15))
        {
          v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v76, v77, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v76, 0, 1, v15);
        }
        v107 = v280[8];
        v108 = &v11[v107];
        v109 = &v12[v107];
        v110 = *(_QWORD *)v109;
        v108[8] = v109[8];
        *(_QWORD *)v108 = v110;
        v111 = v280[9];
        v112 = &v11[v111];
        v113 = &v12[v111];
        v114 = *(_QWORD *)v113;
        v112[8] = v113[8];
        *(_QWORD *)v112 = v114;
        a1[v271[13]] = a2[v271[13]];
        a1[v271[14]] = a2[v271[14]];
        v115 = v271[15];
        v116 = &a1[v115];
        v117 = &a2[v115];
        v118 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v119 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v118 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v119)[6](v117, 1, v118))
          goto LABEL_42;
        *(_QWORD *)v116 = *(_QWORD *)v117;
        *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
        v165 = v118[5];
        v166 = &v116[v165];
        v167 = v16;
        v168 = &v117[v165];
        v254 = v167;
        __dstf = (void (**)(char *, _QWORD, uint64_t, int *))v119;
        v169 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
        swift_bridgeObjectRetain();
        v169(v166, v168, v15);
        v170 = v118[6];
        v171 = &v116[v170];
        v172 = v15;
        v173 = &v117[v170];
        if (v266(&v117[v170], 1, v172))
          goto LABEL_56;
        goto LABEL_68;
      case 6u:
        v19 = sub_23361D6A0();
        v20 = *(_QWORD **)(v19 - 8);
        v267 = (void (*)(char *, char *, uint64_t))v20[2];
        v267(a1, a2, v19);
        v21 = (int *)type metadata accessor for BankConnectAuthorizationSession();
        v22 = v21[5];
        v23 = &a1[v22];
        v24 = &a2[v22];
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
        *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
        *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
        *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
        *((_QWORD *)v23 + 5) = *((_QWORD *)v24 + 5);
        *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
        v25 = v21[6];
        v26 = &a1[v25];
        v27 = &a2[v25];
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
        v28 = v21[7];
        v272 = &a1[v28];
        v281 = v21;
        v29 = &a2[v28];
        __dsta = (void (**)(void *, _QWORD, uint64_t, uint64_t))v20;
        v30 = (unsigned int (*)(char *, uint64_t, uint64_t))v20[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v240 = v19;
        if (v30(v29, 1, v19))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          memcpy(v272, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v267(v272, v29, v19);
          __dsta[7](v272, 0, 1, v19);
        }
        v80 = v281[8];
        v81 = &a1[v80];
        v82 = &a2[v80];
        *(_QWORD *)v81 = *(_QWORD *)&a2[v80];
        *((_QWORD *)v81 + 1) = *(_QWORD *)&a2[v80 + 8];
        *((_QWORD *)v81 + 2) = *(_QWORD *)&a2[v80 + 16];
        *((_QWORD *)v81 + 3) = *(_QWORD *)&a2[v80 + 24];
        v81[32] = a2[v80 + 32];
        *((_WORD *)v81 + 17) = *(_WORD *)&a2[v80 + 34];
        v83 = *(_QWORD *)&a2[v80 + 40];
        v81[48] = v82[48];
        *((_QWORD *)v81 + 5) = v83;
        *((_QWORD *)v81 + 7) = *((_QWORD *)v82 + 7);
        *((_QWORD *)v81 + 8) = *((_QWORD *)v82 + 8);
        *((_QWORD *)v81 + 9) = *((_QWORD *)v82 + 9);
        __dste = (int *)type metadata accessor for Institution(0);
        v84 = __dste[12];
        v85 = &v81[v84];
        v86 = &v82[v84];
        *(_WORD *)v85 = *(_WORD *)&v82[v84];
        *((_WORD *)v85 + 1) = *(_WORD *)&v82[v84 + 2];
        v275 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v87 = v275[6];
        v244 = &v85[v87];
        v247 = v85;
        v242 = v86;
        v88 = &v86[v87];
        v89 = sub_23361D634();
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v253 = v91;
        v251 = v90;
        if (v91(v88, 1, v89))
        {
          v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v244, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v244, v88, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v244, 0, 1, v89);
        }
        v121 = v89;
        v122 = v275[7];
        v123 = &v247[v122];
        v124 = &v242[v122];
        v239 = v121;
        if (v91(&v242[v122], 1, v121))
        {
          v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v251 + 16))(v123, v124, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v123, 0, 1, v121);
        }
        v175 = v275[8];
        v176 = &v247[v175];
        v177 = &v242[v175];
        v178 = *(_QWORD *)v177;
        v176[8] = v177[8];
        *(_QWORD *)v176 = v178;
        v179 = v275[9];
        v180 = &v247[v179];
        v181 = &v242[v179];
        v182 = *(_QWORD *)v181;
        v180[8] = v181[8];
        *(_QWORD *)v180 = v182;
        v183 = __dste;
        v81[__dste[13]] = v82[__dste[13]];
        v81[__dste[14]] = v82[__dste[14]];
        v184 = __dste[15];
        v185 = &v81[v184];
        v186 = &v82[v184];
        v187 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v188 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v187 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v188)[6](v186, 1, v187))
        {
          v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        }
        else
        {
          v245 = (void (**)(char *, _QWORD, uint64_t, int *))v188;
          *(_QWORD *)v185 = *(_QWORD *)v186;
          *((_QWORD *)v185 + 1) = *((_QWORD *)v186 + 1);
          v211 = v187[5];
          v278 = &v185[v211];
          v212 = &v186[v211];
          v213 = *(void (**)(char *, char *, uint64_t))(v251 + 16);
          swift_bridgeObjectRetain();
          v249 = v213;
          v213(v278, v212, v239);
          v214 = v187[6];
          v279 = &v185[v214];
          v215 = &v186[v214];
          if (v253(&v186[v214], 1, v239))
          {
            v216 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v279, v215, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
          }
          else
          {
            v249(v279, v215, v239);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v279, 0, 1, v239);
          }
          v249(&v185[v187[7]], &v186[v187[7]], v239);
          v245[7](v185, 0, 1, v187);
          v183 = __dste;
        }
        v81[v183[16]] = v82[v183[16]];
        v81[v183[17]] = v82[v183[17]];
        *(_QWORD *)&v81[v183[18]] = *(_QWORD *)&v82[v183[18]];
        *(_WORD *)&v81[v183[19]] = *(_WORD *)&v82[v183[19]];
        *(_OWORD *)&v81[v183[20]] = *(_OWORD *)&v82[v183[20]];
        v226 = v281[9];
        v227 = &a1[v226];
        v228 = &a2[v226];
        *(_QWORD *)v227 = *(_QWORD *)v228;
        *((_QWORD *)v227 + 1) = *((_QWORD *)v228 + 1);
        *(_WORD *)&a1[v281[10]] = *(_WORD *)&a2[v281[10]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v229 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
        v230 = v229[12];
        v231 = &a1[v230];
        v232 = &a2[v230];
        type metadata accessor for BankConnectAuthorizationPayload(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)v231 = *(_QWORD *)v232;
          swift_bridgeObjectRetain();
        }
        else
        {
          v233 = sub_23361D340();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v231, v232, v233);
        }
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)&a1[v229[16]] = *(_QWORD *)&a2[v229[16]];
        v234 = v229[20];
        v235 = &a1[v234];
        v236 = &a2[v234];
        v237 = type metadata accessor for BankConnectAuthorizationConfiguration();
        swift_retain();
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
        }
        else
        {
          v267(v235, v236, v240);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_89;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_89;
      case 8u:
        v33 = *(_QWORD *)a2;
        v32 = *((_QWORD *)a2 + 1);
        sub_2331D1374(v33, v32);
        *(_QWORD *)a1 = v33;
        *((_QWORD *)a1 + 1) = v32;
        goto LABEL_89;
      case 0xDu:
        v34 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v35 = v34;
        goto LABEL_89;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        v36 = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *((_QWORD *)a1 + 5) = v36;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v273 = (int *)type metadata accessor for Institution(0);
        v37 = v273[12];
        v38 = &a1[v37];
        v39 = &a2[v37];
        *(_WORD *)v38 = *(_WORD *)&a2[v37];
        *((_WORD *)v38 + 1) = *(_WORD *)&a2[v37 + 2];
        v282 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v40 = v282[6];
        __dstb = &v38[v40];
        v41 = &v39[v40];
        v42 = sub_23361D634();
        v43 = *(_QWORD *)(v42 - 8);
        v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v268 = v44;
        if (v44(v41, 1, v42))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dstb, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dstb, v41, v42);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dstb, 0, 1, v42);
        }
        v93 = v282[7];
        v94 = &v38[v93];
        v95 = &v39[v93];
        v96 = v273;
        if (v268(&v39[v93], 1, v42))
        {
          v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v94, v95, v42);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v94, 0, 1, v42);
        }
        v126 = v282[8];
        v127 = &v38[v126];
        v128 = &v39[v126];
        v129 = *(_QWORD *)v128;
        v127[8] = v128[8];
        *(_QWORD *)v127 = v129;
        v130 = v282[9];
        v131 = &v38[v130];
        v132 = &v39[v130];
        v133 = *(_QWORD *)v132;
        v131[8] = v132[8];
        *(_QWORD *)v131 = v133;
        a1[v273[13]] = a2[v273[13]];
        a1[v273[14]] = a2[v273[14]];
        v134 = v273[15];
        v135 = &a1[v134];
        v136 = &a2[v134];
        v137 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v138 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v137 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v138)[6](v136, 1, v137))
        {
          v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v135 = *(_QWORD *)v136;
          *((_QWORD *)v135 + 1) = *((_QWORD *)v136 + 1);
          v190 = v137[5];
          v191 = &v135[v190];
          v192 = v43;
          v193 = &v136[v190];
          v255 = v192;
          __dstg = (void (**)(char *, _QWORD, uint64_t, int *))v138;
          v194 = *(void (**)(char *, char *, uint64_t))(v192 + 16);
          swift_bridgeObjectRetain();
          v194(v191, v193, v42);
          v195 = v137[6];
          v196 = &v135[v195];
          v197 = v42;
          v198 = &v136[v195];
          if (v268(&v136[v195], 1, v197))
          {
            v199 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v196, v198, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
          }
          else
          {
            v194(v196, v198, v197);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v196, 0, 1, v197);
          }
          v194(&v135[v137[7]], &v136[v137[7]], v197);
          __dstg[7](v135, 0, 1, v137);
          v96 = v273;
        }
        a1[v96[16]] = a2[v96[16]];
        a1[v96[17]] = a2[v96[17]];
        *(_QWORD *)&a1[v96[18]] = *(_QWORD *)&a2[v96[18]];
        *(_WORD *)&a1[v96[19]] = *(_WORD *)&a2[v96[19]];
        *(_OWORD *)&a1[v96[20]] = *(_OWORD *)&a2[v96[20]];
        swift_bridgeObjectRetain();
        v217 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
        v218 = v217[12];
        v219 = &a1[v218];
        v220 = &a2[v218];
        *(_QWORD *)v219 = *(_QWORD *)v220;
        *((_QWORD *)v219 + 1) = *((_QWORD *)v220 + 1);
        v221 = v217[16];
        v222 = &a1[v221];
        v223 = &a2[v221];
        v224 = type metadata accessor for BankConnectAuthorizationConfiguration();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
        }
        else
        {
          v225 = sub_23361D6A0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v222, v223, v225);
          swift_storeEnumTagMultiPayload();
        }
        *(_WORD *)&a1[v217[20]] = *(_WORD *)&a2[v217[20]];
        goto LABEL_89;
      case 0x10u:
        v46 = sub_23361D340();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(a1, a2, v46);
        goto LABEL_89;
      case 0x19u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_89;
      case 0x1Cu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
        v48 = &a1[v47];
        v49 = &a2[v47];
        v50 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
        goto LABEL_89;
      case 0x1Du:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        v51 = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *((_QWORD *)a1 + 5) = v51;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v271 = (int *)type metadata accessor for Institution(0);
        v52 = v271[12];
        v53 = &a1[v52];
        v54 = &a2[v52];
        *(_WORD *)v53 = *(_WORD *)&a2[v52];
        *((_WORD *)v53 + 1) = *(_WORD *)&a2[v52 + 2];
        v283 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v55 = v283[6];
        __dstc = &v53[v55];
        v56 = &v54[v55];
        v57 = sub_23361D634();
        v58 = *(_QWORD *)(v57 - 8);
        v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v269 = v59;
        if (v59(v56, 1, v57))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dstc, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dstc, v56, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dstc, 0, 1, v57);
        }
        v98 = v283[7];
        v99 = &v53[v98];
        v100 = &v54[v98];
        v78 = v271;
        if (v269(&v54[v98], 1, v57))
        {
          v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v99, v100, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v99, 0, 1, v57);
        }
        v140 = v283[8];
        v141 = &v53[v140];
        v142 = &v54[v140];
        v143 = *(_QWORD *)v142;
        v141[8] = v142[8];
        *(_QWORD *)v141 = v143;
        v144 = v283[9];
        v145 = &v53[v144];
        v146 = &v54[v144];
        v147 = *(_QWORD *)v146;
        v145[8] = v146[8];
        *(_QWORD *)v145 = v147;
        a1[v271[13]] = a2[v271[13]];
        a1[v271[14]] = a2[v271[14]];
        v148 = v271[15];
        v116 = &a1[v148];
        v117 = &a2[v148];
        v118 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v149 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v118 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v149)[6](v117, 1, v118))
        {
LABEL_42:
          v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v116 = *(_QWORD *)v117;
          *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
          v200 = v118[5];
          v201 = &v116[v200];
          v202 = v58;
          v203 = &v117[v200];
          v254 = v202;
          __dstf = (void (**)(char *, _QWORD, uint64_t, int *))v149;
          v169 = *(void (**)(char *, char *, uint64_t))(v202 + 16);
          swift_bridgeObjectRetain();
          v169(v201, v203, v57);
          v204 = v118[6];
          v171 = &v116[v204];
          v172 = v57;
          v173 = &v117[v204];
          if (v269(&v117[v204], 1, v172))
          {
LABEL_56:
            v174 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v171, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
          }
          else
          {
LABEL_68:
            v169(v171, v173, v172);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v171, 0, 1, v172);
          }
          v169(&v116[v118[7]], &v117[v118[7]], v172);
          __dstf[7](v116, 0, 1, v118);
          v78 = v271;
        }
        a1[v78[16]] = a2[v78[16]];
        a1[v78[17]] = a2[v78[17]];
        *(_QWORD *)&a1[v78[18]] = *(_QWORD *)&a2[v78[18]];
        *(_WORD *)&a1[v78[19]] = *(_WORD *)&a2[v78[19]];
        *(_OWORD *)&a1[v78[20]] = *(_OWORD *)&a2[v78[20]];
        swift_bridgeObjectRetain();
LABEL_89:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

char *initializeWithTake for BankConnectService.Message(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  void (*v193)(char *, char *, uint64_t);
  uint64_t v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  int *v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  int *v200;
  uint64_t v201;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  void (*__dstd)(char *, char *, uint64_t);
  void (*__dste)(char *, char *, uint64_t);
  int *v208;
  int *v209;
  char *v210;
  char *v211;
  char *v212;
  int *refreshed;
  unsigned int (*v214)(char *, uint64_t, uint64_t);
  unsigned int (*v215)(char *, uint64_t, uint64_t);
  unsigned int (*v216)(char *, uint64_t, uint64_t);
  int *v217;
  char *v218;
  char *v219;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      v200 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
      v6 = v200[16];
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = *(_OWORD *)&a2[v6 + 16];
      *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
      *((_OWORD *)v7 + 1) = v9;
      v7[32] = a2[v6 + 32];
      *((_WORD *)v7 + 17) = *(_WORD *)&a2[v6 + 34];
      *((_QWORD *)v7 + 5) = *(_QWORD *)&a2[v6 + 40];
      v7[48] = a2[v6 + 48];
      *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
      *((_QWORD *)v7 + 9) = *(_QWORD *)&a2[v6 + 72];
      v208 = (int *)type metadata accessor for Institution(0);
      v10 = v208[12];
      v11 = &v7[v10];
      v12 = &v8[v10];
      *(_DWORD *)&v7[v10] = *(_DWORD *)&v8[v10];
      refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v13 = refreshed[6];
      __dst = &v11[v13];
      v14 = &v12[v13];
      v15 = sub_23361D634();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v198 = v16;
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v70 = refreshed[7];
      v71 = &v11[v70];
      v72 = &v12[v70];
      __dsta = v17;
      if (v17(&v12[v70], 1, v15))
      {
        v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v71, v72, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v71, 0, 1, v15);
      }
      v99 = refreshed[8];
      v100 = &v11[v99];
      v101 = &v12[v99];
      *(_QWORD *)v100 = *(_QWORD *)v101;
      v100[8] = v101[8];
      v102 = refreshed[9];
      v103 = &v11[v102];
      v104 = &v12[v102];
      v103[8] = v104[8];
      *(_QWORD *)v103 = *(_QWORD *)v104;
      v105 = v208;
      v7[v208[13]] = v8[v208[13]];
      v7[v208[14]] = v8[v208[14]];
      v106 = v208[15];
      v107 = &v7[v106];
      v108 = &v8[v106];
      v109 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v110 = *((_QWORD *)v109 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v110 + 48))(v108, 1, v109))
      {
        v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v107 = *(_OWORD *)v108;
        v196 = *(void (**)(char *, char *, uint64_t))(v198 + 32);
        v196(&v107[v109[5]], &v108[v109[5]], v15);
        v148 = v109[6];
        v218 = &v107[v148];
        v149 = &v108[v148];
        if (__dsta(&v108[v148], 1, v15))
        {
          v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v218, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
        }
        else
        {
          v196(v218, v149, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v218, 0, 1, v15);
        }
        v196(&v107[v109[7]], &v108[v109[7]], v15);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v110 + 56))(v107, 0, 1, v109);
        v105 = v208;
      }
      v7[v105[16]] = v8[v105[16]];
      v7[v105[17]] = v8[v105[17]];
      *(_QWORD *)&v7[v105[18]] = *(_QWORD *)&v8[v105[18]];
      *(_WORD *)&v7[v105[19]] = *(_WORD *)&v8[v105[19]];
      *(_OWORD *)&v7[v105[20]] = *(_OWORD *)&v8[v105[20]];
      a1[v200[20]] = a2[v200[20]];
      a1[v200[24]] = a2[v200[24]];
      goto LABEL_79;
    case 3u:
      v19 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v19;
      a1[32] = a2[32];
      *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v20 = (int *)type metadata accessor for Institution(0);
      v21 = v20[12];
      v22 = &a1[v21];
      v23 = &a2[v21];
      *(_DWORD *)&a1[v21] = *(_DWORD *)&a2[v21];
      v24 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v25 = v24[6];
      v26 = &v22[v25];
      v27 = &v23[v25];
      v28 = sub_23361D634();
      v29 = *(_QWORD *)(v28 - 8);
      v214 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      if (v214(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v74 = v24[7];
      v75 = &v22[v74];
      v76 = &v23[v74];
      if (v214(&v23[v74], 1, v28))
      {
        v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v75, v76, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v75, 0, 1, v28);
      }
      v112 = v24[8];
      v113 = &v22[v112];
      v114 = &v23[v112];
      *(_QWORD *)v113 = *(_QWORD *)v114;
      v113[8] = v114[8];
      v115 = v24[9];
      v116 = &v22[v115];
      v117 = &v23[v115];
      v116[8] = v117[8];
      *(_QWORD *)v116 = *(_QWORD *)v117;
      a1[v20[13]] = a2[v20[13]];
      a1[v20[14]] = a2[v20[14]];
      v118 = v20[15];
      v119 = &a1[v118];
      v120 = &a2[v118];
      v121 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v122 = *((_QWORD *)v121 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
        goto LABEL_35;
      *(_OWORD *)v119 = *(_OWORD *)v120;
      __dstd = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      __dstd(&v119[v121[5]], &v120[v121[5]], v28);
      v151 = v121[6];
      v210 = &v119[v151];
      v152 = &v120[v151];
      if (v214(&v120[v151], 1, v28))
      {
        v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v210, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      }
      else
      {
        __dstd(v210, v152, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v210, 0, 1, v28);
      }
      goto LABEL_62;
    case 6u:
      v31 = sub_23361D6A0();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v33(a1, a2, v31);
      v34 = (int *)type metadata accessor for BankConnectAuthorizationSession();
      v35 = v34[5];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = *((_OWORD *)v37 + 1);
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v38;
      *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
      *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
      *(_OWORD *)&a1[v34[6]] = *(_OWORD *)&a2[v34[6]];
      v39 = v34[7];
      v40 = &a1[v39];
      v41 = &a2[v39];
      v199 = v33;
      v201 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v39], 1, v31))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v33(v40, v41, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v31);
      }
      v197 = v34;
      v78 = v34[8];
      v79 = &a1[v78];
      v80 = &a2[v78];
      v81 = *(_OWORD *)&a2[v78 + 16];
      *(_OWORD *)v79 = *(_OWORD *)&a2[v78];
      *((_OWORD *)v79 + 1) = v81;
      v79[32] = a2[v78 + 32];
      *((_WORD *)v79 + 17) = *(_WORD *)&a2[v78 + 34];
      *((_QWORD *)v79 + 5) = *(_QWORD *)&a2[v78 + 40];
      v79[48] = a2[v78 + 48];
      *(_OWORD *)(v79 + 56) = *(_OWORD *)&a2[v78 + 56];
      *((_QWORD *)v79 + 9) = *(_QWORD *)&a2[v78 + 72];
      v209 = (int *)type metadata accessor for Institution(0);
      v82 = v209[12];
      v83 = &v79[v82];
      v84 = &v80[v82];
      *(_DWORD *)&v79[v82] = *(_DWORD *)&v80[v82];
      v217 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v85 = v217[6];
      __dstb = &v83[v85];
      v86 = &v84[v85];
      v87 = sub_23361D634();
      v88 = *(_QWORD *)(v87 - 8);
      v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
      v195 = v88;
      if (v89(v86, 1, v87))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dstb, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(__dstb, v86, v87);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dstb, 0, 1, v87);
      }
      v124 = v87;
      v125 = v217[7];
      v126 = &v83[v125];
      v127 = &v84[v125];
      __dstc = v89;
      v194 = v124;
      if (v89(&v84[v125], 1, v124))
      {
        v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v126, v127, v124);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v126, 0, 1, v124);
      }
      v154 = v209;
      v155 = v217[8];
      v156 = &v83[v155];
      v157 = &v84[v155];
      *(_QWORD *)v156 = *(_QWORD *)v157;
      v156[8] = v157[8];
      v158 = v217[9];
      v159 = &v83[v158];
      v160 = &v84[v158];
      v159[8] = v160[8];
      *(_QWORD *)v159 = *(_QWORD *)v160;
      v79[v209[13]] = v80[v209[13]];
      v79[v209[14]] = v80[v209[14]];
      v161 = v209[15];
      v162 = &v79[v161];
      v163 = &v80[v161];
      v164 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v165 = *((_QWORD *)v164 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v165 + 48))(v163, 1, v164))
      {
        v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v162 = *(_OWORD *)v163;
        v193 = *(void (**)(char *, char *, uint64_t))(v195 + 32);
        v193(&v162[v164[5]], &v163[v164[5]], v194);
        v173 = v164[6];
        v219 = &v162[v173];
        v174 = &v163[v173];
        if (__dstc(&v163[v173], 1, v194))
        {
          v175 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v219, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
        }
        else
        {
          v193(v219, v174, v194);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v219, 0, 1, v194);
        }
        v193(&v162[v164[7]], &v163[v164[7]], v194);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v165 + 56))(v162, 0, 1, v164);
        v154 = v209;
      }
      v79[v154[16]] = v80[v154[16]];
      v79[v154[17]] = v80[v154[17]];
      *(_QWORD *)&v79[v154[18]] = *(_QWORD *)&v80[v154[18]];
      *(_WORD *)&v79[v154[19]] = *(_WORD *)&v80[v154[19]];
      *(_OWORD *)&v79[v154[20]] = *(_OWORD *)&v80[v154[20]];
      *(_OWORD *)&a1[v197[9]] = *(_OWORD *)&a2[v197[9]];
      *(_WORD *)&a1[v197[10]] = *(_WORD *)&a2[v197[10]];
      v182 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
      v183 = v182[12];
      v184 = &a1[v183];
      v185 = &a2[v183];
      v186 = type metadata accessor for BankConnectAuthorizationPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
      }
      else
      {
        v187 = sub_23361D340();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v184, v185, v187);
        swift_storeEnumTagMultiPayload();
      }
      *(_QWORD *)&a1[v182[16]] = *(_QWORD *)&a2[v182[16]];
      v188 = v182[20];
      v189 = &a1[v188];
      v190 = &a2[v188];
      v191 = type metadata accessor for BankConnectAuthorizationConfiguration();
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
      }
      else
      {
        v199(v189, v190, v201);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_79;
    case 0xEu:
      v43 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v43;
      a1[32] = a2[32];
      *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v44 = (int *)type metadata accessor for Institution(0);
      v45 = v44[12];
      v46 = &a1[v45];
      v47 = &a2[v45];
      *(_DWORD *)&a1[v45] = *(_DWORD *)&a2[v45];
      v48 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v49 = v48[6];
      v50 = &v46[v49];
      v51 = &v47[v49];
      v52 = sub_23361D634();
      v53 = *(_QWORD *)(v52 - 8);
      v215 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
      if (v215(v51, 1, v52))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v91 = v48[7];
      v92 = &v46[v91];
      v93 = &v47[v91];
      if (v215(&v47[v91], 1, v52))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v92, v93, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v92, 0, 1, v52);
      }
      v129 = v48[8];
      v130 = &v46[v129];
      v131 = &v47[v129];
      *(_QWORD *)v130 = *(_QWORD *)v131;
      v130[8] = v131[8];
      v132 = v48[9];
      v133 = &v46[v132];
      v134 = &v47[v132];
      v133[8] = v134[8];
      *(_QWORD *)v133 = *(_QWORD *)v134;
      a1[v44[13]] = a2[v44[13]];
      a1[v44[14]] = a2[v44[14]];
      v135 = v44[15];
      v136 = &a1[v135];
      v137 = &a2[v135];
      v138 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v139 = *((_QWORD *)v138 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v139 + 48))(v137, 1, v138))
      {
        v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v136 = *(_OWORD *)v137;
        __dste = *(void (**)(char *, char *, uint64_t))(v53 + 32);
        __dste(&v136[v138[5]], &v137[v138[5]], v52);
        v167 = v138[6];
        v211 = &v136[v167];
        v168 = &v137[v167];
        if (v215(&v137[v167], 1, v52))
        {
          v169 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v211, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        }
        else
        {
          __dste(v211, v168, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v211, 0, 1, v52);
        }
        __dste(&v136[v138[7]], &v137[v138[7]], v52);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v139 + 56))(v136, 0, 1, v138);
      }
      a1[v44[16]] = a2[v44[16]];
      a1[v44[17]] = a2[v44[17]];
      *(_QWORD *)&a1[v44[18]] = *(_QWORD *)&a2[v44[18]];
      *(_WORD *)&a1[v44[19]] = *(_WORD *)&a2[v44[19]];
      *(_OWORD *)&a1[v44[20]] = *(_OWORD *)&a2[v44[20]];
      v176 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
      *(_OWORD *)&a1[v176[12]] = *(_OWORD *)&a2[v176[12]];
      v177 = v176[16];
      v178 = &a1[v177];
      v179 = &a2[v177];
      v180 = type metadata accessor for BankConnectAuthorizationConfiguration();
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
      }
      else
      {
        v181 = sub_23361D6A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v178, v179, v181);
        swift_storeEnumTagMultiPayload();
      }
      *(_WORD *)&a1[v176[20]] = *(_WORD *)&a2[v176[20]];
      goto LABEL_79;
    case 0x10u:
      v55 = sub_23361D340();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(a1, a2, v55);
      goto LABEL_79;
    case 0x1Cu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
      v57 = &a1[v56];
      v58 = &a2[v56];
      v59 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_79;
    case 0x1Du:
      v60 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v60;
      a1[32] = a2[32];
      *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      a1[48] = a2[48];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      v20 = (int *)type metadata accessor for Institution(0);
      v61 = v20[12];
      v62 = &a1[v61];
      v63 = &a2[v61];
      *(_DWORD *)&a1[v61] = *(_DWORD *)&a2[v61];
      v64 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
      v65 = v64[6];
      v66 = &v62[v65];
      v67 = &v63[v65];
      v28 = sub_23361D634();
      v68 = *(_QWORD *)(v28 - 8);
      v216 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      if (v216(v67, 1, v28))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v67, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v28);
      }
      v95 = v64[7];
      v96 = &v62[v95];
      v97 = &v63[v95];
      if (v216(&v63[v95], 1, v28))
      {
        v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v96, v97, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v96, 0, 1, v28);
      }
      v141 = v64[8];
      v142 = &v62[v141];
      v143 = &v63[v141];
      *(_QWORD *)v142 = *(_QWORD *)v143;
      v142[8] = v143[8];
      v144 = v64[9];
      v145 = &v62[v144];
      v146 = &v63[v144];
      v145[8] = v146[8];
      *(_QWORD *)v145 = *(_QWORD *)v146;
      a1[v20[13]] = a2[v20[13]];
      a1[v20[14]] = a2[v20[14]];
      v147 = v20[15];
      v119 = &a1[v147];
      v120 = &a2[v147];
      v121 = (int *)type metadata accessor for BankConnectTermsAndConditions();
      v122 = *((_QWORD *)v121 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
      {
LABEL_35:
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v119 = *(_OWORD *)v120;
        __dstd = *(void (**)(char *, char *, uint64_t))(v68 + 32);
        __dstd(&v119[v121[5]], &v120[v121[5]], v28);
        v170 = v121[6];
        v212 = &v119[v170];
        v171 = &v120[v170];
        if (v216(&v120[v170], 1, v28))
        {
          v172 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v212, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
        }
        else
        {
          __dstd(v212, v171, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v212, 0, 1, v28);
        }
LABEL_62:
        __dstd(&v119[v121[7]], &v120[v121[7]], v28);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v122 + 56))(v119, 0, 1, v121);
      }
      a1[v20[16]] = a2[v20[16]];
      a1[v20[17]] = a2[v20[17]];
      *(_QWORD *)&a1[v20[18]] = *(_QWORD *)&a2[v20[18]];
      *(_WORD *)&a1[v20[19]] = *(_WORD *)&a2[v20[19]];
      *(_OWORD *)&a1[v20[20]] = *(_OWORD *)&a2[v20[20]];
LABEL_79:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

char *assignWithTake for BankConnectService.Message(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  void (*v193)(char *, char *, uint64_t);
  uint64_t v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  int *v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  int *v200;
  uint64_t v201;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  void (*__dstd)(char *, char *, uint64_t);
  void (*__dste)(char *, char *, uint64_t);
  int *v208;
  int *v209;
  char *v210;
  char *v211;
  char *v212;
  int *refreshed;
  unsigned int (*v214)(char *, uint64_t, uint64_t);
  unsigned int (*v215)(char *, uint64_t, uint64_t);
  unsigned int (*v216)(char *, uint64_t, uint64_t);
  int *v217;
  char *v218;
  char *v219;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        v200 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256053EE8);
        v6 = v200[16];
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = *(_OWORD *)&a2[v6 + 16];
        *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
        *((_OWORD *)v7 + 1) = v9;
        v7[32] = a2[v6 + 32];
        *((_WORD *)v7 + 17) = *(_WORD *)&a2[v6 + 34];
        *((_QWORD *)v7 + 5) = *(_QWORD *)&a2[v6 + 40];
        v7[48] = a2[v6 + 48];
        *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
        *((_QWORD *)v7 + 9) = *(_QWORD *)&a2[v6 + 72];
        v208 = (int *)type metadata accessor for Institution(0);
        v10 = v208[12];
        v11 = &v7[v10];
        v12 = &v8[v10];
        *(_DWORD *)&v7[v10] = *(_DWORD *)&v8[v10];
        refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v13 = refreshed[6];
        __dst = &v11[v13];
        v14 = &v12[v13];
        v15 = sub_23361D634();
        v16 = *(_QWORD *)(v15 - 8);
        v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
        v198 = v16;
        if (v17(v14, 1, v15))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
        }
        v70 = refreshed[7];
        v71 = &v11[v70];
        v72 = &v12[v70];
        __dsta = v17;
        if (v17(&v12[v70], 1, v15))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v71, v72, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v71, 0, 1, v15);
        }
        v99 = refreshed[8];
        v100 = &v11[v99];
        v101 = &v12[v99];
        *(_QWORD *)v100 = *(_QWORD *)v101;
        v100[8] = v101[8];
        v102 = refreshed[9];
        v103 = &v11[v102];
        v104 = &v12[v102];
        v103[8] = v104[8];
        *(_QWORD *)v103 = *(_QWORD *)v104;
        v105 = v208;
        v7[v208[13]] = v8[v208[13]];
        v7[v208[14]] = v8[v208[14]];
        v106 = v208[15];
        v107 = &v7[v106];
        v108 = &v8[v106];
        v109 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v110 = *((_QWORD *)v109 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v110 + 48))(v108, 1, v109))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v107 = *(_OWORD *)v108;
          v196 = *(void (**)(char *, char *, uint64_t))(v198 + 32);
          v196(&v107[v109[5]], &v108[v109[5]], v15);
          v148 = v109[6];
          v218 = &v107[v148];
          v149 = &v108[v148];
          if (__dsta(&v108[v148], 1, v15))
          {
            v150 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v218, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
          }
          else
          {
            v196(v218, v149, v15);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v218, 0, 1, v15);
          }
          v196(&v107[v109[7]], &v108[v109[7]], v15);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v110 + 56))(v107, 0, 1, v109);
          v105 = v208;
        }
        v7[v105[16]] = v8[v105[16]];
        v7[v105[17]] = v8[v105[17]];
        *(_QWORD *)&v7[v105[18]] = *(_QWORD *)&v8[v105[18]];
        *(_WORD *)&v7[v105[19]] = *(_WORD *)&v8[v105[19]];
        *(_OWORD *)&v7[v105[20]] = *(_OWORD *)&v8[v105[20]];
        a1[v200[20]] = a2[v200[20]];
        a1[v200[24]] = a2[v200[24]];
        goto LABEL_80;
      case 3u:
        v19 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v19;
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v20 = (int *)type metadata accessor for Institution(0);
        v21 = v20[12];
        v22 = &a1[v21];
        v23 = &a2[v21];
        *(_DWORD *)&a1[v21] = *(_DWORD *)&a2[v21];
        v24 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v25 = v24[6];
        v26 = &v22[v25];
        v27 = &v23[v25];
        v28 = sub_23361D634();
        v29 = *(_QWORD *)(v28 - 8);
        v214 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        if (v214(v27, 1, v28))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v74 = v24[7];
        v75 = &v22[v74];
        v76 = &v23[v74];
        if (v214(&v23[v74], 1, v28))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v75, v76, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v75, 0, 1, v28);
        }
        v112 = v24[8];
        v113 = &v22[v112];
        v114 = &v23[v112];
        *(_QWORD *)v113 = *(_QWORD *)v114;
        v113[8] = v114[8];
        v115 = v24[9];
        v116 = &v22[v115];
        v117 = &v23[v115];
        v116[8] = v117[8];
        *(_QWORD *)v116 = *(_QWORD *)v117;
        a1[v20[13]] = a2[v20[13]];
        a1[v20[14]] = a2[v20[14]];
        v118 = v20[15];
        v119 = &a1[v118];
        v120 = &a2[v118];
        v121 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v122 = *((_QWORD *)v121 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
          goto LABEL_36;
        *(_OWORD *)v119 = *(_OWORD *)v120;
        __dstd = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        __dstd(&v119[v121[5]], &v120[v121[5]], v28);
        v151 = v121[6];
        v210 = &v119[v151];
        v152 = &v120[v151];
        if (v214(&v120[v151], 1, v28))
        {
          v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v210, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
        }
        else
        {
          __dstd(v210, v152, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v210, 0, 1, v28);
        }
        goto LABEL_63;
      case 6u:
        v31 = sub_23361D6A0();
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v33(a1, a2, v31);
        v34 = (int *)type metadata accessor for BankConnectAuthorizationSession();
        v35 = v34[5];
        v36 = &a1[v35];
        v37 = &a2[v35];
        v38 = *((_OWORD *)v37 + 1);
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *((_OWORD *)v36 + 1) = v38;
        *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
        *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
        *(_OWORD *)&a1[v34[6]] = *(_OWORD *)&a2[v34[6]];
        v39 = v34[7];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v199 = v33;
        v201 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v39], 1, v31))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          v33(v40, v41, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v31);
        }
        v197 = v34;
        v78 = v34[8];
        v79 = &a1[v78];
        v80 = &a2[v78];
        v81 = *(_OWORD *)&a2[v78 + 16];
        *(_OWORD *)v79 = *(_OWORD *)&a2[v78];
        *((_OWORD *)v79 + 1) = v81;
        v79[32] = a2[v78 + 32];
        *((_WORD *)v79 + 17) = *(_WORD *)&a2[v78 + 34];
        *((_QWORD *)v79 + 5) = *(_QWORD *)&a2[v78 + 40];
        v79[48] = a2[v78 + 48];
        *(_OWORD *)(v79 + 56) = *(_OWORD *)&a2[v78 + 56];
        *((_QWORD *)v79 + 9) = *(_QWORD *)&a2[v78 + 72];
        v209 = (int *)type metadata accessor for Institution(0);
        v82 = v209[12];
        v83 = &v79[v82];
        v84 = &v80[v82];
        *(_DWORD *)&v79[v82] = *(_DWORD *)&v80[v82];
        v217 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v85 = v217[6];
        __dstb = &v83[v85];
        v86 = &v84[v85];
        v87 = sub_23361D634();
        v88 = *(_QWORD *)(v87 - 8);
        v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
        v195 = v88;
        if (v89(v86, 1, v87))
        {
          v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(__dstb, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v88 + 32))(__dstb, v86, v87);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dstb, 0, 1, v87);
        }
        v124 = v87;
        v125 = v217[7];
        v126 = &v83[v125];
        v127 = &v84[v125];
        __dstc = v89;
        v194 = v124;
        if (v89(&v84[v125], 1, v124))
        {
          v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v126, v127, v124);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v126, 0, 1, v124);
        }
        v154 = v209;
        v155 = v217[8];
        v156 = &v83[v155];
        v157 = &v84[v155];
        *(_QWORD *)v156 = *(_QWORD *)v157;
        v156[8] = v157[8];
        v158 = v217[9];
        v159 = &v83[v158];
        v160 = &v84[v158];
        v159[8] = v160[8];
        *(_QWORD *)v159 = *(_QWORD *)v160;
        v79[v209[13]] = v80[v209[13]];
        v79[v209[14]] = v80[v209[14]];
        v161 = v209[15];
        v162 = &v79[v161];
        v163 = &v80[v161];
        v164 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v165 = *((_QWORD *)v164 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v165 + 48))(v163, 1, v164))
        {
          v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v162 = *(_OWORD *)v163;
          v193 = *(void (**)(char *, char *, uint64_t))(v195 + 32);
          v193(&v162[v164[5]], &v163[v164[5]], v194);
          v173 = v164[6];
          v219 = &v162[v173];
          v174 = &v163[v173];
          if (__dstc(&v163[v173], 1, v194))
          {
            v175 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v219, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
          }
          else
          {
            v193(v219, v174, v194);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v219, 0, 1, v194);
          }
          v193(&v162[v164[7]], &v163[v164[7]], v194);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v165 + 56))(v162, 0, 1, v164);
          v154 = v209;
        }
        v79[v154[16]] = v80[v154[16]];
        v79[v154[17]] = v80[v154[17]];
        *(_QWORD *)&v79[v154[18]] = *(_QWORD *)&v80[v154[18]];
        *(_WORD *)&v79[v154[19]] = *(_WORD *)&v80[v154[19]];
        *(_OWORD *)&v79[v154[20]] = *(_OWORD *)&v80[v154[20]];
        *(_OWORD *)&a1[v197[9]] = *(_OWORD *)&a2[v197[9]];
        *(_WORD *)&a1[v197[10]] = *(_WORD *)&a2[v197[10]];
        v182 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
        v183 = v182[12];
        v184 = &a1[v183];
        v185 = &a2[v183];
        v186 = type metadata accessor for BankConnectAuthorizationPayload(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
        }
        else
        {
          v187 = sub_23361D340();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v184, v185, v187);
          swift_storeEnumTagMultiPayload();
        }
        *(_QWORD *)&a1[v182[16]] = *(_QWORD *)&a2[v182[16]];
        v188 = v182[20];
        v189 = &a1[v188];
        v190 = &a2[v188];
        v191 = type metadata accessor for BankConnectAuthorizationConfiguration();
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          v199(v189, v190, v201);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_80;
      case 0xEu:
        v43 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v43;
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v44 = (int *)type metadata accessor for Institution(0);
        v45 = v44[12];
        v46 = &a1[v45];
        v47 = &a2[v45];
        *(_DWORD *)&a1[v45] = *(_DWORD *)&a2[v45];
        v48 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v49 = v48[6];
        v50 = &v46[v49];
        v51 = &v47[v49];
        v52 = sub_23361D634();
        v53 = *(_QWORD *)(v52 - 8);
        v215 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
        if (v215(v51, 1, v52))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
        }
        v91 = v48[7];
        v92 = &v46[v91];
        v93 = &v47[v91];
        if (v215(&v47[v91], 1, v52))
        {
          v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v92, v93, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v92, 0, 1, v52);
        }
        v129 = v48[8];
        v130 = &v46[v129];
        v131 = &v47[v129];
        *(_QWORD *)v130 = *(_QWORD *)v131;
        v130[8] = v131[8];
        v132 = v48[9];
        v133 = &v46[v132];
        v134 = &v47[v132];
        v133[8] = v134[8];
        *(_QWORD *)v133 = *(_QWORD *)v134;
        a1[v44[13]] = a2[v44[13]];
        a1[v44[14]] = a2[v44[14]];
        v135 = v44[15];
        v136 = &a1[v135];
        v137 = &a2[v135];
        v138 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v139 = *((_QWORD *)v138 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v139 + 48))(v137, 1, v138))
        {
          v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v136 = *(_OWORD *)v137;
          __dste = *(void (**)(char *, char *, uint64_t))(v53 + 32);
          __dste(&v136[v138[5]], &v137[v138[5]], v52);
          v167 = v138[6];
          v211 = &v136[v167];
          v168 = &v137[v167];
          if (v215(&v137[v167], 1, v52))
          {
            v169 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v211, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
          }
          else
          {
            __dste(v211, v168, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v211, 0, 1, v52);
          }
          __dste(&v136[v138[7]], &v137[v138[7]], v52);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v139 + 56))(v136, 0, 1, v138);
        }
        a1[v44[16]] = a2[v44[16]];
        a1[v44[17]] = a2[v44[17]];
        *(_QWORD *)&a1[v44[18]] = *(_QWORD *)&a2[v44[18]];
        *(_WORD *)&a1[v44[19]] = *(_WORD *)&a2[v44[19]];
        *(_OWORD *)&a1[v44[20]] = *(_OWORD *)&a2[v44[20]];
        v176 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
        *(_OWORD *)&a1[v176[12]] = *(_OWORD *)&a2[v176[12]];
        v177 = v176[16];
        v178 = &a1[v177];
        v179 = &a2[v177];
        v180 = type metadata accessor for BankConnectAuthorizationConfiguration();
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
        }
        else
        {
          v181 = sub_23361D6A0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v178, v179, v181);
          swift_storeEnumTagMultiPayload();
        }
        *(_WORD *)&a1[v176[20]] = *(_WORD *)&a2[v176[20]];
        goto LABEL_80;
      case 0x10u:
        v55 = sub_23361D340();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(a1, a2, v55);
        goto LABEL_80;
      case 0x1Cu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
        v57 = &a1[v56];
        v58 = &a2[v56];
        v59 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_80;
      case 0x1Du:
        v60 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v60;
        a1[32] = a2[32];
        *((_WORD *)a1 + 17) = *((_WORD *)a2 + 17);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v20 = (int *)type metadata accessor for Institution(0);
        v61 = v20[12];
        v62 = &a1[v61];
        v63 = &a2[v61];
        *(_DWORD *)&a1[v61] = *(_DWORD *)&a2[v61];
        v64 = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
        v65 = v64[6];
        v66 = &v62[v65];
        v67 = &v63[v65];
        v28 = sub_23361D634();
        v68 = *(_QWORD *)(v28 - 8);
        v216 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
        if (v216(v67, 1, v28))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v67, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v28);
        }
        v95 = v64[7];
        v96 = &v62[v95];
        v97 = &v63[v95];
        if (v216(&v63[v95], 1, v28))
        {
          v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v96, v97, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v96, 0, 1, v28);
        }
        v141 = v64[8];
        v142 = &v62[v141];
        v143 = &v63[v141];
        *(_QWORD *)v142 = *(_QWORD *)v143;
        v142[8] = v143[8];
        v144 = v64[9];
        v145 = &v62[v144];
        v146 = &v63[v144];
        v145[8] = v146[8];
        *(_QWORD *)v145 = *(_QWORD *)v146;
        a1[v20[13]] = a2[v20[13]];
        a1[v20[14]] = a2[v20[14]];
        v147 = v20[15];
        v119 = &a1[v147];
        v120 = &a2[v147];
        v121 = (int *)type metadata accessor for BankConnectTermsAndConditions();
        v122 = *((_QWORD *)v121 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
        {
LABEL_36:
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v119 = *(_OWORD *)v120;
          __dstd = *(void (**)(char *, char *, uint64_t))(v68 + 32);
          __dstd(&v119[v121[5]], &v120[v121[5]], v28);
          v170 = v121[6];
          v212 = &v119[v170];
          v171 = &v120[v170];
          if (v216(&v120[v170], 1, v28))
          {
            v172 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
            memcpy(v212, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            __dstd(v212, v171, v28);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v212, 0, 1, v28);
          }
LABEL_63:
          __dstd(&v119[v121[7]], &v120[v121[7]], v28);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v122 + 56))(v119, 0, 1, v121);
        }
        a1[v20[16]] = a2[v20[16]];
        a1[v20[17]] = a2[v20[17]];
        *(_QWORD *)&a1[v20[18]] = *(_QWORD *)&a2[v20[18]];
        *(_WORD *)&a1[v20[19]] = *(_WORD *)&a2[v20[19]];
        *(_OWORD *)&a1[v20[20]] = *(_OWORD *)&a2[v20[20]];
LABEL_80:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_2335600BC()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  char *v47;
  uint64_t v48;

  v0 = MEMORY[0x24BEE0150];
  v19 = &unk_23365B1F0;
  v20 = &unk_23365B208;
  v13 = MEMORY[0x24BEE0150] + 64;
  v14 = &unk_23365B220;
  result = type metadata accessor for Institution(319);
  if (v2 <= 0x3F)
  {
    v15 = *(_QWORD *)(result - 8) + 64;
    v3 = v15;
    v16 = &unk_23365B238;
    v17 = &unk_23365B238;
    swift_getTupleTypeLayout();
    v21 = &v18;
    v22 = v15;
    v23 = &unk_23365B208;
    v24 = &unk_23365B1F0;
    result = type metadata accessor for BankConnectAuthorizationSession();
    if (v4 <= 0x3F)
    {
      v13 = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for BankConnectAuthorizationPayload(319);
      if (v5 <= 0x3F)
      {
        v14 = (void *)(*(_QWORD *)(result - 8) + 64);
        v15 = MEMORY[0x24BEE0190] + 64;
        result = type metadata accessor for BankConnectAuthorizationConfiguration();
        if (v6 <= 0x3F)
        {
          v7 = *(_QWORD *)(result - 8) + 64;
          swift_getTupleTypeLayout();
          v25 = &v12;
          v26 = MEMORY[0x24BEE0158] + 64;
          v27 = &unk_23365B250;
          v28 = &unk_23365B1F0;
          v29 = &unk_23365B208;
          v30 = &unk_23365B1F0;
          v31 = &unk_23365B1F0;
          v32 = v0 + 64;
          v13 = v3;
          v14 = &unk_23365B268;
          v15 = v7;
          v16 = (void *)(MEMORY[0x24BEE0168] + 64);
          swift_getTupleTypeLayout();
          v33 = &v11;
          v34 = &unk_23365B238;
          result = sub_23361D340();
          if (v8 <= 0x3F)
          {
            v35 = *(_QWORD *)(result - 8) + 64;
            v36 = &unk_23365B1F0;
            v37 = &unk_23365B208;
            v38 = &unk_23365B1F0;
            v39 = &unk_23365B1F0;
            v40 = &unk_23365B1F0;
            v41 = &unk_23365B208;
            v42 = &unk_23365B208;
            v43 = &unk_23365B208;
            v44 = &unk_23365B280;
            v45 = &unk_23365B1F0;
            v46 = &unk_23365B1F0;
            result = sub_23361D634();
            if (v9 <= 0x3F)
            {
              swift_getTupleTypeLayout2();
              v47 = &v10;
              v48 = v3;
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BankConnectService.Message.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE0)
    goto LABEL_17;
  if (a2 + 32 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 32) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 32;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 32;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 32;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x21;
  v8 = v6 - 33;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectService.Message.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 32 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 32) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDF)
    return ((uint64_t (*)(void))((char *)&loc_2335603B4 + 4 * byte_23365AF7F[v4]))();
  *a1 = a2 + 32;
  return ((uint64_t (*)(void))((char *)sub_2335603E8 + 4 * byte_23365AF7A[v4]))();
}

uint64_t sub_2335603E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335603F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335603F8);
  return result;
}

uint64_t sub_233560404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23356040CLL);
  *(_BYTE *)result = a2 + 32;
  return result;
}

uint64_t sub_233560410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233560418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.CodingKeys()
{
  return &type metadata for BankConnectService.Message.CodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadAccountForPrimaryAccountIdentifierCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadAccountForPrimaryAccountIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadAccountCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadAccountCodingKeys;
}

uint64_t storeEnumTagSinglePayload for BankConnectService.Message.ConnectAccountsCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2335604A4 + 4 * byte_23365AF89[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2335604D8 + 4 * byte_23365AF84[v4]))();
}

uint64_t sub_2335604D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335604E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335604E8);
  return result;
}

uint64_t sub_2335604F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335604FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233560500(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233560508(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.ConnectAccountsCodingKeys()
{
  return &type metadata for BankConnectService.Message.ConnectAccountsCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.ConnectUnlinkedAccountsCodingKeys()
{
  return &type metadata for BankConnectService.Message.ConnectUnlinkedAccountsCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.GetConsentCodingKeys()
{
  return &type metadata for BankConnectService.Message.GetConsentCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.UpdateConsentStatusForConsentIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.UpdateConsentStatusForConsentIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.CompleteConnectionAuthorizationCodingKeys()
{
  return &type metadata for BankConnectService.Message.CompleteConnectionAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.EncryptAccountPaymentInformationCodingKeys()
{
  return &type metadata for BankConnectService.Message.EncryptAccountPaymentInformationCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.DecryptAccountPaymentInformationCodingKeys()
{
  return &type metadata for BankConnectService.Message.DecryptAccountPaymentInformationCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadGrantedAccountsForConsentIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadGrantedAccountsForConsentIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.ScheduleHistoricalTransactionTaskCodingKeys()
{
  return &type metadata for BankConnectService.Message.ScheduleHistoricalTransactionTaskCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LogoForInstitutionIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.LogoForInstitutionIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.RemoveLogoForInstitutionIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.RemoveLogoForInstitutionIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.InstitutionForPaymentPassCodingKeys()
{
  return &type metadata for BankConnectService.Message.InstitutionForPaymentPassCodingKeys;
}

uint64_t _s10FinanceKit23BankConnectServiceErrorO4CodeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233560620 + 4 * byte_23365AF93[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233560654 + 4 * byte_23365AF8E[v4]))();
}

uint64_t sub_233560654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23356065C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233560664);
  return result;
}

uint64_t sub_233560670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233560678);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23356067C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233560684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.InitiateConnectionAuthorizationCodingKeys()
{
  return &type metadata for BankConnectService.Message.InitiateConnectionAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.OfflineLabPermissionCodingKeys()
{
  return &type metadata for BankConnectService.Message.OfflineLabPermissionCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.OfflineLabSharingPreferenceCodingKeys()
{
  return &type metadata for BankConnectService.Message.OfflineLabSharingPreferenceCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.SetOfflineLabSharingPermissionCodingKeys()
{
  return &type metadata for BankConnectService.Message.SetOfflineLabSharingPermissionCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.PostOfflineLabItemsToURLCodingKeys()
{
  return &type metadata for BankConnectService.Message.PostOfflineLabItemsToURLCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadPaymentInfoForPrimaryAccountIdentifierCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadPaymentInfoForPrimaryAccountIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadPaymentInfoCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadPaymentInfoCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.RevokeConnectionAuthorizationForConsentIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.RevokeConnectionAuthorizationForConsentIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.RevokeConsentsForInstitutionIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.RevokeConsentsForInstitutionIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadTransactionsForPrimaryAccountIdentifierCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadTransactionsForPrimaryAccountIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.LoadTransactionsCodingKeys()
{
  return &type metadata for BankConnectService.Message.LoadTransactionsCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.DisconnectAccountCodingKeys()
{
  return &type metadata for BankConnectService.Message.DisconnectAccountCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.ValidateAccountConnectionCodingKeys()
{
  return &type metadata for BankConnectService.Message.ValidateAccountConnectionCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.ClassifyTransactionsWithTransactionIdsCodingKeys()
{
  return &type metadata for BankConnectService.Message.ClassifyTransactionsWithTransactionIdsCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.TermsAndConditionsWithInstitutionIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.TermsAndConditionsWithInstitutionIDCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.TermsAndConditionsURLForTermsAndConditionsIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.TermsAndConditionsURLForTermsAndConditionsIDCodingKeys;
}

uint64_t _s10FinanceKit18BankConnectServiceC7MessageO48ClassifyTransactionsWithTransactionIdsCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2335607E0 + 4 * byte_23365AF9D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233560814 + 4 * byte_23365AF98[v4]))();
}

uint64_t sub_233560814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23356081C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233560824);
  return result;
}

uint64_t sub_233560830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233560838);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23356083C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233560844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.UpdateTermsAndConditionsWithTermsAndConditionsIDCodingKeys()
{
  return &type metadata for BankConnectService.Message.UpdateTermsAndConditionsWithTermsAndConditionsIDCodingKeys;
}

uint64_t _s10FinanceKit18BankConnectServiceC7MessageO48LoadAccountForPrimaryAccountIdentifierCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2335608A0 + 4 * byte_23365AFA2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2335608C0 + 4 * byte_23365AFA7[v4]))();
}

_BYTE *sub_2335608A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2335608C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335608C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335608D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335608D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335608E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.InsertOrUpdateInstitutionCodingKeys()
{
  return &type metadata for BankConnectService.Message.InsertOrUpdateInstitutionCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectService.Message.DiscoveryCardEligibilityCodingKeys()
{
  return &type metadata for BankConnectService.Message.DiscoveryCardEligibilityCodingKeys;
}

unint64_t sub_233560910()
{
  unint64_t result;

  result = qword_2560553A0;
  if (!qword_2560553A0)
  {
    result = MEMORY[0x234934494](&unk_23365BA24, &type metadata for BankConnectService.Message.InsertOrUpdateInstitutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553A0);
  }
  return result;
}

unint64_t sub_233560958()
{
  unint64_t result;

  result = qword_2560553A8;
  if (!qword_2560553A8)
  {
    result = MEMORY[0x234934494](&unk_23365BADC, &type metadata for BankConnectService.Message.UpdateTermsAndConditionsWithTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553A8);
  }
  return result;
}

unint64_t sub_2335609A0()
{
  unint64_t result;

  result = qword_2560553B0;
  if (!qword_2560553B0)
  {
    result = MEMORY[0x234934494](&unk_23365BB94, &type metadata for BankConnectService.Message.TermsAndConditionsURLForTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553B0);
  }
  return result;
}

unint64_t sub_2335609E8()
{
  unint64_t result;

  result = qword_2560553B8;
  if (!qword_2560553B8)
  {
    result = MEMORY[0x234934494](&unk_23365BC4C, &type metadata for BankConnectService.Message.TermsAndConditionsWithInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553B8);
  }
  return result;
}

unint64_t sub_233560A30()
{
  unint64_t result;

  result = qword_2560553C0;
  if (!qword_2560553C0)
  {
    result = MEMORY[0x234934494](&unk_23365BD04, &type metadata for BankConnectService.Message.ClassifyTransactionsWithTransactionIdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553C0);
  }
  return result;
}

unint64_t sub_233560A78()
{
  unint64_t result;

  result = qword_2560553C8;
  if (!qword_2560553C8)
  {
    result = MEMORY[0x234934494](&unk_23365BDBC, &type metadata for BankConnectService.Message.ValidateAccountConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553C8);
  }
  return result;
}

unint64_t sub_233560AC0()
{
  unint64_t result;

  result = qword_2560553D0;
  if (!qword_2560553D0)
  {
    result = MEMORY[0x234934494](&unk_23365BE74, &type metadata for BankConnectService.Message.DisconnectAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553D0);
  }
  return result;
}

unint64_t sub_233560B08()
{
  unint64_t result;

  result = qword_2560553D8;
  if (!qword_2560553D8)
  {
    result = MEMORY[0x234934494](&unk_23365BF2C, &type metadata for BankConnectService.Message.LoadTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553D8);
  }
  return result;
}

unint64_t sub_233560B50()
{
  unint64_t result;

  result = qword_2560553E0;
  if (!qword_2560553E0)
  {
    result = MEMORY[0x234934494](&unk_23365BFE4, &type metadata for BankConnectService.Message.LoadTransactionsForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553E0);
  }
  return result;
}

unint64_t sub_233560B98()
{
  unint64_t result;

  result = qword_2560553E8;
  if (!qword_2560553E8)
  {
    result = MEMORY[0x234934494](&unk_23365C09C, &type metadata for BankConnectService.Message.RevokeConsentsForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553E8);
  }
  return result;
}

unint64_t sub_233560BE0()
{
  unint64_t result;

  result = qword_2560553F0;
  if (!qword_2560553F0)
  {
    result = MEMORY[0x234934494](&unk_23365C154, &type metadata for BankConnectService.Message.RevokeConnectionAuthorizationForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553F0);
  }
  return result;
}

unint64_t sub_233560C28()
{
  unint64_t result;

  result = qword_2560553F8;
  if (!qword_2560553F8)
  {
    result = MEMORY[0x234934494](&unk_23365C20C, &type metadata for BankConnectService.Message.LoadPaymentInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560553F8);
  }
  return result;
}

unint64_t sub_233560C70()
{
  unint64_t result;

  result = qword_256055400;
  if (!qword_256055400)
  {
    result = MEMORY[0x234934494](&unk_23365C2C4, &type metadata for BankConnectService.Message.LoadPaymentInfoForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055400);
  }
  return result;
}

unint64_t sub_233560CB8()
{
  unint64_t result;

  result = qword_256055408;
  if (!qword_256055408)
  {
    result = MEMORY[0x234934494](&unk_23365C37C, &type metadata for BankConnectService.Message.PostOfflineLabItemsToURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055408);
  }
  return result;
}

unint64_t sub_233560D00()
{
  unint64_t result;

  result = qword_256055410;
  if (!qword_256055410)
  {
    result = MEMORY[0x234934494](&unk_23365C434, &type metadata for BankConnectService.Message.SetOfflineLabSharingPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055410);
  }
  return result;
}

unint64_t sub_233560D48()
{
  unint64_t result;

  result = qword_256055418;
  if (!qword_256055418)
  {
    result = MEMORY[0x234934494](&unk_23365C58C, &type metadata for BankConnectService.Message.InitiateConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055418);
  }
  return result;
}

unint64_t sub_233560D90()
{
  unint64_t result;

  result = qword_256055420;
  if (!qword_256055420)
  {
    result = MEMORY[0x234934494](&unk_23365C644, &type metadata for BankConnectService.Message.InstitutionForPaymentPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055420);
  }
  return result;
}

unint64_t sub_233560DD8()
{
  unint64_t result;

  result = qword_256055428;
  if (!qword_256055428)
  {
    result = MEMORY[0x234934494](&unk_23365C6FC, &type metadata for BankConnectService.Message.RemoveLogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055428);
  }
  return result;
}

unint64_t sub_233560E20()
{
  unint64_t result;

  result = qword_256055430;
  if (!qword_256055430)
  {
    result = MEMORY[0x234934494](&unk_23365C7B4, &type metadata for BankConnectService.Message.LogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055430);
  }
  return result;
}

unint64_t sub_233560E68()
{
  unint64_t result;

  result = qword_256055438;
  if (!qword_256055438)
  {
    result = MEMORY[0x234934494](&unk_23365C86C, &type metadata for BankConnectService.Message.ScheduleHistoricalTransactionTaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055438);
  }
  return result;
}

unint64_t sub_233560EB0()
{
  unint64_t result;

  result = qword_256055440;
  if (!qword_256055440)
  {
    result = MEMORY[0x234934494](&unk_23365C924, &type metadata for BankConnectService.Message.LoadGrantedAccountsForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055440);
  }
  return result;
}

unint64_t sub_233560EF8()
{
  unint64_t result;

  result = qword_256055448;
  if (!qword_256055448)
  {
    result = MEMORY[0x234934494](&unk_23365C9DC, &type metadata for BankConnectService.Message.DecryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055448);
  }
  return result;
}

unint64_t sub_233560F40()
{
  unint64_t result;

  result = qword_256055450;
  if (!qword_256055450)
  {
    result = MEMORY[0x234934494](&unk_23365CA94, &type metadata for BankConnectService.Message.EncryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055450);
  }
  return result;
}

unint64_t sub_233560F88()
{
  unint64_t result;

  result = qword_256055458;
  if (!qword_256055458)
  {
    result = MEMORY[0x234934494](&unk_23365CB4C, &type metadata for BankConnectService.Message.CompleteConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055458);
  }
  return result;
}

unint64_t sub_233560FD0()
{
  unint64_t result;

  result = qword_256055460;
  if (!qword_256055460)
  {
    result = MEMORY[0x234934494](&unk_23365CC04, &type metadata for BankConnectService.Message.UpdateConsentStatusForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055460);
  }
  return result;
}

unint64_t sub_233561018()
{
  unint64_t result;

  result = qword_256055468;
  if (!qword_256055468)
  {
    result = MEMORY[0x234934494](&unk_23365CCBC, &type metadata for BankConnectService.Message.GetConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055468);
  }
  return result;
}

unint64_t sub_233561060()
{
  unint64_t result;

  result = qword_256055470;
  if (!qword_256055470)
  {
    result = MEMORY[0x234934494](&unk_23365CD74, &type metadata for BankConnectService.Message.ConnectUnlinkedAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055470);
  }
  return result;
}

unint64_t sub_2335610A8()
{
  unint64_t result;

  result = qword_256055478;
  if (!qword_256055478)
  {
    result = MEMORY[0x234934494](&unk_23365CE2C, &type metadata for BankConnectService.Message.ConnectAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055478);
  }
  return result;
}

unint64_t sub_2335610F0()
{
  unint64_t result;

  result = qword_256055480;
  if (!qword_256055480)
  {
    result = MEMORY[0x234934494](&unk_23365CEE4, &type metadata for BankConnectService.Message.LoadAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055480);
  }
  return result;
}

unint64_t sub_233561138()
{
  unint64_t result;

  result = qword_256055488;
  if (!qword_256055488)
  {
    result = MEMORY[0x234934494](&unk_23365CF9C, &type metadata for BankConnectService.Message.LoadAccountForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055488);
  }
  return result;
}

unint64_t sub_233561180()
{
  unint64_t result;

  result = qword_256055490;
  if (!qword_256055490)
  {
    result = MEMORY[0x234934494](&unk_23365D054, &type metadata for BankConnectService.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055490);
  }
  return result;
}

unint64_t sub_2335611C8()
{
  unint64_t result;

  result = qword_256055498;
  if (!qword_256055498)
  {
    result = MEMORY[0x234934494](&unk_23365CF0C, &type metadata for BankConnectService.Message.LoadAccountForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055498);
  }
  return result;
}

unint64_t sub_233561210()
{
  unint64_t result;

  result = qword_2560554A0;
  if (!qword_2560554A0)
  {
    result = MEMORY[0x234934494](&unk_23365CF34, &type metadata for BankConnectService.Message.LoadAccountForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554A0);
  }
  return result;
}

unint64_t sub_233561258()
{
  unint64_t result;

  result = qword_2560554A8;
  if (!qword_2560554A8)
  {
    result = MEMORY[0x234934494](&unk_23365CE54, &type metadata for BankConnectService.Message.LoadAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554A8);
  }
  return result;
}

unint64_t sub_2335612A0()
{
  unint64_t result;

  result = qword_2560554B0;
  if (!qword_2560554B0)
  {
    result = MEMORY[0x234934494](&unk_23365CE7C, &type metadata for BankConnectService.Message.LoadAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554B0);
  }
  return result;
}

unint64_t sub_2335612E8()
{
  unint64_t result;

  result = qword_2560554B8;
  if (!qword_2560554B8)
  {
    result = MEMORY[0x234934494](&unk_23365CD9C, &type metadata for BankConnectService.Message.ConnectAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554B8);
  }
  return result;
}

unint64_t sub_233561330()
{
  unint64_t result;

  result = qword_2560554C0;
  if (!qword_2560554C0)
  {
    result = MEMORY[0x234934494](&unk_23365CDC4, &type metadata for BankConnectService.Message.ConnectAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554C0);
  }
  return result;
}

unint64_t sub_233561378()
{
  unint64_t result;

  result = qword_2560554C8;
  if (!qword_2560554C8)
  {
    result = MEMORY[0x234934494](&unk_23365CCE4, &type metadata for BankConnectService.Message.ConnectUnlinkedAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554C8);
  }
  return result;
}

unint64_t sub_2335613C0()
{
  unint64_t result;

  result = qword_2560554D0;
  if (!qword_2560554D0)
  {
    result = MEMORY[0x234934494](&unk_23365CD0C, &type metadata for BankConnectService.Message.ConnectUnlinkedAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554D0);
  }
  return result;
}

unint64_t sub_233561408()
{
  unint64_t result;

  result = qword_2560554D8;
  if (!qword_2560554D8)
  {
    result = MEMORY[0x234934494](&unk_23365CC2C, &type metadata for BankConnectService.Message.GetConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554D8);
  }
  return result;
}

unint64_t sub_233561450()
{
  unint64_t result;

  result = qword_2560554E0;
  if (!qword_2560554E0)
  {
    result = MEMORY[0x234934494](&unk_23365CC54, &type metadata for BankConnectService.Message.GetConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554E0);
  }
  return result;
}

unint64_t sub_233561498()
{
  unint64_t result;

  result = qword_2560554E8;
  if (!qword_2560554E8)
  {
    result = MEMORY[0x234934494](&unk_23365CB74, &type metadata for BankConnectService.Message.UpdateConsentStatusForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554E8);
  }
  return result;
}

unint64_t sub_2335614E0()
{
  unint64_t result;

  result = qword_2560554F0;
  if (!qword_2560554F0)
  {
    result = MEMORY[0x234934494](&unk_23365CB9C, &type metadata for BankConnectService.Message.UpdateConsentStatusForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554F0);
  }
  return result;
}

unint64_t sub_233561528()
{
  unint64_t result;

  result = qword_2560554F8;
  if (!qword_2560554F8)
  {
    result = MEMORY[0x234934494](&unk_23365CABC, &type metadata for BankConnectService.Message.CompleteConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560554F8);
  }
  return result;
}

unint64_t sub_233561570()
{
  unint64_t result;

  result = qword_256055500;
  if (!qword_256055500)
  {
    result = MEMORY[0x234934494](&unk_23365CAE4, &type metadata for BankConnectService.Message.CompleteConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055500);
  }
  return result;
}

unint64_t sub_2335615B8()
{
  unint64_t result;

  result = qword_256055508;
  if (!qword_256055508)
  {
    result = MEMORY[0x234934494](&unk_23365CA04, &type metadata for BankConnectService.Message.EncryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055508);
  }
  return result;
}

unint64_t sub_233561600()
{
  unint64_t result;

  result = qword_256055510;
  if (!qword_256055510)
  {
    result = MEMORY[0x234934494](&unk_23365CA2C, &type metadata for BankConnectService.Message.EncryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055510);
  }
  return result;
}

unint64_t sub_233561648()
{
  unint64_t result;

  result = qword_256055518;
  if (!qword_256055518)
  {
    result = MEMORY[0x234934494](&unk_23365C94C, &type metadata for BankConnectService.Message.DecryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055518);
  }
  return result;
}

unint64_t sub_233561690()
{
  unint64_t result;

  result = qword_256055520;
  if (!qword_256055520)
  {
    result = MEMORY[0x234934494](&unk_23365C974, &type metadata for BankConnectService.Message.DecryptAccountPaymentInformationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055520);
  }
  return result;
}

unint64_t sub_2335616D8()
{
  unint64_t result;

  result = qword_256055528;
  if (!qword_256055528)
  {
    result = MEMORY[0x234934494](&unk_23365C894, &type metadata for BankConnectService.Message.LoadGrantedAccountsForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055528);
  }
  return result;
}

unint64_t sub_233561720()
{
  unint64_t result;

  result = qword_256055530;
  if (!qword_256055530)
  {
    result = MEMORY[0x234934494](&unk_23365C8BC, &type metadata for BankConnectService.Message.LoadGrantedAccountsForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055530);
  }
  return result;
}

unint64_t sub_233561768()
{
  unint64_t result;

  result = qword_256055538;
  if (!qword_256055538)
  {
    result = MEMORY[0x234934494](&unk_23365C7DC, &type metadata for BankConnectService.Message.ScheduleHistoricalTransactionTaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055538);
  }
  return result;
}

unint64_t sub_2335617B0()
{
  unint64_t result;

  result = qword_256055540;
  if (!qword_256055540)
  {
    result = MEMORY[0x234934494](&unk_23365C804, &type metadata for BankConnectService.Message.ScheduleHistoricalTransactionTaskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055540);
  }
  return result;
}

unint64_t sub_2335617F8()
{
  unint64_t result;

  result = qword_256055548;
  if (!qword_256055548)
  {
    result = MEMORY[0x234934494](&unk_23365C724, &type metadata for BankConnectService.Message.LogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055548);
  }
  return result;
}

unint64_t sub_233561840()
{
  unint64_t result;

  result = qword_256055550;
  if (!qword_256055550)
  {
    result = MEMORY[0x234934494](&unk_23365C74C, &type metadata for BankConnectService.Message.LogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055550);
  }
  return result;
}

unint64_t sub_233561888()
{
  unint64_t result;

  result = qword_256055558;
  if (!qword_256055558)
  {
    result = MEMORY[0x234934494](&unk_23365C66C, &type metadata for BankConnectService.Message.RemoveLogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055558);
  }
  return result;
}

unint64_t sub_2335618D0()
{
  unint64_t result;

  result = qword_256055560;
  if (!qword_256055560)
  {
    result = MEMORY[0x234934494](&unk_23365C694, &type metadata for BankConnectService.Message.RemoveLogoForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055560);
  }
  return result;
}

unint64_t sub_233561918()
{
  unint64_t result;

  result = qword_256055568;
  if (!qword_256055568)
  {
    result = MEMORY[0x234934494](&unk_23365C5B4, &type metadata for BankConnectService.Message.InstitutionForPaymentPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055568);
  }
  return result;
}

unint64_t sub_233561960()
{
  unint64_t result;

  result = qword_256055570;
  if (!qword_256055570)
  {
    result = MEMORY[0x234934494](&unk_23365C5DC, &type metadata for BankConnectService.Message.InstitutionForPaymentPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055570);
  }
  return result;
}

unint64_t sub_2335619A8()
{
  unint64_t result;

  result = qword_256055578;
  if (!qword_256055578)
  {
    result = MEMORY[0x234934494](&unk_23365C4FC, &type metadata for BankConnectService.Message.InitiateConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055578);
  }
  return result;
}

unint64_t sub_2335619F0()
{
  unint64_t result;

  result = qword_256055580;
  if (!qword_256055580)
  {
    result = MEMORY[0x234934494](&unk_23365C524, &type metadata for BankConnectService.Message.InitiateConnectionAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055580);
  }
  return result;
}

unint64_t sub_233561A38()
{
  unint64_t result;

  result = qword_256055588;
  if (!qword_256055588)
  {
    result = MEMORY[0x234934494](&unk_23365C4AC, &type metadata for BankConnectService.Message.OfflineLabPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055588);
  }
  return result;
}

unint64_t sub_233561A80()
{
  unint64_t result;

  result = qword_256055590;
  if (!qword_256055590)
  {
    result = MEMORY[0x234934494](&unk_23365C4D4, &type metadata for BankConnectService.Message.OfflineLabPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055590);
  }
  return result;
}

unint64_t sub_233561AC8()
{
  unint64_t result;

  result = qword_256055598;
  if (!qword_256055598)
  {
    result = MEMORY[0x234934494](&unk_23365C45C, &type metadata for BankConnectService.Message.OfflineLabSharingPreferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055598);
  }
  return result;
}

unint64_t sub_233561B10()
{
  unint64_t result;

  result = qword_2560555A0;
  if (!qword_2560555A0)
  {
    result = MEMORY[0x234934494](&unk_23365C484, &type metadata for BankConnectService.Message.OfflineLabSharingPreferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555A0);
  }
  return result;
}

unint64_t sub_233561B58()
{
  unint64_t result;

  result = qword_2560555A8;
  if (!qword_2560555A8)
  {
    result = MEMORY[0x234934494](&unk_23365C3A4, &type metadata for BankConnectService.Message.SetOfflineLabSharingPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555A8);
  }
  return result;
}

unint64_t sub_233561BA0()
{
  unint64_t result;

  result = qword_2560555B0;
  if (!qword_2560555B0)
  {
    result = MEMORY[0x234934494](&unk_23365C3CC, &type metadata for BankConnectService.Message.SetOfflineLabSharingPermissionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555B0);
  }
  return result;
}

unint64_t sub_233561BE8()
{
  unint64_t result;

  result = qword_2560555B8;
  if (!qword_2560555B8)
  {
    result = MEMORY[0x234934494](&unk_23365C2EC, &type metadata for BankConnectService.Message.PostOfflineLabItemsToURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555B8);
  }
  return result;
}

unint64_t sub_233561C30()
{
  unint64_t result;

  result = qword_2560555C0;
  if (!qword_2560555C0)
  {
    result = MEMORY[0x234934494](&unk_23365C314, &type metadata for BankConnectService.Message.PostOfflineLabItemsToURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555C0);
  }
  return result;
}

unint64_t sub_233561C78()
{
  unint64_t result;

  result = qword_2560555C8;
  if (!qword_2560555C8)
  {
    result = MEMORY[0x234934494](&unk_23365C234, &type metadata for BankConnectService.Message.LoadPaymentInfoForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555C8);
  }
  return result;
}

unint64_t sub_233561CC0()
{
  unint64_t result;

  result = qword_2560555D0;
  if (!qword_2560555D0)
  {
    result = MEMORY[0x234934494](&unk_23365C25C, &type metadata for BankConnectService.Message.LoadPaymentInfoForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555D0);
  }
  return result;
}

unint64_t sub_233561D08()
{
  unint64_t result;

  result = qword_2560555D8;
  if (!qword_2560555D8)
  {
    result = MEMORY[0x234934494](&unk_23365C17C, &type metadata for BankConnectService.Message.LoadPaymentInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555D8);
  }
  return result;
}

unint64_t sub_233561D50()
{
  unint64_t result;

  result = qword_2560555E0;
  if (!qword_2560555E0)
  {
    result = MEMORY[0x234934494](&unk_23365C1A4, &type metadata for BankConnectService.Message.LoadPaymentInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555E0);
  }
  return result;
}

unint64_t sub_233561D98()
{
  unint64_t result;

  result = qword_2560555E8;
  if (!qword_2560555E8)
  {
    result = MEMORY[0x234934494](&unk_23365C0C4, &type metadata for BankConnectService.Message.RevokeConnectionAuthorizationForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555E8);
  }
  return result;
}

unint64_t sub_233561DE0()
{
  unint64_t result;

  result = qword_2560555F0;
  if (!qword_2560555F0)
  {
    result = MEMORY[0x234934494](&unk_23365C0EC, &type metadata for BankConnectService.Message.RevokeConnectionAuthorizationForConsentIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555F0);
  }
  return result;
}

unint64_t sub_233561E28()
{
  unint64_t result;

  result = qword_2560555F8;
  if (!qword_2560555F8)
  {
    result = MEMORY[0x234934494](&unk_23365C00C, &type metadata for BankConnectService.Message.RevokeConsentsForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560555F8);
  }
  return result;
}

unint64_t sub_233561E70()
{
  unint64_t result;

  result = qword_256055600;
  if (!qword_256055600)
  {
    result = MEMORY[0x234934494](&unk_23365C034, &type metadata for BankConnectService.Message.RevokeConsentsForInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055600);
  }
  return result;
}

unint64_t sub_233561EB8()
{
  unint64_t result;

  result = qword_256055608;
  if (!qword_256055608)
  {
    result = MEMORY[0x234934494](&unk_23365BF54, &type metadata for BankConnectService.Message.LoadTransactionsForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055608);
  }
  return result;
}

unint64_t sub_233561F00()
{
  unint64_t result;

  result = qword_256055610;
  if (!qword_256055610)
  {
    result = MEMORY[0x234934494](&unk_23365BF7C, &type metadata for BankConnectService.Message.LoadTransactionsForPrimaryAccountIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055610);
  }
  return result;
}

unint64_t sub_233561F48()
{
  unint64_t result;

  result = qword_256055618;
  if (!qword_256055618)
  {
    result = MEMORY[0x234934494](&unk_23365BE9C, &type metadata for BankConnectService.Message.LoadTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055618);
  }
  return result;
}

unint64_t sub_233561F90()
{
  unint64_t result;

  result = qword_256055620;
  if (!qword_256055620)
  {
    result = MEMORY[0x234934494](&unk_23365BEC4, &type metadata for BankConnectService.Message.LoadTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055620);
  }
  return result;
}

unint64_t sub_233561FD8()
{
  unint64_t result;

  result = qword_256055628;
  if (!qword_256055628)
  {
    result = MEMORY[0x234934494](&unk_23365BDE4, &type metadata for BankConnectService.Message.DisconnectAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055628);
  }
  return result;
}

unint64_t sub_233562020()
{
  unint64_t result;

  result = qword_256055630;
  if (!qword_256055630)
  {
    result = MEMORY[0x234934494](&unk_23365BE0C, &type metadata for BankConnectService.Message.DisconnectAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055630);
  }
  return result;
}

unint64_t sub_233562068()
{
  unint64_t result;

  result = qword_256055638;
  if (!qword_256055638)
  {
    result = MEMORY[0x234934494](&unk_23365BD2C, &type metadata for BankConnectService.Message.ValidateAccountConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055638);
  }
  return result;
}

unint64_t sub_2335620B0()
{
  unint64_t result;

  result = qword_256055640;
  if (!qword_256055640)
  {
    result = MEMORY[0x234934494](&unk_23365BD54, &type metadata for BankConnectService.Message.ValidateAccountConnectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055640);
  }
  return result;
}

unint64_t sub_2335620F8()
{
  unint64_t result;

  result = qword_256055648;
  if (!qword_256055648)
  {
    result = MEMORY[0x234934494](&unk_23365BC74, &type metadata for BankConnectService.Message.ClassifyTransactionsWithTransactionIdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055648);
  }
  return result;
}

unint64_t sub_233562140()
{
  unint64_t result;

  result = qword_256055650;
  if (!qword_256055650)
  {
    result = MEMORY[0x234934494](&unk_23365BC9C, &type metadata for BankConnectService.Message.ClassifyTransactionsWithTransactionIdsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055650);
  }
  return result;
}

unint64_t sub_233562188()
{
  unint64_t result;

  result = qword_256055658;
  if (!qword_256055658)
  {
    result = MEMORY[0x234934494](&unk_23365BBBC, &type metadata for BankConnectService.Message.TermsAndConditionsWithInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055658);
  }
  return result;
}

unint64_t sub_2335621D0()
{
  unint64_t result;

  result = qword_256055660;
  if (!qword_256055660)
  {
    result = MEMORY[0x234934494](&unk_23365BBE4, &type metadata for BankConnectService.Message.TermsAndConditionsWithInstitutionIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055660);
  }
  return result;
}

unint64_t sub_233562218()
{
  unint64_t result;

  result = qword_256055668;
  if (!qword_256055668)
  {
    result = MEMORY[0x234934494](&unk_23365BB04, &type metadata for BankConnectService.Message.TermsAndConditionsURLForTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055668);
  }
  return result;
}

unint64_t sub_233562260()
{
  unint64_t result;

  result = qword_256055670;
  if (!qword_256055670)
  {
    result = MEMORY[0x234934494](&unk_23365BB2C, &type metadata for BankConnectService.Message.TermsAndConditionsURLForTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055670);
  }
  return result;
}

unint64_t sub_2335622A8()
{
  unint64_t result;

  result = qword_256055678;
  if (!qword_256055678)
  {
    result = MEMORY[0x234934494](&unk_23365BA4C, &type metadata for BankConnectService.Message.UpdateTermsAndConditionsWithTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055678);
  }
  return result;
}

unint64_t sub_2335622F0()
{
  unint64_t result;

  result = qword_256055680;
  if (!qword_256055680)
  {
    result = MEMORY[0x234934494](&unk_23365BA74, &type metadata for BankConnectService.Message.UpdateTermsAndConditionsWithTermsAndConditionsIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055680);
  }
  return result;
}

unint64_t sub_233562338()
{
  unint64_t result;

  result = qword_256055688;
  if (!qword_256055688)
  {
    result = MEMORY[0x234934494](&unk_23365B994, &type metadata for BankConnectService.Message.InsertOrUpdateInstitutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055688);
  }
  return result;
}

unint64_t sub_233562380()
{
  unint64_t result;

  result = qword_256055690;
  if (!qword_256055690)
  {
    result = MEMORY[0x234934494](&unk_23365B9BC, &type metadata for BankConnectService.Message.InsertOrUpdateInstitutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055690);
  }
  return result;
}

unint64_t sub_2335623C8()
{
  unint64_t result;

  result = qword_256055698;
  if (!qword_256055698)
  {
    result = MEMORY[0x234934494](&unk_23365B944, &type metadata for BankConnectService.Message.DiscoveryCardEligibilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055698);
  }
  return result;
}

unint64_t sub_233562410()
{
  unint64_t result;

  result = qword_2560556A0;
  if (!qword_2560556A0)
  {
    result = MEMORY[0x234934494](&unk_23365B96C, &type metadata for BankConnectService.Message.DiscoveryCardEligibilityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560556A0);
  }
  return result;
}

unint64_t sub_233562458()
{
  unint64_t result;

  result = qword_2560556A8;
  if (!qword_2560556A8)
  {
    result = MEMORY[0x234934494](&unk_23365CFC4, &type metadata for BankConnectService.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560556A8);
  }
  return result;
}

unint64_t sub_2335624A0()
{
  unint64_t result;

  result = qword_2560556B0;
  if (!qword_2560556B0)
  {
    result = MEMORY[0x234934494](&unk_23365CFEC, &type metadata for BankConnectService.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560556B0);
  }
  return result;
}

uint64_t sub_2335624E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367B150)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2335625B8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000026 && a2 == 0x800000023367ACF0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F63634164616F6CLL && a2 == 0xEB00000000746E75 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x417463656E6E6F63 && a2 == 0xEF73746E756F6363 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023367AD20 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65736E6F43746567 && a2 == 0xEA0000000000746ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023367AD40 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023367AD60 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023367AD80 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023367ADB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023367ADE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000023367AE00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023367AE30 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023367AE50 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023367AE70 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023367AE90 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023367AEB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023367AED0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023367AEF0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023367AF10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x800000023367AF30 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6D79615064616F6CLL && a2 == 0xEF6F666E49746E65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x800000023367AF60 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023367AF90 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x800000023367AFB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023367AFE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023367B000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023367B020 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000023367B040 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000023367B070 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x800000023367B0A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x800000023367B0D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023367B110 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023367B130)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 32;
    else
      return 33;
  }
}

uint64_t sub_2335631AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023367B1B0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7373416475617266 && a2 == 0xEF746E656D737365 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2335633A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x507972616D697270 && a2 == 0xEB00000000737361;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023367B1D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xEB000000006E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023367B1F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023367B210)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2335635D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7475746974736E69 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44496E617066 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023367B170 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367B190)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233563798(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465776569766572 && a2 == 0xEA00000000007441)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23356387C()
{
  unint64_t result;

  result = qword_2560556B8;
  if (!qword_2560556B8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectServiceError, &type metadata for BankConnectServiceError);
    atomic_store(result, (unint64_t *)&qword_2560556B8);
  }
  return result;
}

uint64_t sub_2335638C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233563908(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_233563948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = type metadata accessor for RawOrderPaymentTransaction();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v9 = (uint64_t *)(v5 + *(int *)(v3 + 40));
    v10 = v9[1];
    if (v10)
    {
      v11 = *v9;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_2334A4AA4(0, v7[2] + 1, 1, v7);
      v13 = v7[2];
      v12 = v7[3];
      if (v13 >= v12 >> 1)
        v7 = sub_2334A4AA4((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
      v7[2] = v13 + 1;
      v8 = &v7[2 * v13];
      v8[4] = v11;
      v8[5] = v10;
    }
    v5 += v6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

_QWORD *sub_233563A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = type metadata accessor for RawOrderReturn();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v9 = (uint64_t *)(v5 + *(int *)(v3 + 56));
    v10 = v9[1];
    if (v10)
    {
      v11 = *v9;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_2334A4AA4(0, v7[2] + 1, 1, v7);
      v13 = v7[2];
      v12 = v7[3];
      if (v13 >= v12 >> 1)
        v7 = sub_2334A4AA4((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
      v7[2] = v13 + 1;
      v8 = &v7[2 * v13];
      v8[4] = v11;
      v8[5] = v10;
    }
    v5 += v6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_233563BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  unsigned int v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  unsigned __int16 v53;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v42 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v42 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v42 - v13;
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)&v42 - v20;
  v49 = *(_QWORD *)(a1 + 16);
  if (v49)
  {
    v43 = v9;
    v44 = v6;
    v45 = v12;
    v42 = v1;
    swift_bridgeObjectRetain();
    v21 = 0;
    v22 = MEMORY[0x24BEE4AF8];
    v48 = a1;
    v46 = v19;
    while (1)
    {
      v23 = *(_QWORD *)(a1 + 8 * v21 + 32);
      if ((v23 & 0x8000000000000000) != 0)
        break;
      v24 = (id)v23;
      v25 = objc_msgSend(v24, sel_statusValue);
      if (v25 > 7)
      {
        v50 = 0;
        v51 = 0xE000000000000000;
        sub_23361ED98();
        swift_bridgeObjectRelease();
        v50 = 0xD000000000000022;
        v51 = 0x80000002336717A0;
        v53 = (unsigned __int16)objc_msgSend(v24, sel_statusValue);
        sub_23361F1D0();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        result = sub_23361EF24();
        __break(1u);
        return result;
      }
      if (((1 << v25) & 0xCF) == 0)
      {
        if ((unsigned __int16)v25 != 4)
        {
          v38 = objc_msgSend(v24, sel_shippedDate);
          if (v38)
          {
            v39 = v38;
            v40 = (uint64_t)v43;
            sub_23361D5EC();

            v52 = 0;
          }
          else
          {
            v52 = 1;
            v39 = v24;
            v40 = (uint64_t)v43;
          }

          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v40, v52, 1, v15);
          sub_233168478(v40, (uint64_t)v14, (uint64_t *)&unk_254247DA0);
          a1 = v48;
          goto LABEL_17;
        }
        v30 = objc_msgSend(v24, sel_deliveryDate);
        if (v30)
        {
          v31 = v30;
          v32 = (uint64_t)v44;
          sub_23361D5EC();

          v33 = 0;
        }
        else
        {
          v33 = 1;
          v32 = (uint64_t)v44;
        }

        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v32, v33, 1, v15);
        sub_233168478(v32, (uint64_t)v14, (uint64_t *)&unk_254247DA0);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);

LABEL_17:
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_233168608((uint64_t)v14, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        v34 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v35 = v47;
        v34(v47, v14, v15);
        v34(v19, v35, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_2334A4964(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
        v37 = *(_QWORD *)(v22 + 16);
        v36 = *(_QWORD *)(v22 + 24);
        if (v37 >= v36 >> 1)
          v22 = sub_2334A4964(v36 > 1, v37 + 1, 1, v22);
        *(_QWORD *)(v22 + 16) = v37 + 1;
        v34((char *)(v22+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v37), v19, v15);
        a1 = v48;
      }
      if (v49 == ++v21)
      {
        swift_bridgeObjectRelease();
        return v22;
      }
    }
    v24 = (id)(v23 & 0x7FFFFFFFFFFFFFFFLL);
    v26 = objc_msgSend(v24, sel_pickedUpDate);
    if (v26)
    {
      v27 = v26;
      v28 = (uint64_t)v45;
      sub_23361D5EC();

      v29 = 0;
    }
    else
    {
      v29 = 1;
      v27 = v24;
      v28 = (uint64_t)v45;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v28, v29, 1, v15);
    sub_233168478(v28, (uint64_t)v14, (uint64_t *)&unk_254247DA0);
    a1 = v48;
LABEL_16:
    v19 = v46;
    goto LABEL_17;
  }
  return MEMORY[0x24BEE4AF8];
}

_QWORD *ManagedECommerceOrderContent.fulfillments.getter()
{
  unint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v1 = (_QWORD *)sub_2331A6FB8(v0);
  swift_bridgeObjectRelease();
  v5 = v1;
  v2 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v3 = sub_2331A70F4(v2);
  swift_bridgeObjectRelease();
  sub_2331896C8(v3);
  sub_2331A8628(&v5);
  return v5;
}

id static ManagedECommerceOrderContent.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit28ManagedECommerceOrderContent;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

uint64_t ManagedECommerceOrderContent.shippingFulfillments.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  _BYTE v14[32];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = sub_23361D1CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(v0, sel_shippingFulfillmentObjects);
  v19 = MEMORY[0x24BEE4AF8];
  v7 = v6;
  sub_23361E9B4();

  sub_233167C58((unint64_t *)&qword_256049B58, v2, MEMORY[0x24BDCD530]);
  sub_23361EBB8();
  while (v18)
  {
    sub_2331683D0(v17, v16);
    sub_233168350((uint64_t)v16, (uint64_t)v14);
    type metadata accessor for ManagedOrderShippingFulfillment();
    if ((swift_dynamicCast() & 1) == 0)
      v15 = 0;
    v8 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v15)
    {
      MEMORY[0x234932730](v8);
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
    }
    sub_23361EBB8();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  v9 = v19;

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_2333AFB64(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v17[0] = v10;
  sub_23335FB24(v17, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderShippingFulfillment, (void (*)(id **, void ***, char **))sub_23360584C);
  swift_bridgeObjectRelease();
  return v17[0];
}

uint64_t ManagedECommerceOrderContent.pickupFulfillments.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  _BYTE v14[32];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = sub_23361D1CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(v0, sel_pickupFulfillmentObjects);
  v19 = MEMORY[0x24BEE4AF8];
  v7 = v6;
  sub_23361E9B4();

  sub_233167C58((unint64_t *)&qword_256049B58, v2, MEMORY[0x24BDCD530]);
  sub_23361EBB8();
  while (v18)
  {
    sub_2331683D0(v17, v16);
    sub_233168350((uint64_t)v16, (uint64_t)v14);
    type metadata accessor for ManagedOrderPickupFulfillment();
    if ((swift_dynamicCast() & 1) == 0)
      v15 = 0;
    v8 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v15)
    {
      MEMORY[0x234932730](v8);
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
    }
    sub_23361EBB8();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  v9 = v19;

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_2333AFB70(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v17[0] = v10;
  sub_23335FB24(v17, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderPickupFulfillment, (void (*)(id **, void ***, char **))sub_23360584C);
  swift_bridgeObjectRelease();
  return v17[0];
}

uint64_t ManagedECommerceOrderContent.lineItems.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  _BYTE v14[32];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = sub_23361D1CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(v0, sel_lineItemObjects);
  v19 = MEMORY[0x24BEE4AF8];
  v7 = v6;
  sub_23361E9B4();

  sub_233167C58((unint64_t *)&qword_256049B58, v2, MEMORY[0x24BDCD530]);
  sub_23361EBB8();
  while (v18)
  {
    sub_2331683D0(v17, v16);
    sub_233168350((uint64_t)v16, (uint64_t)v14);
    type metadata accessor for ManagedOrderLineItem();
    if ((swift_dynamicCast() & 1) == 0)
      v15 = 0;
    v8 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v15)
    {
      MEMORY[0x234932730](v8);
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
    }
    sub_23361EBB8();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  v9 = v19;

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_2333AFE60(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v17[0] = v10;
  sub_23335FB24(v17, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderLineItem, (void (*)(id **, void ***, char **))sub_23360584C);
  swift_bridgeObjectRelease();
  return v17[0];
}

uint64_t ManagedECommerceOrderContent.returns.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  _BYTE v14[32];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = sub_23361D1CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(v0, sel_returnObjects);
  v19 = MEMORY[0x24BEE4AF8];
  v7 = v6;
  sub_23361E9B4();

  sub_233167C58((unint64_t *)&qword_256049B58, v2, MEMORY[0x24BDCD530]);
  sub_23361EBB8();
  while (v18)
  {
    sub_2331683D0(v17, v16);
    sub_233168350((uint64_t)v16, (uint64_t)v14);
    type metadata accessor for ManagedOrderReturn();
    if ((swift_dynamicCast() & 1) == 0)
      v15 = 0;
    v8 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v15)
    {
      MEMORY[0x234932730](v8);
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
    }
    sub_23361EBB8();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  v9 = v19;

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_2333AFB7C(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v17[0] = v10;
  sub_23335FB24(v17, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturn, (void (*)(id **, void ***, char **))sub_23360584C);
  swift_bridgeObjectRelease();
  return v17[0];
}

id ManagedECommerceOrderContent.changeNotifications.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;
  char v5;

  v2 = v1;
  result = objc_msgSend(v2, sel_changeNotificationsValue);
  if (!(_DWORD)result)
  {
    v5 = 0;
LABEL_4:
    *a1 = v5;
    return result;
  }
  v5 = (char)result;
  if ((unsigned __int16)result == 1)
    goto LABEL_4;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_changeNotificationsValue);
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = (id)sub_23361EF24();
  __break(1u);
  return result;
}

uint64_t ManagedECommerceOrderContent.associatedApplications.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  _BYTE v14[32];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = sub_23361D1CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend(v0, sel_associatedApplicationObjects);
  v19 = MEMORY[0x24BEE4AF8];
  v7 = v6;
  sub_23361E9B4();

  sub_233167C58((unint64_t *)&qword_256049B58, v2, MEMORY[0x24BDCD530]);
  sub_23361EBB8();
  while (v18)
  {
    sub_2331683D0(v17, v16);
    sub_233168350((uint64_t)v16, (uint64_t)v14);
    type metadata accessor for ManagedOrderApplication();
    if ((swift_dynamicCast() & 1) == 0)
      v15 = 0;
    v8 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v15)
    {
      MEMORY[0x234932730](v8);
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
    }
    sub_23361EBB8();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  v9 = v19;

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    v12 = swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_2333AFE78(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v17[0] = v10;
  sub_23335FB24(v17, (uint64_t (*)(uint64_t))sub_233607FC0, (void (*)(_QWORD))type metadata accessor for ManagedOrderApplication, (void (*)(id **, void ***, char **))sub_23360584C);
  swift_bridgeObjectRelease();
  return v17[0];
}

void ManagedECommerceOrderContent.__allocating_init(_:bundle:imageProcessingService:context:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  os_unfair_lock_s *v50;
  void *v51;
  int *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  int *v57;
  void *v58;
  uint64_t *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_unfair_lock_s *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  os_unfair_lock_s *v75;
  uint64_t v76;
  uint64_t v77;
  os_unfair_lock_s *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  void *v85;
  char *v86;
  os_unfair_lock_s *v87;
  __int128 *v88;
  uint64_t v89;
  os_unfair_lock_s *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  char *v101;
  char *v102;
  os_unfair_lock_s *v103;
  id v104;
  unint64_t v105;
  id v106;
  void *v107;
  id v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  os_unfair_lock_s *v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  id v116;
  void *v117;
  void *v118;
  id v119;
  id v120;
  void *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  int v134;
  int *v135;
  os_unfair_lock_s *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  void *v149;
  void *v150;
  unint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int (*v158)(uint64_t, uint64_t, unint64_t);
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  int v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  os_unfair_lock_s **v181;
  uint64_t v182;
  float v183;
  os_unfair_lock_s *v184;
  os_unfair_lock_s *v185;
  uint64_t v186;
  os_unfair_lock_s *v187;
  os_unfair_lock_s *v188;
  unint64_t v189;
  uint64_t v190;
  unsigned int v191;
  unint64_t v192;
  void *v193;
  uint64_t v194;
  os_unfair_lock_s *v195;
  _QWORD *v196;
  os_unfair_lock_s *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  float v203;
  os_unfair_lock_s *v204;
  os_unfair_lock_s *v205;
  uint64_t v206;
  uint64_t v207;
  os_unfair_lock_s *v208;
  os_unfair_lock_s *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void *v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  os_unfair_lock_s *v220;
  unint64_t v221;
  unint64_t v222;
  void *v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  float v243;
  char *v244;
  os_unfair_lock_s *v245;
  os_unfair_lock_s *v246;
  os_unfair_lock_s *v247;
  os_unfair_lock_s *v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  os_unfair_lock_s *v253;
  char *v254;
  char *v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  char *v262;
  char *v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  unint64_t v267;
  char *v268;
  uint64_t v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char **v285;
  char *v286;
  uint64_t v287;
  char **v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  id v292;
  int *v293;
  os_unfair_lock_s *v294;
  uint64_t v295;
  uint64_t v296;
  __int128 v297[8];
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  unint64_t v306;
  char v307[8];

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v260 = (char *)&v254 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256049CF8);
  MEMORY[0x24BDAC7A8](v11);
  v258 = (uint64_t)&v254 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v259 = type metadata accessor for Order.PriorityInfo(0);
  v257 = *(_QWORD *)(v259 - 8);
  MEMORY[0x24BDAC7A8](v259);
  v261 = (uint64_t)&v254 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedURLMap();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v254 = (char *)&v254 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v255 = (char *)&v254 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v263 = (char *)&v254 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v20);
  v283 = (char *)&v254 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v288 = (char **)type metadata accessor for RawOrderProvider();
  v279 = (uint64_t)*(v288 - 1);
  v22 = MEMORY[0x24BDAC7A8](v288);
  v273 = (char *)&v254 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v275 = (uint64_t)&v254 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v262 = (char *)&v254 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v282 = (char *)&v254 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v281 = (char *)&v254 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v280 = (char *)&v254 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v278 = (char *)&v254 - v34;
  v35 = type metadata accessor for RawOrderReturnInfo();
  v285 = *(char ***)(v35 - 8);
  v286 = (char *)v35;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v276 = (uint64_t)&v254 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v277 = (uint64_t)&v254 - v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
  MEMORY[0x24BDAC7A8](v39);
  v284 = (char *)&v254 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = type metadata accessor for RawMerchant();
  MEMORY[0x24BDAC7A8](v274);
  v42 = (uint64_t *)((char *)&v254 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = *(_QWORD *)(a2 + 16);
  v44 = objc_allocWithZone(v4);
  v289 = v43;
  swift_retain();
  v45 = objc_msgSend(v44, sel_initWithContext_, a4);
  v46 = type metadata accessor for RawECommerceOrderContent(0);
  v47 = *(unsigned __int8 *)(a1 + *(int *)(v46 + 36));
  v292 = v45;
  objc_msgSend(v292, sel_setStatusValue_, v47);
  v293 = (int *)v46;
  if (*(_QWORD *)(a1 + *(int *)(v46 + 40) + 8))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v48 = (void *)OrderBundle.localizedString(forKey:)();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = 0;
  }
  v49 = v292;
  objc_msgSend(v292, sel_setStatusDescription_, v48);

  type metadata accessor for ManagedOrderMerchant();
  sub_2331684BC(a1, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for RawMerchant);
  swift_retain();
  v50 = a4;
  v51 = ManagedOrderMerchant.__allocating_init(_:bundle:context:)(v42, a2, v50);
  objc_msgSend(v49, sel_setMerchant_, v51);

  v52 = v293;
  v53 = (void *)sub_23361D5B0();
  objc_msgSend(v49, sel_setCreatedDate_, v53);

  v54 = (void *)sub_23361D5B0();
  objc_msgSend(v49, sel_setUpdatedDate_, v54);

  if (*(_QWORD *)(a1 + v52[7] + 8))
  {
    swift_bridgeObjectRetain();
    v55 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = 0;
  }
  v287 = a3;
  v56 = v292;
  objc_msgSend(v292, sel_setOrderNumber_, v55);

  v57 = v293;
  v58 = (void *)sub_23361D268();
  objc_msgSend(v56, sel_setOrderManagementURL_, v58);

  v59 = (uint64_t *)(a1 + v57[14]);
  v60 = (void *)v59[5];
  v291 = a1;
  v294 = v50;
  v295 = a2;
  v256 = v59;
  if (v60)
  {
    v61 = v59[9];
    *(_QWORD *)&v271 = v59[8];
    *((_QWORD *)&v271 + 1) = v61;
    v62 = v59[7];
    *(_QWORD *)&v270 = v59[6];
    *((_QWORD *)&v270 + 1) = v62;
    v63 = v59[2];
    v64 = v59[3];
    v65 = *v59;
    v66 = v59[1];
    v264 = v63 >> 16;
    v265 = HIDWORD(v63);
    v266 = v59[4];
    v67 = v266;
    v267 = HIWORD(v63);
    v268 = (char *)(v64 >> 16);
    v269 = v65;
    v272 = type metadata accessor for ManagedOrderPayment();
    LOBYTE(v298) = v65;
    *((_QWORD *)&v298 + 1) = v66;
    LOWORD(v299) = v63;
    WORD1(v299) = v264;
    WORD2(v299) = v265;
    WORD3(v299) = v267;
    WORD4(v299) = v64;
    WORD5(v299) = (_WORD)v268;
    *(_QWORD *)&v300 = v67;
    *((_QWORD *)&v300 + 1) = v60;
    v301 = v270;
    v69 = (os_unfair_lock_s *)*((_QWORD *)&v271 + 1);
    v68 = v271;
    v302 = v271;
    swift_retain();
    v268 = v294;
    v252 = v68;
    v253 = v69;
    v70 = v66;
    v71 = v63;
    a2 = v295;
    a1 = v291;
    v56 = v292;
    sub_2333BF1C8(v269, v70, v71, v64, v266, (uint64_t)v60);
    ManagedOrderPayment.__allocating_init(_:bundle:context:)((unsigned __int8 *)&v298, a2, v268);
    v60 = v72;
  }
  objc_msgSend(v56, sel_setPayment_, v60);

  v73 = (uint64_t)v284;
  sub_2331686A0(a1 + v293[15], (uint64_t)v284, &qword_25604A468);
  if (((unsigned int (*)(uint64_t, uint64_t, char *))v285[6])(v73, 1, v286) == 1)
  {
    v74 = 0;
    v75 = v294;
  }
  else
  {
    v76 = v277;
    sub_233168580(v73, v277, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    type metadata accessor for ManagedOrderReturnInfo();
    v77 = v276;
    sub_2331684BC(v76, v276, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    v78 = v294;
    v79 = v294;
    v74 = sub_2333E72F0(v77, (uint64_t)v79);
    sub_233168500(v76, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);

    v56 = v292;
    v75 = v78;
  }
  objc_msgSend(v56, sel_setReturnInfo_, v74);

  v80 = (uint64_t)v293;
  v277 = v293[16];
  MEMORY[0x24BDAC7A8](v81);
  v252 = a2;
  v253 = v75;
  v82 = swift_bridgeObjectRetain();
  v83 = v290;
  v84 = sub_233568BF8(v82, (void (*)(_QWORD, char *))sub_233568A44, (uint64_t)(&v254 - 4), (uint64_t)v307, &qword_256055788, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
  v286 = v83;
  swift_bridgeObjectRelease();
  sub_2331C9610(v84);
  swift_bridgeObjectRelease();
  type metadata accessor for ManagedOrderReturn();
  sub_233167C58(&qword_256043F20, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderReturn, MEMORY[0x24BEE5BD8]);
  v85 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_setReturnObjects_, v85);

  v285 = &v254;
  v86 = *(char **)(a1 + *(int *)(v80 + 76));
  v306 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_23361EE70();
  v87 = (os_unfair_lock_s *)*((_QWORD *)v86 + 2);
  v290 = v86;
  swift_bridgeObjectRetain();
  if (v87)
  {
    v88 = (__int128 *)(v290 + 32);
    v89 = type metadata accessor for ManagedOrderLineItem();
    v90 = 0;
    while (1)
    {
      v91 = *v88;
      v92 = v88[1];
      v93 = v88[3];
      v300 = v88[2];
      v301 = v93;
      v298 = v91;
      v299 = v92;
      v94 = v88[4];
      v95 = v88[5];
      v96 = v88[7];
      v304 = v88[6];
      v305 = v96;
      v302 = v94;
      v303 = v95;
      v97 = v88[5];
      v297[4] = v88[4];
      v297[5] = v97;
      v98 = v88[7];
      v297[6] = v88[6];
      v297[7] = v98;
      v99 = v88[1];
      v297[0] = *v88;
      v297[1] = v99;
      v100 = v88[3];
      v297[2] = v88[2];
      v297[3] = v100;
      sub_23328C0F4((uint64_t)&v298);
      swift_retain();
      v101 = v294;
      sub_23328C0F4((uint64_t)&v298);
      v102 = v101;
      v103 = (os_unfair_lock_s *)v89;
      v104 = ManagedOrderLineItem.__allocating_init(_:bundle:context:)(v297, a2, v102);
      if (v90 == (os_unfair_lock_s *)0x8000)
        break;
      v80 = (uint64_t)v104;
      objc_msgSend(v104, sel_setPositionIndex_, (__int16)v90);
      sub_23328C168((uint64_t)&v298);
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      v88 += 8;
      v90 = (os_unfair_lock_s *)((char *)v90 + 1);
      a2 = v295;
      if (v87 == v90)
        goto LABEL_16;
    }
    __break(1u);
    goto LABEL_81;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v105 = v306;
  swift_bridgeObjectRelease();
  sub_2331CE850(v105);
  swift_release();
  v106 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v107 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v108 = objc_msgSend(v106, sel_initWithArray_, v107);

  objc_msgSend(v292, sel_setLineItemObjects_, v108);
  v109 = v293;
  v110 = v291;
  MEMORY[0x24BDAC7A8](v111);
  v112 = v294;
  v252 = (uint64_t)v294;
  v113 = swift_bridgeObjectRetain();
  v114 = v286;
  v115 = sub_233568BF8(v113, (void (*)(_QWORD, char *))sub_233568BF0, (uint64_t)(&v254 - 4), (uint64_t)&v296, &qword_256055780, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
  v290 = v114;
  swift_bridgeObjectRelease();
  sub_2331CE85C(v115);
  swift_bridgeObjectRelease();
  v116 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v117 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v118 = v116;
  v119 = v292;
  v120 = objc_msgSend(v118, sel_initWithArray_, v117);

  objc_msgSend(v119, sel_setAssociatedApplicationObjects_, v120);
  v121 = (void *)sub_23361E3D8();
  objc_msgSend(v119, sel_setAssociatedApplicationIdentifiers_, v121);

  v122 = (uint64_t *)(v110 + v109[22]);
  v123 = v122[4];
  if (v123)
  {
    v125 = v122[5];
    v124 = v122[6];
    v127 = v122[2];
    v126 = v122[3];
    v129 = *v122;
    v128 = v122[1];
    v286 = (char *)type metadata accessor for ManagedOrderBarcode();
    *(_QWORD *)&v298 = v129;
    *((_QWORD *)&v298 + 1) = v128;
    LOBYTE(v299) = v127;
    *((_QWORD *)&v299 + 1) = v126;
    *(_QWORD *)&v300 = v123;
    *((_QWORD *)&v300 + 1) = v125;
    *(_QWORD *)&v301 = v124;
    swift_retain();
    v130 = v294;
    v131 = v129;
    v132 = v128;
    v110 = v291;
    v119 = v292;
    v112 = v294;
    a2 = v295;
    sub_233364468(v131, v132, v127, v126, v123);
    v133 = ManagedOrderBarcode.__allocating_init(_:bundle:context:)((uint64_t)&v298, a2, v130);
    objc_msgSend(v119, sel_setBarcode_, v133);

  }
  v134 = *(unsigned __int8 *)(v110 + v293[8]);
  if (v134 != 2)
    objc_msgSend(v119, sel_setChangeNotificationsValue_, v134 & 1);
  v135 = v293;
  swift_retain();
  v136 = v112;
  v137 = swift_bridgeObjectRetain();
  v294 = v136;
  sub_233568378(v137, a2, v136, &v298);
  v138 = BYTE8(v298);
  v139 = swift_bridgeObjectRetain();
  ManagedECommerceOrderContent.fulfillments.setter(v139);
  swift_bridgeObjectRelease();
  objc_msgSend(v119, sel_setHasActiveFulfillment_, v138);
  v140 = (_QWORD *)(v110 + v135[18]);
  v141 = v140[1];
  v143 = v140[3];
  v142 = v140[4];
  v144 = v140[5];
  v146 = v140[7];
  v145 = v140[8];
  v147 = v140[9];
  v285 = (char **)v140[6];
  v286 = (char *)v145;
  v284 = (char *)v142;
  if (v141 >= 2)
  {
    swift_bridgeObjectRetain();
    v148 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v148 = 0;
  }
  objc_msgSend(v119, sel_setCustomerFamilyName_, v148);

  v149 = 0;
  if (v141 != 1 && v143)
  {
    swift_bridgeObjectRetain();
    v149 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v119, sel_setCustomerGivenName_, v149);

  v150 = 0;
  if (v141 == 1)
  {
    v151 = (unint64_t)v288;
    v152 = (uint64_t)v281;
  }
  else
  {
    v151 = (unint64_t)v288;
    v152 = (uint64_t)v281;
    if (v144)
    {
      swift_bridgeObjectRetain();
      v150 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v119, sel_setCustomerOrganizationName_, v150);

  v153 = 0;
  if (v141 == 1)
  {
    v154 = (uint64_t)v278;
  }
  else
  {
    v154 = (uint64_t)v278;
    if (v146)
    {
      swift_bridgeObjectRetain();
      v153 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v119, sel_setCustomerEmailAddress_, v153);

  v155 = 0;
  if (v141 == 1)
  {
    v156 = v279;
  }
  else
  {
    v156 = v279;
    if (v147)
    {
      swift_bridgeObjectRetain();
      v155 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v119, sel_setCustomerPhoneNumber_, v155);

  v157 = v291 + v293[23];
  sub_2331686A0(v157, v154, &qword_25604A470);
  v158 = *(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v156 + 48);
  if (v158(v154, 1, v151) == 1)
  {
    v159 = 0;
  }
  else
  {
    v160 = v154;
    v161 = v275;
    sub_233168580(v160, v275, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    swift_retain();
    v159 = (void *)OrderBundle.localizedString(forKey:)();
    sub_233168500(v161, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v119 = v292;
    swift_release();
  }
  v162 = (uint64_t)v280;
  objc_msgSend(v119, sel_setOrderProviderDisplayName_, v159);

  sub_2331686A0(v157, v162, &qword_25604A470);
  if (v158(v162, 1, v151) == 1)
  {
    sub_233168608(v162, &qword_25604A470);
    v163 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_233168500(v162, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v163 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v119, sel_setOrderProviderTrackingLogoNameDarkColorScheme_, v163);

  sub_2331686A0(v157, v152, &qword_25604A470);
  if (v158(v152, 1, v151) == 1)
  {
    sub_233168608(v152, &qword_25604A470);
    v164 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_233168500(v152, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v164 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  v165 = (uint64_t)v282;
  objc_msgSend(v119, sel_setOrderProviderTrackingLogoNameLightColorScheme_, v164);

  sub_2331686A0(v157, v165, &qword_25604A470);
  if (v158(v165, 1, v151) == 1)
  {
    sub_233168608(v165, &qword_25604A470);
    v166 = sub_23361D340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v283, 1, 1, v166);
    v167 = 0;
    v168 = v291;
    v169 = v289;
  }
  else
  {
    v170 = v165 + *(int *)(v151 + 28);
    v171 = sub_23361D340();
    v172 = *(_QWORD *)(v171 - 8);
    v173 = v283;
    (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v283, v170, v171);
    sub_233168500(v165, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v173, 0, 1, v171);
    v174 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v172 + 48))(v173, 1, v171);
    v167 = 0;
    v168 = v291;
    v169 = v289;
    if (v174 != 1)
    {
      v167 = (void *)sub_23361D268();
      (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v171);
    }
  }
  v175 = v292;
  objc_msgSend(v292, sel_setOrderProviderURL_, v167);

  v176 = v168;
  v177 = RawECommerceOrderContent.lineItemsImageNames.getter();
  swift_retain();
  v178 = v294;
  v179 = v290;
  sub_233568DD8(v177, v169, v178);
  v80 = (uint64_t)v179;
  if (v179)
  {
    swift_release();

    swift_release();
    sub_233168608(v287, &qword_25604A298);
    swift_release();
    swift_bridgeObjectRelease();
    sub_233168500(v176, type metadata accessor for RawECommerceOrderContent);
    return;
  }
  v294 = 0;
  v286 = (char *)v180;
  swift_bridgeObjectRelease();
  swift_release();
  v290 = v178;

  *(_QWORD *)&v297[0] = v286;
  v181 = (os_unfair_lock_s **)(v176 + *(int *)(v274 + 36));
  v87 = v181[1];
  if (v87)
  {
    v103 = *v181;
    swift_bridgeObjectRetain();
    v182 = GSMainScreenScaleFactor();
    if ((~LODWORD(v183) & 0x7F800000) == 0)
    {
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    if (v183 <= -9.2234e18)
    {
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    if (v183 >= 9.2234e18)
    {
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    v285 = &v254;
    MEMORY[0x24BDAC7A8](v182);
    *(&v254 - 4) = (char *)v169;
    *(&v254 - 3) = (char *)v103;
    v252 = (uint64_t)v87;
    v253 = v184;
    v185 = *(os_unfair_lock_s **)(v169 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v186 = v169 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v187 = v185 + 4;
    v284 = (char *)v103;
    v103 = v185 + 6;
    os_unfair_lock_lock(v185 + 6);
    v80 = (uint64_t)v263;
    v188 = v294;
    sub_23319A344(v187, v186, (uint64_t (*)(_QWORD))sub_23356A6FC);
    if (v188)
    {
LABEL_90:
      os_unfair_lock_unlock(v103);
      __break(1u);
      goto LABEL_91;
    }
    os_unfair_lock_unlock(v103);
    v189 = sub_2333165A8((uint64_t)v284, (uint64_t)v87, v80, v290, v287);
    sub_233168500(v80, (uint64_t (*)(_QWORD))type metadata accessor for LocalizedURLMap);
    swift_bridgeObjectRelease();
    sub_233189E34(v189);
    v175 = v292;
    v190 = (uint64_t)v262;
    v294 = 0;
    v169 = v289;
  }
  else
  {
    v190 = (uint64_t)v262;
  }
  sub_2331686A0(v157, v190, &qword_25604A470);
  v191 = v158(v190, 1, (unint64_t)v288);
  v87 = (os_unfair_lock_s *)v290;
  if (v191 == 1)
  {
    sub_233168608(v190, &qword_25604A470);
  }
  else
  {
    v199 = v190;
    v103 = (os_unfair_lock_s *)v273;
    sub_233168580(v199, (uint64_t)v273, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v200 = *(_QWORD *)&v103[4]._os_unfair_lock_opaque;
    v201 = *(_QWORD *)&v103[6]._os_unfair_lock_opaque;
    swift_bridgeObjectRetain_n();
    v202 = GSMainScreenScaleFactor();
    if ((~LODWORD(v203) & 0x7F800000) == 0)
    {
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    v103 = v294;
    if (v203 <= -9.2234e18)
    {
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    if (v203 >= 9.2234e18)
    {
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    v288 = &v254;
    MEMORY[0x24BDAC7A8](v202);
    *(&v254 - 4) = (char *)v169;
    *(&v254 - 3) = (char *)v200;
    v252 = v201;
    v253 = v204;
    v285 = (char **)OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock;
    v205 = *(os_unfair_lock_s **)(v169 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v206 = v169 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v80 = (uint64_t)&v205[4];
    v87 = v205 + 6;
    os_unfair_lock_lock(v205 + 6);
    v207 = (uint64_t)v255;
    v286 = (char *)v206;
    sub_23319A344((_QWORD *)v80, v206, (uint64_t (*)(_QWORD))sub_2333E09AC);
    if (v103)
    {
LABEL_91:
      os_unfair_lock_unlock(v87);
      __break(1u);
      os_unfair_lock_unlock((os_unfair_lock_t)v80);
      __break(1u);
      return;
    }
    v80 = 0;
    os_unfair_lock_unlock(v87);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v300 = 0;
    v298 = 0u;
    v299 = 0u;
    v103 = (os_unfair_lock_s *)v290;
    v239 = sub_2333165A8(v200, v201, v207, v290, (uint64_t)&v298);
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)&v298, &qword_25604A298);
    sub_233168500(v207, (uint64_t (*)(_QWORD))type metadata accessor for LocalizedURLMap);
    v240 = *((_QWORD *)v273 + 4);
    v241 = *((_QWORD *)v273 + 5);
    swift_bridgeObjectRetain_n();
    v242 = GSMainScreenScaleFactor();
    if ((~LODWORD(v243) & 0x7F800000) == 0)
      goto LABEL_87;
    if (v243 <= -9.2234e18)
    {
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    v288 = (char **)v239;
    if (v243 >= 9.2234e18)
    {
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    MEMORY[0x24BDAC7A8](v242);
    *(&v254 - 4) = v244;
    *(&v254 - 3) = (char *)v240;
    v252 = v241;
    v253 = v245;
    v246 = *(os_unfair_lock_s **)((char *)v285 + (_QWORD)v244);
    v247 = v246 + 4;
    v248 = v246 + 6;
    os_unfair_lock_lock(v246 + 6);
    v249 = (uint64_t)v254;
    sub_23319A344(v247, (uint64_t)v286, (uint64_t (*)(_QWORD))sub_23356A6FC);
    os_unfair_lock_unlock(v248);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v300 = 0;
    v298 = 0u;
    v299 = 0u;
    v87 = (os_unfair_lock_s *)v290;
    v250 = sub_2333165A8(v240, v241, v249, v290, (uint64_t)&v298);
    v175 = v292;
    v251 = v250;
    v294 = 0;
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)&v298, &qword_25604A298);
    sub_233168500(v249, (uint64_t (*)(_QWORD))type metadata accessor for LocalizedURLMap);
    sub_233189E34((unint64_t)v288);
    sub_233189E34(v251);
    sub_233168500((uint64_t)v273, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
    v169 = v289;
  }
  v192 = swift_bridgeObjectRetain();
  sub_2331C962C(v192);
  swift_bridgeObjectRelease();
  type metadata accessor for ManagedOrderImage();
  sub_233167C58(&qword_256043F18, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderImage, MEMORY[0x24BEE5BD8]);
  v193 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v175, sel_setImages_, v193);

  if (v256[5])
  {
    v194 = swift_bridgeObjectRetain();
    v195 = v294;
    v196 = sub_233563948(v194);
    v197 = v195;
    swift_bridgeObjectRelease();
    v198 = sub_2331C92EC((uint64_t)v196);
    swift_bridgeObjectRelease();
  }
  else
  {
    v198 = MEMORY[0x24BEE4B08];
    v197 = v294;
  }
  swift_retain();
  v208 = v87;
  v209 = v197;
  sub_233569154(v198, v169, v208);
  v211 = v210;
  swift_bridgeObjectRelease();
  swift_release();

  sub_2331C9648(v211);
  v212 = v169;
  swift_bridgeObjectRelease();
  type metadata accessor for ManagedOrderReceipt();
  v213 = MEMORY[0x24BEE5BD8];
  sub_233167C58(&qword_256043F10, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderReceipt, MEMORY[0x24BEE5BD8]);
  v214 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  v215 = v292;
  objc_msgSend(v292, sel_setReceipts_, v214);

  v216 = v291;
  v217 = swift_bridgeObjectRetain();
  v218 = sub_233563A80(v217);
  swift_bridgeObjectRelease();
  v219 = sub_2331C92EC((uint64_t)v218);
  swift_bridgeObjectRelease();
  swift_retain();
  v220 = v208;
  sub_233569448(v219, v212, v220);
  v222 = v221;
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  sub_2331C9664(v222);
  swift_bridgeObjectRelease();
  type metadata accessor for ManagedOrderReturnLabel();
  sub_233167C58(&qword_256043F08, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderReturnLabel, v213);
  v223 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v215, sel_setReturnLabels_, v223);

  objc_msgSend(v215, sel_setSchemaVersion_, *(__int16 *)(v216 + v293[26]));
  v224 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v225 = sub_2331A6FB8(v224);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v298 = v225;
  v226 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v227 = sub_2331A70F4(v226);
  swift_bridgeObjectRelease();
  sub_2331896C8(v227);
  sub_2331A8628((_QWORD **)&v298);
  v228 = v298;
  v229 = v215;
  v230 = sub_23330354C(v228, v229);
  v294 = v209;
  swift_bridgeObjectRelease();

  v231 = v258;
  sub_2333008A8(v230, v258);
  swift_bridgeObjectRelease();
  v232 = v259;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v231, 1, v259) == 1)
  {
    v233 = v229;
    v234 = v261;
    Order.PriorityInfo.init(orderWithNoFulfillments:)(v233, v261);
    sub_233168608(v231, &qword_256049CF8);
  }
  else
  {
    v234 = v261;
    sub_233168580(v231, v261, type metadata accessor for Order.PriorityInfo);
  }
  v235 = (uint64_t)v260;
  objc_msgSend(v229, sel_setStatusPriorityValue_, *(unsigned __int8 *)(v234 + *(int *)(v232 + 20)));
  sub_2331686A0(v234 + *(int *)(v232 + 24), v235, (uint64_t *)&unk_254247DA0);
  v236 = sub_23361D634();
  v237 = *(_QWORD *)(v236 - 8);
  v238 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v235, 1, v236) != 1)
  {
    v238 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v235, v236);
  }
  objc_msgSend(v229, sel_setPriorityEstimatedCompletionDate_, v238);
  swift_release();

  swift_release();
  sub_233168608(v287, &qword_25604A298);
  sub_233168500(v234, type metadata accessor for Order.PriorityInfo);
  sub_233168500(v291, type metadata accessor for RawECommerceOrderContent);
}

id ManagedECommerceOrderContent.status.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;

  v2 = v1;
  result = objc_msgSend(v2, sel_statusValue);
  if (result > 2)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_statusValue);
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = (id)sub_23361EF24();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

double ManagedECommerceOrderContent.customer.getter@<D0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double result;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = objc_msgSend(v1, sel_customerFamilyName);
  if (v3
    || (v3 = objc_msgSend(v1, sel_customerGivenName)) != 0
    || (v3 = objc_msgSend(v1, sel_customerOrganizationName)) != 0
    || (v3 = objc_msgSend(v1, sel_customerEmailAddress)) != 0
    || (v3 = objc_msgSend(v1, sel_customerPhoneNumber)) != 0)
  {

    v4 = objc_msgSend(v1, sel_customerFamilyName);
    if (v4)
    {
      v5 = v4;
      v6 = sub_23361E150();
      v29 = v7;
      v31 = v6;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    v8 = objc_msgSend(v1, sel_customerGivenName, v29, v31);
    if (v8)
    {
      v9 = v8;
      v10 = sub_23361E150();
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    v13 = objc_msgSend(v1, sel_customerOrganizationName);
    if (v13)
    {
      v14 = v13;
      v15 = sub_23361E150();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = objc_msgSend(v1, sel_customerEmailAddress);
    if (v18)
    {
      v19 = v18;
      v20 = sub_23361E150();
      v22 = v21;

    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    v23 = objc_msgSend(v1, sel_customerPhoneNumber);
    if (v23)
    {
      v25 = v23;
      v26 = sub_23361E150();
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    *a1 = v32;
    a1[1] = v30;
    a1[2] = v10;
    a1[3] = v12;
    a1[4] = v15;
    a1[5] = v17;
    a1[6] = v20;
    a1[7] = v22;
    a1[8] = v26;
    a1[9] = v28;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = xmmword_23363ADC0;
    *((_OWORD *)a1 + 1) = 0u;
    *((_OWORD *)a1 + 2) = 0u;
    *((_OWORD *)a1 + 3) = 0u;
    *((_OWORD *)a1 + 4) = 0u;
  }
  return result;
}

uint64_t ManagedECommerceOrderContent.orderProvider.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  v14 = objc_msgSend(v2, sel_orderProviderDisplayName);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v2, sel_orderProviderTrackingLogoNameDarkColorScheme);
    if (v16)
    {
      v17 = v16;
      v33 = sub_23361E150();
      v19 = v18;

      v20 = objc_msgSend(v2, sel_orderProviderTrackingLogoNameLightColorScheme);
      if (v20)
      {
        v21 = v20;
        v32 = sub_23361E150();
        v34 = v22;

        v23 = objc_msgSend(v2, sel_orderProviderURL);
        if (v23)
        {
          v24 = v23;
          sub_23361D2D4();

          v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
          v25(v6, v11, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
          {
            v25(v13, v6, v7);
            v26 = type metadata accessor for ManagedECommerceOrderContent.OrderProvider();
            v25(&a1[*(int *)(v26 + 28)], v13, v7);
            v27 = v33;
            *(_QWORD *)a1 = v15;
            *((_QWORD *)a1 + 1) = v27;
            v28 = v32;
            *((_QWORD *)a1 + 2) = v19;
            *((_QWORD *)a1 + 3) = v28;
            *((_QWORD *)a1 + 4) = v34;
            return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 0, 1, v26);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_233168608((uint64_t)v6, &qword_254248700);
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {

    }
  }
  v30 = type metadata accessor for ManagedECommerceOrderContent.OrderProvider();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 1, 1, v30);
}

uint64_t ManagedECommerceOrderContent.isActive.getter()
{
  void *v0;
  void *v1;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  char active;
  _QWORD *v13;
  char v14;

  v1 = v0;
  ManagedECommerceOrderContent.status.getter(&v14);
  if (v14)
  {
    if (v14 == 1)
      return ManagedECommerceOrderContent.hasActiveReturn.getter();
    v9 = 0;
  }
  else
  {
    v3 = ManagedECommerceOrderContent.shippingFulfillments.getter();
    v4 = (_QWORD *)sub_2331A6FB8(v3);
    swift_bridgeObjectRelease();
    v13 = v4;
    v5 = ManagedECommerceOrderContent.pickupFulfillments.getter();
    v6 = sub_2331A70F4(v5);
    swift_bridgeObjectRelease();
    sub_2331896C8(v6);
    sub_2331A8628(&v13);
    v7 = v13[2];
    swift_bridgeObjectRelease();
    if (v7)
    {
      v8 = 0;
    }
    else
    {
      v10 = ManagedECommerceOrderContent.returns.getter();
      if (v10 >> 62)
        v11 = sub_23361EF30();
      else
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      v8 = v11 == 0;
    }
    if ((objc_msgSend(v1, sel_hasActiveFulfillment) & 1) != 0)
      active = 1;
    else
      active = ManagedECommerceOrderContent.hasActiveReturn.getter();
    v9 = v8 | active;
  }
  return v9 & 1;
}

uint64_t ManagedECommerceOrderContent.archiveDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _BYTE v19[8];
  _QWORD *v20;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v19[-v8];
  v10 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v11 = (_QWORD *)sub_2331A6FB8(v10);
  swift_bridgeObjectRelease();
  v20 = v11;
  v12 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v13 = sub_2331A70F4(v12);
  swift_bridgeObjectRelease();
  sub_2331896C8(v13);
  sub_2331A8628(&v20);
  v14 = sub_233563BB8((uint64_t)v20);
  swift_bridgeObjectRelease();
  sub_233300E84(v14, v9);
  swift_bridgeObjectRelease();
  sub_2331686A0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_254247DA0);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    v17 = objc_msgSend(v2, sel_updatedDate);
    sub_23361D5EC();

    sub_233168608((uint64_t)v9, (uint64_t *)&unk_254247DA0);
    return sub_233168608((uint64_t)v7, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    sub_233168608((uint64_t)v9, (uint64_t *)&unk_254247DA0);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v16 + 32))(a1, v7, v15);
  }
}

id ManagedECommerceOrderContent.OrderProvider.displayName.getter()
{
  id *v0;

  return *v0;
}

void ManagedECommerceOrderContent.OrderProvider.displayName.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ManagedECommerceOrderContent.OrderProvider.displayName.modify())()
{
  return nullsub_1;
}

uint64_t ManagedECommerceOrderContent.OrderProvider.trackingLogoNameDarkColorScheme.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedECommerceOrderContent.OrderProvider.trackingLogoNameDarkColorScheme.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ManagedECommerceOrderContent.OrderProvider.trackingLogoNameDarkColorScheme.modify())()
{
  return nullsub_1;
}

uint64_t ManagedECommerceOrderContent.OrderProvider.trackingLogoNameLightColorScheme.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedECommerceOrderContent.OrderProvider.trackingLogoNameLightColorScheme.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ManagedECommerceOrderContent.OrderProvider.trackingLogoNameLightColorScheme.modify())()
{
  return nullsub_1;
}

uint64_t ManagedECommerceOrderContent.OrderProvider.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ManagedECommerceOrderContent.OrderProvider() + 28);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ManagedECommerceOrderContent.OrderProvider.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ManagedECommerceOrderContent.OrderProvider() + 28);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ManagedECommerceOrderContent.OrderProvider.url.modify())(_QWORD)
{
  type metadata accessor for ManagedECommerceOrderContent.OrderProvider();
  return nullsub_1;
}

void sub_233567574(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, sel_associatedApplicationIdentifiers);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E3F0();

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

void sub_2335675D8(_QWORD *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*a1)
    v3 = sub_23361E3D8();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setAssociatedApplicationIdentifiers_);

}

id ManagedECommerceOrderContent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedECommerceOrderContent.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedECommerceOrderContent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedECommerceOrderContent.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t ManagedECommerceOrderContent.hasActiveReturn.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  unsigned __int16 v8;
  void *v9;
  uint64_t result;

  v0 = ManagedECommerceOrderContent.returns.getter();
  v1 = v0;
  if (!(v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_14:
  swift_bridgeObjectRetain_n();
  v2 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_15;
LABEL_3:
  v3 = 4;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v4 = (id)MEMORY[0x234933120](v3 - 4, v1);
    else
      v4 = *(id *)(v1 + 8 * v3);
    v5 = v4;
    v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_14;
    }
    v7 = (void *)sub_23361E12C();
    objc_msgSend(v5, sel_willAccessValueForKey_, v7);

    v8 = (unsigned __int16)objc_msgSend(v5, sel_statusValue);
    v9 = (void *)sub_23361E12C();
    objc_msgSend(v5, sel_didAccessValueForKey_, v9);

    if (v8 - 4 >= 2)
      break;

    ++v3;
    if (v6 == v2)
    {
      swift_bridgeObjectRelease();
      v2 = 0;
      goto LABEL_16;
    }
  }
  if (v8 < 4u)
  {
    swift_bridgeObjectRelease();

    v2 = 1;
    goto LABEL_16;
  }
  sub_23361ED98();
  swift_bridgeObjectRelease();
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  result = sub_23361EF24();
  __break(1u);
  return result;
}

void ManagedECommerceOrderContent.associatedApplications.setter(uint64_t a1)
{
  sub_23335F038(a1, (void (*)(void))sub_2331CE85C, (SEL *)&selRef_setAssociatedApplicationObjects_);
}

void (*ManagedECommerceOrderContent.associatedApplications.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ManagedECommerceOrderContent.associatedApplications.getter();
  return sub_233567ACC;
}

void sub_233567ACC(uint64_t *a1, char a2)
{
  sub_23335F128(a1, a2, (void (*)(uint64_t))sub_2331CE85C, (SEL *)&selRef_setAssociatedApplicationObjects_);
}

void ManagedECommerceOrderContent.lineItems.setter(uint64_t a1)
{
  sub_23335F038(a1, (void (*)(void))sub_2331CE850, (SEL *)&selRef_setLineItemObjects_);
}

void (*ManagedECommerceOrderContent.lineItems.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ManagedECommerceOrderContent.lineItems.getter();
  return sub_233567B28;
}

void sub_233567B28(uint64_t *a1, char a2)
{
  sub_23335F128(a1, a2, (void (*)(uint64_t))sub_2331CE850, (SEL *)&selRef_setLineItemObjects_);
}

id ManagedECommerceOrderContent.changeNotifications.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setChangeNotificationsValue_, *a1);
}

id (*ManagedECommerceOrderContent.changeNotifications.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedECommerceOrderContent.changeNotifications.getter((_BYTE *)(a1 + 8));
  return sub_233567B84;
}

id sub_233567B84(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setChangeNotificationsValue_, *(unsigned __int8 *)(a1 + 8));
}

id ManagedECommerceOrderContent.status.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setStatusValue_, *a1);
}

id (*ManagedECommerceOrderContent.status.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  ManagedECommerceOrderContent.status.getter((_BYTE *)(a1 + 8));
  return sub_233363514;
}

void sub_233567BE4(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v3 = (_QWORD *)sub_2331A6FB8(v2);
  swift_bridgeObjectRelease();
  v6 = v3;
  v4 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v5 = sub_2331A70F4(v4);
  swift_bridgeObjectRelease();
  sub_2331896C8(v5);
  sub_2331A8628(&v6);
  *a1 = v6;
}

void ManagedECommerceOrderContent.fulfillments.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15[2];
  uint64_t v16;

  v2 = v1;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    v10 = MEMORY[0x24BEE4AF8];
    if (sub_23361EF30())
    {
      sub_2333F0D54(MEMORY[0x24BEE4AF8]);
      v12 = v11;
    }
    else
    {
      v12 = MEMORY[0x24BEE4B08];
    }
    v16 = v12;
    if ((v10 & 0xC000000000000000) != 0 && sub_23361EF30())
    {
      sub_2333F10CC(MEMORY[0x24BEE4AF8]);
      v4 = v13;
    }
    else
    {
      v4 = (void *)MEMORY[0x24BEE4B08];
    }
  }
  else
  {
    v16 = MEMORY[0x24BEE4B08];
    v4 = (void *)MEMORY[0x24BEE4B08];
  }
  v15[1] = v4;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    for (i = 0; i != v5; ++i)
    {
      v7 = *(_QWORD *)(a1 + 8 * i + 32);
      if ((v7 & 0x8000000000000000) != 0)
        sub_233308D14(v15, (id)(v7 & 0x7FFFFFFFFFFFFFFFLL));
      else
        sub_233308D38(v15, (id)v7);

    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ManagedOrderShippingFulfillment();
  v8 = MEMORY[0x24BEE5BD8];
  sub_233167C58(&qword_2560556C8, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderShippingFulfillment, MEMORY[0x24BEE5BD8]);
  v9 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setShippingFulfillmentObjects_, v9);

  type metadata accessor for ManagedOrderPickupFulfillment();
  sub_233167C58(&qword_2560556D0, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderPickupFulfillment, v8);
  v14 = (id)sub_23361E5B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPickupFulfillmentObjects_, v14);

}

void (*ManagedECommerceOrderContent.fulfillments.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v8;

  a1[3] = v1;
  v3 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v4 = (_QWORD *)sub_2331A6FB8(v3);
  swift_bridgeObjectRelease();
  v8 = v4;
  v5 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v6 = sub_2331A70F4(v5);
  swift_bridgeObjectRelease();
  sub_2331896C8(v6);
  sub_2331A8628(&v8);
  *a1 = v8;
  return sub_233567F18;
}

void sub_233567F18(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    ManagedECommerceOrderContent.fulfillments.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    ManagedECommerceOrderContent.fulfillments.setter(*a1);
  }
}

void ManagedECommerceOrderContent.returns.setter(uint64_t a1)
{
  sub_23335F038(a1, (void (*)(void))sub_2331CED20, (SEL *)&selRef_setReturnObjects_);
}

void (*ManagedECommerceOrderContent.returns.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ManagedECommerceOrderContent.returns.getter();
  return sub_233567FA8;
}

void sub_233567FA8(uint64_t *a1, char a2)
{
  sub_23335F128(a1, a2, (void (*)(uint64_t))sub_2331CED20, (SEL *)&selRef_setReturnObjects_);
}

unint64_t ManagedECommerceOrderContent.fulfillment(with:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  _QWORD *v20;

  v4 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v5 = (_QWORD *)sub_2331A6FB8(v4);
  swift_bridgeObjectRelease();
  v20 = v5;
  v6 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v7 = sub_2331A70F4(v6);
  swift_bridgeObjectRelease();
  sub_2331896C8(v7);
  sub_2331A8628(&v20);
  v8 = v20;
  v9 = v20[2];
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    while (1)
    {
      v11 = v8[v10 + 4];
      v12 = (id)(v11 & 0x7FFFFFFFFFFFFFFFLL);
      v13 = objc_msgSend(v12, sel_fulfillmentIdentifier);
      v14 = sub_23361E150();
      v16 = v15;

      if (v14 == a1 && v16 == a2)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return v11;
      }
      v18 = sub_23361F224();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        break;
      ++v10;

      if (v9 == v10)
      {
        swift_bridgeObjectRelease_n();
        return 0xF000000000000007;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0xF000000000000007;
  }
  return v11;
}

void *ManagedECommerceOrderContent.orderReturn(with:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;

  v4 = ManagedECommerceOrderContent.returns.getter();
  swift_bridgeObjectRetain();
  v5 = sub_233568A4C(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

id sub_2335681AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id result;
  id v12;
  uint64_t v13;

  v8 = type metadata accessor for RawOrderReturn();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ManagedOrderReturn();
  sub_2331684BC(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
  swift_retain();
  result = ManagedOrderReturn.__allocating_init(_:bundle:context:)(v10, a3, a4);
  if (a1 < -32768)
  {
    __break(1u);
  }
  else if (a1 < 0x8000)
  {
    v12 = result;
    objc_msgSend(result, sel_setPositionIndex_, (__int16)a1);
    return v12;
  }
  __break(1u);
  return result;
}

void sub_233568298(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  id v10;
  uint64_t v11;

  v6 = type metadata accessor for RawOrderApplication();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ManagedOrderApplication();
  sub_2331684BC(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderApplication);
  v9 = a3;
  v10 = sub_23330D848(v8, (uint64_t)v9);

  if (a1 < -32768)
  {
    __break(1u);
  }
  else if (a1 < 0x8000)
  {
    objc_msgSend(v10, sel_setPositionIndex_, (__int16)a1);
    return;
  }
  __break(1u);
}

void sub_233568378(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  unint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;

  v73 = a2;
  v74 = a3;
  v60 = a4;
  v5 = type metadata accessor for RawOrderPickupFulfillment();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v63 = (unint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v67 = (uint64_t)&v59 - v8;
  v9 = type metadata accessor for RawOrderShippingFulfillment();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v66 = (uint64_t)&v59 - v12;
  v77 = type metadata accessor for RawOrderFulfillment();
  v65 = *(_QWORD *)(v77 - 8);
  v13 = MEMORY[0x24BDAC7A8](v77);
  v68 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v80 = (uint64_t)&v59 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v59 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v59 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v59 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055770);
  v76 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v64 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055778);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (unint64_t *)((char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v28);
  v75 = (uint64_t *)((char *)&v59 - v31);
  v78 = 0;
  i = 0;
  v33 = *(_QWORD *)(a1 + 16);
  v81 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v71 = v24;
  v72 = a1;
  v79 = v25;
  v69 = v33;
  v70 = v30;
  v61 = v19;
  if (v33)
    goto LABEL_3;
LABEL_2:
  v34 = 1;
  for (i = v33; ; ++i)
  {
    v38 = v76;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v30, v34, 1, v25);
    v39 = v75;
    sub_233168478((uint64_t)v30, (uint64_t)v75, &qword_256055778);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48))(v39, 1, v25) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();

      v58 = v60;
      *v60 = v81;
      *((_BYTE *)v58 + 8) = v78 & 1;
      return;
    }
    v40 = *v39;
    sub_233168580((uint64_t)v39 + *(int *)(v25 + 48), (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_2331684BC((uint64_t)v24, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_2331684BC((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = v67;
      sub_233168580((uint64_t)v19, v67, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      type metadata accessor for ManagedOrderPickupFulfillment();
      v42 = v63;
      sub_2331684BC(v41, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v43 = v73;
      swift_retain();
      v44 = (unint64_t)ManagedOrderPickupFulfillment.__allocating_init(_:bundle:context:)(v42, v43, v74);
      sub_233168500((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      sub_233168500(v41, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      v45 = v44 | 0x8000000000000000;
    }
    else
    {
      v46 = v66;
      sub_233168580((uint64_t)v19, v66, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      type metadata accessor for ManagedOrderShippingFulfillment();
      v47 = v62;
      sub_2331684BC(v46, v62, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v48 = v73;
      swift_retain();
      v49 = v74;
      v45 = (unint64_t)sub_233370E38(v47, v48, v49);
      swift_release();

      sub_233168500((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      v19 = v61;
      sub_233168500(v46, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    }
    if (v40 < -32768)
      break;
    if (v40 >= 0x8000)
      goto LABEL_28;
    objc_msgSend((id)(v45 & 0x7FFFFFFFFFFFFFFFLL), sel_setPositionIndex_, (__int16)v40);
    v24 = v71;
    sub_2331684BC((uint64_t)v71, v80, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    if ((v78 & 1) != 0)
    {
      v78 = 1;
    }
    else
    {
      sub_2331684BC(v80, v68, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v50 = v67;
        sub_233168580(v68, v67, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v51 = *(unsigned __int8 *)(v50 + 8);
        sub_233168500(v50, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        if (v51 >= 5)
          v78 = 0;
        else
          v78 = (0x17u >> v51) & 1;
      }
      else
      {
        v52 = v66;
        sub_233168580(v68, v66, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v53 = *(unsigned __int8 *)(v52 + 40);
        sub_233168500(v52, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        if (v53 >= 7)
          v78 = 0;
        else
          v78 = (0x5Bu >> v53) & 1;
      }
    }
    sub_233168500(v80, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v54 = (id)(v45 & 0x7FFFFFFFFFFFFFFFLL);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v81 = sub_2334A4CE4(0, v81[2] + 1, 1, v81);
    v56 = v81[2];
    v55 = v81[3];
    if (v56 >= v55 >> 1)
      v81 = sub_2334A4CE4((_QWORD *)(v55 > 1), v56 + 1, 1, v81);
    v57 = v81;
    v81[2] = v56 + 1;
    v57[v56 + 4] = v45;

    sub_233168500((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    a1 = v72;
    v25 = v79;
    v33 = v69;
    v30 = v70;
    if (i == v69)
      goto LABEL_2;
LABEL_3:
    if (i >= *(_QWORD *)(a1 + 16))
      goto LABEL_29;
    v35 = (uint64_t)&v64[*(int *)(v25 + 48)];
    sub_2331684BC(a1+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * i, v35, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v36 = (uint64_t)v30 + *(int *)(v79 + 48);
    *v30 = i;
    v37 = v35;
    v25 = v79;
    sub_233168580(v37, v36, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    v34 = 0;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

id sub_233568A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2335681AC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void *sub_233568A4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v22 = v4;
      v23 = v7;
      v24 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v24)
        {
          v10 = (id)MEMORY[0x234933120](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = *(id *)(v7 + 8 * v4);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = a3;
        v15 = objc_msgSend(v10, sel_returnIdentifier, v22);
        v16 = sub_23361E150();
        v18 = v17;

        a3 = v14;
        v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v20 = sub_23361F224();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_18;

        ++v4;
        v8 = v12;
        v19 = v11 == v12;
        v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_233568BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_233568298(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_233568BF8(uint64_t a1, void (*a2)(_QWORD, char *), uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  void (*v31)(_QWORD, char *);
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;

  v32 = a3;
  v33 = a6;
  v30 = a5;
  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)&v25 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - v13;
  v34 = MEMORY[0x24BEE4AF8];
  sub_23361EE70();
  v15 = *(_QWORD *)(a1 + 16);
  v26 = a1;
  swift_bridgeObjectRetain();
  if (v15)
  {
    v16 = 0;
    v17 = *(_QWORD *)(v33(0) - 8);
    v18 = v26 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v27 = *(_QWORD *)(v17 + 72);
    v28 = v15;
    v19 = v29;
    do
    {
      v20 = (uint64_t)&v10[*(int *)(v7 + 48)];
      v21 = v33;
      sub_2331684BC(v18, v20, v33);
      v22 = (uint64_t)v19 + *(int *)(v7 + 48);
      *v19 = v16;
      sub_233168580(v20, v22, v21);
      v23 = v30;
      sub_233168478((uint64_t)v19, (uint64_t)v14, v30);
      v31(*(_QWORD *)v14, &v14[*(int *)(v7 + 48)]);
      sub_233168608((uint64_t)v14, v23);
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      v18 += v27;
      ++v16;
    }
    while (v28 != v16);
  }
  swift_bridgeObjectRelease();
  return v34;
}

void sub_233568DD8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t i;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;

  v5 = v3;
  v36 = a3;
  v8 = type metadata accessor for LocalizedURLMap();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 56);
  v31 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v34 = OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock;
  v35 = a2;
  v33 = a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v37 = a1;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v14));
  v17 = (v14 - 1) & v14;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v20)) + (v15 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * i);
    v24 = *v22;
    v23 = v22[1];
    swift_bridgeObjectRetain();
    v25 = GSMainScreenScaleFactor();
    if ((~LODWORD(v26) & 0x7F800000) == 0)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v26 <= -9.2234e18)
      goto LABEL_30;
    if (v26 >= 9.2234e18)
      goto LABEL_31;
    v38 = v17;
    MEMORY[0x24BDAC7A8](v25);
    v27 = v35;
    *(&v31 - 4) = v35;
    *(&v31 - 3) = v24;
    *(&v31 - 2) = v23;
    *(&v31 - 1) = v28;
    v29 = *(os_unfair_lock_s **)(v27 + v34);
    v30 = v29 + 4;
    v4 = v29 + 6;
    os_unfair_lock_lock(v29 + 6);
    sub_23319A344(v30, v33, (uint64_t (*)(_QWORD))sub_23356A6FC);
    if (v5)
      goto LABEL_34;
    v5 = 0;
    os_unfair_lock_unlock(v4);
    v40 = 0;
    memset(v39, 0, sizeof(v39));
    v4 = (os_unfair_lock_s *)sub_2333165A8(v24, v23, (uint64_t)v10, v36, (uint64_t)v39);
    sub_233168608((uint64_t)v39, &qword_25604A298);
    sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for LocalizedURLMap);
    swift_bridgeObjectRelease();
    sub_233189E34((unint64_t)v4);
    v14 = v38;
    if (v38)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
      goto LABEL_32;
    if (v15 >= v32)
      goto LABEL_28;
    v20 = *(_QWORD *)(v31 + 8 * v15);
    if (!v20)
      break;
LABEL_17:
    v17 = (v20 - 1) & v20;
  }
  v21 = v15 + 1;
  if (v15 + 1 >= v32)
    goto LABEL_28;
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v21 = v15 + 2;
  if (v15 + 2 >= v32)
    goto LABEL_28;
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v21 = v15 + 3;
  if (v15 + 3 >= v32)
    goto LABEL_28;
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v21 = v15 + 4;
  if (v15 + 4 >= v32)
  {
LABEL_28:
    swift_release();
    return;
  }
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
  {
LABEL_16:
    v15 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v32)
      goto LABEL_28;
    v20 = *(_QWORD *)(v31 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_17;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  os_unfair_lock_unlock(v4);
  __break(1u);
}

void sub_233569154(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t i;
  BOOL v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;

  v5 = v3;
  v37 = a3;
  v8 = type metadata accessor for LocalizedURLMap();
  MEMORY[0x24BDAC7A8](v8);
  v35 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 56);
  v31 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v34 = OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock;
  v36 = a2;
  v33 = a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v32 = (unint64_t)(v11 + 63) >> 6;
  v38 = a1;
  v14 = swift_bridgeObjectRetain();
  v15 = 0;
  v16 = (uint64_t)v35;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v39 = v15;
  for (i = v17 | (v15 << 6); ; i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    MEMORY[0x24BDAC7A8](v14);
    v26 = v36;
    *(&v30 - 4) = v36;
    *(&v30 - 3) = v25;
    *(&v30 - 2) = v24;
    v27 = *(_QWORD *)(v26 + v34);
    v28 = (_QWORD *)(v27 + 16);
    v4 = (os_unfair_lock_s *)(v27 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v4);
    sub_23319A344(v28, v33, (uint64_t (*)(_QWORD))sub_2331A0450);
    if (v5)
      break;
    v5 = 0;
    os_unfair_lock_unlock(v4);
    v29 = sub_23324EACC(v25, v24, v16, v37);
    sub_233168500(v16, (uint64_t (*)(_QWORD))type metadata accessor for LocalizedURLMap);
    swift_bridgeObjectRelease();
    v14 = sub_233189E7C(v29);
    v15 = v39;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v19 = __OFADD__(v15, 1);
    v20 = v15 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v20 >= v32)
      goto LABEL_25;
    v21 = *(_QWORD *)(v31 + 8 * v20);
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v32)
        goto LABEL_25;
      v21 = *(_QWORD *)(v31 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v32)
          goto LABEL_25;
        v21 = *(_QWORD *)(v31 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v32)
            goto LABEL_25;
          v21 = *(_QWORD *)(v31 + 8 * v22);
          if (!v21)
          {
            v22 = v20 + 4;
            if (v20 + 4 >= v32)
            {
LABEL_25:
              swift_release();
              return;
            }
            v21 = *(_QWORD *)(v31 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v20 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_27;
                if (v20 >= v32)
                  goto LABEL_25;
                v21 = *(_QWORD *)(v31 + 8 * v20);
                ++v22;
                if (v21)
                  goto LABEL_17;
              }
            }
          }
        }
      }
      v20 = v22;
    }
LABEL_17:
    v13 = (v21 - 1) & v21;
    v39 = v20;
  }
  os_unfair_lock_unlock(v4);
  __break(1u);
}

void sub_233569448(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t i;
  BOOL v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;

  v5 = v3;
  v37 = a3;
  v8 = type metadata accessor for LocalizedURLMap();
  MEMORY[0x24BDAC7A8](v8);
  v35 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 56);
  v31 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v34 = OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock;
  v36 = a2;
  v33 = a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v32 = (unint64_t)(v11 + 63) >> 6;
  v38 = a1;
  v14 = swift_bridgeObjectRetain();
  v15 = 0;
  v16 = (uint64_t)v35;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v39 = v15;
  for (i = v17 | (v15 << 6); ; i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    MEMORY[0x24BDAC7A8](v14);
    v26 = v36;
    *(&v30 - 4) = v36;
    *(&v30 - 3) = v25;
    *(&v30 - 2) = v24;
    v27 = *(_QWORD *)(v26 + v34);
    v28 = (_QWORD *)(v27 + 16);
    v4 = (os_unfair_lock_s *)(v27 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v4);
    sub_23319A344(v28, v33, (uint64_t (*)(_QWORD))sub_2331A0450);
    if (v5)
      break;
    v5 = 0;
    os_unfair_lock_unlock(v4);
    v29 = sub_2332B0210(v25, v24, v16, v37);
    sub_233168500(v16, (uint64_t (*)(_QWORD))type metadata accessor for LocalizedURLMap);
    swift_bridgeObjectRelease();
    v14 = sub_233189E58(v29);
    v15 = v39;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v19 = __OFADD__(v15, 1);
    v20 = v15 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v20 >= v32)
      goto LABEL_25;
    v21 = *(_QWORD *)(v31 + 8 * v20);
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v32)
        goto LABEL_25;
      v21 = *(_QWORD *)(v31 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v32)
          goto LABEL_25;
        v21 = *(_QWORD *)(v31 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v32)
            goto LABEL_25;
          v21 = *(_QWORD *)(v31 + 8 * v22);
          if (!v21)
          {
            v22 = v20 + 4;
            if (v20 + 4 >= v32)
            {
LABEL_25:
              swift_release();
              return;
            }
            v21 = *(_QWORD *)(v31 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v20 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_27;
                if (v20 >= v32)
                  goto LABEL_25;
                v21 = *(_QWORD *)(v31 + 8 * v20);
                ++v22;
                if (v21)
                  goto LABEL_17;
              }
            }
          }
        }
      }
      v20 = v22;
    }
LABEL_17:
    v13 = (v21 - 1) & v21;
    v39 = v20;
  }
  os_unfair_lock_unlock(v4);
  __break(1u);
}

uint64_t type metadata accessor for ManagedECommerceOrderContent.OrderProvider()
{
  uint64_t result;

  result = qword_256055730;
  if (!qword_256055730)
    return swift_getSingletonMetadata();
  return result;
}

char *keypath_get_selector_associatedApplicationObjects()
{
  return sel_associatedApplicationObjects;
}

id sub_233569784@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_associatedApplicationObjects);
  *a2 = result;
  return result;
}

id sub_2335697BC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAssociatedApplicationObjects_, *a1);
}

char *keypath_get_selector_associatedApplicationIdentifiers()
{
  return sel_associatedApplicationIdentifiers;
}

char *keypath_get_selector_merchant()
{
  return sel_merchant;
}

id sub_2335697F0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_merchant);
  *a2 = result;
  return result;
}

id sub_233569828(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMerchant_, *a1);
}

id sub_23356983C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderData);
  *a2 = result;
  return result;
}

id sub_233569874(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderData_, *a1);
}

char *keypath_get_selector_orderNumber()
{
  return sel_orderNumber;
}

void sub_233569894(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_orderNumber, a2);
}

void sub_2335698B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setOrderNumber_);
}

id sub_2335698CC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_statusDescription);
  *a2 = result;
  return result;
}

id sub_233569904(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStatusDescription_, *a1);
}

char *keypath_get_selector_createdDate()
{
  return sel_createdDate;
}

void sub_233569924(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_createdDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_233569948(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setCreatedDate_);
}

void sub_23356995C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_updatedDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_233569980(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setUpdatedDate_);
}

char *keypath_get_selector_orderManagementURL()
{
  return sel_orderManagementURL;
}

void sub_2335699A0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_orderManagementURL, (void (*)(void))MEMORY[0x24BDCD9C0]);
}

void sub_2335699C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCD8D0], (SEL *)&selRef_setOrderManagementURL_);
}

char *keypath_get_selector_payment()
{
  return sel_payment;
}

id sub_2335699E4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_payment);
  *a2 = result;
  return result;
}

id sub_233569A1C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPayment_, *a1);
}

char *keypath_get_selector_returnInfo()
{
  return sel_returnInfo;
}

id sub_233569A3C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_returnInfo);
  *a2 = result;
  return result;
}

id sub_233569A74(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReturnInfo_, *a1);
}

char *keypath_get_selector_returnObjects()
{
  return sel_returnObjects;
}

id sub_233569A94@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_returnObjects);
  *a2 = result;
  return result;
}

id sub_233569ACC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReturnObjects_, *a1);
}

char *keypath_get_selector_customerFamilyName()
{
  return sel_customerFamilyName;
}

void sub_233569AEC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_customerFamilyName, a2);
}

void sub_233569B08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCustomerFamilyName_);
}

char *keypath_get_selector_customerGivenName()
{
  return sel_customerGivenName;
}

void sub_233569B30(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_customerGivenName, a2);
}

void sub_233569B4C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCustomerGivenName_);
}

char *keypath_get_selector_customerOrganizationName()
{
  return sel_customerOrganizationName;
}

void sub_233569B74(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_customerOrganizationName, a2);
}

void sub_233569B90(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCustomerOrganizationName_);
}

char *keypath_get_selector_customerEmailAddress()
{
  return sel_customerEmailAddress;
}

void sub_233569BB8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_customerEmailAddress, a2);
}

void sub_233569BD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCustomerEmailAddress_);
}

char *keypath_get_selector_customerPhoneNumber()
{
  return sel_customerPhoneNumber;
}

void sub_233569BFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_customerPhoneNumber, a2);
}

void sub_233569C18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setCustomerPhoneNumber_);
}

id sub_233569C34@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_barcode);
  *a2 = result;
  return result;
}

id sub_233569C6C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBarcode_, *a1);
}

char *keypath_get_selector_orderProviderDisplayName()
{
  return sel_orderProviderDisplayName;
}

id sub_233569C8C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_orderProviderDisplayName);
  *a2 = result;
  return result;
}

id sub_233569CC4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOrderProviderDisplayName_, *a1);
}

char *keypath_get_selector_orderProviderTrackingLogoNameDarkColorScheme()
{
  return sel_orderProviderTrackingLogoNameDarkColorScheme;
}

void sub_233569CE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_orderProviderTrackingLogoNameDarkColorScheme, a2);
}

void sub_233569D00(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setOrderProviderTrackingLogoNameDarkColorScheme_);
}

char *keypath_get_selector_orderProviderTrackingLogoNameLightColorScheme()
{
  return sel_orderProviderTrackingLogoNameLightColorScheme;
}

void sub_233569D28(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_233301BB0(a1, (SEL *)&selRef_orderProviderTrackingLogoNameLightColorScheme, a2);
}

void sub_233569D44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233301C10(a1, a2, a3, a4, (SEL *)&selRef_setOrderProviderTrackingLogoNameLightColorScheme_);
}

char *keypath_get_selector_orderProviderURL()
{
  return sel_orderProviderURL;
}

uint64_t sub_233569D6C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_orderProviderURL, (void (*)(void))MEMORY[0x24BDCD9C0], MEMORY[0x24BDCDAC0], a2);
}

void sub_233569D98(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, &qword_254248700, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCD8D0], (SEL *)&selRef_setOrderProviderURL_);
}

char *keypath_get_selector_hasActiveFulfillment()
{
  return sel_hasActiveFulfillment;
}

id sub_233569DD8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_hasActiveFulfillment);
  *a2 = (_BYTE)result;
  return result;
}

id sub_233569E08(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHasActiveFulfillment_, *a1);
}

id sub_233569E1C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_schemaVersion);
  *a2 = (_WORD)result;
  return result;
}

id sub_233569E4C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSchemaVersion_, *a1);
}

id sub_233569E60@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_statusPriorityValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_233569E90(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStatusPriorityValue_, *a1);
}

uint64_t sub_233569EA4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233319B58(a1, (SEL *)&selRef_priorityEstimatedCompletionDate, (void (*)(void))MEMORY[0x24BDCE878], MEMORY[0x24BDCE900], a2);
}

void sub_233569ED0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_233319A68(a1, a2, a3, a4, (uint64_t *)&unk_254247DA0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], MEMORY[0x24BDCE5D8], (SEL *)&selRef_setPriorityEstimatedCompletionDate_);
}

uint64_t sub_233569F04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ManagedECommerceOrderContent.associatedApplications.getter();
  *a1 = result;
  return result;
}

void sub_233569F2C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23335EF6C(a1, a2, a3, a4, (void (*)(uint64_t))sub_2331CE85C, (SEL *)&selRef_setAssociatedApplicationObjects_);
}

uint64_t sub_233569F50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ManagedECommerceOrderContent.lineItems.getter();
  *a1 = result;
  return result;
}

void sub_233569F78(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23335EF6C(a1, a2, a3, a4, (void (*)(uint64_t))sub_2331CE850, (SEL *)&selRef_setLineItemObjects_);
}

id sub_233569F9C@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedECommerceOrderContent.changeNotifications.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_233569FD4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setChangeNotificationsValue_, *a1);
}

id sub_233569FE8@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedECommerceOrderContent.status.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_23356A020(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStatusValue_, *a1);
}

void sub_23356A038()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ManagedECommerceOrderContent.fulfillments.setter(v0);
}

uint64_t sub_23356A060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ManagedECommerceOrderContent.returns.getter();
  *a1 = result;
  return result;
}

void sub_23356A088(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23335EF6C(a1, a2, a3, a4, (void (*)(uint64_t))sub_2331CED20, (SEL *)&selRef_setReturnObjects_);
}

uint64_t type metadata accessor for ManagedECommerceOrderContent()
{
  return objc_opt_self();
}

char *initializeBufferWithCopyOfBuffer for ManagedECommerceOrderContent.OrderProvider(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v6;
    v7 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v7;
    v8 = *(int *)(a3 + 28);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23361D340();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v5;
}

uint64_t destroy for ManagedECommerceOrderContent.OrderProvider(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_23361D340();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ManagedECommerceOrderContent.OrderProvider(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  id v12;

  v5 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  a1[4] = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D340();
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ManagedECommerceOrderContent.OrderProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ManagedECommerceOrderContent.OrderProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ManagedECommerceOrderContent.OrderProvider(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23361D340();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedECommerceOrderContent.OrderProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23356A428(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D340();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ManagedECommerceOrderContent.OrderProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23356A4B0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D340();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23356A524()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper()
{
  return &type metadata for ManagedECommerceOrderContent.ManagerOrderFulfillmentWrapper;
}

uint64_t sub_23356A6FC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_2333E09AC(a1, a2);
}

uint64_t ManagedBankMerchantInformationInsightImporter.__allocating_init()()
{
  return swift_allocObject();
}

void ManagedBankMerchantInformationInsightImporter.insertOrUpdateInsight(_:on:in:)(__int128 *a1, void *a2, void *a3)
{
  uint64_t v3;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  void *v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v7 = a1[7];
  v33 = a1[6];
  v34 = v7;
  v8 = a1[9];
  v35 = a1[8];
  v36 = v8;
  v9 = a1[3];
  v29 = a1[2];
  v30 = v9;
  v10 = a1[5];
  v31 = a1[4];
  v32 = v10;
  v11 = a1[1];
  v27 = *a1;
  v28 = v11;
  memset(v20, 0, sizeof(v20));
  v21 = 0;
  v22 = 1;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  if (!_s10FinanceKit18RawBankConnectDataO11TransactionV19MerchantInformationV2eeoiySbAG_AGtFZ_0(&v27, v20))
  {
    v12 = ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(a3);
    if (!v3)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, sel_bankMerchantInformationInsightObject);
      if (!v14)
      {
        type metadata accessor for ManagedBankMerchantInformationInsight();
        v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
        objc_msgSend(v13, sel_setBankMerchantInformationInsightObject_, v14);
      }

      v15 = a1[7];
      v33 = a1[6];
      v34 = v15;
      v16 = a1[9];
      v35 = a1[8];
      v36 = v16;
      v17 = a1[3];
      v29 = a1[2];
      v30 = v17;
      v18 = a1[5];
      v31 = a1[4];
      v32 = v18;
      v19 = a1[1];
      v27 = *a1;
      v28 = v19;
      sub_23356A890(v14, (uint64_t *)&v27, a2);

    }
  }
}

uint64_t ManagedBankMerchantInformationInsightImporter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedBankMerchantInformationInsightImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedBankMerchantInformationInsightImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_23356A890(void *a1, uint64_t *a2, void *a3)
{
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  int v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = a2[1];
  v49 = *a2;
  v50 = a2[3];
  v5 = (void *)a2[5];
  v51 = a2[9];
  v6 = a2[11];
  v7 = a2[13];
  v42 = a2[12];
  v44 = a2[10];
  v8 = a2[15];
  v38 = a2[16];
  v40 = a2[14];
  v46 = a2[17];
  v9 = a2[19];
  v36 = a2[18];
  if (a2[7])
  {
    v10 = a2[7];
    v11 = (void *)sub_23361E12C();
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  objc_msgSend(a1, sel_setMerchantName_, v11, v36, v38, v40, v42, v44, v46);

  if (v5)
    v5 = (void *)sub_23361E12C();
  objc_msgSend(a1, sel_setCategoryDescription_, v5);

  if (v6 == 1)
  {
    v12 = 0;
  }
  else
  {
    sub_23335A330();
    v52 = v45;
    v53 = v6;
    v54 = v43;
    v55 = v7;
    v56 = v41;
    v57 = v8;
    v58 = v39;
    v59 = v47;
    v60 = v37;
    v61 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_23349000C(&v52);
  }
  objc_msgSend(a1, sel_setMerchantAddress_, v12);

  if (v4)
  {
    v13 = HIBYTE(v4) & 0xF;
    v14 = v49 & 0xFFFFFFFFFFFFLL;
    if ((v4 & 0x2000000000000000) != 0)
      v15 = HIBYTE(v4) & 0xF;
    else
      v15 = v49 & 0xFFFFFFFFFFFFLL;
    if (v15)
    {
      if ((v4 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v18 = sub_2334903FC(v49, v4, 10);
        swift_bridgeObjectRelease();
        LODWORD(v13) = HIWORD(v18) & 1;
        goto LABEL_44;
      }
      if ((v4 & 0x2000000000000000) == 0)
      {
        if ((v49 & 0x1000000000000000) != 0)
          v16 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v16 = (unsigned __int8 *)sub_23361EE34();
        v17 = sub_233490304(v16, v14, 10);
        LOWORD(v18) = v17;
        LODWORD(v13) = HIWORD(v17) & 1;
LABEL_44:
        LODWORD(v15) = (unsigned __int16)v18;
        if ((_DWORD)v13)
          LODWORD(v15) = 0;
        goto LABEL_46;
      }
      v52 = v49;
      v53 = v4 & 0xFFFFFFFFFFFFFFLL;
      if (v49 == 43)
      {
        if (!v13)
          goto LABEL_76;
        if (v13 == 1)
          goto LABEL_74;
        v18 = (BYTE1(v49) - 48);
        if (v18 <= 9)
        {
          if (v13 == 2)
            goto LABEL_43;
          if ((BYTE2(v49) - 48) <= 9u)
          {
            LOWORD(v18) = 10 * v18 + (BYTE2(v49) - 48);
            v20 = v13 - 3;
            if (v13 != 3)
            {
              v21 = (unsigned __int8 *)&v52 + 3;
              while (1)
              {
                v22 = *v21 - 48;
                if (v22 > 9)
                  goto LABEL_41;
                v23 = (__int16)(10 * v18);
                if (v23 != 10 * (__int16)v18)
                  goto LABEL_41;
                v18 = v23 + v22;
                if ((__int16)(v23 + v22) != v18)
                  goto LABEL_41;
                LODWORD(v13) = 0;
                ++v21;
                if (!--v20)
                  goto LABEL_44;
              }
            }
            goto LABEL_43;
          }
        }
      }
      else
      {
        if (v49 == 45)
        {
          if (v13)
          {
            if (v13 != 1)
            {
              v19 = (BYTE1(v49) - 48);
              if (v19 > 9)
                goto LABEL_41;
              if (v13 == 2)
              {
                LODWORD(v13) = 0;
                v18 = -v19;
                goto LABEL_44;
              }
              if ((BYTE2(v49) - 48) > 9u)
                goto LABEL_41;
              LOWORD(v18) = -10 * v19 - (BYTE2(v49) - 48);
              v32 = v13 - 3;
              if (v13 != 3)
              {
                v33 = (unsigned __int8 *)&v52 + 3;
                while (1)
                {
                  v34 = *v33 - 48;
                  if (v34 > 9)
                    goto LABEL_41;
                  v35 = (__int16)(10 * v18);
                  if (v35 != 10 * (__int16)v18)
                    goto LABEL_41;
                  v18 = v35 - v34;
                  if ((__int16)(v35 - v34) != v18)
                    goto LABEL_41;
                  LODWORD(v13) = 0;
                  ++v33;
                  if (!--v32)
                    goto LABEL_44;
                }
              }
LABEL_43:
              LODWORD(v13) = 0;
              goto LABEL_44;
            }
LABEL_74:
            LOWORD(v18) = 0;
            goto LABEL_44;
          }
          __break(1u);
LABEL_76:
          __break(1u);
          return;
        }
        if (v13)
        {
          v18 = (v49 - 48);
          if (v18 <= 9)
          {
            if (v13 == 1)
              goto LABEL_43;
            if ((BYTE1(v49) - 48) <= 9u)
            {
              LOWORD(v18) = 10 * v18 + (BYTE1(v49) - 48);
              v28 = v13 - 2;
              if (v13 != 2)
              {
                v29 = (unsigned __int8 *)&v52 + 2;
                while (1)
                {
                  v30 = *v29 - 48;
                  if (v30 > 9)
                    goto LABEL_41;
                  v31 = (__int16)(10 * v18);
                  if (v31 != 10 * (__int16)v18)
                    goto LABEL_41;
                  v18 = v31 + v30;
                  if ((__int16)(v31 + v30) != v18)
                    goto LABEL_41;
                  LODWORD(v13) = 0;
                  ++v29;
                  if (!--v28)
                    goto LABEL_44;
                }
              }
              goto LABEL_43;
            }
          }
        }
      }
LABEL_41:
      LOWORD(v18) = 0;
      LODWORD(v13) = 1;
      goto LABEL_44;
    }
    LODWORD(v13) = 1;
  }
  else
  {
    LODWORD(v15) = 0;
    LODWORD(v13) = 1;
  }
LABEL_46:
  sub_2334C2250(v15 | ((_DWORD)v13 << 16));
  if (v51)
    v24 = (void *)sub_23361E12C();
  else
    v24 = 0;
  objc_msgSend(a1, sel_setMerchantNumber_, v24);

  if (v50)
    v25 = (void *)sub_23361E12C();
  else
    v25 = 0;
  objc_msgSend(a1, sel_setStandardIndustrialClassificationCode_, v25);

  if (v10)
  {
    v26 = objc_msgSend(a3, sel_publicTransactionObject);
    v27 = (void *)sub_23361E12C();
    objc_msgSend(v26, sel_setMerchantName_, v27);

  }
}

uint64_t type metadata accessor for ManagedBankMerchantInformationInsightImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedBankMerchantInformationInsightImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedBankMerchantInformationInsightImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_23356ADE4(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  id *v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  id *v9;
  os_unfair_lock_s *v10;
  uint64_t v12;

  v3 = v1;
  a1(&v12);
  if (v2)
  {
    v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v5 = (id *)&v4[4];
    v6 = v4 + 6;
    os_unfair_lock_lock(v4 + 6);
    sub_2333E8FAC(v5, v3);
    v7 = 0;
    os_unfair_lock_unlock(v6);
    swift_willThrow();
  }
  else
  {
    v7 = v12;
    v8 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v9 = (id *)&v8[4];
    v10 = v8 + 6;
    os_unfair_lock_lock(v8 + 6);
    sub_2333E8FAC(v9, v3);
    os_unfair_lock_unlock(v10);
  }
  return v7;
}

uint64_t SuggestionsWalletOrderAttachment.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_url;
  swift_beginAccess();
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SuggestionsWalletOrderAttachment.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_url;
  swift_beginAccess();
  v4 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*SuggestionsWalletOrderAttachment.url.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SuggestionsWalletOrderAttachment.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_data;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  sub_2331D1374(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t SuggestionsWalletOrderAttachment.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_data);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_23316BEA4(v6, v7);
}

uint64_t (*SuggestionsWalletOrderAttachment.data.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SuggestionsWalletOrderAttachment.fqoid.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_fqoid);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SuggestionsWalletOrderAttachment.fqoid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_fqoid);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*SuggestionsWalletOrderAttachment.fqoid.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SuggestionsWalletOrderAttachment.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_state;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t SuggestionsWalletOrderAttachment.state.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_state);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*SuggestionsWalletOrderAttachment.state.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id SuggestionsWalletOrderAttachment.__allocating_init(url:data:fqoid:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v21;

  v12 = (char *)objc_allocWithZone(v6);
  v13 = &v12[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_url];
  v14 = sub_23361D340();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  v16 = &v12[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_data];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  v17 = &v12[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_fqoid];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  *(_QWORD *)&v12[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_state] = a6;
  v21.receiver = v12;
  v21.super_class = v6;
  v18 = objc_msgSendSuper2(&v21, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v18;
}

id SuggestionsWalletOrderAttachment.init(url:data:fqoid:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v13 = &v6[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_url];
  v14 = sub_23361D340();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  v16 = &v6[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_data];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  v17 = &v6[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_fqoid];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_state] = a6;
  v21.receiver = v6;
  v21.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v21, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v18;
}

uint64_t static SuggestionsWalletOrderAttachment.readContentsOfOrder(at:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  void *v21;
  _QWORD v22[5];
  void *v23;

  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254244AD0 != -1)
    swift_once();
  v8 = off_254245198;
  v9 = sub_23361D358();
  if (!v2)
  {
    v11 = v9;
    v12 = v10;
    v21 = v8;
    v23 = a1;
    v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v14 = v11;
    v15 = v12;
    v16 = objc_msgSend(v13, sel_temporaryDirectory);

    sub_23361D2D4();
    v22[3] = &type metadata for OrderBundleValidator;
    v22[4] = &protocol witness table for OrderBundleValidator;
    v22[0] = &type metadata for WalletPreferences;
    v22[1] = &protocol witness table for WalletPreferences;
    v17 = sub_2333CB238(v14, v15, (uint64_t)v7, (uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    MEMORY[0x24BDAC7A8](v18);
    *(&v21 - 6) = v17;
    *(&v21 - 5) = (void *)v1;
    v19 = v23;
    *(&v21 - 4) = v21;
    *(&v21 - 3) = v19;
    *(&v21 - 2) = (void *)v14;
    *(&v21 - 1) = (void *)v15;
    v1 = sub_23356ADE4((void (*)(uint64_t *__return_ptr))sub_23356C0D8);
    swift_release();
    sub_23316BEA4(v14, v15);
  }
  return v1;
}

uint64_t sub_23356BB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  objc_class *v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  objc_super v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v53 = a4;
  v54 = a5;
  v50 = a2;
  v51 = a3;
  v61 = sub_23361D340();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v52 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v11 = *((_QWORD *)v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055868);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  sub_2333CB6BC(a1 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content, (uint64_t)v16);
  sub_23328BA24((uint64_t)v16, (uint64_t)v22);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v22, 0, 1, v10);
  sub_23356C388((uint64_t)v22, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v20, 1, v10) == 1)
  {
    sub_23356C3D0((uint64_t)v20);
    sub_23356C410();
    swift_allocError();
    swift_willThrow();
    return sub_23356C3D0((uint64_t)v22);
  }
  else
  {
    sub_23328BA24((uint64_t)v20, (uint64_t)v13);
    v24 = v10[6];
    v25 = (uint64_t *)&v13[v10[5]];
    v26 = *v25;
    v27 = v25[1];
    v47 = v13;
    v49 = v6;
    v28 = *(_QWORD *)&v13[v24];
    v29 = *(_QWORD *)&v13[v24 + 8];
    v57 = 0;
    v58 = 0xE000000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v57 = 0xD000000000000016;
    v58 = 0x8000000233672160;
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = a6;
    v45 = v58;
    v46 = v57;
    v30 = (uint64_t)&v13[v10[12]];
    v57 = v26;
    v58 = v27;
    v59 = v28;
    v60 = v29;
    v31 = _s10FinanceKit32SuggestionsWalletOrderAttachmentC08stateForE04with11updatedDate12financeStoreAA08ContainsE10ResultObjCOAA014FullyQualifiedE10IdentifierV_10Foundation0K0VAA0aM0CtFZ_0(&v57, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v55;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
    v34 = v52;
    v35 = v61;
    v33(v52, v51, v61);
    v36 = (objc_class *)type metadata accessor for SuggestionsWalletOrderAttachment();
    v37 = (char *)objc_allocWithZone(v36);
    v33(&v37[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_url], (uint64_t)v34, v35);
    v38 = (uint64_t *)&v37[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_data];
    v39 = v53;
    v40 = v54;
    *v38 = v53;
    v38[1] = v40;
    v41 = (uint64_t *)&v37[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_fqoid];
    v42 = v45;
    *v41 = v46;
    v41[1] = v42;
    *(_QWORD *)&v37[OBJC_IVAR____TtC10FinanceKit32SuggestionsWalletOrderAttachment_state] = v31;
    sub_2331D1374(v39, v40);
    v56.receiver = v37;
    v56.super_class = v36;
    v43 = objc_msgSendSuper2(&v56, sel_init);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v35);
    sub_233168500((uint64_t)v47, type metadata accessor for RawECommerceOrderContent);
    result = sub_23356C3D0((uint64_t)v22);
    *v48 = v43;
  }
  return result;
}

uint64_t FinanceStore.ContainsOrderResult.objcValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

id SuggestionsWalletOrderAttachment.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SuggestionsWalletOrderAttachment.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SuggestionsWalletOrderAttachment.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t ContainsOrderResultObjC.init(rawValue:)(unint64_t a1)
{
  return sub_23356C23C(a1);
}

unint64_t sub_23356C0A8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_23356C23C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_23356C0D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23356BB74(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t _s10FinanceKit32SuggestionsWalletOrderAttachmentC08stateForE04with11updatedDate12financeStoreAA08ContainsE10ResultObjCOAA014FullyQualifiedE10IdentifierV_10Foundation0K0VAA0aM0CtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unsigned __int8 v16;

  v4 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v7 = a1[1];
  v10 = a1[2];
  v9 = a1[3];
  v11 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
  *v6 = v8;
  v6[1] = v7;
  v6[2] = v10;
  v6[3] = v9;
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2331CB25C((uint64_t)v6, &v16);
  sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  return v16;
}

unint64_t sub_23356C23C(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_23356C250()
{
  unint64_t result;

  result = qword_256055828;
  if (!qword_256055828)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ContainsOrderResultObjC, &type metadata for ContainsOrderResultObjC);
    atomic_store(result, (unint64_t *)&qword_256055828);
  }
  return result;
}

uint64_t sub_23356C294()
{
  return type metadata accessor for SuggestionsWalletOrderAttachment();
}

uint64_t type metadata accessor for SuggestionsWalletOrderAttachment()
{
  uint64_t result;

  result = qword_256055858;
  if (!qword_256055858)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23356C2D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SuggestionsWalletOrderAttachment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuggestionsWalletOrderAttachment.__allocating_init(url:data:fqoid:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for ContainsOrderResultObjC()
{
  return &type metadata for ContainsOrderResultObjC;
}

uint64_t sub_23356C388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23356C3D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055868);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23356C410()
{
  unint64_t result;

  result = qword_256055870;
  if (!qword_256055870)
  {
    result = MEMORY[0x234934494](&unk_23365DDD0, &type metadata for SuggestionsWalletOrderAttachmentError);
    atomic_store(result, (unint64_t *)&qword_256055870);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SuggestionsWalletOrderAttachmentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23356C494 + 4 * byte_23365DC00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23356C4B4 + 4 * byte_23365DC05[v4]))();
}

_BYTE *sub_23356C494(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23356C4B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23356C4BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23356C4C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23356C4CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23356C4D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionsWalletOrderAttachmentError()
{
  return &type metadata for SuggestionsWalletOrderAttachmentError;
}

unint64_t sub_23356C4F4()
{
  unint64_t result;

  result = qword_256055878;
  if (!qword_256055878)
  {
    result = MEMORY[0x234934494](&unk_23365DDA8, &type metadata for SuggestionsWalletOrderAttachmentError);
    atomic_store(result, (unint64_t *)&qword_256055878);
  }
  return result;
}

uint64_t Order.XPCArray.value.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t Order.XPCArray.value.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___XPCOrders_value);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Order.XPCArray.value.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id Order.XPCArray.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___XPCOrders_value] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id Order.XPCArray.init(value:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR___XPCOrders_value] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static Order.XPCArray.supportsSecureCoding.getter()
{
  return 1;
}

id Order.XPCArray.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316AF84(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id Order.XPCArray.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316AF84(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id Order.XPCArray.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Order.XPCArray.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Order.XPCArray.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23356C8D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___XPCOrders_value);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_23356C928(uint64_t *a1)
{
  objc_class *v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  v2 = *a1;
  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___XPCOrders_value] = v2;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_23356C9D0()
{
  sub_23356DBE4();
  return sub_23361F428();
}

uint64_t sub_23356C9F8()
{
  sub_23356DBE4();
  return sub_23361F434();
}

uint64_t sub_23356CA20()
{
  sub_23356DC28();
  return sub_23361F428();
}

uint64_t sub_23356CA48()
{
  sub_23356DC28();
  return sub_23361F434();
}

uint64_t sub_23356CA70()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x657079547962;
  if (*v0 != 1)
    v1 = 7105633;
  if (*v0)
    return v1;
  else
    return 0x656C676E6973;
}

uint64_t sub_23356CABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23356E31C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23356CAE0()
{
  sub_23356DBA0();
  return sub_23361F428();
}

uint64_t sub_23356CB08()
{
  sub_23356DBA0();
  return sub_23361F434();
}

uint64_t sub_23356CB30()
{
  sub_23356DC6C();
  return sub_23361F428();
}

uint64_t sub_23356CB58()
{
  sub_23356DC6C();
  return sub_23361F434();
}

uint64_t FetchOrderType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055888);
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055890);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055898);
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560558A0);
  v32 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[1];
  v30 = *v1;
  v31 = v14;
  v15 = v1[2];
  v21 = v1[3];
  v22 = v15;
  v16 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23356DBA0();
  sub_23361F410();
  if (!v16)
  {
    LOBYTE(v33) = 0;
    sub_23356DC6C();
    sub_23361F0C8();
    v33 = v30;
    v34 = v31;
    v35 = v22;
    v36 = v21;
    sub_23322AA54();
    v18 = v24;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v11);
  }
  if (v16 == 1)
  {
    LOBYTE(v33) = 1;
    sub_23356DC28();
    sub_23361F0C8();
    v17 = v27;
    sub_23361F140();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v11);
  }
  LOBYTE(v33) = 2;
  sub_23356DBE4();
  v20 = v25;
  sub_23361F0C8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v11);
}

uint64_t FetchOrderType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560558D0);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560558D8);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560558E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560558E8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23356DBA0();
  v16 = v51;
  sub_23361F3EC();
  if (v16)
    goto LABEL_7;
  v37 = v8;
  v38 = v7;
  v17 = v45;
  v51 = v12;
  v18 = sub_23361F098();
  v19 = v11;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v22 = sub_23361EE10();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v24 = &type metadata for FetchOrderType;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v19);
LABEL_7:
    v25 = (uint64_t)v46;
    return __swift_destroy_boxed_opaque_existential_0(v25);
  }
  v20 = *(unsigned __int8 *)(v18 + 32);
  if (*(_BYTE *)(v18 + 32))
  {
    if (v20 == 1)
    {
      LOBYTE(v47) = 1;
      sub_23356DC28();
      v21 = v17;
      sub_23361EFA8();
      v30 = v40;
      v34 = sub_23361F02C();
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v19);
    }
    else
    {
      LOBYTE(v47) = 2;
      sub_23356DBE4();
      v29 = v43;
      sub_23361EFA8();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v19);
      v34 = 0;
      v36 = 0;
    }
    v32 = 0;
    v33 = 0;
    v25 = (uint64_t)v46;
    v28 = v44;
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_23356DC6C();
    v27 = v10;
    sub_23361EFA8();
    v28 = v44;
    sub_23322AA98();
    v31 = v38;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v19);
    v34 = v47;
    v36 = v48;
    v32 = v49;
    v33 = v50;
    v25 = (uint64_t)v46;
  }
  *(_QWORD *)v28 = v34;
  *(_QWORD *)(v28 + 8) = v36;
  *(_QWORD *)(v28 + 16) = v32;
  *(_QWORD *)(v28 + 24) = v33;
  *(_BYTE *)(v28 + 32) = v20;
  return __swift_destroy_boxed_opaque_existential_0(v25);
}

uint64_t sub_23356D34C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchOrderType.init(from:)(a1, a2);
}

uint64_t sub_23356D360(_QWORD *a1)
{
  return FetchOrderType.encode(to:)(a1);
}

uint64_t FinanceStore.order(matching:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = type metadata accessor for FinanceStore.Message();
  v5 = swift_task_alloc();
  v6 = *a2;
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = v6;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v3 + 72) = a2[3];
  return swift_task_switch();
}

uint64_t sub_23356D3EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v1 = v0[8];
  v2 = v0[9];
  v3 = v0[7];
  v4 = v0[5];
  *(_QWORD *)v4 = v0[6];
  *(_QWORD *)(v4 + 8) = v3;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  *(_BYTE *)(v4 + 32) = 0;
  swift_storeEnumTagMultiPayload();
  v7 = (uint64_t (*)(_QWORD))((char *)&dword_256043058 + dword_256043058);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_23356D494;
  return v7(v0[5]);
}

uint64_t sub_23356D494(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 40);
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  sub_2331CB0F4(v4);
  return swift_task_switch();
}

uint64_t sub_23356D50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = type metadata accessor for Order(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (v2)
  {
    sub_23356DCB0(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), *(_QWORD *)(v0 + 16));
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v0 + 16), v5, 1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23356D5AC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FinanceStore.orders(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for FinanceStore.Message();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23356D640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = v0[6];
  v2 = v0[3];
  *(_QWORD *)v1 = v0[2];
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256043058 + dword_256043058);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23356D6DC;
  return v5(v0[6]);
}

uint64_t sub_23356D6DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 64) = v1;
  swift_task_dealloc();
  sub_2331CB0F4(*(_QWORD *)(v4 + 48));
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t FinanceStore.orders()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = type metadata accessor for FinanceStore.Message();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23356D7CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_BYTE *)(v1 + 32) = 2;
  swift_storeEnumTagMultiPayload();
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_256043058 + dword_256043058);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_2333948A4;
  return v4(*(_QWORD *)(v0 + 32));
}

uint64_t _s10FinanceKit14FetchOrderTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v13;
  BOOL v14;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v8 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (!*(_BYTE *)(a1 + 32))
  {
    if (*(_BYTE *)(a2 + 32))
      goto LABEL_25;
    v14 = v3 == v8 && v2 == v7;
    if (!v14 && (sub_23361F224() & 1) == 0)
    {
      sub_233466AC4(v8, v7, v10, v9, 0);
      sub_233466AC4(v3, v2, v5, v4, 0);
      sub_233465424(v3, v2, v5, v4, 0);
      v18 = v8;
      v19 = v7;
      v20 = v10;
      v21 = v9;
      v22 = 0;
      goto LABEL_26;
    }
    if (v5 != v10 || v4 != v9)
    {
      v16 = sub_23361F224();
      sub_233466AC4(v8, v7, v10, v9, 0);
      sub_233466AC4(v3, v2, v5, v4, 0);
      sub_233465424(v3, v2, v5, v4, 0);
      sub_233465424(v8, v7, v10, v9, 0);
      if ((v16 & 1) != 0)
      {
        v13 = 1;
        return v13 & 1;
      }
LABEL_27:
      v13 = 0;
      return v13 & 1;
    }
    sub_233466AC4(v8, v7, v5, v4, 0);
    sub_233466AC4(v3, v2, v5, v4, 0);
    sub_233465424(v3, v2, v5, v4, 0);
    v24 = v8;
    v25 = v7;
    v26 = v5;
    v27 = v4;
    v28 = 0;
LABEL_33:
    sub_233465424(v24, v25, v26, v27, v28);
    v13 = 1;
    return v13 & 1;
  }
  if (v6 != 1)
  {
    if (v11 != 2 || (v7 | v8 | v10 | v9) != 0)
      goto LABEL_25;
    sub_233465424(*(_QWORD *)a1, v2, v5, v4, 2);
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 2;
    goto LABEL_33;
  }
  if (v11 != 1)
  {
LABEL_25:
    sub_233466AC4(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v10, v9, v11);
    sub_233466AC4(v3, v2, v5, v4, v6);
    sub_233465424(v3, v2, v5, v4, v6);
    v18 = v8;
    v19 = v7;
    v20 = v10;
    v21 = v9;
    v22 = v11;
LABEL_26:
    sub_233465424(v18, v19, v20, v21, v22);
    goto LABEL_27;
  }
  if (v3 == v8 && v2 == v7)
    v13 = 1;
  else
    v13 = sub_23361F224();
  sub_233466AC4(v8, v7, v10, v9, 1);
  sub_233466AC4(v3, v2, v5, v4, 1);
  sub_233465424(v3, v2, v5, v4, 1);
  sub_233465424(v8, v7, v10, v9, 1);
  return v13 & 1;
}

uint64_t type metadata accessor for Order.XPCArray()
{
  return objc_opt_self();
}

unint64_t sub_23356DBA0()
{
  unint64_t result;

  result = qword_2560558A8;
  if (!qword_2560558A8)
  {
    result = MEMORY[0x234934494](&unk_23365E2B8, &type metadata for FetchOrderType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560558A8);
  }
  return result;
}

unint64_t sub_23356DBE4()
{
  unint64_t result;

  result = qword_2560558B0;
  if (!qword_2560558B0)
  {
    result = MEMORY[0x234934494](&unk_23365E268, &type metadata for FetchOrderType.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560558B0);
  }
  return result;
}

unint64_t sub_23356DC28()
{
  unint64_t result;

  result = qword_2560558B8;
  if (!qword_2560558B8)
  {
    result = MEMORY[0x234934494](&unk_23365E218, &type metadata for FetchOrderType.ByTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560558B8);
  }
  return result;
}

unint64_t sub_23356DC6C()
{
  unint64_t result;

  result = qword_2560558C0;
  if (!qword_2560558C0)
  {
    result = MEMORY[0x234934494](&unk_23365E1C8, &type metadata for FetchOrderType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560558C0);
  }
  return result;
}

uint64_t sub_23356DCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for Order.XPCArray()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Order.XPCArray.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t destroy for FetchOrderType(uint64_t a1)
{
  return sub_233465424(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FetchOrderType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_233466AC4(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FetchOrderType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_233466AC4(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_233465424(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FetchOrderType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_233465424(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_23356DE34(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23356DE4C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FetchOrderType()
{
  return &type metadata for FetchOrderType;
}

uint64_t storeEnumTagSinglePayload for FetchOrderType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23356DEC4 + 4 * byte_23365DE15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23356DEF8 + 4 * byte_23365DE10[v4]))();
}

uint64_t sub_23356DEF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23356DF00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23356DF08);
  return result;
}

uint64_t sub_23356DF14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23356DF1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23356DF20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23356DF28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FetchOrderType.CodingKeys()
{
  return &type metadata for FetchOrderType.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchOrderType.SingleCodingKeys()
{
  return &type metadata for FetchOrderType.SingleCodingKeys;
}

uint64_t _s10FinanceKit14FetchOrderTypeO16SingleCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23356DF98 + 4 * byte_23365DE1A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23356DFB8 + 4 * byte_23365DE1F[v4]))();
}

_BYTE *sub_23356DF98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23356DFB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23356DFC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23356DFC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23356DFD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23356DFD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FetchOrderType.ByTypeCodingKeys()
{
  return &type metadata for FetchOrderType.ByTypeCodingKeys;
}

ValueMetadata *type metadata accessor for FetchOrderType.AllCodingKeys()
{
  return &type metadata for FetchOrderType.AllCodingKeys;
}

unint64_t sub_23356E008()
{
  unint64_t result;

  result = qword_256055950;
  if (!qword_256055950)
  {
    result = MEMORY[0x234934494](&unk_23365E030, &type metadata for FetchOrderType.ByTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055950);
  }
  return result;
}

unint64_t sub_23356E050()
{
  unint64_t result;

  result = qword_256055958;
  if (!qword_256055958)
  {
    result = MEMORY[0x234934494](&unk_23365E0E8, &type metadata for FetchOrderType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055958);
  }
  return result;
}

unint64_t sub_23356E098()
{
  unint64_t result;

  result = qword_256055960;
  if (!qword_256055960)
  {
    result = MEMORY[0x234934494](&unk_23365E1A0, &type metadata for FetchOrderType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055960);
  }
  return result;
}

unint64_t sub_23356E0E0()
{
  unint64_t result;

  result = qword_256055968;
  if (!qword_256055968)
  {
    result = MEMORY[0x234934494](&unk_23365E058, &type metadata for FetchOrderType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055968);
  }
  return result;
}

unint64_t sub_23356E128()
{
  unint64_t result;

  result = qword_256055970;
  if (!qword_256055970)
  {
    result = MEMORY[0x234934494](&unk_23365E080, &type metadata for FetchOrderType.SingleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055970);
  }
  return result;
}

unint64_t sub_23356E170()
{
  unint64_t result;

  result = qword_256055978;
  if (!qword_256055978)
  {
    result = MEMORY[0x234934494](&unk_23365DFA0, &type metadata for FetchOrderType.ByTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055978);
  }
  return result;
}

unint64_t sub_23356E1B8()
{
  unint64_t result;

  result = qword_256055980;
  if (!qword_256055980)
  {
    result = MEMORY[0x234934494](&unk_23365DFC8, &type metadata for FetchOrderType.ByTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055980);
  }
  return result;
}

unint64_t sub_23356E200()
{
  unint64_t result;

  result = qword_256055988;
  if (!qword_256055988)
  {
    result = MEMORY[0x234934494](&unk_23365DF50, &type metadata for FetchOrderType.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055988);
  }
  return result;
}

unint64_t sub_23356E248()
{
  unint64_t result;

  result = qword_256055990;
  if (!qword_256055990)
  {
    result = MEMORY[0x234934494](&unk_23365DF78, &type metadata for FetchOrderType.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055990);
  }
  return result;
}

unint64_t sub_23356E290()
{
  unint64_t result;

  result = qword_256055998;
  if (!qword_256055998)
  {
    result = MEMORY[0x234934494](&unk_23365E110, &type metadata for FetchOrderType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055998);
  }
  return result;
}

unint64_t sub_23356E2D8()
{
  unint64_t result;

  result = qword_2560559A0;
  if (!qword_2560559A0)
  {
    result = MEMORY[0x234934494](&unk_23365E138, &type metadata for FetchOrderType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560559A0);
  }
  return result;
}

uint64_t sub_23356E31C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079547962 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7105633 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t BankConnectService.institution(paymentPass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for BankConnectService.Message();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23356E4B0()
{
  uint64_t *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (void *)v0[3];
  *(_QWORD *)v0[6] = v1;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043050 + dword_256043050);
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23356E53C;
  return v5(v0[2], v0[6]);
}

uint64_t sub_23356E53C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23356E5C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *v2;
  v3[5] = v4;
  v3[6] = v5;
  return swift_task_switch();
}

uint64_t sub_23356E624()
{
  uint64_t *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (void *)v0[3];
  *(_QWORD *)v0[5] = v1;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043050 + dword_256043050);
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23356E6B0;
  return v5(v0[2], v0[5]);
}

uint64_t sub_23356E6B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t dispatch thunk of BankConnectConnectionInstitutionProviding.institution(paymentPass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331676FC;
  return v11(a1, a2, a3, a4);
}

uint64_t BankConnectService.validateAccountConnection(with:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *a1;
  *(_QWORD *)(v2 + 96) = v4;
  *(_QWORD *)(v2 + 104) = v5;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 128) = a1[3];
  return swift_task_switch();
}

uint64_t sub_23356E838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = (_QWORD *)v0[12];
  v0[17] = *(_QWORD *)(v0[10] + 16);
  *v5 = v3;
  v5[1] = v4;
  v5[2] = v1;
  v5[3] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23356E8A4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectService.validateAccountConnection(with:)(a1);
}

uint64_t dispatch thunk of BankConnectAccountValidating.validateAccountConnection(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return v9(a1, a2, a3);
}

uint64_t MapsInsight.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v16;
  void *v17;
  unsigned __int16 v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  char *v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MapsInsight(0);
  v10 = a2 + *(int *)(v9 + 20);
  v11 = type metadata accessor for MapsBrand();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v13 = a2 + *(int *)(v9 + 24);
  v14 = type metadata accessor for MapsMerchant();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v25 = v13;
  v15(v13, 1, 1, v14);
  v16 = objc_msgSend(a1, sel_fallbackCategoryValue);
  v17 = v16;
  if (v16)
  {
    v18 = (unsigned __int16)objc_msgSend(v16, sel_shortValue);

  }
  else
  {
    v18 = 0;
  }
  *(_WORD *)a2 = v18;
  *(_BYTE *)(a2 + 2) = v17 == 0;
  v19 = objc_msgSend(a1, sel_brandObject);
  if (v19)
  {
    v20 = v19;
    MapsBrand.init(_:)(v20, (uint64_t)v8);
    v12((uint64_t)v8, 0, 1, v11);

  }
  else
  {
    v12((uint64_t)v8, 1, 1, v11);
  }
  sub_233170B8C((uint64_t)v8, v10, &qword_25604E480);
  v21 = objc_msgSend(a1, sel_merchantObject);
  v22 = (uint64_t)v26;
  if (v21)
  {
    v23 = v21;
    MapsMerchant.init(_:)(v23, v22);
    v15(v22, 0, 1, v14);

  }
  else
  {
    v15((uint64_t)v26, 1, 1, v14);
  }

  return sub_233170B8C(v22, v25, (uint64_t *)&unk_2560559E0);
}

uint64_t type metadata accessor for MapsInsight(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256055C20);
}

id Transaction.Insight.xpcValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;

  v1 = type metadata accessor for Transaction.Insight(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v0, (uint64_t)v3, type metadata accessor for Transaction.Insight);
  v4 = (objc_class *)type metadata accessor for Transaction.Insight.XPC(0);
  v5 = objc_allocWithZone(v4);
  sub_2331684BC((uint64_t)v3, (uint64_t)v5 + OBJC_IVAR___XPCTransactionInsight_value, type metadata accessor for Transaction.Insight);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_233168500((uint64_t)v3, type metadata accessor for Transaction.Insight);
  return v6;
}

uint64_t type metadata accessor for Transaction.Insight(uint64_t a1)
{
  return sub_233177414(a1, qword_256055B58);
}

uint64_t sub_23356ECC8()
{
  sub_233571108();
  return sub_23361F428();
}

uint64_t sub_23356ECF0()
{
  sub_233571108();
  return sub_23361F434();
}

uint64_t sub_23356ED18()
{
  sub_23357114C();
  return sub_23361F428();
}

uint64_t sub_23356ED40()
{
  sub_23357114C();
  return sub_23361F434();
}

uint64_t sub_23356ED68()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1802396002;
  if (*v0 != 1)
    v1 = 0x796150656C707061;
  if (*v0)
    return v1;
  else
    return 1936744813;
}

uint64_t sub_23356EDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233579844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23356EDD8()
{
  sub_2335710C4();
  return sub_23361F428();
}

uint64_t sub_23356EE00()
{
  sub_2335710C4();
  return sub_23361F434();
}

uint64_t sub_23356EE28()
{
  sub_2335711D4();
  return sub_23361F428();
}

uint64_t sub_23356EE50()
{
  sub_2335711D4();
  return sub_23361F434();
}

void Transaction.Insight.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int16 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;

  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560559F0);
  v35 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for ApplePayTransactionInsight(0);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560559F8);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055A00);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for MapsInsight(0);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Transaction.Insight(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unsigned __int16 *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055A08);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335710C4();
  sub_23361F410();
  sub_2331684BC((uint64_t)v58, (uint64_t)v12, type metadata accessor for Transaction.Insight);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v58 = v16;
    v39 = v14;
    v18 = v13;
    if (EnumCaseMultiPayload == 1)
    {
      LODWORD(v45) = *v12;
      LODWORD(v44) = *((unsigned __int8 *)v12 + 2);
      v19 = *((_QWORD *)v12 + 2);
      v41 = *((_QWORD *)v12 + 1);
      v46 = v19;
      v20 = *((_QWORD *)v12 + 3);
      v21 = *((_QWORD *)v12 + 4);
      v22 = *((_QWORD *)v12 + 6);
      v37 = (char *)*((_QWORD *)v12 + 5);
      v38 = v20;
      v23 = *((_QWORD *)v12 + 8);
      v36 = *((_QWORD *)v12 + 7);
      v24 = (void *)*((_QWORD *)v12 + 9);
      LOBYTE(v47) = 1;
      sub_23357114C();
      v25 = v40;
      v26 = (uint64_t)v58;
      sub_23361F0C8();
      v47 = (__int16)v45;
      v48 = v44;
      v49 = v41;
      v50 = v19;
      v51 = v38;
      v52 = v21;
      v53 = v37;
      v54 = v22;
      v55 = v36;
      v56 = v23;
      v57 = v24;
      v27 = v24;
      sub_233571190();
      v28 = v43;
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v28);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v26, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {
      v31 = v44;
      sub_233168580((uint64_t)v12, v44, type metadata accessor for ApplePayTransactionInsight);
      LOBYTE(v47) = 2;
      sub_233571108();
      v32 = v45;
      v33 = (uint64_t)v58;
      sub_23361F0C8();
      sub_233167C58(&qword_256055A20, type metadata accessor for ApplePayTransactionInsight, (uint64_t)&protocol conformance descriptor for ApplePayTransactionInsight);
      v34 = v46;
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      sub_233168500(v31, type metadata accessor for ApplePayTransactionInsight);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v33, v18);
    }
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, type metadata accessor for MapsInsight);
    LOBYTE(v47) = 0;
    sub_2335711D4();
    v29 = v37;
    sub_23361F0C8();
    sub_233167C58(&qword_256055A40, type metadata accessor for MapsInsight, (uint64_t)&protocol conformance descriptor for MapsInsight);
    v30 = v39;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v30);
    sub_233168500((uint64_t)v9, type metadata accessor for MapsInsight);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t Transaction.Insight.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  _WORD *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  _QWORD *v63;
  __int16 v64;
  char v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;

  v56 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055A48);
  v4 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  v55 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055A50);
  v53 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v61 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055A58);
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v59 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256055A60);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Transaction.Insight(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v47 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v47 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - v20;
  v22 = a1[3];
  v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_2335710C4();
  v62 = v9;
  v23 = v71;
  sub_23361F3EC();
  if (!v23)
  {
    v24 = v19;
    v47 = v16;
    v48 = v13;
    v25 = v59;
    v26 = v61;
    v49 = v21;
    v71 = v10;
    v27 = v60;
    v28 = v62;
    v29 = sub_23361F098();
    if (*(_QWORD *)(v29 + 16) == 1)
    {
      if (*(_BYTE *)(v29 + 32))
      {
        if (*(_BYTE *)(v29 + 32) != 1)
        {
          LOBYTE(v64) = 2;
          sub_233571108();
          v40 = v57;
          sub_23361EFA8();
          type metadata accessor for ApplePayTransactionInsight(0);
          sub_233167C58((unint64_t *)&unk_256055A70, type metadata accessor for ApplePayTransactionInsight, (uint64_t)&protocol conformance descriptor for ApplePayTransactionInsight);
          v42 = (uint64_t)v48;
          v43 = v54;
          sub_23361F068();
          v44 = v58;
          (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v27);
          swift_storeEnumTagMultiPayload();
          v46 = (uint64_t)v49;
          sub_233168580(v42, (uint64_t)v49, type metadata accessor for Transaction.Insight);
          v31 = (uint64_t)v63;
LABEL_12:
          sub_233168580(v46, v56, type metadata accessor for Transaction.Insight);
          return __swift_destroy_boxed_opaque_existential_0(v31);
        }
        LOBYTE(v64) = 1;
        sub_23357114C();
        sub_23361EFA8();
        sub_233571218();
        v30 = v51;
        sub_23361F068();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v28, v27);
        v31 = (uint64_t)v63;
        v32 = v65;
        v33 = v70;
        v34 = v47;
        *v47 = v64;
        *((_BYTE *)v34 + 2) = v32;
        *(_OWORD *)(v34 + 4) = v66;
        *(_OWORD *)(v34 + 12) = v67;
        *(_OWORD *)(v34 + 20) = v68;
        *(_OWORD *)(v34 + 28) = v69;
        *((_QWORD *)v34 + 9) = v33;
        swift_storeEnumTagMultiPayload();
        v35 = (uint64_t)v34;
      }
      else
      {
        LOBYTE(v64) = 0;
        sub_2335711D4();
        sub_23361EFA8();
        type metadata accessor for MapsInsight(0);
        sub_233167C58(&qword_256055A80, type metadata accessor for MapsInsight, (uint64_t)&protocol conformance descriptor for MapsInsight);
        v41 = v52;
        sub_23361F068();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v41);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v28, v27);
        v31 = (uint64_t)v63;
        swift_storeEnumTagMultiPayload();
        v35 = (uint64_t)v24;
      }
      v46 = (uint64_t)v49;
      sub_233168580(v35, (uint64_t)v49, type metadata accessor for Transaction.Insight);
      goto LABEL_12;
    }
    v36 = v27;
    v37 = sub_23361EE10();
    swift_allocError();
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v39 = v71;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x24BEE26D0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v28, v36);
  }
  v31 = (uint64_t)v63;
  return __swift_destroy_boxed_opaque_existential_0(v31);
}

uint64_t sub_23356FA80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Transaction.Insight.init(from:)(a1, a2);
}

void sub_23356FA94(_QWORD *a1)
{
  Transaction.Insight.encode(to:)(a1);
}

uint64_t Transaction.Insight.XPC.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1 + OBJC_IVAR___XPCTransactionInsight_value, a1, type metadata accessor for Transaction.Insight);
}

id Transaction.Insight.XPC.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2331684BC(a1, (uint64_t)v3 + OBJC_IVAR___XPCTransactionInsight_value, type metadata accessor for Transaction.Insight);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for Transaction.Insight);
  return v4;
}

uint64_t type metadata accessor for Transaction.Insight.XPC(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256055BB8);
}

id Transaction.Insight.XPC.init(value:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_2331684BC(a1, (uint64_t)v1 + OBJC_IVAR___XPCTransactionInsight_value, type metadata accessor for Transaction.Insight);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for Transaction.Insight);
  return v4;
}

uint64_t static Transaction.Insight.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id Transaction.Insight.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316B134(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id Transaction.Insight.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316B134(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id Transaction.Insight.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Transaction.Insight.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Transaction.Insight.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23356FE68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1 + OBJC_IVAR___XPCTransactionInsight_value, a1, type metadata accessor for Transaction.Insight);
}

id sub_23356FE94(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2331684BC(a1, (uint64_t)v3 + OBJC_IVAR___XPCTransactionInsight_value, type metadata accessor for Transaction.Insight);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for Transaction.Insight);
  return v4;
}

void MapsInsight.category.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 2);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(_BYTE *)(a1 + 2) = v2;
}

uint64_t MapsInsight.category.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 2);
  *(_WORD *)v1 = *(_WORD *)result;
  *(_BYTE *)(v1 + 2) = v2;
  return result;
}

uint64_t (*MapsInsight.category.modify())()
{
  return nullsub_1;
}

uint64_t MapsInsight.brand.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 20), a1, &qword_25604E480);
}

uint64_t MapsInsight.brand.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 20), &qword_25604E480);
}

uint64_t (*MapsInsight.brand.modify())(_QWORD)
{
  type metadata accessor for MapsInsight(0);
  return nullsub_1;
}

uint64_t MapsInsight.merchant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsInsight(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_2560559E0);
}

uint64_t MapsInsight.merchant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsInsight(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_2560559E0);
}

uint64_t (*MapsInsight.merchant.modify())(_QWORD)
{
  type metadata accessor for MapsInsight(0);
  return nullsub_1;
}

uint64_t sub_23357008C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646E617262;
  if (*v0 != 1)
    v1 = 0x746E61686372656DLL;
  if (*v0)
    return v1;
  else
    return 0x79726F6765746163;
}

uint64_t sub_2335700E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233579978(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233570108()
{
  sub_23357125C();
  return sub_23361F428();
}

uint64_t sub_233570130()
{
  sub_23357125C();
  return sub_23361F434();
}

uint64_t MapsInsight.encode(to:)(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v2;
  __int16 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  _BYTE v11[12];
  __int16 v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055A88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23357125C();
  sub_23361F410();
  v9 = *((_BYTE *)v3 + 2);
  v12 = *v3;
  v13 = v9;
  v11[11] = 0;
  sub_2333FECAC();
  sub_23361F110();
  if (!v2)
  {
    type metadata accessor for MapsInsight(0);
    v11[10] = 1;
    type metadata accessor for MapsBrand();
    sub_233167C58(&qword_25604E4B0, (uint64_t (*)(uint64_t))type metadata accessor for MapsBrand, (uint64_t)&protocol conformance descriptor for MapsBrand);
    sub_23361F110();
    v11[9] = 2;
    type metadata accessor for MapsMerchant();
    sub_233167C58(&qword_25604E4A8, (uint64_t (*)(uint64_t))type metadata accessor for MapsMerchant, (uint64_t)&protocol conformance descriptor for MapsMerchant);
    sub_23361F110();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MapsInsight.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  __int16 v37;
  char v38;
  char v39;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256055AA0);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MapsInsight(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)v12 = 0;
  v12[2] = 1;
  v13 = (uint64_t)&v12[*(int *)(v10 + 20)];
  v14 = type metadata accessor for MapsBrand();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v27 = v13;
  v15(v13, 1, 1, v14);
  v16 = (uint64_t)&v12[*(int *)(v9 + 24)];
  v17 = type metadata accessor for MapsMerchant();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23357125C();
  v32 = v8;
  v18 = v34;
  sub_23361F3EC();
  if (!v18)
  {
    v34 = v16;
    v20 = v30;
    v19 = (uint64_t)v31;
    v39 = 0;
    sub_2333FECF0();
    v21 = v32;
    sub_23361EFFC();
    v22 = v38;
    *(_WORD *)v12 = v37;
    v12[2] = v22;
    v36 = 1;
    sub_233167C58((unint64_t *)&unk_256055AB0, (uint64_t (*)(uint64_t))type metadata accessor for MapsBrand, (uint64_t)&protocol conformance descriptor for MapsBrand);
    sub_23361EFFC();
    sub_233170B8C(v19, v27, &qword_25604E480);
    v35 = 2;
    sub_233167C58((unint64_t *)&unk_25604E4D0, (uint64_t (*)(uint64_t))type metadata accessor for MapsMerchant, (uint64_t)&protocol conformance descriptor for MapsMerchant);
    v24 = (uint64_t)v28;
    v25 = v33;
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v25);
    v26 = v29;
    sub_233170B8C(v24, v34, (uint64_t *)&unk_2560559E0);
    sub_2331684BC((uint64_t)v12, v26, type metadata accessor for MapsInsight);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500((uint64_t)v12, type metadata accessor for MapsInsight);
}

uint64_t sub_2335706A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MapsInsight.init(from:)(a1, a2);
}

uint64_t sub_2335706B8(_QWORD *a1)
{
  return MapsInsight.encode(to:)(a1);
}

uint64_t _s10FinanceKit11TransactionV7InsightO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unsigned __int16 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  char v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  _QWORD *v44;
  uint64_t v45;
  _OWORD v47[2];
  __int128 v48;
  unsigned __int16 v49;
  char v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  unsigned __int16 v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;

  v4 = type metadata accessor for ApplePayTransactionInsight(0);
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)&v48 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MapsInsight(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Transaction.Insight(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v47 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v47 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055CE8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2331684BC(a1, (uint64_t)v21, type metadata accessor for Transaction.Insight);
  sub_2331684BC(a2, v22, type metadata accessor for Transaction.Insight);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2331684BC((uint64_t)v21, (uint64_t)v17, type metadata accessor for Transaction.Insight);
    if (!swift_getEnumCaseMultiPayload())
    {
      v43 = type metadata accessor for MapsInsight;
      sub_233168580(v22, (uint64_t)v8, type metadata accessor for MapsInsight);
      v40 = _s10FinanceKit11MapsInsightV2eeoiySbAC_ACtFZ_0();
      sub_233168500((uint64_t)v8, type metadata accessor for MapsInsight);
      v45 = (uint64_t)v17;
      goto LABEL_14;
    }
    v41 = type metadata accessor for MapsInsight;
    v42 = (uint64_t)v17;
LABEL_11:
    sub_233168500(v42, v41);
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_2331684BC((uint64_t)v21, (uint64_t)v12, type metadata accessor for Transaction.Insight);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v43 = type metadata accessor for ApplePayTransactionInsight;
      v44 = (_QWORD *)v48;
      sub_233168580(v22, v48, type metadata accessor for ApplePayTransactionInsight);
      v40 = _s10FinanceKit26ApplePayTransactionInsightV2eeoiySbAC_ACtFZ_0(v12, v44);
      sub_233168500((uint64_t)v44, type metadata accessor for ApplePayTransactionInsight);
      v45 = (uint64_t)v12;
LABEL_14:
      sub_233168500(v45, v43);
      goto LABEL_15;
    }
    v41 = type metadata accessor for ApplePayTransactionInsight;
    v42 = (uint64_t)v12;
    goto LABEL_11;
  }
  sub_2331684BC((uint64_t)v21, (uint64_t)v15, type metadata accessor for Transaction.Insight);
  v24 = *((_QWORD *)v15 + 2);
  v25 = *((_QWORD *)v15 + 4);
  v26 = *((_QWORD *)v15 + 6);
  v27 = *((_QWORD *)v15 + 8);
  v28 = (void *)*((_QWORD *)v15 + 9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = *((_QWORD *)v15 + 7);
    v30 = *((_QWORD *)v15 + 5);
    v31 = *((_QWORD *)v15 + 3);
    v32 = *((_QWORD *)v15 + 1);
    v33 = v15[2];
    v34 = *(_WORD *)v22;
    v35 = *(_BYTE *)(v22 + 2);
    v36 = *(_QWORD *)(v22 + 8);
    v37 = *(_QWORD *)(v22 + 64);
    v38 = *(void **)(v22 + 72);
    v57 = *(_WORD *)v15;
    v58 = v33;
    v59 = v32;
    v60 = v24;
    v61 = v31;
    v62 = v25;
    v63 = v30;
    v64 = v26;
    v65 = v29;
    v66 = v27;
    v67 = v28;
    v49 = v34;
    v50 = v35;
    v51 = v36;
    v39 = *(_OWORD *)(v22 + 32);
    v47[0] = *(_OWORD *)(v22 + 16);
    v47[1] = v39;
    v52 = v47[0];
    v53 = v39;
    v48 = *(_OWORD *)(v22 + 48);
    v54 = v48;
    v55 = v37;
    v56 = v38;
    v40 = _s10FinanceKit30TransactionMerchantInformationV2eeoiySbAC_ACtFZ_0(&v57, &v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_15:
    sub_233168500((uint64_t)v21, type metadata accessor for Transaction.Insight);
    return v40 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_12:
  sub_233168608((uint64_t)v21, &qword_256055CE8);
  v40 = 0;
  return v40 & 1;
}

BOOL _s10FinanceKit11MapsInsightV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned __int16 *v24;
  unsigned __int16 *v25;
  uint64_t v26;
  char *v27;
  char v28;
  unsigned __int16 *v29;
  unsigned __int16 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  unsigned __int16 *v53;
  unsigned __int16 *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v0 = type metadata accessor for MapsMerchant();
  v60 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v57 = (uint64_t)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E608);
  MEMORY[0x24BDAC7A8](v59);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v58 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v61 = (uint64_t)&v51 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v62 = (uint64_t)&v51 - v9;
  v10 = type metadata accessor for MapsBrand();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E600);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v51 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v27 = (char *)&v51 - v26;
  v28 = *((_BYTE *)v24 + 2);
  if ((v25[1] & 1) != 0)
  {
    if (!*((_BYTE *)v24 + 2))
      return 0;
  }
  else
  {
    if (*v25 != *v24)
      v28 = 1;
    if ((v28 & 1) != 0)
      return 0;
  }
  v51 = v13;
  v55 = v0;
  v56 = v3;
  v29 = v25;
  v30 = v24;
  v31 = type metadata accessor for MapsInsight(0);
  v32 = *(int *)(v31 + 20);
  v53 = v29;
  sub_2331686A0((uint64_t)v29 + v32, (uint64_t)v27, &qword_25604E480);
  v52 = v31;
  v33 = *(int *)(v31 + 20);
  v54 = v30;
  sub_2331686A0((uint64_t)v30 + v33, (uint64_t)v23, &qword_25604E480);
  v34 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2331686A0((uint64_t)v27, (uint64_t)v16, &qword_25604E480);
  sub_2331686A0((uint64_t)v23, v34, &qword_25604E480);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v35((uint64_t)v16, 1, v10) == 1)
  {
    sub_233168608((uint64_t)v23, &qword_25604E480);
    sub_233168608((uint64_t)v27, &qword_25604E480);
    if (v35(v34, 1, v10) == 1)
    {
      sub_233168608((uint64_t)v16, &qword_25604E480);
      goto LABEL_14;
    }
LABEL_12:
    v36 = &qword_25604E600;
    v37 = (uint64_t)v16;
LABEL_20:
    sub_233168608(v37, v36);
    return 0;
  }
  sub_2331686A0((uint64_t)v16, (uint64_t)v20, &qword_25604E480);
  if (v35(v34, 1, v10) == 1)
  {
    sub_233168608((uint64_t)v23, &qword_25604E480);
    sub_233168608((uint64_t)v27, &qword_25604E480);
    sub_233168500((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
    goto LABEL_12;
  }
  v38 = (uint64_t)v51;
  sub_233168580(v34, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
  v39 = _s10FinanceKit9MapsBrandV2eeoiySbAC_ACtFZ_0((uint64_t)v20, v38);
  sub_233168500(v38, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
  sub_233168608((uint64_t)v23, &qword_25604E480);
  sub_233168608((uint64_t)v27, &qword_25604E480);
  sub_233168500((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
  sub_233168608((uint64_t)v16, &qword_25604E480);
  if (!v39)
    return 0;
LABEL_14:
  v40 = v52;
  v41 = v62;
  sub_2331686A0((uint64_t)v53 + *(int *)(v52 + 24), v62, (uint64_t *)&unk_2560559E0);
  v42 = v61;
  sub_2331686A0((uint64_t)v54 + *(int *)(v40 + 24), v61, (uint64_t *)&unk_2560559E0);
  v43 = (uint64_t)v56;
  v44 = (uint64_t)&v56[*(int *)(v59 + 48)];
  sub_2331686A0(v41, (uint64_t)v56, (uint64_t *)&unk_2560559E0);
  sub_2331686A0(v42, v44, (uint64_t *)&unk_2560559E0);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  v46 = v55;
  if (v45(v43, 1, v55) != 1)
  {
    v47 = v58;
    sub_2331686A0(v43, v58, (uint64_t *)&unk_2560559E0);
    if (v45(v44, 1, v46) == 1)
    {
      sub_233168608(v42, (uint64_t *)&unk_2560559E0);
      sub_233168608(v41, (uint64_t *)&unk_2560559E0);
      sub_233168500(v47, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      goto LABEL_19;
    }
    v49 = v57;
    sub_233168580(v44, v57, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
    v50 = _s10FinanceKit12MapsMerchantV2eeoiySbAC_ACtFZ_0(v47, v49);
    sub_233168500(v49, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
    sub_233168608(v42, (uint64_t *)&unk_2560559E0);
    sub_233168608(v41, (uint64_t *)&unk_2560559E0);
    sub_233168500(v47, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
    sub_233168608(v43, (uint64_t *)&unk_2560559E0);
    return (v50 & 1) != 0;
  }
  sub_233168608(v42, (uint64_t *)&unk_2560559E0);
  sub_233168608(v41, (uint64_t *)&unk_2560559E0);
  if (v45(v44, 1, v46) != 1)
  {
LABEL_19:
    v36 = &qword_25604E608;
    v37 = v43;
    goto LABEL_20;
  }
  sub_233168608(v43, (uint64_t *)&unk_2560559E0);
  return 1;
}

unint64_t sub_2335710C4()
{
  unint64_t result;

  result = qword_256055A10;
  if (!qword_256055A10)
  {
    result = MEMORY[0x234934494](&unk_23365EA3C, &_s7InsightO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055A10);
  }
  return result;
}

unint64_t sub_233571108()
{
  unint64_t result;

  result = qword_256055A18;
  if (!qword_256055A18)
  {
    result = MEMORY[0x234934494](&unk_23365E9EC, &_s7InsightO18ApplePayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055A18);
  }
  return result;
}

unint64_t sub_23357114C()
{
  unint64_t result;

  result = qword_256055A28;
  if (!qword_256055A28)
  {
    result = MEMORY[0x234934494](&unk_23365E99C, &_s7InsightO14BankCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055A28);
  }
  return result;
}

unint64_t sub_233571190()
{
  unint64_t result;

  result = qword_256055A30;
  if (!qword_256055A30)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionMerchantInformation, &type metadata for TransactionMerchantInformation);
    atomic_store(result, (unint64_t *)&qword_256055A30);
  }
  return result;
}

unint64_t sub_2335711D4()
{
  unint64_t result;

  result = qword_256055A38;
  if (!qword_256055A38)
  {
    result = MEMORY[0x234934494](&unk_23365E94C, &_s7InsightO14MapsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055A38);
  }
  return result;
}

unint64_t sub_233571218()
{
  unint64_t result;

  result = qword_256057900;
  if (!qword_256057900)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionMerchantInformation, &type metadata for TransactionMerchantInformation);
    atomic_store(result, (unint64_t *)&qword_256057900);
  }
  return result;
}

unint64_t sub_23357125C()
{
  unint64_t result;

  result = qword_256055A90;
  if (!qword_256055A90)
  {
    result = MEMORY[0x234934494](&unk_23365E8FC, &type metadata for MapsInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055A90);
  }
  return result;
}

uint64_t _s7InsightOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, void *);
  void *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  int *v160;
  unsigned int (**v161)(_QWORD *, uint64_t, int *);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int (*v170)(char *, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t *v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  void *v209;
  void (*v210)(_QWORD *, _QWORD, uint64_t, int *);
  id v211;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int (*v216)(char *, uint64_t, uint64_t);
  unsigned int (*v217)(_OWORD *, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  char *v226;
  void *v227;
  void *v228;
  unsigned int (*v229)(char *, uint64_t, uint64_t);
  _OWORD *__dst;
  unsigned int (*__dsta)(char *, uint64_t, void *);
  void *__dstb;
  _QWORD *__dstc;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v14;
      v15 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
      v16 = v15[5];
      v17 = (void *)(a1 + v16);
      v18 = (char *)a2 + v16;
      v19 = sub_23361D634();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      v214 = v20;
      v215 = v19;
      if (v21(v18, 1, v19))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v30 = v15[6];
      v31 = (_QWORD *)(a1 + v30);
      v32 = (uint64_t *)((char *)a2 + v30);
      v225 = (void *)v32[1];
      *v31 = *v32;
      v31[1] = v225;
      v33 = v15[7];
      v34 = (_QWORD *)(a1 + v33);
      v35 = (uint64_t *)((char *)a2 + v33);
      v223 = v35[1];
      *v34 = *v35;
      v34[1] = v223;
      v36 = v15[8];
      v37 = (_QWORD *)(a1 + v36);
      v38 = (uint64_t *)((char *)a2 + v36);
      v220 = v38[1];
      *v37 = *v38;
      v37[1] = v220;
      v39 = v15[9];
      v40 = a1 + v39;
      v41 = (uint64_t)a2 + v39;
      *(_WORD *)v40 = *(_WORD *)v41;
      *(_BYTE *)(v40 + 2) = *(_BYTE *)(v41 + 2);
      v42 = v15[10];
      v43 = (_QWORD *)(a1 + v42);
      v44 = (uint64_t *)((char *)a2 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      v46 = v15[11];
      v47 = (_QWORD *)(a1 + v46);
      v48 = (uint64_t *)((char *)a2 + v46);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      v50 = v15[12];
      v51 = (_QWORD *)(a1 + v50);
      v52 = (uint64_t *)((char *)a2 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v15[13];
      v55 = (_QWORD *)(a1 + v54);
      v56 = (uint64_t *)((char *)a2 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = v15[14];
      v59 = (_QWORD *)(a1 + v58);
      v60 = (uint64_t *)((char *)a2 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      *(_BYTE *)(a1 + v15[15]) = *((_BYTE *)a2 + v15[15]);
      v62 = v15[16];
      __dst = (_OWORD *)(a1 + v62);
      v63 = (_OWORD *)((char *)a2 + v62);
      v64 = type metadata accessor for ApplePayTransactionInsight.Location(0);
      v213 = *(_QWORD *)(v64 - 8);
      v217 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v213 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v217(v63, 1, v64))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
        memcpy(__dst, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        v75 = v63[1];
        *__dst = *v63;
        __dst[1] = v75;
        *((_QWORD *)__dst + 4) = *((_QWORD *)v63 + 4);
        (*(void (**)(char *, char *, uint64_t))(v214 + 16))((char *)__dst + *(int *)(v64 + 36), (char *)v63 + *(int *)(v64 + 36), v215);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v213 + 56))(__dst, 0, 1, v64);
      }
      v76 = v15[17];
      v77 = (_QWORD *)(a1 + v76);
      v78 = (uint64_t *)((char *)a2 + v76);
      v227 = (void *)v78[1];
      *v77 = *v78;
      v77[1] = v227;
      v79 = v15[18];
      v80 = (_QWORD *)(a1 + v79);
      v81 = (uint64_t *)((char *)a2 + v79);
      v224 = v81[1];
      *v80 = *v81;
      v80[1] = v224;
      v82 = v15[19];
      v83 = (_QWORD *)(a1 + v82);
      v84 = (uint64_t *)((char *)a2 + v82);
      v222 = v84[1];
      *v83 = *v84;
      v83[1] = v222;
      v85 = v15[20];
      v86 = (_QWORD *)(a1 + v85);
      v87 = (uint64_t *)((char *)a2 + v85);
      v219 = v87[1];
      *v86 = *v87;
      v86[1] = v219;
      v88 = v15[21];
      v89 = (_QWORD *)(a1 + v88);
      v90 = (uint64_t *)((char *)a2 + v88);
      v91 = v90[1];
      *v89 = *v90;
      v89[1] = v91;
      v92 = v15[22];
      v93 = (_QWORD *)(a1 + v92);
      v94 = (uint64_t *)((char *)a2 + v92);
      v95 = v94[1];
      *v93 = *v94;
      v93[1] = v95;
      v96 = v15[23];
      v97 = (_QWORD *)(a1 + v96);
      v98 = (uint64_t *)((char *)a2 + v96);
      v99 = v98[1];
      *v97 = *v98;
      v97[1] = v99;
      v100 = v15[24];
      v101 = (_QWORD *)(a1 + v100);
      v102 = (uint64_t *)((char *)a2 + v100);
      v103 = v102[1];
      *v101 = *v102;
      v101[1] = v103;
      v104 = v15[25];
      v105 = a1 + v104;
      v106 = (uint64_t)a2 + v104;
      *(_WORD *)v105 = *(_WORD *)v106;
      *(_BYTE *)(v105 + 2) = *(_BYTE *)(v106 + 2);
      v107 = v15[26];
      v108 = a1 + v107;
      v109 = (uint64_t)a2 + v107;
      *(_BYTE *)(v108 + 8) = *(_BYTE *)(v109 + 8);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      v110 = v15[27];
      __dstb = (void *)(a1 + v110);
      v111 = (char *)a2 + v110;
      v112 = sub_23361D340();
      v113 = *(_QWORD *)(v112 - 8);
      v216 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v216(v111, 1, v112))
      {
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dstb, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v113 + 16))(__dstb, v111, v112);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56))(__dstb, 0, 1, v112);
      }
      v115 = v15[28];
      v116 = (_QWORD *)(a1 + v115);
      v117 = (uint64_t *)((char *)a2 + v115);
      v118 = v117[1];
      *v116 = *v117;
      v116[1] = v118;
      v119 = v15[29];
      v120 = (_QWORD *)(a1 + v119);
      v121 = (uint64_t *)((char *)a2 + v119);
      v122 = v121[1];
      *v120 = *v121;
      v120[1] = v122;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
      v7 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v7;
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v8;
      v9 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v9;
      v10 = a2[8];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = v10;
      v11 = (void *)a2[9];
      *(_QWORD *)(a1 + 72) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v11;
    }
    else
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
      v23 = type metadata accessor for MapsInsight(0);
      v24 = *(int *)(v23 + 20);
      v25 = (_QWORD *)(a1 + v24);
      v26 = (uint64_t *)((char *)a2 + v24);
      v27 = (int *)type metadata accessor for MapsBrand();
      v28 = *((_QWORD *)v27 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v218 = v28;
        v221 = v23;
        *v25 = *v26;
        *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
        *((_BYTE *)v25 + 12) = *((_BYTE *)v26 + 12);
        v66 = v26[3];
        v25[2] = v26[2];
        v25[3] = v66;
        v67 = v26[5];
        v25[4] = v26[4];
        v25[5] = v67;
        v68 = v27[8];
        v226 = (char *)v25 + v68;
        v69 = (char *)v26 + v68;
        v70 = sub_23361D340();
        v71 = *(_QWORD *)(v70 - 8);
        v72 = *(unsigned int (**)(char *, uint64_t, void *))(v71 + 48);
        v73 = (void *)v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dsta = v72;
        if (v72(v69, 1, v73))
        {
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v226, v69, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v71 + 16))(v226, v69, v73);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v71 + 56))(v226, 0, 1, v73);
        }
        v123 = v27[9];
        v124 = (char *)v25 + v123;
        v125 = (char *)v26 + v123;
        v228 = v73;
        if (__dsta((char *)v26 + v123, 1, v73))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v71 + 16))(v124, v125, v73);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v71 + 56))(v124, 0, 1, v73);
        }
        v127 = v27[10];
        v128 = (_QWORD *)((char *)v25 + v127);
        v129 = (_QWORD *)((char *)v26 + v127);
        v130 = v129[1];
        *v128 = *v129;
        v128[1] = v130;
        v131 = v27[11];
        v132 = (char *)v25 + v131;
        v133 = (char *)v26 + v131;
        v132[2] = v133[2];
        *(_WORD *)v132 = *(_WORD *)v133;
        v134 = v27[12];
        v135 = (_QWORD *)((char *)v25 + v134);
        v136 = (_QWORD *)((char *)v26 + v134);
        v137 = v136[1];
        *v135 = *v136;
        v135[1] = v137;
        v138 = v27[13];
        v139 = (char *)v25 + v138;
        v140 = (_QWORD *)((char *)v26 + v138);
        v141 = *(_QWORD *)((char *)v26 + v138 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v141 >> 60 == 15)
        {
          *(_OWORD *)v139 = *(_OWORD *)v140;
        }
        else
        {
          v142 = *v140;
          sub_2331D1374(*v140, v141);
          *(_QWORD *)v139 = v142;
          *((_QWORD *)v139 + 1) = v141;
        }
        v143 = v27[14];
        v144 = (char *)v25 + v143;
        v145 = (char *)v26 + v143;
        if (__dsta((char *)v26 + v143, 1, v228))
        {
          v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v71 + 16))(v144, v145, v228);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v71 + 56))(v144, 0, 1, v228);
        }
        v147 = v27[15];
        v148 = (char *)v25 + v147;
        v149 = (char *)v26 + v147;
        v150 = sub_23361D634();
        v151 = *(_QWORD *)(v150 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v149, 1, v150))
        {
          v152 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v148, v149, v150);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
        }
        v153 = v27[16];
        v154 = (char *)v25 + v153;
        v155 = (char *)v26 + v153;
        if (__dsta(v155, 1, v228))
        {
          v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v71 + 16))(v154, v155, v228);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v71 + 56))(v154, 0, 1, v228);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v218 + 56))(v25, 0, 1, v27);
        v23 = v221;
      }
      v157 = *(int *)(v23 + 24);
      v158 = (_QWORD *)(a1 + v157);
      v159 = (uint64_t *)((char *)a2 + v157);
      v160 = (int *)type metadata accessor for MapsMerchant();
      v161 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v160 - 1);
      if (v161[6](v159, 1, v160))
      {
        v162 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
        memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
      }
      else
      {
        __dstc = v161;
        *v158 = *v159;
        *((_DWORD *)v158 + 2) = *((_DWORD *)v159 + 2);
        *((_BYTE *)v158 + 12) = *((_BYTE *)v159 + 12);
        v163 = v159[3];
        v158[2] = v159[2];
        v158[3] = v163;
        v164 = v159[5];
        v158[4] = v159[4];
        v158[5] = v164;
        v165 = v160[8];
        v166 = (char *)v158 + v165;
        v167 = (char *)v159 + v165;
        v168 = sub_23361D340();
        v169 = *(_QWORD *)(v168 - 8);
        v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v170(v167, 1, v168))
        {
          v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v166, v167, v168);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
        }
        v172 = v160[9];
        v173 = (char *)v158 + v172;
        v174 = (char *)v159 + v172;
        v229 = v170;
        if (v170((char *)v159 + v172, 1, v168))
        {
          v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v173, v174, v168);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v173, 0, 1, v168);
        }
        v176 = v160[10];
        v177 = (_QWORD *)((char *)v158 + v176);
        v178 = (_QWORD *)((char *)v159 + v176);
        v179 = v178[1];
        *v177 = *v178;
        v177[1] = v179;
        v180 = v160[11];
        v181 = (char *)v158 + v180;
        v182 = (char *)v159 + v180;
        v181[2] = v182[2];
        *(_WORD *)v181 = *(_WORD *)v182;
        v183 = v160[12];
        v184 = (_QWORD *)((char *)v158 + v183);
        v185 = (_QWORD *)((char *)v159 + v183);
        v186 = v185[1];
        *v184 = *v185;
        v184[1] = v186;
        v187 = v160[13];
        v188 = (char *)v158 + v187;
        v189 = (_QWORD *)((char *)v159 + v187);
        v190 = *(_QWORD *)((char *)v159 + v187 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v190 >> 60 == 15)
        {
          *(_OWORD *)v188 = *(_OWORD *)v189;
        }
        else
        {
          v191 = *v189;
          sub_2331D1374(*v189, v190);
          *(_QWORD *)v188 = v191;
          *((_QWORD *)v188 + 1) = v190;
        }
        v192 = v160[14];
        v193 = (char *)v158 + v192;
        v194 = (char *)v159 + v192;
        if (v229((char *)v159 + v192, 1, v168))
        {
          v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v193, v194, v168);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v193, 0, 1, v168);
        }
        v196 = v160[15];
        v197 = (char *)v158 + v196;
        v198 = (char *)v159 + v196;
        v199 = sub_23361D634();
        v200 = *(_QWORD *)(v199 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
        {
          v201 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
        }
        *((_BYTE *)v158 + v160[16]) = *((_BYTE *)v159 + v160[16]);
        v202 = v160[17];
        v203 = (char *)v158 + v202;
        v204 = (char *)v159 + v202;
        *(_QWORD *)v203 = *(_QWORD *)v204;
        v203[8] = v204[8];
        v205 = v160[18];
        v206 = (char *)v158 + v205;
        v207 = (char *)v159 + v205;
        *(_QWORD *)v206 = *(_QWORD *)v207;
        v206[8] = v207[8];
        v208 = v160[19];
        v209 = *(void **)((char *)v159 + v208);
        *(_QWORD *)((char *)v158 + v208) = v209;
        v210 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstc[7];
        v211 = v209;
        v210(v158, 0, 1, v160);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void _s7InsightOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = *(void **)(a1 + 72);
    }
    else
    {
      if (EnumCaseMultiPayload)
        return;
      v3 = type metadata accessor for MapsInsight(0);
      v4 = a1 + *(int *)(v3 + 20);
      v5 = (int *)type metadata accessor for MapsBrand();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = v4 + v5[8];
        v7 = sub_23361D340();
        v8 = *(_QWORD *)(v7 - 8);
        v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
        if (!v9(v6, 1, v7))
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
        v10 = v4 + v5[9];
        if (!v9(v10, 1, v7))
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = (uint64_t *)(v4 + v5[13]);
        v12 = v11[1];
        if (v12 >> 60 != 15)
          sub_23316BEA4(*v11, v12);
        v13 = v4 + v5[14];
        if (!v9(v13, 1, v7))
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
        v14 = v4 + v5[15];
        v15 = sub_23361D634();
        v16 = *(_QWORD *)(v15 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
        v17 = v4 + v5[16];
        if (!v9(v17, 1, v7))
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v17, v7);
      }
      v18 = a1 + *(int *)(v3 + 24);
      v19 = (int *)type metadata accessor for MapsMerchant();
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v18, 1, v19))
        return;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v18 + v19[8];
      v31 = sub_23361D340();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      if (!v33(v30, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      v34 = v18 + v19[9];
      if (!v33(v34, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = (uint64_t *)(v18 + v19[13]);
      v36 = v35[1];
      if (v36 >> 60 != 15)
        sub_23316BEA4(*v35, v36);
      v37 = v18 + v19[14];
      if (!v33(v37, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v37, v31);
      v38 = v18 + v19[15];
      v39 = sub_23361D634();
      v40 = *(_QWORD *)(v39 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
      v29 = *(void **)(v18 + v19[19]);
    }

    return;
  }
  swift_bridgeObjectRelease();
  v20 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
  v21 = a1 + v20[5];
  v22 = sub_23361D634();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = a1 + v20[16];
  v25 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24 + *(int *)(v25 + 36), v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = a1 + v20[27];
  v27 = sub_23361D340();
  v28 = *(_QWORD *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t _s7InsightOwcp(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, void *);
  void *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  const void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t *v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  int *v157;
  unsigned int (**v158)(_QWORD *, uint64_t, int *);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  unsigned int (*v167)(char *, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t *v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  void *v206;
  void (*v207)(_QWORD *, _QWORD, uint64_t, int *);
  id v208;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned int (*v213)(const void *, uint64_t, uint64_t);
  unsigned int (*v214)(_OWORD *, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  char *v223;
  void *v224;
  void *v225;
  unsigned int (*v226)(char *, uint64_t, uint64_t);
  _OWORD *__dst;
  unsigned int (*__dsta)(char *, uint64_t, void *);
  void *__dstb;
  _QWORD *__dstc;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v11;
    v12 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
    v13 = v12[5];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    v16 = sub_23361D634();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    v211 = v17;
    v212 = v16;
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v27 = v12[6];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (_QWORD *)(a2 + v27);
    v222 = (void *)v29[1];
    *v28 = *v29;
    v28[1] = v222;
    v30 = v12[7];
    v31 = (_QWORD *)(a1 + v30);
    v32 = (_QWORD *)(a2 + v30);
    v220 = v32[1];
    *v31 = *v32;
    v31[1] = v220;
    v33 = v12[8];
    v34 = (_QWORD *)(a1 + v33);
    v35 = (_QWORD *)(a2 + v33);
    v217 = v35[1];
    *v34 = *v35;
    v34[1] = v217;
    v36 = v12[9];
    v37 = a1 + v36;
    v38 = a2 + v36;
    *(_WORD *)v37 = *(_WORD *)v38;
    *(_BYTE *)(v37 + 2) = *(_BYTE *)(v38 + 2);
    v39 = v12[10];
    v40 = (_QWORD *)(a1 + v39);
    v41 = (_QWORD *)(a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = v12[11];
    v44 = (_QWORD *)(a1 + v43);
    v45 = (_QWORD *)(a2 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = v12[12];
    v48 = (_QWORD *)(a1 + v47);
    v49 = (_QWORD *)(a2 + v47);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = v12[13];
    v52 = (_QWORD *)(a1 + v51);
    v53 = (_QWORD *)(a2 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = v12[14];
    v56 = (_QWORD *)(a1 + v55);
    v57 = (_QWORD *)(a2 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    *(_BYTE *)(a1 + v12[15]) = *(_BYTE *)(a2 + v12[15]);
    v59 = v12[16];
    __dst = (_OWORD *)(a1 + v59);
    v60 = (_OWORD *)(a2 + v59);
    v61 = type metadata accessor for ApplePayTransactionInsight.Location(0);
    v210 = *(_QWORD *)(v61 - 8);
    v214 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v210 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v214(v60, 1, v61))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
      memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v72 = v60[1];
      *__dst = *v60;
      __dst[1] = v72;
      *((_QWORD *)__dst + 4) = *((_QWORD *)v60 + 4);
      (*(void (**)(char *, char *, uint64_t))(v211 + 16))((char *)__dst + *(int *)(v61 + 36), (char *)v60 + *(int *)(v61 + 36), v212);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v210 + 56))(__dst, 0, 1, v61);
    }
    v73 = v12[17];
    v74 = (_QWORD *)(a1 + v73);
    v75 = (_QWORD *)(a2 + v73);
    v224 = (void *)v75[1];
    *v74 = *v75;
    v74[1] = v224;
    v76 = v12[18];
    v77 = (_QWORD *)(a1 + v76);
    v78 = (_QWORD *)(a2 + v76);
    v221 = v78[1];
    *v77 = *v78;
    v77[1] = v221;
    v79 = v12[19];
    v80 = (_QWORD *)(a1 + v79);
    v81 = (_QWORD *)(a2 + v79);
    v219 = v81[1];
    *v80 = *v81;
    v80[1] = v219;
    v82 = v12[20];
    v83 = (_QWORD *)(a1 + v82);
    v84 = (_QWORD *)(a2 + v82);
    v216 = v84[1];
    *v83 = *v84;
    v83[1] = v216;
    v85 = v12[21];
    v86 = (_QWORD *)(a1 + v85);
    v87 = (_QWORD *)(a2 + v85);
    v88 = v87[1];
    *v86 = *v87;
    v86[1] = v88;
    v89 = v12[22];
    v90 = (_QWORD *)(a1 + v89);
    v91 = (_QWORD *)(a2 + v89);
    v92 = v91[1];
    *v90 = *v91;
    v90[1] = v92;
    v93 = v12[23];
    v94 = (_QWORD *)(a1 + v93);
    v95 = (_QWORD *)(a2 + v93);
    v96 = v95[1];
    *v94 = *v95;
    v94[1] = v96;
    v97 = v12[24];
    v98 = (_QWORD *)(a1 + v97);
    v99 = (_QWORD *)(a2 + v97);
    v100 = v99[1];
    *v98 = *v99;
    v98[1] = v100;
    v101 = v12[25];
    v102 = a1 + v101;
    v103 = a2 + v101;
    *(_WORD *)v102 = *(_WORD *)v103;
    *(_BYTE *)(v102 + 2) = *(_BYTE *)(v103 + 2);
    v104 = v12[26];
    v105 = a1 + v104;
    v106 = a2 + v104;
    *(_BYTE *)(v105 + 8) = *(_BYTE *)(v106 + 8);
    *(_QWORD *)v105 = *(_QWORD *)v106;
    v107 = v12[27];
    __dstb = (void *)(a1 + v107);
    v108 = (const void *)(a2 + v107);
    v109 = sub_23361D340();
    v110 = *(_QWORD *)(v109 - 8);
    v213 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v110 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v213(v108, 1, v109))
    {
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dstb, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v110 + 16))(__dstb, v108, v109);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(__dstb, 0, 1, v109);
    }
    v112 = v12[28];
    v113 = (_QWORD *)(a1 + v112);
    v114 = (_QWORD *)(a2 + v112);
    v115 = v114[1];
    *v113 = *v114;
    v113[1] = v115;
    v116 = v12[29];
    v117 = (_QWORD *)(a1 + v116);
    v118 = (_QWORD *)(a2 + v116);
    v119 = v118[1];
    *v117 = *v118;
    v117[1] = v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    v9 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v9;
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
    v20 = type metadata accessor for MapsInsight(0);
    v21 = *(int *)(v20 + 20);
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    v24 = (int *)type metadata accessor for MapsBrand();
    v25 = *((_QWORD *)v24 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v215 = v20;
      v218 = v25;
      *v22 = *v23;
      *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
      *((_BYTE *)v22 + 12) = *((_BYTE *)v23 + 12);
      v63 = v23[3];
      v22[2] = v23[2];
      v22[3] = v63;
      v64 = v23[5];
      v22[4] = v23[4];
      v22[5] = v64;
      v65 = v24[8];
      v223 = (char *)v22 + v65;
      v66 = (char *)v23 + v65;
      v67 = sub_23361D340();
      v68 = *(_QWORD *)(v67 - 8);
      v69 = *(unsigned int (**)(char *, uint64_t, void *))(v68 + 48);
      v70 = (void *)v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dsta = v69;
      if (v69(v66, 1, v70))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v223, v66, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v68 + 16))(v223, v66, v70);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v68 + 56))(v223, 0, 1, v70);
      }
      v120 = v24[9];
      v121 = (char *)v22 + v120;
      v122 = (char *)v23 + v120;
      v225 = v70;
      if (__dsta((char *)v23 + v120, 1, v70))
      {
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v68 + 16))(v121, v122, v70);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v68 + 56))(v121, 0, 1, v70);
      }
      v124 = v24[10];
      v125 = (_QWORD *)((char *)v22 + v124);
      v126 = (_QWORD *)((char *)v23 + v124);
      v127 = v126[1];
      *v125 = *v126;
      v125[1] = v127;
      v128 = v24[11];
      v129 = (char *)v22 + v128;
      v130 = (char *)v23 + v128;
      v129[2] = v130[2];
      *(_WORD *)v129 = *(_WORD *)v130;
      v131 = v24[12];
      v132 = (_QWORD *)((char *)v22 + v131);
      v133 = (_QWORD *)((char *)v23 + v131);
      v134 = v133[1];
      *v132 = *v133;
      v132[1] = v134;
      v135 = v24[13];
      v136 = (char *)v22 + v135;
      v137 = (_QWORD *)((char *)v23 + v135);
      v138 = *(_QWORD *)((char *)v23 + v135 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v138 >> 60 == 15)
      {
        *(_OWORD *)v136 = *(_OWORD *)v137;
      }
      else
      {
        v139 = *v137;
        sub_2331D1374(*v137, v138);
        *(_QWORD *)v136 = v139;
        *((_QWORD *)v136 + 1) = v138;
      }
      v140 = v24[14];
      v141 = (char *)v22 + v140;
      v142 = (char *)v23 + v140;
      if (__dsta((char *)v23 + v140, 1, v225))
      {
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v68 + 16))(v141, v142, v225);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v68 + 56))(v141, 0, 1, v225);
      }
      v144 = v24[15];
      v145 = (char *)v22 + v144;
      v146 = (char *)v23 + v144;
      v147 = sub_23361D634();
      v148 = *(_QWORD *)(v147 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
      {
        v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v145, v146, v147);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
      }
      v150 = v24[16];
      v151 = (char *)v22 + v150;
      v152 = (char *)v23 + v150;
      if (__dsta(v152, 1, v225))
      {
        v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v68 + 16))(v151, v152, v225);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v68 + 56))(v151, 0, 1, v225);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v218 + 56))(v22, 0, 1, v24);
      v20 = v215;
    }
    v154 = *(int *)(v20 + 24);
    v155 = (_QWORD *)(a1 + v154);
    v156 = (_QWORD *)(a2 + v154);
    v157 = (int *)type metadata accessor for MapsMerchant();
    v158 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v157 - 1);
    if (v158[6](v156, 1, v157))
    {
      v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
      memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      __dstc = v158;
      *v155 = *v156;
      *((_DWORD *)v155 + 2) = *((_DWORD *)v156 + 2);
      *((_BYTE *)v155 + 12) = *((_BYTE *)v156 + 12);
      v160 = v156[3];
      v155[2] = v156[2];
      v155[3] = v160;
      v161 = v156[5];
      v155[4] = v156[4];
      v155[5] = v161;
      v162 = v157[8];
      v163 = (char *)v155 + v162;
      v164 = (char *)v156 + v162;
      v165 = sub_23361D340();
      v166 = *(_QWORD *)(v165 - 8);
      v167 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v167(v164, 1, v165))
      {
        v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v163, v164, v165);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v163, 0, 1, v165);
      }
      v169 = v157[9];
      v170 = (char *)v155 + v169;
      v171 = (char *)v156 + v169;
      v226 = v167;
      if (v167((char *)v156 + v169, 1, v165))
      {
        v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v170, v171, v165);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v170, 0, 1, v165);
      }
      v173 = v157[10];
      v174 = (_QWORD *)((char *)v155 + v173);
      v175 = (_QWORD *)((char *)v156 + v173);
      v176 = v175[1];
      *v174 = *v175;
      v174[1] = v176;
      v177 = v157[11];
      v178 = (char *)v155 + v177;
      v179 = (char *)v156 + v177;
      v178[2] = v179[2];
      *(_WORD *)v178 = *(_WORD *)v179;
      v180 = v157[12];
      v181 = (_QWORD *)((char *)v155 + v180);
      v182 = (_QWORD *)((char *)v156 + v180);
      v183 = v182[1];
      *v181 = *v182;
      v181[1] = v183;
      v184 = v157[13];
      v185 = (char *)v155 + v184;
      v186 = (_QWORD *)((char *)v156 + v184);
      v187 = *(_QWORD *)((char *)v156 + v184 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v187 >> 60 == 15)
      {
        *(_OWORD *)v185 = *(_OWORD *)v186;
      }
      else
      {
        v188 = *v186;
        sub_2331D1374(*v186, v187);
        *(_QWORD *)v185 = v188;
        *((_QWORD *)v185 + 1) = v187;
      }
      v189 = v157[14];
      v190 = (char *)v155 + v189;
      v191 = (char *)v156 + v189;
      if (v226((char *)v156 + v189, 1, v165))
      {
        v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v190, v191, v165);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v190, 0, 1, v165);
      }
      v193 = v157[15];
      v194 = (char *)v155 + v193;
      v195 = (char *)v156 + v193;
      v196 = sub_23361D634();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
      {
        v198 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v194, v195, v196);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
      }
      *((_BYTE *)v155 + v157[16]) = *((_BYTE *)v156 + v157[16]);
      v199 = v157[17];
      v200 = (char *)v155 + v199;
      v201 = (char *)v156 + v199;
      *(_QWORD *)v200 = *(_QWORD *)v201;
      v200[8] = v201[8];
      v202 = v157[18];
      v203 = (char *)v155 + v202;
      v204 = (char *)v156 + v202;
      *(_QWORD *)v203 = *(_QWORD *)v204;
      v203[8] = v204[8];
      v205 = v157[19];
      v206 = *(void **)((char *)v156 + v205);
      *(_QWORD *)((char *)v155 + v205) = v206;
      v207 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstc[7];
      v208 = v206;
      v207(v155, 0, 1, v157);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s7InsightOwca(uint64_t a1, __int16 *a2)
{
  int EnumCaseMultiPayload;
  __int16 v5;
  void *v6;
  id v7;
  int *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int16 *v35;
  __int16 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, void *);
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  __int16 *v91;
  __int16 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  __int16 v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  char *v123;
  uint64_t *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  int *v144;
  unsigned int (**v145)(_QWORD *, uint64_t, int *);
  uint64_t v146;
  int v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  __int16 v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  char *v170;
  uint64_t *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  void *v193;
  void (*v194)(_QWORD *, _QWORD, uint64_t, int *);
  id v195;
  uint64_t v197;
  uint64_t v198;
  unsigned int (*v199)(char *, uint64_t, uint64_t);
  unsigned int (*v200)(_QWORD *, uint64_t, uint64_t);
  uint64_t v201;
  uint64_t v202;
  char *__dst;
  void *__dsta;
  unsigned int (*__dstb)(char *, uint64_t, uint64_t);
  unsigned int (*v206)(char *, uint64_t, void *);
  void *v207;
  _QWORD *v208;

  if ((__int16 *)a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Transaction.Insight);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v8 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
      v9 = v8[5];
      v10 = (void *)(a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = sub_23361D634();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      v198 = v12;
      if (v14(v11, 1, v12))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v24 = v8[6];
      v25 = (_QWORD *)(a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      *v25 = *v26;
      v25[1] = v26[1];
      v27 = v8[7];
      v28 = (_QWORD *)(a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      *v28 = *v29;
      v28[1] = v29[1];
      v30 = v8[8];
      v31 = (_QWORD *)(a1 + v30);
      v32 = (_QWORD *)((char *)a2 + v30);
      *v31 = *v32;
      v31[1] = v32[1];
      v33 = v8[9];
      v34 = a1 + v33;
      v35 = (__int16 *)((char *)a2 + v33);
      v36 = *v35;
      *(_BYTE *)(v34 + 2) = *((_BYTE *)v35 + 2);
      *(_WORD *)v34 = v36;
      v37 = v8[10];
      v38 = (_QWORD *)(a1 + v37);
      v39 = (_QWORD *)((char *)a2 + v37);
      *v38 = *v39;
      v38[1] = v39[1];
      v40 = v8[11];
      v41 = (_QWORD *)(a1 + v40);
      v42 = (_QWORD *)((char *)a2 + v40);
      *v41 = *v42;
      v41[1] = v42[1];
      v43 = v8[12];
      v44 = (_QWORD *)(a1 + v43);
      v45 = (_QWORD *)((char *)a2 + v43);
      *v44 = *v45;
      v44[1] = v45[1];
      v46 = v8[13];
      v47 = (_QWORD *)(a1 + v46);
      v48 = (_QWORD *)((char *)a2 + v46);
      *v47 = *v48;
      v47[1] = v48[1];
      v49 = v8[14];
      v50 = (_QWORD *)(a1 + v49);
      v51 = (_QWORD *)((char *)a2 + v49);
      *v50 = *v51;
      v50[1] = v51[1];
      *(_BYTE *)(a1 + v8[15]) = *((_BYTE *)a2 + v8[15]);
      v52 = v8[16];
      v53 = (_QWORD *)(a1 + v52);
      v54 = (_QWORD *)((char *)a2 + v52);
      v55 = type metadata accessor for ApplePayTransactionInsight.Location(0);
      v197 = *(_QWORD *)(v55 - 8);
      v200 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v197 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v200(v54, 1, v55))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        *v53 = *v54;
        v53[1] = v54[1];
        v53[2] = v54[2];
        v53[3] = v54[3];
        v53[4] = v54[4];
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))((char *)v53 + *(int *)(v55 + 36), (char *)v54 + *(int *)(v55 + 36), v198);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v53, 0, 1, v55);
      }
      v65 = v8[17];
      v66 = (_QWORD *)(a1 + v65);
      v67 = (_QWORD *)((char *)a2 + v65);
      *v66 = *v67;
      v66[1] = v67[1];
      v68 = v8[18];
      v69 = (_QWORD *)(a1 + v68);
      v70 = (_QWORD *)((char *)a2 + v68);
      *v69 = *v70;
      v69[1] = v70[1];
      v71 = v8[19];
      v72 = (_QWORD *)(a1 + v71);
      v73 = (_QWORD *)((char *)a2 + v71);
      *v72 = *v73;
      v72[1] = v73[1];
      v74 = v8[20];
      v75 = (_QWORD *)(a1 + v74);
      v76 = (_QWORD *)((char *)a2 + v74);
      *v75 = *v76;
      v75[1] = v76[1];
      v77 = v8[21];
      v78 = (_QWORD *)(a1 + v77);
      v79 = (_QWORD *)((char *)a2 + v77);
      *v78 = *v79;
      v78[1] = v79[1];
      v80 = v8[22];
      v81 = (_QWORD *)(a1 + v80);
      v82 = (_QWORD *)((char *)a2 + v80);
      *v81 = *v82;
      v81[1] = v82[1];
      v83 = v8[23];
      v84 = (_QWORD *)(a1 + v83);
      v85 = (_QWORD *)((char *)a2 + v83);
      *v84 = *v85;
      v84[1] = v85[1];
      v86 = v8[24];
      v87 = (_QWORD *)(a1 + v86);
      v88 = (_QWORD *)((char *)a2 + v86);
      *v87 = *v88;
      v87[1] = v88[1];
      v89 = v8[25];
      v90 = a1 + v89;
      v91 = (__int16 *)((char *)a2 + v89);
      v92 = *v91;
      *(_BYTE *)(v90 + 2) = *((_BYTE *)v91 + 2);
      *(_WORD *)v90 = v92;
      v93 = v8[26];
      v94 = a1 + v93;
      v95 = (uint64_t *)((char *)a2 + v93);
      v96 = *v95;
      *(_BYTE *)(v94 + 8) = *((_BYTE *)v95 + 8);
      *(_QWORD *)v94 = v96;
      v97 = v8[27];
      v207 = (void *)(a1 + v97);
      v98 = (char *)a2 + v97;
      v99 = sub_23361D340();
      v100 = *(_QWORD *)(v99 - 8);
      v199 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v199(v98, 1, v99))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v207, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v100 + 16))(v207, v98, v99);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v207, 0, 1, v99);
      }
      v102 = v8[28];
      v103 = (_QWORD *)(a1 + v102);
      v104 = (_QWORD *)((char *)a2 + v102);
      *v103 = *v104;
      v103[1] = v104[1];
      v105 = v8[29];
      v106 = (_QWORD *)(a1 + v105);
      v107 = (_QWORD *)((char *)a2 + v105);
      *v106 = *v107;
      v106[1] = v107[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = *a2;
      *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
      *(_WORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      v6 = (void *)*((_QWORD *)a2 + 9);
      *(_QWORD *)(a1 + 72) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = v6;
    }
    else
    {
      v16 = *a2;
      *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
      *(_WORD *)a1 = v16;
      v17 = type metadata accessor for MapsInsight(0);
      v18 = *(int *)(v17 + 20);
      v19 = (_QWORD *)(a1 + v18);
      v20 = (_QWORD *)((char *)a2 + v18);
      v21 = (int *)type metadata accessor for MapsBrand();
      v22 = *((_QWORD *)v21 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v201 = v22;
        v202 = v17;
        *v19 = *v20;
        v57 = *((_DWORD *)v20 + 2);
        *((_BYTE *)v19 + 12) = *((_BYTE *)v20 + 12);
        *((_DWORD *)v19 + 2) = v57;
        v19[2] = v20[2];
        v19[3] = v20[3];
        v19[4] = v20[4];
        v19[5] = v20[5];
        v58 = v21[8];
        __dst = (char *)v19 + v58;
        v59 = (char *)v20 + v58;
        v60 = sub_23361D340();
        v61 = *(_QWORD *)(v60 - 8);
        v62 = *(unsigned int (**)(char *, uint64_t, void *))(v61 + 48);
        v63 = (void *)v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v206 = v62;
        if (v62(v59, 1, v63))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v61 + 16))(__dst, v59, v63);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v61 + 56))(__dst, 0, 1, v63);
        }
        v108 = v21[9];
        v109 = (char *)v19 + v108;
        v110 = (char *)v20 + v108;
        __dsta = v63;
        if (v206((char *)v20 + v108, 1, v63))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v61 + 16))(v109, v110, v63);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v61 + 56))(v109, 0, 1, v63);
        }
        v112 = v21[10];
        v113 = (_QWORD *)((char *)v19 + v112);
        v114 = (_QWORD *)((char *)v20 + v112);
        *v113 = *v114;
        v113[1] = v114[1];
        v115 = v21[11];
        v116 = (char *)v19 + v115;
        v117 = (char *)v20 + v115;
        v118 = *(_WORD *)v117;
        v116[2] = v117[2];
        *(_WORD *)v116 = v118;
        v119 = v21[12];
        v120 = (_QWORD *)((char *)v19 + v119);
        v121 = (_QWORD *)((char *)v20 + v119);
        *v120 = *v121;
        v120[1] = v121[1];
        v122 = v21[13];
        v123 = (char *)v19 + v122;
        v124 = (_QWORD *)((char *)v20 + v122);
        v125 = *(_QWORD *)((char *)v20 + v122 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v125 >> 60 == 15)
        {
          *(_OWORD *)v123 = *(_OWORD *)v124;
        }
        else
        {
          v126 = *v124;
          sub_2331D1374(*v124, v125);
          *(_QWORD *)v123 = v126;
          *((_QWORD *)v123 + 1) = v125;
        }
        v127 = v21[14];
        v128 = (char *)v19 + v127;
        v129 = (char *)v20 + v127;
        if (v206((char *)v20 + v127, 1, __dsta))
        {
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v61 + 16))(v128, v129, __dsta);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v61 + 56))(v128, 0, 1, __dsta);
        }
        v131 = v21[15];
        v132 = (char *)v19 + v131;
        v133 = (char *)v20 + v131;
        v134 = sub_23361D634();
        v135 = *(_QWORD *)(v134 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134))
        {
          v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v132, v133, v134);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
        }
        v137 = v21[16];
        v138 = (char *)v19 + v137;
        v139 = (char *)v20 + v137;
        if (v206(v139, 1, __dsta))
        {
          v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v61 + 16))(v138, v139, __dsta);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v61 + 56))(v138, 0, 1, __dsta);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v201 + 56))(v19, 0, 1, v21);
        v17 = v202;
      }
      v141 = *(int *)(v17 + 24);
      v142 = (_QWORD *)(a1 + v141);
      v143 = (_QWORD *)((char *)a2 + v141);
      v144 = (int *)type metadata accessor for MapsMerchant();
      v145 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v144 - 1);
      if (v145[6](v143, 1, v144))
      {
        v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
        memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        v208 = v145;
        *v142 = *v143;
        v147 = *((_DWORD *)v143 + 2);
        *((_BYTE *)v142 + 12) = *((_BYTE *)v143 + 12);
        *((_DWORD *)v142 + 2) = v147;
        v142[2] = v143[2];
        v142[3] = v143[3];
        v142[4] = v143[4];
        v142[5] = v143[5];
        v148 = v144[8];
        v149 = (char *)v142 + v148;
        v150 = (char *)v143 + v148;
        v151 = sub_23361D340();
        v152 = *(_QWORD *)(v151 - 8);
        v153 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v153(v150, 1, v151))
        {
          v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v149, v150, v151);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
        }
        v155 = v144[9];
        v156 = (char *)v142 + v155;
        v157 = (char *)v143 + v155;
        __dstb = v153;
        if (v153((char *)v143 + v155, 1, v151))
        {
          v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v156, v157, v151);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v156, 0, 1, v151);
        }
        v159 = v144[10];
        v160 = (_QWORD *)((char *)v142 + v159);
        v161 = (_QWORD *)((char *)v143 + v159);
        *v160 = *v161;
        v160[1] = v161[1];
        v162 = v144[11];
        v163 = (char *)v142 + v162;
        v164 = (char *)v143 + v162;
        v165 = *(_WORD *)v164;
        v163[2] = v164[2];
        *(_WORD *)v163 = v165;
        v166 = v144[12];
        v167 = (_QWORD *)((char *)v142 + v166);
        v168 = (_QWORD *)((char *)v143 + v166);
        *v167 = *v168;
        v167[1] = v168[1];
        v169 = v144[13];
        v170 = (char *)v142 + v169;
        v171 = (_QWORD *)((char *)v143 + v169);
        v172 = *(_QWORD *)((char *)v143 + v169 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v172 >> 60 == 15)
        {
          *(_OWORD *)v170 = *(_OWORD *)v171;
        }
        else
        {
          v173 = *v171;
          sub_2331D1374(*v171, v172);
          *(_QWORD *)v170 = v173;
          *((_QWORD *)v170 + 1) = v172;
        }
        v174 = v144[14];
        v175 = (char *)v142 + v174;
        v176 = (char *)v143 + v174;
        if (__dstb((char *)v143 + v174, 1, v151))
        {
          v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v175, v176, v151);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v175, 0, 1, v151);
        }
        v178 = v144[15];
        v179 = (char *)v142 + v178;
        v180 = (char *)v143 + v178;
        v181 = sub_23361D634();
        v182 = *(_QWORD *)(v181 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v180, 1, v181))
        {
          v183 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
        }
        *((_BYTE *)v142 + v144[16]) = *((_BYTE *)v143 + v144[16]);
        v184 = v144[17];
        v185 = (char *)v142 + v184;
        v186 = (char *)v143 + v184;
        v187 = *(_QWORD *)v186;
        v185[8] = v186[8];
        *(_QWORD *)v185 = v187;
        v188 = v144[18];
        v189 = (char *)v142 + v188;
        v190 = (char *)v143 + v188;
        v191 = *(_QWORD *)v190;
        v189[8] = v190[8];
        *(_QWORD *)v189 = v191;
        v192 = v144[19];
        v193 = *(void **)((char *)v143 + v192);
        *(_QWORD *)((char *)v142 + v192) = v193;
        v194 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))v208[7];
        v195 = v193;
        v194(v142, 0, 1, v144);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *_s7InsightOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *__dst;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v14 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
    v15 = v14[5];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = sub_23361D634();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_OWORD *)&a1[v14[6]] = *(_OWORD *)&a2[v14[6]];
    *(_OWORD *)&a1[v14[7]] = *(_OWORD *)&a2[v14[7]];
    *(_OWORD *)&a1[v14[8]] = *(_OWORD *)&a2[v14[8]];
    v27 = v14[9];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v28[2] = v29[2];
    *(_WORD *)v28 = *(_WORD *)v29;
    *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
    *(_OWORD *)&a1[v14[11]] = *(_OWORD *)&a2[v14[11]];
    *(_OWORD *)&a1[v14[12]] = *(_OWORD *)&a2[v14[12]];
    *(_OWORD *)&a1[v14[13]] = *(_OWORD *)&a2[v14[13]];
    *(_OWORD *)&a1[v14[14]] = *(_OWORD *)&a2[v14[14]];
    a1[v14[15]] = a2[v14[15]];
    v30 = v14[16];
    v31 = &a1[v30];
    v32 = &a2[v30];
    v33 = type metadata accessor for ApplePayTransactionInsight.Location(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v36 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v36;
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[*(int *)(v33 + 36)], &v32[*(int *)(v33 + 36)], v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    *(_OWORD *)&a1[v14[17]] = *(_OWORD *)&a2[v14[17]];
    *(_OWORD *)&a1[v14[18]] = *(_OWORD *)&a2[v14[18]];
    *(_OWORD *)&a1[v14[19]] = *(_OWORD *)&a2[v14[19]];
    *(_OWORD *)&a1[v14[20]] = *(_OWORD *)&a2[v14[20]];
    *(_OWORD *)&a1[v14[21]] = *(_OWORD *)&a2[v14[21]];
    *(_OWORD *)&a1[v14[22]] = *(_OWORD *)&a2[v14[22]];
    *(_OWORD *)&a1[v14[23]] = *(_OWORD *)&a2[v14[23]];
    *(_OWORD *)&a1[v14[24]] = *(_OWORD *)&a2[v14[24]];
    v37 = v14[25];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v38[2] = v39[2];
    *(_WORD *)v38 = *(_WORD *)v39;
    v40 = v14[26];
    v41 = &a1[v40];
    v42 = &a2[v40];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    v43 = v14[27];
    v44 = &a1[v43];
    v45 = &a2[v43];
    v46 = sub_23361D340();
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    *(_OWORD *)&a1[v14[28]] = *(_OWORD *)&a2[v14[28]];
    *(_OWORD *)&a1[v14[29]] = *(_OWORD *)&a2[v14[29]];
LABEL_47:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    a1[2] = a2[2];
    v7 = type metadata accessor for MapsInsight(0);
    v8 = *(int *)(v7 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = (int *)type metadata accessor for MapsBrand();
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v110 = v12;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
      v9[12] = v10[12];
      v21 = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_OWORD *)v9 + 2) = v21;
      v22 = v11[8];
      __dst = &v9[v22];
      v23 = &v10[v22];
      v24 = sub_23361D340();
      v25 = *(_QWORD *)(v24 - 8);
      v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v111 = v7;
      if (v112(v23, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(__dst, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v49 = v11[9];
      v50 = &v9[v49];
      v51 = &v10[v49];
      if (v112(&v10[v49], 1, v24))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v50, v51, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v50, 0, 1, v24);
      }
      *(_OWORD *)&v9[v11[10]] = *(_OWORD *)&v10[v11[10]];
      v53 = v11[11];
      v54 = &v9[v53];
      v55 = &v10[v53];
      v54[2] = v55[2];
      *(_WORD *)v54 = *(_WORD *)v55;
      *(_OWORD *)&v9[v11[12]] = *(_OWORD *)&v10[v11[12]];
      *(_OWORD *)&v9[v11[13]] = *(_OWORD *)&v10[v11[13]];
      v56 = v11[14];
      v57 = &v9[v56];
      v58 = &v10[v56];
      v109 = v25;
      if (v112(&v10[v56], 1, v24))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v58, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v57, 0, 1, v24);
      }
      v60 = v11[15];
      v61 = &v9[v60];
      v62 = &v10[v60];
      v63 = sub_23361D634();
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      v66 = v11[16];
      v67 = &v9[v66];
      v68 = &v10[v66];
      if (v112(&v10[v66], 1, v24))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v67, v68, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v67, 0, 1, v24);
      }
      v7 = v111;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v110 + 56))(v9, 0, 1, v11);
    }
    v70 = *(int *)(v7 + 24);
    v71 = &a1[v70];
    v72 = &a2[v70];
    v73 = (int *)type metadata accessor for MapsMerchant();
    v74 = *((_QWORD *)v73 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
    {
      v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v113 = v74;
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_DWORD *)v71 + 2) = *((_DWORD *)v72 + 2);
      v71[12] = v72[12];
      v76 = *((_OWORD *)v72 + 2);
      *((_OWORD *)v71 + 1) = *((_OWORD *)v72 + 1);
      *((_OWORD *)v71 + 2) = v76;
      v77 = v73[8];
      v78 = &v71[v77];
      v79 = &v72[v77];
      v80 = sub_23361D340();
      v81 = *(_QWORD *)(v80 - 8);
      v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
      if (v82(v79, 1, v80))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v78, v79, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
      }
      v84 = v73[9];
      v85 = &v71[v84];
      v86 = &v72[v84];
      if (v82(&v72[v84], 1, v80))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v85, v86, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v85, 0, 1, v80);
      }
      *(_OWORD *)&v71[v73[10]] = *(_OWORD *)&v72[v73[10]];
      v88 = v73[11];
      v89 = &v71[v88];
      v90 = &v72[v88];
      v89[2] = v90[2];
      *(_WORD *)v89 = *(_WORD *)v90;
      *(_OWORD *)&v71[v73[12]] = *(_OWORD *)&v72[v73[12]];
      *(_OWORD *)&v71[v73[13]] = *(_OWORD *)&v72[v73[13]];
      v91 = v73[14];
      v92 = &v71[v91];
      v93 = &v72[v91];
      if (v82(&v72[v91], 1, v80))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v92, v93, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v92, 0, 1, v80);
      }
      v95 = v73[15];
      v96 = &v71[v95];
      v97 = &v72[v95];
      v98 = sub_23361D634();
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v96, v97, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      v71[v73[16]] = v72[v73[16]];
      v101 = v73[17];
      v102 = &v71[v101];
      v103 = &v72[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      v102[8] = v103[8];
      v104 = v73[18];
      v105 = &v71[v104];
      v106 = &v72[v104];
      *(_QWORD *)v105 = *(_QWORD *)v106;
      v105[8] = v106[8];
      *(_QWORD *)&v71[v73[19]] = *(_QWORD *)&v72[v73[19]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v113 + 56))(v71, 0, 1, v73);
    }
    goto LABEL_47;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *_s7InsightOwta(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *__dst;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, type metadata accessor for Transaction.Insight);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v14 = (int *)type metadata accessor for ApplePayTransactionInsight(0);
      v15 = v14[5];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = sub_23361D634();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(_OWORD *)&a1[v14[6]] = *(_OWORD *)&a2[v14[6]];
      *(_OWORD *)&a1[v14[7]] = *(_OWORD *)&a2[v14[7]];
      *(_OWORD *)&a1[v14[8]] = *(_OWORD *)&a2[v14[8]];
      v27 = v14[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v28[2] = v29[2];
      *(_WORD *)v28 = *(_WORD *)v29;
      *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
      *(_OWORD *)&a1[v14[11]] = *(_OWORD *)&a2[v14[11]];
      *(_OWORD *)&a1[v14[12]] = *(_OWORD *)&a2[v14[12]];
      *(_OWORD *)&a1[v14[13]] = *(_OWORD *)&a2[v14[13]];
      *(_OWORD *)&a1[v14[14]] = *(_OWORD *)&a2[v14[14]];
      a1[v14[15]] = a2[v14[15]];
      v30 = v14[16];
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = type metadata accessor for ApplePayTransactionInsight.Location(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v36 = *((_OWORD *)v32 + 1);
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v36;
        *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[*(int *)(v33 + 36)], &v32[*(int *)(v33 + 36)], v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      *(_OWORD *)&a1[v14[17]] = *(_OWORD *)&a2[v14[17]];
      *(_OWORD *)&a1[v14[18]] = *(_OWORD *)&a2[v14[18]];
      *(_OWORD *)&a1[v14[19]] = *(_OWORD *)&a2[v14[19]];
      *(_OWORD *)&a1[v14[20]] = *(_OWORD *)&a2[v14[20]];
      *(_OWORD *)&a1[v14[21]] = *(_OWORD *)&a2[v14[21]];
      *(_OWORD *)&a1[v14[22]] = *(_OWORD *)&a2[v14[22]];
      *(_OWORD *)&a1[v14[23]] = *(_OWORD *)&a2[v14[23]];
      *(_OWORD *)&a1[v14[24]] = *(_OWORD *)&a2[v14[24]];
      v37 = v14[25];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v38[2] = v39[2];
      *(_WORD *)v38 = *(_WORD *)v39;
      v40 = v14[26];
      v41 = &a1[v40];
      v42 = &a2[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v43 = v14[27];
      v44 = &a1[v43];
      v45 = &a2[v43];
      v46 = sub_23361D340();
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      *(_OWORD *)&a1[v14[28]] = *(_OWORD *)&a2[v14[28]];
      *(_OWORD *)&a1[v14[29]] = *(_OWORD *)&a2[v14[29]];
LABEL_48:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      a1[2] = a2[2];
      v7 = type metadata accessor for MapsInsight(0);
      v8 = *(int *)(v7 + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = (int *)type metadata accessor for MapsBrand();
      v12 = *((_QWORD *)v11 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v110 = v12;
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
        v9[12] = v10[12];
        v21 = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        *((_OWORD *)v9 + 2) = v21;
        v22 = v11[8];
        __dst = &v9[v22];
        v23 = &v10[v22];
        v24 = sub_23361D340();
        v25 = *(_QWORD *)(v24 - 8);
        v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        v111 = v7;
        if (v112(v23, 1, v24))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(__dst, v23, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        v49 = v11[9];
        v50 = &v9[v49];
        v51 = &v10[v49];
        if (v112(&v10[v49], 1, v24))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v50, v51, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v50, 0, 1, v24);
        }
        *(_OWORD *)&v9[v11[10]] = *(_OWORD *)&v10[v11[10]];
        v53 = v11[11];
        v54 = &v9[v53];
        v55 = &v10[v53];
        v54[2] = v55[2];
        *(_WORD *)v54 = *(_WORD *)v55;
        *(_OWORD *)&v9[v11[12]] = *(_OWORD *)&v10[v11[12]];
        *(_OWORD *)&v9[v11[13]] = *(_OWORD *)&v10[v11[13]];
        v56 = v11[14];
        v57 = &v9[v56];
        v58 = &v10[v56];
        v109 = v25;
        if (v112(&v10[v56], 1, v24))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v58, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v57, 0, 1, v24);
        }
        v60 = v11[15];
        v61 = &v9[v60];
        v62 = &v10[v60];
        v63 = sub_23361D634();
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v66 = v11[16];
        v67 = &v9[v66];
        v68 = &v10[v66];
        if (v112(&v10[v66], 1, v24))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v67, v68, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v67, 0, 1, v24);
        }
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v110 + 56))(v9, 0, 1, v11);
        v7 = v111;
      }
      v70 = *(int *)(v7 + 24);
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = (int *)type metadata accessor for MapsMerchant();
      v74 = *((_QWORD *)v73 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        v113 = v74;
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_DWORD *)v71 + 2) = *((_DWORD *)v72 + 2);
        v71[12] = v72[12];
        v76 = *((_OWORD *)v72 + 2);
        *((_OWORD *)v71 + 1) = *((_OWORD *)v72 + 1);
        *((_OWORD *)v71 + 2) = v76;
        v77 = v73[8];
        v78 = &v71[v77];
        v79 = &v72[v77];
        v80 = sub_23361D340();
        v81 = *(_QWORD *)(v80 - 8);
        v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
        if (v82(v79, 1, v80))
        {
          v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v78, v79, v80);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        }
        v84 = v73[9];
        v85 = &v71[v84];
        v86 = &v72[v84];
        if (v82(&v72[v84], 1, v80))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v85, v86, v80);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v85, 0, 1, v80);
        }
        *(_OWORD *)&v71[v73[10]] = *(_OWORD *)&v72[v73[10]];
        v88 = v73[11];
        v89 = &v71[v88];
        v90 = &v72[v88];
        v89[2] = v90[2];
        *(_WORD *)v89 = *(_WORD *)v90;
        *(_OWORD *)&v71[v73[12]] = *(_OWORD *)&v72[v73[12]];
        *(_OWORD *)&v71[v73[13]] = *(_OWORD *)&v72[v73[13]];
        v91 = v73[14];
        v92 = &v71[v91];
        v93 = &v72[v91];
        if (v82(&v72[v91], 1, v80))
        {
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v92, v93, v80);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v92, 0, 1, v80);
        }
        v95 = v73[15];
        v96 = &v71[v95];
        v97 = &v72[v95];
        v98 = sub_23361D634();
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v96, v97, v98);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        v71[v73[16]] = v72[v73[16]];
        v101 = v73[17];
        v102 = &v71[v101];
        v103 = &v72[v101];
        *(_QWORD *)v102 = *(_QWORD *)v103;
        v102[8] = v103[8];
        v104 = v73[18];
        v105 = &v71[v104];
        v106 = &v72[v104];
        *(_QWORD *)v105 = *(_QWORD *)v106;
        v105[8] = v106[8];
        *(_QWORD *)&v71[v73[19]] = *(_QWORD *)&v72[v73[19]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v113 + 56))(v71, 0, 1, v73);
      }
      goto LABEL_48;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_233575424()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for MapsInsight(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ApplePayTransactionInsight(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2335754AC()
{
  return type metadata accessor for Transaction.Insight.XPC(0);
}

uint64_t sub_2335754B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Transaction.Insight(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Transaction.Insight.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Transaction.Insight.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *initializeBufferWithCopyOfBuffer for MapsInsight(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, void *);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  void (*v111)(_QWORD *, _QWORD, uint64_t, int *);
  id v112;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  char *__dst;
  void *__dsta;
  unsigned int (*__dstb)(char *, uint64_t, uint64_t);
  unsigned int (*v120)(char *, uint64_t, void *);
  uint64_t v121;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = (int *)type metadata accessor for MapsBrand();
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v115 = v11;
      v116 = v4;
      *v8 = *v9;
      *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
      *((_BYTE *)v8 + 12) = *((_BYTE *)v9 + 12);
      v14 = v9[3];
      v8[2] = v9[2];
      v8[3] = v14;
      v15 = v9[5];
      v8[4] = v9[4];
      v8[5] = v15;
      v16 = v10[8];
      __dst = (char *)v8 + v16;
      v17 = (char *)v9 + v16;
      v18 = sub_23361D340();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, void *))(v19 + 48);
      v21 = (void *)v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v120 = v20;
      if (v20(v17, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v19 + 16))(__dst, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v19 + 56))(__dst, 0, 1, v21);
      }
      v23 = v19;
      v24 = v10[9];
      v25 = (char *)v8 + v24;
      v26 = (char *)v9 + v24;
      __dsta = v21;
      v114 = v23;
      v4 = v116;
      if (v120((char *)v9 + v24, 1, v21))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v23 + 16))(v25, v26, v21);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v23 + 56))(v25, 0, 1, v21);
      }
      v28 = v10[10];
      v29 = (_QWORD *)((char *)v8 + v28);
      v30 = (_QWORD *)((char *)v9 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      v32 = v10[11];
      v33 = (char *)v8 + v32;
      v34 = (char *)v9 + v32;
      v33[2] = v34[2];
      *(_WORD *)v33 = *(_WORD *)v34;
      v35 = v10[12];
      v36 = (_QWORD *)((char *)v8 + v35);
      v37 = (_QWORD *)((char *)v9 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v39 = v10[13];
      v40 = (char *)v8 + v39;
      v41 = (_QWORD *)((char *)v9 + v39);
      v42 = *(_QWORD *)((char *)v9 + v39 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42 >> 60 == 15)
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
      }
      else
      {
        v43 = *v41;
        sub_2331D1374(*v41, v42);
        *(_QWORD *)v40 = v43;
        *((_QWORD *)v40 + 1) = v42;
      }
      v44 = v10[14];
      v45 = (char *)v8 + v44;
      v46 = (char *)v9 + v44;
      if (v120((char *)v9 + v44, 1, __dsta))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v114 + 16))(v45, v46, __dsta);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v114 + 56))(v45, 0, 1, __dsta);
      }
      v48 = v10[15];
      v49 = (char *)v8 + v48;
      v50 = (char *)v9 + v48;
      v51 = sub_23361D634();
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v54 = v10[16];
      v55 = (char *)v8 + v54;
      v56 = (char *)v9 + v54;
      if (v120(v56, 1, __dsta))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v114 + 16))(v55, v56, __dsta);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v114 + 56))(v55, 0, 1, __dsta);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v115 + 56))(v8, 0, 1, v10);
    }
    v58 = *(int *)(a3 + 24);
    v59 = (_QWORD *)((char *)v4 + v58);
    v60 = (uint64_t *)((char *)a2 + v58);
    v61 = (int *)type metadata accessor for MapsMerchant();
    v62 = *((_QWORD *)v61 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v62 + 48))(v60, 1, v61))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      v121 = v62;
      *v59 = *v60;
      *((_DWORD *)v59 + 2) = *((_DWORD *)v60 + 2);
      *((_BYTE *)v59 + 12) = *((_BYTE *)v60 + 12);
      v64 = v60[3];
      v59[2] = v60[2];
      v59[3] = v64;
      v65 = v60[5];
      v59[4] = v60[4];
      v59[5] = v65;
      v66 = v61[8];
      v67 = (char *)v59 + v66;
      v68 = (char *)v60 + v66;
      v69 = sub_23361D340();
      v70 = *(_QWORD *)(v69 - 8);
      v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71(v68, 1, v69))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v73 = v61[9];
      v74 = (char *)v59 + v73;
      v75 = (char *)v60 + v73;
      __dstb = v71;
      if (v71((char *)v60 + v73, 1, v69))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v74, v75, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v74, 0, 1, v69);
      }
      v77 = v61[10];
      v78 = (_QWORD *)((char *)v59 + v77);
      v79 = (_QWORD *)((char *)v60 + v77);
      v80 = v79[1];
      *v78 = *v79;
      v78[1] = v80;
      v81 = v61[11];
      v82 = (char *)v59 + v81;
      v83 = (char *)v60 + v81;
      v82[2] = v83[2];
      *(_WORD *)v82 = *(_WORD *)v83;
      v84 = v61[12];
      v85 = (_QWORD *)((char *)v59 + v84);
      v86 = (_QWORD *)((char *)v60 + v84);
      v87 = v86[1];
      *v85 = *v86;
      v85[1] = v87;
      v88 = v61[13];
      v89 = (char *)v59 + v88;
      v90 = (_QWORD *)((char *)v60 + v88);
      v91 = *(_QWORD *)((char *)v60 + v88 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v91 >> 60 == 15)
      {
        *(_OWORD *)v89 = *(_OWORD *)v90;
      }
      else
      {
        v92 = *v90;
        sub_2331D1374(*v90, v91);
        *(_QWORD *)v89 = v92;
        *((_QWORD *)v89 + 1) = v91;
      }
      v93 = v61[14];
      v94 = (char *)v59 + v93;
      v95 = (char *)v60 + v93;
      if (__dstb((char *)v60 + v93, 1, v69))
      {
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v94, v95, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v94, 0, 1, v69);
      }
      v97 = v61[15];
      v98 = (char *)v59 + v97;
      v99 = (char *)v60 + v97;
      v100 = sub_23361D634();
      v101 = *(_QWORD *)(v100 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
      {
        v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v98, v99, v100);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
      }
      *((_BYTE *)v59 + v61[16]) = *((_BYTE *)v60 + v61[16]);
      v103 = v61[17];
      v104 = (char *)v59 + v103;
      v105 = (char *)v60 + v103;
      *(_QWORD *)v104 = *(_QWORD *)v105;
      v104[8] = v105[8];
      v106 = v61[18];
      v107 = (char *)v59 + v106;
      v108 = (char *)v60 + v106;
      *(_QWORD *)v107 = *(_QWORD *)v108;
      v107[8] = v108[8];
      v109 = v61[19];
      v110 = *(void **)((char *)v60 + v109);
      *(_QWORD *)((char *)v59 + v109) = v110;
      v111 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v121 + 56);
      v112 = v110;
      v111(v59, 0, 1, v61);
    }
  }
  return v4;
}

void destroy for MapsInsight(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for MapsBrand();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + v5[8];
    v7 = sub_23361D340();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v10 = v4 + v5[9];
    if (!v9(v10, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = (uint64_t *)(v4 + v5[13]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_23316BEA4(*v11, v12);
    v13 = v4 + v5[14];
    if (!v9(v13, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    v14 = v4 + v5[15];
    v15 = sub_23361D634();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v4 + v5[16];
    if (!v9(v17, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v17, v7);
  }
  v18 = a1 + *(int *)(a2 + 24);
  v19 = (int *)type metadata accessor for MapsMerchant();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v18, 1, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v18 + v19[8];
    v21 = sub_23361D340();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (!v23(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v24 = v18 + v19[9];
    if (!v23(v24, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)(v18 + v19[13]);
    v26 = v25[1];
    if (v26 >> 60 != 15)
      sub_23316BEA4(*v25, v26);
    v27 = v18 + v19[14];
    if (!v23(v27, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v27, v21);
    v28 = v18 + v19[15];
    v29 = sub_23361D634();
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);

  }
}

uint64_t initializeWithCopy for MapsInsight(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  void (*v108)(_QWORD *, _QWORD, uint64_t, int *);
  id v109;
  uint64_t v111;
  char *__dst;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for MapsBrand();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v111 = v3;
    v116 = v5;
    *v7 = *v8;
    *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    v13 = v8[5];
    v7[4] = v8[4];
    v7[5] = v13;
    v14 = v9[8];
    __dst = (char *)v7 + v14;
    v113 = v4;
    v15 = (char *)v8 + v14;
    v16 = sub_23361D340();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v118 = v18;
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v20 = v17;
    v21 = v9[9];
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v4 = v113;
    v115 = v10;
    if (v118((char *)v8 + v21, 1, v16))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v23, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v16);
    }
    v25 = v9[10];
    v26 = (_QWORD *)((char *)v7 + v25);
    v27 = (_QWORD *)((char *)v8 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v9[11];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v30[2] = v31[2];
    *(_WORD *)v30 = *(_WORD *)v31;
    v32 = v9[12];
    v33 = (_QWORD *)((char *)v7 + v32);
    v34 = (_QWORD *)((char *)v8 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v9[13];
    v37 = (char *)v7 + v36;
    v38 = (_QWORD *)((char *)v8 + v36);
    v39 = *(_QWORD *)((char *)v8 + v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)v37 = *(_OWORD *)v38;
    }
    else
    {
      v40 = *v38;
      sub_2331D1374(*v38, v39);
      *(_QWORD *)v37 = v40;
      *((_QWORD *)v37 + 1) = v39;
    }
    v3 = v111;
    v41 = v9[14];
    v42 = (char *)v7 + v41;
    v43 = (char *)v8 + v41;
    v114 = v20;
    if (v118((char *)v8 + v41, 1, v16))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v42, v43, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v42, 0, 1, v16);
    }
    v45 = v9[15];
    v46 = (char *)v7 + v45;
    v47 = (char *)v8 + v45;
    v48 = sub_23361D634();
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v51 = v9[16];
    v52 = (char *)v7 + v51;
    v53 = (char *)v8 + v51;
    if (v118(v53, 1, v16))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v52, v53, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v52, 0, 1, v16);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v115 + 56))(v7, 0, 1, v9);
    v5 = v116;
  }
  v55 = *(int *)(v3 + 24);
  v56 = (_QWORD *)(v5 + v55);
  v57 = (_QWORD *)(v4 + v55);
  v58 = (int *)type metadata accessor for MapsMerchant();
  v59 = *((_QWORD *)v58 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v59 + 48))(v57, 1, v58))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v117 = v5;
    v119 = v59;
    *v56 = *v57;
    *((_DWORD *)v56 + 2) = *((_DWORD *)v57 + 2);
    *((_BYTE *)v56 + 12) = *((_BYTE *)v57 + 12);
    v61 = v57[3];
    v56[2] = v57[2];
    v56[3] = v61;
    v62 = v57[5];
    v56[4] = v57[4];
    v56[5] = v62;
    v63 = v58[8];
    v64 = (char *)v56 + v63;
    v65 = (char *)v57 + v63;
    v66 = sub_23361D340();
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v68(v65, 1, v66))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    v70 = v58[9];
    v71 = (char *)v56 + v70;
    v72 = (char *)v57 + v70;
    if (v68((char *)v57 + v70, 1, v66))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v71, v72, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v71, 0, 1, v66);
    }
    v74 = v58[10];
    v75 = (_QWORD *)((char *)v56 + v74);
    v76 = (_QWORD *)((char *)v57 + v74);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    v78 = v58[11];
    v79 = (char *)v56 + v78;
    v80 = (char *)v57 + v78;
    v79[2] = v80[2];
    *(_WORD *)v79 = *(_WORD *)v80;
    v81 = v58[12];
    v82 = (_QWORD *)((char *)v56 + v81);
    v83 = (_QWORD *)((char *)v57 + v81);
    v84 = v83[1];
    *v82 = *v83;
    v82[1] = v84;
    v85 = v58[13];
    v86 = (char *)v56 + v85;
    v87 = (_QWORD *)((char *)v57 + v85);
    v88 = *(_QWORD *)((char *)v57 + v85 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v88 >> 60 == 15)
    {
      *(_OWORD *)v86 = *(_OWORD *)v87;
    }
    else
    {
      v89 = *v87;
      sub_2331D1374(*v87, v88);
      *(_QWORD *)v86 = v89;
      *((_QWORD *)v86 + 1) = v88;
    }
    v5 = v117;
    v90 = v58[14];
    v91 = (char *)v56 + v90;
    v92 = (char *)v57 + v90;
    if (v68((char *)v57 + v90, 1, v66))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v91, v92, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v91, 0, 1, v66);
    }
    v94 = v58[15];
    v95 = (char *)v56 + v94;
    v96 = (char *)v57 + v94;
    v97 = sub_23361D634();
    v98 = *(_QWORD *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v96, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    *((_BYTE *)v56 + v58[16]) = *((_BYTE *)v57 + v58[16]);
    v100 = v58[17];
    v101 = (char *)v56 + v100;
    v102 = (char *)v57 + v100;
    *(_QWORD *)v101 = *(_QWORD *)v102;
    v101[8] = v102[8];
    v103 = v58[18];
    v104 = (char *)v56 + v103;
    v105 = (char *)v57 + v103;
    *(_QWORD *)v104 = *(_QWORD *)v105;
    v104[8] = v105[8];
    v106 = v58[19];
    v107 = *(void **)((char *)v57 + v106);
    *(_QWORD *)((char *)v56 + v106) = v107;
    v108 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v119 + 56);
    v109 = v107;
    v108(v56, 0, 1, v58);
  }
  return v5;
}

uint64_t assignWithCopy for MapsInsight(uint64_t a1, __int16 *a2, uint64_t a3)
{
  uint64_t v3;
  __int16 *v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, int *);
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  int v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  unsigned int (*v38)(const void *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  __int16 *v45;
  __int16 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, int *);
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  void *v79;
  const void *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(const void *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  void *v96;
  const void *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  __int16 *v104;
  __int16 v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  const void *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  const void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  void (*v134)(uint64_t, _QWORD, uint64_t, int *);
  id v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  void *v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  void *v145;
  int v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  __int16 *v154;
  __int16 v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t *v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  __int16 *v170;
  __int16 v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  void *v184;
  const void *v185;
  int v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (*v194)(void *, uint64_t, uint64_t);
  int v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  const void *v200;
  int v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  void *v207;
  void *v208;
  int v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  void *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(void *, uint64_t, uint64_t);
  int v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  void *v231;
  id v232;
  uint64_t v234;
  __int16 *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t (*v240)(uint64_t, uint64_t, uint64_t);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = *a2;
  *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = (int *)type metadata accessor for MapsBrand();
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_233168500(v8, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
      goto LABEL_7;
    }
    v242 = v3;
    v244 = v5;
    *(_QWORD *)v8 = *(_QWORD *)v9;
    v26 = *(_DWORD *)(v9 + 8);
    *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
    *(_DWORD *)(v8 + 8) = v26;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = v10[8];
    v28 = (void *)(v8 + v27);
    v29 = (void *)(v9 + v27);
    v30 = sub_23361D340();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v240 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(void *, void *, uint64_t))(v31 + 24))(v28, v29, v30);
LABEL_56:
        v137 = v10[9];
        v138 = (void *)(v8 + v137);
        v139 = (void *)(v9 + v137);
        v140 = v32((void *)(v8 + v137), 1, v30);
        v141 = v32(v139, 1, v30);
        if (v140)
        {
          if (!v141)
          {
            (*(void (**)(void *, void *, uint64_t))(v31 + 16))(v138, v139, v30);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v138, 0, 1, v30);
            goto LABEL_68;
          }
        }
        else
        {
          if (!v141)
          {
            (*(void (**)(void *, void *, uint64_t))(v31 + 24))(v138, v139, v30);
LABEL_68:
            v149 = v10[10];
            v150 = (_QWORD *)(v8 + v149);
            v151 = (_QWORD *)(v9 + v149);
            *v150 = *v151;
            v150[1] = v151[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v152 = v10[11];
            v153 = v8 + v152;
            v154 = (__int16 *)(v9 + v152);
            v155 = *v154;
            *(_BYTE *)(v153 + 2) = *((_BYTE *)v154 + 2);
            *(_WORD *)v153 = v155;
            v156 = v10[12];
            v157 = (_QWORD *)(v8 + v156);
            v158 = (_QWORD *)(v9 + v156);
            *v157 = *v158;
            v157[1] = v158[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v159 = v10[13];
            v160 = (uint64_t *)(v8 + v159);
            v161 = (uint64_t *)(v9 + v159);
            v162 = *(_QWORD *)(v9 + v159 + 8);
            if (*(_QWORD *)(v8 + v159 + 8) >> 60 == 15)
            {
              if (v162 >> 60 != 15)
              {
                v163 = *v161;
                sub_2331D1374(*v161, v162);
                *v160 = v163;
                v160[1] = v162;
                goto LABEL_84;
              }
            }
            else
            {
              if (v162 >> 60 != 15)
              {
                v180 = *v161;
                sub_2331D1374(*v161, v162);
                v181 = *v160;
                v182 = v160[1];
                *v160 = v180;
                v160[1] = v162;
                sub_23316BEA4(v181, v182);
LABEL_84:
                v183 = v10[14];
                v184 = (void *)(v8 + v183);
                v185 = (const void *)(v9 + v183);
                v186 = v240(v8 + v183, 1, v30);
                v187 = v240((uint64_t)v185, 1, v30);
                v236 = v31;
                v239 = v30;
                if (v186)
                {
                  if (!v187)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v184, v185, v30);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v184, 0, 1, v30);
                    goto LABEL_90;
                  }
                }
                else
                {
                  if (!v187)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v31 + 24))(v184, v185, v30);
LABEL_90:
                    v189 = v10[15];
                    v190 = (void *)(v8 + v189);
                    v191 = (void *)(v9 + v189);
                    v192 = sub_23361D634();
                    v193 = *(_QWORD *)(v192 - 8);
                    v194 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v193 + 48);
                    v195 = v194(v190, 1, v192);
                    v196 = v194(v191, 1, v192);
                    if (v195)
                    {
                      if (!v196)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v193 + 16))(v190, v191, v192);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
LABEL_96:
                        v198 = v10[16];
                        v199 = (void *)(v8 + v198);
                        v200 = (const void *)(v9 + v198);
                        v201 = v240((uint64_t)v199, 1, v239);
                        v202 = v240((uint64_t)v200, 1, v239);
                        v3 = v242;
                        v5 = v244;
                        if (v201)
                        {
                          if (!v202)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v236 + 16))(v199, v200, v239);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v236 + 56))(v199, 0, 1, v239);
                            goto LABEL_29;
                          }
                        }
                        else
                        {
                          if (!v202)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v236 + 24))(v199, v200, v239);
                            goto LABEL_29;
                          }
                          (*(void (**)(void *, uint64_t))(v236 + 8))(v199, v239);
                        }
                        v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700)
                                                    - 8)
                                        + 64);
                        v24 = v199;
                        v25 = v200;
LABEL_8:
                        memcpy(v24, v25, v23);
                        goto LABEL_29;
                      }
                    }
                    else
                    {
                      if (!v196)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v193 + 24))(v190, v191, v192);
                        goto LABEL_96;
                      }
                      (*(void (**)(void *, uint64_t))(v193 + 8))(v190, v192);
                    }
                    v197 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
                    goto LABEL_96;
                  }
                  (*(void (**)(void *, uint64_t))(v31 + 8))(v184, v30);
                }
                v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
                goto LABEL_90;
              }
              sub_2331EC9CC((uint64_t)v160);
            }
            *(_OWORD *)v160 = *(_OWORD *)v161;
            goto LABEL_84;
          }
          (*(void (**)(void *, uint64_t))(v31 + 8))(v138, v30);
        }
        v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    }
    v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    goto LABEL_56;
  }
  if (v14)
  {
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604E480) - 8) + 64);
    v24 = (void *)v8;
    v25 = (const void *)v9;
    goto LABEL_8;
  }
  v234 = v11;
  v235 = v4;
  v241 = v3;
  v243 = v5;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v15 = *(_DWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 12) = *(_BYTE *)(v9 + 12);
  *(_DWORD *)(v8 + 8) = v15;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v16 = v10[8];
  v17 = (void *)(v8 + v16);
  v18 = (const void *)(v9 + v16);
  v19 = sub_23361D340();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v237 = v20;
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v35 = v10[9];
  v36 = (void *)(v8 + v35);
  v37 = (const void *)(v9 + v35);
  v38 = v21;
  if (v21((const void *)(v9 + v35), 1, v19))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v36, v37, v19);
    v38 = v21;
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v36, 0, 1, v19);
  }
  v40 = v10[10];
  v41 = (_QWORD *)(v8 + v40);
  v42 = (_QWORD *)(v9 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  v43 = v10[11];
  v44 = v8 + v43;
  v45 = (__int16 *)(v9 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 2) = *((_BYTE *)v45 + 2);
  *(_WORD *)v44 = v46;
  v47 = v10[12];
  v48 = (_QWORD *)(v8 + v47);
  v49 = (_QWORD *)(v9 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  v50 = v10[13];
  v51 = v8 + v50;
  v52 = (uint64_t *)(v9 + v50);
  v53 = *(_QWORD *)(v9 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  else
  {
    v54 = *v52;
    sub_2331D1374(*v52, v53);
    *(_QWORD *)v51 = v54;
    *(_QWORD *)(v51 + 8) = v53;
  }
  v55 = v10[14];
  v56 = (void *)(v8 + v55);
  v57 = (const void *)(v9 + v55);
  if (v38((const void *)(v9 + v55), 1, v19))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v56, v57, v19);
    v38 = v21;
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v56, 0, 1, v19);
  }
  v59 = v10[15];
  v60 = (void *)(v8 + v59);
  v61 = (const void *)(v9 + v59);
  v62 = sub_23361D634();
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  v5 = v243;
  v65 = v10[16];
  v66 = (void *)(v8 + v65);
  v67 = (const void *)(v9 + v65);
  if (v38(v67, 1, v19))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v237 + 16))(v66, v67, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v66, 0, 1, v19);
  }
  v4 = v235;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v234 + 56))(v8, 0, 1, v10);
  v3 = v241;
LABEL_29:
  v69 = *(int *)(v3 + 24);
  v70 = v5 + v69;
  v71 = (uint64_t)v4 + v69;
  v72 = (int *)type metadata accessor for MapsMerchant();
  v73 = *((_QWORD *)v72 - 1);
  v74 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v73 + 48);
  v75 = v74(v70, 1, v72);
  v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (v76)
    {
      sub_233168500(v70, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      goto LABEL_35;
    }
    *(_QWORD *)v70 = *(_QWORD *)v71;
    v86 = *(_DWORD *)(v71 + 8);
    *(_BYTE *)(v70 + 12) = *(_BYTE *)(v71 + 12);
    *(_DWORD *)(v70 + 8) = v86;
    *(_QWORD *)(v70 + 16) = *(_QWORD *)(v71 + 16);
    *(_QWORD *)(v70 + 24) = *(_QWORD *)(v71 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
    *(_QWORD *)(v70 + 40) = *(_QWORD *)(v71 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v87 = v72[8];
    v88 = (void *)(v70 + v87);
    v89 = (void *)(v71 + v87);
    v90 = sub_23361D340();
    v91 = *(_QWORD *)(v90 - 8);
    v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
    v93 = v92(v88, 1, v90);
    v94 = v92(v89, 1, v90);
    if (v93)
    {
      if (!v94)
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        goto LABEL_62;
      }
    }
    else
    {
      if (!v94)
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v88, v89, v90);
LABEL_62:
        v143 = v72[9];
        v144 = (void *)(v70 + v143);
        v145 = (void *)(v71 + v143);
        v146 = v92((void *)(v70 + v143), 1, v90);
        v147 = v92(v145, 1, v90);
        if (v146)
        {
          if (!v147)
          {
            (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v144, v145, v90);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v144, 0, 1, v90);
            goto LABEL_77;
          }
        }
        else
        {
          if (!v147)
          {
            (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v144, v145, v90);
LABEL_77:
            v165 = v72[10];
            v166 = (_QWORD *)(v70 + v165);
            v167 = (_QWORD *)(v71 + v165);
            *v166 = *v167;
            v166[1] = v167[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v168 = v72[11];
            v169 = v70 + v168;
            v170 = (__int16 *)(v71 + v168);
            v171 = *v170;
            *(_BYTE *)(v169 + 2) = *((_BYTE *)v170 + 2);
            *(_WORD *)v169 = v171;
            v172 = v72[12];
            v173 = (_QWORD *)(v70 + v172);
            v174 = (_QWORD *)(v71 + v172);
            *v173 = *v174;
            v173[1] = v174[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v175 = v72[13];
            v176 = (uint64_t *)(v70 + v175);
            v177 = (uint64_t *)(v71 + v175);
            v178 = *(_QWORD *)(v71 + v175 + 8);
            if (*(_QWORD *)(v70 + v175 + 8) >> 60 == 15)
            {
              if (v178 >> 60 != 15)
              {
                v179 = *v177;
                sub_2331D1374(v179, v178);
                *v176 = v179;
                v176[1] = v178;
                goto LABEL_103;
              }
            }
            else
            {
              if (v178 >> 60 != 15)
              {
                v203 = *v177;
                sub_2331D1374(v203, v178);
                v204 = *v176;
                v205 = v176[1];
                *v176 = v203;
                v176[1] = v178;
                sub_23316BEA4(v204, v205);
LABEL_103:
                v206 = v72[14];
                v207 = (void *)(v70 + v206);
                v208 = (void *)(v71 + v206);
                v209 = v92((void *)(v70 + v206), 1, v90);
                v210 = v92(v208, 1, v90);
                if (v209)
                {
                  if (!v210)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v207, v208, v90);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v207, 0, 1, v90);
                    goto LABEL_109;
                  }
                }
                else
                {
                  if (!v210)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v207, v208, v90);
LABEL_109:
                    v212 = v72[15];
                    v213 = (void *)(v70 + v212);
                    v214 = (void *)(v71 + v212);
                    v215 = sub_23361D634();
                    v216 = *(_QWORD *)(v215 - 8);
                    v217 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v216 + 48);
                    v218 = v217(v213, 1, v215);
                    v219 = v217(v214, 1, v215);
                    if (v218)
                    {
                      if (!v219)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v216 + 16))(v213, v214, v215);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
LABEL_115:
                        *(_BYTE *)(v70 + v72[16]) = *(_BYTE *)(v71 + v72[16]);
                        v221 = v72[17];
                        v222 = v70 + v221;
                        v223 = (uint64_t *)(v71 + v221);
                        v224 = *v223;
                        *(_BYTE *)(v222 + 8) = *((_BYTE *)v223 + 8);
                        *(_QWORD *)v222 = v224;
                        v225 = v72[18];
                        v226 = v70 + v225;
                        v227 = (uint64_t *)(v71 + v225);
                        v228 = *v227;
                        *(_BYTE *)(v226 + 8) = *((_BYTE *)v227 + 8);
                        *(_QWORD *)v226 = v228;
                        v229 = v72[19];
                        v230 = *(void **)(v70 + v229);
                        v231 = *(void **)(v71 + v229);
                        *(_QWORD *)(v70 + v229) = v231;
                        v232 = v231;

                        return v5;
                      }
                    }
                    else
                    {
                      if (!v219)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v216 + 24))(v213, v214, v215);
                        goto LABEL_115;
                      }
                      (*(void (**)(void *, uint64_t))(v216 + 8))(v213, v215);
                    }
                    v220 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
                    goto LABEL_115;
                  }
                  (*(void (**)(void *, uint64_t))(v91 + 8))(v207, v90);
                }
                v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
                goto LABEL_109;
              }
              sub_2331EC9CC((uint64_t)v176);
            }
            *(_OWORD *)v176 = *(_OWORD *)v177;
            goto LABEL_103;
          }
          (*(void (**)(void *, uint64_t))(v91 + 8))(v144, v90);
        }
        v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
        goto LABEL_77;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    }
    v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    goto LABEL_62;
  }
  if (v76)
  {
LABEL_35:
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy((void *)v70, (const void *)v71, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    return v5;
  }
  v238 = v73;
  v245 = v5;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v77 = *(_DWORD *)(v71 + 8);
  *(_BYTE *)(v70 + 12) = *(_BYTE *)(v71 + 12);
  *(_DWORD *)(v70 + 8) = v77;
  *(_QWORD *)(v70 + 16) = *(_QWORD *)(v71 + 16);
  *(_QWORD *)(v70 + 24) = *(_QWORD *)(v71 + 24);
  *(_QWORD *)(v70 + 32) = *(_QWORD *)(v71 + 32);
  *(_QWORD *)(v70 + 40) = *(_QWORD *)(v71 + 40);
  v78 = v72[8];
  v79 = (void *)(v70 + v78);
  v80 = (const void *)(v71 + v78);
  v81 = sub_23361D340();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v83(v80, 1, v81))
  {
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v79, v80, v81);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  v95 = v72[9];
  v96 = (void *)(v70 + v95);
  v97 = (const void *)(v71 + v95);
  if (v83((const void *)(v71 + v95), 1, v81))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v96, v97, v81);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v96, 0, 1, v81);
  }
  v99 = v72[10];
  v100 = (_QWORD *)(v70 + v99);
  v101 = (_QWORD *)(v71 + v99);
  *v100 = *v101;
  v100[1] = v101[1];
  v102 = v72[11];
  v103 = v70 + v102;
  v104 = (__int16 *)(v71 + v102);
  v105 = *v104;
  *(_BYTE *)(v103 + 2) = *((_BYTE *)v104 + 2);
  *(_WORD *)v103 = v105;
  v106 = v72[12];
  v107 = (_QWORD *)(v70 + v106);
  v108 = (_QWORD *)(v71 + v106);
  *v107 = *v108;
  v107[1] = v108[1];
  v109 = v72[13];
  v110 = v70 + v109;
  v111 = (uint64_t *)(v71 + v109);
  v112 = *(_QWORD *)(v71 + v109 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v112 >> 60 == 15)
  {
    *(_OWORD *)v110 = *(_OWORD *)v111;
  }
  else
  {
    v113 = *v111;
    sub_2331D1374(*v111, v112);
    *(_QWORD *)v110 = v113;
    *(_QWORD *)(v110 + 8) = v112;
  }
  v114 = v72[14];
  v115 = (void *)(v70 + v114);
  v116 = (const void *)(v71 + v114);
  if (v83((const void *)(v71 + v114), 1, v81))
  {
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v115, v116, v81);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v115, 0, 1, v81);
  }
  v5 = v245;
  v118 = v72[15];
  v119 = (void *)(v70 + v118);
  v120 = (const void *)(v71 + v118);
  v121 = sub_23361D634();
  v122 = *(_QWORD *)(v121 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
  {
    v123 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v122 + 16))(v119, v120, v121);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
  }
  *(_BYTE *)(v70 + v72[16]) = *(_BYTE *)(v71 + v72[16]);
  v124 = v72[17];
  v125 = v70 + v124;
  v126 = (uint64_t *)(v71 + v124);
  v127 = *v126;
  *(_BYTE *)(v125 + 8) = *((_BYTE *)v126 + 8);
  *(_QWORD *)v125 = v127;
  v128 = v72[18];
  v129 = v70 + v128;
  v130 = (uint64_t *)(v71 + v128);
  v131 = *v130;
  *(_BYTE *)(v129 + 8) = *((_BYTE *)v130 + 8);
  *(_QWORD *)v129 = v131;
  v132 = v72[19];
  v133 = *(void **)(v71 + v132);
  *(_QWORD *)(v70 + v132) = v133;
  v134 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v238 + 56);
  v135 = v133;
  v134(v70, 0, 1, v72);
  return v5;
}

uint64_t initializeWithTake for MapsInsight(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);

  v3 = a3;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for MapsBrand();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v79 = v10;
    *v7 = *v8;
    *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v12 = *((_OWORD *)v8 + 2);
    *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
    *((_OWORD *)v7 + 2) = v12;
    v13 = v9[8];
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_23361D340();
    v17 = *(_QWORD *)(v16 - 8);
    v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v81(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = v9[9];
    v20 = (char *)v7 + v19;
    v21 = (char *)v8 + v19;
    if (v81((char *)v8 + v19, 1, v16))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v21, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    v23 = v9[11];
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v24[2] = v25[2];
    *(_WORD *)v24 = *(_WORD *)v25;
    *(_OWORD *)((char *)v7 + v9[12]) = *(_OWORD *)((char *)v8 + v9[12]);
    *(_OWORD *)((char *)v7 + v9[13]) = *(_OWORD *)((char *)v8 + v9[13]);
    v26 = v9[14];
    v27 = (char *)v7 + v26;
    v28 = (char *)v8 + v26;
    v80 = v3;
    v78 = v17;
    if (v81((char *)v8 + v26, 1, v16))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v27, v28, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v16);
    }
    v30 = v9[15];
    v31 = (char *)v7 + v30;
    v32 = (char *)v8 + v30;
    v33 = sub_23361D634();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v36 = v9[16];
    v37 = (char *)v7 + v36;
    v38 = (char *)v8 + v36;
    v3 = v80;
    if (v81(v38, 1, v16))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v37, v38, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v37, 0, 1, v16);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v79 + 56))(v7, 0, 1, v9);
  }
  v40 = *(int *)(v3 + 24);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = (int *)type metadata accessor for MapsMerchant();
  v44 = *((_QWORD *)v43 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v44 + 48))(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    *v41 = *v42;
    *((_DWORD *)v41 + 2) = *((_DWORD *)v42 + 2);
    *((_BYTE *)v41 + 12) = *((_BYTE *)v42 + 12);
    v46 = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
    *((_OWORD *)v41 + 2) = v46;
    v47 = v43[8];
    v48 = (char *)v41 + v47;
    v49 = (char *)v42 + v47;
    v50 = sub_23361D340();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    if (v52(v49, 1, v50))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v54 = v43[9];
    v55 = (char *)v41 + v54;
    v56 = (char *)v42 + v54;
    if (v52((char *)v42 + v54, 1, v50))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v55, v56, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v55, 0, 1, v50);
    }
    *(_OWORD *)((char *)v41 + v43[10]) = *(_OWORD *)((char *)v42 + v43[10]);
    v58 = v43[11];
    v59 = (char *)v41 + v58;
    v60 = (char *)v42 + v58;
    v59[2] = v60[2];
    *(_WORD *)v59 = *(_WORD *)v60;
    *(_OWORD *)((char *)v41 + v43[12]) = *(_OWORD *)((char *)v42 + v43[12]);
    *(_OWORD *)((char *)v41 + v43[13]) = *(_OWORD *)((char *)v42 + v43[13]);
    v61 = v43[14];
    v62 = (char *)v41 + v61;
    v63 = (char *)v42 + v61;
    if (v52((char *)v42 + v61, 1, v50))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v62, v63, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v62, 0, 1, v50);
    }
    v65 = v43[15];
    v66 = (char *)v41 + v65;
    v67 = (char *)v42 + v65;
    v68 = sub_23361D634();
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    *((_BYTE *)v41 + v43[16]) = *((_BYTE *)v42 + v43[16]);
    v71 = v43[17];
    v72 = (char *)v41 + v71;
    v73 = (char *)v42 + v71;
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v72[8] = v73[8];
    v74 = v43[18];
    v75 = (char *)v41 + v74;
    v76 = (char *)v42 + v74;
    *(_QWORD *)v75 = *(_QWORD *)v76;
    v75[8] = v76[8];
    *(_QWORD *)((char *)v41 + v43[19]) = *(_QWORD *)((char *)v42 + v43[19]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v44 + 56))(v41, 0, 1, v43);
  }
  return a1;
}

uint64_t assignWithTake for MapsInsight(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, int *);
  int v61;
  int v62;
  __int128 v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(const void *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void *, uint64_t, uint64_t);
  int v80;
  int v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  const void *v158;
  int v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)(void *, uint64_t, uint64_t);
  int v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  const void *v173;
  int v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  void *v179;
  int v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(void *, uint64_t, uint64_t);
  int v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int (*v206)(const void *, uint64_t, uint64_t);
  uint64_t (*v207)(uint64_t, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;

  v3 = a3;
  v5 = a1;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = (int *)type metadata accessor for MapsBrand();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_233168500(v7, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
      goto LABEL_7;
    }
    v205 = v3;
    v208 = v5;
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
    *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
    v24 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
    *(_QWORD *)(v7 + 24) = v24;
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v8 + 40);
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
    *(_QWORD *)(v7 + 40) = v25;
    swift_bridgeObjectRelease();
    v26 = v9[8];
    v27 = (void *)(v7 + v26);
    v28 = (void *)(v8 + v26);
    v29 = sub_23361D340();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v207 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
    v33 = v31(v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        goto LABEL_50;
      }
    }
    else
    {
      if (!v33)
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v27, v28, v29);
LABEL_50:
        v106 = v9[9];
        v107 = (void *)(v7 + v106);
        v108 = (void *)(v8 + v106);
        v109 = v31((void *)(v7 + v106), 1, v29);
        v110 = v31(v108, 1, v29);
        if (v109)
        {
          if (!v110)
          {
            (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v107, v108, v29);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v107, 0, 1, v29);
            goto LABEL_62;
          }
        }
        else
        {
          if (!v110)
          {
            (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v107, v108, v29);
LABEL_62:
            v118 = v9[10];
            v119 = (_QWORD *)(v7 + v118);
            v120 = (uint64_t *)(v8 + v118);
            v122 = *v120;
            v121 = v120[1];
            *v119 = v122;
            v119[1] = v121;
            swift_bridgeObjectRelease();
            v123 = v9[11];
            v124 = v7 + v123;
            v125 = v8 + v123;
            *(_WORD *)v124 = *(_WORD *)v125;
            *(_BYTE *)(v124 + 2) = *(_BYTE *)(v125 + 2);
            v126 = v9[12];
            v127 = (_QWORD *)(v7 + v126);
            v128 = (uint64_t *)(v8 + v126);
            v130 = *v128;
            v129 = v128[1];
            *v127 = v130;
            v127[1] = v129;
            swift_bridgeObjectRelease();
            v131 = v9[13];
            v132 = (uint64_t *)(v7 + v131);
            v133 = (uint64_t *)(v8 + v131);
            v134 = *(_QWORD *)(v7 + v131 + 8);
            if (v134 >> 60 != 15)
            {
              v135 = v133[1];
              if (v135 >> 60 != 15)
              {
                v155 = *v132;
                *v132 = *v133;
                v132[1] = v135;
                sub_23316BEA4(v155, v134);
LABEL_74:
                v156 = v9[14];
                v157 = (void *)(v7 + v156);
                v158 = (const void *)(v8 + v156);
                v159 = v207(v7 + v156, 1, v29);
                v160 = v207((uint64_t)v158, 1, v29);
                v201 = v30;
                v203 = v29;
                if (v159)
                {
                  if (!v160)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v157, v158, v29);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v157, 0, 1, v29);
                    goto LABEL_80;
                  }
                }
                else
                {
                  if (!v160)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v30 + 40))(v157, v158, v29);
LABEL_80:
                    v162 = v9[15];
                    v163 = (void *)(v7 + v162);
                    v164 = (void *)(v8 + v162);
                    v165 = sub_23361D634();
                    v166 = *(_QWORD *)(v165 - 8);
                    v167 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v166 + 48);
                    v168 = v167(v163, 1, v165);
                    v169 = v167(v164, 1, v165);
                    if (v168)
                    {
                      if (!v169)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v166 + 32))(v163, v164, v165);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v163, 0, 1, v165);
LABEL_86:
                        v171 = v9[16];
                        v172 = (void *)(v7 + v171);
                        v173 = (const void *)(v8 + v171);
                        v174 = v207((uint64_t)v172, 1, v203);
                        v175 = v207((uint64_t)v173, 1, v203);
                        v5 = v208;
                        v3 = v205;
                        if (v174)
                        {
                          if (!v175)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v201 + 32))(v172, v173, v203);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v172, 0, 1, v203);
                            goto LABEL_26;
                          }
                        }
                        else
                        {
                          if (!v175)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v201 + 40))(v172, v173, v203);
                            goto LABEL_26;
                          }
                          (*(void (**)(void *, uint64_t))(v201 + 8))(v172, v203);
                        }
                        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700)
                                                    - 8)
                                        + 64);
                        v22 = v172;
                        v23 = v173;
LABEL_8:
                        memcpy(v22, v23, v21);
                        goto LABEL_26;
                      }
                    }
                    else
                    {
                      if (!v169)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v166 + 40))(v163, v164, v165);
                        goto LABEL_86;
                      }
                      (*(void (**)(void *, uint64_t))(v166 + 8))(v163, v165);
                    }
                    v170 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
                    goto LABEL_86;
                  }
                  (*(void (**)(void *, uint64_t))(v30 + 8))(v157, v29);
                }
                v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
                goto LABEL_80;
              }
              sub_2331EC9CC((uint64_t)v132);
            }
            *(_OWORD *)v132 = *(_OWORD *)v133;
            goto LABEL_74;
          }
          (*(void (**)(void *, uint64_t))(v30 + 8))(v107, v29);
        }
        v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        goto LABEL_62;
      }
      (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
    }
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_50;
  }
  if (v13)
  {
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604E480) - 8) + 64);
    v22 = (void *)v7;
    v23 = (const void *)v8;
    goto LABEL_8;
  }
  v204 = v3;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 12) = *(_BYTE *)(v8 + 12);
  v14 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v14;
  v15 = v9[8];
  v16 = (void *)(v7 + v15);
  v17 = (const void *)(v8 + v15);
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v206 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  if (v206(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v34 = v9[9];
  v35 = (void *)(v7 + v34);
  v36 = (const void *)(v8 + v34);
  if (v206((const void *)(v8 + v34), 1, v18))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v35, v36, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v35, 0, 1, v18);
  }
  *(_OWORD *)(v7 + v9[10]) = *(_OWORD *)(v8 + v9[10]);
  v38 = v9[11];
  v39 = v7 + v38;
  v40 = v8 + v38;
  *(_BYTE *)(v39 + 2) = *(_BYTE *)(v40 + 2);
  *(_WORD *)v39 = *(_WORD *)v40;
  *(_OWORD *)(v7 + v9[12]) = *(_OWORD *)(v8 + v9[12]);
  *(_OWORD *)(v7 + v9[13]) = *(_OWORD *)(v8 + v9[13]);
  v41 = v9[14];
  v42 = (void *)(v7 + v41);
  v43 = (const void *)(v8 + v41);
  v209 = v5;
  v202 = v19;
  if (v206((const void *)(v8 + v41), 1, v18))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v42, v43, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v42, 0, 1, v18);
  }
  v45 = v9[15];
  v46 = (void *)(v7 + v45);
  v47 = (const void *)(v8 + v45);
  v48 = sub_23361D634();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = v9[16];
  v52 = (void *)(v7 + v51);
  v53 = (const void *)(v8 + v51);
  v5 = v209;
  if (v206(v53, 1, v18))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v202 + 32))(v52, v53, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v52, 0, 1, v18);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  v3 = v204;
LABEL_26:
  v55 = *(int *)(v3 + 24);
  v56 = v5 + v55;
  v57 = a2 + v55;
  v58 = (int *)type metadata accessor for MapsMerchant();
  v59 = *((_QWORD *)v58 - 1);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (v62)
    {
      sub_233168500(v56, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      goto LABEL_32;
    }
    v210 = v5;
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *(_DWORD *)(v56 + 8) = *(_DWORD *)(v57 + 8);
    *(_BYTE *)(v56 + 12) = *(_BYTE *)(v57 + 12);
    v72 = *(_QWORD *)(v57 + 24);
    *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
    *(_QWORD *)(v56 + 24) = v72;
    swift_bridgeObjectRelease();
    v73 = *(_QWORD *)(v57 + 40);
    *(_QWORD *)(v56 + 32) = *(_QWORD *)(v57 + 32);
    *(_QWORD *)(v56 + 40) = v73;
    swift_bridgeObjectRelease();
    v74 = v58[8];
    v75 = (void *)(v56 + v74);
    v76 = (void *)(v57 + v74);
    v77 = sub_23361D340();
    v78 = *(_QWORD *)(v77 - 8);
    v79 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v78 + 48);
    v80 = v79(v75, 1, v77);
    v81 = v79(v76, 1, v77);
    if (v80)
    {
      if (!v81)
      {
        (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v75, v76, v77);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v81)
      {
        (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v75, v76, v77);
LABEL_56:
        v112 = v58[9];
        v113 = (void *)(v56 + v112);
        v114 = (void *)(v57 + v112);
        v115 = v79((void *)(v56 + v112), 1, v77);
        v116 = v79(v114, 1, v77);
        if (v115)
        {
          if (!v116)
          {
            (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v113, v114, v77);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v113, 0, 1, v77);
            goto LABEL_69;
          }
        }
        else
        {
          if (!v116)
          {
            (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v113, v114, v77);
LABEL_69:
            v137 = v58[10];
            v138 = (_QWORD *)(v56 + v137);
            v139 = (uint64_t *)(v57 + v137);
            v141 = *v139;
            v140 = v139[1];
            *v138 = v141;
            v138[1] = v140;
            swift_bridgeObjectRelease();
            v142 = v58[11];
            v143 = v56 + v142;
            v144 = v57 + v142;
            *(_WORD *)v143 = *(_WORD *)v144;
            *(_BYTE *)(v143 + 2) = *(_BYTE *)(v144 + 2);
            v145 = v58[12];
            v146 = (_QWORD *)(v56 + v145);
            v147 = (uint64_t *)(v57 + v145);
            v149 = *v147;
            v148 = v147[1];
            *v146 = v149;
            v146[1] = v148;
            swift_bridgeObjectRelease();
            v150 = v58[13];
            v151 = (uint64_t *)(v56 + v150);
            v152 = (uint64_t *)(v57 + v150);
            v153 = *(_QWORD *)(v56 + v150 + 8);
            if (v153 >> 60 != 15)
            {
              v154 = v152[1];
              if (v154 >> 60 != 15)
              {
                v176 = *v151;
                *v151 = *v152;
                v151[1] = v154;
                sub_23316BEA4(v176, v153);
LABEL_93:
                v177 = v58[14];
                v178 = (void *)(v56 + v177);
                v179 = (void *)(v57 + v177);
                v180 = v79((void *)(v56 + v177), 1, v77);
                v181 = v79(v179, 1, v77);
                if (v180)
                {
                  v5 = v210;
                  if (!v181)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v78 + 32))(v178, v179, v77);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v178, 0, 1, v77);
                    goto LABEL_99;
                  }
                }
                else
                {
                  v5 = v210;
                  if (!v181)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v78 + 40))(v178, v179, v77);
LABEL_99:
                    v183 = v58[15];
                    v184 = (void *)(v56 + v183);
                    v185 = (void *)(v57 + v183);
                    v186 = sub_23361D634();
                    v187 = *(_QWORD *)(v186 - 8);
                    v188 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v187 + 48);
                    v189 = v188(v184, 1, v186);
                    v190 = v188(v185, 1, v186);
                    if (v189)
                    {
                      if (!v190)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v187 + 32))(v184, v185, v186);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v184, 0, 1, v186);
LABEL_105:
                        *(_BYTE *)(v56 + v58[16]) = *(_BYTE *)(v57 + v58[16]);
                        v192 = v58[17];
                        v193 = v56 + v192;
                        v194 = v57 + v192;
                        *(_QWORD *)v193 = *(_QWORD *)v194;
                        *(_BYTE *)(v193 + 8) = *(_BYTE *)(v194 + 8);
                        v195 = v58[18];
                        v196 = v56 + v195;
                        v197 = v57 + v195;
                        *(_QWORD *)v196 = *(_QWORD *)v197;
                        *(_BYTE *)(v196 + 8) = *(_BYTE *)(v197 + 8);
                        v198 = v58[19];
                        v199 = *(void **)(v56 + v198);
                        *(_QWORD *)(v56 + v198) = *(_QWORD *)(v57 + v198);

                        return v5;
                      }
                    }
                    else
                    {
                      if (!v190)
                      {
                        (*(void (**)(void *, void *, uint64_t))(v187 + 40))(v184, v185, v186);
                        goto LABEL_105;
                      }
                      (*(void (**)(void *, uint64_t))(v187 + 8))(v184, v186);
                    }
                    v191 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
                    memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
                    goto LABEL_105;
                  }
                  (*(void (**)(void *, uint64_t))(v78 + 8))(v178, v77);
                }
                v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
                memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
                goto LABEL_99;
              }
              sub_2331EC9CC((uint64_t)v151);
            }
            *(_OWORD *)v151 = *(_OWORD *)v152;
            goto LABEL_93;
          }
          (*(void (**)(void *, uint64_t))(v78 + 8))(v113, v77);
        }
        v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
        goto LABEL_69;
      }
      (*(void (**)(void *, uint64_t))(v78 + 8))(v75, v77);
    }
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    goto LABEL_56;
  }
  if (v62)
  {
LABEL_32:
    v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    memcpy((void *)v56, (const void *)v57, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    return v5;
  }
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_DWORD *)(v56 + 8) = *(_DWORD *)(v57 + 8);
  *(_BYTE *)(v56 + 12) = *(_BYTE *)(v57 + 12);
  v63 = *(_OWORD *)(v57 + 32);
  *(_OWORD *)(v56 + 16) = *(_OWORD *)(v57 + 16);
  *(_OWORD *)(v56 + 32) = v63;
  v64 = v58[8];
  v65 = (void *)(v56 + v64);
  v66 = (const void *)(v57 + v64);
  v67 = sub_23361D340();
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48);
  if (v69(v66, 1, v67))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v65, v66, v67);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  v82 = v58[9];
  v83 = (void *)(v56 + v82);
  v84 = (const void *)(v57 + v82);
  if (v69((const void *)(v57 + v82), 1, v67))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v83, v84, v67);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v83, 0, 1, v67);
  }
  *(_OWORD *)(v56 + v58[10]) = *(_OWORD *)(v57 + v58[10]);
  v86 = v58[11];
  v87 = v56 + v86;
  v88 = v57 + v86;
  *(_BYTE *)(v87 + 2) = *(_BYTE *)(v88 + 2);
  *(_WORD *)v87 = *(_WORD *)v88;
  *(_OWORD *)(v56 + v58[12]) = *(_OWORD *)(v57 + v58[12]);
  *(_OWORD *)(v56 + v58[13]) = *(_OWORD *)(v57 + v58[13]);
  v89 = v58[14];
  v90 = (void *)(v56 + v89);
  v91 = (const void *)(v57 + v89);
  if (v69((const void *)(v57 + v89), 1, v67))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v90, v91, v67);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v90, 0, 1, v67);
  }
  v93 = v58[15];
  v94 = (void *)(v56 + v93);
  v95 = (const void *)(v57 + v93);
  v96 = sub_23361D634();
  v97 = *(_QWORD *)(v96 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v94, v95, v96);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
  }
  *(_BYTE *)(v56 + v58[16]) = *(_BYTE *)(v57 + v58[16]);
  v99 = v58[17];
  v100 = v56 + v99;
  v101 = v57 + v99;
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *(_BYTE *)(v100 + 8) = *(_BYTE *)(v101 + 8);
  v102 = v58[18];
  v103 = v56 + v102;
  v104 = v57 + v102;
  *(_QWORD *)v103 = *(_QWORD *)v104;
  *(_BYTE *)(v103 + 8) = *(_BYTE *)(v104 + 8);
  *(_QWORD *)(v56 + v58[19]) = *(_QWORD *)(v57 + v58[19]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v59 + 56))(v56, 0, 1, v58);
  return v5;
}

uint64_t getEnumTagSinglePayload for MapsInsight()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2335790B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MapsInsight()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23357913C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2335791BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_233176020(319, qword_256055C30, (void (*)(uint64_t))type metadata accessor for MapsBrand);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, qword_25604E570, (void (*)(uint64_t))type metadata accessor for MapsMerchant);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for MapsInsight.CodingKeys()
{
  return &type metadata for MapsInsight.CodingKeys;
}

uint64_t _s10FinanceKit11MapsInsightV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2335792CC + 4 * byte_23365E385[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233579300 + 4 * byte_23365E380[v4]))();
}

uint64_t sub_233579300(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233579308(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233579310);
  return result;
}

uint64_t sub_23357931C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233579324);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233579328(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233579330(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7InsightO10CodingKeysOMa()
{
  return &_s7InsightO10CodingKeysON;
}

ValueMetadata *_s7InsightO14MapsCodingKeysOMa()
{
  return &_s7InsightO14MapsCodingKeysON;
}

ValueMetadata *_s7InsightO14BankCodingKeysOMa()
{
  return &_s7InsightO14BankCodingKeysON;
}

uint64_t _s7InsightO14MapsCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2335793B0 + 4 * byte_23365E38A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2335793D0 + 4 * byte_23365E38F[v4]))();
}

_BYTE *sub_2335793B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2335793D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335793D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335793E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2335793E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2335793F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7InsightO18ApplePayCodingKeysOMa()
{
  return &_s7InsightO18ApplePayCodingKeysON;
}

unint64_t sub_233579410()
{
  unint64_t result;

  result = qword_256055C70;
  if (!qword_256055C70)
  {
    result = MEMORY[0x234934494](&unk_23365E5F4, &_s7InsightO18ApplePayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055C70);
  }
  return result;
}

unint64_t sub_233579458()
{
  unint64_t result;

  result = qword_256055C78;
  if (!qword_256055C78)
  {
    result = MEMORY[0x234934494](&unk_23365E6AC, &_s7InsightO14BankCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055C78);
  }
  return result;
}

unint64_t sub_2335794A0()
{
  unint64_t result;

  result = qword_256055C80;
  if (!qword_256055C80)
  {
    result = MEMORY[0x234934494](&unk_23365E764, &_s7InsightO14MapsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055C80);
  }
  return result;
}

unint64_t sub_2335794E8()
{
  unint64_t result;

  result = qword_256055C88;
  if (!qword_256055C88)
  {
    result = MEMORY[0x234934494](&unk_23365E81C, &_s7InsightO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055C88);
  }
  return result;
}

unint64_t sub_233579530()
{
  unint64_t result;

  result = qword_256055C90;
  if (!qword_256055C90)
  {
    result = MEMORY[0x234934494](&unk_23365E8D4, &type metadata for MapsInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055C90);
  }
  return result;
}

unint64_t sub_233579578()
{
  unint64_t result;

  result = qword_256055C98;
  if (!qword_256055C98)
  {
    result = MEMORY[0x234934494](&unk_23365E844, &type metadata for MapsInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055C98);
  }
  return result;
}

unint64_t sub_2335795C0()
{
  unint64_t result;

  result = qword_256055CA0;
  if (!qword_256055CA0)
  {
    result = MEMORY[0x234934494](&unk_23365E86C, &type metadata for MapsInsight.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055CA0);
  }
  return result;
}

unint64_t sub_233579608()
{
  unint64_t result;

  result = qword_256055CA8;
  if (!qword_256055CA8)
  {
    result = MEMORY[0x234934494](&unk_23365E6D4, &_s7InsightO14MapsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CA8);
  }
  return result;
}

unint64_t sub_233579650()
{
  unint64_t result;

  result = qword_256055CB0;
  if (!qword_256055CB0)
  {
    result = MEMORY[0x234934494](&unk_23365E6FC, &_s7InsightO14MapsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CB0);
  }
  return result;
}

unint64_t sub_233579698()
{
  unint64_t result;

  result = qword_256055CB8;
  if (!qword_256055CB8)
  {
    result = MEMORY[0x234934494](&unk_23365E61C, &_s7InsightO14BankCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CB8);
  }
  return result;
}

unint64_t sub_2335796E0()
{
  unint64_t result;

  result = qword_256055CC0;
  if (!qword_256055CC0)
  {
    result = MEMORY[0x234934494](&unk_23365E644, &_s7InsightO14BankCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CC0);
  }
  return result;
}

unint64_t sub_233579728()
{
  unint64_t result;

  result = qword_256055CC8;
  if (!qword_256055CC8)
  {
    result = MEMORY[0x234934494](&unk_23365E564, &_s7InsightO18ApplePayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CC8);
  }
  return result;
}

unint64_t sub_233579770()
{
  unint64_t result;

  result = qword_256055CD0;
  if (!qword_256055CD0)
  {
    result = MEMORY[0x234934494](&unk_23365E58C, &_s7InsightO18ApplePayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CD0);
  }
  return result;
}

unint64_t sub_2335797B8()
{
  unint64_t result;

  result = qword_256055CD8;
  if (!qword_256055CD8)
  {
    result = MEMORY[0x234934494](&unk_23365E78C, &_s7InsightO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CD8);
  }
  return result;
}

unint64_t sub_233579800()
{
  unint64_t result;

  result = qword_256055CE0;
  if (!qword_256055CE0)
  {
    result = MEMORY[0x234934494](&unk_23365E7B4, &_s7InsightO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256055CE0);
  }
  return result;
}

uint64_t sub_233579844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1936744813 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802396002 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x796150656C707061 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_233579978(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E617262 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_233579AC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t static ThumbnailBuilder.renderThumbnail(with:size:scale:options:)(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  return sub_23357B9A4(a1, a2, a3, a4, a5);
}

void ThumbnailImage.init(image:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  CGColorRef v12;

  v4 = objc_msgSend(a1, sel_orderImageData);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_data);

LABEL_4:
    v7 = sub_23361D3C4();
    v9 = v8;

    v10 = (double)(int)objc_msgSend(a1, sel_width);
    v11 = (double)(int)objc_msgSend(a1, sel_height);
    v12 = ManagedOrderImage.backgroundColor.getter();

    *(_QWORD *)a2 = v7;
    *(_QWORD *)(a2 + 8) = v9;
    *(double *)(a2 + 16) = v10;
    *(double *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = v12;
    return;
  }
  v6 = objc_msgSend(a1, sel_data);
  if (v6)
    goto LABEL_4;
  __break(1u);
}

uint64_t ThumbnailBuilderError.hash(into:)()
{
  return sub_23361F35C();
}

BOOL static ThumbnailBuilderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ThumbnailBuilderError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t ThumbnailImage.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2331D1374(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

double ThumbnailImage.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void *ThumbnailImage.color.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t ThumbnailImage.init(data:size:color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

void static ThumbnailImage.== infix(_:_:)(uint64_t *a1)
{
  sub_2334C71D4(*a1, a1[1]);
}

uint64_t sub_233579D68()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1702521203;
  if (*v0 != 1)
    v1 = 0x726F6C6F63;
  if (*v0)
    return v1;
  else
    return 1635017060;
}

uint64_t sub_233579DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23357C3A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233579DD4()
{
  sub_23357BE98();
  return sub_23361F428();
}

uint64_t sub_233579DFC()
{
  sub_23357BE98();
  return sub_23361F434();
}

void ThumbnailImage.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  CGColorRef v14;
  unint64_t v15;
  CGColor *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055D10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23357BE98();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v21 = 0;
    sub_2331A6B08();
    sub_23361F068();
    v10 = (uint64_t)v19;
    v9 = v20;
    type metadata accessor for CGSize(0);
    v21 = 1;
    sub_2331D1374(v10, v9);
    sub_233167C58(&qword_256047C98, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
    sub_23361F068();
    v18 = v9;
    v11 = (uint64_t)v19;
    v12 = v20;
    type metadata accessor for StorableColor();
    v21 = 2;
    sub_233167C58(&qword_256055D20, (uint64_t (*)(uint64_t))type metadata accessor for StorableColor, (uint64_t)&protocol conformance descriptor for StorableColor);
    sub_23361EFFC();
    if (v19)
    {
      v13 = v19;
      v14 = sub_23326BA3C();

    }
    else
    {
      v14 = 0;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v18;
    sub_2331D1374(v10, v18);
    v16 = v14;
    sub_23316BEA4(v10, v15);
    *a2 = v10;
    a2[1] = v15;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = (uint64_t)v14;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_23316BEA4(v10, v15);

  }
}

void ThumbnailImage.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[2];
  id v17;
  void *v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055D28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v10 = v1[3];
  v16[0] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23357BE98();
  sub_23361F410();
  v17 = v8;
  v18 = v7;
  v19 = 0;
  sub_2331A6BA8();
  v11 = v16[1];
  sub_23361F17C();
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    v12 = (void *)v16[0];
    v17 = v9;
    v18 = v10;
    v19 = 1;
    type metadata accessor for CGSize(0);
    sub_233167C58(&qword_256047C68, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
    sub_23361F17C();
    v13 = objc_allocWithZone((Class)type metadata accessor for StorableColor());
    v14 = v12;
    v15 = StorableColor.init(color:)(v12);
    v17 = v15;
    v19 = 2;
    sub_233167C58(&qword_256055D30, (uint64_t (*)(uint64_t))type metadata accessor for StorableColor, (uint64_t)&protocol conformance descriptor for StorableColor);
    sub_23361F110();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

  }
}

void sub_23357A310(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  ThumbnailImage.init(from:)(a1, a2);
}

void sub_23357A324(_QWORD *a1)
{
  ThumbnailImage.encode(to:)(a1);
}

CGColorSpaceRef sub_23357A338()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF228]);
  if (!result)
    result = CGColorSpaceCreateDeviceRGB();
  qword_256055CF0 = (uint64_t)result;
  return result;
}

void sub_23357A368()
{
  qword_256055CF8 = 0x4054000000000000;
}

void sub_23357A378()
{
  qword_256055D00 = 0x4018000000000000;
}

void sub_23357A388()
{
  qword_256055D08 = 0x4008000000000000;
}

CGImageRef sub_23357A398()
{
  __int128 *v0;
  __int128 *v1;
  CGContext *v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  CGContext *v10;
  CGColor *v11;
  CGColor *v12;
  CGColor *v13;
  CGColor *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  char v20;
  char v21;
  char v22;
  int v23;
  CGImageRef Image;
  _BYTE *v25;
  char v27;
  char v28;
  char v29;
  __int128 v30;
  unsigned __int8 v31;
  __int128 v32;
  CGContext *v33;
  __int128 v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  int v46;
  char v47;
  CGContext *v48;
  char v49;
  CGRect v50;

  v1 = v0;
  v30 = *v0;
  v2 = (CGContext *)*((_QWORD *)v0 + 2);
  v3 = *((double *)v0 + 5);
  v4 = *((double *)v0 + 6);
  v5 = *((double *)v0 + 7);
  v6 = *((double *)v0 + 8);
  v7 = *((_QWORD *)v0 + 12);
  v8 = *((_QWORD *)v0 + 13);
  v9 = *((_BYTE *)v0 + 112);
  v10 = (CGContext *)*((_QWORD *)v0 + 15);
  v27 = *((_BYTE *)v0 + 114);
  v28 = *((_BYTE *)v0 + 113);
  v29 = *((_BYTE *)v0 + 128);
  ThumbnailOptions.backgroundColor.getter();
  v12 = v11;
  CGContextSetFillColorWithColor(v2, v11);

  v50.origin.x = v3;
  v50.origin.y = v4;
  v50.size.width = v5;
  v50.size.height = v6;
  CGContextFillRect(v2, v50);
  *(_QWORD *)&v32 = v8;
  BYTE8(v32) = v9;
  BYTE9(v32) = v28 & 1;
  BYTE10(v32) = v27 & 1;
  v33 = v10;
  LOBYTE(v34) = v29 & 1;
  ThumbnailOptions.itemBackgroundColor.getter();
  v14 = v13;
  CGContextSetFillColorWithColor(v2, v13);

  v15 = v30;
  if ((unint64_t)v30 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_23361EF30();
    swift_bridgeObjectRelease();
    v15 = v30;
  }
  else
  {
    v16 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7 >= v16)
    v17 = v16;
  else
    v17 = v7;
  v18 = v17 - 1;
  v19 = 0x80;
  v21 = v28;
  v20 = v29;
  v22 = v27;
  switch(v18)
  {
    case 0:
      break;
    case 1:
      v19 = v27 & 1;
      break;
    case 2:
      v19 = v27 & 1 | 0x40;
      break;
    case 3:
      v19 = -127;
      break;
    default:
      v19 = -127;
      v21 = v28;
      v20 = v29;
      v22 = v27;
      break;
  }
  v32 = v15;
  v33 = v2;
  v34 = *(__int128 *)((char *)v1 + 24);
  v35 = v3;
  v36 = v4;
  v37 = v5;
  v38 = v6;
  v39 = *(__int128 *)((char *)v1 + 72);
  v40 = *((_QWORD *)v1 + 11);
  v41 = v7;
  v42 = v8;
  v43 = v9;
  v44 = v21;
  v45 = v22;
  v23 = *(_DWORD *)((char *)v1 + 115);
  v47 = *((_BYTE *)v1 + 119);
  v46 = v23;
  v48 = v10;
  v49 = v20;
  v31 = v19;
  sub_23357A61C(&v31);
  Image = CGBitmapContextCreateImage(v2);
  if (!Image)
  {
    sub_23357C4D4();
    swift_allocError();
    *v25 = 1;
    swift_willThrow();
  }
  return Image;
}

void sub_23357A61C(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  CGContext *v10;
  __int128 *v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  int *v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  int v24;
  __int128 v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  CGFloat *v33;
  CGImage *v34;
  CGImage *v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGPath *v40;
  uint64_t v41;
  _QWORD v42[2];
  unsigned int v43;
  double v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unsigned __int8 v48;
  unint64_t v49;
  uint64_t v50;
  CGContext *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  int v63;
  char v64;
  uint64_t v65;
  char v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v3 = sub_23361D97C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v9 = *v1;
  v8 = v1[1];
  v10 = (CGContext *)v1[2];
  v11 = (__int128 *)(v1 + 3);
  v12 = *((double *)v1 + 9);
  v13 = *((double *)v1 + 10);
  v14 = *((double *)v1 + 11);
  v15 = v1[12];
  v16 = v1[13];
  v17 = *((_BYTE *)v1 + 112);
  v18 = *((unsigned __int8 *)v1 + 113);
  v19 = *((_BYTE *)v1 + 114);
  v20 = (int *)((char *)v1 + 115);
  v21 = v1[15];
  v22 = *((_BYTE *)v1 + 128);
  if (v7 == 128)
  {
    v23 = *(_OWORD *)(v1 + 5);
    v52 = *v11;
    v49 = v9;
    v50 = v8;
    v51 = v10;
    v53 = v23;
    v54 = *(_OWORD *)(v1 + 7);
    v55 = v12;
    v56 = v13;
    v57 = v14;
    v58 = v15;
    v59 = v16;
    v60 = v17;
    v61 = v18;
    v62 = v19;
    v24 = *v20;
    v64 = *((_BYTE *)v1 + 119);
    v63 = v24;
    v65 = v21;
    v66 = v22;
    sub_23357AAB0();
    return;
  }
  v25 = *(_OWORD *)(v1 + 5);
  v52 = *v11;
  v49 = v9;
  v50 = v8;
  v51 = v10;
  v53 = v25;
  v54 = *(_OWORD *)(v1 + 7);
  v55 = v12;
  v56 = v13;
  v57 = v14;
  v58 = v15;
  v59 = v16;
  v60 = v17;
  v61 = v18;
  v62 = v19;
  v26 = *v20;
  v64 = *((_BYTE *)v1 + 119);
  v63 = v26;
  v65 = v21;
  v66 = v22;
  v48 = v7;
  v27 = sub_23357ACCC(&v48);
  v28 = *(_QWORD *)(v27 + 16);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v29 >= v28)
    v30 = v28;
  else
    v30 = v29;
  if (v30 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!v30)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      return;
    }
    v47 = v9 & 0xC000000000000001;
    if ((v9 & 0xC000000000000001) == 0)
    {
      v31 = v30 - 1;
      if ((unint64_t)(v30 - 1) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_24;
      goto LABEL_12;
    }
  }
  v31 = v30 - 1;
LABEL_12:
  if (v31 < *(_QWORD *)(v27 + 16))
  {
    v46 = v18;
    v32 = 0;
    v44 = round(v12 * (v13 * v14));
    v43 = *MEMORY[0x24BDBD730];
    v42[1] = v27;
    v33 = (CGFloat *)(v27 + 56);
    v45 = v9;
    do
    {
      v41 = v30;
      if (v47)
        v34 = (CGImage *)MEMORY[0x234933120](v32, v9);
      else
        v34 = (CGImage *)*(id *)(v9 + 8 * v32 + 32);
      v35 = v34;
      ++v32;
      v37 = *(v33 - 3);
      v36 = *(v33 - 2);
      v38 = *(v33 - 1);
      v39 = *v33;
      CGContextSaveGState(v10);
      v40 = sub_2331E7508(v37, v36, v38, v39);
      CGContextAddPath(v10, v40);
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, v43, v3);
      sub_23361E6CC();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v67.origin.x = v37;
      v67.origin.y = v36;
      v67.size.width = v38;
      v67.size.height = v39;
      CGContextFillRect(v10, v67);
      CGImageGetWidth(v35);
      CGImageGetHeight(v35);
      v68.origin.x = v37;
      v68.origin.y = v36;
      v68.size.width = v38;
      v68.size.height = v39;
      CGRectGetWidth(v68);
      v69.origin.x = v37;
      v69.origin.y = v36;
      v69.size.width = v38;
      v69.size.height = v39;
      CGRectGetHeight(v69);
      v70.origin.x = v37;
      v70.origin.y = v36;
      v70.size.width = v38;
      v70.size.height = v39;
      CGRectGetWidth(v70);
      v71.origin.x = v37;
      v71.origin.y = v36;
      v71.size.width = v38;
      v71.size.height = v39;
      CGRectGetHeight(v71);
      sub_23361E6D8();
      CGContextRestoreGState(v10);

      v33 += 4;
      v30 = v41;
      v9 = v45;
    }
    while (v41 != v32);
    goto LABEL_18;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_23357AAB0()
{
  double *v0;
  double v1;
  uint64_t v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  CGImage *v10;
  CGColor *v11;
  CGContext *v12;
  CGImage *v13;
  CGRect v14;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v12 = (CGContext *)*((_QWORD *)v0 + 2);
  v3 = v0[5];
  v4 = v0[6];
  v5 = v0[7];
  v6 = v0[8];
  v7 = *((_BYTE *)v0 + 113);
  if (!(*(_QWORD *)v0 >> 62))
  {
    v8 = *(_QWORD *)((*(_QWORD *)&v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_23361EF30())
    goto LABEL_12;
LABEL_3:
  if ((*(_QWORD *)&v1 & 0xC000000000000001) != 0)
  {
    v9 = v2;
    v10 = (CGImage *)MEMORY[0x234933120](0, *(_QWORD *)&v1);
  }
  else
  {
    if (!*(_QWORD *)((*(_QWORD *)&v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v9 = v2;
    v10 = (CGImage *)*(id *)(*(_QWORD *)&v1 + 32);
  }
  v13 = v10;
  swift_bridgeObjectRelease();
  sub_23357B290(v13, v3, v4, v5, v6);
  if ((v7 & 1) == 0 && *(_QWORD *)(v9 + 16))
  {
    v11 = *(CGColor **)(v9 + 32);
    if (v11)
      CGContextSetFillColorWithColor(v12, v11);
  }
  v14.origin.x = v3;
  v14.origin.y = v4;
  v14.size.width = v5;
  v14.size.height = v6;
  CGContextFillRect(v12, v14);
  sub_23361E6D8();

}

uint64_t sub_23357ACCC(unsigned __int8 *a1)
{
  double *v1;
  unsigned int v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;

  v2 = *a1;
  v3 = v1[3];
  v4 = v1[9];
  v5 = v1[10];
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256055D60);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_233627000;
      if ((v2 & 1) != 0)
      {
        if (qword_256041D58 != -1)
          swift_once();
        v30 = v4 * (v5 * *(double *)&qword_256055D00);
        v31 = v30;
        if (qword_256041D60 != -1)
        {
          v63 = v4 * (v5 * *(double *)&qword_256055D00);
          swift_once();
          v30 = v63;
          v31 = v4 * (v5 * *(double *)&qword_256055D00);
        }
        v32 = v4 * (v5 * *(double *)&qword_256055D08);
        v33 = (v3 - (v30 + v30 + v32)) * 0.5;
        v34 = v30 + (v32 + v33) * 0.0;
        v35 = v30 + v32 + v33;
        v36 = round(v33);
        *(double *)(v6 + 32) = round(v34);
        *(double *)(v6 + 40) = round(v35);
        *(double *)(v6 + 48) = v36;
        *(double *)(v6 + 56) = v36;
        v37 = (v3 - (v32 + v31 + v31)) * 0.5;
        v38 = v32 + v37;
        v16 = round(v37);
        v39 = round(v31 + v38);
        *(double *)(v6 + 64) = v39;
        *(double *)(v6 + 72) = v39;
        *(double *)(v6 + 80) = v16;
        *(double *)(v6 + 88) = v16;
        v18 = round(v31 + v38 * 0.0);
        *(double *)(v6 + 96) = v39;
      }
      else
      {
        if (qword_256041D58 != -1)
          swift_once();
        v7 = v4 * (v5 * *(double *)&qword_256055D00);
        v8 = v7;
        if (qword_256041D60 != -1)
        {
          v61 = v4 * (v5 * *(double *)&qword_256055D00);
          swift_once();
          v7 = v61;
          v8 = v4 * (v5 * *(double *)&qword_256055D00);
        }
        v9 = v4 * (v5 * *(double *)&qword_256055D08);
        v10 = (v3 - (v7 + v7 + v9)) * 0.5;
        v11 = v7 + (v9 + v10) * 0.0;
        v12 = v7 + v9 + v10;
        v13 = round(v10);
        *(double *)(v6 + 32) = round(v11);
        *(double *)(v6 + 40) = round(v12);
        *(double *)(v6 + 48) = v13;
        *(double *)(v6 + 56) = v13;
        v14 = (v3 - (v9 + v8 + v8)) * 0.5;
        v15 = v9 + v14;
        v16 = round(v14);
        v17 = round(v8 + v15);
        *(double *)(v6 + 64) = v17;
        *(double *)(v6 + 72) = v17;
        *(double *)(v6 + 80) = v16;
        *(double *)(v6 + 88) = v16;
        v18 = round(v8 + v15 * 0.0);
        *(double *)(v6 + 96) = v18;
      }
      *(double *)(v6 + 104) = v18;
      *(double *)(v6 + 112) = v16;
      *(double *)(v6 + 120) = v16;
    }
    else if (v2 == 128)
    {
      return MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256055D60);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_23362AF00;
      if (qword_256041D58 != -1)
        swift_once();
      v48 = v4 * (v5 * *(double *)&qword_256055D00);
      v49 = v48;
      if (qword_256041D60 != -1)
      {
        v65 = v4 * (v5 * *(double *)&qword_256055D00);
        swift_once();
        v48 = v65;
        v49 = v4 * (v5 * *(double *)&qword_256055D00);
      }
      v50 = v4 * (v5 * *(double *)&qword_256055D08);
      v51 = (v3 - (v48 + v48 + v50)) * 0.5;
      v52 = v48 + (v50 + v51) * 0.0;
      v53 = v48 + v50 + v51;
      v54 = round(v51);
      *(double *)(v6 + 32) = round(v52);
      *(double *)(v6 + 40) = round(v53);
      *(double *)(v6 + 48) = v54;
      *(double *)(v6 + 56) = v54;
      v55 = (v3 - (v50 + v49 + v49)) * 0.5;
      v56 = v50 + v55;
      v57 = round(v55);
      v58 = round(v49 + v56);
      *(double *)(v6 + 64) = v58;
      *(double *)(v6 + 72) = v58;
      *(double *)(v6 + 80) = v57;
      *(double *)(v6 + 88) = v57;
      v59 = round(v49 + v56 * 0.0);
      *(double *)(v6 + 96) = v59;
      *(double *)(v6 + 104) = v59;
      *(double *)(v6 + 112) = v57;
      *(double *)(v6 + 120) = v57;
      *(double *)(v6 + 128) = v58;
      *(double *)(v6 + 136) = v59;
      *(double *)(v6 + 144) = v57;
      *(double *)(v6 + 152) = v57;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256055D60);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_233623D50;
    if ((v2 & 1) != 0)
    {
      if (qword_256041D58 != -1)
        swift_once();
      v40 = v4 * (v5 * *(double *)&qword_256055D00);
      v41 = v40;
      if (qword_256041D60 != -1)
      {
        v64 = v4 * (v5 * *(double *)&qword_256055D00);
        swift_once();
        v40 = v64;
        v41 = v4 * (v5 * *(double *)&qword_256055D00);
      }
      v42 = v4 * (v5 * *(double *)&qword_256055D08);
      v43 = (v3 - (v40 + v40 + v42)) * 0.5;
      v44 = v40 + v42 + v43;
      v45 = round(v43);
      v46 = round(v44);
      *(double *)(v6 + 32) = v46;
      *(double *)(v6 + 40) = v46;
      *(double *)(v6 + 48) = v45;
      *(double *)(v6 + 56) = v45;
      v26 = (v3 - (v42 + v41 + v41)) * 0.5;
      v29 = round(v41 + (v42 + v26) * 0.0);
      *(double *)(v6 + 64) = v29;
    }
    else
    {
      if (qword_256041D58 != -1)
        swift_once();
      v19 = v4 * (v5 * *(double *)&qword_256055D00);
      v20 = v19;
      if (qword_256041D60 != -1)
      {
        v62 = v4 * (v5 * *(double *)&qword_256055D00);
        swift_once();
        v19 = v62;
        v20 = v4 * (v5 * *(double *)&qword_256055D00);
      }
      v21 = v4 * (v5 * *(double *)&qword_256055D08);
      v22 = (v3 - (v19 + v19 + v21)) * 0.5;
      v23 = v19 + (v21 + v22) * 0.0;
      v24 = v19 + v21 + v22;
      v25 = round(v22);
      *(double *)(v6 + 32) = round(v23);
      *(double *)(v6 + 40) = round(v24);
      *(double *)(v6 + 48) = v25;
      *(double *)(v6 + 56) = v25;
      v26 = (v3 - (v21 + v20 + v20)) * 0.5;
      v27 = v21 + v26;
      v28 = v20 + v27;
      v29 = round(v20 + v27 * 0.0);
      *(double *)(v6 + 64) = round(v28);
    }
    *(double *)(v6 + 72) = v29;
    v47 = round(v26);
    *(double *)(v6 + 80) = v47;
    *(double *)(v6 + 88) = v47;
  }
  return v6;
}

CGFloat sub_23357B290(CGImage *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  int v11;
  double Width;
  double Height;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v11 = *(unsigned __int8 *)(v5 + 113);
  Width = (double)(uint64_t)CGImageGetWidth(a1);
  Height = (double)(uint64_t)CGImageGetHeight(a1);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  v14 = CGRectGetWidth(v20) / Width;
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  v15 = CGRectGetHeight(v21) / Height;
  if (v15 >= v14)
    v16 = v14;
  else
    v16 = v15;
  if (v14 > v15)
    v15 = v14;
  if (!v11)
    v15 = v16;
  v17 = v15 * Width;
  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  v18 = CGRectGetWidth(v22) - v17;
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  CGRectGetHeight(v23);
  return v18 * 0.5 + a2;
}

_QWORD *sub_23357B390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void **v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = (void **)(swift_bridgeObjectRetain() + 64);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = (uint64_t)*(v3 - 4);
    v6 = (unint64_t)*(v3 - 3);
    v7 = *v3;
    sub_2331D1374(v5, v6);
    v8 = v7;
    v9 = sub_233194FB8(a2);
    v10 = createOrderImageSourceWithData(_:_:)(v5, v6, v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      v11 = v8;
      sub_23316BEA4(v5, v6);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_2334A569C(0, v4[2] + 1, 1, v4);
      v13 = v4[2];
      v12 = v4[3];
      if (v13 >= v12 >> 1)
        v4 = sub_2334A569C((_QWORD *)(v12 > 1), v13 + 1, 1, v4);
      v4[2] = v13 + 1;
      v14 = &v4[2 * v13];
      v14[4] = v10;
      v14[5] = v7;
    }
    else
    {
      sub_23316BEA4(v5, v6);

    }
    v3 += 5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_23357B4F8(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v2;
  id *v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  CGImageSource *v9;
  CGImageRef ThumbnailAtIndex;
  CGImageRef v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = (id *)(swift_bridgeObjectRetain() + 40);
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v7 = *(v4 - 1);
    v6 = *v4;
    v8 = *v4;
    v9 = v7;
    ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v9, 0, a2);
    if (ThumbnailAtIndex)
    {
      v11 = ThumbnailAtIndex;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_2334A5688(0, v5[2] + 1, 1, v5);
      v13 = v5[2];
      v12 = v5[3];
      if (v13 >= v12 >> 1)
        v5 = sub_2334A5688((_QWORD *)(v12 > 1), v13 + 1, 1, v5);
      v5[2] = v13 + 1;
      v14 = &v5[2 * v13];
      v14[4] = v11;
      v14[5] = v6;
    }
    else
    {

    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_23357B620(CGContext *a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  const __CFURL *v22;
  CGPDFDocument *v23;
  CGPDFPage *v24;
  double v25;
  CGContext *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  CGContextRef v31;
  CGRect BoxRect;

  v31 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D340();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_23361E12C();
  v17 = objc_msgSend(v15, sel_bundleWithIdentifier_, v16);

  if (!v17)
  {
    __break(1u);
    return;
  }
  v18 = (void *)sub_23361E12C();
  v19 = (void *)sub_23361E12C();
  v20 = objc_msgSend(v17, sel_URLForResource_withExtension_, v18, v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_11;
  }
  sub_23361D2D4();

  v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v7, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_11:
    sub_2331A046C((uint64_t)v7);
    sub_23357C4D4();
    swift_allocError();
    *v27 = 4;
    swift_willThrow();
    return;
  }
  v21(v14, v7, v8);
  v22 = (const __CFURL *)sub_23361D268();
  v23 = CGPDFDocumentCreateWithURL(v22);

  if (v23 && (v24 = CGPDFDocumentGetPage(v23, 1uLL), v23, v24))
  {
    BoxRect = CGPDFPageGetBoxRect(v24, kCGPDFCropBox);
    v25 = a2 / BoxRect.size.width;
    if (a3 / BoxRect.size.height < a2 / BoxRect.size.width)
      v25 = a3 / BoxRect.size.height;
    v26 = v31;
    CGContextScaleCTM(v31, v25, v25);
    CGContextDrawPDFPage(v26, v24);
    if (CGBitmapContextCreateImage(v26))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);

      return;
    }
    sub_23357C4D4();
    swift_allocError();
    *v29 = 4;
    swift_willThrow();

  }
  else
  {
    sub_23357C4D4();
    swift_allocError();
    *v28 = 4;
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_23357B9A4(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  size_t v5;
  uint64_t v6;
  uint64_t inited;
  char v8;
  char v9;
  char v10;
  double v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  double v18;
  double v19;
  CGContext *v21;
  CGContext *v22;
  void *v23;
  id v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  const __CFDictionary *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CGContext *v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v46;
  _BYTE *v47;
  char v48;
  char v49;
  _QWORD v50[14];
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;

  v13 = *((unsigned __int8 *)a2 + 24);
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
    v15 = 0;
  else
    v15 = v13 == 0;
  if (v15)
  {
    sub_23357C4D4();
    swift_allocError();
    *v43 = 3;
LABEL_25:
    swift_willThrow();
    return inited;
  }
  v18 = a3 * a5;
  if (a3 > a4)
    v19 = a3;
  else
    v19 = a4;
  if (v18 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v11 = a4 * a5;
  if ((*(_QWORD *)&v18 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (COERCE_UNSIGNED_INT64(a4 * a5) & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_31;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v11 < 9.22337204e18)
  {
    v6 = a1;
    v12 = *a2;
    v9 = *((_BYTE *)a2 + 8);
    v10 = *((_BYTE *)a2 + 9);
    v8 = *((_BYTE *)a2 + 10);
    v5 = (uint64_t)v18;
    v56 = a2[2];
    inited = (uint64_t)v11;
    if (qword_256041D48 == -1)
      goto LABEL_17;
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  swift_once();
LABEL_17:
  v21 = CGBitmapContextCreate(0, v5, inited, 8uLL, 0, (CGColorSpaceRef)qword_256055CF0, 1u);
  if (!v21)
  {
    sub_23357C4D4();
    swift_allocError();
    *v44 = 0;
    goto LABEL_25;
  }
  v22 = v21;
  CGContextSetInterpolationQuality(v21, kCGInterpolationHigh);
  if (v14)
  {
    v49 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256044F00);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_233623D60;
    v23 = (void *)*MEMORY[0x24BDD97D0];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD97D0];
    *(_BYTE *)(inited + 40) = 0;
    v24 = v23;
    v25 = sub_23315FC10(inited);
    v26 = sub_23357B390(v6, v25);
    swift_bridgeObjectRelease();
    if (v26[2])
    {
      v48 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256044228);
      v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_23362AF00;
      v28 = MEMORY[0x24BEE1328];
      *(_QWORD *)(v27 + 32) = v24;
      *(_BYTE *)(v27 + 40) = 0;
      v29 = (void *)*MEMORY[0x24BDD9778];
      *(_QWORD *)(v27 + 64) = v28;
      *(_QWORD *)(v27 + 72) = v29;
      *(_BYTE *)(v27 + 80) = 1;
      v30 = (void *)*MEMORY[0x24BDD9788];
      *(_QWORD *)(v27 + 104) = v28;
      *(_QWORD *)(v27 + 112) = v30;
      *(_BYTE *)(v27 + 120) = 1;
      v31 = (void *)*MEMORY[0x24BDD9808];
      *(_QWORD *)(v27 + 144) = v28;
      *(_QWORD *)(v27 + 152) = v31;
      *(_QWORD *)(v27 + 184) = MEMORY[0x24BEE50B0];
      *(double *)(v27 + 160) = v19 * a5;
      v32 = v24;
      v33 = v29;
      v34 = v30;
      v35 = v31;
      sub_23315F804(v27);
      type metadata accessor for CFString(0);
      sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
      v36 = (void *)sub_23361E054();
      swift_bridgeObjectRelease();
      v37 = v36;
      v38 = sub_23357B4F8((uint64_t)v26, v37);
      swift_bridgeObjectRelease();

      v39 = sub_233579AC4((uint64_t)v38);
      v40 = sub_233535068((uint64_t)v38);
      swift_bridgeObjectRelease();
      v41 = qword_256041D50;
      v42 = v22;
      if (v41 != -1)
        swift_once();
      v50[0] = v39;
      v50[1] = v40;
      v50[2] = v42;
      *(double *)&v50[3] = v18;
      *(double *)&v50[4] = v11;
      v50[5] = 0;
      v50[6] = 0;
      *(double *)&v50[7] = v18;
      *(double *)&v50[8] = v11;
      *(double *)&v50[9] = a5;
      *(double *)&v50[10] = a3 / *(double *)&qword_256055CF8;
      v50[11] = v12;
      v50[12] = v56;
      v50[13] = v12;
      v51 = v48;
      v52 = v10;
      v53 = v49;
      v54 = v56;
      v55 = v13;
      inited = (uint64_t)sub_23357A398();

      sub_23357C518((uint64_t)v50);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_23357C4D4();
      swift_allocError();
      *v47 = 2;
      swift_willThrow();

    }
  }
  else
  {
    sub_23357B620(v22, v18, v11);
    inited = v46;

  }
  return inited;
}

unint64_t sub_23357BE98()
{
  unint64_t result;

  result = qword_256055D18;
  if (!qword_256055D18)
  {
    result = MEMORY[0x234934494](&unk_23365ECF4, &type metadata for ThumbnailImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055D18);
  }
  return result;
}

unint64_t sub_23357BEE0()
{
  unint64_t result;

  result = qword_256055D38;
  if (!qword_256055D38)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailBuilderError, &type metadata for ThumbnailBuilderError);
    atomic_store(result, (unint64_t *)&qword_256055D38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ThumbnailBuilderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23357BF70 + 4 * byte_23365EA99[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23357BFA4 + 4 * byte_23365EA94[v4]))();
}

uint64_t sub_23357BFA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23357BFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23357BFB4);
  return result;
}

uint64_t sub_23357BFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23357BFC8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23357BFCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23357BFD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailBuilderError()
{
  return &type metadata for ThumbnailBuilderError;
}

void destroy for ThumbnailImage(uint64_t a1)
{
  sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for ThumbnailImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_2331D1374(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for ThumbnailImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = a2[1];
  sub_2331D1374(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23316BEA4(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = (void *)a1[4];
  v9 = (void *)a2[4];
  a1[4] = (uint64_t)v9;
  v10 = v9;

  return a1;
}

uint64_t assignWithTake for ThumbnailImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23316BEA4(v4, v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for ThumbnailImage(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ThumbnailImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailImage()
{
  return &type metadata for ThumbnailImage;
}

ValueMetadata *type metadata accessor for ThumbnailBuilder()
{
  return &type metadata for ThumbnailBuilder;
}

uint64_t storeEnumTagSinglePayload for ThumbnailImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23357C250 + 4 * byte_23365EAA3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23357C284 + 4 * byte_23365EA9E[v4]))();
}

uint64_t sub_23357C284(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23357C28C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23357C294);
  return result;
}

uint64_t sub_23357C2A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23357C2A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23357C2AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23357C2B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailImage.CodingKeys()
{
  return &type metadata for ThumbnailImage.CodingKeys;
}

unint64_t sub_23357C2D4()
{
  unint64_t result;

  result = qword_256055D40;
  if (!qword_256055D40)
  {
    result = MEMORY[0x234934494](&unk_23365ECCC, &type metadata for ThumbnailImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055D40);
  }
  return result;
}

unint64_t sub_23357C31C()
{
  unint64_t result;

  result = qword_256055D48;
  if (!qword_256055D48)
  {
    result = MEMORY[0x234934494](&unk_23365EC3C, &type metadata for ThumbnailImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055D48);
  }
  return result;
}

unint64_t sub_23357C364()
{
  unint64_t result;

  result = qword_256055D50;
  if (!qword_256055D50)
  {
    result = MEMORY[0x234934494](&unk_23365EC64, &type metadata for ThumbnailImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055D50);
  }
  return result;
}

uint64_t sub_23357C3A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23357C4D4()
{
  unint64_t result;

  result = qword_256055D58;
  if (!qword_256055D58)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailBuilderError, &type metadata for ThumbnailBuilderError);
    atomic_store(result, (unint64_t *)&qword_256055D58);
  }
  return result;
}

uint64_t sub_23357C518(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t ApplePayTransactionInfo.init(transactionIdentifier:privateKey:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v4;
  uint64_t v5;

  *a3 = *a1;
  v4 = (char *)a3 + *(int *)(type metadata accessor for ApplePayTransactionInfo() + 20);
  v5 = sub_23361E000();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
}

uint64_t type metadata accessor for ApplePayTransactionInfo()
{
  uint64_t result;

  result = qword_256055DE8;
  if (!qword_256055DE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ApplePayTransactionInfo.seal(using:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v29[1] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D8F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361DF04();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v29 - v10;
  sub_23361D928();
  swift_allocObject();
  v12 = sub_23361D91C();
  type metadata accessor for ApplePayTransactionInfo();
  sub_233167C58(&qword_256055D68, (uint64_t (*)(uint64_t))type metadata accessor for ApplePayTransactionInfo, (uint64_t)&protocol conformance descriptor for ApplePayTransactionInfo);
  v32 = v12;
  v13 = sub_23361D910();
  if (v1)
  {
    if (qword_254246760 != -1)
      swift_once();
    v15 = sub_23361DB80();
    __swift_project_value_buffer(v15, (uint64_t)qword_254246748);
    v16 = v1;
    v17 = v1;
    v18 = sub_23361DB68();
    v19 = sub_23361E768();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v20 = 138412290;
      v22 = v1;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      v30 = v23;
      sub_23361EBC4();
      *v21 = v23;

      _os_log_impl(&dword_233151000, v18, v19, "Failed to encode transaction info with error: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v21, -1, -1);
      MEMORY[0x234934590](v20, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    return (uint64_t)v18;
  }
  v24 = v13;
  v25 = v14;
  v30 = v13;
  v31 = v14;
  v26 = sub_23361DEE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v4, 1, 1, v26);
  sub_2331D1374(v24, v25);
  sub_2332640A8();
  sub_23361DED4();
  sub_2333E3614((uint64_t)v4);
  sub_23316BEA4(v30, v31);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v9, v5);
  result = sub_23361DEEC();
  if (v28 >> 60 != 15)
  {
    v18 = result;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    sub_23316BEA4(v24, v25);
    swift_release();
    return (uint64_t)v18;
  }
  __break(1u);
  return result;
}

uint64_t static ApplePayTransactionInfo.open(combined:using:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[8];

  v5 = sub_23361DF04();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v25 - v10;
  sub_2331D1374(a1, a2);
  sub_23357D188(a1, a2);
  if (v2)
  {
    if (qword_254246760 != -1)
      swift_once();
    v12 = sub_23361DB80();
    __swift_project_value_buffer(v12, (uint64_t)qword_254246748);
    v13 = v2;
    v14 = v2;
    v15 = sub_23361DB68();
    v16 = sub_23361E768();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v19 = v2;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      v25[7] = v20;
      sub_23361EBC4();
      *v18 = v20;

      _os_log_impl(&dword_233151000, v15, v16, "Failed to create sealed box from combined data with error: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v18, -1, -1);
      MEMORY[0x234934590](v17, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v9, v5);
    v21 = sub_23361DEC8();
    v23 = v22;
    sub_23361D904();
    swift_allocObject();
    sub_2331D1374(v21, v23);
    sub_23361D8F8();
    type metadata accessor for ApplePayTransactionInfo();
    sub_233167C58(&qword_256055D70, (uint64_t (*)(uint64_t))type metadata accessor for ApplePayTransactionInfo, (uint64_t)&protocol conformance descriptor for ApplePayTransactionInfo);
    sub_23361D8EC();
    swift_release();
    sub_23316BEA4(v21, v23);
    sub_23316BEA4(v21, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

void sub_23357D188(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23357D1C4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (BYTE6(v0) > 0x1BuLL)
  {
    sub_2331D1374(v1, v0);
    sub_2332C5A68(v1, v0);
    sub_23361DEF8();
  }
  else
  {
    v2 = sub_23361DE20();
    sub_233167C58(&qword_256055E38, (uint64_t (*)(uint64_t))MEMORY[0x24BDC61A8], MEMORY[0x24BDC61C0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x24BDC61A0], v2);
    swift_willThrow();
  }
  return sub_23316BEA4(v1, v0);
}

uint64_t ApplePayTransactionInfo.transactionIdentifier.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2331D1374(v2, v3);
}

uint64_t ApplePayTransactionInfo.transactionIdentifier.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_23316BEA4(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*ApplePayTransactionInfo.transactionIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ApplePayTransactionInfo.privateKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ApplePayTransactionInfo() + 20);
  v4 = sub_23361E000();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ApplePayTransactionInfo.privateKey.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ApplePayTransactionInfo() + 20);
  v4 = sub_23361E000();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ApplePayTransactionInfo.privateKey.modify())(_QWORD)
{
  type metadata accessor for ApplePayTransactionInfo();
  return nullsub_1;
}

uint64_t sub_23357D3CC(char *a1, char *a2)
{
  return sub_2332268D8(*a1, *a2);
}

uint64_t sub_23357D3D8()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23357D460()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23357D4C4()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23357D548@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23357D5A4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000015;
  if (*v1)
    v2 = 0x4B65746176697270;
  v3 = 0x8000000233669D30;
  if (*v1)
    v3 = 0xEA00000000007965;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23357D5EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x4B65746176697270;
  else
    return 0xD000000000000015;
}

uint64_t sub_23357D630@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23357D690()
{
  sub_23357DB48();
  return sub_23361F428();
}

uint64_t sub_23357D6B8()
{
  sub_23357DB48();
  return sub_23361F434();
}

uint64_t ApplePayTransactionInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  v26 = a2;
  v25 = sub_23361E000();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055D78);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ApplePayTransactionInfo();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23357DB48();
  v27 = v8;
  v13 = v30;
  sub_23361F3EC();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  v30 = v6;
  v24 = v9;
  v14 = v11;
  v33 = 0;
  sub_2331A6B08();
  v16 = v27;
  v15 = v28;
  sub_23361F068();
  v18 = v31;
  v17 = v32;
  *(_QWORD *)v14 = v31;
  *((_QWORD *)v14 + 1) = v17;
  v33 = 1;
  v19 = v17;
  sub_2331D1374(v18, v17);
  sub_23361F068();
  v23 = v18;
  v20 = v31;
  v21 = v32;
  sub_2331D1374(v31, v32);
  sub_23361DFE8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v15);
  sub_23316BEA4(v23, v19);
  sub_23316BEA4(v20, v21);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v14[*(int *)(v24 + 20)], v5, v25);
  sub_23357DB8C((uint64_t)v14, v26);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return sub_233264028((uint64_t)v14);
}

uint64_t ApplePayTransactionInfo.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  char v14;
  __int128 v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055D88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23357DB48();
  sub_23361F410();
  v15 = *v3;
  v14 = 0;
  sub_2331A6BA8();
  sub_23361F17C();
  if (!v2)
  {
    type metadata accessor for ApplePayTransactionInfo();
    v9 = MEMORY[0x234932340]();
    v11 = v10;
    *(_QWORD *)&v15 = v9;
    *((_QWORD *)&v15 + 1) = v10;
    v14 = 1;
    sub_23361F17C();
    sub_23316BEA4(v9, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23357DB20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ApplePayTransactionInfo.init(from:)(a1, a2);
}

uint64_t sub_23357DB34(_QWORD *a1)
{
  return ApplePayTransactionInfo.encode(to:)(a1);
}

unint64_t sub_23357DB48()
{
  unint64_t result;

  result = qword_256055D80;
  if (!qword_256055D80)
  {
    result = MEMORY[0x234934494](&unk_23365EEEC, &type metadata for ApplePayTransactionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055D80);
  }
  return result;
}

uint64_t sub_23357DB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplePayTransactionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ApplePayTransactionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_2331D1374(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23361E000();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for ApplePayTransactionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361E000();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *initializeWithCopy for ApplePayTransactionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[1];
  sub_2331D1374(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23361E000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *assignWithCopy for ApplePayTransactionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_2331D1374(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_23316BEA4(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23361E000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for ApplePayTransactionInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23361E000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *assignWithTake for ApplePayTransactionInfo(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23316BEA4(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23361E000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplePayTransactionInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23357DE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_23361E000();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ApplePayTransactionInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23357DF24(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_23361E000();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23357DFA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361E000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ApplePayTransactionInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23357E060 + 4 * byte_23365ED55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23357E094 + 4 * byte_23365ED50[v4]))();
}

uint64_t sub_23357E094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23357E09C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23357E0A4);
  return result;
}

uint64_t sub_23357E0B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23357E0B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23357E0BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23357E0C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplePayTransactionInfo.CodingKeys()
{
  return &type metadata for ApplePayTransactionInfo.CodingKeys;
}

unint64_t sub_23357E0E4()
{
  unint64_t result;

  result = qword_256055E20;
  if (!qword_256055E20)
  {
    result = MEMORY[0x234934494](&unk_23365EEC4, &type metadata for ApplePayTransactionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055E20);
  }
  return result;
}

unint64_t sub_23357E12C()
{
  unint64_t result;

  result = qword_256055E28;
  if (!qword_256055E28)
  {
    result = MEMORY[0x234934494](&unk_23365EDFC, &type metadata for ApplePayTransactionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055E28);
  }
  return result;
}

unint64_t sub_23357E174()
{
  unint64_t result;

  result = qword_256055E30;
  if (!qword_256055E30)
  {
    result = MEMORY[0x234934494](&unk_23365EE24, &type metadata for ApplePayTransactionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055E30);
  }
  return result;
}

uint64_t static ThumbnailOptions.ContentMode.contentMode(for:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 24) != 1;
  return result;
}

uint64_t static ThumbnailOptions.LayoutDirection.layoutDirection(for:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

double ThumbnailOptions.init(cornerRadius:colorScheme:contentMode:layoutDirection:maxImages:showFallback:)@<D0>(double *a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  double result;
  char v8;
  char v9;
  char v10;

  result = *a1;
  v8 = *a2;
  v9 = *a3;
  v10 = *a4;
  *(double *)a7 = *a1;
  *(_BYTE *)(a7 + 8) = v8;
  *(_BYTE *)(a7 + 9) = v9;
  *(_BYTE *)(a7 + 10) = v10;
  *(_QWORD *)(a7 + 16) = a5;
  *(_BYTE *)(a7 + 24) = a6;
  return result;
}

void ThumbnailOptions.backgroundColor.getter()
{
  __asm { BR              X10 }
}

CGColor *sub_23357E230()
{
  CGColor *SRGB;
  CGColorRef CopyByMatchingToColorSpace;

  SRGB = CGColorCreateSRGB(0.17254902, 0.17254902, 0.180392157, 1.0);
  if (qword_256041D88 != -1)
    swift_once();
  CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace((CGColorSpaceRef)qword_256055E60, kCGRenderingIntentPerceptual, SRGB, 0);
  if (CopyByMatchingToColorSpace)
  {

    return CopyByMatchingToColorSpace;
  }
  return SRGB;
}

void ThumbnailOptions.itemBackgroundColor.getter()
{
  __asm { BR              X10 }
}

CGColor *sub_23357E300()
{
  CGColor *SRGB;
  CGColorRef CopyByMatchingToColorSpace;

  SRGB = CGColorCreateSRGB(0.109803922, 0.109803922, 0.117647059, 1.0);
  if (qword_256041D88 != -1)
    swift_once();
  CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace((CGColorSpaceRef)qword_256055E60, kCGRenderingIntentPerceptual, SRGB, 0);
  if (CopyByMatchingToColorSpace)
  {

    return CopyByMatchingToColorSpace;
  }
  return SRGB;
}

BOOL static ThumbnailOptions.ContentMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_23357E3C8()
{
  qword_256055E40 = 0x4018000000000000;
}

double static ThumbnailOptions.CornerRadius.regular.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_23357E478(&qword_256041D68, (double *)&qword_256055E40, a1);
}

void sub_23357E3F4()
{
  qword_256055E48 = 0x4024000000000000;
}

double static ThumbnailOptions.CornerRadius.notification.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_23357E478(&qword_256041D70, (double *)&qword_256055E48, a1);
}

void sub_23357E420()
{
  qword_256055E50 = 0x4020000000000000;
}

double static ThumbnailOptions.CornerRadius.spotlight.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_23357E478(&qword_256041D78, (double *)&qword_256055E50, a1);
}

void sub_23357E44C()
{
  qword_256055E58 = 0x4020000000000000;
}

double static ThumbnailOptions.CornerRadius.wallet.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_23357E478(&qword_256041D80, (double *)&qword_256055E58, a1);
}

double sub_23357E478@<D0>(_QWORD *a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once();
  result = *a2;
  *a3 = *(_QWORD *)a2;
  return result;
}

BOOL static ThumbnailOptions.CornerRadius.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23357E4CC()
{
  return 0x65756C6176;
}

uint64_t sub_23357E4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23357E56C()
{
  sub_233580020();
  return sub_23361F428();
}

uint64_t sub_23357E594()
{
  sub_233580020();
  return sub_23361F434();
}

uint64_t ThumbnailOptions.CornerRadius.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055E68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233580020();
  sub_23361F410();
  v9[1] = v7;
  sub_2332901D0();
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ThumbnailOptions.CornerRadius.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055E78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233580020();
  sub_23361F3EC();
  if (!v2)
  {
    sub_2332905F4();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_23357E7D4(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23357E7E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ThumbnailOptions.CornerRadius.init(from:)(a1, a2);
}

uint64_t sub_23357E7FC(_QWORD *a1)
{
  return ThumbnailOptions.CornerRadius.encode(to:)(a1);
}

BOOL static ThumbnailOptions.ColorScheme.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ThumbnailOptions.ColorScheme.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_23357E84C()
{
  sub_2335800A8();
  return sub_23361F428();
}

uint64_t sub_23357E874()
{
  sub_2335800A8();
  return sub_23361F434();
}

uint64_t sub_23357E89C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23357E8C8 + 4 * byte_23365EF78[*v0]))(0x746867696CLL, 0xE500000000000000);
}

uint64_t sub_23357E8C8()
{
  return 1802658148;
}

uint64_t sub_23357E8D8()
{
  return 0x6C61727475656ELL;
}

uint64_t sub_23357E8F0()
{
  return 0x6465746E65636361;
}

uint64_t sub_23357E908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233581A5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23357E92C()
{
  sub_233580064();
  return sub_23361F428();
}

uint64_t sub_23357E954()
{
  sub_233580064();
  return sub_23361F434();
}

uint64_t sub_23357E97C()
{
  sub_233580130();
  return sub_23361F428();
}

uint64_t sub_23357E9A4()
{
  sub_233580130();
  return sub_23361F434();
}

uint64_t sub_23357E9CC()
{
  sub_233580174();
  return sub_23361F428();
}

uint64_t sub_23357E9F4()
{
  sub_233580174();
  return sub_23361F434();
}

uint64_t sub_23357EA1C()
{
  sub_2335800EC();
  return sub_23361F428();
}

uint64_t sub_23357EA44()
{
  sub_2335800EC();
  return sub_23361F434();
}

void ThumbnailOptions.ColorScheme.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055E80);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055E88);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055E90);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055E98);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055EA0);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233580064();
  sub_23361F410();
  __asm { BR              X9 }
}

uint64_t sub_23357EC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_233580174();
  sub_23361F0C8();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t ThumbnailOptions.ColorScheme.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t ThumbnailOptions.ColorScheme.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055ED0);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055ED8);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055EE0);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055EE8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055EF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_233580064();
  v15 = v28;
  sub_23361F3EC();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23361F098();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23361EE10();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v19 = &type metadata for ThumbnailOptions.ColorScheme;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_23357F220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ThumbnailOptions.ColorScheme.init(from:)(a1, a2);
}

void sub_23357F234(_QWORD *a1)
{
  ThumbnailOptions.ColorScheme.encode(to:)(a1);
}

uint64_t ThumbnailOptions.ContentMode.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_23357F270()
{
  return 0x6F5464656C616373;
}

uint64_t sub_23357F2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233581BFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23357F2CC()
{
  sub_2335801B8();
  return sub_23361F428();
}

uint64_t sub_23357F2F4()
{
  sub_2335801B8();
  return sub_23361F434();
}

uint64_t sub_23357F31C()
{
  sub_2335801FC();
  return sub_23361F428();
}

uint64_t sub_23357F344()
{
  sub_2335801FC();
  return sub_23361F434();
}

uint64_t sub_23357F36C()
{
  sub_233580240();
  return sub_23361F428();
}

uint64_t sub_23357F394()
{
  sub_233580240();
  return sub_23361F434();
}

uint64_t ThumbnailOptions.ContentMode.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055EF8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F00);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F08);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335801B8();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2335801FC();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_233580240();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t ThumbnailOptions.ContentMode.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F28);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F30);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F38);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335801B8();
  v11 = v33;
  sub_23361F3EC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23361F098();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23361EE10();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v21 = &type metadata for ThumbnailOptions.ContentMode;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2335801FC();
    sub_23361EFA8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_233580240();
    v22 = v6;
    sub_23361EFA8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23357F8EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ThumbnailOptions.ContentMode.init(from:)(a1, a2);
}

uint64_t sub_23357F900(_QWORD *a1)
{
  return ThumbnailOptions.ContentMode.encode(to:)(a1);
}

uint64_t sub_23357F914()
{
  _BYTE *v0;

  if (*v0)
    return 0x4C6F547468676972;
  else
    return 0x69526F547466656CLL;
}

uint64_t sub_23357F958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233581D14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23357F97C()
{
  sub_233580284();
  return sub_23361F428();
}

uint64_t sub_23357F9A4()
{
  sub_233580284();
  return sub_23361F434();
}

uint64_t sub_23357F9CC()
{
  sub_23358030C();
  return sub_23361F428();
}

uint64_t sub_23357F9F4()
{
  sub_23358030C();
  return sub_23361F434();
}

uint64_t sub_23357FA1C()
{
  sub_2335802C8();
  return sub_23361F428();
}

uint64_t sub_23357FA44()
{
  sub_2335802C8();
  return sub_23361F434();
}

uint64_t ThumbnailOptions.LayoutDirection.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F40);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F48);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F50);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233580284();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2335802C8();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23358030C();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t ThumbnailOptions.LayoutDirection.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F70);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F78);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233580284();
  v11 = v33;
  sub_23361F3EC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23361F098();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23361EE10();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v21 = &type metadata for ThumbnailOptions.LayoutDirection;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2335802C8();
    sub_23361EFA8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23358030C();
    v22 = v6;
    sub_23361EFA8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23357FF9C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ThumbnailOptions.LayoutDirection.init(from:)(a1, a2);
}

uint64_t sub_23357FFB0(_QWORD *a1)
{
  return ThumbnailOptions.LayoutDirection.encode(to:)(a1);
}

double ThumbnailOptions.cornerRadius.getter@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

void ThumbnailOptions.colorScheme.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

void ThumbnailOptions.contentMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

void ThumbnailOptions.layoutDirection.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 10);
}

uint64_t ThumbnailOptions.maxImages.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ThumbnailOptions.showFallback.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

CGColorSpaceRef sub_233580004()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateDeviceRGB();
  qword_256055E60 = (uint64_t)result;
  return result;
}

unint64_t sub_233580020()
{
  unint64_t result;

  result = qword_256055E70;
  if (!qword_256055E70)
  {
    result = MEMORY[0x234934494](&unk_23365FE1C, &type metadata for ThumbnailOptions.CornerRadius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055E70);
  }
  return result;
}

unint64_t sub_233580064()
{
  unint64_t result;

  result = qword_256055EA8;
  if (!qword_256055EA8)
  {
    result = MEMORY[0x234934494](&unk_23365FDCC, &type metadata for ThumbnailOptions.ColorScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055EA8);
  }
  return result;
}

unint64_t sub_2335800A8()
{
  unint64_t result;

  result = qword_256055EB0;
  if (!qword_256055EB0)
  {
    result = MEMORY[0x234934494](&unk_23365FD7C, &type metadata for ThumbnailOptions.ColorScheme.AccentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055EB0);
  }
  return result;
}

unint64_t sub_2335800EC()
{
  unint64_t result;

  result = qword_256055EB8;
  if (!qword_256055EB8)
  {
    result = MEMORY[0x234934494](&unk_23365FD2C, &type metadata for ThumbnailOptions.ColorScheme.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055EB8);
  }
  return result;
}

unint64_t sub_233580130()
{
  unint64_t result;

  result = qword_256055EC0;
  if (!qword_256055EC0)
  {
    result = MEMORY[0x234934494](&unk_23365FCDC, &type metadata for ThumbnailOptions.ColorScheme.DarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055EC0);
  }
  return result;
}

unint64_t sub_233580174()
{
  unint64_t result;

  result = qword_256055EC8;
  if (!qword_256055EC8)
  {
    result = MEMORY[0x234934494](&unk_23365FC8C, &type metadata for ThumbnailOptions.ColorScheme.LightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055EC8);
  }
  return result;
}

unint64_t sub_2335801B8()
{
  unint64_t result;

  result = qword_256055F10;
  if (!qword_256055F10)
  {
    result = MEMORY[0x234934494](&unk_23365FC3C, &type metadata for ThumbnailOptions.ContentMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F10);
  }
  return result;
}

unint64_t sub_2335801FC()
{
  unint64_t result;

  result = qword_256055F18;
  if (!qword_256055F18)
  {
    result = MEMORY[0x234934494](&unk_23365FBEC, &type metadata for ThumbnailOptions.ContentMode.ScaledToFillCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F18);
  }
  return result;
}

unint64_t sub_233580240()
{
  unint64_t result;

  result = qword_256055F20;
  if (!qword_256055F20)
  {
    result = MEMORY[0x234934494](&unk_23365FB9C, &type metadata for ThumbnailOptions.ContentMode.ScaledToFitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F20);
  }
  return result;
}

unint64_t sub_233580284()
{
  unint64_t result;

  result = qword_256055F58;
  if (!qword_256055F58)
  {
    result = MEMORY[0x234934494](&unk_23365FB4C, &type metadata for ThumbnailOptions.LayoutDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F58);
  }
  return result;
}

unint64_t sub_2335802C8()
{
  unint64_t result;

  result = qword_256055F60;
  if (!qword_256055F60)
  {
    result = MEMORY[0x234934494](&unk_23365FAFC, &type metadata for ThumbnailOptions.LayoutDirection.RightToLeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F60);
  }
  return result;
}

unint64_t sub_23358030C()
{
  unint64_t result;

  result = qword_256055F68;
  if (!qword_256055F68)
  {
    result = MEMORY[0x234934494](&unk_23365FAAC, &type metadata for ThumbnailOptions.LayoutDirection.LeftToRightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F68);
  }
  return result;
}

uint64_t sub_233580354()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23358038C + 4 * byte_23365EF84[*v0]))(0x615272656E726F63, 0xEC00000073756964);
}

uint64_t sub_23358038C()
{
  return 0x686353726F6C6F63;
}

uint64_t sub_2335803B0()
{
  return 0x4D746E65746E6F63;
}

uint64_t sub_2335803D0()
{
  return 0x694474756F79616CLL;
}

uint64_t sub_2335803F4()
{
  return 0x6567616D4978616DLL;
}

uint64_t sub_233580410()
{
  return 0x6C6C6146776F6873;
}

uint64_t sub_233580430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233581E24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233580454()
{
  sub_2335809F4();
  return sub_23361F428();
}

uint64_t sub_23358047C()
{
  sub_2335809F4();
  return sub_23361F434();
}

uint64_t ThumbnailOptions.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  char v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055F88);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((unsigned __int8 *)v1 + 8);
  v15 = *((unsigned __int8 *)v1 + 9);
  v16 = v9;
  v14 = *((unsigned __int8 *)v1 + 10);
  v13 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335809F4();
  sub_23361F410();
  v18 = v8;
  v17 = 0;
  sub_233580A38();
  sub_23361F17C();
  if (!v2)
  {
    v10 = v14;
    v11 = v15;
    LOBYTE(v18) = v16;
    v17 = 1;
    sub_233580A7C();
    sub_23361F17C();
    LOBYTE(v18) = v11;
    v17 = 2;
    sub_233580AC0();
    sub_23361F17C();
    LOBYTE(v18) = v10;
    v17 = 3;
    sub_233580B04();
    sub_23361F17C();
    LOBYTE(v18) = 4;
    sub_23361F164();
    LOBYTE(v18) = 5;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ThumbnailOptions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  int v11;
  int v12;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055FB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335809F4();
  sub_23361F3EC();
  if (!v2)
  {
    v18 = 0;
    sub_233580B48();
    sub_23361F068();
    v9 = v19;
    v18 = 1;
    sub_233580B8C();
    sub_23361F068();
    v10 = v19;
    v18 = 2;
    sub_233580BD0();
    sub_23361F068();
    v11 = v19;
    v18 = 3;
    sub_233580C14();
    sub_23361F068();
    v17 = v11;
    v12 = v19;
    LOBYTE(v19) = 4;
    v15 = sub_23361F050();
    v16 = v12;
    LOBYTE(v19) = 5;
    v14 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 9) = v17;
    *(_BYTE *)(a2 + 10) = v16;
    *(_QWORD *)(a2 + 16) = v15;
    *(_BYTE *)(a2 + 24) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233580964@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ThumbnailOptions.init(from:)(a1, a2);
}

uint64_t sub_233580978(_QWORD *a1)
{
  return ThumbnailOptions.encode(to:)(a1);
}

uint64_t _s10FinanceKit16ThumbnailOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  BOOL v3;

  v2 = 0;
  v3 = *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
  if (v3
    && ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 10) ^ *(unsigned __int8 *)(a2 + 10)) & 1) == 0
    && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v2 = *(_BYTE *)(a2 + 24) ^ *(_BYTE *)(a1 + 24) ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_2335809F4()
{
  unint64_t result;

  result = qword_256055F90;
  if (!qword_256055F90)
  {
    result = MEMORY[0x234934494](&unk_23365FA5C, &type metadata for ThumbnailOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055F90);
  }
  return result;
}

unint64_t sub_233580A38()
{
  unint64_t result;

  result = qword_256055F98;
  if (!qword_256055F98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.CornerRadius, &type metadata for ThumbnailOptions.CornerRadius);
    atomic_store(result, (unint64_t *)&qword_256055F98);
  }
  return result;
}

unint64_t sub_233580A7C()
{
  unint64_t result;

  result = qword_256055FA0;
  if (!qword_256055FA0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.ColorScheme, &type metadata for ThumbnailOptions.ColorScheme);
    atomic_store(result, (unint64_t *)&qword_256055FA0);
  }
  return result;
}

unint64_t sub_233580AC0()
{
  unint64_t result;

  result = qword_256055FA8;
  if (!qword_256055FA8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.ContentMode, &type metadata for ThumbnailOptions.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256055FA8);
  }
  return result;
}

unint64_t sub_233580B04()
{
  unint64_t result;

  result = qword_256055FB0;
  if (!qword_256055FB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.LayoutDirection, &type metadata for ThumbnailOptions.LayoutDirection);
    atomic_store(result, (unint64_t *)&qword_256055FB0);
  }
  return result;
}

unint64_t sub_233580B48()
{
  unint64_t result;

  result = qword_256055FC0;
  if (!qword_256055FC0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.CornerRadius, &type metadata for ThumbnailOptions.CornerRadius);
    atomic_store(result, (unint64_t *)&qword_256055FC0);
  }
  return result;
}

unint64_t sub_233580B8C()
{
  unint64_t result;

  result = qword_256055FC8;
  if (!qword_256055FC8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.ColorScheme, &type metadata for ThumbnailOptions.ColorScheme);
    atomic_store(result, (unint64_t *)&qword_256055FC8);
  }
  return result;
}

unint64_t sub_233580BD0()
{
  unint64_t result;

  result = qword_256055FD0;
  if (!qword_256055FD0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.ContentMode, &type metadata for ThumbnailOptions.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256055FD0);
  }
  return result;
}

unint64_t sub_233580C14()
{
  unint64_t result;

  result = qword_256055FD8;
  if (!qword_256055FD8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.LayoutDirection, &type metadata for ThumbnailOptions.LayoutDirection);
    atomic_store(result, (unint64_t *)&qword_256055FD8);
  }
  return result;
}

unint64_t sub_233580C5C()
{
  unint64_t result;

  result = qword_256055FE0;
  if (!qword_256055FE0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.ColorScheme, &type metadata for ThumbnailOptions.ColorScheme);
    atomic_store(result, (unint64_t *)&qword_256055FE0);
  }
  return result;
}

unint64_t sub_233580CA4()
{
  unint64_t result;

  result = qword_256055FE8;
  if (!qword_256055FE8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.ContentMode, &type metadata for ThumbnailOptions.ContentMode);
    atomic_store(result, (unint64_t *)&qword_256055FE8);
  }
  return result;
}

unint64_t sub_233580CEC()
{
  unint64_t result;

  result = qword_256055FF0;
  if (!qword_256055FF0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailOptions.LayoutDirection, &type metadata for ThumbnailOptions.LayoutDirection);
    atomic_store(result, (unint64_t *)&qword_256055FF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ThumbnailOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ThumbnailOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailOptions()
{
  return &type metadata for ThumbnailOptions;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.CornerRadius()
{
  return &type metadata for ThumbnailOptions.CornerRadius;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ColorScheme()
{
  return &type metadata for ThumbnailOptions.ColorScheme;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ContentMode()
{
  return &type metadata for ThumbnailOptions.ContentMode;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.LayoutDirection()
{
  return &type metadata for ThumbnailOptions.LayoutDirection;
}

uint64_t storeEnumTagSinglePayload for ThumbnailOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233580E60 + 4 * byte_23365EF8F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233580E94 + 4 * byte_23365EF8A[v4]))();
}

uint64_t sub_233580E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233580E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233580EA4);
  return result;
}

uint64_t sub_233580EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233580EB8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233580EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233580EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.CodingKeys()
{
  return &type metadata for ThumbnailOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.LayoutDirection.CodingKeys()
{
  return &type metadata for ThumbnailOptions.LayoutDirection.CodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.LayoutDirection.LeftToRightCodingKeys()
{
  return &type metadata for ThumbnailOptions.LayoutDirection.LeftToRightCodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.LayoutDirection.RightToLeftCodingKeys()
{
  return &type metadata for ThumbnailOptions.LayoutDirection.RightToLeftCodingKeys;
}

uint64_t _s10FinanceKit16ThumbnailOptionsV11ContentModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233580F5C + 4 * byte_23365EF99[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233580F90 + 4 * byte_23365EF94[v4]))();
}

uint64_t sub_233580F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233580F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233580FA0);
  return result;
}

uint64_t sub_233580FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233580FB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233580FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233580FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ContentMode.CodingKeys()
{
  return &type metadata for ThumbnailOptions.ContentMode.CodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ContentMode.ScaledToFitCodingKeys()
{
  return &type metadata for ThumbnailOptions.ContentMode.ScaledToFitCodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ContentMode.ScaledToFillCodingKeys()
{
  return &type metadata for ThumbnailOptions.ContentMode.ScaledToFillCodingKeys;
}

uint64_t _s10FinanceKit16ThumbnailOptionsV11ColorSchemeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233581048 + 4 * byte_23365EFA3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23358107C + 4 * byte_23365EF9E[v4]))();
}

uint64_t sub_23358107C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233581084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23358108CLL);
  return result;
}

uint64_t sub_233581098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335810A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2335810A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335810AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ColorScheme.CodingKeys()
{
  return &type metadata for ThumbnailOptions.ColorScheme.CodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ColorScheme.LightCodingKeys()
{
  return &type metadata for ThumbnailOptions.ColorScheme.LightCodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ColorScheme.DarkCodingKeys()
{
  return &type metadata for ThumbnailOptions.ColorScheme.DarkCodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ColorScheme.NeutralCodingKeys()
{
  return &type metadata for ThumbnailOptions.ColorScheme.NeutralCodingKeys;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.ColorScheme.AccentedCodingKeys()
{
  return &type metadata for ThumbnailOptions.ColorScheme.AccentedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ThumbnailOptions.CornerRadius.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233581148 + 4 * byte_23365EFA8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233581168 + 4 * byte_23365EFAD[v4]))();
}

_BYTE *sub_233581148(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233581168(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233581170(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233581178(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233581180(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233581188(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailOptions.CornerRadius.CodingKeys()
{
  return &type metadata for ThumbnailOptions.CornerRadius.CodingKeys;
}

unint64_t sub_2335811A8()
{
  unint64_t result;

  result = qword_256055FF8;
  if (!qword_256055FF8)
  {
    result = MEMORY[0x234934494](&unk_23365F4D4, &type metadata for ThumbnailOptions.CornerRadius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256055FF8);
  }
  return result;
}

unint64_t sub_2335811F0()
{
  unint64_t result;

  result = qword_256056000;
  if (!qword_256056000)
  {
    result = MEMORY[0x234934494](&unk_23365F6CC, &type metadata for ThumbnailOptions.ColorScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056000);
  }
  return result;
}

unint64_t sub_233581238()
{
  unint64_t result;

  result = qword_256056008;
  if (!qword_256056008)
  {
    result = MEMORY[0x234934494](&unk_23365F824, &type metadata for ThumbnailOptions.ContentMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056008);
  }
  return result;
}

unint64_t sub_233581280()
{
  unint64_t result;

  result = qword_256056010;
  if (!qword_256056010)
  {
    result = MEMORY[0x234934494](&unk_23365F97C, &type metadata for ThumbnailOptions.LayoutDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056010);
  }
  return result;
}

unint64_t sub_2335812C8()
{
  unint64_t result;

  result = qword_256056018;
  if (!qword_256056018)
  {
    result = MEMORY[0x234934494](&unk_23365FA34, &type metadata for ThumbnailOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056018);
  }
  return result;
}

unint64_t sub_233581310()
{
  unint64_t result;

  result = qword_256056020;
  if (!qword_256056020)
  {
    result = MEMORY[0x234934494](&unk_23365F9A4, &type metadata for ThumbnailOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056020);
  }
  return result;
}

unint64_t sub_233581358()
{
  unint64_t result;

  result = qword_256056028;
  if (!qword_256056028)
  {
    result = MEMORY[0x234934494](&unk_23365F9CC, &type metadata for ThumbnailOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056028);
  }
  return result;
}

unint64_t sub_2335813A0()
{
  unint64_t result;

  result = qword_256056030;
  if (!qword_256056030)
  {
    result = MEMORY[0x234934494](&unk_23365F89C, &type metadata for ThumbnailOptions.LayoutDirection.LeftToRightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056030);
  }
  return result;
}

unint64_t sub_2335813E8()
{
  unint64_t result;

  result = qword_256056038;
  if (!qword_256056038)
  {
    result = MEMORY[0x234934494](&unk_23365F8C4, &type metadata for ThumbnailOptions.LayoutDirection.LeftToRightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056038);
  }
  return result;
}

unint64_t sub_233581430()
{
  unint64_t result;

  result = qword_256056040;
  if (!qword_256056040)
  {
    result = MEMORY[0x234934494](&unk_23365F84C, &type metadata for ThumbnailOptions.LayoutDirection.RightToLeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056040);
  }
  return result;
}

unint64_t sub_233581478()
{
  unint64_t result;

  result = qword_256056048;
  if (!qword_256056048)
  {
    result = MEMORY[0x234934494](&unk_23365F874, &type metadata for ThumbnailOptions.LayoutDirection.RightToLeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056048);
  }
  return result;
}

unint64_t sub_2335814C0()
{
  unint64_t result;

  result = qword_256056050;
  if (!qword_256056050)
  {
    result = MEMORY[0x234934494](&unk_23365F8EC, &type metadata for ThumbnailOptions.LayoutDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056050);
  }
  return result;
}

unint64_t sub_233581508()
{
  unint64_t result;

  result = qword_256056058;
  if (!qword_256056058)
  {
    result = MEMORY[0x234934494](&unk_23365F914, &type metadata for ThumbnailOptions.LayoutDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056058);
  }
  return result;
}

unint64_t sub_233581550()
{
  unint64_t result;

  result = qword_256056060;
  if (!qword_256056060)
  {
    result = MEMORY[0x234934494](&unk_23365F744, &type metadata for ThumbnailOptions.ContentMode.ScaledToFitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056060);
  }
  return result;
}

unint64_t sub_233581598()
{
  unint64_t result;

  result = qword_256056068;
  if (!qword_256056068)
  {
    result = MEMORY[0x234934494](&unk_23365F76C, &type metadata for ThumbnailOptions.ContentMode.ScaledToFitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056068);
  }
  return result;
}

unint64_t sub_2335815E0()
{
  unint64_t result;

  result = qword_256056070;
  if (!qword_256056070)
  {
    result = MEMORY[0x234934494](&unk_23365F6F4, &type metadata for ThumbnailOptions.ContentMode.ScaledToFillCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056070);
  }
  return result;
}

unint64_t sub_233581628()
{
  unint64_t result;

  result = qword_256056078;
  if (!qword_256056078)
  {
    result = MEMORY[0x234934494](&unk_23365F71C, &type metadata for ThumbnailOptions.ContentMode.ScaledToFillCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056078);
  }
  return result;
}

unint64_t sub_233581670()
{
  unint64_t result;

  result = qword_256056080;
  if (!qword_256056080)
  {
    result = MEMORY[0x234934494](&unk_23365F794, &type metadata for ThumbnailOptions.ContentMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056080);
  }
  return result;
}

unint64_t sub_2335816B8()
{
  unint64_t result;

  result = qword_256056088;
  if (!qword_256056088)
  {
    result = MEMORY[0x234934494](&unk_23365F7BC, &type metadata for ThumbnailOptions.ContentMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056088);
  }
  return result;
}

unint64_t sub_233581700()
{
  unint64_t result;

  result = qword_256056090;
  if (!qword_256056090)
  {
    result = MEMORY[0x234934494](&unk_23365F5EC, &type metadata for ThumbnailOptions.ColorScheme.LightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056090);
  }
  return result;
}

unint64_t sub_233581748()
{
  unint64_t result;

  result = qword_256056098;
  if (!qword_256056098)
  {
    result = MEMORY[0x234934494](&unk_23365F614, &type metadata for ThumbnailOptions.ColorScheme.LightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056098);
  }
  return result;
}

unint64_t sub_233581790()
{
  unint64_t result;

  result = qword_2560560A0;
  if (!qword_2560560A0)
  {
    result = MEMORY[0x234934494](&unk_23365F59C, &type metadata for ThumbnailOptions.ColorScheme.DarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560A0);
  }
  return result;
}

unint64_t sub_2335817D8()
{
  unint64_t result;

  result = qword_2560560A8;
  if (!qword_2560560A8)
  {
    result = MEMORY[0x234934494](&unk_23365F5C4, &type metadata for ThumbnailOptions.ColorScheme.DarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560A8);
  }
  return result;
}

unint64_t sub_233581820()
{
  unint64_t result;

  result = qword_2560560B0;
  if (!qword_2560560B0)
  {
    result = MEMORY[0x234934494](&unk_23365F54C, &type metadata for ThumbnailOptions.ColorScheme.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560B0);
  }
  return result;
}

unint64_t sub_233581868()
{
  unint64_t result;

  result = qword_2560560B8;
  if (!qword_2560560B8)
  {
    result = MEMORY[0x234934494](&unk_23365F574, &type metadata for ThumbnailOptions.ColorScheme.NeutralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560B8);
  }
  return result;
}

unint64_t sub_2335818B0()
{
  unint64_t result;

  result = qword_2560560C0;
  if (!qword_2560560C0)
  {
    result = MEMORY[0x234934494](&unk_23365F4FC, &type metadata for ThumbnailOptions.ColorScheme.AccentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560C0);
  }
  return result;
}

unint64_t sub_2335818F8()
{
  unint64_t result;

  result = qword_2560560C8;
  if (!qword_2560560C8)
  {
    result = MEMORY[0x234934494](&unk_23365F524, &type metadata for ThumbnailOptions.ColorScheme.AccentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560C8);
  }
  return result;
}

unint64_t sub_233581940()
{
  unint64_t result;

  result = qword_2560560D0;
  if (!qword_2560560D0)
  {
    result = MEMORY[0x234934494](&unk_23365F63C, &type metadata for ThumbnailOptions.ColorScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560D0);
  }
  return result;
}

unint64_t sub_233581988()
{
  unint64_t result;

  result = qword_2560560D8;
  if (!qword_2560560D8)
  {
    result = MEMORY[0x234934494](&unk_23365F664, &type metadata for ThumbnailOptions.ColorScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560D8);
  }
  return result;
}

unint64_t sub_2335819D0()
{
  unint64_t result;

  result = qword_2560560E0;
  if (!qword_2560560E0)
  {
    result = MEMORY[0x234934494](&unk_23365F444, &type metadata for ThumbnailOptions.CornerRadius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560E0);
  }
  return result;
}

unint64_t sub_233581A18()
{
  unint64_t result;

  result = qword_2560560E8;
  if (!qword_2560560E8)
  {
    result = MEMORY[0x234934494](&unk_23365F46C, &type metadata for ThumbnailOptions.CornerRadius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560560E8);
  }
  return result;
}

uint64_t sub_233581A5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61727475656ELL && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465746E65636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233581BFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F5464656C616373 && a2 == 0xEB00000000746946;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5464656C616373 && a2 == 0xEC0000006C6C6946)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233581D14(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x69526F547466656CLL && a2 == 0xEB00000000746867 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C6F547468676972 && a2 == 0xEB00000000746665)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233581E24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686353726F6C6F63 && a2 == 0xEB00000000656D65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x694474756F79616CLL && a2 == 0xEF6E6F6974636572 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6567616D4978616DLL && a2 == 0xE900000000000073 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6C6146776F6873 && a2 == 0xEC0000006B636162)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_233582170()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x23493465C](v1);
}

uint64_t sub_233582208()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_233582260(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x23493465C](v5);
  return sub_2333B2350;
}

id BankConnectInstitutionProvider.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_store] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id BankConnectInstitutionProvider.init(store:)(uint64_t a1)
{
  char *v1;
  objc_super v4;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_store] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for BankConnectInstitutionProvider();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for BankConnectInstitutionProvider()
{
  return objc_opt_self();
}

id sub_2335823B8()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  if (qword_254247048 != -1)
    swift_once();
  v0 = *((_QWORD *)off_254247040 + 2);
  v1 = (objc_class *)type metadata accessor for BankConnectInstitutionProvider();
  v2 = (char *)objc_allocWithZone(v1);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_store] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_233582518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v4;
  v13[5] = a1;
  v13[6] = a2;
  v13[7] = a3;
  v13[8] = a4;
  v14 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2333B205C((uint64_t)v11, (uint64_t)&unk_256056110, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23358260C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_23358262C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v6 = *(_OWORD *)(v0 + 32);
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_store)+ 16), sel_newBackgroundContext);
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v1;
  sub_23361E960();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23358270C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23318C26C;
  *(_QWORD *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  return swift_task_switch();
}

void sub_233582784(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, _QWORD))
{
  uint64_t v4;
  id v9;
  unsigned int v10;
  id v11;
  id v12;
  unint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v17[0] = 0;
  v10 = objc_msgSend(a1, sel_setQueryGenerationFromToken_error_, v9, v17);

  v11 = v17[0];
  if (v10)
  {
    type metadata accessor for ManagedInstitution();
    v12 = v11;
    v13 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(a2, a3, (uint64_t)a1);
    if (!v4)
    {
      v14 = (void *)v13;
      if (v13)
      {
        sub_2333FB444();
        v15 = FKInstitution.init(_:)(v14);
      }
      else
      {
        v15 = 0;
      }
      a4(v15, 0);

    }
  }
  else
  {
    v16 = v17[0];
    sub_23361D1B4();

    swift_willThrow();
  }
}

void sub_233582A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_23361D1A8();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id BankConnectInstitutionProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectInstitutionProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectInstitutionProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectInstitutionProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233582B34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC10FinanceKit30BankConnectInstitutionProvider_delegate;
  swift_beginAccess();
  result = MEMORY[0x23493465C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_233582B88()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for BankConnectInstitutionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectInstitutionProvider.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of BankConnectInstitutionProvider.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BankConnectInstitutionProvider.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BankConnectInstitutionProvider.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static BankConnectInstitutionProvider.makeProvider()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BankConnectInstitutionProvider.institution(for:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t sub_233582CB0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_233582CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_233582A34(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233582D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_2331676FC;
  *(_QWORD *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  return swift_task_switch();
}

void sub_233582D94()
{
  uint64_t v0;

  sub_233582784(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(id, _QWORD))(v0 + 40));
}

uint64_t TimeWindow.init(startDate:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for TimeWindow(0);
  return sub_233168580(a2, a3 + *(int *)(v7 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Duration);
}

uint64_t type metadata accessor for TimeWindow(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254246F58);
}

uint64_t TimeWindow.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = sub_23361D748();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D868();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimeWindow(0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCEF50], v2);
  sub_23361D754();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v12, v13);
  __break(1u);
  return result;
}

uint64_t static TimeWindow.== infix(_:_:)()
{
  if ((sub_23361D5E0() & 1) != 0)
  {
    type metadata accessor for TimeWindow(0);
    JUMPOUT(0x234930FF0);
  }
  return 0;
}

uint64_t TimeWindow.Formatter.init(configuration:style:showDateForSingleDayWindow:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t result;

  v6 = *a2;
  sub_233168580(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  result = type metadata accessor for TimeWindow.Formatter(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = v6;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for TimeWindow.Formatter(uint64_t a1)
{
  return sub_233177414(a1, qword_256056260);
}

uint64_t TimeWindow.Formatter.format(_:now:)(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(_QWORD);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  void (**v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  int v64;
  char v65;
  char *v66;
  void (**v67)(char *, uint64_t, uint64_t);
  char v68;
  BOOL v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  uint64_t v102;
  char *v103;
  char v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  uint64_t v141;
  char *v142;
  void (*v143)(char *, uint64_t);
  char *v144;
  void (*v145)(char *, uint64_t);
  unsigned int v146;
  void (*v147)(char *, _QWORD, uint64_t);
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  void (**v173)(char *, uint64_t, uint64_t);
  char *v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;

  v143 = a2;
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256056148);
  MEMORY[0x24BDAC7A8](v129);
  v131 = (uint64_t)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for Order.DateAndTimeFormatter(0);
  MEMORY[0x24BDAC7A8](v128);
  v130 = (uint64_t)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for TimeWindow.SameDayWindowFormatter(0);
  MEMORY[0x24BDAC7A8](v126);
  v127 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256056150);
  MEMORY[0x24BDAC7A8](v133);
  v135 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v132);
  v134 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256056158);
  MEMORY[0x24BDAC7A8](v137);
  v139 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for MonthFormatter();
  MEMORY[0x24BDAC7A8](v136);
  v138 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D49C();
  v164 = *(_QWORD *)(v10 - 8);
  v165 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v163 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v12);
  v162 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_23361D8A4();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v161 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_23361D73C();
  v155 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v158 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v16);
  v157 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v18);
  v153 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v167);
  v151 = (uint64_t)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_23361D508();
  v154 = *(_QWORD *)(v170 - 8);
  v21 = MEMORY[0x24BDAC7A8](v170);
  v152 = (char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v166 = (char *)&v125 - v23;
  v24 = type metadata accessor for Duration();
  MEMORY[0x24BDAC7A8](v24);
  v172 = (uint64_t)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_23361CD40();
  v173 = *(void (***)(char *, uint64_t, uint64_t))(v179 - 8);
  v26 = MEMORY[0x24BDAC7A8](v179);
  v174 = (char *)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v171 = (char *)&v125 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v178 = (char *)&v125 - v30;
  v31 = sub_23361D748();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23361D868();
  v180 = *(_QWORD *)(v35 - 8);
  v181 = v35;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v125 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v149 = (char *)&v125 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v125 - v41;
  v43 = sub_23361D634();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v142 = (char *)&v125 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)&v125 - v47;
  v49 = a1 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
  v50 = *(void (**)(_QWORD))(v32 + 104);
  v146 = *MEMORY[0x24BDCEF50];
  v147 = (void (*)(char *, _QWORD, uint64_t))v50;
  v50(v34);
  sub_23361D754();
  v51 = *(void (**)(char *, uint64_t))(v32 + 8);
  v148 = v34;
  v150 = v31;
  v145 = v51;
  v51(v34, v31);
  v176 = a1;
  sub_23361D808();
  v52 = v44;
  v53 = *(void (**)(char *, uint64_t))(v180 + 8);
  v144 = v37;
  v53(v37, v181);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  result = v54(v42, 1, v43);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v168 = v52;
    v169 = v43;
    v56 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v177 = v48;
    v140 = v56;
    v56(v48, v42, v43);
    v57 = v172;
    sub_2331684BC(v49, v172, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    v58 = v173;
    v59 = v178;
    v60 = v179;
    v173[4](v178, v57, v179);
    sub_23361CCBC();
    LOBYTE(v57) = v61;
    v62 = v58[2];
    v63 = v171;
    v62(v171, (uint64_t)v59, v60);
    v141 = v49;
    if ((v57 & 1) != 0)
    {
      sub_23361CD04();
      v64 = v65 & 1;
    }
    else
    {
      v64 = 0;
    }
    v66 = v174;
    v174 = (char *)v54;
    v67 = (void (**)(char *, uint64_t, uint64_t))v58[1];
    ((void (*)(char *, uint64_t))v67)(v63, v60);
    v62(v66, (uint64_t)v59, v60);
    if (v64)
    {
      sub_23361CD1C();
      v69 = (v68 & 1) == 0;
    }
    else
    {
      v69 = 1;
    }
    ((void (*)(char *, uint64_t))v67)(v66, v60);
    sub_23361CCD4();
    if ((v70 & 1) != 0)
    {
      sub_23361CCEC();
      if ((v104 & 1) != 0)
      {
        sub_23361CC98();
        v110 = v109 | v69;
        v112 = v175;
        v111 = v176;
        v89 = v169;
        if ((v110 & 1) != 0)
        {
          v103 = v177;
          if ((sub_23361D820() & 1) != 0)
          {
            v113 = v127;
            sub_2331684BC((uint64_t)v112, v127, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
            v114 = type metadata accessor for TimeWindow.Formatter(0);
            v115 = *((_BYTE *)v112 + *(int *)(v114 + 24));
            v116 = v126;
            *(_BYTE *)(v113 + *(int *)(v126 + 20)) = *((_BYTE *)v112 + *(int *)(v114 + 20));
            *(_BYTE *)(v113 + *(int *)(v116 + 24)) = v115;
            v102 = sub_233585510(v111, v143);
            v117 = type metadata accessor for TimeWindow.SameDayWindowFormatter;
            v118 = v113;
          }
          else
          {
            v121 = v130;
            sub_2331684BC((uint64_t)v112, v130, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
            v122 = *((_BYTE *)v112 + *(int *)(type metadata accessor for TimeWindow.Formatter(0) + 20));
            v123 = v128;
            *(_BYTE *)(v121 + *(int *)(v128 + 20)) = 0;
            *(_BYTE *)(v121 + *(int *)(v123 + 24)) = v122;
            v124 = v131;
            sub_2331684BC((uint64_t)v112, v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
            sub_2331684BC(v121, v124 + *(int *)(v129 + 36), type metadata accessor for Order.DateAndTimeFormatter);
            v102 = sub_233584E00(v111, (uint64_t)v143, &qword_256056148, Order.DateAndTimeFormatter.format(_:now:));
            sub_233168608(v124, &qword_256056148);
            v118 = v121;
            v117 = type metadata accessor for Order.DateAndTimeFormatter;
            v103 = v177;
          }
          sub_233168500(v118, v117);
          ((void (*)(char *, uint64_t))v67)(v59, v60);
          v95 = *(void (**)(char *, uint64_t))(v168 + 8);
          goto LABEL_22;
        }
        v119 = v134;
        sub_2331684BC((uint64_t)v175, v134, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
        *(_BYTE *)(v119 + *(int *)(v132 + 20)) = *((_BYTE *)v112
                                                 + *(int *)(type metadata accessor for TimeWindow.Formatter(0) + 20));
        v120 = v135;
        sub_2331684BC((uint64_t)v112, v135, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
        sub_2331684BC(v119, v120 + *(int *)(v133 + 36), (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
        v102 = sub_233584E00(v111, (uint64_t)v143, &qword_256056150, SingleDateFormatter.format(_:now:));
        sub_233168608(v120, &qword_256056150);
        sub_233168500(v119, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
        ((void (*)(char *, uint64_t))v67)(v59, v60);
        v108 = v168;
      }
      else
      {
        v105 = v175;
        v106 = v138;
        sub_2331684BC((uint64_t)v175, v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
        *(_BYTE *)(v106 + *(int *)(v136 + 20)) = *((_BYTE *)v105
                                                 + *(int *)(type metadata accessor for TimeWindow.Formatter(0) + 20));
        v107 = v139;
        sub_2331684BC((uint64_t)v105, v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
        sub_2331684BC(v106, v107 + *(int *)(v137 + 36), (uint64_t (*)(_QWORD))type metadata accessor for MonthFormatter);
        v102 = sub_233584E00(v176, (uint64_t)v143, &qword_256056158, MonthFormatter.format(_:now:));
        sub_233168608(v107, &qword_256056158);
        sub_233168500(v106, (uint64_t (*)(_QWORD))type metadata accessor for MonthFormatter);
        ((void (*)(char *, uint64_t))v67)(v59, v60);
        v108 = v168;
        v89 = v169;
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v177, v89);
      return v102;
    }
    v173 = v67;
    v71 = v151;
    sub_2331684BC((uint64_t)v175, v151, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v72 = sub_23361D43C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v153, 1, 1, v72);
    v73 = sub_23361D424();
    v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56);
    v175 = v53;
    v74(v157, 1, 1, v73);
    (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v158, v71, v156);
    v75 = v167;
    v76 = v181;
    v77 = v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v144, v71 + *(int *)(v167 + 20), v181);
    (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v161, v71 + *(int *)(v75 + 24), v160);
    sub_23361D1FC();
    v78 = v152;
    sub_23361D454();
    sub_233168500(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v79 = v163;
    sub_23361D490();
    v80 = v166;
    sub_23361D460();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v79, v165);
    v180 = *(_QWORD *)(v154 + 8);
    ((void (*)(char *, uint64_t))v180)(v78, v170);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_233623D50;
    v82 = sub_23361D4F0();
    v84 = v83;
    *(_QWORD *)(v81 + 56) = MEMORY[0x24BEE0D00];
    v85 = sub_2331683F0();
    *(_QWORD *)(v81 + 64) = v85;
    *(_QWORD *)(v81 + 32) = v82;
    *(_QWORD *)(v81 + 40) = v84;
    v86 = v148;
    v87 = v150;
    v147(v148, v146, v150);
    sub_23361D754();
    v145(v86, v87);
    v88 = v149;
    sub_23361D808();
    v175(v77, v76);
    v89 = v169;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v174)(v88, 1, v169);
    if ((_DWORD)result != 1)
    {
      v90 = v142;
      v140(v142, v88, v89);
      v91 = sub_23361D4F0();
      v93 = v92;
      v94 = v80;
      v95 = *(void (**)(char *, uint64_t))(v168 + 8);
      v95(v90, v89);
      *(_QWORD *)(v81 + 96) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v81 + 104) = v85;
      *(_QWORD *)(v81 + 72) = v91;
      *(_QWORD *)(v81 + 80) = v93;
      v96 = v179;
      if (qword_2542450A8 != -1)
        swift_once();
      v97 = (void *)qword_2542450A0;
      v98 = (void *)sub_23361E12C();
      v99 = (void *)sub_23361E12C();
      v100 = (void *)sub_23361E12C();
      v101 = objc_msgSend(v97, sel_localizedStringForKey_value_table_, v98, v99, v100);

      sub_23361E150();
      v102 = sub_23361E180();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v180)(v94, v170);
      ((void (*)(char *, uint64_t))v173)(v178, v96);
      v103 = v177;
LABEL_22:
      v95(v103, v89);
      return v102;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TimeWindow.SameDayWindowFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_2560562F8);
}

uint64_t TimeWindow.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TimeWindow.startDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TimeWindow.startDate.modify())()
{
  return nullsub_1;
}

uint64_t TimeWindow.duration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TimeWindow(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
}

uint64_t TimeWindow.duration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TimeWindow(0);
  return sub_2331AAB2C(a1, v1 + *(int *)(v3 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Duration);
}

uint64_t (*TimeWindow.duration.modify())(_QWORD)
{
  type metadata accessor for TimeWindow(0);
  return nullsub_1;
}

BOOL TimeWindow.containsYears.getter()
{
  return sub_233584144((void (*)(uint64_t))MEMORY[0x24BDCBD18]);
}

BOOL TimeWindow.containsMonths.getter()
{
  return sub_233584144((void (*)(uint64_t))MEMORY[0x24BDCBD38]);
}

BOOL sub_233584144(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for Duration();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TimeWindow(0);
  v7 = sub_2331684BC(v1 + *(int *)(v6 + 20), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  a1(v7);
  v9 = (v8 & 1) == 0;
  v10 = sub_23361CD40();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
  return v9;
}

uint64_t sub_2335841F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697461727564;
  else
    return 0x7461447472617473;
}

uint64_t sub_233584234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233588A64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233584258()
{
  sub_233585AA8();
  return sub_23361F428();
}

uint64_t sub_233584280()
{
  sub_233585AA8();
  return sub_23361F434();
}

uint64_t sub_2335842A8()
{
  if ((sub_23361D5E0() & 1) != 0)
    JUMPOUT(0x234930FF0);
  return 0;
}

uint64_t TimeWindow.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254245190);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233585AA8();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for TimeWindow(0);
    v8[14] = 1;
    type metadata accessor for Duration();
    sub_233167C58((unint64_t *)&unk_254245170, (uint64_t (*)(uint64_t))type metadata accessor for Duration, (uint64_t)&protocol conformance descriptor for Duration);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TimeWindow.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;

  v21 = a2;
  v22 = type metadata accessor for Duration();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23361D634();
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246100);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233585AA8();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v19 = v6;
  v20 = a1;
  v12 = (uint64_t)v11;
  v13 = v23;
  v14 = (uint64_t)v24;
  v29 = 0;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v15 = v26;
  v16 = v25;
  sub_23361F068();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v27, v15);
  v28 = 1;
  sub_233167C58(&qword_254244EF0, (uint64_t (*)(uint64_t))type metadata accessor for Duration, (uint64_t)&protocol conformance descriptor for Duration);
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v16);
  sub_233168580(v14, v12 + *(int *)(v9 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Duration);
  sub_2331684BC(v12, v21, type metadata accessor for TimeWindow);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  return sub_233168500(v12, type metadata accessor for TimeWindow);
}

uint64_t sub_233584770@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TimeWindow.init(from:)(a1, a2);
}

uint64_t sub_233584784(_QWORD *a1)
{
  return TimeWindow.encode(to:)(a1);
}

uint64_t TimeWindow.XPC.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1 + OBJC_IVAR___XPCTimeWindow_value, a1, type metadata accessor for TimeWindow);
}

id TimeWindow.XPC.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2331684BC(a1, (uint64_t)v3 + OBJC_IVAR___XPCTimeWindow_value, type metadata accessor for TimeWindow);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for TimeWindow);
  return v4;
}

id TimeWindow.XPC.init(value:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_2331684BC(a1, (uint64_t)v1 + OBJC_IVAR___XPCTimeWindow_value, type metadata accessor for TimeWindow);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for TimeWindow);
  return v4;
}

uint64_t static TimeWindow.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id TimeWindow.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316B3D8(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id TimeWindow.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316B3D8(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id TimeWindow.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TimeWindow.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TimeWindow.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233584B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1 + OBJC_IVAR___XPCTimeWindow_value, a1, type metadata accessor for TimeWindow);
}

id sub_233584B6C(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2331684BC(a1, (uint64_t)v3 + OBJC_IVAR___XPCTimeWindow_value, type metadata accessor for TimeWindow);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for TimeWindow);
  return v4;
}

id TimeWindow.xpcValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;

  v1 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v0, (uint64_t)v3, type metadata accessor for TimeWindow);
  v4 = (objc_class *)type metadata accessor for TimeWindow.XPC(0);
  v5 = objc_allocWithZone(v4);
  sub_2331684BC((uint64_t)v3, (uint64_t)v5 + OBJC_IVAR___XPCTimeWindow_value, type metadata accessor for TimeWindow);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_233168500((uint64_t)v3, type metadata accessor for TimeWindow);
  return v6;
}

uint64_t TimeWindow.Formatter.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t TimeWindow.Formatter.configuration.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2331AAB2C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t (*TimeWindow.Formatter.configuration.modify())()
{
  return nullsub_1;
}

uint64_t TimeWindow.Formatter.style.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TimeWindow.Formatter(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t TimeWindow.Formatter.style.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for TimeWindow.Formatter(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*TimeWindow.Formatter.style.modify())(_QWORD)
{
  type metadata accessor for TimeWindow.Formatter(0);
  return nullsub_1;
}

uint64_t TimeWindow.Formatter.showDateForSingleDayWindow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TimeWindow.Formatter(0) + 24));
}

uint64_t TimeWindow.Formatter.showDateForSingleDayWindow.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TimeWindow.Formatter(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*TimeWindow.Formatter.showDateForSingleDayWindow.modify())(_QWORD)
{
  type metadata accessor for TimeWindow.Formatter(0);
  return nullsub_1;
}

uint64_t sub_233584E00(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);

  v45 = a4;
  v7 = sub_23361D748();
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D868();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23361D634();
  v16 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_233623D50;
  v20 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v21 = v40 + *(int *)(v20 + 36);
  *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
  v37 = sub_2331683F0();
  v38 = v21;
  *(_QWORD *)(v19 + 64) = v37;
  v40 = a2;
  *(_QWORD *)(v19 + 32) = v45(a1, a2);
  *(_QWORD *)(v19 + 40) = v22;
  type metadata accessor for TimeWindow(0);
  v24 = v41;
  v23 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v9, *MEMORY[0x24BDCEF50], v42);
  sub_23361D754();
  v25 = v9;
  v26 = v39;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v44);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v26);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, v26);
    v28 = v37;
    *(_QWORD *)(v19 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v19 + 104) = v28;
    *(_QWORD *)(v19 + 72) = v45((uint64_t)v18, v40);
    *(_QWORD *)(v19 + 80) = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v26);
    if (qword_2542450A8 != -1)
      swift_once();
    v30 = (void *)qword_2542450A0;
    v31 = (void *)sub_23361E12C();
    v32 = (void *)sub_23361E12C();
    v33 = (void *)sub_23361E12C();
    v34 = objc_msgSend(v30, sel_localizedStringForKey_value_table_, v31, v32, v33);

    sub_23361E150();
    v35 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v35;
  }
  return result;
}

uint64_t sub_23358517C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a2;
  v42 = a1;
  v43 = sub_23361D748();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D868();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_233623D50;
  v17 = v3 + *(int *)(a3 + 36);
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 16);
  *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
  v35 = sub_2331683F0();
  *(_QWORD *)(v16 + 64) = v35;
  v36 = *(_QWORD *)(a3 + 16);
  v37 = v17;
  v38 = v19;
  ((void (*)(uint64_t, uint64_t))v19)(v42, v46);
  type metadata accessor for TimeWindow(0);
  v20 = v41;
  v21 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v6, *MEMORY[0x24BDCEF50], v43);
  sub_23361D754();
  v22 = *(void (**)(char *, uint64_t))(v20 + 8);
  v23 = v39;
  v22(v6, v21);
  sub_23361D808();
  v24 = v9;
  v25 = v40;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v25);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v15, v12, v25);
    v28 = v35;
    v27 = v36;
    *(_QWORD *)(v16 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v16 + 104) = v28;
    v38(v15, v46, v27, v18);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v25);
    if (qword_2542450A8 != -1)
      swift_once();
    v29 = (void *)qword_2542450A0;
    v30 = (void *)sub_23361E12C();
    v31 = (void *)sub_23361E12C();
    v32 = (void *)sub_23361E12C();
    v33 = objc_msgSend(v29, sel_localizedStringForKey_value_table_, v30, v31, v32);

    sub_23361E150();
    v34 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v34;
  }
  return result;
}

uint64_t sub_233585510(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;

  v3 = v2;
  v67 = a2;
  v68 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256056418);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23361D748();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v62 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23361D868();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v61 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D634();
  v69 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v58 - v15;
  v17 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Order.TimeFormatter(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v3, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v23 = type metadata accessor for TimeWindow.SameDayWindowFormatter(0);
  if (*(_BYTE *)(v3 + *(int *)(v23 + 24)) != 1)
  {
    sub_2331684BC(v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_2331684BC((uint64_t)v22, (uint64_t)&v6[*(int *)(v4 + 36)], type metadata accessor for Order.TimeFormatter);
    v57 = sub_233584E00(v68, (uint64_t)v67, qword_256056418, (uint64_t (*)(uint64_t, uint64_t))Order.TimeFormatter.format(_:now:));
    sub_233168608((uint64_t)v6, qword_256056418);
LABEL_7:
    sub_233168500((uint64_t)v22, type metadata accessor for Order.TimeFormatter);
    return v57;
  }
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_233627000;
  sub_2331684BC(v3, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v19[*(int *)(v17 + 20)] = *(_BYTE *)(v3 + *(int *)(v24 + 20));
  v26 = v68;
  v27 = SingleDateFormatter.format(_:now:)(v68, (uint64_t)v67);
  v29 = v28;
  sub_233168500((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  v30 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
  v31 = sub_2331683F0();
  *(_QWORD *)(v25 + 64) = v31;
  *(_QWORD *)(v25 + 32) = v27;
  *(_QWORD *)(v25 + 40) = v29;
  *(_QWORD *)(v25 + 96) = v30;
  *(_QWORD *)(v25 + 104) = v31;
  v59 = v31;
  sub_23361D5F8();
  v32 = Order.TimeFormatter.format(_:now:)(v26);
  v34 = v33;
  v67 = *(void (**)(char *, uint64_t))(v69 + 8);
  v67(v16, v12);
  *(_QWORD *)(v25 + 72) = v32;
  *(_QWORD *)(v25 + 80) = v34;
  type metadata accessor for TimeWindow(0);
  v35 = *MEMORY[0x24BDCEF50];
  v58 = v22;
  v36 = v11;
  v37 = v64;
  v38 = v62;
  v39 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 104))(v62, v35, v66);
  v40 = v61;
  sub_23361D754();
  v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42 = v36;
  v41(v38, v39);
  v43 = v12;
  sub_23361D808();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v65);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48))(v42, 1, v12);
  if ((_DWORD)result != 1)
  {
    v45 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v60, v42, v12);
    v46 = v59;
    *(_QWORD *)(v25 + 136) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v25 + 144) = v46;
    sub_23361D5F8();
    v47 = v58;
    v48 = Order.TimeFormatter.format(_:now:)(v45);
    v50 = v49;
    v51 = (void (*)(uint64_t, uint64_t))v67;
    v67(v16, v43);
    *(_QWORD *)(v25 + 112) = v48;
    *(_QWORD *)(v25 + 120) = v50;
    v51(v45, v43);
    v22 = v47;
    if (qword_2542450A8 != -1)
      swift_once();
    v52 = (void *)qword_2542450A0;
    v53 = (void *)sub_23361E12C();
    v54 = (void *)sub_23361E12C();
    v55 = (void *)sub_23361E12C();
    v56 = objc_msgSend(v52, sel_localizedStringForKey_value_table_, v53, v54, v55);

    sub_23361E150();
    v57 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_233585AA8()
{
  unint64_t result;

  result = qword_254247118;
  if (!qword_254247118)
  {
    result = MEMORY[0x234934494](&unk_233660554, &type metadata for TimeWindow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247118);
  }
  return result;
}

uint64_t TimeWindow.Formatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for TimeWindow.Formatter(0);
  sub_23361F35C();
  return sub_23361F368();
}

uint64_t static TimeWindow.Formatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2335871B0(a1, a2, type metadata accessor for TimeWindow.Formatter) & 1;
}

uint64_t sub_233585C28()
{
  sub_233587270();
  return sub_23361F428();
}

uint64_t sub_233585C50()
{
  sub_233587270();
  return sub_23361F434();
}

uint64_t TimeWindow.Formatter.encode(to:)(_QWORD *a1)
{
  return sub_233585FEC(a1, &qword_256056180, (void (*)(void))sub_233587270, (uint64_t)&type metadata for TimeWindow.Formatter.CodingKeys, (uint64_t)type metadata accessor for TimeWindow.Formatter);
}

uint64_t TimeWindow.Formatter.hashValue.getter()
{
  return sub_233586194((void (*)(_QWORD))type metadata accessor for TimeWindow.Formatter);
}

uint64_t TimeWindow.Formatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v17 = a2;
  v18 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560561A0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TimeWindow.Formatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233587270();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11 = v5;
  v12 = (uint64_t)v10;
  v24 = 0;
  sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v13 = (uint64_t)v19;
  v14 = v20;
  sub_23361F068();
  sub_233168580(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v22 = 1;
  sub_2332F840C();
  sub_23361F068();
  *(_BYTE *)(v12 + *(int *)(v8 + 20)) = v23;
  v21 = 2;
  v15 = sub_23361F038();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v14);
  *(_BYTE *)(v12 + *(int *)(v8 + 24)) = v15 & 1;
  sub_2331684BC(v12, v17, type metadata accessor for TimeWindow.Formatter);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v12, type metadata accessor for TimeWindow.Formatter);
}

uint64_t sub_233585F68@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = TimeWindow.Formatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_233585F8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2334BD230(a1, (uint64_t (*)(uint64_t, char *))TimeWindow.Formatter.format(_:now:), a2);
}

uint64_t sub_233585F98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TimeWindow.Formatter.init(from:)(a1, a2);
}

uint64_t sub_233585FAC(_QWORD *a1)
{
  return TimeWindow.Formatter.encode(to:)(a1);
}

uint64_t sub_233585FCC(uint64_t a1, uint64_t a2)
{
  return sub_2335871B0(a1, a2, type metadata accessor for TimeWindow.Formatter) & 1;
}

uint64_t sub_233585FEC(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;
  char v18;
  char v19;

  v15[0] = a5;
  v7 = v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_23361F410();
  v19 = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v13 = v15[1];
  sub_23361F17C();
  if (!v13)
  {
    v18 = *(_BYTE *)(v7 + *(int *)(((uint64_t (*)(_QWORD))v15[0])(0) + 20));
    v17 = 1;
    sub_2332F83C8();
    sub_23361F17C();
    v16 = 2;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_233586194(void (*a1)(_QWORD))
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  a1(0);
  sub_23361F35C();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t sub_2335862D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v22 = a2;
  v3 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256056400);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TimeWindow.SameDayWindowFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233588B60();
  v24 = v7;
  v11 = v26;
  sub_23361F3EC();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v20 = (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration;
    v19 = (uint64_t)v10;
  }
  else
  {
    v12 = v5;
    v30 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    v14 = (uint64_t)v23;
    v13 = v24;
    v15 = v25;
    sub_23361F068();
    sub_2331AAB2C(v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v28 = 1;
    sub_2332F840C();
    sub_23361F068();
    v10[*(int *)(v8 + 20)] = v29;
    v27 = 2;
    v17 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v15);
    v18 = v22;
    v10[*(int *)(v8 + 24)] = v17 & 1;
    sub_2331684BC((uint64_t)v10, v18, type metadata accessor for TimeWindow.SameDayWindowFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v19 = (uint64_t)v10;
    v20 = type metadata accessor for TimeWindow.SameDayWindowFormatter;
  }
  return sub_233168500(v19, v20);
}

uint64_t sub_233586578()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 0x6853646C756F6873;
  if (*v0)
    return v1;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_2335865E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233588E40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23358660C()
{
  sub_233588B60();
  return sub_23361F428();
}

uint64_t sub_233586634()
{
  sub_233588B60();
  return sub_23361F434();
}

uint64_t sub_23358665C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_233585510(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_233586680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2334BD230(a1, (uint64_t (*)(uint64_t, char *))sub_233585510, a2);
}

uint64_t sub_23358668C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2335862D0(a1, a2);
}

uint64_t sub_2335866A0(_QWORD *a1)
{
  return sub_233585FEC(a1, &qword_256056410, (void (*)(void))sub_233588B60, (uint64_t)&type metadata for TimeWindow.SameDayWindowFormatter.CodingKeys, (uint64_t)type metadata accessor for TimeWindow.SameDayWindowFormatter);
}

uint64_t sub_2335866D4()
{
  return sub_233586194((void (*)(_QWORD))type metadata accessor for TimeWindow.SameDayWindowFormatter);
}

uint64_t sub_2335866F0(uint64_t a1, uint64_t a2)
{
  return sub_2335871B0(a1, a2, type metadata accessor for TimeWindow.SameDayWindowFormatter) & 1;
}

uint64_t sub_233586710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = sub_23358517C(a1, (uint64_t)v7, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_2335867B4()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361E090();
}

uint64_t sub_2335868C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((MEMORY[0x234931A40]() & 1) == 0)
    return 0;
  v8 = type metadata accessor for FormatterConfiguration();
  if ((MEMORY[0x234931B48](a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20)) & 1) == 0
    || (MEMORY[0x234931BFC](a1 + *(int *)(v8 + 24), a2 + *(int *)(v8 + 24)) & 1) == 0)
  {
    return 0;
  }
  type metadata accessor for TimeWindow.DefaultWindowFormatter(0, a3, a4, v9);
  return sub_23361E108() & 1;
}

uint64_t sub_233586978(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D726F4665746164 && a2 == 0xED00007265747461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233586AB0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D726F4665746164;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_233586B00(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14[4];
  char v15;
  char v16;

  v6 = *(_QWORD *)(a2 + 16);
  v14[0] = *(_QWORD *)(a2 + 24);
  v14[1] = v6;
  v7 = type metadata accessor for TimeWindow.DefaultWindowFormatter.CodingKeys(255, v6, v14[0], a4);
  MEMORY[0x234934494](&unk_233660728, v7);
  v8 = sub_23361F1AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F410();
  v16 = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v12 = v14[3];
  sub_23361F17C();
  if (!v12)
  {
    v15 = 1;
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_233586C84()
{
  sub_23361F350();
  sub_2335867B4();
  return sub_23361F3A4();
}

uint64_t sub_233586CC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;

  v28 = a4;
  v27 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v30 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  v33 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TimeWindow.DefaultWindowFormatter.CodingKeys(255, a2, a3, v10);
  MEMORY[0x234934494](&unk_233660728, v11);
  v35 = sub_23361F0BC();
  v29 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v13 = (char *)&v25 - v12;
  v31 = a2;
  v32 = a3;
  v26 = type metadata accessor for TimeWindow.DefaultWindowFormatter(0, a2, a3, v14);
  v15 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v17 = (char *)&v25 - v16;
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v34 = v13;
  v18 = v36;
  sub_23361F3EC();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  }
  else
  {
    v20 = v29;
    v19 = v30;
    v36 = v15;
    v21 = v31;
    v38 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    sub_2331AAB2C(v33, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v37 = 1;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v34, v35);
    v22 = v26;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v17[*(int *)(v26 + 36)], v19, v21);
    v23 = v36;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v28, v17, v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v17, v22);
  }
}

BOOL sub_233586FC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23345BE9C(*a1, *a2);
}

uint64_t sub_233586FD8()
{
  return sub_23345C10C();
}

uint64_t sub_233586FE8()
{
  return sub_23345BEAC();
}

uint64_t sub_233586FF8()
{
  sub_23361F350();
  sub_23345BEAC();
  return sub_23361F3A4();
}

uint64_t sub_23358703C()
{
  char *v0;

  return sub_233586AB0(*v0);
}

uint64_t sub_23358704C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233586978(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233587078@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_233469A24();
  *a1 = result;
  return result;
}

uint64_t sub_2335870A0(uint64_t a1)
{
  MEMORY[0x234934494](&unk_233660728, a1);
  return sub_23361F428();
}

uint64_t sub_2335870D4(uint64_t a1)
{
  MEMORY[0x234934494](&unk_233660728, a1);
  return sub_23361F434();
}

uint64_t sub_233587108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_233586710(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23358712C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_233586CC8(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_233587148(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_233586B00(a1, a2, a3, a4);
}

uint64_t sub_233587164()
{
  sub_23361F350();
  sub_2335867B4();
  return sub_23361F3A4();
}

uint64_t sub_2335871A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2335868C8(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_2335871B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v6 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24)) & 1) != 0
    && (v7 = a3(0), *(unsigned __int8 *)(a1 + *(int *)(v7 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v7 + 20))))
  {
    v8 = *(_BYTE *)(a1 + *(int *)(v7 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v7 + 24)) ^ 1;
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t type metadata accessor for TimeWindow.XPC(uint64_t a1)
{
  return sub_233177414(a1, qword_254246DF8);
}

unint64_t sub_233587270()
{
  unint64_t result;

  result = qword_256056188;
  if (!qword_256056188)
  {
    result = MEMORY[0x234934494](&unk_233660504, &type metadata for TimeWindow.Formatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056188);
  }
  return result;
}

uint64_t sub_2335872B4(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_2560561D8, type metadata accessor for TimeWindow.Formatter, (uint64_t)&protocol conformance descriptor for TimeWindow.Formatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2335872F0()
{
  return sub_233167C58(&qword_2560561E0, type metadata accessor for TimeWindow.Formatter, (uint64_t)&protocol conformance descriptor for TimeWindow.Formatter);
}

uint64_t sub_23358731C()
{
  return sub_233167C58(&qword_2560561E8, type metadata accessor for TimeWindow.Formatter, (uint64_t)&protocol conformance descriptor for TimeWindow.Formatter);
}

uint64_t sub_233587348()
{
  return sub_233167C58(&qword_2560561F0, type metadata accessor for TimeWindow.Formatter, (uint64_t)&protocol conformance descriptor for TimeWindow.Formatter);
}

uint64_t sub_233587374()
{
  return sub_233167C58((unint64_t *)&unk_2560561F8, type metadata accessor for TimeWindow.Formatter, (uint64_t)&protocol conformance descriptor for TimeWindow.Formatter);
}

uint64_t *initializeBufferWithCopyOfBuffer for TimeWindow(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23361CD40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TimeWindow(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23361CD40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for TimeWindow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361CD40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for TimeWindow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361CD40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for TimeWindow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361CD40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TimeWindow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361CD40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeWindow()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2335876A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Duration();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TimeWindow()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233587720(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Duration();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23358779C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    result = sub_23361CD40();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_233587820()
{
  return type metadata accessor for TimeWindow.XPC(0);
}

uint64_t sub_233587828()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TimeWindow(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for TimeWindow.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimeWindow.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for TimeWindow.Formatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TimeWindow.Formatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for TimeWindow.Formatter.CodingKeys()
{
  return &type metadata for TimeWindow.Formatter.CodingKeys;
}

ValueMetadata *type metadata accessor for TimeWindow.CodingKeys()
{
  return &type metadata for TimeWindow.CodingKeys;
}

uint64_t sub_233587900()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for FormatterConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_233587988()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233587998()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_233587A0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_233587A94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  void (*v25)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_23361D73C();
  v5 = *(_QWORD *)(v34 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v35 = sub_23361D868();
  v7 = *(_QWORD *)(v35 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v6 + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = sub_23361D8A4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v10 + v13;
  v15 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = ((v14 + (v9 & ~(unint64_t)v8)) & ~v13) + *(_QWORD *)(v12 + 64) + v17;
  v19 = (v8 | *(_BYTE *)(v5 + 80) | *(_BYTE *)(v12 + 80) | v17);
  if (v19 <= 7
    && (v18 & ~(unint64_t)v17) + *(_QWORD *)(v16 + 64) <= 0x18
    && ((v8 | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v12 + 80) | v17) & 0x100000) == 0)
  {
    v24 = ~(unint64_t)v8;
    v30 = ~v13;
    v31 = v11;
    v32 = ~(unint64_t)v17;
    v33 = v15;
    v25 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v26 = v9;
    v23 = a1;
    v25(a1, a2, v34);
    v27 = ((unint64_t)a1 + v26) & v24;
    v28 = ((unint64_t)a2 + v26) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v27, v28, v35);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v27 + v14) & v30, (v28 + v14) & v30, v31);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))(((unint64_t)a1 + v18) & v32, ((unint64_t)a2 + v18) & v32, v33);
  }
  else
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (uint64_t *)(v22 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  return v23;
}

uint64_t sub_233587C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_23361D73C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_23361D868();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = sub_23361D8A4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))((v16 + v11) & ~v15, v13);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v14 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + ((v16 + (v10 & ~v9)) & ~v15)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_233587D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23361D73C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_23361D868();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, (v12 + a2) & ~v11, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = sub_23361D8A4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 + v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))((v18 + v13) & ~v17, (v18 + ((v12 + a2) & ~v11)) & ~v17, v15);
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((v18 + (v12 & ~v11)) & ~v17) + *(_QWORD *)(v16 + 64) + v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))((v21 + a1) & ~v20, (v21 + a2) & ~v20);
  return a1;
}

uint64_t sub_233587E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23361D73C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_23361D868();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, (v12 + a2) & ~v11, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = sub_23361D8A4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 + v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))((v18 + v13) & ~v17, (v18 + ((v12 + a2) & ~v11)) & ~v17, v15);
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((v18 + (v12 & ~v11)) & ~v17) + *(_QWORD *)(v16 + 64) + v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))((v21 + a1) & ~v20, (v21 + a2) & ~v20);
  return a1;
}

uint64_t sub_233587F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23361D73C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_23361D868();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, (v12 + a2) & ~v11, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = sub_23361D8A4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 + v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))((v18 + v13) & ~v17, (v18 + ((v12 + a2) & ~v11)) & ~v17, v15);
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((v18 + (v12 & ~v11)) & ~v17) + *(_QWORD *)(v16 + 64) + v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))((v21 + a1) & ~v20, (v21 + a2) & ~v20);
  return a1;
}

uint64_t sub_233588058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23361D73C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_23361D868();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v13, (v12 + a2) & ~v11, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = sub_23361D8A4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 + v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))((v18 + v13) & ~v17, (v18 + ((v12 + a2) & ~v11)) & ~v17, v15);
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = ((v18 + (v12 & ~v11)) & ~v17) + *(_QWORD *)(v16 + 64) + v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))((v21 + a1) & ~v20, (v21 + a2) & ~v20);
  return a1;
}

uint64_t sub_23358816C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  uint64_t v34;

  v6 = sub_23361D73C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = sub_23361D868();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = sub_23361D8A4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v12)
    v16 = v12;
  else
    v16 = *(_DWORD *)(v14 + 84);
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 84);
  if (v19 <= v16)
    v20 = v16;
  else
    v20 = *(_DWORD *)(v18 + 84);
  if (!a2)
    return 0;
  v21 = v13;
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = *(_QWORD *)(v7 + 64) + v22;
  v24 = *(_QWORD *)(v10 + 64);
  v25 = *(unsigned __int8 *)(v14 + 80);
  v26 = *(unsigned __int8 *)(v18 + 80);
  v27 = ((v24 + v25 + (v23 & ~v22)) & ~v25) + *(_QWORD *)(v14 + 64) + v26;
  if (a2 <= v20)
    goto LABEL_29;
  v28 = (v27 & ~v26) + *(_QWORD *)(v18 + 64);
  v29 = 8 * v28;
  if (v28 <= 3)
  {
    v31 = ((a2 - v20 + ~(-1 << v29)) >> v29) + 1;
    if (HIWORD(v31))
    {
      v30 = *(_DWORD *)(a1 + v28);
      if (!v30)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v31 > 0xFF)
    {
      v30 = *(unsigned __int16 *)(a1 + v28);
      if (!*(_WORD *)(a1 + v28))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v31 < 2)
    {
LABEL_29:
      if (v20)
      {
        if (v16 < v19)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v18 + 48))((v27 + a1) & ~v26, *(unsigned int *)(v18 + 84), v17);
        if ((_DWORD)v8 == v16)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
        v34 = (v23 + a1) & ~v22;
        if ((_DWORD)v11 == v16)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v34, v11, v9);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((v34 + v24 + v25) & ~v25, v15, v21);
      }
      return 0;
    }
  }
  v30 = *(unsigned __int8 *)(a1 + v28);
  if (!*(_BYTE *)(a1 + v28))
    goto LABEL_29;
LABEL_20:
  v32 = (v30 - 1) << v29;
  if (v28 > 3)
    v32 = 0;
  if ((_DWORD)v28)
  {
    if (v28 <= 3)
      v33 = (v27 & ~(_DWORD)v26) + *(_DWORD *)(v18 + 64);
    else
      v33 = 4;
    __asm { BR              X12 }
  }
  return v20 + v32 + 1;
}

void sub_2335883CC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(sub_23361D73C() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_23361D868() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(sub_23361D8A4() - 8);
  if (*(_DWORD *)(v11 + 84) <= v10)
    v12 = v10;
  else
    v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v13 + 84) <= v12)
    v14 = v12;
  else
    v14 = *(_DWORD *)(v13 + 84);
  v15 = ((((*(_QWORD *)(v9 + 64)
          + *(unsigned __int8 *)(v11 + 80)
          + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + *(_QWORD *)(v11 + 64)
        + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
      + *(_QWORD *)(v13 + 64);
  if (a3 <= v14)
  {
    v16 = 0;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 - v14 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (v14 < a2)
  {
    v17 = ~v14 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v15)
      {
        v19 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

void sub_23358874C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;

  *(_WORD *)a10 = v10;
  *(_BYTE *)(a10 + 2) = BYTE2(v10);
  JUMPOUT(0x2335886E8);
}

void sub_233588760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _WORD *a10)
{
  __int16 v10;

  *a10 = v10;
  JUMPOUT(0x2335886E8);
}

void sub_23358876C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v10;

  *a10 = v10;
  JUMPOUT(0x2335886E8);
}

uint64_t type metadata accessor for TimeWindow.DefaultWindowFormatter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeWindow.DefaultWindowFormatter);
}

void sub_233588788()
{
  JUMPOUT(0x234934494);
}

void sub_233588798()
{
  JUMPOUT(0x234934494);
}

void sub_2335887A8()
{
  JUMPOUT(0x234934494);
}

void sub_2335887B8()
{
  JUMPOUT(0x234934494);
}

uint64_t sub_2335887C8()
{
  return sub_233167C58(&qword_2560563B8, type metadata accessor for TimeWindow.SameDayWindowFormatter, (uint64_t)&unk_233660268);
}

uint64_t sub_2335887F4()
{
  return sub_233167C58(&qword_2560563C0, type metadata accessor for TimeWindow.SameDayWindowFormatter, (uint64_t)&unk_2336602F8);
}

uint64_t sub_233588820()
{
  return sub_233167C58(&qword_2560563C8, type metadata accessor for TimeWindow.SameDayWindowFormatter, (uint64_t)&unk_2336602D0);
}

uint64_t sub_23358884C()
{
  return sub_233167C58(&qword_2560563D0, type metadata accessor for TimeWindow.SameDayWindowFormatter, (uint64_t)&unk_233660290);
}

uint64_t sub_233588878(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_2560563D8, type metadata accessor for TimeWindow.SameDayWindowFormatter, (uint64_t)&unk_233660320);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2335888B8()
{
  unint64_t result;

  result = qword_2560563E0;
  if (!qword_2560563E0)
  {
    result = MEMORY[0x234934494](&unk_233660424, &type metadata for TimeWindow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560563E0);
  }
  return result;
}

unint64_t sub_233588900()
{
  unint64_t result;

  result = qword_2560563E8;
  if (!qword_2560563E8)
  {
    result = MEMORY[0x234934494](&unk_2336604DC, &type metadata for TimeWindow.Formatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560563E8);
  }
  return result;
}

unint64_t sub_233588948()
{
  unint64_t result;

  result = qword_2560563F0;
  if (!qword_2560563F0)
  {
    result = MEMORY[0x234934494](&unk_23366044C, &type metadata for TimeWindow.Formatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560563F0);
  }
  return result;
}

unint64_t sub_233588990()
{
  unint64_t result;

  result = qword_2560563F8;
  if (!qword_2560563F8)
  {
    result = MEMORY[0x234934494](&unk_233660474, &type metadata for TimeWindow.Formatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560563F8);
  }
  return result;
}

unint64_t sub_2335889D8()
{
  unint64_t result;

  result = qword_254246EE0;
  if (!qword_254246EE0)
  {
    result = MEMORY[0x234934494](&unk_233660394, &type metadata for TimeWindow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254246EE0);
  }
  return result;
}

unint64_t sub_233588A20()
{
  unint64_t result;

  result = qword_254247128;
  if (!qword_254247128)
  {
    result = MEMORY[0x234934494](&unk_2336603BC, &type metadata for TimeWindow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247128);
  }
  return result;
}

uint64_t sub_233588A64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_233588B60()
{
  unint64_t result;

  result = qword_256056408;
  if (!qword_256056408)
  {
    result = MEMORY[0x234934494](&unk_233660778, &type metadata for TimeWindow.SameDayWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056408);
  }
  return result;
}

uint64_t type metadata accessor for TimeWindow.DefaultWindowFormatter.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeWindow.DefaultWindowFormatter.CodingKeys);
}

uint64_t _s10FinanceKit10TimeWindowV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233588BFC + 4 * byte_23365FEB7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233588C30 + 4 * byte_23365FEB2[v4]))();
}

uint64_t sub_233588C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233588C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233588C40);
  return result;
}

uint64_t sub_233588C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233588C54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233588C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233588C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s10FinanceKit10TimeWindowV9FormatterV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233588CB8 + 4 * byte_23365FEC1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233588CEC + 4 * byte_23365FEBC[v4]))();
}

uint64_t sub_233588CEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233588CF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233588CFCLL);
  return result;
}

uint64_t sub_233588D08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233588D10);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233588D14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233588D1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeWindow.SameDayWindowFormatter.CodingKeys()
{
  return &type metadata for TimeWindow.SameDayWindowFormatter.CodingKeys;
}

unint64_t sub_233588D3C()
{
  unint64_t result;

  result = qword_2560564A0;
  if (!qword_2560564A0)
  {
    result = MEMORY[0x234934494](&unk_233660648, &type metadata for TimeWindow.SameDayWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560564A0);
  }
  return result;
}

void sub_233588D80()
{
  JUMPOUT(0x234934494);
}

void sub_233588D90()
{
  JUMPOUT(0x234934494);
}

void sub_233588DA0()
{
  JUMPOUT(0x234934494);
}

unint64_t sub_233588DB4()
{
  unint64_t result;

  result = qword_2560564A8;
  if (!qword_2560564A8)
  {
    result = MEMORY[0x234934494](&unk_2336605B8, &type metadata for TimeWindow.SameDayWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560564A8);
  }
  return result;
}

unint64_t sub_233588DFC()
{
  unint64_t result;

  result = qword_2560564B0;
  if (!qword_2560564B0)
  {
    result = MEMORY[0x234934494](&unk_2336605E0, &type metadata for TimeWindow.SameDayWindowFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560564B0);
  }
  return result;
}

uint64_t sub_233588E40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6853646C756F6873 && a2 == 0xEE0065746144776FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t BankConnectService.classifyTransactions(with:forceClassification:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 128) = a2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v2;
  *(_QWORD *)(v3 + 96) = type metadata accessor for BankConnectService.Message();
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233589034()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_BYTE *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16);
  *(_QWORD *)v1 = v3;
  *(_BYTE *)(v1 + 8) = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_233589094(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318C26C;
  return BankConnectService.classifyTransactions(with:forceClassification:)(a1, a2);
}

Swift::Void __swiftcall BankConnectService.classify(transactions:)(Swift::OpaquePointer transactions)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  char *v37;
  char *v38;
  char *v39;
  unint64_t v40;
  void *rawValue;
  char *v42;
  unsigned __int8 v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)&v34 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v39 = (char *)&v34 - v15;
  if ((unint64_t)transactions._rawValue >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v16 = sub_23361EF30();
    if (v16)
      goto LABEL_3;
  }
  else
  {
    v16 = *(_QWORD *)(((unint64_t)transactions._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
    {
LABEL_3:
      v35 = v5;
      v36 = v1;
      v17 = 0;
      v18 = (unint64_t)transactions._rawValue & 0xC000000000000001;
      rawValue = transactions._rawValue;
      v38 = (char *)transactions._rawValue + 32;
      v19 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (v18)
          v20 = (id)MEMORY[0x234933120](v17, rawValue);
        else
          v20 = *(id *)&v38[8 * v17];
        v1 = v20;
        if (__OFADD__(v17++, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        if (qword_256041D90 != -1)
          swift_once();
        transactions._rawValue = off_2560569D8;
        swift_bridgeObjectRetain();
        v5 = (char *)objc_msgSend(v1, sel_publicTransactionObject);
        TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v5, sel_transactionTypeValue));

        v22 = *((_QWORD *)transactions._rawValue + 2);
        if (v22)
        {
          v23 = 0;
          v24 = v43;
          if (v43 == 17)
            v24 = 0;
          while (*((unsigned __int8 *)transactions._rawValue + v23 + 32) != v24)
          {
            if (v22 == ++v23)
              goto LABEL_16;
          }
          swift_bridgeObjectRelease();
          v25 = objc_msgSend(v1, sel_publicTransactionObject);
          transactions._rawValue = objc_msgSend(v25, "id");

          v40 = v19;
          v26 = v16;
          v27 = v18;
          v28 = v37;
          sub_23361D67C();

          v5 = *(char **)(v10 + 32);
          v29 = v28;
          v18 = v27;
          v16 = v26;
          v19 = v40;
          ((void (*)(char *, char *, uint64_t))v5)(v8, v29, v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
            goto LABEL_19;
LABEL_4:
          sub_2331D76B8((uint64_t)v8);
          if (v17 == v16)
            goto LABEL_24;
        }
        else
        {
LABEL_16:
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
            goto LABEL_4;
          v5 = *(char **)(v10 + 32);
LABEL_19:
          v30 = v39;
          ((void (*)(char *, char *, uint64_t))v5)(v39, v8, v9);
          ((void (*)(char *, char *, uint64_t))v5)(v42, v30, v9);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = sub_2334A4E00(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
          transactions._rawValue = *(void **)(v19 + 16);
          v31 = *(_QWORD *)(v19 + 24);
          if ((unint64_t)transactions._rawValue >= v31 >> 1)
            v19 = sub_2334A4E00(v31 > 1, (int64_t)transactions._rawValue + 1, 1, v19);
          *(_QWORD *)(v19 + 16) = (char *)transactions._rawValue + 1;
          ((void (*)(unint64_t, char *, uint64_t))v5)(v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * (uint64_t)transactions._rawValue, v42, v9);
          if (v17 == v16)
          {
LABEL_24:
            swift_bridgeObjectRelease();
            v5 = v35;
            v1 = v36;
            if (!*(_QWORD *)(v19 + 16))
              goto LABEL_29;
LABEL_25:
            v32 = sub_23361E534();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v5, 1, 1, v32);
            v33 = (_QWORD *)swift_allocObject();
            v33[2] = 0;
            v33[3] = 0;
            v33[4] = v1;
            v33[5] = v19;
            swift_retain();
            sub_2334E4034((uint64_t)v5, (uint64_t)&unk_2560564D0, (uint64_t)v33);
            swift_release();
            return;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v19 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    goto LABEL_25;
LABEL_29:
  swift_bridgeObjectRelease();
}

uint64_t sub_2335895B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_2331676FC;
  return BankConnectService.classifyTransactions(with:forceClassification:)(a5, 0);
}

void sub_233589610(Swift::OpaquePointer a1)
{
  BankConnectService.classify(transactions:)(a1);
}

uint64_t sub_233589630()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_233589664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_2331676FC;
  return BankConnectService.classifyTransactions(with:forceClassification:)(v2, 0);
}

uint64_t dispatch thunk of FinancialInsightsTransactionClassifying.classifyTransactions(with:forceClassification:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23318C26C;
  return v11(a1, a2, a3, a4);
}

uint64_t BankConnectTermsAndConditions.init(id:publishedAt:reviewedAt:inEffectOn:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v17)(char *, uint64_t, uint64_t);

  v12 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  v13 = (uint64_t)&a6[v12[6]];
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  *(_QWORD *)a6 = a1;
  *((_QWORD *)a6 + 1) = a2;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
  v17(&a6[v12[5]], a3, v14);
  sub_23318C8A8(a4, v13);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(&a6[v12[7]], a5, v14);
}

uint64_t type metadata accessor for BankConnectTermsAndConditions()
{
  uint64_t result;

  result = qword_254247CC0;
  if (!qword_254247CC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t BankConnectTermsAndConditions.init(fromRaw:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v26 = type metadata accessor for BankConnectTermsAndConditions();
  MEMORY[0x24BDAC7A8](v26);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D634();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  v15 = *(_QWORD *)a1;
  v24 = *((_QWORD *)a1 + 1);
  v25 = v15;
  v16 = type metadata accessor for RawBankConnectData.TermsAndConditions();
  v17 = (void (*)(char *, char *, uint64_t))v9[2];
  v17(v14, &a1[*(int *)(v16 + 24)], v8);
  v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7];
  v18(v7, 1, 1, v8);
  v17(v12, &a1[*(int *)(v16 + 28)], v8);
  v19 = v26;
  v20 = (uint64_t)&v4[*(int *)(v26 + 24)];
  v18((char *)v20, 1, 1, v8);
  v21 = v24;
  *(_QWORD *)v4 = v25;
  *((_QWORD *)v4 + 1) = v21;
  v22 = (void (*)(char *, char *, uint64_t))v9[4];
  v22(&v4[*(int *)(v19 + 20)], v14, v8);
  swift_bridgeObjectRetain();
  sub_23318C8A8((uint64_t)v7, v20);
  v22(&v4[*(int *)(v19 + 28)], v12, v8);
  sub_233589A64((uint64_t)v4, v27);
  return sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
}

uint64_t sub_233589A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectTermsAndConditions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void BankConnectTermsAndConditions.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)a2 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 24);
  v8 = sub_23361D634();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10 = 1;
  v20 = v7;
  v9(v7, 1, 1, v8);
  v11 = objc_msgSend(a1, "id");
  v12 = sub_23361E150();
  v14 = v13;

  *a2 = v12;
  a2[1] = v14;
  v15 = objc_msgSend(a1, sel_publishedAt);
  sub_23361D5EC();

  v16 = objc_msgSend(a1, sel_reviewedAt);
  if (v16)
  {
    v17 = v16;
    sub_23361D5EC();

    v10 = 0;
  }
  v9((uint64_t)v6, v10, 1, v8);
  sub_23318C8A8((uint64_t)v6, v20);
  v18 = objc_msgSend(a1, sel_inEffectOn);
  sub_23361D5EC();

}

uint64_t BankConnectTermsAndConditions.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectTermsAndConditions.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BankConnectTermsAndConditions.id.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectTermsAndConditions.publishedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankConnectTermsAndConditions.publishedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankConnectTermsAndConditions.publishedAt.modify())(_QWORD)
{
  type metadata accessor for BankConnectTermsAndConditions();
  return nullsub_1;
}

uint64_t BankConnectTermsAndConditions.reviewedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 24);
  return sub_23319F164(v3, a1);
}

uint64_t BankConnectTermsAndConditions.reviewedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 24);
  return sub_23318C8A8(a1, v3);
}

uint64_t (*BankConnectTermsAndConditions.reviewedAt.modify())(_QWORD)
{
  type metadata accessor for BankConnectTermsAndConditions();
  return nullsub_1;
}

uint64_t BankConnectTermsAndConditions.inEffectOn.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 28);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankConnectTermsAndConditions.inEffectOn.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectTermsAndConditions() + 28);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankConnectTermsAndConditions.inEffectOn.modify())(_QWORD)
{
  type metadata accessor for BankConnectTermsAndConditions();
  return nullsub_1;
}

uint64_t BankConnectTermsAndConditions.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23361D634();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for BankConnectTermsAndConditions();
  sub_233167C58((unint64_t *)&qword_256042700, v2, MEMORY[0x24BDCE930]);
  sub_23361E090();
  sub_23319F164(v0 + *(int *)(v9 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_23361F368();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_23361F368();
    sub_23361E090();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_23361E090();
}

uint64_t sub_23358A06C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23358A090 + 4 * byte_233660820[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23358A090()
{
  return 0x656873696C627570;
}

uint64_t sub_23358A0B0()
{
  return 0x6465776569766572;
}

uint64_t sub_23358A0D0()
{
  return 0x7463656666456E69;
}

uint64_t sub_23358A0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23358B964(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23358A110()
{
  sub_23358AE84();
  return sub_23361F428();
}

uint64_t sub_23358A138()
{
  sub_23358AE84();
  return sub_23361F434();
}

uint64_t BankConnectTermsAndConditions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560564E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23358AE84();
  sub_23361F410();
  v12 = 0;
  sub_23361F140();
  if (!v1)
  {
    type metadata accessor for BankConnectTermsAndConditions();
    v11 = 1;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    v10 = 2;
    sub_23361F110();
    v9 = 3;
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t BankConnectTermsAndConditions.hashValue.getter()
{
  sub_23361F350();
  BankConnectTermsAndConditions.hash(into:)();
  return sub_23361F3A4();
}

uint64_t BankConnectTermsAndConditions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)v31 - v9;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560564F8);
  v10 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BankConnectTermsAndConditions();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void (**)(void))(v6 + 56);
  v41 = (char *)v16 + *(int *)(v14 + 24);
  v17();
  v18 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23358AE84();
  v38 = v12;
  v19 = v40;
  sub_23361F3EC();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    return sub_233168608((uint64_t)v41, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v40 = v10;
    v32 = v16;
    v45 = 0;
    v21 = v36;
    v20 = v37;
    v22 = sub_23361F02C();
    v23 = v32;
    *v32 = v22;
    v23[1] = v24;
    v44 = 1;
    v31[1] = sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361F068();
    v25 = (char *)v23 + *(int *)(v13 + 20);
    v26 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v26(v25, v21, v5);
    v43 = 2;
    v27 = (uint64_t)v35;
    sub_23361EFFC();
    v36 = 0;
    sub_23318C8A8(v27, (uint64_t)v41);
    v42 = 3;
    v28 = v34;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v20);
    v29 = (uint64_t)v32;
    v26((char *)v32 + *(int *)(v13 + 28), v28, v5);
    sub_23358AEC8(v29, v33);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    return sub_233168500(v29, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
  }
}

uint64_t sub_23358A744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankConnectTermsAndConditions.init(from:)(a1, a2);
}

uint64_t sub_23358A758(_QWORD *a1)
{
  return BankConnectTermsAndConditions.encode(to:)(a1);
}

uint64_t sub_23358A76C()
{
  sub_23361F350();
  BankConnectTermsAndConditions.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_23358A7AC()
{
  sub_23361F350();
  BankConnectTermsAndConditions.hash(into:)();
  return sub_23361F3A4();
}

uint64_t BankConnectTermsAndConditions.shouldBeReviewed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  int v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for BankConnectTermsAndConditions();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v12 = sub_23361D5C8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    sub_23319F164(v1 + *(int *)(v2 + 24), (uint64_t)v7);
    v13 = 1;
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    sub_233168608((uint64_t)v7, (uint64_t *)&unk_254247DA0);
    sub_23358AEC8(v1, (uint64_t)v4);
    if (v14 == 1)
      goto LABEL_6;
  }
  else
  {
    sub_23358AEC8(v1, (uint64_t)v4);
  }
  v13 = sub_23358A978();
LABEL_6:
  sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
  return v13 & 1;
}

uint64_t sub_23358A978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  void (*v13)(char *, uint64_t);
  char v14;
  char v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  v11 = type metadata accessor for BankConnectTermsAndConditions();
  sub_23361D5F8();
  v12 = sub_23361D5C8();
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v10, v4);
  if ((v12 & 1) != 0 || (sub_23361D5F8(), v14 = sub_23361D5C8(), v13(v10, v4), (v14 & 1) == 0))
  {
    v15 = 0;
  }
  else
  {
    sub_23319F164(v0 + *(int *)(v11 + 24), (uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_233168608((uint64_t)v3, (uint64_t *)&unk_254247DA0);
      v15 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
      v15 = sub_23361D5BC();
      v13(v8, v4);
    }
  }
  return v15 & 1;
}

uint64_t _s10FinanceKit29BankConnectTermsAndConditionsV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _BYTE *v27;
  void (*v28)(_BYTE *, uint64_t);
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v29[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v29[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_23361F224(), v21 = 0, (v20 & 1) != 0))
  {
    v33 = v14;
    v22 = type metadata accessor for BankConnectTermsAndConditions();
    if ((sub_23361D5E0() & 1) != 0)
    {
      v32 = v7;
      sub_23319F164((uint64_t)a1 + *(int *)(v22 + 24), (uint64_t)v19);
      sub_23319F164((uint64_t)a2 + *(int *)(v22 + 24), (uint64_t)v17);
      v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_23319F164((uint64_t)v19, (uint64_t)v10);
      sub_23319F164((uint64_t)v17, v23);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v24((uint64_t)v10, 1, v4) == 1)
      {
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        if (v24(v23, 1, v4) == 1)
        {
          sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
LABEL_14:
          v21 = sub_23361D5E0();
          return v21 & 1;
        }
      }
      else
      {
        v31 = v5;
        v25 = (uint64_t)v33;
        sub_23319F164((uint64_t)v10, (uint64_t)v33);
        if (v24(v23, 1, v4) != 1)
        {
          v27 = v32;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v31 + 32))(v32, v23, v4);
          sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
          v30 = sub_23361E108();
          v28 = *(void (**)(_BYTE *, uint64_t))(v31 + 8);
          v28(v27, v4);
          sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
          sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
          v28((_BYTE *)v25, v4);
          sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
          if ((v30 & 1) != 0)
            goto LABEL_14;
          goto LABEL_11;
        }
        sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v25, v4);
      }
      sub_233168608((uint64_t)v10, &qword_256042DA0);
    }
LABEL_11:
    v21 = 0;
  }
  return v21 & 1;
}

unint64_t sub_23358AE84()
{
  unint64_t result;

  result = qword_2560564F0;
  if (!qword_2560564F0)
  {
    result = MEMORY[0x234934494](&unk_233660A3C, &type metadata for BankConnectTermsAndConditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560564F0);
  }
  return result;
}

uint64_t sub_23358AEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectTermsAndConditions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23358AF0C()
{
  return sub_233167C58(&qword_256056500, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditions, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditions);
}

char *initializeBufferWithCopyOfBuffer for BankConnectTermsAndConditions(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = &v4[v14];
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v13(&v4[a3[7]], &a2[a3[7]], v11);
  }
  return v4;
}

uint64_t destroy for BankConnectTermsAndConditions(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    v9(v7, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + a2[7], v5);
}

char *initializeWithCopy for BankConnectTermsAndConditions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  return a1;
}

char *assignWithCopy for BankConnectTermsAndConditions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *initializeWithTake for BankConnectTermsAndConditions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  return a1;
}

char *assignWithTake for BankConnectTermsAndConditions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(&a1[v13], 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectTermsAndConditions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23358B5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D634();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectTermsAndConditions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23358B690(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23361D634();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23358B730()
{
  unint64_t v0;
  unint64_t v1;

  sub_23361D634();
  if (v0 <= 0x3F)
  {
    sub_2331FE95C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectTermsAndConditions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23358B80C + 4 * byte_233660829[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23358B840 + 4 * byte_233660824[v4]))();
}

uint64_t sub_23358B840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23358B848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23358B850);
  return result;
}

uint64_t sub_23358B85C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23358B864);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23358B868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23358B870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectTermsAndConditions.CodingKeys()
{
  return &type metadata for BankConnectTermsAndConditions.CodingKeys;
}

unint64_t sub_23358B890()
{
  unint64_t result;

  result = qword_256056508;
  if (!qword_256056508)
  {
    result = MEMORY[0x234934494](&unk_233660A14, &type metadata for BankConnectTermsAndConditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056508);
  }
  return result;
}

unint64_t sub_23358B8D8()
{
  unint64_t result;

  result = qword_256056510;
  if (!qword_256056510)
  {
    result = MEMORY[0x234934494](&unk_233660984, &type metadata for BankConnectTermsAndConditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056510);
  }
  return result;
}

unint64_t sub_23358B920()
{
  unint64_t result;

  result = qword_256056518;
  if (!qword_256056518)
  {
    result = MEMORY[0x234934494](&unk_2336609AC, &type metadata for BankConnectTermsAndConditions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056518);
  }
  return result;
}

uint64_t sub_23358B964(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xEB00000000744164 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465776569766572 && a2 == 0xEA00000000007441 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463656666456E69 && a2 == 0xEA00000000006E4FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t dispatch thunk of RemoteUIObserverProtocol.activated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteUIObserverProtocol.deactivated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RemoteUIObserverProtocol.invalidated(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RemoteUIObserverProtocol.listenForResponse(continuation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

FinanceKit::ManagedOrderShippingType_optional __swiftcall ManagedOrderShippingType.init(rawValue:)(Swift::Int16 rawValue)
{
  FinanceKit::ManagedOrderShippingType_optional v1;

  if (rawValue == 1)
    v1.value = FinanceKit_ManagedOrderShippingType_delivery;
  else
    v1.value = FinanceKit_ManagedOrderShippingType_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

uint64_t ManagedOrderShippingType.rawValue.getter(char a1)
{
  return a1 & 1;
}

FinanceKit::ManagedOrderShippingType __swiftcall ManagedOrderShippingType.init(_:)(FinanceKit::RawOrderShippingType a1)
{
  return *(_BYTE *)a1;
}

uint64_t ManagedOrderShippingType.rawOrderShippingType.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

unint64_t sub_23358BB88()
{
  unint64_t result;

  result = qword_256056520;
  if (!qword_256056520)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedOrderShippingType, &type metadata for ManagedOrderShippingType);
    atomic_store(result, (unint64_t *)&qword_256056520);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManagedOrderShippingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23358BC18 + 4 * byte_233660AB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23358BC4C + 4 * byte_233660AB0[v4]))();
}

uint64_t sub_23358BC4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23358BC54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23358BC5CLL);
  return result;
}

uint64_t sub_23358BC68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23358BC70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23358BC74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23358BC7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderShippingType()
{
  return &type metadata for ManagedOrderShippingType;
}

uint64_t static UserPresenceCreationError.== infix(_:_:)()
{
  return 1;
}

uint64_t UserPresenceCreationError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t UserPresenceCreationError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

BOOL UserPresence.XPC.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

_QWORD *sub_23358BD28@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t UserPresence.xpcValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for UserPresence();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23358BE44(v0, (uint64_t)v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  result = 0;
  if (v5 != 1)
  {
    v7 = sub_23361D6A0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for UserPresence()
{
  uint64_t result;

  result = qword_2560565B0;
  if (!qword_2560565B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23358BE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserPresence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UserPresence.init(xpcValue:operationID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
    {
      sub_2331D7514(a2, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_233168608((uint64_t)v8, &qword_254246740);
        if (qword_256041CA0 != -1)
          swift_once();
        v15 = sub_23361DB80();
        __swift_project_value_buffer(v15, (uint64_t)qword_2560495B0);
        v16 = sub_23361DB68();
        v17 = sub_23361E768();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v18 = 0;
          _os_log_impl(&dword_233151000, v16, v17, "Operation ID is not provided for background fetch", v18, 2u);
          MEMORY[0x234934590](v18, -1, -1);
        }

        sub_23358C148();
        swift_allocError();
        swift_willThrow();
        return sub_233168608(a2, &qword_254246740);
      }
      else
      {
        sub_233168608(a2, &qword_254246740);
        v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v19(v12, v8, v9);
        v19(a3, v12, v9);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 0, 1, v20);
      }
    }
    else
    {
      result = sub_23361EF24();
      __break(1u);
    }
  }
  else
  {
    sub_233168608(a2, &qword_254246740);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  return result;
}

unint64_t sub_23358C148()
{
  unint64_t result;

  result = qword_256056528;
  if (!qword_256056528)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for UserPresenceCreationError, &type metadata for UserPresenceCreationError);
    atomic_store(result, (unint64_t *)&qword_256056528);
  }
  return result;
}

uint64_t _s10FinanceKit12UserPresenceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_23361D6A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserPresence();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560565C0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_23358BE44(a1, (uint64_t)v14);
  sub_23358BE44(a2, v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  if (v17((uint64_t)v14, 1, v16) != 1)
  {
    sub_23358BE44((uint64_t)v14, (uint64_t)v10);
    if (v17(v15, 1, v16) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = sub_23361D670();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_23358CABC((uint64_t)v14);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v17(v15, 1, v16) != 1)
  {
LABEL_6:
    sub_233168608((uint64_t)v14, (uint64_t *)&unk_2560565C0);
    v18 = 0;
    return v18 & 1;
  }
  sub_23358CABC((uint64_t)v14);
  v18 = 1;
  return v18 & 1;
}

unint64_t sub_23358C388()
{
  unint64_t result;

  result = qword_256056530;
  if (!qword_256056530)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for UserPresenceCreationError, &type metadata for UserPresenceCreationError);
    atomic_store(result, (unint64_t *)&qword_256056530);
  }
  return result;
}

unint64_t sub_23358C3D0()
{
  unint64_t result;

  result = qword_256056538;
  if (!qword_256056538)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for UserPresence.XPC, &type metadata for UserPresence.XPC);
    atomic_store(result, (unint64_t *)&qword_256056538);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UserPresenceCreationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23358C454 + 4 * asc_233660B80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23358C474 + 4 * byte_233660B85[v4]))();
}

_BYTE *sub_23358C454(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23358C474(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23358C47C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23358C484(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23358C48C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23358C494(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserPresenceCreationError()
{
  return &type metadata for UserPresenceCreationError;
}

uint64_t *initializeBufferWithCopyOfBuffer for UserPresence(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23361D6A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for UserPresence(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23361D6A0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for UserPresence(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for UserPresence(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23361D6A0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_256047890);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361D6A0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for UserPresence(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for UserPresence(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23361D6A0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_256047890);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361D6A0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserPresence()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23358C97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UserPresence()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23358C9D8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23358CA2C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23358CA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047890);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

ValueMetadata *type metadata accessor for UserPresence.XPC()
{
  return &type metadata for UserPresence.XPC;
}

uint64_t sub_23358CABC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserPresence();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23358CAF8()
{
  sub_23361ED98();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361E27C();
  return swift_bridgeObjectRelease();
}

void __swiftcall FullyQualifiedTransactionIdentifier.init(transactionId:fullyQualifiedAccountIdentifier:)(FinanceKit::FullyQualifiedTransactionIdentifier *__return_ptr retstr, Swift::String transactionId, FinanceKit::FullyQualifiedAccountIdentifier fullyQualifiedAccountIdentifier)
{
  Swift::String v3;
  uint64_t v4;
  void *v5;

  v3 = *(Swift::String *)fullyQualifiedAccountIdentifier.accountID._countAndFlagsBits;
  v4 = *(_QWORD *)(fullyQualifiedAccountIdentifier.accountID._countAndFlagsBits + 16);
  v5 = *(void **)(fullyQualifiedAccountIdentifier.accountID._countAndFlagsBits + 24);
  retstr->transactionId = transactionId;
  retstr->fullyQualifiedAccountIdentifier.accountID = v3;
  retstr->fullyQualifiedAccountIdentifier.institutionID._countAndFlagsBits = v4;
  retstr->fullyQualifiedAccountIdentifier.institutionID._object = v5;
}

void *InternalTransaction.displayLocation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 96));
  v2 = v1;
  return v1;
}

uint64_t type metadata accessor for InternalTransaction(uint64_t a1)
{
  return sub_233177414(a1, qword_256056798);
}

void sub_23358CC5C(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for InternalTransaction(0) + 96);
  v5 = *(void **)(a2 + v4);
  v6 = v3;

  *(_QWORD *)(a2 + v4) = v3;
}

void InternalTransaction.displayLocation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for InternalTransaction(0) + 96);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t InternalTransaction.merchantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalTransaction.transactionDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23358CD5C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 64));
  return result;
}

uint64_t InternalTransaction.transactionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalTransaction(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

id InternalTransaction.xpcValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  objc_super v8;

  v1 = type metadata accessor for InternalTransaction(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2332AB558(v0, (uint64_t)v3);
  v4 = (objc_class *)type metadata accessor for InternalTransaction.XPC(0);
  v5 = objc_allocWithZone(v4);
  sub_2332AB558((uint64_t)v3, (uint64_t)v5 + OBJC_IVAR___XPCInternalTransaction_value);
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  sub_233168500((uint64_t)v3, type metadata accessor for InternalTransaction);
  return v6;
}

uint64_t InternalTransaction.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t InternalTransaction.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*InternalTransaction.id.modify())()
{
  return nullsub_1;
}

uint64_t InternalTransaction.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 20);
  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InternalTransaction.accountID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 20);
  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InternalTransaction.accountID.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.transactionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t InternalTransaction.transactionID.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  return result;
}

uint64_t (*InternalTransaction.transactionID.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.paymentHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalTransaction.paymentHash.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalTransaction(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalTransaction.paymentHash.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.transactionAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 32);
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v3 + 4);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

__n128 InternalTransaction.transactionAmount.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  v6 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)v6 = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v6 + 4) = result;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v5;
  return result;
}

uint64_t (*InternalTransaction.transactionAmount.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.foreignCurrencyAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 36);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

__n128 InternalTransaction.foreignCurrencyAmount.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 36);
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)v3 = v6;
  *(__n128 *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

uint64_t (*InternalTransaction.foreignCurrencyAmount.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.foreignCurrencyExchangeRate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 40));
}

uint64_t InternalTransaction.foreignCurrencyExchangeRate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for InternalTransaction(0);
  v8 = v3 + *(int *)(result + 40);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_DWORD *)(v8 + 16) = a3;
  *(_BYTE *)(v8 + 20) = BYTE4(a3) & 1;
  return result;
}

uint64_t (*InternalTransaction.foreignCurrencyExchangeRate.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.creditDebitIndicator.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalTransaction(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t InternalTransaction.creditDebitIndicator.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalTransaction(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = v2;
  return result;
}

uint64_t (*InternalTransaction.creditDebitIndicator.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.merchantCategoryCode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int16 *v4;
  __int16 v5;

  result = type metadata accessor for InternalTransaction(0);
  v4 = (__int16 *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 2);
  *(_WORD *)a1 = v5;
  *(_BYTE *)(a1 + 2) = (_BYTE)v4;
  return result;
}

uint64_t InternalTransaction.merchantCategoryCode.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 2);
  result = type metadata accessor for InternalTransaction(0);
  v5 = v1 + *(int *)(result + 48);
  *(_WORD *)v5 = v2;
  *(_BYTE *)(v5 + 2) = v3;
  return result;
}

uint64_t (*InternalTransaction.merchantCategoryCode.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.merchantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalTransaction(0) + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalTransaction.merchantName.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.transactionDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalTransaction(0) + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalTransaction.transactionDescription.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.originalTransactionDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalTransaction.originalTransactionDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalTransaction(0) + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalTransaction.originalTransactionDescription.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.transactionType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalTransaction(0);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = v2;
  return result;
}

uint64_t (*InternalTransaction.transactionType.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.status.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalTransaction(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t InternalTransaction.status.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalTransaction(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = v2;
  return result;
}

uint64_t (*InternalTransaction.status.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalTransaction(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 72));
  return result;
}

uint64_t InternalTransaction.transactionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 76);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InternalTransaction.transactionDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 76);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InternalTransaction.transactionDate.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.postedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalTransaction(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 80), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t InternalTransaction.postedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalTransaction(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 80), (uint64_t *)&unk_254247DA0);
}

uint64_t (*InternalTransaction.postedDate.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalTransaction(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 84), a1, &qword_2560465A8);
}

uint64_t InternalTransaction.actions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalTransaction(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 84), &qword_2560465A8);
}

uint64_t (*InternalTransaction.actions.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.sharedId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalTransaction(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 88), a1, &qword_254246740);
}

uint64_t InternalTransaction.sharedId.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalTransaction(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 88), &qword_254246740);
}

uint64_t (*InternalTransaction.sharedId.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.altDSID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalTransaction.altDSID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalTransaction(0) + 92));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalTransaction.altDSID.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

void (*InternalTransaction.displayLocation.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for InternalTransaction(0) + 96);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(void **)(v1 + v3);
  *(_QWORD *)a1 = v4;
  v5 = v4;
  return sub_233420904;
}

uint64_t InternalTransaction.displayDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 100);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InternalTransaction.displayDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 100);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InternalTransaction.displayDate.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.monthAndYear.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 104));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalTransaction.monthAndYear.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalTransaction(0) + 104));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalTransaction.monthAndYear.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.year.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalTransaction(0) + 108));
}

uint64_t InternalTransaction.year.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalTransaction(0);
  *(_QWORD *)(v1 + *(int *)(result + 108)) = a1;
  return result;
}

uint64_t (*InternalTransaction.year.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.bankTransactionCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 112));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_2332DCF40(v4, v5);
}

__n128 InternalTransaction.bankTransactionCode.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 112));
  sub_2332DCF70(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*InternalTransaction.bankTransactionCode.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.proprietaryBankTransactionCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 116));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_233503D94(v4, v5);
}

__n128 InternalTransaction.proprietaryBankTransactionCode.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InternalTransaction(0) + 116));
  sub_2332DCF70(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*InternalTransaction.proprietaryBankTransactionCode.modify())(_QWORD)
{
  type metadata accessor for InternalTransaction(0);
  return nullsub_1;
}

uint64_t InternalTransaction.init(id:accountID:transactionID:paymentHash:transactionAmount:foreignCurrencyAmount:foreignCurrencyExchangeRate:creditDebitIndicator:merchantCategoryCode:merchantName:transactionDescription:originalTransactionDescription:transactionType:status:source:transactionDate:postedDate:actions:sharedId:altDSID:displayLocation:displayDate:monthAndYear:year:bankTransactionCode:proprietaryBankTransactionCode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 *a12, unsigned __int16 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 *a20,unsigned __int8 *a21,unsigned __int8 *a22,char *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char *a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned __int8 a34,uint64_t *a35,unsigned __int8 **a36)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  int *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _WORD *v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t result;
  unsigned __int8 *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _WORD *v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int8 *v173;
  unsigned __int8 *v174;
  unsigned __int8 *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;

  v156 = a8;
  v151 = a5;
  v150 = a4;
  v181 = a2;
  v182 = a1;
  v166 = a34;
  v167 = a33;
  v162 = a32;
  v177 = a30;
  v179 = a25;
  v180 = a24;
  v161 = a28;
  v178 = a26;
  v160 = a27;
  v158 = a19;
  v157 = a18;
  v155 = a17;
  v154 = a16;
  v153 = a15;
  v152 = a14;
  v149 = a11;
  v148 = a10;
  v183 = a23;
  v174 = a21;
  v175 = a22;
  v173 = a20;
  v120 = sub_23361D748();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v118 = (char *)&v116 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_23361D868();
  v124 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v122 = (char *)&v116 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_23361CD40();
  v123 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v121 = (char *)&v116 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  MEMORY[0x24BDAC7A8](v43);
  v117 = (char *)&v116 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23361D634();
  v46 = *(_QWORD *)(v45 - 8);
  v176 = v45;
  MEMORY[0x24BDAC7A8](v45);
  v140 = (char *)&v116 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = *a3;
  v131 = a3[1];
  v130 = *((unsigned __int8 *)a3 + 16);
  v134 = *a6;
  v139 = *((_QWORD *)a6 + 3);
  v138 = *((_QWORD *)a6 + 4);
  v137 = *a7;
  v136 = a7[1];
  v135 = *((_QWORD *)a7 + 4);
  v142 = *a12;
  v144 = *a13;
  v143 = *((unsigned __int8 *)a13 + 2);
  v145 = *v173;
  v146 = *v174;
  v147 = *v175;
  v48 = *a35;
  v170 = a35[1];
  v171 = v48;
  v49 = a35[2];
  v168 = a35[3];
  v169 = v49;
  v50 = *a36;
  v174 = a36[1];
  v175 = v50;
  v51 = a36[2];
  v172 = (uint64_t)a36[3];
  v173 = v51;
  v52 = (int *)type metadata accessor for InternalTransaction(0);
  v53 = (_QWORD *)(a9 + v52[7]);
  v54 = a9 + v52[9];
  v55 = a9 + v52[10];
  v56 = v52[13];
  v128 = (_WORD *)(a9 + v52[12]);
  v127 = (_QWORD *)(a9 + v56);
  v141 = a9 + v52[20];
  v57 = *(_QWORD *)(a6 + 1);
  v58 = *(_QWORD *)(a6 + 3);
  (*(void (**)(void))(v46 + 56))();
  v133 = a9 + v52[21];
  v59 = v133;
  v60 = type metadata accessor for Actions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v129 = a9 + v52[22];
  v61 = v129;
  v62 = sub_23361D6A0();
  v63 = *(_QWORD *)(v62 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v61, 1, 1, v62);
  v64 = (_QWORD *)(a9 + v52[23]);
  *v64 = 0;
  v64[1] = 0;
  v163 = v52[24];
  *(_QWORD *)(a9 + v163) = 0;
  v65 = a9 + v52[28];
  *(_OWORD *)v65 = 0u;
  *(_OWORD *)(v65 + 16) = 0u;
  v66 = (uint64_t *)(a9 + v52[29]);
  *(_OWORD *)v66 = 0u;
  *((_OWORD *)v66 + 1) = 0u;
  v159 = v66;
  v164 = v63;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
  v67(a9, v182, v62);
  v68 = a9 + v52[5];
  v165 = v62;
  v67(v68, v181, v62);
  v69 = a9 + v52[6];
  v70 = v131;
  *(_QWORD *)v69 = v132;
  *(_QWORD *)(v69 + 8) = v70;
  *(_BYTE *)(v69 + 16) = v130;
  v71 = v151;
  *v53 = v150;
  v53[1] = v71;
  v72 = v140;
  v73 = a9 + v52[8];
  *(_DWORD *)v73 = v134;
  *(_QWORD *)(v73 + 4) = v57;
  *(_QWORD *)(v73 + 12) = v58;
  v74 = v138;
  *(_QWORD *)(v73 + 24) = v139;
  *(_QWORD *)(v73 + 32) = v74;
  v75 = v136;
  *(_OWORD *)v54 = v137;
  *(_OWORD *)(v54 + 16) = v75;
  *(_QWORD *)(v54 + 32) = v135;
  v76 = v148;
  *(_QWORD *)v55 = v156;
  *(_QWORD *)(v55 + 8) = v76;
  BYTE4(v76) = BYTE4(v149);
  *(_DWORD *)(v55 + 16) = v149;
  *(_BYTE *)(v55 + 20) = BYTE4(v76) & 1;
  *(_BYTE *)(a9 + v52[11]) = v142;
  v77 = v127;
  v78 = v153;
  *v127 = v152;
  v77[1] = v78;
  v79 = v128;
  *v128 = v144;
  *((_BYTE *)v79 + 2) = v143;
  v80 = (_QWORD *)(a9 + v52[14]);
  v81 = v155;
  *v80 = v154;
  v80[1] = v81;
  v82 = (_QWORD *)(a9 + v52[15]);
  v83 = v158;
  *v82 = v157;
  v82[1] = v83;
  *(_BYTE *)(a9 + v52[16]) = v145;
  *(_BYTE *)(a9 + v52[17]) = v146;
  *(_BYTE *)(a9 + v52[18]) = v147;
  v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
  v85 = v183;
  v86 = v176;
  v84(a9 + v52[19], (uint64_t)v183, v176);
  sub_2332C489C(v180, v141, (uint64_t *)&unk_254247DA0);
  sub_2332C489C(v179, v133, &qword_2560465A8);
  sub_2332C489C(v178, v129, &qword_254246740);
  swift_bridgeObjectRelease();
  v87 = v161;
  *v64 = v160;
  v64[1] = v87;
  v88 = v86;
  v84(a9 + v52[25], (uint64_t)v177, v86);
  v84((uint64_t)v72, (uint64_t)v85, v86);
  v89 = v162;
  if (!v162)
  {
    v91 = (uint64_t)v117;
    sub_23361D6D0();
    type metadata accessor for FormatterConfiguration();
    sub_23361D7D8();
    sub_23361D88C();
    a31 = ManagedInternalTransaction.MonthYearFormatter.format(_:)();
    v89 = v92;
    sub_233168500(v91, (uint64_t (*)(_QWORD))type metadata accessor for ManagedInternalTransaction.MonthYearFormatter);
  }
  v93 = *(void (**)(char *, uint64_t))(v46 + 8);
  v93(v72, v88);
  v94 = (uint64_t *)(a9 + v52[26]);
  *v94 = a31;
  v94[1] = v89;
  v95 = v167;
  if ((v166 & 1) != 0)
  {
    v96 = v119;
    v97 = v118;
    v98 = v120;
    (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v118, *MEMORY[0x24BDCEF50], v120);
    v99 = v122;
    sub_23361D754();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
    v100 = sub_23361D850();
    v101 = *(_QWORD *)(v100 - 8);
    v102 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = xmmword_233623D60;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v101 + 104))(v103 + v102, *MEMORY[0x24BDCF240], v100);
    sub_2333EF4B0(v103);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v104 = v121;
    sub_23361D790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v99, v126);
    v105 = sub_23361CCD4();
    v88 = v176;
    if ((v106 & 1) != 0)
      v95 = 0;
    else
      v95 = v105;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v104, v125);
  }
  *(_QWORD *)(a9 + v52[27]) = v95;
  v107 = v163;

  *(_QWORD *)(a9 + v107) = a29;
  v93(v177, v88);
  sub_233168608(v178, &qword_254246740);
  sub_233168608(v179, &qword_2560465A8);
  sub_233168608(v180, (uint64_t *)&unk_254247DA0);
  v93(v183, v88);
  v108 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
  v109 = v165;
  v108(v181, v165);
  v108(v182, v109);
  sub_2332DCF70(*(_QWORD *)v65, *(_QWORD *)(v65 + 8));
  v110 = v170;
  *(_QWORD *)v65 = v171;
  *(_QWORD *)(v65 + 8) = v110;
  v111 = v168;
  *(_QWORD *)(v65 + 16) = v169;
  *(_QWORD *)(v65 + 24) = v111;
  v112 = v159;
  result = sub_2332DCF70(*v159, v159[1]);
  v114 = v174;
  *v112 = (uint64_t)v175;
  v112[1] = (uint64_t)v114;
  v115 = v172;
  v112[2] = (uint64_t)v173;
  v112[3] = v115;
  return result;
}

uint64_t static TransactionIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_23361F224();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t sub_23358E7F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23358E820 + 4 * byte_233660D40[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23358E820()
{
  return 0x49746E756F636361;
}

uint64_t sub_23358E83C()
{
  return 0x746361736E617274;
}

uint64_t sub_23358E990()
{
  return 0x6144646574736F70;
}

uint64_t sub_23358E9AC()
{
  return 0x736E6F69746361;
}

uint64_t sub_23358E9C4()
{
  return 0x6449646572616873;
}

uint64_t sub_23358E9DC()
{
  return 0x44495344746C61;
}

unint64_t sub_23358E9F4()
{
  return 0xD000000000000016;
}

uint64_t sub_23358EA0C()
{
  return 0x4479616C70736964;
}

uint64_t sub_23358EA2C()
{
  return 0x646E4168746E6F6DLL;
}

uint64_t sub_23358EA4C()
{
  return 1918985593;
}

unint64_t sub_23358EA5C()
{
  return 0xD000000000000013;
}

void sub_23358EA74()
{
  JUMPOUT(0x23358EA8CLL);
}

uint64_t sub_23358EA98()
{
  unsigned __int8 *v0;

  return sub_23358E7F8(*v0);
}

uint64_t sub_23358EAA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233598490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23358EAC4()
{
  sub_233594718();
  return sub_23361F428();
}

uint64_t sub_23358EAEC()
{
  sub_233594718();
  return sub_23361F434();
}

uint64_t InternalTransaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  int v20;
  char v21;
  __int16 *v22;
  __int16 v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  _OWORD *v27;
  __int128 v28;
  _QWORD v30[3];
  unint64_t v31;
  _BYTE v32[32];
  uint64_t v33;
  char v34;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560565D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233594718();
  sub_23361F410();
  v32[0] = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for InternalTransaction(0);
    v32[0] = 1;
    sub_23361F17C();
    v10 = (uint64_t *)(v3 + v9[6]);
    v11 = *v10;
    v12 = v10[1];
    LOBYTE(v10) = *((_BYTE *)v10 + 16);
    *(_QWORD *)v32 = v11;
    *(_QWORD *)&v32[8] = v12;
    v32[16] = (_BYTE)v10;
    v34 = 2;
    sub_23359475C();
    sub_23361F17C();
    v32[0] = 3;
    sub_23361F0E0();
    v13 = v3 + v9[8];
    v14 = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 32);
    *(_DWORD *)v32 = *(_DWORD *)v13;
    *(_OWORD *)&v32[4] = *(_OWORD *)(v13 + 4);
    *(_QWORD *)&v32[24] = v14;
    v33 = v15;
    v34 = 4;
    v31 = sub_23317231C();
    sub_23361F17C();
    v16 = v3 + v9[9];
    v17 = *(_QWORD *)(v16 + 32);
    v18 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v32 = *(_OWORD *)v16;
    *(_OWORD *)&v32[16] = v18;
    v33 = v17;
    v34 = 5;
    sub_23361F110();
    v19 = v3 + v9[10];
    v20 = *(_DWORD *)(v19 + 16);
    v21 = *(_BYTE *)(v19 + 20);
    *(_OWORD *)v32 = *(_OWORD *)v19;
    *(_DWORD *)&v32[16] = v20;
    v32[20] = v21;
    v34 = 6;
    type metadata accessor for Decimal(0);
    sub_233167C58(&qword_2560565F8, (uint64_t (*)(uint64_t))type metadata accessor for Decimal, MEMORY[0x24BDD03A8]);
    sub_23361F110();
    v32[0] = *(_BYTE *)(v3 + v9[11]);
    v34 = 7;
    sub_23317A7CC();
    sub_23361F17C();
    v22 = (__int16 *)(v3 + v9[12]);
    v23 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 2);
    *(_WORD *)v32 = v23;
    v32[2] = (_BYTE)v22;
    v34 = 8;
    sub_233500A14();
    sub_23361F110();
    v32[0] = 9;
    sub_23361F0E0();
    v32[0] = 10;
    sub_23361F140();
    v32[0] = 11;
    sub_23361F140();
    v32[0] = *(_BYTE *)(v3 + v9[16]);
    v34 = 12;
    sub_2335004B4();
    sub_23361F17C();
    v32[0] = *(_BYTE *)(v3 + v9[17]);
    v34 = 13;
    sub_233500720();
    sub_23361F17C();
    v32[0] = *(_BYTE *)(v3 + v9[18]);
    v34 = 14;
    sub_2335947A0();
    sub_23361F17C();
    v31 = v3 + v9[19];
    v32[0] = 15;
    v24 = sub_23361D634();
    v30[2] = sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v31 = v24;
    sub_23361F17C();
    v32[0] = 16;
    sub_23361F110();
    v30[1] = v3 + v9[21];
    v32[0] = 17;
    type metadata accessor for Actions();
    sub_233167C58((unint64_t *)&unk_256056630, (uint64_t (*)(uint64_t))type metadata accessor for Actions, (uint64_t)&protocol conformance descriptor for Actions);
    sub_23361F110();
    v32[0] = 18;
    sub_23361F110();
    v32[0] = 19;
    sub_23361F0E0();
    *(_QWORD *)v32 = *(_QWORD *)(v3 + v9[24]);
    v34 = 20;
    sub_2334303A4();
    sub_23361F110();
    v32[0] = 21;
    sub_23361F17C();
    v32[0] = 22;
    sub_23361F140();
    v32[0] = 23;
    sub_23361F164();
    v25 = (_OWORD *)(v3 + v9[28]);
    v26 = v25[1];
    *(_OWORD *)v32 = *v25;
    *(_OWORD *)&v32[16] = v26;
    v34 = 24;
    sub_2335947E4();
    sub_23361F110();
    v27 = (_OWORD *)(v3 + v9[29]);
    v28 = v27[1];
    *(_OWORD *)v32 = *v27;
    *(_OWORD *)&v32[16] = v28;
    v34 = 25;
    sub_233594828();
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t InternalTransaction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(void);
  char *v35;
  uint64_t *v36;
  uint64_t *v37;
  char *v38;
  unsigned int v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  void (*v50)(uint64_t, uint64_t);
  int v51;
  _BOOL4 v52;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  char *v69;
  int v70;
  char v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  __int128 v110;
  uint64_t *v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  __int128 v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  char *v140;
  char *v141;
  int *v142;
  char *v143;
  uint64_t *v144;
  _QWORD *v145;
  __int128 v146;
  _BYTE v147[32];
  uint64_t v148;
  char v149;

  v145 = a1;
  v122 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v2);
  v120 = (uint64_t)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
  MEMORY[0x24BDAC7A8](v4);
  v119 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v118 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v121 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v123 = (char *)&v117 - v12;
  *(_QWORD *)&v146 = sub_23361D6A0();
  v13 = *(_QWORD *)(v146 - 8);
  v14 = MEMORY[0x24BDAC7A8](v146);
  v124 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)&v127 = (char *)&v117 - v16;
  v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056650);
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v18 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for InternalTransaction(0);
  v20 = (int *)MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = &v22[v20[7]];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v144 = (uint64_t *)v23;
  v24 = &v22[v20[9]];
  *((_QWORD *)v24 + 4) = 0;
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  v143 = v24;
  v25 = &v22[v20[10]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  *((_DWORD *)v25 + 4) = 0;
  v25[20] = 1;
  v26 = &v22[v20[12]];
  *(_WORD *)v26 = 0;
  v26[2] = 1;
  v27 = &v22[v20[13]];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v138 = v8;
  v139 = (uint64_t *)v27;
  v28 = (uint64_t)&v22[v20[20]];
  v137 = v9;
  v29 = *(void (**)(void))(v9 + 56);
  v134 = v28;
  v29();
  v30 = (uint64_t)&v22[v19[21]];
  v31 = type metadata accessor for Actions();
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v133 = v30;
  v32(v30, 1, 1, v31);
  v33 = (uint64_t)&v22[v19[22]];
  v128 = v13;
  v34 = *(void (**)(void))(v13 + 56);
  v132 = v33;
  v34();
  v35 = &v22[v19[23]];
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v130 = v35;
  v131 = v19[24];
  *(_QWORD *)&v22[v131] = 0;
  v36 = (uint64_t *)&v22[v19[28]];
  *(_OWORD *)v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  v135 = v36;
  v141 = v22;
  v142 = v19;
  v37 = (uint64_t *)&v22[v19[29]];
  *(_OWORD *)v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
  v136 = v37;
  __swift_project_boxed_opaque_existential_1(v145, v145[3]);
  sub_233594718();
  v129 = v18;
  v38 = v140;
  sub_23361F3EC();
  if (v38)
  {
    v140 = v38;
    v39 = 119472680;
    v40 = v145;
    v41 = v146;
  }
  else
  {
    v42 = v124;
    v140 = v26;
    v117 = v31;
    v147[0] = 0;
    v43 = sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v41 = v146;
    sub_23361F068();
    v54 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
    v55 = (uint64_t)v141;
    v54(v141, (char *)v127, v41);
    v147[0] = 1;
    sub_23361F068();
    v56 = v43;
    v57 = v142;
    *(_QWORD *)&v127 = v56;
    v54((char *)(v55 + v142[5]), v42, v41);
    v149 = 2;
    sub_23359486C();
    sub_23361F068();
    v58 = *(_QWORD *)&v147[8];
    v59 = v147[16];
    v60 = v55 + v57[6];
    *(_QWORD *)v60 = *(_QWORD *)v147;
    *(_QWORD *)(v60 + 8) = v58;
    *(_BYTE *)(v60 + 16) = v59;
    v147[0] = 3;
    v61 = sub_23361EFCC();
    v62 = v144;
    *v144 = v61;
    v62[1] = v63;
    v149 = 4;
    sub_233172558();
    sub_23361F068();
    v64 = *(_QWORD *)&v147[24];
    v65 = v148;
    v66 = v55 + v57[8];
    *(_DWORD *)v66 = *(_DWORD *)v147;
    *(_OWORD *)(v66 + 4) = *(_OWORD *)&v147[4];
    *(_QWORD *)(v66 + 24) = v64;
    *(_QWORD *)(v66 + 32) = v65;
    v149 = 5;
    sub_23361EFFC();
    v67 = v148;
    v68 = *(_OWORD *)&v147[16];
    v69 = v143;
    *(_OWORD *)v143 = *(_OWORD *)v147;
    *((_OWORD *)v69 + 1) = v68;
    *((_QWORD *)v69 + 4) = v67;
    type metadata accessor for Decimal(0);
    v149 = 6;
    sub_233167C58((unint64_t *)&unk_256056670, (uint64_t (*)(uint64_t))type metadata accessor for Decimal, MEMORY[0x24BDD03B0]);
    sub_23361EFFC();
    v70 = *(_DWORD *)&v147[16];
    v71 = v147[20];
    *(_OWORD *)v25 = *(_OWORD *)v147;
    *((_DWORD *)v25 + 4) = v70;
    v25[20] = v71;
    v149 = 7;
    sub_23317A810();
    sub_23361F068();
    *(_BYTE *)(v55 + v57[11]) = v147[0];
    v149 = 8;
    sub_2335009D0();
    sub_23361EFFC();
    v72 = v147[2];
    v73 = v140;
    *(_WORD *)v140 = *(_WORD *)v147;
    v73[2] = v72;
    v147[0] = 9;
    v74 = sub_23361EFCC();
    v140 = 0;
    v75 = v139;
    *v139 = v74;
    v75[1] = v76;
    v147[0] = 10;
    v77 = sub_23361F02C();
    v140 = 0;
    v79 = (uint64_t *)&v141[v142[14]];
    *v79 = v77;
    v79[1] = v78;
    v147[0] = 11;
    v80 = v140;
    v81 = sub_23361F02C();
    v140 = v80;
    if (v80)
    {
      (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
      v39 = 52364863;
    }
    else
    {
      v83 = (uint64_t *)&v141[v142[15]];
      *v83 = v81;
      v83[1] = v82;
      v149 = 12;
      sub_233500470();
      v84 = v140;
      sub_23361F068();
      v140 = v84;
      if (v84)
        goto LABEL_35;
      v141[v142[16]] = v147[0];
      v149 = 13;
      sub_2335006DC();
      v85 = v140;
      sub_23361F068();
      v140 = v85;
      if (v85)
        goto LABEL_35;
      v141[v142[17]] = v147[0];
      v149 = 14;
      sub_2335948B0();
      v86 = v140;
      sub_23361F068();
      v140 = v86;
      if (v86
        || (v141[v142[18]] = v147[0],
            v147[0] = 15,
            sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]),
            v87 = v140,
            sub_23361F068(),
            (v140 = v87) != 0))
      {
LABEL_35:
        (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
        v39 = 52366911;
      }
      else
      {
        v88 = *(void (**)(char *, char *, uint64_t))(v137 + 32);
        v88(&v141[v142[19]], v123, v138);
        v147[0] = 16;
        v89 = v140;
        sub_23361EFFC();
        v140 = v89;
        if (!v89)
        {
          sub_233170B8C(v118, v134, (uint64_t *)&unk_254247DA0);
          v147[0] = 17;
          sub_233167C58(&qword_256042618, (uint64_t (*)(uint64_t))type metadata accessor for Actions, (uint64_t)&protocol conformance descriptor for Actions);
          v90 = v140;
          sub_23361EFFC();
          v140 = v90;
          if (!v90)
          {
            sub_233170B8C(v119, v133, &qword_2560465A8);
            v147[0] = 18;
            v91 = v140;
            sub_23361EFFC();
            v140 = v91;
            if (!v91)
            {
              sub_233170B8C(v120, v132, &qword_254246740);
              v147[0] = 19;
              v92 = v140;
              v93 = sub_23361EFCC();
              v140 = v92;
              if (!v92)
              {
                v95 = v93;
                v96 = v94;
                v97 = v130;
                swift_bridgeObjectRelease();
                *v97 = v95;
                v97[1] = v96;
                v149 = 20;
                sub_2334303E8();
                v98 = v140;
                sub_23361EFFC();
                v140 = v98;
                if (!v98)
                {
                  v99 = *(_QWORD *)v147;
                  v100 = v131;
                  v101 = (uint64_t)v141;

                  *(_QWORD *)(v101 + v100) = v99;
                  v147[0] = 21;
                  v102 = v140;
                  sub_23361F068();
                  v140 = v102;
                  if (!v102)
                  {
                    v88(&v141[v142[25]], v121, v138);
                    v147[0] = 22;
                    v103 = v140;
                    v104 = sub_23361F02C();
                    v52 = v103 == 0;
                    v140 = v103;
                    if (!v103)
                    {
                      v106 = (uint64_t *)&v141[v142[26]];
                      *v106 = v104;
                      v106[1] = v105;
                      v147[0] = 23;
                      v107 = v140;
                      v108 = sub_23361F050();
                      v140 = v107;
                      if (!v107)
                      {
                        *(_QWORD *)&v141[v142[27]] = v108;
                        v149 = 24;
                        sub_2335948F4();
                        v109 = v140;
                        sub_23361EFFC();
                        v140 = v109;
                        if (!v109)
                        {
                          v127 = *(_OWORD *)v147;
                          v110 = *(_OWORD *)&v147[16];
                          v111 = v135;
                          sub_2332DCF70(*v135, v135[1]);
                          *(_OWORD *)v111 = v127;
                          *((_OWORD *)v111 + 1) = v110;
                          v149 = 25;
                          sub_233594938();
                          v112 = v140;
                          sub_23361EFFC();
                          v140 = v112;
                          if (!v112)
                          {
                            (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
                            v146 = *(_OWORD *)v147;
                            v114 = *(_OWORD *)&v147[16];
                            v115 = v136;
                            sub_2332DCF70(*v136, v136[1]);
                            *(_OWORD *)v115 = v146;
                            *((_OWORD *)v115 + 1) = v114;
                            v116 = (uint64_t)v141;
                            sub_2332AB558((uint64_t)v141, v122);
                            __swift_destroy_boxed_opaque_existential_0((uint64_t)v145);
                            return sub_233168500(v116, type metadata accessor for InternalTransaction);
                          }
                        }
                      }
                    }
                    (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
                    __swift_destroy_boxed_opaque_existential_0((uint64_t)v145);
                    v113 = *(void (**)(char *, uint64_t))(v128 + 8);
                    v45 = (uint64_t)v141;
                    v113(v141, v41);
                    v44 = v142;
                    v113((char *)(v45 + v142[5]), v41);
                    LOBYTE(v46) = 1;
                    v47 = 1;
                    v48 = 1;
                    v49 = 1;
                    v51 = 1;
LABEL_11:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v46 & 1) == 0)
                      goto LABEL_13;
                    goto LABEL_12;
                  }
                }
              }
            }
          }
        }
        v39 = 52399679;
        (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
      }
    }
    v40 = v145;
  }
  v45 = (uint64_t)v141;
  v44 = v142;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  v46 = (v39 >> 4) & 1;
  v47 = (v39 >> 10) & 1;
  v48 = (v39 >> 11) & 1;
  v49 = (v39 >> 15) & 1;
  if ((v39 & 1) == 0)
  {
    if ((v39 & 2) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v45 + v44[5], v41);
      goto LABEL_26;
    }
LABEL_9:
    if ((v39 & 4) == 0)
      goto LABEL_27;
    goto LABEL_10;
  }
  v50 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
  v50(v45, v41);
  if ((v39 & 2) == 0)
    goto LABEL_9;
  v50(v45 + v44[5], v41);
LABEL_26:
  if ((v39 & 4) != 0)
  {
LABEL_10:
    v51 = 0;
    v52 = 0;
    goto LABEL_11;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  v52 = 0;
  v51 = 0;
  if ((v39 & 0x10) != 0)
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v47)
  {
    swift_bridgeObjectRelease();
    if (!v48)
      goto LABEL_15;
LABEL_23:
    swift_bridgeObjectRelease();
    if (!v49)
      goto LABEL_17;
    goto LABEL_16;
  }
  if (v48)
    goto LABEL_23;
LABEL_15:
  if (v49)
LABEL_16:
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v45 + v44[19], v138);
LABEL_17:
  sub_233168608(v134, (uint64_t *)&unk_254247DA0);
  sub_233168608(v133, &qword_2560465A8);
  sub_233168608(v132, &qword_254246740);
  swift_bridgeObjectRelease();

  if (v51)
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v45 + v44[25], v138);
  if (v52)
    swift_bridgeObjectRelease();
  sub_2332DCF70(*v135, v135[1]);
  return sub_2332DCF70(*v136, v136[1]);
}

uint64_t sub_2335903B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InternalTransaction.init(from:)(a1, a2);
}

uint64_t sub_2335903CC(_QWORD *a1)
{
  return InternalTransaction.encode(to:)(a1);
}

uint64_t sub_2335903E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_233590424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2 + *(int *)(a1 + 32);
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  *(_DWORD *)a2 = *(_DWORD *)v3;
  *(_OWORD *)(a2 + 4) = *(_OWORD *)(v3 + 4);
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_233590448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v2 + *(int *)(a1 + 36);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 32) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_233590464(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_233590490@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 44));
  return result;
}

uint64_t sub_2335904A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 56));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2335904D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 60));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_233590508@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 *v3;
  __int16 v4;

  v3 = (__int16 *)(v2 + *(int *)(result + 48));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 2);
  *(_WORD *)a2 = v4;
  *(_BYTE *)(a2 + 2) = (_BYTE)v3;
  return result;
}

uint64_t sub_233590524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_233590558@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 68));
  return result;
}

uint64_t sub_233590568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 76);
  v5 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2335905A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2331686A0(v2 + *(int *)(a1 + 80), a2, (uint64_t *)&unk_254247DA0);
}

uint64_t InternalTransaction.hash(into:)()
{
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23361E090();
}

uint64_t InternalTransaction.hashValue.getter()
{
  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t TransactionIdentifier.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionIdentifier.value.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TransactionIdentifier.value.modify())()
{
  return nullsub_1;
}

uint64_t TransactionIdentifier.isStable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TransactionIdentifier.isStable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TransactionIdentifier.isStable.modify())()
{
  return nullsub_1;
}

FinanceKit::TransactionIdentifier __swiftcall TransactionIdentifier.init(value:isStable:)(Swift::String value, Swift::Bool isStable)
{
  uint64_t v2;
  FinanceKit::TransactionIdentifier result;

  *(Swift::String *)v2 = value;
  *(_BYTE *)(v2 + 16) = isStable;
  result.value = value;
  result.isStable = isStable;
  return result;
}

uint64_t TransactionIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F368();
}

uint64_t sub_233590788()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C626174537369;
  else
    return 0x65756C6176;
}

uint64_t sub_2335907C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233598F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2335907E4()
{
  sub_23359497C();
  return sub_23361F428();
}

uint64_t sub_23359080C()
{
  sub_23359497C();
  return sub_23361F434();
}

uint64_t TransactionIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560566C0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23359497C();
  sub_23361F410();
  v12 = 0;
  sub_23361F140();
  if (!v2)
  {
    v11 = 1;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t TransactionIdentifier.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t TransactionIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560566D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23359497C();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v16 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23361F038();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_233590B5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TransactionIdentifier.init(from:)(a1, a2);
}

uint64_t sub_233590B70(_QWORD *a1)
{
  return TransactionIdentifier.encode(to:)(a1);
}

uint64_t sub_233590B84()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t sub_233590BF4()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F368();
}

uint64_t sub_233590C4C()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t sub_233590CB8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_23361F224();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t FullyQualifiedTransactionIdentifier.transactionId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FullyQualifiedTransactionIdentifier.transactionId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FullyQualifiedTransactionIdentifier.transactionId.modify())()
{
  return nullsub_1;
}

uint64_t FullyQualifiedTransactionIdentifier.fullyQualifiedAccountIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 FullyQualifiedTransactionIdentifier.fullyQualifiedAccountIdentifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  v1[1] = v5;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  return result;
}

uint64_t (*FullyQualifiedTransactionIdentifier.fullyQualifiedAccountIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FullyQualifiedTransactionIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233590EB8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001FLL;
  else
    return 0x746361736E617274;
}

uint64_t sub_233590F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233598FF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233590F28()
{
  sub_2335949C0();
  return sub_23361F428();
}

uint64_t sub_233590F50()
{
  sub_2335949C0();
  return sub_23361F434();
}

uint64_t FullyQualifiedTransactionIdentifier.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560566D8);
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13 = v1[3];
  v14 = v7;
  v8 = v1[4];
  v11 = v1[5];
  v12 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335949C0();
  sub_23361F410();
  LOBYTE(v16) = 0;
  sub_23361F140();
  if (!v2)
  {
    v16 = v14;
    v17 = v13;
    v18 = v12;
    v19 = v11;
    v20 = 1;
    sub_23317220C();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v6, v4);
}

uint64_t FullyQualifiedTransactionIdentifier.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t FullyQualifiedTransactionIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560566F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2335949C0();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v17[0]) = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v18 = 1;
  sub_2331723E8();
  swift_bridgeObjectRetain();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v17[0];
  v13 = v17[1];
  v14 = v17[2];
  v15 = v17[3];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v14;
  a2[5] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233591364@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FullyQualifiedTransactionIdentifier.init(from:)(a1, a2);
}

uint64_t sub_233591378(_QWORD *a1)
{
  return FullyQualifiedTransactionIdentifier.encode(to:)(a1);
}

uint64_t sub_23359138C()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23359143C()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2335914D8()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t FullyQualifiedTransactionIdentifier.description.getter()
{
  sub_23361ED98();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23358CAF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 0;
}

uint64_t InternalTransaction.XPC.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2332AB558(v1 + OBJC_IVAR___XPCInternalTransaction_value, a1);
}

id InternalTransaction.XPC.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2332AB558(a1, (uint64_t)v3 + OBJC_IVAR___XPCInternalTransaction_value);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for InternalTransaction);
  return v4;
}

uint64_t type metadata accessor for InternalTransaction.XPC(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256056870);
}

id InternalTransaction.XPC.init(value:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_2332AB558(a1, (uint64_t)v1 + OBJC_IVAR___XPCInternalTransaction_value);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for InternalTransaction);
  return v4;
}

uint64_t static InternalTransaction.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id InternalTransaction.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316B67C(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id InternalTransaction.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316B67C(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id InternalTransaction.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void InternalTransaction.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InternalTransaction.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233591A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2332AB558(v1 + OBJC_IVAR___XPCInternalTransaction_value, a1);
}

id sub_233591A48(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_2332AB558(a1, (uint64_t)v3 + OBJC_IVAR___XPCInternalTransaction_value);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_233168500(a1, type metadata accessor for InternalTransaction);
  return v4;
}

BOOL _s10FinanceKit35FullyQualifiedTransactionIdentifierV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BOOL8 result;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1])
    return (v2 == v6 && v4 == v7 || (sub_23361F224() & 1) != 0) && (v3 == v8 && v5 == v9 || (sub_23361F224() & 1) != 0);
  v10 = sub_23361F224();
  result = 0;
  if ((v10 & 1) != 0)
    return (v2 == v6 && v4 == v7 || (sub_23361F224() & 1) != 0) && (v3 == v8 && v5 == v9 || (sub_23361F224() & 1) != 0);
  return result;
}

uint64_t _s10FinanceKit19InternalTransactionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char *v121;
  int v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int *v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  int *v224;
  uint64_t v225;
  int v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  char v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  unsigned __int16 *v238;
  char v239;
  unsigned __int16 *v240;
  char v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  char v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  char v252;
  uint64_t v253;
  int v254;
  int v255;
  uint64_t v256;
  int v257;
  int v258;
  uint64_t v259;
  int v260;
  int v261;
  char v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unsigned int (*v268)(uint64_t, uint64_t, uint64_t);
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char v273;
  void (*v274)(char *, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unsigned int (*v279)(uint64_t, uint64_t, uint64_t);
  uint64_t v280;
  uint64_t v281;
  BOOL v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unsigned int (*v287)(uint64_t, uint64_t, uint64_t);
  uint64_t v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char v292;
  void (*v293)(char *, uint64_t);
  uint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  char v304;
  int *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unsigned int v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int *v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;

  v341 = sub_23361D6A0();
  v338 = *(_QWORD *)(v341 - 8);
  MEMORY[0x24BDAC7A8](v341);
  v334 = (char *)&v331 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v5);
  v336 = (uint64_t)&v331 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v337 = __swift_instantiateConcreteTypeFromMangledName(qword_256048D18);
  MEMORY[0x24BDAC7A8](v337);
  v340 = (uint64_t)&v331 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v345 = type metadata accessor for Actions();
  v343 = *(_QWORD *)(v345 - 8);
  MEMORY[0x24BDAC7A8](v345);
  v335 = (uint64_t)&v331 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
  MEMORY[0x24BDAC7A8](v9);
  v344 = (uint64_t)&v331 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v342 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560568D0);
  MEMORY[0x24BDAC7A8](v342);
  v346 = (uint64_t)&v331 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v351 = sub_23361D634();
  v349 = *(_QWORD *)(v351 - 8);
  MEMORY[0x24BDAC7A8](v351);
  v339 = (char *)&v331 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v13);
  v348 = (uint64_t)&v331 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v347 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v347);
  v350 = (uint64_t)&v331 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v352 = (int *)type metadata accessor for InternalTransaction(0);
  v16 = MEMORY[0x24BDAC7A8](v352);
  v369 = (uint64_t)&v331 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v370 = (uint64_t)&v331 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v381 = (uint64_t)&v331 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v331 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v368 = (uint64_t)&v331 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v374 = (uint64_t)&v331 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v367 = (uint64_t)&v331 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v373 = (uint64_t)&v331 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v365 = (uint64_t)&v331 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v366 = (uint64_t)&v331 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v376 = (uint64_t)&v331 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v372 = (uint64_t)&v331 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v377 = (uint64_t)&v331 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v390 = (uint64_t)&v331 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v378 = (uint64_t)&v331 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v379 = (uint64_t)&v331 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v363 = (uint64_t)&v331 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v364 = (uint64_t)&v331 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v362 = (uint64_t)&v331 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v389 = (char *)&v331 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v361 = (uint64_t)&v331 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v388 = (char *)&v331 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v371 = (uint64_t)&v331 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v387 = (char *)&v331 - v64;
  v65 = MEMORY[0x24BDAC7A8](v63);
  v392 = (char *)&v331 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v380 = (uint64_t)&v331 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v360 = (char *)&v331 - v70;
  v71 = MEMORY[0x24BDAC7A8](v69);
  v359 = (uint64_t)&v331 - v72;
  v73 = MEMORY[0x24BDAC7A8](v71);
  v358 = (uint64_t)&v331 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v353 = (uint64_t)&v331 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v383 = (uint64_t)&v331 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v382 = (uint64_t)&v331 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v356 = (uint64_t)&v331 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v357 = (uint64_t)&v331 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v355 = (uint64_t)&v331 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v384 = (uint64_t)&v331 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v386 = (uint64_t)&v331 - v90;
  v91 = MEMORY[0x24BDAC7A8](v89);
  v385 = (uint64_t)&v331 - v92;
  v93 = MEMORY[0x24BDAC7A8](v91);
  v391 = (uint64_t)&v331 - v94;
  v95 = MEMORY[0x24BDAC7A8](v93);
  v354 = (char *)&v331 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v99 = (char *)&v331 - v98;
  v100 = MEMORY[0x24BDAC7A8](v97);
  v102 = (char *)&v331 - v101;
  v103 = MEMORY[0x24BDAC7A8](v100);
  v105 = (char *)&v331 - v104;
  v106 = MEMORY[0x24BDAC7A8](v103);
  v108 = (char *)&v331 - v107;
  v109 = MEMORY[0x24BDAC7A8](v106);
  v111 = (char *)&v331 - v110;
  MEMORY[0x24BDAC7A8](v109);
  v113 = (char *)&v331 - v112;
  v114 = sub_23361D670();
  sub_2332AB558(a1, (uint64_t)v113);
  sub_2332AB558(a2, (uint64_t)v111);
  v393 = a1;
  v375 = v24;
  if ((v114 & 1) != 0)
  {
    v115 = sub_23361D670();
    sub_233168500((uint64_t)v111, type metadata accessor for InternalTransaction);
    sub_233168500((uint64_t)v113, type metadata accessor for InternalTransaction);
    sub_2332AB558(a1, (uint64_t)v108);
    sub_2332AB558(a2, (uint64_t)v105);
    v116 = a2;
    if ((v115 & 1) != 0)
    {
      if ((v117 = v352[6],
            v118 = *(_QWORD *)&v108[v117],
            v119 = *(_QWORD *)&v108[v117 + 8],
            v120 = v108[v117 + 16],
            v121 = &v105[v117],
            v122 = v121[16],
            v118 == *(_QWORD *)v121)
        && v119 == *((_QWORD *)v121 + 1)
        || (sub_23361F224() & 1) != 0)
      {
        sub_233168500((uint64_t)v105, type metadata accessor for InternalTransaction);
        sub_233168500((uint64_t)v108, type metadata accessor for InternalTransaction);
        v123 = v393;
        sub_2332AB558(v393, (uint64_t)v102);
        sub_2332AB558(a2, (uint64_t)v99);
        v124 = v120 == v122;
        v125 = v123;
        v126 = v390;
        v127 = v392;
        v128 = (uint64_t)v354;
        if (!v124)
          goto LABEL_15;
        v129 = v352[7];
        v130 = &v102[v129];
        v131 = *(_QWORD *)&v102[v129 + 8];
        v132 = &v99[v129];
        v133 = *((_QWORD *)v132 + 1);
        if (v131)
        {
          if (v133)
          {
            if (*(_QWORD *)v130 != *(_QWORD *)v132 || v131 != v133)
            {
              v184 = sub_23361F224();
              swift_bridgeObjectRetain();
              sub_233168500((uint64_t)v99, type metadata accessor for InternalTransaction);
              v125 = v393;
              sub_233168500((uint64_t)v102, type metadata accessor for InternalTransaction);
              swift_bridgeObjectRelease();
              sub_2332AB558(v125, v128);
              v136 = v391;
              sub_2332AB558(v116, v391);
              v134 = v388;
              v137 = v389;
              v135 = v387;
              if ((v184 & 1) == 0)
                goto LABEL_17;
LABEL_54:
              v333 = v116;
              v185 = v352[8];
              v186 = (uint64_t *)(v128 + v185);
              v332 = *(_DWORD *)(v128 + v185 + 16);
              v331 = *(_QWORD *)(v128 + v185 + 24);
              v187 = v136;
              v188 = *(_QWORD *)(v128 + v185 + 32);
              v189 = (uint64_t *)(v187 + v185);
              v190 = *((unsigned int *)v189 + 4);
              v192 = v189[3];
              v191 = v189[4];
              v194 = *v186;
              v193 = v186[1];
              v196 = *v189;
              v195 = v189[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((MEMORY[0x234932E38](v194, v193, v332, v196, v195, v190) & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v116 = v333;
                v127 = v392;
                v125 = v393;
                v134 = v388;
                v137 = v389;
                v135 = v387;
                v136 = v391;
                goto LABEL_17;
              }
              if (v331 == v192 && v188 == v191)
              {
                swift_bridgeObjectRelease_n();
                v116 = v333;
                v127 = v392;
                v125 = v393;
                v134 = v388;
                v137 = v389;
                v135 = v387;
                v136 = v391;
              }
              else
              {
                v197 = sub_23361F224();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v116 = v333;
                v127 = v392;
                v125 = v393;
                v134 = v388;
                v137 = v389;
                v135 = v387;
                v136 = v391;
                if ((v197 & 1) == 0)
                  goto LABEL_17;
              }
              sub_233168500(v136, type metadata accessor for InternalTransaction);
              sub_233168500(v128, type metadata accessor for InternalTransaction);
              v198 = v385;
              sub_2332AB558(v125, v385);
              v199 = v386;
              sub_2332AB558(v116, v386);
              v200 = v352[9];
              v201 = (uint64_t *)(v198 + v200);
              v202 = *(_QWORD *)(v198 + v200 + 32);
              v203 = (uint64_t *)(v199 + v200);
              v204 = v203[4];
              if (v202)
              {
                if (v204)
                {
                  v205 = *v201;
                  v206 = v201[1];
                  v208 = v201[2];
                  v207 = v201[3];
                  v209 = *v203;
                  v210 = v203[1];
                  v212 = v203[2];
                  v211 = v203[3];
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain();
                  if ((MEMORY[0x234932E38](v205, v206, v208, v209, v210, v212) & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    sub_233168500(v386, type metadata accessor for InternalTransaction);
                    sub_233168500(v385, type metadata accessor for InternalTransaction);
                    swift_bridgeObjectRelease_n();
                    v116 = v333;
                    v127 = v392;
                    v125 = v393;
                    v137 = v389;
                    v126 = v390;
                    v135 = v387;
                    v134 = v388;
                    goto LABEL_18;
                  }
                  v116 = v333;
                  v127 = v392;
                  v125 = v393;
                  v137 = v389;
                  v135 = v387;
                  if (v207 != v211 || v202 != v204)
                  {
                    v232 = sub_23361F224();
                    swift_bridgeObjectRelease();
                    sub_233168500(v386, type metadata accessor for InternalTransaction);
                    sub_233168500(v385, type metadata accessor for InternalTransaction);
                    swift_bridgeObjectRelease_n();
                    v140 = v384;
                    sub_2332AB558(v125, v384);
                    v233 = v355;
                    sub_2332AB558(v116, v355);
                    v142 = v233;
                    v214 = v352;
                    v126 = v390;
                    v134 = v388;
                    if ((v232 & 1) == 0)
                      goto LABEL_20;
LABEL_73:
                    v215 = v214[10];
                    v216 = v140 + v215;
                    v217 = *(_BYTE *)(v140 + v215 + 20);
                    v218 = v142 + v215;
                    v219 = *(unsigned __int8 *)(v218 + 20);
                    if ((v217 & 1) != 0)
                    {
                      v220 = v140;
                      v144 = (uint64_t)v134;
                      v145 = (uint64_t)v135;
                      v146 = (uint64_t)v127;
                      sub_233168500(v142, type metadata accessor for InternalTransaction);
                      sub_233168500(v220, type metadata accessor for InternalTransaction);
                      if (!v219)
                        goto LABEL_21;
                      v147 = (uint64_t)v137;
                      v148 = v357;
                      sub_2332AB558(v125, v357);
                      v149 = v356;
                      sub_2332AB558(v116, v356);
                    }
                    else
                    {
                      if ((v219 & 1) != 0)
                        goto LABEL_20;
                      v144 = (uint64_t)v134;
                      v145 = (uint64_t)v135;
                      v146 = (uint64_t)v127;
                      v147 = (uint64_t)v137;
                      v221 = v142;
                      v222 = MEMORY[0x234932E38](*(_QWORD *)v216, *(_QWORD *)(v216 + 8), *(unsigned int *)(v216 + 16), *(_QWORD *)v218, *(_QWORD *)(v218 + 8), *(unsigned int *)(v218 + 16));
                      sub_233168500(v221, type metadata accessor for InternalTransaction);
                      sub_233168500(v384, type metadata accessor for InternalTransaction);
                      v148 = v357;
                      sub_2332AB558(v125, v357);
                      v149 = v356;
                      sub_2332AB558(v116, v356);
                      if ((v222 & 1) == 0)
                        goto LABEL_22;
                    }
                    v223 = v149;
                    v224 = v352;
                    v225 = v352[11];
                    v226 = *(unsigned __int8 *)(v148 + v225);
                    LODWORD(v392) = *(unsigned __int8 *)(v223 + v225);
                    sub_233168500(v223, type metadata accessor for InternalTransaction);
                    sub_233168500(v148, type metadata accessor for InternalTransaction);
                    v150 = v382;
                    sub_2332AB558(v125, v382);
                    v151 = v383;
                    sub_2332AB558(v116, v383);
                    v124 = v226 == (_DWORD)v392;
                    v126 = v390;
                    if (!v124)
                      goto LABEL_23;
                    v227 = v224[13];
                    v228 = (_QWORD *)(v150 + v227);
                    v229 = *(_QWORD *)(v150 + v227 + 8);
                    v230 = (_QWORD *)(v151 + v227);
                    v231 = v230[1];
                    if (v229)
                    {
                      if (!v231)
                      {
                        swift_bridgeObjectRetain();
                        sub_233168500(v383, type metadata accessor for InternalTransaction);
                        sub_233168500(v150, type metadata accessor for InternalTransaction);
                        swift_bridgeObjectRelease();
                        v126 = v390;
                        goto LABEL_24;
                      }
                      v153 = v147;
                      if (*v228 != *v230 || v229 != v231)
                      {
                        v235 = sub_23361F224();
                        swift_bridgeObjectRetain();
                        sub_233168500(v383, type metadata accessor for InternalTransaction);
                        sub_233168500(v382, type metadata accessor for InternalTransaction);
                        swift_bridgeObjectRelease();
                        v152 = v353;
                        sub_2332AB558(v125, v353);
                        v236 = v358;
                        sub_2332AB558(v116, v358);
                        v157 = v236;
                        v126 = v390;
                        v154 = v146;
                        v155 = v145;
                        v158 = v144;
                        v159 = (uint64_t)v360;
                        if ((v235 & 1) == 0)
                          goto LABEL_26;
LABEL_92:
                        v237 = v352[12];
                        v238 = (unsigned __int16 *)(v152 + v237);
                        v239 = *(_BYTE *)(v152 + v237 + 2);
                        v240 = (unsigned __int16 *)(v157 + v237);
                        v241 = *((_BYTE *)v240 + 2);
                        if ((v239 & 1) != 0)
                        {
                          sub_233168500(v157, type metadata accessor for InternalTransaction);
                          sub_233168500(v152, type metadata accessor for InternalTransaction);
                          if ((v241 & 1) == 0)
                            goto LABEL_27;
                          v160 = v359;
                          sub_2332AB558(v125, v359);
                          sub_2332AB558(v116, v159);
                        }
                        else
                        {
                          if ((v240[1] & 1) != 0)
                            goto LABEL_26;
                          LODWORD(v392) = *v238;
                          v242 = *v240;
                          sub_233168500(v157, type metadata accessor for InternalTransaction);
                          sub_233168500(v152, type metadata accessor for InternalTransaction);
                          v160 = v359;
                          sub_2332AB558(v125, v359);
                          sub_2332AB558(v116, v159);
                          v124 = (_DWORD)v392 == v242;
                          v126 = v390;
                          if (!v124)
                            goto LABEL_28;
                        }
                        v243 = v352[14];
                        v244 = *(_QWORD *)(v160 + v243);
                        v245 = *(_QWORD *)(v160 + v243 + 8);
                        v246 = (_QWORD *)(v159 + v243);
                        if (v244 == *v246 && v245 == v246[1])
                        {
                          sub_233168500(v160, type metadata accessor for InternalTransaction);
                          sub_233168500(v159, type metadata accessor for InternalTransaction);
                          v161 = v380;
                          sub_2332AB558(v125, v380);
                          sub_2332AB558(v116, v154);
                        }
                        else
                        {
                          v247 = sub_23361F224();
                          sub_233168500(v160, type metadata accessor for InternalTransaction);
                          sub_233168500(v159, type metadata accessor for InternalTransaction);
                          v161 = v380;
                          sub_2332AB558(v125, v380);
                          sub_2332AB558(v116, v154);
                          v162 = v381;
                          if ((v247 & 1) == 0)
                            goto LABEL_29;
                        }
                        v248 = v352[15];
                        v249 = *(_QWORD *)(v161 + v248);
                        v250 = *(_QWORD *)(v161 + v248 + 8);
                        v251 = (_QWORD *)(v154 + v248);
                        if (v249 == *v251 && v250 == v251[1])
                        {
                          sub_233168500(v380, type metadata accessor for InternalTransaction);
                          sub_233168500(v154, type metadata accessor for InternalTransaction);
                          sub_2332AB558(v125, v155);
                          v163 = v371;
                          sub_2332AB558(v116, v371);
                        }
                        else
                        {
                          v252 = sub_23361F224();
                          sub_233168500(v380, type metadata accessor for InternalTransaction);
                          sub_233168500(v154, type metadata accessor for InternalTransaction);
                          sub_2332AB558(v125, v155);
                          v163 = v371;
                          sub_2332AB558(v116, v371);
                          v162 = v381;
                          if ((v252 & 1) == 0)
                            goto LABEL_30;
                        }
                        v253 = v352[16];
                        v254 = *(unsigned __int8 *)(v155 + v253);
                        v255 = *(unsigned __int8 *)(v163 + v253);
                        sub_233168500(v163, type metadata accessor for InternalTransaction);
                        sub_233168500(v155, type metadata accessor for InternalTransaction);
                        sub_2332AB558(v125, v158);
                        v164 = v361;
                        sub_2332AB558(v116, v361);
                        v124 = v254 == v255;
                        v126 = v390;
                        v162 = v381;
                        v165 = v379;
                        if (!v124)
                          goto LABEL_31;
                        v256 = v352[17];
                        v257 = *(unsigned __int8 *)(v158 + v256);
                        v258 = *(unsigned __int8 *)(v164 + v256);
                        sub_233168500(v164, type metadata accessor for InternalTransaction);
                        sub_233168500(v158, type metadata accessor for InternalTransaction);
                        sub_2332AB558(v125, v153);
                        v166 = v362;
                        sub_2332AB558(v116, v362);
                        v124 = v257 == v258;
                        v126 = v390;
                        v162 = v381;
                        if (!v124)
                          goto LABEL_32;
                        v259 = v352[18];
                        v260 = *(unsigned __int8 *)(v153 + v259);
                        v261 = *(unsigned __int8 *)(v166 + v259);
                        sub_233168500(v166, type metadata accessor for InternalTransaction);
                        sub_233168500(v153, type metadata accessor for InternalTransaction);
                        v167 = v364;
                        sub_2332AB558(v125, v364);
                        v168 = v363;
                        sub_2332AB558(v116, v363);
                        v124 = v260 == v261;
                        v126 = v390;
                        v162 = v381;
                        if (!v124)
                          goto LABEL_33;
                        v262 = sub_23361D5E0();
                        sub_233168500(v168, type metadata accessor for InternalTransaction);
                        v162 = v381;
                        sub_233168500(v167, type metadata accessor for InternalTransaction);
                        sub_2332AB558(v125, v165);
                        v169 = v378;
                        sub_2332AB558(v116, v378);
                        if ((v262 & 1) == 0)
                          goto LABEL_34;
                        v263 = v352[20];
                        v264 = v165 + v263;
                        v265 = v169 + v263;
                        v266 = v350;
                        v267 = v350 + *(int *)(v347 + 48);
                        sub_2331686A0(v264, v350, (uint64_t *)&unk_254247DA0);
                        sub_2331686A0(v265, v267, (uint64_t *)&unk_254247DA0);
                        v268 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v349 + 48);
                        if (v268(v266, 1, v351) == 1)
                        {
                          sub_233168500(v378, type metadata accessor for InternalTransaction);
                          sub_233168500(v379, type metadata accessor for InternalTransaction);
                          if (v268(v267, 1, v351) == 1)
                          {
                            sub_233168608(v350, (uint64_t *)&unk_254247DA0);
                            v126 = v390;
                            sub_2332AB558(v393, v390);
                            v174 = v377;
                            sub_2332AB558(v333, v377);
                            goto LABEL_120;
                          }
                        }
                        else
                        {
                          sub_2331686A0(v350, v348, (uint64_t *)&unk_254247DA0);
                          if (v268(v267, 1, v351) != 1)
                          {
                            v269 = v349;
                            v270 = v339;
                            v271 = v351;
                            (*(void (**)(char *, uint64_t, uint64_t))(v349 + 32))(v339, v267, v351);
                            sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                            v272 = v348;
                            v273 = sub_23361E108();
                            v274 = *(void (**)(char *, uint64_t))(v269 + 8);
                            v274(v270, v271);
                            sub_233168500(v378, type metadata accessor for InternalTransaction);
                            sub_233168500(v379, type metadata accessor for InternalTransaction);
                            v274((char *)v272, v271);
                            sub_233168608(v350, (uint64_t *)&unk_254247DA0);
                            v125 = v393;
                            v126 = v390;
                            sub_2332AB558(v393, v390);
                            v116 = v333;
                            v174 = v377;
                            sub_2332AB558(v333, v377);
                            v173 = v374;
                            v170 = (uint64_t)v375;
                            v162 = v381;
                            v172 = v373;
                            v171 = v376;
                            if ((v273 & 1) == 0)
                              goto LABEL_36;
LABEL_120:
                            v275 = v352[21];
                            v276 = v174 + v275;
                            v277 = v346;
                            v278 = v346 + *(int *)(v342 + 48);
                            sub_2331686A0(v126 + v275, v346, &qword_2560465A8);
                            sub_2331686A0(v276, v278, &qword_2560465A8);
                            v279 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v343 + 48);
                            if (v279(v277, 1, v345) == 1)
                            {
                              sub_233168500(v377, type metadata accessor for InternalTransaction);
                              sub_233168500(v390, type metadata accessor for InternalTransaction);
                              if (v279(v278, 1, v345) == 1)
                              {
                                sub_233168608(v346, &qword_2560465A8);
                                v175 = v372;
                                sub_2332AB558(v393, v372);
                                v171 = v376;
                                sub_2332AB558(v333, v376);
                                goto LABEL_127;
                              }
                            }
                            else
                            {
                              sub_2331686A0(v346, v344, &qword_2560465A8);
                              if (v279(v278, 1, v345) != 1)
                              {
                                v280 = v335;
                                sub_2332486A0(v278, v335);
                                v281 = v344;
                                v282 = _s10FinanceKit7ActionsV2eeoiySbAC_ACtFZ_0(v344, v280);
                                sub_233168500(v280, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
                                sub_233168500(v377, type metadata accessor for InternalTransaction);
                                sub_233168500(v390, type metadata accessor for InternalTransaction);
                                sub_233168500(v281, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
                                sub_233168608(v346, &qword_2560465A8);
                                v125 = v393;
                                v175 = v372;
                                sub_2332AB558(v393, v372);
                                v116 = v333;
                                v171 = v376;
                                sub_2332AB558(v333, v376);
                                v173 = v374;
                                v170 = (uint64_t)v375;
                                v162 = v381;
                                v176 = v367;
                                v172 = v373;
                                if (!v282)
                                  goto LABEL_38;
LABEL_127:
                                v283 = v352[22];
                                v284 = v171 + v283;
                                v285 = v340;
                                v286 = v340 + *(int *)(v337 + 48);
                                sub_2331686A0(v175 + v283, v340, &qword_254246740);
                                sub_2331686A0(v284, v286, &qword_254246740);
                                v287 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v338 + 48);
                                if (v287(v285, 1, v341) == 1)
                                {
                                  sub_233168500(v376, type metadata accessor for InternalTransaction);
                                  sub_233168500(v372, type metadata accessor for InternalTransaction);
                                  if (v287(v286, 1, v341) == 1)
                                  {
                                    sub_233168608(v340, &qword_254246740);
                                    v177 = v366;
                                    sub_2332AB558(v393, v366);
                                    v178 = v365;
                                    sub_2332AB558(v333, v365);
                                    goto LABEL_134;
                                  }
                                }
                                else
                                {
                                  sub_2331686A0(v340, v336, &qword_254246740);
                                  if (v287(v286, 1, v341) != 1)
                                  {
                                    v288 = v338;
                                    v289 = v334;
                                    v290 = v341;
                                    (*(void (**)(char *, uint64_t, uint64_t))(v338 + 32))(v334, v286, v341);
                                    sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                                    v291 = v336;
                                    v292 = sub_23361E108();
                                    v293 = *(void (**)(char *, uint64_t))(v288 + 8);
                                    v293(v289, v290);
                                    sub_233168500(v376, type metadata accessor for InternalTransaction);
                                    sub_233168500(v372, type metadata accessor for InternalTransaction);
                                    v293((char *)v291, v290);
                                    sub_233168608(v340, &qword_254246740);
                                    v125 = v393;
                                    v177 = v366;
                                    sub_2332AB558(v393, v366);
                                    v116 = v333;
                                    v178 = v365;
                                    sub_2332AB558(v333, v365);
                                    v173 = v374;
                                    v170 = (uint64_t)v375;
                                    v162 = v381;
                                    v176 = v367;
                                    v172 = v373;
                                    if ((v292 & 1) == 0)
                                      goto LABEL_40;
LABEL_134:
                                    v294 = v352[23];
                                    v295 = (_QWORD *)(v177 + v294);
                                    v296 = *(_QWORD *)(v177 + v294 + 8);
                                    v297 = (_QWORD *)(v178 + v294);
                                    v298 = v297[1];
                                    if (v296)
                                    {
                                      if (v298)
                                      {
                                        if (*v295 != *v297 || v296 != v298)
                                        {
                                          v299 = sub_23361F224();
                                          swift_bridgeObjectRetain();
                                          sub_233168500(v365, type metadata accessor for InternalTransaction);
                                          sub_233168500(v366, type metadata accessor for InternalTransaction);
                                          swift_bridgeObjectRelease();
                                          v125 = v393;
                                          v172 = v373;
                                          sub_2332AB558(v393, v373);
                                          v116 = v333;
                                          v176 = v367;
                                          sub_2332AB558(v333, v367);
                                          v180 = v370;
                                          v173 = v374;
                                          v170 = (uint64_t)v375;
                                          v162 = v381;
                                          v179 = v368;
                                          if ((v299 & 1) == 0)
                                            goto LABEL_42;
LABEL_144:
                                          v300 = v352[26];
                                          v301 = *(_QWORD *)(v172 + v300);
                                          v302 = *(_QWORD *)(v172 + v300 + 8);
                                          v303 = (_QWORD *)(v176 + v300);
                                          if (v301 == *v303 && v302 == v303[1])
                                          {
                                            sub_233168500(v373, type metadata accessor for InternalTransaction);
                                            sub_233168500(v367, type metadata accessor for InternalTransaction);
                                            v125 = v393;
                                            v173 = v374;
                                            sub_2332AB558(v393, v374);
                                            v116 = v333;
                                            v179 = v368;
                                            sub_2332AB558(v333, v368);
                                            v180 = v370;
                                          }
                                          else
                                          {
                                            v304 = sub_23361F224();
                                            sub_233168500(v373, type metadata accessor for InternalTransaction);
                                            sub_233168500(v367, type metadata accessor for InternalTransaction);
                                            v125 = v393;
                                            v173 = v374;
                                            sub_2332AB558(v393, v374);
                                            v116 = v333;
                                            v179 = v368;
                                            sub_2332AB558(v333, v368);
                                            v180 = v370;
                                            v170 = (uint64_t)v375;
                                            v162 = v381;
                                            if ((v304 & 1) == 0)
                                              goto LABEL_43;
                                          }
                                          v305 = v352;
                                          v306 = *(_QWORD *)(v173 + v352[27]);
                                          sub_233168500(v173, type metadata accessor for InternalTransaction);
                                          v307 = *(_QWORD *)(v179 + v305[27]);
                                          sub_233168500(v179, type metadata accessor for InternalTransaction);
                                          sub_2332AB558(v125, (uint64_t)v375);
                                          sub_2332AB558(v116, v381);
                                          v124 = v306 == v307;
                                          v162 = v381;
                                          v170 = (uint64_t)v375;
                                          if (!v124)
                                            goto LABEL_44;
                                          v308 = v352[28];
                                          v309 = *(_QWORD *)&v375[v308];
                                          v310 = *(_QWORD *)&v375[v308 + 8];
                                          v312 = *(_QWORD *)&v375[v308 + 16];
                                          v311 = *(_QWORD *)&v375[v308 + 24];
                                          v313 = (uint64_t *)(v381 + v308);
                                          v314 = *v313;
                                          v315 = v313[1];
                                          v316 = v313[2];
                                          v317 = v313[3];
                                          if (v310)
                                          {
                                            if (v315)
                                            {
                                              if (v309 == v314 && v310 == v315 || (sub_23361F224() & 1) != 0)
                                              {
                                                if (v312 != v316 || v311 != v317)
                                                {
                                                  v320 = sub_23361F224();
                                                  swift_bridgeObjectRetain_n();
                                                  swift_bridgeObjectRetain_n();
                                                  sub_233168500(v381, type metadata accessor for InternalTransaction);
                                                  sub_233168500((uint64_t)v375, type metadata accessor for InternalTransaction);
                                                  swift_bridgeObjectRelease();
                                                  swift_bridgeObjectRelease();
                                                  sub_2332DCF70(v309, v310);
                                                  v180 = v370;
                                                  sub_2332AB558(v393, v370);
                                                  v181 = v369;
                                                  sub_2332AB558(v333, v369);
                                                  if ((v320 & 1) == 0)
                                                    goto LABEL_46;
LABEL_165:
                                                  v321 = v352[29];
                                                  v322 = *(_QWORD *)(v180 + v321);
                                                  v323 = *(_QWORD *)(v180 + v321 + 8);
                                                  v325 = *(_QWORD *)(v180 + v321 + 16);
                                                  v324 = *(_QWORD *)(v180 + v321 + 24);
                                                  v326 = (uint64_t *)(v181 + v321);
                                                  v327 = *v326;
                                                  v328 = v326[1];
                                                  v330 = v326[2];
                                                  v329 = v326[3];
                                                  if (v323)
                                                  {
                                                    if (v328)
                                                    {
                                                      if (v322 != v327 || v323 != v328)
                                                      {
                                                        v182 = 0;
                                                        if ((sub_23361F224() & 1) == 0)
                                                          goto LABEL_183;
                                                      }
                                                      if (v324)
                                                      {
                                                        if (v329
                                                          && (v325 == v330 && v324 == v329 || (sub_23361F224() & 1) != 0))
                                                        {
                                                          goto LABEL_175;
                                                        }
                                                      }
                                                      else if (!v329)
                                                      {
LABEL_175:
                                                        v182 = 1;
LABEL_183:
                                                        swift_bridgeObjectRetain_n();
                                                        swift_bridgeObjectRetain_n();
                                                        sub_233168500(v369, type metadata accessor for InternalTransaction);
                                                        sub_233168500(v370, type metadata accessor for InternalTransaction);
                                                        swift_bridgeObjectRelease();
                                                        swift_bridgeObjectRelease();
                                                        sub_2332DCF70(v322, v323);
                                                        return v182;
                                                      }
                                                      v182 = 0;
                                                      goto LABEL_183;
                                                    }
                                                    swift_bridgeObjectRetain_n();
                                                    swift_bridgeObjectRetain_n();
                                                    sub_233168500(v369, type metadata accessor for InternalTransaction);
                                                    sub_233168500(v370, type metadata accessor for InternalTransaction);
                                                    swift_bridgeObjectRelease();
                                                    swift_bridgeObjectRelease();
                                                  }
                                                  else
                                                  {
                                                    sub_233503D94(*v326, v326[1]);
                                                    sub_233168500(v369, type metadata accessor for InternalTransaction);
                                                    sub_233168500(v370, type metadata accessor for InternalTransaction);
                                                    if (!v328)
                                                    {
                                                      sub_2332DCF70(v322, 0);
                                                      return 1;
                                                    }
                                                  }
                                                  sub_2332DCF70(v322, v323);
                                                  sub_2332DCF70(v327, v328);
                                                  return 0;
                                                }
                                                swift_bridgeObjectRetain_n();
                                                swift_bridgeObjectRetain_n();
                                                sub_233168500(v381, type metadata accessor for InternalTransaction);
                                                sub_233168500((uint64_t)v375, type metadata accessor for InternalTransaction);
                                                swift_bridgeObjectRelease();
                                                swift_bridgeObjectRelease();
LABEL_160:
                                                sub_2332DCF70(v309, v310);
                                                v180 = v370;
                                                sub_2332AB558(v393, v370);
                                                v181 = v369;
                                                sub_2332AB558(v333, v369);
                                                goto LABEL_165;
                                              }
                                              swift_bridgeObjectRetain_n();
                                              swift_bridgeObjectRetain_n();
                                              sub_233168500(v381, type metadata accessor for InternalTransaction);
                                              sub_233168500((uint64_t)v375, type metadata accessor for InternalTransaction);
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease();
                                              v318 = v309;
                                              v319 = v310;
LABEL_163:
                                              sub_2332DCF70(v318, v319);
                                              v116 = v333;
                                              v180 = v370;
                                              v125 = v393;
                                              goto LABEL_45;
                                            }
                                            swift_bridgeObjectRetain_n();
                                            swift_bridgeObjectRetain_n();
                                            sub_233168500(v381, type metadata accessor for InternalTransaction);
                                            sub_233168500((uint64_t)v375, type metadata accessor for InternalTransaction);
                                            swift_bridgeObjectRelease();
                                            swift_bridgeObjectRelease();
                                          }
                                          else
                                          {
                                            sub_2332DCF40(*v313, v313[1]);
                                            sub_233168500(v381, type metadata accessor for InternalTransaction);
                                            sub_233168500((uint64_t)v375, type metadata accessor for InternalTransaction);
                                            if (!v315)
                                            {
                                              v310 = 0;
                                              goto LABEL_160;
                                            }
                                          }
                                          sub_2332DCF70(v309, v310);
                                          v318 = v314;
                                          v319 = v315;
                                          goto LABEL_163;
                                        }
                                        swift_bridgeObjectRetain();
                                        sub_233168500(v365, type metadata accessor for InternalTransaction);
                                        sub_233168500(v366, type metadata accessor for InternalTransaction);
                                        swift_bridgeObjectRelease();
LABEL_140:
                                        v172 = v373;
                                        sub_2332AB558(v393, v373);
                                        v176 = v367;
                                        sub_2332AB558(v333, v367);
                                        goto LABEL_144;
                                      }
                                      swift_bridgeObjectRetain();
                                      sub_233168500(v365, type metadata accessor for InternalTransaction);
                                      sub_233168500(v366, type metadata accessor for InternalTransaction);
                                    }
                                    else
                                    {
                                      swift_bridgeObjectRetain();
                                      sub_233168500(v365, type metadata accessor for InternalTransaction);
                                      sub_233168500(v366, type metadata accessor for InternalTransaction);
                                      if (!v298)
                                        goto LABEL_140;
                                    }
                                    swift_bridgeObjectRelease();
                                    v116 = v333;
                                    v125 = v393;
                                    v173 = v374;
                                    v170 = (uint64_t)v375;
                                    v162 = v381;
                                    v176 = v367;
                                    v172 = v373;
                                    goto LABEL_41;
                                  }
                                  sub_233168500(v376, type metadata accessor for InternalTransaction);
                                  sub_233168500(v372, type metadata accessor for InternalTransaction);
                                  (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v336, v341);
                                }
                                sub_233168608(v340, qword_256048D18);
                                v116 = v333;
                                v125 = v393;
                                v173 = v374;
                                v170 = (uint64_t)v375;
                                v162 = v381;
                                v176 = v367;
                                v172 = v373;
                                goto LABEL_39;
                              }
                              sub_233168500(v377, type metadata accessor for InternalTransaction);
                              sub_233168500(v390, type metadata accessor for InternalTransaction);
                              sub_233168500(v344, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
                            }
                            sub_233168608(v346, (uint64_t *)&unk_2560568D0);
                            v116 = v333;
                            v125 = v393;
                            v173 = v374;
                            v170 = (uint64_t)v375;
                            v162 = v381;
                            v172 = v373;
                            v171 = v376;
                            goto LABEL_37;
                          }
                          sub_233168500(v378, type metadata accessor for InternalTransaction);
                          sub_233168500(v379, type metadata accessor for InternalTransaction);
                          (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v348, v351);
                        }
                        sub_233168608(v350, &qword_256042DA0);
                        v116 = v333;
                        v125 = v393;
                        v173 = v374;
                        v170 = (uint64_t)v375;
                        v162 = v381;
                        v172 = v373;
                        v171 = v376;
                        v126 = v390;
                        goto LABEL_35;
                      }
                      swift_bridgeObjectRetain();
                      sub_233168500(v383, type metadata accessor for InternalTransaction);
                      sub_233168500(v382, type metadata accessor for InternalTransaction);
                      swift_bridgeObjectRelease();
                      v154 = v146;
                    }
                    else
                    {
                      swift_bridgeObjectRetain();
                      sub_233168500(v151, type metadata accessor for InternalTransaction);
                      sub_233168500(v150, type metadata accessor for InternalTransaction);
                      v153 = v147;
                      v154 = v146;
                      if (v231)
                      {
                        swift_bridgeObjectRelease();
                        v126 = v390;
                        v152 = v353;
                        goto LABEL_25;
                      }
                    }
                    v152 = v353;
                    sub_2332AB558(v125, v353);
                    v234 = v358;
                    sub_2332AB558(v116, v358);
                    v157 = v234;
                    v126 = v390;
                    v155 = v145;
                    v158 = v144;
                    v159 = (uint64_t)v360;
                    goto LABEL_92;
                  }
                  swift_bridgeObjectRelease();
                  sub_233168500(v386, type metadata accessor for InternalTransaction);
                  sub_233168500(v385, type metadata accessor for InternalTransaction);
                  swift_bridgeObjectRelease_n();
                  v134 = v388;
LABEL_72:
                  v140 = v384;
                  sub_2332AB558(v125, v384);
                  v213 = v355;
                  sub_2332AB558(v116, v355);
                  v142 = v213;
                  v214 = v352;
                  v126 = v390;
                  goto LABEL_73;
                }
                swift_bridgeObjectRetain_n();
                sub_233168500(v386, type metadata accessor for InternalTransaction);
                sub_233168500(v198, type metadata accessor for InternalTransaction);
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRetain();
                sub_233168500(v199, type metadata accessor for InternalTransaction);
                sub_233168500(v198, type metadata accessor for InternalTransaction);
                if (!v204)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_72;
                }
              }
              v140 = v384;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v126 = v390;
              goto LABEL_19;
            }
            swift_bridgeObjectRetain();
            sub_233168500((uint64_t)v99, type metadata accessor for InternalTransaction);
            sub_233168500((uint64_t)v102, type metadata accessor for InternalTransaction);
            swift_bridgeObjectRelease();
LABEL_50:
            sub_2332AB558(v123, v128);
            v136 = v391;
            sub_2332AB558(v116, v391);
            goto LABEL_54;
          }
          swift_bridgeObjectRetain();
          sub_233168500((uint64_t)v99, type metadata accessor for InternalTransaction);
          sub_233168500((uint64_t)v102, type metadata accessor for InternalTransaction);
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_233168500((uint64_t)v99, type metadata accessor for InternalTransaction);
          sub_233168500((uint64_t)v102, type metadata accessor for InternalTransaction);
          if (!v133)
            goto LABEL_50;
        }
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  else
  {
    sub_233168500((uint64_t)v111, type metadata accessor for InternalTransaction);
    sub_233168500((uint64_t)v113, type metadata accessor for InternalTransaction);
    sub_2332AB558(a1, (uint64_t)v108);
    sub_2332AB558(a2, (uint64_t)v105);
    v116 = a2;
  }
  sub_233168500((uint64_t)v105, type metadata accessor for InternalTransaction);
  sub_233168500((uint64_t)v108, type metadata accessor for InternalTransaction);
  v125 = v393;
  sub_2332AB558(v393, (uint64_t)v102);
  sub_2332AB558(v116, (uint64_t)v99);
  v126 = v390;
  v127 = v392;
  v128 = (uint64_t)v354;
LABEL_15:
  sub_233168500((uint64_t)v99, type metadata accessor for InternalTransaction);
  sub_233168500((uint64_t)v102, type metadata accessor for InternalTransaction);
LABEL_16:
  v135 = v387;
  v134 = v388;
  v136 = v391;
  sub_2332AB558(v125, v128);
  sub_2332AB558(v116, v136);
  v137 = v389;
LABEL_17:
  sub_233168500(v136, type metadata accessor for InternalTransaction);
  sub_233168500(v128, type metadata accessor for InternalTransaction);
  v138 = v385;
  sub_2332AB558(v125, v385);
  v139 = v386;
  sub_2332AB558(v116, v386);
  sub_233168500(v139, type metadata accessor for InternalTransaction);
  sub_233168500(v138, type metadata accessor for InternalTransaction);
LABEL_18:
  v140 = v384;
LABEL_19:
  sub_2332AB558(v125, v140);
  v141 = v355;
  sub_2332AB558(v116, v355);
  v142 = v141;
LABEL_20:
  v143 = v140;
  v144 = (uint64_t)v134;
  v145 = (uint64_t)v135;
  v146 = (uint64_t)v127;
  sub_233168500(v142, type metadata accessor for InternalTransaction);
  sub_233168500(v143, type metadata accessor for InternalTransaction);
LABEL_21:
  v147 = (uint64_t)v137;
  v148 = v357;
  sub_2332AB558(v125, v357);
  v149 = v356;
  sub_2332AB558(v116, v356);
LABEL_22:
  sub_233168500(v149, type metadata accessor for InternalTransaction);
  sub_233168500(v148, type metadata accessor for InternalTransaction);
  v150 = v382;
  sub_2332AB558(v125, v382);
  v151 = v383;
  sub_2332AB558(v116, v383);
LABEL_23:
  sub_233168500(v151, type metadata accessor for InternalTransaction);
  sub_233168500(v150, type metadata accessor for InternalTransaction);
LABEL_24:
  v152 = v353;
  v153 = v147;
  v154 = v146;
LABEL_25:
  v155 = v145;
  sub_2332AB558(v125, v152);
  v156 = v358;
  sub_2332AB558(v116, v358);
  v157 = v156;
  v158 = v144;
  v159 = (uint64_t)v360;
LABEL_26:
  sub_233168500(v157, type metadata accessor for InternalTransaction);
  sub_233168500(v152, type metadata accessor for InternalTransaction);
LABEL_27:
  v160 = v359;
  sub_2332AB558(v125, v359);
  sub_2332AB558(v116, v159);
LABEL_28:
  sub_233168500(v160, type metadata accessor for InternalTransaction);
  sub_233168500(v159, type metadata accessor for InternalTransaction);
  v161 = v380;
  sub_2332AB558(v125, v380);
  sub_2332AB558(v116, v154);
  v162 = v381;
LABEL_29:
  sub_233168500(v161, type metadata accessor for InternalTransaction);
  sub_233168500(v154, type metadata accessor for InternalTransaction);
  sub_2332AB558(v125, v155);
  v163 = v371;
  sub_2332AB558(v116, v371);
LABEL_30:
  sub_233168500(v163, type metadata accessor for InternalTransaction);
  sub_233168500(v155, type metadata accessor for InternalTransaction);
  sub_2332AB558(v125, v158);
  v164 = v361;
  sub_2332AB558(v116, v361);
  v165 = v379;
LABEL_31:
  sub_233168500(v164, type metadata accessor for InternalTransaction);
  sub_233168500(v158, type metadata accessor for InternalTransaction);
  sub_2332AB558(v125, v153);
  v166 = v362;
  sub_2332AB558(v116, v362);
LABEL_32:
  sub_233168500(v166, type metadata accessor for InternalTransaction);
  sub_233168500(v153, type metadata accessor for InternalTransaction);
  v167 = v364;
  sub_2332AB558(v125, v364);
  v168 = v363;
  sub_2332AB558(v116, v363);
LABEL_33:
  sub_233168500(v168, type metadata accessor for InternalTransaction);
  sub_233168500(v167, type metadata accessor for InternalTransaction);
  sub_2332AB558(v125, v165);
  v169 = v378;
  sub_2332AB558(v116, v378);
LABEL_34:
  sub_233168500(v169, type metadata accessor for InternalTransaction);
  sub_233168500(v165, type metadata accessor for InternalTransaction);
  v170 = (uint64_t)v375;
  v171 = v376;
  v172 = v373;
  v173 = v374;
LABEL_35:
  sub_2332AB558(v125, v126);
  v174 = v377;
  sub_2332AB558(v116, v377);
LABEL_36:
  sub_233168500(v174, type metadata accessor for InternalTransaction);
  sub_233168500(v126, type metadata accessor for InternalTransaction);
LABEL_37:
  v175 = v372;
  sub_2332AB558(v125, v372);
  sub_2332AB558(v116, v171);
  v176 = v367;
LABEL_38:
  sub_233168500(v171, type metadata accessor for InternalTransaction);
  sub_233168500(v175, type metadata accessor for InternalTransaction);
LABEL_39:
  v177 = v366;
  sub_2332AB558(v125, v366);
  v178 = v365;
  sub_2332AB558(v116, v365);
LABEL_40:
  sub_233168500(v178, type metadata accessor for InternalTransaction);
  sub_233168500(v177, type metadata accessor for InternalTransaction);
LABEL_41:
  sub_2332AB558(v125, v172);
  sub_2332AB558(v116, v176);
  v179 = v368;
  v180 = v370;
LABEL_42:
  sub_233168500(v172, type metadata accessor for InternalTransaction);
  sub_233168500(v176, type metadata accessor for InternalTransaction);
  sub_2332AB558(v125, v173);
  sub_2332AB558(v116, v179);
LABEL_43:
  sub_233168500(v179, type metadata accessor for InternalTransaction);
  sub_233168500(v173, type metadata accessor for InternalTransaction);
  sub_2332AB558(v125, v170);
  sub_2332AB558(v116, v162);
LABEL_44:
  sub_233168500(v162, type metadata accessor for InternalTransaction);
  sub_233168500(v170, type metadata accessor for InternalTransaction);
LABEL_45:
  sub_2332AB558(v125, v180);
  v181 = v369;
  sub_2332AB558(v116, v369);
LABEL_46:
  sub_233168500(v181, type metadata accessor for InternalTransaction);
  sub_233168500(v180, type metadata accessor for InternalTransaction);
  return 0;
}

unint64_t sub_233594718()
{
  unint64_t result;

  result = qword_2560565D8;
  if (!qword_2560565D8)
  {
    result = MEMORY[0x234934494](&unk_23366157C, &type metadata for InternalTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560565D8);
  }
  return result;
}

unint64_t sub_23359475C()
{
  unint64_t result;

  result = qword_2560565E8;
  if (!qword_2560565E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionIdentifier, &type metadata for TransactionIdentifier);
    atomic_store(result, (unint64_t *)&qword_2560565E8);
  }
  return result;
}

unint64_t sub_2335947A0()
{
  unint64_t result;

  result = qword_256056620;
  if (!qword_256056620)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionSource, &type metadata for TransactionSource);
    atomic_store(result, (unint64_t *)&qword_256056620);
  }
  return result;
}

unint64_t sub_2335947E4()
{
  unint64_t result;

  result = qword_256056640;
  if (!qword_256056640)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankTransactionCode, &type metadata for BankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_256056640);
  }
  return result;
}

unint64_t sub_233594828()
{
  unint64_t result;

  result = qword_256056648;
  if (!qword_256056648)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ProprietaryBankTransactionCode, &type metadata for ProprietaryBankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_256056648);
  }
  return result;
}

unint64_t sub_23359486C()
{
  unint64_t result;

  result = qword_256056660;
  if (!qword_256056660)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionIdentifier, &type metadata for TransactionIdentifier);
    atomic_store(result, (unint64_t *)&qword_256056660);
  }
  return result;
}

unint64_t sub_2335948B0()
{
  unint64_t result;

  result = qword_256056698;
  if (!qword_256056698)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionSource, &type metadata for TransactionSource);
    atomic_store(result, (unint64_t *)&qword_256056698);
  }
  return result;
}

unint64_t sub_2335948F4()
{
  unint64_t result;

  result = qword_2560566A8;
  if (!qword_2560566A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankTransactionCode, &type metadata for BankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_2560566A8);
  }
  return result;
}

unint64_t sub_233594938()
{
  unint64_t result;

  result = qword_2560566B0;
  if (!qword_2560566B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ProprietaryBankTransactionCode, &type metadata for ProprietaryBankTransactionCode);
    atomic_store(result, (unint64_t *)&qword_2560566B0);
  }
  return result;
}

unint64_t sub_23359497C()
{
  unint64_t result;

  result = qword_2560566C8;
  if (!qword_2560566C8)
  {
    result = MEMORY[0x234934494](&unk_23366152C, &type metadata for TransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560566C8);
  }
  return result;
}

unint64_t sub_2335949C0()
{
  unint64_t result;

  result = qword_2560566E0;
  if (!qword_2560566E0)
  {
    result = MEMORY[0x234934494](&unk_2336614DC, &type metadata for FullyQualifiedTransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560566E0);
  }
  return result;
}

uint64_t sub_233594A04()
{
  return sub_233167C58(&qword_256056700, type metadata accessor for InternalTransaction, (uint64_t)&protocol conformance descriptor for InternalTransaction);
}

unint64_t sub_233594A34()
{
  unint64_t result;

  result = qword_256056708;
  if (!qword_256056708)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionIdentifier, &type metadata for TransactionIdentifier);
    atomic_store(result, (unint64_t *)&qword_256056708);
  }
  return result;
}

unint64_t sub_233594A7C()
{
  unint64_t result;

  result = qword_256056710;
  if (!qword_256056710)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedTransactionIdentifier, &type metadata for FullyQualifiedTransactionIdentifier);
    atomic_store(result, (unint64_t *)&qword_256056710);
  }
  return result;
}

id sub_233594AC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for InternalTransaction(0) + 96));
  *a2 = v3;
  return v3;
}

char *initializeBufferWithCopyOfBuffer for InternalTransaction(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  void (*v114)(char *, char *, uint64_t);
  void (*v115)(char *, char *, uint64_t);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    v124 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
    v8(a1, a2, v7);
    v125 = v7;
    v115 = v8;
    v8(&a1[a3[5]], &a2[a3[5]], v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v11[16] = v12[16];
    v14 = &a1[v10];
    v15 = &a2[v10];
    v121 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v121;
    v16 = a3[8];
    v17 = a3[9];
    v18 = &a1[v16];
    v19 = &a2[v16];
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
    v119 = *((_QWORD *)v19 + 4);
    *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 4) = v119;
    v20 = &a1[v17];
    v21 = &a2[v17];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
    v117 = *((_QWORD *)v21 + 4);
    *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
    *((_QWORD *)v20 + 4) = v117;
    v22 = a3[10];
    v23 = a3[11];
    v24 = &a1[v22];
    v25 = &a2[v22];
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_QWORD *)(v24 + 13) = *(_QWORD *)(v25 + 13);
    a1[v23] = a2[v23];
    v26 = a3[12];
    v27 = a3[13];
    v28 = &a1[v26];
    v29 = &a2[v26];
    *(_WORD *)v28 = *(_WORD *)v29;
    v28[2] = v29[2];
    v30 = &a1[v27];
    v31 = &a2[v27];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = a3[14];
    v34 = a3[15];
    v35 = &a1[v33];
    v36 = &a2[v33];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = &a1[v34];
    v39 = &a2[v34];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = a3[17];
    a1[a3[16]] = a2[a3[16]];
    a1[v41] = a2[v41];
    v42 = a3[19];
    a1[a3[18]] = a2[a3[18]];
    v116 = &a1[v42];
    v43 = &a2[v42];
    v44 = sub_23361D634();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v116, v43, v44);
    v48 = a3[20];
    v49 = &a1[v48];
    v50 = &a2[v48];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(&a2[v48], 1, v44))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v47(v49, v50, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v49, 0, 1, v44);
    }
    v53 = a3[21];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v56 = (int *)type metadata accessor for Actions();
    v57 = *((_QWORD *)v56 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      v60 = v124;
      v59 = v125;
    }
    else
    {
      v118 = v44;
      v61 = sub_23361D340();
      v62 = *(_QWORD *)(v61 - 8);
      v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      v120 = v57;
      v122 = v62;
      v114 = v47;
      if (v123(v55, 1, v61))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v54, v55, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v61);
      }
      v64 = v56[5];
      v65 = &v54[v64];
      v66 = &v55[v64];
      v67 = v123;
      if (v123(&v55[v64], 1, v61))
      {
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v65, v66, v61);
        v67 = v123;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v65, 0, 1, v61);
      }
      v69 = v56[6];
      v70 = &v54[v69];
      v71 = &v55[v69];
      if (v67(&v55[v69], 1, v61))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v70, v71, v61);
        v67 = v123;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v70, 0, 1, v61);
      }
      v73 = v56[7];
      v74 = &v54[v73];
      v75 = &v55[v73];
      if (v67(&v55[v73], 1, v61))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v74, v75, v61);
        v67 = v123;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v74, 0, 1, v61);
      }
      v77 = v56[8];
      v78 = &v54[v77];
      v79 = &v55[v77];
      if (v67(&v55[v77], 1, v61))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v78, v79, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v78, 0, 1, v61);
      }
      v60 = v124;
      v59 = v125;
      v44 = v118;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v120 + 56))(v54, 0, 1, v56);
      v47 = v114;
    }
    v81 = a3[22];
    v82 = &a1[v81];
    v83 = &a2[v81];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(&a2[v81], 1, v59))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      v115(v82, v83, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v82, 0, 1, v59);
    }
    v85 = a3[23];
    v86 = a3[24];
    v87 = &a1[v85];
    v88 = &a2[v85];
    v89 = *((_QWORD *)v88 + 1);
    v90 = *(void **)&a2[v86];
    *(_QWORD *)v87 = *(_QWORD *)v88;
    *((_QWORD *)v87 + 1) = v89;
    *(_QWORD *)&a1[v86] = v90;
    v91 = a3[25];
    v92 = &a1[v91];
    v93 = &a2[v91];
    swift_bridgeObjectRetain();
    v94 = v90;
    v47(v92, v93, v44);
    v95 = a3[26];
    v96 = a3[27];
    v97 = &a1[v95];
    v98 = &a2[v95];
    v99 = *((_QWORD *)v98 + 1);
    *(_QWORD *)v97 = *(_QWORD *)v98;
    *((_QWORD *)v97 + 1) = v99;
    *(_QWORD *)&a1[v96] = *(_QWORD *)&a2[v96];
    v100 = a3[28];
    v101 = &a1[v100];
    v102 = &a2[v100];
    v103 = *(_QWORD *)&a2[v100 + 8];
    swift_bridgeObjectRetain();
    if (v103)
    {
      *(_QWORD *)v101 = *(_QWORD *)v102;
      *((_QWORD *)v101 + 1) = v103;
      v104 = *((_QWORD *)v102 + 2);
      v105 = *((_QWORD *)v102 + 3);
      *((_QWORD *)v101 + 2) = v104;
      *((_QWORD *)v101 + 3) = v105;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v106 = *((_OWORD *)v102 + 1);
      *(_OWORD *)v101 = *(_OWORD *)v102;
      *((_OWORD *)v101 + 1) = v106;
    }
    v107 = a3[29];
    v108 = &a1[v107];
    v109 = &a2[v107];
    v110 = *((_QWORD *)v109 + 1);
    if (v110)
    {
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v110;
      v111 = *((_QWORD *)v109 + 3);
      *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
      *((_QWORD *)v108 + 3) = v111;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v112 = *((_OWORD *)v109 + 1);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v112;
    }
  }
  return a1;
}

uint64_t destroy for InternalTransaction(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v4 = sub_23361D6A0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[19];
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11 = a1 + a2[20];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  v12 = a1 + a2[21];
  v13 = (int *)type metadata accessor for Actions();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
  {
    v23 = v5;
    v24 = v6;
    v14 = sub_23361D340();
    v25 = *(_QWORD *)(v14 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (!v15(v12, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v14);
    v16 = v12 + v13[5];
    if (!v15(v16, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v16, v14);
    v17 = v12 + v13[6];
    if (!v15(v17, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v17, v14);
    v18 = v12 + v13[7];
    if (!v15(v18, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v18, v14);
    v19 = v12 + v13[8];
    v20 = v15(v19, 1, v14);
    v5 = v23;
    v6 = v24;
    if (!v20)
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v14);
  }
  v21 = a1 + a2[22];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v21, 1, v4))
    v6(v21, v4);
  swift_bridgeObjectRelease();

  v10(a1 + a2[25], v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[28] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + a2[29] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InternalTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(void *, const void *, uint64_t);
  void (*v46)(void *, const void *, uint64_t);
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  const void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  void (*v112)(void *, const void *, uint64_t);
  void (*v113)(void *, const void *, uint64_t);
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;

  v6 = sub_23361D6A0();
  v122 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16);
  v7(a1, a2, v6);
  v123 = v6;
  v113 = (void (*)(void *, const void *, uint64_t))v7;
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v12;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v119 = v14[1];
  *v13 = *v14;
  v13[1] = v119;
  v15 = a3[8];
  v16 = a3[9];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_DWORD *)(v17 + 16) = *(_DWORD *)(v18 + 16);
  v117 = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 32) = v117;
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  v115 = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 32) = v115;
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 13) = *(_QWORD *)(v24 + 13);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v25 = a3[12];
  v26 = a3[13];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_WORD *)v27 = *(_WORD *)v28;
  *(_BYTE *)(v27 + 2) = *(_BYTE *)(v28 + 2);
  v29 = (_QWORD *)(a1 + v26);
  v30 = (_QWORD *)(a2 + v26);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[14];
  v33 = a3[15];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = (_QWORD *)(a1 + v33);
  v38 = (_QWORD *)(a2 + v33);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v41 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v114 = (void *)(a1 + v41);
  v42 = (const void *)(a2 + v41);
  v43 = sub_23361D634();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(void (**)(void *, const void *, uint64_t))(v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45(v114, v42, v43);
  v47 = a3[20];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(a2 + v47, 1, v43))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v46(v48, v49, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v48, 0, 1, v43);
  }
  v51 = a3[21];
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = (int *)type metadata accessor for Actions();
  v55 = *((_QWORD *)v54 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v55 + 48))(v53, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    v58 = v122;
    v57 = v123;
  }
  else
  {
    v118 = v43;
    v59 = sub_23361D340();
    v60 = *(_QWORD *)(v59 - 8);
    v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    v120 = v60;
    v112 = v46;
    v116 = v55;
    if (v121(v53, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v52, v53, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v52, 0, 1, v59);
    }
    v62 = v54[5];
    v63 = &v52[v62];
    v64 = &v53[v62];
    v65 = v121;
    if (v121(&v53[v62], 1, v59))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v63, v64, v59);
      v65 = v121;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v63, 0, 1, v59);
    }
    v67 = v54[6];
    v68 = &v52[v67];
    v69 = &v53[v67];
    if (v65(&v53[v67], 1, v59))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v68, v69, v59);
      v65 = v121;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v68, 0, 1, v59);
    }
    v71 = v54[7];
    v72 = &v52[v71];
    v73 = &v53[v71];
    if (v65(&v53[v71], 1, v59))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v72, v73, v59);
      v65 = v121;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v72, 0, 1, v59);
    }
    v75 = v54[8];
    v76 = &v52[v75];
    v77 = &v53[v75];
    if (v65(&v53[v75], 1, v59))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v76, v77, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v76, 0, 1, v59);
    }
    v58 = v122;
    v57 = v123;
    v43 = v118;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v116 + 56))(v52, 0, 1, v54);
    v46 = v112;
  }
  v79 = a3[22];
  v80 = (void *)(a1 + v79);
  v81 = (const void *)(a2 + v79);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(a2 + v79, 1, v57))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v113(v80, v81, v57);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v80, 0, 1, v57);
  }
  v83 = a3[23];
  v84 = a3[24];
  v85 = (_QWORD *)(a1 + v83);
  v86 = (_QWORD *)(a2 + v83);
  v87 = v86[1];
  v88 = *(void **)(a2 + v84);
  *v85 = *v86;
  v85[1] = v87;
  *(_QWORD *)(a1 + v84) = v88;
  v89 = a3[25];
  v90 = (void *)(a1 + v89);
  v91 = (const void *)(a2 + v89);
  swift_bridgeObjectRetain();
  v92 = v88;
  v46(v90, v91, v43);
  v93 = a3[26];
  v94 = a3[27];
  v95 = (_QWORD *)(a1 + v93);
  v96 = (_QWORD *)(a2 + v93);
  v97 = v96[1];
  *v95 = *v96;
  v95[1] = v97;
  *(_QWORD *)(a1 + v94) = *(_QWORD *)(a2 + v94);
  v98 = a3[28];
  v99 = (_QWORD *)(a1 + v98);
  v100 = (_QWORD *)(a2 + v98);
  v101 = *(_QWORD *)(a2 + v98 + 8);
  swift_bridgeObjectRetain();
  if (v101)
  {
    *v99 = *v100;
    v99[1] = v101;
    v102 = v100[2];
    v103 = v100[3];
    v99[2] = v102;
    v99[3] = v103;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v104 = *((_OWORD *)v100 + 1);
    *(_OWORD *)v99 = *(_OWORD *)v100;
    *((_OWORD *)v99 + 1) = v104;
  }
  v105 = a3[29];
  v106 = (_QWORD *)(a1 + v105);
  v107 = (_QWORD *)(a2 + v105);
  v108 = v107[1];
  if (v108)
  {
    *v106 = *v107;
    v106[1] = v108;
    v109 = v107[3];
    v106[2] = v107[2];
    v106[3] = v109;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v110 = *((_OWORD *)v107 + 1);
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v110;
  }
  return a1;
}

uint64_t assignWithCopy for InternalTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int16 *v26;
  __int16 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, int *);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  size_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  int v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  void *v94;
  void *v95;
  id v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  int v119;
  int v120;
  size_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  int v125;
  int v126;
  size_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  int v131;
  int v132;
  uint64_t v133;
  size_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  int v139;
  int v140;
  char *v141;
  char *v142;
  char *v143;
  char *__src;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(void *, const void *, uint64_t);
  unsigned int (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t, uint64_t);
  uint64_t v153;

  v6 = sub_23361D6A0();
  v151 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 24);
  v7(a1, a2, v6);
  v149 = (void (*)(void *, const void *, uint64_t))v7;
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_WORD *)(v15 + 4) = *(_WORD *)(v16 + 4);
  *(_WORD *)(v15 + 6) = *(_WORD *)(v16 + 6);
  *(_WORD *)(v15 + 8) = *(_WORD *)(v16 + 8);
  *(_WORD *)(v15 + 10) = *(_WORD *)(v16 + 10);
  *(_WORD *)(v15 + 12) = *(_WORD *)(v16 + 12);
  *(_WORD *)(v15 + 14) = *(_WORD *)(v16 + 14);
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  *(_WORD *)(v15 + 18) = *(_WORD *)(v16 + 18);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_WORD *)(v18 + 4) = *(_WORD *)(v19 + 4);
  *(_WORD *)(v18 + 6) = *(_WORD *)(v19 + 6);
  *(_WORD *)(v18 + 8) = *(_WORD *)(v19 + 8);
  *(_WORD *)(v18 + 10) = *(_WORD *)(v19 + 10);
  *(_WORD *)(v18 + 12) = *(_WORD *)(v19 + 12);
  *(_WORD *)(v18 + 14) = *(_WORD *)(v19 + 14);
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  *(_WORD *)(v18 + 18) = *(_WORD *)(v19 + 18);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = (__int128 *)(a2 + v20);
  v23 = *v22;
  *(_QWORD *)(v21 + 13) = *(_QWORD *)((char *)v22 + 13);
  *(_OWORD *)v21 = v23;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v24 = a3[12];
  v25 = a1 + v24;
  v26 = (__int16 *)(a2 + v24);
  v27 = *v26;
  *(_BYTE *)(v25 + 2) = *((_BYTE *)v26 + 2);
  *(_WORD *)v25 = v27;
  v28 = a3[13];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[14];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[15];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v37 = a3[19];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = sub_23361D634();
  v41 = *(_QWORD *)(v40 - 8);
  v152 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 24);
  v152(v38, v39, v40);
  v42 = a3[20];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  LODWORD(v38) = v45(a1 + v42, 1, v40);
  v153 = v40;
  v46 = v45((uint64_t)v44, 1, v40);
  if ((_DWORD)v38)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v43, v44, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v40);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v43, v40);
LABEL_6:
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_7;
  }
  v152((uint64_t)v43, (uint64_t)v44, v40);
LABEL_7:
  v48 = a3[21];
  v49 = (char *)(a1 + v48);
  v50 = (char *)(a2 + v48);
  v51 = (int *)type metadata accessor for Actions();
  v52 = *((_QWORD *)v51 - 1);
  v53 = *(uint64_t (**)(char *, uint64_t, int *))(v52 + 48);
  v54 = v53(v49, 1, v51);
  v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (v55)
    {
      sub_233168500((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
      goto LABEL_13;
    }
    v63 = sub_23361D340();
    v146 = *(_QWORD *)(v63 - 8);
    v64 = *(uint64_t (**)(void))(v146 + 48);
    v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v49, 1, v63);
    v66 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v50, 1, v63);
    v148 = v6;
    if (v65)
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v49, v50, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v49, 0, 1, v63);
        goto LABEL_59;
      }
    }
    else
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v49, v50, v63);
LABEL_59:
        v116 = v63;
        v117 = v51[5];
        v118 = &v50[v117];
        v141 = &v49[v117];
        v119 = v64();
        v120 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v118, 1, v116);
        if (v119)
        {
          if (v120)
          {
            v121 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v122 = v141;
LABEL_64:
            memcpy(v122, v118, v121);
            goto LABEL_68;
          }
          (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v141, v118, v116);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v141, 0, 1, v116);
        }
        else
        {
          if (v120)
          {
            (*(void (**)(char *, uint64_t))(v146 + 8))(v141, v116);
            v121 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v122 = v141;
            goto LABEL_64;
          }
          (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v141, v118, v116);
        }
LABEL_68:
        v123 = v51[6];
        v124 = &v50[v123];
        v142 = &v49[v123];
        v125 = v64();
        v126 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v124, 1, v116);
        if (v125)
        {
          if (v126)
          {
            v127 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v128 = v142;
LABEL_73:
            memcpy(v128, v124, v127);
            goto LABEL_76;
          }
          (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v142, v124, v116);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v142, 0, 1, v116);
        }
        else
        {
          if (v126)
          {
            (*(void (**)(char *, uint64_t))(v146 + 8))(v142, v116);
            v127 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v128 = v142;
            goto LABEL_73;
          }
          (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v142, v124, v116);
        }
LABEL_76:
        v129 = v51[7];
        v130 = &v50[v129];
        v143 = &v49[v129];
        v131 = v64();
        __src = v130;
        v132 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v130, 1, v116);
        v133 = v116;
        if (v131)
        {
          if (!v132)
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v143, __src, v116);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v116);
            goto LABEL_84;
          }
          v134 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v135 = v143;
        }
        else
        {
          if (!v132)
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v143, __src, v116);
            goto LABEL_84;
          }
          (*(void (**)(char *, uint64_t))(v146 + 8))(v143, v116);
          v134 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v135 = v143;
        }
        memcpy(v135, __src, v134);
LABEL_84:
        v136 = v51[8];
        v137 = &v49[v136];
        v138 = &v50[v136];
        v139 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v137, 1, v116);
        v140 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v138, 1, v116);
        v6 = v148;
        if (v139)
        {
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v137, v138, v133);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v137, 0, 1, v133);
            goto LABEL_15;
          }
        }
        else
        {
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v137, v138, v133);
            goto LABEL_15;
          }
          (*(void (**)(char *, uint64_t))(v146 + 8))(v137, v133);
        }
        v59 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v60 = v137;
        v61 = v138;
LABEL_14:
        memcpy(v60, v61, v59);
LABEL_15:
        v62 = v151;
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v146 + 8))(v49, v63);
    }
    v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
    goto LABEL_59;
  }
  if (v55)
  {
LABEL_13:
    v59 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8) - 8) + 64);
    v60 = v49;
    v61 = v50;
    goto LABEL_14;
  }
  v56 = sub_23361D340();
  v57 = *(_QWORD *)(v56 - 8);
  v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v145 = v57;
  v147 = v6;
  if (v150(v50, 1, v56))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v49, v50, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v49, 0, 1, v56);
  }
  v67 = v51[5];
  v68 = &v49[v67];
  v69 = &v50[v67];
  if (v150(&v50[v67], 1, v56))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v68, v69, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v68, 0, 1, v56);
  }
  v71 = v51[6];
  v72 = &v49[v71];
  v73 = &v50[v71];
  if (v150(&v50[v71], 1, v56))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v72, v73, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v72, 0, 1, v56);
  }
  v75 = v51[7];
  v76 = &v49[v75];
  v77 = &v50[v75];
  if (v150(&v50[v75], 1, v56))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v76, v77, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v76, 0, 1, v56);
  }
  v79 = v51[8];
  v80 = &v49[v79];
  v81 = &v50[v79];
  if (v150(&v50[v79], 1, v56))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v80, v81, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v80, 0, 1, v56);
  }
  v62 = v151;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v52 + 56))(v49, 0, 1, v51);
  v6 = v147;
LABEL_34:
  v83 = a3[22];
  v84 = (void *)(a1 + v83);
  v85 = (const void *)(a2 + v83);
  v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  v87 = v86(a1 + v83, 1, v6);
  v88 = v86((uint64_t)v85, 1, v6);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(v84, v85, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v84, 0, 1, v6);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v88)
  {
    (*(void (**)(void *, uint64_t))(v62 + 8))(v84, v6);
LABEL_39:
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    goto LABEL_40;
  }
  v149(v84, v85, v6);
LABEL_40:
  v90 = a3[23];
  v91 = (_QWORD *)(a1 + v90);
  v92 = (_QWORD *)(a2 + v90);
  *v91 = *v92;
  v91[1] = v92[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v93 = a3[24];
  v94 = *(void **)(a1 + v93);
  v95 = *(void **)(a2 + v93);
  *(_QWORD *)(a1 + v93) = v95;
  v96 = v95;

  v152(a1 + a3[25], a2 + a3[25], v153);
  v97 = a3[26];
  v98 = (_QWORD *)(a1 + v97);
  v99 = (_QWORD *)(a2 + v97);
  *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  v100 = a3[28];
  v101 = (_QWORD *)(a1 + v100);
  v102 = (_QWORD *)(a2 + v100);
  v103 = *(_QWORD *)(a1 + v100 + 8);
  v104 = *(_QWORD *)(a2 + v100 + 8);
  if (v103)
  {
    if (v104)
    {
      *v101 = *v102;
      v101[1] = v102[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v101[2] = v102[2];
      v101[3] = v102[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_233596984((uint64_t)v101);
      v105 = *((_OWORD *)v102 + 1);
      *(_OWORD *)v101 = *(_OWORD *)v102;
      *((_OWORD *)v101 + 1) = v105;
    }
  }
  else if (v104)
  {
    *v101 = *v102;
    v101[1] = v102[1];
    v101[2] = v102[2];
    v101[3] = v102[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v106 = *((_OWORD *)v102 + 1);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    *((_OWORD *)v101 + 1) = v106;
  }
  v107 = a3[29];
  v108 = (_QWORD *)(a1 + v107);
  v109 = (_QWORD *)(a2 + v107);
  v110 = *(_QWORD *)(a1 + v107 + 8);
  v111 = v109[1];
  if (v110)
  {
    if (v111)
    {
      *v108 = *v109;
      v108[1] = v109[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v108[2] = v109[2];
      v108[3] = v109[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2335969B8((uint64_t)v108);
      v112 = *((_OWORD *)v109 + 1);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_OWORD *)v108 + 1) = v112;
    }
  }
  else if (v111)
  {
    *v108 = *v109;
    v108[1] = v109[1];
    v108[2] = v109[2];
    v108[3] = v109[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v113 = *((_OWORD *)v109 + 1);
    *(_OWORD *)v108 = *(_OWORD *)v109;
    *((_OWORD *)v108 + 1) = v113;
  }
  return a1;
}

uint64_t sub_233596984(uint64_t a1)
{
  destroy for ContentPackageError.Context();
  return a1;
}

uint64_t sub_2335969B8(uint64_t a1)
{
  destroy for ContentPackageError.Context();
  return a1;
}

uint64_t initializeWithTake for InternalTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  _OWORD *v79;
  __int128 v80;
  _OWORD *v81;
  _OWORD *v82;
  __int128 v83;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(void *, const void *, uint64_t);
  uint64_t v92;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v91 = (void (*)(void *, const void *, uint64_t))v8;
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = a1 + v9;
  v12 = a2 + v9;
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v13 = a3[8];
  v14 = a3[9];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = a1 + v14;
  v19 = a2 + v14;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = (__int128 *)(a2 + v21);
  v25 = *v24;
  *(_QWORD *)(v23 + 13) = *(_QWORD *)((char *)v24 + 13);
  *(_OWORD *)v23 = v25;
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v26 = a3[12];
  v27 = a3[13];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_WORD *)v28 = *(_WORD *)v29;
  *(_BYTE *)(v28 + 2) = *(_BYTE *)(v29 + 2);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v30 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  v31 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = sub_23361D634();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = v33;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
  v38(v37, v34, v35);
  v39 = a3[20];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v92 = v35;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v39, 1, v35))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v38((uint64_t)v40, (uint64_t)v41, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
  }
  v43 = a3[21];
  v44 = (char *)(a1 + v43);
  v45 = (char *)(a2 + v43);
  v46 = (int *)type metadata accessor for Actions();
  v47 = *((_QWORD *)v46 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    v49 = v92;
  }
  else
  {
    v85 = v47;
    v88 = v6;
    v50 = sub_23361D340();
    v51 = *(_QWORD *)(v50 - 8);
    v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    v89 = v51;
    v86 = v38;
    v87 = v7;
    if (v90(v45, 1, v50))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v44, v45, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v44, 0, 1, v50);
    }
    v53 = v46[5];
    v54 = &v44[v53];
    v55 = &v45[v53];
    v56 = v90;
    if (v90(&v45[v53], 1, v50))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v54, v55, v50);
      v56 = v90;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v50);
    }
    v58 = v46[6];
    v59 = &v44[v58];
    v60 = &v45[v58];
    if (v56(&v45[v58], 1, v50))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v59, v60, v50);
      v56 = v90;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v59, 0, 1, v50);
    }
    v62 = v46[7];
    v63 = &v44[v62];
    v64 = &v45[v62];
    if (v56(&v45[v62], 1, v50))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v63, v64, v50);
      v56 = v90;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v63, 0, 1, v50);
    }
    v66 = v46[8];
    v67 = &v44[v66];
    v68 = &v45[v66];
    if (v56(&v45[v66], 1, v50))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v67, v68, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v67, 0, 1, v50);
    }
    v6 = v88;
    v49 = v92;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v85 + 56))(v44, 0, 1, v46);
    v38 = v86;
    v7 = v87;
  }
  v70 = a3[22];
  v71 = (void *)(a1 + v70);
  v72 = (const void *)(a2 + v70);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v70, 1, v6))
  {
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    v91(v71, v72, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v71, 0, 1, v6);
  }
  v74 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  v38(a1 + a3[25], a2 + a3[25], v49);
  v75 = a3[27];
  *(_OWORD *)(a1 + a3[26]) = *(_OWORD *)(a2 + a3[26]);
  *(_QWORD *)(a1 + v75) = *(_QWORD *)(a2 + v75);
  v76 = a3[28];
  v77 = a3[29];
  v78 = (_OWORD *)(a1 + v76);
  v79 = (_OWORD *)(a2 + v76);
  v80 = v79[1];
  *v78 = *v79;
  v78[1] = v80;
  v81 = (_OWORD *)(a1 + v77);
  v82 = (_OWORD *)(a2 + v77);
  v83 = v82[1];
  *v81 = *v82;
  v81[1] = v83;
  return a1;
}

uint64_t assignWithTake for InternalTransaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int *v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, int *);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  size_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void);
  int v81;
  int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  const void *v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t);
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  int v135;
  int v136;
  size_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  int v141;
  int v142;
  size_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  int v147;
  int v148;
  uint64_t v149;
  size_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  int v155;
  int v156;
  char *v157;
  char *v158;
  char *v159;
  char *__src;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(void *, const void *, uint64_t);
  unsigned int (*v164)(char *, uint64_t, uint64_t);
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v167 = v6;
  v163 = (void (*)(void *, const void *, uint64_t))v8;
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 8) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_OWORD *)(v19 + 4) = *(_OWORD *)(v20 + 4);
  v22 = *(_QWORD *)(v20 + 24);
  v21 = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 24) = v22;
  *(_QWORD *)(v19 + 32) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_OWORD *)(v24 + 4) = *(_OWORD *)(v25 + 4);
  v27 = *(_QWORD *)(v25 + 24);
  v26 = *(_QWORD *)(v25 + 32);
  *(_QWORD *)(v24 + 24) = v27;
  *(_QWORD *)(v24 + 32) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = (__int128 *)(a2 + v28);
  *(_QWORD *)(v30 + 13) = *(_QWORD *)((char *)v31 + 13);
  v32 = *v31;
  LOBYTE(v31) = *(_BYTE *)(a2 + v29);
  *(_OWORD *)v30 = v32;
  *(_BYTE *)(a1 + v29) = (_BYTE)v31;
  v33 = a3[12];
  v34 = a3[13];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_BYTE *)(v35 + 2) = *(_BYTE *)(v36 + 2);
  *(_WORD *)v35 = *(_WORD *)v36;
  v37 = (_QWORD *)(a1 + v34);
  v38 = (uint64_t *)(a2 + v34);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[14];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[15];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  v51 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v51) = *(_BYTE *)(a2 + v51);
  v52 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = sub_23361D634();
  v56 = *(_QWORD *)(v55 - 8);
  v166 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 40);
  v166(v53, v54, v55);
  v57 = a3[20];
  v58 = (void *)(a1 + v57);
  v59 = (const void *)(a2 + v57);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  LODWORD(v53) = v60(a1 + v57, 1, v55);
  v168 = v55;
  v61 = v60((uint64_t)v59, 1, v55);
  v165 = v7;
  if ((_DWORD)v53)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(v58, v59, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v55);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v58, v55);
LABEL_6:
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_7;
  }
  v166((uint64_t)v58, (uint64_t)v59, v55);
LABEL_7:
  v63 = v167;
  v64 = a3[21];
  v65 = (char *)(a1 + v64);
  v66 = (char *)(a2 + v64);
  v67 = (int *)type metadata accessor for Actions();
  v68 = *((_QWORD *)v67 - 1);
  v69 = *(uint64_t (**)(char *, uint64_t, int *))(v68 + 48);
  v70 = v69(v65, 1, v67);
  v71 = v69(v66, 1, v67);
  if (!v70)
  {
    if (v71)
    {
      sub_233168500((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
      goto LABEL_13;
    }
    v79 = sub_23361D340();
    v162 = *(_QWORD *)(v79 - 8);
    v80 = *(uint64_t (**)(void))(v162 + 48);
    v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v65, 1, v79);
    v82 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v66, 1, v79);
    if (v81)
    {
      if (!v82)
      {
        (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v65, v66, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v65, 0, 1, v79);
        goto LABEL_55;
      }
    }
    else
    {
      if (!v82)
      {
        (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v65, v66, v79);
LABEL_55:
        v132 = v79;
        v133 = v67[5];
        v134 = &v66[v133];
        v157 = &v65[v133];
        v135 = v80();
        v136 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v134, 1, v132);
        if (v135)
        {
          if (v136)
          {
            v137 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v138 = v157;
LABEL_60:
            memcpy(v138, v134, v137);
            goto LABEL_64;
          }
          (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v157, v134, v132);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v157, 0, 1, v132);
        }
        else
        {
          if (v136)
          {
            (*(void (**)(char *, uint64_t))(v162 + 8))(v157, v132);
            v137 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v138 = v157;
            goto LABEL_60;
          }
          (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v157, v134, v132);
        }
LABEL_64:
        v139 = v67[6];
        v140 = &v66[v139];
        v158 = &v65[v139];
        v141 = v80();
        v142 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v140, 1, v132);
        if (v141)
        {
          if (v142)
          {
            v143 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v144 = v158;
LABEL_69:
            memcpy(v144, v140, v143);
            goto LABEL_72;
          }
          (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v158, v140, v132);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v158, 0, 1, v132);
        }
        else
        {
          if (v142)
          {
            (*(void (**)(char *, uint64_t))(v162 + 8))(v158, v132);
            v143 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
            v144 = v158;
            goto LABEL_69;
          }
          (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v158, v140, v132);
        }
LABEL_72:
        v145 = v67[7];
        v146 = &v66[v145];
        v159 = &v65[v145];
        v147 = v80();
        __src = v146;
        v148 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v146, 1, v132);
        v149 = v132;
        if (v147)
        {
          if (!v148)
          {
            (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v159, __src, v132);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v132);
            goto LABEL_80;
          }
          v150 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v151 = v159;
        }
        else
        {
          if (!v148)
          {
            (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v159, __src, v132);
            goto LABEL_80;
          }
          (*(void (**)(char *, uint64_t))(v162 + 8))(v159, v132);
          v150 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
          v151 = v159;
        }
        memcpy(v151, __src, v150);
LABEL_80:
        v152 = v67[8];
        v153 = &v65[v152];
        v154 = &v66[v152];
        v155 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v153, 1, v132);
        v156 = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v154, 1, v132);
        v63 = v167;
        if (v155)
        {
          if (!v156)
          {
            (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v153, v154, v149);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v153, 0, 1, v149);
            goto LABEL_15;
          }
        }
        else
        {
          if (!v156)
          {
            (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v153, v154, v149);
            goto LABEL_15;
          }
          (*(void (**)(char *, uint64_t))(v162 + 8))(v153, v149);
        }
        v75 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v76 = v153;
        v77 = v154;
LABEL_14:
        memcpy(v76, v77, v75);
LABEL_15:
        v78 = v165;
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v162 + 8))(v65, v79);
    }
    v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
    goto LABEL_55;
  }
  if (v71)
  {
LABEL_13:
    v75 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8) - 8) + 64);
    v76 = v65;
    v77 = v66;
    goto LABEL_14;
  }
  v72 = sub_23361D340();
  v73 = *(_QWORD *)(v72 - 8);
  v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  v161 = v73;
  if (v164(v66, 1, v72))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v65, v66, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v65, 0, 1, v72);
  }
  v83 = v67[5];
  v84 = &v65[v83];
  v85 = &v66[v83];
  if (v164(&v66[v83], 1, v72))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v84, v85, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v84, 0, 1, v72);
  }
  v87 = v67[6];
  v88 = &v65[v87];
  v89 = &v66[v87];
  if (v164(&v66[v87], 1, v72))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v88, v89, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v88, 0, 1, v72);
  }
  v91 = v67[7];
  v92 = &v65[v91];
  v93 = &v66[v91];
  if (v164(&v66[v91], 1, v72))
  {
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v92, v93, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v92, 0, 1, v72);
  }
  v95 = v67[8];
  v96 = &v65[v95];
  v97 = &v66[v95];
  if (v164(&v66[v95], 1, v72))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v96, v97, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v96, 0, 1, v72);
  }
  v78 = v165;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v68 + 56))(v65, 0, 1, v67);
  v63 = v167;
LABEL_34:
  v99 = a3[22];
  v100 = (void *)(a1 + v99);
  v101 = (const void *)(a2 + v99);
  v102 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  v103 = v102(a1 + v99, 1, v63);
  v104 = v102((uint64_t)v101, 1, v63);
  if (v103)
  {
    if (!v104)
    {
      (*(void (**)(void *, const void *, uint64_t))(v78 + 32))(v100, v101, v63);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v100, 0, 1, v63);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v104)
  {
    (*(void (**)(void *, uint64_t))(v78 + 8))(v100, v63);
LABEL_39:
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_40;
  }
  v163(v100, v101, v63);
LABEL_40:
  v106 = a3[23];
  v107 = (_QWORD *)(a1 + v106);
  v108 = (uint64_t *)(a2 + v106);
  v110 = *v108;
  v109 = v108[1];
  *v107 = v110;
  v107[1] = v109;
  swift_bridgeObjectRelease();
  v111 = a3[24];
  v112 = *(void **)(a1 + v111);
  *(_QWORD *)(a1 + v111) = *(_QWORD *)(a2 + v111);

  v166(a1 + a3[25], a2 + a3[25], v168);
  v113 = a3[26];
  v114 = (_QWORD *)(a1 + v113);
  v115 = (uint64_t *)(a2 + v113);
  v117 = *v115;
  v116 = v115[1];
  *v114 = v117;
  v114[1] = v116;
  swift_bridgeObjectRelease();
  v118 = a3[28];
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  v119 = (_QWORD *)(a1 + v118);
  v120 = (_QWORD *)(a2 + v118);
  if (*(_QWORD *)(a1 + v118 + 8))
  {
    v121 = v120[1];
    if (v121)
    {
      *v119 = *v120;
      v119[1] = v121;
      swift_bridgeObjectRelease();
      v122 = v120[3];
      v119[2] = v120[2];
      v119[3] = v122;
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    sub_233596984(a1 + v118);
  }
  v123 = *((_OWORD *)v120 + 1);
  *(_OWORD *)v119 = *(_OWORD *)v120;
  *((_OWORD *)v119 + 1) = v123;
LABEL_45:
  v124 = a3[29];
  v125 = a1 + v124;
  v126 = a2 + v124;
  if (!*(_QWORD *)(a1 + v124 + 8))
  {
LABEL_49:
    v129 = *(_OWORD *)(v126 + 16);
    *(_OWORD *)v125 = *(_OWORD *)v126;
    *(_OWORD *)(v125 + 16) = v129;
    return a1;
  }
  v127 = *(_QWORD *)(v126 + 8);
  if (!v127)
  {
    sub_2335969B8(v125);
    goto LABEL_49;
  }
  *(_QWORD *)v125 = *(_QWORD *)v126;
  *(_QWORD *)(v125 + 8) = v127;
  swift_bridgeObjectRelease();
  v128 = *(_QWORD *)(v126 + 24);
  *(_QWORD *)(v125 + 16) = *(_QWORD *)(v126 + 16);
  *(_QWORD *)(v125 + 24) = v128;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalTransaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233597BB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[19];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[20];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[21];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          v14 = *(_QWORD *)(v8 - 8);
          v15 = a3[22];
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalTransaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233597CE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[19];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[20];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[21];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[22];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233597E00()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23361D6A0();
  if (v0 <= 0x3F)
  {
    sub_23361D634();
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
      {
        sub_233176020(319, qword_2560567B0, (void (*)(uint64_t))type metadata accessor for Actions);
        if (v3 <= 0x3F)
        {
          sub_233176020(319, (unint64_t *)&qword_254247C30, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for TransactionIdentifier()
{
  return &type metadata for TransactionIdentifier;
}

ValueMetadata *type metadata accessor for FullyQualifiedTransactionIdentifier()
{
  return &type metadata for FullyQualifiedTransactionIdentifier;
}

uint64_t sub_233597FD4()
{
  return type metadata accessor for InternalTransaction.XPC(0);
}

uint64_t sub_233597FDC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for InternalTransaction(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for InternalTransaction.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InternalTransaction.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for FullyQualifiedTransactionIdentifier.CodingKeys()
{
  return &type metadata for FullyQualifiedTransactionIdentifier.CodingKeys;
}

uint64_t _s10FinanceKit35FullyQualifiedTransactionIdentifierV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2335980BC + 4 * byte_233660D5F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2335980F0 + 4 * byte_233660D5A[v4]))();
}

uint64_t sub_2335980F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335980F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233598100);
  return result;
}

uint64_t sub_23359810C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233598114);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233598118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233598120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionIdentifier.CodingKeys()
{
  return &type metadata for TransactionIdentifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for InternalTransaction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_233598188 + 4 * byte_233660D69[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_2335981BC + 4 * byte_233660D64[v4]))();
}

uint64_t sub_2335981BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335981C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335981CCLL);
  return result;
}

uint64_t sub_2335981D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335981E0);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_2335981E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335981EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalTransaction.CodingKeys()
{
  return &type metadata for InternalTransaction.CodingKeys;
}

unint64_t sub_23359820C()
{
  unint64_t result;

  result = qword_256056880;
  if (!qword_256056880)
  {
    result = MEMORY[0x234934494](&unk_233661344, &type metadata for InternalTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056880);
  }
  return result;
}

unint64_t sub_233598254()
{
  unint64_t result;

  result = qword_256056888;
  if (!qword_256056888)
  {
    result = MEMORY[0x234934494](&unk_2336613FC, &type metadata for TransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056888);
  }
  return result;
}

unint64_t sub_23359829C()
{
  unint64_t result;

  result = qword_256056890;
  if (!qword_256056890)
  {
    result = MEMORY[0x234934494](&unk_2336614B4, &type metadata for FullyQualifiedTransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056890);
  }
  return result;
}

unint64_t sub_2335982E4()
{
  unint64_t result;

  result = qword_256056898;
  if (!qword_256056898)
  {
    result = MEMORY[0x234934494](&unk_233661424, &type metadata for FullyQualifiedTransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256056898);
  }
  return result;
}

unint64_t sub_23359832C()
{
  unint64_t result;

  result = qword_2560568A0;
  if (!qword_2560568A0)
  {
    result = MEMORY[0x234934494](&unk_23366144C, &type metadata for FullyQualifiedTransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560568A0);
  }
  return result;
}

unint64_t sub_233598374()
{
  unint64_t result;

  result = qword_2560568A8;
  if (!qword_2560568A8)
  {
    result = MEMORY[0x234934494](&unk_23366136C, &type metadata for TransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560568A8);
  }
  return result;
}

unint64_t sub_2335983BC()
{
  unint64_t result;

  result = qword_2560568B0;
  if (!qword_2560568B0)
  {
    result = MEMORY[0x234934494](&unk_233661394, &type metadata for TransactionIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560568B0);
  }
  return result;
}

unint64_t sub_233598404()
{
  unint64_t result;

  result = qword_2560568B8;
  if (!qword_2560568B8)
  {
    result = MEMORY[0x234934494](&unk_2336612B4, &type metadata for InternalTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560568B8);
  }
  return result;
}

unint64_t sub_23359844C()
{
  unint64_t result;

  result = qword_2560568C0;
  if (!qword_2560568C0)
  {
    result = MEMORY[0x234934494](&unk_2336612DC, &type metadata for InternalTransaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560568C0);
  }
  return result;
}

uint64_t sub_233598490(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000044496E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x48746E656D796170 && a2 == 0xEB00000000687361 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023367B8A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023367B8C0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023367AAA0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366A7E0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233677F00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC000000656D614ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023367AA30 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023367AA50 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657461446E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6144646574736F70 && a2 == 0xEA00000000006574 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6449646572616873 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023367B8E0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEB00000000657461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x646E4168746E6F6DLL && a2 == 0xEC00000072616559 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 1918985593 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023367A0C0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023367A0E0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 25;
    else
      return 26;
  }
}

uint64_t sub_233598F08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C626174537369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233598FF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023366A610)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t static ManagedBankConnectTermsAndConditions.existingTermsAndConditions(withID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit36ManagedBankConnectTermsAndConditions;
  v7 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void static ManagedBankConnectTermsAndConditions.update(_:with:)(void *a1)
{
  void *v2;
  id v3;

  type metadata accessor for BankConnectTermsAndConditions();
  v2 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setPublishedAt_, v2);

  v3 = (id)sub_23361D5B0();
  objc_msgSend(a1, sel_setInEffectOn_, v3);

}

id ManagedBankConnectTermsAndConditions.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v6 = (void *)sub_23361E12C();
  objc_msgSend(v5, sel_setId_, v6);

  type metadata accessor for BankConnectTermsAndConditions();
  v7 = (void *)sub_23361D5B0();
  objc_msgSend(v5, sel_setPublishedAt_, v7);

  v8 = (void *)sub_23361D5B0();
  objc_msgSend(v5, sel_setInEffectOn_, v8);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
  return v5;
}

{
  objc_class *v2;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v6 = (void *)sub_23361E12C();
  objc_msgSend(v5, sel_setId_, v6);

  type metadata accessor for RawBankConnectData.TermsAndConditions();
  v7 = (void *)sub_23361D5B0();
  objc_msgSend(v5, sel_setPublishedAt_, v7);

  v8 = (void *)sub_23361D5B0();
  objc_msgSend(v5, sel_setInEffectOn_, v8);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawBankConnectData.TermsAndConditions);
  return v5;
}

uint64_t sub_233599458@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_reviewedAt);
  if (v3)
  {
    v4 = v3;
    sub_23361D5EC();

    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2335994DC(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23319F164(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setReviewedAt_, v10);

}

id ManagedBankConnectTermsAndConditions.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankConnectTermsAndConditions.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBankConnectTermsAndConditions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedBankConnectTermsAndConditions.__allocating_init(id:publishedAt:reviewedAt:inEffectOn:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  objc_class *v6;
  objc_class *v7;
  id v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v7 = v6;
  v12 = objc_msgSend(objc_allocWithZone(v7), sel_initWithContext_, a6);
  v13 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setId_, v13);

  _s10FinanceKit36ManagedBankConnectTermsAndConditionsC6update_11publishedAt08reviewedK010inEffectOnyAC_10Foundation4DateVAJSgAJtFZ_0(v12, a3, a4);
  v14 = sub_23361D634();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
  v15(a5, v14);
  sub_2331D0F20(a4);
  v15(a3, v14);
  return v12;
}

Swift::Void __swiftcall ManagedBankConnectTermsAndConditions.willSave()()
{
  void *v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_willSave);
  if ((objc_msgSend(v0, sel_isDeleted) & 1) == 0)
  {
    v1 = (void *)sub_23361E12C();
    v2 = objc_msgSend(v0, sel_objectIDsForRelationshipNamed_, v1);

    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    v3 = sub_23361E3F0();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_23361EF30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v4)
    {
      v5 = objc_msgSend(v0, sel_managedObjectContext);
      objc_msgSend(v5, sel_deleteObject_, v0);

    }
  }
}

id static ManagedBankConnectTermsAndConditions.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit36ManagedBankConnectTermsAndConditions;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedBankConnectTermsAndConditions.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t static ManagedBankConnectTermsAndConditions.predicateForTermsAndConditions(withID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

void _s10FinanceKit36ManagedBankConnectTermsAndConditionsC6update_11publishedAt08reviewedK010inEffectOnyAC_10Foundation4DateVAJSgAJtFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setPublishedAt_, v8);

  sub_23319F164(a3, (uint64_t)v7);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    v11 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  objc_msgSend(a1, sel_setReviewedAt_, v11);

  v12 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setInEffectOn_, v12);

}

void sub_233599D40(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setId_, v3);

}

char *keypath_get_selector_publishedAt()
{
  return sel_publishedAt;
}

void sub_233599D9C(id *a1, uint64_t a2, uint64_t a3)
{
  sub_233301C6C(a1, a2, a3, (SEL *)&selRef_publishedAt);
}

void sub_233599DB8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_28Tm(a1, a2, a3, a4, (SEL *)&selRef_setPublishedAt_);
}

char *keypath_get_selector_reviewedAt()
{
  return sel_reviewedAt;
}

char *keypath_get_selector_inEffectOn()
{
  return sel_inEffectOn;
}

void sub_233599DE4(id *a1, uint64_t a2, uint64_t a3)
{
  sub_233301C6C(a1, a2, a3, (SEL *)&selRef_inEffectOn);
}

void sub_233599E00(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_28Tm(a1, a2, a3, a4, (SEL *)&selRef_setInEffectOn_);
}

uint64_t type metadata accessor for ManagedBankConnectTermsAndConditions()
{
  return objc_opt_self();
}

void static PIIRedactionRegexCollection.empty.getter(_QWORD *a1@<X8>)
{
  *a1 = 4271950;
  a1[1] = 0xE300000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
}

void sub_233599E4C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v18[5];

  v5 = sub_23361EE10();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18[-1] - v10;
  v12 = type metadata accessor for PIIRedactionRegex();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233177068(a1, (uint64_t)v18);
  PIIRedactionRegex.init(from:)(v18, (uint64_t)v14);
  if (v2)
  {
    v18[0] = v2;
    v15 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if ((swift_dynamicCast() & 1) != 0)
    {

      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v9, v5);
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v16, v11, v5);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0(a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);

    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(a1);

      *a2 = v2;
      type metadata accessor for PIIRedactionRegexCollection.RegexElement();
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    sub_2334AD3B0((uint64_t)v14, (uint64_t)a2);
    type metadata accessor for PIIRedactionRegexCollection.RegexElement();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_23359A04C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_233599E4C(a1, a2);
}

uint64_t PIIRedactionRegexCollection.version.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIIRedactionRegexCollection.regexes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PIIRedactionRegexCollection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void **v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;

  v65 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560568E8);
  MEMORY[0x24BDAC7A8](v3);
  v68 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for PIIRedactionRegex();
  v75 = *(_QWORD *)(v71 - 8);
  v5 = MEMORY[0x24BDAC7A8](v71);
  v72 = (uint64_t)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)v56 - v7;
  v74 = type metadata accessor for PIIRedactionRegexCollection.RegexElement();
  v66 = *(_QWORD *)(v74 - 8);
  v8 = MEMORY[0x24BDAC7A8](v74);
  v10 = (void **)((char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v56 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560568F0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23359A70C();
  v17 = v73;
  sub_23361F3EC();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v69 = v10;
  v70 = v12;
  v64 = v14;
  v18 = v68;
  v78 = 0;
  v20 = sub_23361F02C();
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256056900);
  v77 = 1;
  sub_23359A750();
  swift_bridgeObjectRetain();
  sub_23361F068();
  v62 = a1;
  v23 = *(_QWORD *)(v76 + 16);
  v24 = v64;
  if (v23)
  {
    v57 = v20;
    v58 = v22;
    v59 = v16;
    v60 = v13;
    v61 = 0;
    v25 = v76 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
    v66 = *(_QWORD *)(v66 + 72);
    v56[1] = v76;
    swift_bridgeObjectRetain();
    v73 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v26 = 138412290;
    v63 = v26;
    v28 = v71;
    v27 = v72;
    v29 = (uint64_t)v18;
    v30 = (uint64_t)v67;
    v31 = v75;
    v32 = (uint64_t)v70;
    do
    {
      sub_23359A7FC(v25, v32);
      v33 = v32;
      v34 = v69;
      sub_23359A7FC(v33, (uint64_t)v69);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v35 = *v34;
        if (qword_256041CC0 != -1)
          swift_once();
        v36 = sub_23361DB80();
        __swift_project_value_buffer(v36, (uint64_t)qword_256049610);
        v37 = v35;
        v38 = v35;
        v39 = sub_23361DB68();
        v40 = sub_23361E768();
        v41 = os_log_type_enabled(v39, v40);
        v32 = (uint64_t)v70;
        if (v41)
        {
          v42 = swift_slowAlloc();
          v43 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v42 = v63;
          v44 = v35;
          v45 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v42 + 4) = v45;
          *v43 = v45;

          _os_log_impl(&dword_233151000, v39, v40, "Failed to decode a strategy: %@", (uint8_t *)v42, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
          v46 = 1;
          swift_arrayDestroy();
          v47 = v43;
          v30 = (uint64_t)v67;
          MEMORY[0x234934590](v47, -1, -1);
          v48 = v42;
          v27 = v72;
          MEMORY[0x234934590](v48, -1, -1);

        }
        else
        {

          v46 = 1;
        }
        v28 = v71;
        v31 = v75;
      }
      else
      {
        sub_2334AD3B0((uint64_t)v34, v29);
        v46 = 0;
        v32 = (uint64_t)v70;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, v46, 1, v28);
      sub_23359A840(v32);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v28) == 1)
      {
        sub_23359A87C(v29);
      }
      else
      {
        sub_2334AD3B0(v29, v30);
        sub_2334AD3B0(v30, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v49 = v73;
        else
          v49 = sub_2334A5FF4(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
        v51 = *(_QWORD *)(v49 + 16);
        v50 = *(_QWORD *)(v49 + 24);
        if (v51 >= v50 >> 1)
          v49 = sub_2334A5FF4(v50 > 1, v51 + 1, 1, v49);
        *(_QWORD *)(v49 + 16) = v51 + 1;
        v31 = v75;
        v52 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        v73 = v49;
        v53 = v49 + v52 + *(_QWORD *)(v75 + 72) * v51;
        v27 = v72;
        sub_2334AD3B0(v72, v53);
      }
      v25 += v66;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v13 = v60;
    v24 = v64;
    v22 = v58;
    v16 = v59;
    v20 = v57;
    v54 = v73;
  }
  else
  {
    v54 = MEMORY[0x24BEE4AF8];
  }
  v55 = v65;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v13);
  swift_bridgeObjectRelease();
  *v55 = v20;
  v55[1] = v22;
  v55[2] = v54;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PIIRedactionRegexCollection.RegexElement()
{
  uint64_t result;

  result = qword_256056988;
  if (!qword_256056988)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23359A70C()
{
  unint64_t result;

  result = qword_2560568F8;
  if (!qword_2560568F8)
  {
    result = MEMORY[0x234934494](&unk_2336617C8, &type metadata for PIIRedactionRegexCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560568F8);
  }
  return result;
}

unint64_t sub_23359A750()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256056908;
  if (!qword_256056908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256056900);
    v2 = sub_23359A7B4();
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256056908);
  }
  return result;
}

unint64_t sub_23359A7B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256056910;
  if (!qword_256056910)
  {
    v1 = type metadata accessor for PIIRedactionRegexCollection.RegexElement();
    result = MEMORY[0x234934494](&unk_2336617A0, v1);
    atomic_store(result, (unint64_t *)&qword_256056910);
  }
  return result;
}

uint64_t sub_23359A7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PIIRedactionRegexCollection.RegexElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23359A840(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PIIRedactionRegexCollection.RegexElement();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23359A87C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560568E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23359A8BC(char *a1, char *a2)
{
  return sub_233225CB4(*a1, *a2);
}

uint64_t sub_23359A8C8()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23359A94C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23359A9AC()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23359AA2C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23359AA88(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E6F6973726576;
  if (*v1)
    v2 = 0x6967657461727473;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEA00000000007365;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23359AACC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6967657461727473;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_23359AB0C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23359AB6C()
{
  sub_23359A70C();
  return sub_23361F428();
}

uint64_t sub_23359AB94()
{
  sub_23359A70C();
  return sub_23361F434();
}

uint64_t sub_23359ABBC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PIIRedactionRegexCollection.init(from:)(a1, a2);
}

_QWORD *assignWithCopy for PIIRedactionRegexCollection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PIIRedactionRegexCollection()
{
  return &type metadata for PIIRedactionRegexCollection;
}

uint64_t storeEnumTagSinglePayload for PIIRedactionRegexCollection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23359AC90 + 4 * byte_233661625[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23359ACC4 + 4 * byte_233661620[v4]))();
}

uint64_t sub_23359ACC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23359ACCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23359ACD4);
  return result;
}

uint64_t sub_23359ACE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23359ACE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23359ACEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23359ACF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PIIRedactionRegexCollection.CodingKeys()
{
  return &type metadata for PIIRedactionRegexCollection.CodingKeys;
}

char *sub_23359AD10(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      v7 = v6;
      *(_QWORD *)a1 = v6;
    }
    else
    {
      v9 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v9;
      v10 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v10;
      v11 = (int *)type metadata accessor for PIIRedactionRegex();
      v12 = v11[6];
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = v11[7];
      v17 = &a1[v16];
      v18 = (char **)((char *)a2 + v16);
      v19 = v18[1];
      *(_QWORD *)v17 = *v18;
      *((_QWORD *)v17 + 1) = v19;
      *(_QWORD *)&a1[v11[8]] = *(char **)((char *)a2 + v11[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23359AE48(id *a1)
{
  char *v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = (char *)a1 + *(int *)(type metadata accessor for PIIRedactionRegex() + 24);
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_23359AEE8(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *(void **)a2;
    v5 = v4;
    *a1 = v4;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 8);
    *a1 = *(_QWORD *)a2;
    a1[1] = v6;
    v7 = *(_QWORD *)(a2 + 24);
    a1[2] = *(_QWORD *)(a2 + 16);
    a1[3] = v7;
    v8 = (int *)type metadata accessor for PIIRedactionRegex();
    v9 = v8[6];
    v10 = (char *)a1 + v9;
    v11 = a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = v8[7];
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(_QWORD *)((char *)a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_23359AFEC(void **a1, void **a2)
{
  void *v4;
  id v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  if (a1 != a2)
  {
    sub_23359A840((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *a2;
      v5 = v4;
      *a1 = v4;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v6 = (int *)type metadata accessor for PIIRedactionRegex();
      v7 = v6[6];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = v6[7];
      v12 = (void **)((char *)a1 + v11);
      v13 = (void **)((char *)a2 + v11);
      *v12 = *v13;
      v12[1] = v13[1];
      *(void **)((char *)a1 + v6[8]) = *(void **)((char *)a2 + v6[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23359B118(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = (int *)type metadata accessor for PIIRedactionRegex();
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
    *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23359B1E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23359A840((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = (int *)type metadata accessor for PIIRedactionRegex();
      v8 = v7[6];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047300);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23359B2C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PIIRedactionRegex();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_23359B330()
{
  unint64_t result;

  result = qword_2560569C0;
  if (!qword_2560569C0)
  {
    result = MEMORY[0x234934494](&unk_233661778, &type metadata for PIIRedactionRegexCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560569C0);
  }
  return result;
}

unint64_t sub_23359B378()
{
  unint64_t result;

  result = qword_2560569C8;
  if (!qword_2560569C8)
  {
    result = MEMORY[0x234934494](&unk_2336616B0, &type metadata for PIIRedactionRegexCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560569C8);
  }
  return result;
}

unint64_t sub_23359B3C0()
{
  unint64_t result;

  result = qword_2560569D0;
  if (!qword_2560569D0)
  {
    result = MEMORY[0x234934494](&unk_2336616D8, &type metadata for PIIRedactionRegexCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560569D0);
  }
  return result;
}

id sub_23359B404(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_23359B484(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for ManagedAccount, &qword_256041BD0, (uint64_t)&qword_2560454D0);
}

id sub_23359B444(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_23359B484(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for ManagedTransaction, &qword_256041DB8, (uint64_t)&qword_256057A50);
}

id sub_23359B484(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, void (*a7)(_QWORD), uint64_t *a8, uint64_t a9)
{
  void *ObjCClassFromMetadata;
  id v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v28;

  a7(0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v16 = objc_msgSend(ObjCClassFromMetadata, sel_fetchRequest);
  if (a1)
  {
    v17 = a4;
    v18 = a3;
    v19 = a6;
    v20 = a5;
    v21 = *a8;
    v22 = a1;
    if (v21 != -1)
      swift_once();
    v23 = swift_bridgeObjectRetain();
    v24 = sub_2333B13C8(v23);
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setPredicate_, v24);

    a5 = v20;
    a6 = v19;
    a3 = v18;
    a4 = v17;
  }
  if (a2)
  {
    v25 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
    v26 = objc_msgSend(v25, sel_attributesByName);

    sub_233168668(0, &qword_256042E58);
    v27 = (_QWORD *)sub_23361E06C();

    swift_bridgeObjectRetain();
    sub_23359CA28(a2, v27, a8, a9);
    swift_bridgeObjectRelease();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v28 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setSortDescriptors_, v28);
    swift_bridgeObjectRelease();

  }
  if ((a4 & 1) == 0 && a3 >= 1)
    objc_msgSend(v16, sel_setFetchLimit_, a3);
  if ((a6 & 1) == 0 && a5 >= 1)
    objc_msgSend(v16, sel_setFetchOffset_, a5);
  return v16;
}

id sub_23359B6E0(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_23359B484(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for ManagedAccountBalance, &qword_256041C30, (uint64_t)&qword_256048870);
}

id sub_23359B720(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_23359B484(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for ManagedInternalAccount, &qword_2542465D8, (uint64_t)&off_2542465D0);
}

id sub_23359B760(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_23359B484(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for ManagedInternalAccountBalance, &qword_256041B88, (uint64_t)&off_256042E38);
}

id sub_23359B7A0(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_23359B484(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for ManagedInternalTransaction, &qword_256041D98, (uint64_t)&off_2560569F0);
}

id sub_23359B7E0(void *a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  void *ObjCClassFromMetadata;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;

  type metadata accessor for ManagedConsent();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v13 = objc_msgSend(ObjCClassFromMetadata, sel_fetchRequest);
  if (a1)
  {
    v14 = qword_256041D10;
    v15 = a1;
    if (v14 != -1)
      swift_once();
    swift_beginAccess();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_2333B13C8(v16);
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setPredicate_, v17);

  }
  if (a2)
  {
    v18 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
    v19 = objc_msgSend(v18, sel_attributesByName);

    sub_233168668(0, &qword_256042E58);
    v20 = sub_23361E06C();

    swift_bridgeObjectRetain();
    sub_23359CCF4(a2, v20);
    swift_bridgeObjectRelease();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v21 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setSortDescriptors_, v21);
    swift_bridgeObjectRelease();

  }
  if ((a4 & 1) == 0 && a3 >= 1)
    objc_msgSend(v13, sel_setFetchLimit_, a3);
  if ((a6 & 1) == 0 && a5 >= 1)
    objc_msgSend(v13, sel_setFetchOffset_, a5);
  return v13;
}

void WalletExposedDB.fetchAppleAccounts()()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit15WalletExposedDB_store) + 16), sel_newBackgroundContext);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245088);
  sub_23361E960();

}

void sub_23359BAA4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *ObjCClassFromMetadata;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  id v38;
  id v39[2];

  v3 = v2;
  v39[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = type metadata accessor for InternalAccount();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v39[0] = 0;
  v10 = objc_msgSend(a1, sel_setQueryGenerationFromToken_error_, v9, v39);

  v11 = v39[0];
  if (!v10)
  {
    v28 = v39[0];
    sub_23361D1B4();

    swift_willThrow();
    return;
  }
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_233623D60;
  v13 = qword_254246F08;
  v14 = v11;
  if (v13 != -1)
    swift_once();
  v15 = type metadata accessor for Institution(0);
  v16 = (uint64_t *)__swift_project_value_buffer(v15, (uint64_t)qword_254247630);
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 64) = sub_2331683F0();
  *(_QWORD *)(v12 + 32) = v18;
  *(_QWORD *)(v12 + 40) = v17;
  swift_bridgeObjectRetain();
  v19 = (void *)sub_23361E6B4();
  type metadata accessor for ManagedInternalAccount();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v21 = v19;
  v22 = objc_msgSend(ObjCClassFromMetadata, sel_fetchRequest);
  v23 = qword_2542465D8;
  v24 = v21;
  if (v23 != -1)
    swift_once();
  v25 = swift_bridgeObjectRetain();
  v26 = sub_2333B13C8(v25);
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setPredicate_, v26);

  objc_msgSend(v22, sel_setReturnsObjectsAsFaults_, 0);
  v27 = sub_23361E984();
  if (v3)
  {

    return;
  }
  v29 = v27;
  v38 = v24;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v30)
      goto LABEL_11;
LABEL_19:
    swift_bridgeObjectRelease();

    *a2 = MEMORY[0x24BEE4AF8];
    return;
  }
  v30 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v30)
    goto LABEL_19;
LABEL_11:
  v35 = 0;
  v36 = v22;
  v37 = a2;
  v39[0] = (id)MEMORY[0x24BEE4AF8];
  sub_23361EE70();
  if (v30 < 0)
    __break(1u);
  sub_233168668(0, &qword_254245090);
  v31 = 0;
  do
  {
    if ((v29 & 0xC000000000000001) != 0)
      v32 = (id)MEMORY[0x234933120](v31, v29);
    else
      v32 = *(id *)(v29 + 8 * v31 + 32);
    ++v31;
    v33 = v32;
    InternalAccount.init(_:)(v33, (uint64_t)v8);
    FKAccount.init(from:)(v8);

    sub_23361EE4C();
    sub_23361EE7C();
    sub_23361EE88();
    sub_23361EE58();
  }
  while (v30 != v31);
  v34 = v39[0];
  swift_bridgeObjectRelease();

  *v37 = v34;
}

void sub_23359BEE4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23359BAA4(*(void **)(v1 + 16), a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> WalletExposedDB.insertOrUpdateTransactions(_:forAppleAccountWithID:)(Swift::OpaquePointer _, Swift::String forAppleAccountWithID)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  v4 = (unint64_t)_._rawValue >> 62;
  if ((unint64_t)_._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v10)
      return;
  }
  else if (!*(_QWORD *)(((unint64_t)_._rawValue & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  if (qword_254246F38 != -1)
    swift_once();
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_254246F20);
  swift_bridgeObjectRetain_n();
  v6 = sub_23361DB68();
  v7 = sub_23361E780();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    if (v4)
    {
      swift_bridgeObjectRetain();
      sub_23361EF30();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v6, v7, "Inserting or updating %ld apple transactions", v8, 0xCu);
    MEMORY[0x234934590](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v9 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC10FinanceKit15WalletExposedDB_store) + 16), sel_newBackgroundContext);
  v11 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v11);
  sub_23361E960();

}

void sub_23359C274(void *a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v10;
  unsigned int v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  void *v27;
  uint64_t inited;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  __int128 v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = v4;
  v48 = *MEMORY[0x24BDAC8D0];
  v10 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  *(_QWORD *)&v45 = 0;
  v11 = objc_msgSend(a1, sel_setQueryGenerationFromToken_error_, v10, &v45);

  if (v11)
  {
    v12 = qword_254246F08;
    v13 = (id)v45;
    swift_bridgeObjectRetain();
    if (v12 != -1)
      goto LABEL_32;
    while (1)
    {
      v14 = type metadata accessor for Institution(0);
      v15 = (uint64_t *)__swift_project_value_buffer(v14, (uint64_t)qword_254247630);
      v16 = v15[1];
      v43 = *v15;
      v17 = qword_254246F38;
      swift_bridgeObjectRetain();
      if (v17 != -1)
        swift_once();
      v18 = sub_23361DB80();
      __swift_project_value_buffer(v18, (uint64_t)qword_254246F20);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v19 = sub_23361DB68();
      v20 = sub_23361E780();
      if (os_log_type_enabled(v19, v20))
      {
        v41 = v16;
        v42 = v5;
        v21 = a2;
        v22 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_QWORD *)&v45 = v23;
        *(_DWORD *)v22 = 134218242;
        if (a4 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_23361EF30();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_233164DCC(v21, a3, (uint64_t *)&v45);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v19, v20, "Inserting or updating %ld\nApple transactions for account identifier %s", (uint8_t *)v22, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x234934590](v23, -1, -1);
        v24 = v22;
        a2 = v21;
        MEMORY[0x234934590](v24, -1, -1);

        v5 = v42;
        v16 = v41;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      type metadata accessor for ManagedInternalAccount();
      *(_QWORD *)&v45 = a2;
      *((_QWORD *)&v45 + 1) = a3;
      v46 = v43;
      v47 = v16;
      v26 = static ManagedInternalAccount.existingAccount(with:in:)(&v45);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      v27 = (void *)v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v27)
        break;
      type metadata accessor for ManagedTransactionImporter();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = 0u;
      *(_OWORD *)(inited + 32) = 0u;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        a3 = sub_23361EF30();
        v44 = a1;
        if (!a3)
        {
LABEL_23:
          swift_bridgeObjectRelease();
          *(_QWORD *)&v45 = 0;
          if ((objc_msgSend(v44, sel_save_, &v45) & 1) != 0)
          {
            v33 = (id)v45;
          }
          else
          {
            v39 = (id)v45;
            sub_23361D1B4();

            swift_willThrow();
          }

          swift_release();
          return;
        }
      }
      else
      {
        a3 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        v44 = a1;
        if (!a3)
          goto LABEL_23;
      }
      a1 = (void *)(a4 & 0xC000000000000001);
      v29 = 4;
      while (1)
      {
        v30 = a1 ? (id)MEMORY[0x234933120](v29 - 4, a4) : *(id *)(a4 + 8 * v29);
        v31 = v30;
        a2 = v29 - 3;
        if (__OFADD__(v29 - 4, 1))
          break;
        v32 = ManagedTransactionImporter.insertOrUpdateTransaction(account:appleTransaction:context:)(v27, v30, v44);

        ++v29;
        if (a2 == a3)
          goto LABEL_23;
      }
      __break(1u);
LABEL_32:
      swift_once();
    }
    *(_QWORD *)&v45 = 0;
    *((_QWORD *)&v45 + 1) = 0xE000000000000000;
    sub_23361ED98();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v45 = 0xD000000000000024;
    *((_QWORD *)&v45 + 1) = 0x800000023367B990;
    sub_23361E27C();
    v34 = v45;
    swift_bridgeObjectRetain_n();
    v35 = sub_23361DB68();
    v36 = sub_23361E780();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_QWORD *)&v45 = v38;
      *(_DWORD *)v37 = 136315138;
      swift_bridgeObjectRetain();
      sub_233164DCC(v34, *((unint64_t *)&v34 + 1), (uint64_t *)&v45);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v35, v36, "%s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v38, -1, -1);
      MEMORY[0x234934590](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_2333ACA3C();
    swift_allocError();
    *v40 = v34;
  }
  else
  {
    v25 = (id)v45;
    sub_23361D1B4();

  }
  swift_willThrow();
}

void sub_23359CA0C()
{
  uint64_t v0;

  sub_23359C274(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23359CA28(unint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  char v17;
  id v18;
  void *v19;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;

  v24 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v7 = sub_23361EF30();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v23 = a2;
      v8 = 4;
      v21 = a4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x234933120](v8 - 4, a1);
        else
          v9 = *(id *)(a1 + 8 * v8);
        v10 = v9;
        v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v12 = objc_msgSend(v9, sel_key);
        if (!v12)
          goto LABEL_20;
        v13 = v12;
        v14 = sub_23361E150();
        a2 = v15;

        if (v23[2])
        {
          sub_2331E3D18(v14, (uint64_t)a2);
          if ((v16 & 1) != 0)
            break;
        }
        if (*a3 != -1)
          swift_once();
        if (*(_QWORD *)(*(_QWORD *)a4 + 16))
        {
          swift_bridgeObjectRetain();
          sub_2331E3D18(v14, (uint64_t)a2);
          if ((v17 & 1) != 0)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v18 = objc_msgSend(v10, sel_ascending);
            a2 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
            v19 = (void *)sub_23361E12C();
            swift_bridgeObjectRelease();
            objc_msgSend(a2, sel_initWithKey_ascending_, v19, v18);

            a4 = v21;
            swift_bridgeObjectRelease();

            goto LABEL_20;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        swift_bridgeObjectRelease();
LABEL_6:
        ++v8;
        if (v11 == v7)
        {
          swift_bridgeObjectRelease();
          return v24;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23359CCF4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v3 = sub_23361EF30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 4;
      v5 = a2;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x234933120](v4 - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * v4);
        v7 = v6;
        v8 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v9 = objc_msgSend(v6, sel_key);
        if (!v9)
          goto LABEL_20;
        v10 = v9;
        v11 = sub_23361E150();
        v13 = v12;

        if (*(_QWORD *)(v5 + 16))
        {
          sub_2331E3D18(v11, v13);
          if ((v14 & 1) != 0)
            break;
        }
        if (qword_256041D10 != -1)
          swift_once();
        swift_beginAccess();
        if (*((_QWORD *)off_25604DE40 + 2))
        {
          swift_bridgeObjectRetain();
          sub_2331E3D18(v11, v13);
          if ((v15 & 1) != 0)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v16 = objc_msgSend(v7, sel_ascending);
            v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
            v18 = (void *)sub_23361E12C();
            swift_bridgeObjectRelease();
            objc_msgSend(v17, sel_initWithKey_ascending_, v18, v16);

            v5 = a2;
            swift_bridgeObjectRelease();

            goto LABEL_20;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        swift_bridgeObjectRelease();
LABEL_6:
        ++v4;
        if (v8 == v3)
        {
          swift_bridgeObjectRelease();
          return v21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

void sub_23359CFD8(_QWORD *a1@<X8>)
{
  sub_23359BEE4(a1);
}

void TransactionType.localizedDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23359D038()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  swift_bridgeObjectRelease();

  return v5;
}

char *TransactionType.init(_:)@<X0>(char *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = byte_2336619C0[*result];
  return result;
}

FinanceKit::TransactionType_optional __swiftcall TransactionType.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue;
  if ((unsigned __int16)rawValue >= 0x11u)
    v2 = 17;
  *v1 = v2;
  return (FinanceKit::TransactionType_optional)rawValue;
}

uint64_t TransactionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void *static TransactionType.allCases.getter()
{
  return &unk_25046BC90;
}

FinanceKit::TransactionType_optional sub_23359D29C(Swift::Int16 *a1)
{
  return TransactionType.init(rawValue:)(*a1);
}

uint64_t sub_23359D2A4()
{
  sub_23359D4D0();
  return sub_23361E3A8();
}

uint64_t sub_23359D300()
{
  sub_23359D4D0();
  return sub_23361E36C();
}

void sub_23359D34C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046BC90;
}

void sub_23359D35C()
{
  off_2560569D8 = &unk_250466F40;
}

uint64_t static TransactionType.supportedClassificationTypes.getter()
{
  if (qword_256041D90 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

unint64_t sub_23359D3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560569E0;
  if (!qword_2560569E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560537F0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2560569E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TransactionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_23359D450 + 4 * byte_23366181D[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_23359D484 + 4 * byte_233661818[v4]))();
}

uint64_t sub_23359D484(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23359D48C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23359D494);
  return result;
}

uint64_t sub_23359D4A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23359D4A8);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_23359D4AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23359D4B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionType()
{
  return &type metadata for TransactionType;
}

unint64_t sub_23359D4D0()
{
  unint64_t result;

  result = qword_2560569E8;
  if (!qword_2560569E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionType, &type metadata for TransactionType);
    atomic_store(result, (unint64_t *)&qword_2560569E8);
  }
  return result;
}

__n128 ManagedInternalTransaction.transactionAmount.getter@<Q0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __n128 v11;
  int v12;
  __n128 v13;

  v3 = objc_msgSend(v1, sel_publicTransactionObject);
  v4 = objc_msgSend(v3, sel_amount);
  objc_msgSend(v4, sel_decimalValue);
  v5 = v12;
  v11 = v13;

  v6 = objc_msgSend(v3, sel_currency);
  v7 = sub_23361E150();
  v9 = v8;

  *(_DWORD *)a1 = v5;
  result = v11;
  *(__n128 *)(a1 + 4) = v11;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v9;
  return result;
}

double ManagedInternalTransaction.foreignCurrencyAmount.getter@<D0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  unsigned int v17;
  unsigned __int16 v18;
  unsigned __int16 v19;
  uint64_t v20;
  unsigned int v21;

  v3 = objc_msgSend(v1, sel_publicTransactionObject);
  v4 = objc_msgSend(v3, sel_foreignAmount);
  if (!v4)
    goto LABEL_4;
  v5 = v4;
  objc_msgSend(v4, sel_decimalValue);
  v6 = v17;
  v7 = v18;
  v8 = v19;
  v9 = v20;
  v10 = v21;

  v11 = objc_msgSend(v3, sel_foreignCurrency);
  if (v11)
  {
    v12 = v11;
    v13 = sub_23361E150();
    v15 = v14;

    *a1 = v6 | (v7 << 32) | (v8 << 48);
    a1[1] = v9;
    a1[2] = v10;
    a1[3] = v13;
    a1[4] = v15;
  }
  else
  {
LABEL_4:

    a1[4] = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

void ManagedInternalTransaction.transactionDate.getter()
{
  sub_23359DA70((SEL *)&selRef_transactionDate, (void (*)(id))MEMORY[0x24BDCE878]);
}

uint64_t ManagedInternalTransaction.postedDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, sel_publicTransactionObject);
  v4 = objc_msgSend(v3, sel_postedDate);

  if (v4)
  {
    sub_23361D5EC();

    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void ManagedInternalTransaction.transactionType.getter(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;
  char v4;
  char v5;

  v3 = objc_msgSend(v1, sel_publicTransactionObject);
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v3, sel_transactionTypeValue));

  v4 = v5;
  if (v5 == 17)
    v4 = 0;
  *a1 = v4;
}

void ManagedInternalTransaction.status.getter(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_publicTransactionObject);
  ManagedTransaction.status.getter(a1);

}

uint64_t sub_23359D858()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_insightsObject);
  v2 = objc_msgSend(v1, sel_mapsInsightObject);

  if (v2
    && (v3 = objc_msgSend(v2, sel_merchantObject), v2, v3)
    && (v4 = objc_msgSend(v3, sel_name), v3, v4))
  {
    v5 = sub_23361E150();
  }
  else
  {
    v4 = objc_msgSend(v0, sel_publicTransactionObject);
    v5 = sub_23354B3AC();
  }
  v6 = v5;

  return v6;
}

uint64_t ManagedInternalTransaction.originalTransactionDescription.getter()
{
  return sub_23359F08C((SEL *)&selRef_originalTransactionDescription);
}

void ManagedInternalTransaction.creditDebitIndicator.getter(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_publicTransactionObject);
  ManagedTransaction.creditDebitIndicator.getter(a1);

}

void ManagedInternalTransaction.actions.getter(uint64_t a1@<X8>)
{
  void *v1;

  Actions.init(_:)(objc_msgSend(v1, sel_actionsObject), a1);
}

uint64_t ManagedInternalTransaction.merchantCategoryCode.getter()
{
  void *v0;
  id v1;
  int v2;
  unsigned __int16 v3;
  int v4;

  v1 = objc_msgSend(v0, sel_publicTransactionObject);
  v2 = objc_msgSend(v1, sel_merchantCategoryCodeValue);
  if (v2 < 0)
  {

    v4 = 0;
  }
  else
  {
    v3 = (unsigned __int16)objc_msgSend(v1, sel_merchantCategoryCodeValue);

    v4 = v3;
  }
  return v4 | ((v2 < 0) << 16);
}

void ManagedInternalTransaction.id.getter()
{
  sub_23359DA70((SEL *)&selRef_id, (void (*)(id))MEMORY[0x24BDCE9F8]);
}

void sub_23359DA70(SEL *a1, void (*a2)(id))
{
  void *v2;
  id v5;
  id v6;

  v5 = objc_msgSend(v2, sel_publicTransactionObject);
  v6 = objc_msgSend(v5, *a1);

  a2(v6);
}

void sub_23359DAE8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_monthAndYear, a2);
}

void sub_23359DAF4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setMonthAndYear_);
}

id sub_23359DB00@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_year);
  *a2 = (_WORD)result;
  return result;
}

id sub_23359DB30(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setYear_, *a1);
}

void InternalTransaction.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  int v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  int v60;
  unsigned __int16 v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  unsigned __int8 v72;
  id v73;
  unsigned int v74;
  unsigned __int8 v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  signed int v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  void *v102;
  uint64_t v103;
  void *v104;
  id v105;
  unsigned __int8 *v106;
  unsigned __int8 *v107;
  unsigned __int8 *v108;
  id v109;
  void *v110;
  unsigned __int8 *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  __int128 v131;
  _QWORD *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  unsigned __int8 *v139[4];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  unsigned __int8 v144;
  unsigned __int8 v145;
  unsigned __int8 v146;
  unsigned __int16 v147;
  BOOL v148;
  unsigned __int8 v149;
  unsigned __int8 v150;
  __int128 v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  int v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159[2];
  unsigned __int8 v160;

  v130 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v3);
  v137 = (uint64_t)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560465A8);
  MEMORY[0x24BDAC7A8](v5);
  v136 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v135 = (uint64_t)&v113 - v11;
  v125 = sub_23361D634();
  v124 = *(_QWORD *)(v125 - 8);
  v12 = MEMORY[0x24BDAC7A8](v125);
  v133 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v134 = (char *)&v113 - v14;
  v132 = (_QWORD *)sub_23361D6A0();
  v15 = *(v132 - 1);
  v16 = MEMORY[0x24BDAC7A8](v132);
  v18 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v113 - v19;
  v21 = objc_msgSend(a1, sel_publicTransactionObject);
  v22 = objc_msgSend(v21, "id");

  v128 = v20;
  sub_23361D67C();

  v23 = objc_msgSend(a1, sel_publicTransactionObject);
  v24 = objc_msgSend(v23, sel_accountId);

  v129 = v18;
  sub_23361D67C();

  v25 = objc_msgSend(a1, sel_transactionId);
  v26 = sub_23361E150();
  v28 = v27;

  v29 = objc_msgSend(a1, sel_isTransactionIDStable);
  v159[0] = v26;
  v159[1] = v28;
  v160 = v29;
  v30 = objc_msgSend(a1, sel_paymentHash);
  v127 = v15;
  if (v30)
  {
    v31 = v30;
    v119 = sub_23361E150();
    v118 = v32;

  }
  else
  {
    v119 = 0;
    v118 = 0;
  }
  v33 = objc_msgSend(a1, sel_publicTransactionObject);
  v34 = objc_msgSend(v33, sel_amount);
  objc_msgSend(v34, sel_decimalValue);
  v35 = v155;
  v131 = v156;

  v36 = objc_msgSend(v33, sel_currency);
  v37 = sub_23361E150();
  v39 = v38;

  v155 = v35;
  v156 = v131;
  v157 = v37;
  v158 = v39;
  v40 = objc_msgSend(a1, sel_publicTransactionObject);
  v41 = objc_msgSend(v40, sel_foreignAmount);
  v42 = v41;
  v43 = v137;
  v126 = v10;
  if (v41)
  {
    objc_msgSend(v41, sel_decimalValue);
    v44 = v151;
    v45 = WORD2(v151);
    v46 = WORD3(v151);
    v47 = *((_QWORD *)&v151 + 1);
    v48 = v152;

    v49 = objc_msgSend(v40, sel_foreignCurrency);
    if (v49)
    {
      v50 = v49;
      v42 = (void *)sub_23361E150();
      v52 = v51;

      v53 = v44 | (v45 << 32) | (v46 << 48);
    }
    else
    {

      v53 = 0;
      v47 = 0;
      v48 = 0;
      v42 = 0;
      v52 = 0;
    }
    v43 = v137;
    v54 = v127;
  }
  else
  {

    v53 = 0;
    v47 = 0;
    v48 = 0;
    v52 = 0;
    v54 = v127;
  }
  *(_QWORD *)&v151 = v53;
  *((_QWORD *)&v151 + 1) = v47;
  v152 = v48;
  v153 = v42;
  v154 = v52;
  v55 = objc_msgSend(a1, sel_publicTransactionObject);
  v56 = objc_msgSend(v55, sel_foreignCurrencyExchangeRate);

  *(_QWORD *)&v131 = v56;
  if (v56)
  {
    objc_msgSend(v56, sel_decimalValue);
    v115 = v142;
    v116 = v141;
    v117 = v140;

  }
  else
  {
    v117 = 0;
    v116 = 0;
    v115 = 0;
  }
  v57 = (uint64_t)v126;
  v58 = objc_msgSend(a1, sel_publicTransactionObject);
  ManagedTransaction.creditDebitIndicator.getter(&v150);

  v149 = v150;
  v59 = objc_msgSend(a1, sel_publicTransactionObject);
  v60 = objc_msgSend(v59, sel_merchantCategoryCodeValue);
  if (v60 < 0)
    v61 = 0;
  else
    v61 = (unsigned __int16)objc_msgSend(v59, sel_merchantCategoryCodeValue);

  v147 = v61;
  v148 = v60 < 0;
  v62 = objc_msgSend(a1, sel_publicTransactionObject);
  v63 = objc_msgSend(v62, sel_merchantName);

  if (v63)
  {
    v114 = sub_23361E150();
    v113 = v64;

  }
  else
  {
    v114 = 0;
    v113 = 0;
  }
  v65 = objc_msgSend(a1, sel_publicTransactionObject, v113, v114);
  v66 = objc_msgSend(v65, sel_transactionDescription);

  v123 = sub_23361E150();
  v122 = v67;

  v68 = objc_msgSend(a1, sel_publicTransactionObject);
  v69 = objc_msgSend(v68, sel_originalTransactionDescription);

  v121 = sub_23361E150();
  v120 = v70;

  v71 = objc_msgSend(a1, sel_publicTransactionObject);
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v71, sel_transactionTypeValue));

  if (v140 == 17)
    v72 = 0;
  else
    v72 = v140;
  v146 = v72;
  v73 = objc_msgSend(a1, sel_publicTransactionObject);
  ManagedTransaction.status.getter(&v145);

  v74 = objc_msgSend(a1, sel_sourceValue);
  v75 = v74 == 1;
  if (v74 == 2)
    v75 = 2;
  v144 = v75;
  v76 = objc_msgSend(a1, sel_publicTransactionObject);
  v77 = objc_msgSend(v76, sel_transactionDate);

  sub_23361D5EC();
  v78 = objc_msgSend(a1, sel_publicTransactionObject);
  v79 = objc_msgSend(v78, sel_postedDate);

  if (v79)
  {
    sub_23361D5EC();

    v80 = 0;
  }
  else
  {
    v80 = 1;
  }
  v81 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v57, v80, 1, v125);
  sub_233168478(v57, v135, (uint64_t *)&unk_254247DA0);
  v82 = objc_msgSend(a1, sel_actionsObject);
  v83 = v136;
  Actions.init(_:)(v82, v136);
  v84 = type metadata accessor for Actions();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 0, 1, v84);
  v85 = objc_msgSend(a1, sel_sharedId);
  if (v85)
  {
    v86 = v85;
    sub_23361D67C();

    v81 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v54 + 56))(v43, v81, 1, v132);
  v87 = objc_msgSend(a1, sel_altDSID);
  if (v87)
  {
    v88 = v87;
    v89 = sub_23361E150();
    v127 = v90;

  }
  else
  {
    v89 = 0;
    v127 = 0;
  }
  v91 = ManagedInternalTransaction.displayLocation.getter();
  ManagedInternalTransaction.displayDate.getter((uint64_t)v133);
  v92 = objc_msgSend(a1, sel_monthAndYear);
  v93 = sub_23361E150();
  v95 = v94;

  v96 = objc_msgSend(a1, sel_year);
  v97 = objc_msgSend(a1, sel_bankTransactionCodeValue);
  v132 = v91;
  if (v97)
  {
    v98 = sub_23361E150();
    v100 = v99;

    v101 = objc_msgSend(a1, sel_bankTransactionCodeSubCode);
    if (v101)
    {
      v102 = v101;
      v103 = sub_23361E150();
      v97 = v104;

    }
    else
    {
      swift_bridgeObjectRelease();
      v98 = 0;
      v100 = 0;
      v103 = 0;
      v97 = 0;
    }
  }
  else
  {
    v98 = 0;
    v100 = 0;
    v103 = 0;
  }
  v140 = v98;
  v141 = v100;
  v142 = v103;
  v143 = v97;
  v105 = objc_msgSend(a1, sel_proprietaryBankTransactionCodeValue);
  if (v105)
  {
    v106 = (unsigned __int8 *)sub_23361E150();
    v108 = v107;

    v109 = objc_msgSend(a1, sel_proprietaryBankTransactionCodeIssuer);
    if (v109)
    {
      v110 = v109;
      v111 = (unsigned __int8 *)sub_23361E150();
      v105 = v112;

    }
    else
    {
      v111 = 0;
      v105 = 0;
    }
  }
  else
  {
    v106 = 0;
    v108 = 0;
    v111 = 0;
  }
  v139[0] = v106;
  v139[1] = v108;
  v139[2] = v111;
  v139[3] = (unsigned __int8 *)v105;
  v138 = (_QWORD)v131 == 0;
  InternalTransaction.init(id:accountID:transactionID:paymentHash:transactionAmount:foreignCurrencyAmount:foreignCurrencyExchangeRate:creditDebitIndicator:merchantCategoryCode:merchantName:transactionDescription:originalTransactionDescription:transactionType:status:source:transactionDate:postedDate:actions:sharedId:altDSID:displayLocation:displayDate:monthAndYear:year:bankTransactionCode:proprietaryBankTransactionCode:)((uint64_t)v128, (uint64_t)v129, v159, v119, v118, &v155, &v151, v117, v130, v116, v115 | ((unint64_t)((_QWORD)v131 == 0) << 32), &v149, &v147, v114, v113, v123, v122, v121, v120,
    &v146,
    &v145,
    &v144,
    v134,
    v135,
    v136,
    v137,
    v89,
    v127,
    (uint64_t)v132,
    v133,
    v93,
    v95,
    v96,
    0,
    &v140,
    v139);

}

