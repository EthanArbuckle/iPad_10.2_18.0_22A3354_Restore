uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23493447C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t FKCombinedHash(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v10 = a1;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 3221225472;
  v6[2] = __FKCombinedHash_block_invoke;
  v6[3] = &unk_250466D40;
  v6[4] = &v7;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v6);
  v4 = v8[3];
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_233158000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t FKIntegerHash(uint64_t a1, uint64_t a2)
{
  return a2 - a1 + 32 * a1;
}

void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x12u);
}

char *FKSetCrashLogSignatureString(void *a1)
{
  id v1;
  char *v2;
  id v3;
  const char *v4;
  uint64_t v5;

  v1 = a1;
  v2 = (char *)malloc_type_malloc(objc_msgSend(v1, "length") + 1, 0x51237ADBuLL);
  v3 = objc_retainAutorelease(v1);
  v4 = (const char *)objc_msgSend(v3, "UTF8String");
  v5 = objc_msgSend(v3, "length");

  return strncpy(v2, v4, v5 + 1);
}

uint64_t FKEqualObjects(void *a1, void *a2)
{
  if (a1 && a2)
    return objc_msgSend(a1, "isEqual:", a2);
  else
    return a1 == a2;
}

id FKHardwarePlatform()
{
  return (id)MGGetStringAnswer();
}

id FKProductType()
{
  return (id)MGGetStringAnswer();
}

id FKProductName()
{
  return (id)MGGetStringAnswer();
}

id FKProductVersion()
{
  return (id)MGGetStringAnswer();
}

id FKBuildVersion()
{
  return (id)MGGetStringAnswer();
}

uint64_t FKIsInternalBuild()
{
  return MGGetBoolAnswer();
}

uint64_t AccountInstitutionKey.institutionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountInstitutionKey.institutionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountInstitutionKey.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t AccountInstitutionKey.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23315ECD0()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23315ED54()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23315EDC4()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23315EE48(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23315EFFC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23315EE54);
}

BOOL sub_23315EE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;

  if ((a7 == a3 && a8 == a4 || (sub_23361F224() & 1) != 0) && a5 == a1 && a6 == a2)
    v12 = 0;
  else
    v12 = sub_23361F224();
  return (v12 & 1) == 0;
}

uint64_t sub_23315EF1C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23315EFFC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23315EF28);
}

BOOL sub_23315EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;

  if ((a3 == a7 && a4 == a8 || (sub_23361F224() & 1) != 0) && a1 == a5 && a2 == a6)
    v12 = 0;
  else
    v12 = sub_23361F224();
  return (v12 & 1) == 0;
}

uint64_t sub_23315EFF0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23315EFFC(a1, a2, a3, a4, sub_23315F01C);
}

uint64_t sub_23315EFFC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_23315F01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a7 == a3 && a8 == a4 || (sub_23361F224() & 1) != 0) && a5 == a1 && a6 == a2)
    return 0;
  else
    return sub_23361F224();
}

uint64_t sub_23315F0F0@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_2331683B0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_233166934(v4);
}

uint64_t sub_23315F178(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_2331683B0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v5;
  sub_233166934(v3);
  return sub_233166944(v8);
}

uint64_t PrivacySettingsStoreCoordinator.updateHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  sub_233166934(v1);
  return v1;
}

uint64_t PrivacySettingsStoreCoordinator.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return sub_233166944(v5);
}

uint64_t (*PrivacySettingsStoreCoordinator.updateHandler.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PrivacySettingsStoreCoordinator.__allocating_init()()
{
  swift_allocObject();
  return PrivacySettingsStoreCoordinator.init()();
}

uint64_t PrivacySettingsStoreCoordinator.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  _BYTE v19[16];

  v1 = v0;
  v2 = type metadata accessor for CoreDataStoreConfiguration(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v19[-v6];
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = sub_23361E150();
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 80) = sub_23361E150();
  *(_QWORD *)(inited + 88) = v10;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 96) = 0xD000000000000028;
  *(_QWORD *)(inited + 104) = 0x8000000233669E70;
  v11 = sub_23315F6D0(inited);
  if (qword_2542484A0 != -1)
    swift_once();
  v12 = sub_23361D340();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_2542481F8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v13, v12);
  v14 = type metadata accessor for CoreDataStoreClientConfiguration(0);
  v7[*(int *)(v14 + 20)] = 0;
  *(_QWORD *)&v7[*(int *)(v14 + 24)] = v11;
  swift_storeEnumTagMultiPayload();
  sub_2331684BC((uint64_t)v7, (uint64_t)v5, type metadata accessor for CoreDataStoreConfiguration);
  type metadata accessor for CoreDataStore();
  swift_allocObject();
  v15 = CoreDataStore.init(configuration:)((uint64_t)v5);
  *(_QWORD *)(v1 + 16) = v15;
  v16 = objc_msgSend(*((id *)v15 + 2), sel_newBackgroundContext);
  v17 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v16;

  sub_233160E08();
  sub_233168500((uint64_t)v7, type metadata accessor for CoreDataStoreConfiguration);
  return v1;
}

unint64_t sub_23315F5AC(uint64_t a1)
{
  return sub_2331600F0(a1, &qword_254245008, (uint64_t *)&unk_2542465B0, (uint64_t (*)(uint64_t))sub_2331E3E14);
}

unint64_t sub_23315F5C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245000);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_2331E3E14(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315F6D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B0);
  v2 = sub_23361EF60();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2331686A0(v6, (uint64_t)&v15, &qword_254248708);
    v7 = v15;
    v8 = v16;
    result = sub_2331E3D18(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2331683D0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315F804(uint64_t a1)
{
  return sub_233160468(a1, (uint64_t (*)(uint64_t))sub_2331E3FA4);
}

unint64_t sub_23315F810(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245010);
  v2 = sub_23361EF60();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2331686A0(v6, (uint64_t)v15, &qword_256042150);
    result = sub_2331E3EC4((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_2331683D0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315F950(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245098);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2331E3D18(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315FA70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042178);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042180);
  v6 = sub_23361EF60();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2331686A0(v12, (uint64_t)v5, &qword_256042178);
    v14 = *v5;
    v15 = v5[1];
    result = sub_2331E3D18(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_23361D340();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315FC10(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560421A0);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(_BYTE *)v4;
    v6 = *(v4 - 1);
    result = sub_2331E3FA4(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v6;
    *(_BYTE *)(v2[7] + result) = v5;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315FD0C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042110);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_2331E3FA8(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315FE20(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560421D0);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 1);
    v6 = *v4;
    swift_retain();
    v7 = v6;
    result = sub_2331E3FA8(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v5;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23315FF28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560421D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560421E0);
  v6 = sub_23361EF60();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2331686A0(v12, (uint64_t)v5, &qword_2560421D8);
    result = sub_2331E4014((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23361CEE4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 32 * v16;
    v20 = *((_QWORD *)v9 + 3);
    v21 = *(_OWORD *)(v9 + 8);
    *(_QWORD *)v19 = *(_QWORD *)v9;
    *(_OWORD *)(v19 + 8) = v21;
    *(_QWORD *)(v19 + 24) = v20;
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2331600D4(uint64_t a1)
{
  return sub_2331600F0(a1, &qword_2560421B8, &qword_2560421C0, sub_2331E3E14);
}

unint64_t sub_2331600F0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_23361EF60();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2331686A0(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_2331683D0(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160218(uint64_t a1)
{
  return sub_2331608A8(a1, &qword_2560420C8);
}

unint64_t sub_233160224(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042128);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2331E3D18(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160334(uint64_t a1)
{
  return sub_2331600F0(a1, &qword_256042158, &qword_256042160, sub_2331E3E14);
}

unint64_t sub_233160350(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560421B0);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    sub_2331683E0(v7);
    result = sub_2331E3D18(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160468(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042DD0);
  v4 = sub_23361EF60();
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  v7 = v4 + 64;
  v8 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2331686A0(v8, (uint64_t)&v15, &qword_2560421A8);
    v9 = v15;
    result = a2(v15);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v5[6] + 8 * result) = v9;
    result = (unint64_t)sub_2331683D0(&v16, (_OWORD *)(v5[7] + 32 * result));
    v12 = v5[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5[2] = v14;
    v8 += 40;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160598(uint64_t a1)
{
  return sub_2331605BC(a1, &qword_256042190);
}

unint64_t sub_2331605A4(uint64_t a1)
{
  return sub_2331605BC(a1, &qword_256042188);
}

unint64_t sub_2331605B0(uint64_t a1)
{
  return sub_2331605BC(a1, &qword_256042198);
}

unint64_t sub_2331605BC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23361EF60();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 2);
    v7 = *((_QWORD *)v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    result = sub_2331E3D18(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_BYTE *)(v3[7] + result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 24;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2331606C8(uint64_t a1)
{
  return sub_2331606E4(a1, &qword_256042168, &qword_256042170, type metadata accessor for MapsTransactionInsightResult);
}

unint64_t sub_2331606E4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_23361EF60();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_2331686A0(v17, (uint64_t)v10, v30);
    result = sub_2331E3D7C((uint64_t)v10);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = sub_23361D6A0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v10, v23);
    v24 = v12[7];
    v25 = a4(0);
    result = sub_233168580(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v21, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160890(uint64_t a1)
{
  return sub_2331608A8(a1, &qword_2560420F8);
}

unint64_t sub_23316089C(uint64_t a1)
{
  return sub_2331608A8(a1, &qword_2560420F0);
}

unint64_t sub_2331608A8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23361EF60();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_2331E3D18(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2331609BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042138);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042140);
  v6 = sub_23361EF60();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2331686A0(v12, (uint64_t)v5, &qword_256042138);
    v14 = *v5;
    v15 = v5[1];
    result = sub_2331E3D18(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for RawBankConnectData.Institution(0);
    result = sub_233168580(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, type metadata accessor for RawBankConnectData.Institution);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160B5C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042130);
  v2 = (_QWORD *)sub_23361EF60();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_2331E3D18(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_233160C74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042118);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042120);
  v6 = sub_23361EF60();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2331686A0(v12, (uint64_t)v5, &qword_256042118);
    result = sub_2331E3D7C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23361D6A0();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_233160E08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v1 = *(void **)(v0 + 48);
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = NSManagedObjectContext.localStore.getter();

    if (v4)
    {
      v5 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_persistentStoreCoordinator);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_233623D60;
      *(_QWORD *)(v6 + 56) = sub_233168668(0, (unint64_t *)&qword_2542482A0);
      *(_QWORD *)(v6 + 32) = v4;
      v7 = v4;
      v8 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v5, sel_currentPersistentHistoryTokenFromStores_, v8);

      v10 = *(void **)(v2 + 40);
      *(_QWORD *)(v2 + 40) = v9;

      v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      objc_msgSend(v11, sel_addObserver_selector_name_object_, v2, sel_didChange_, *MEMORY[0x24BDBB510], 0);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t PrivacySettingsStoreCoordinator.allAccountsByInstitutionKey()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256041DF8 + dword_256041DF8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_233160FEC;
  return v3();
}

uint64_t sub_233160FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void PrivacySettingsStoreCoordinator.modifyLinking(accountID:bundleID:linked:since:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = v7;
  v34 = a6;
  v35 = a7;
  v36 = a2;
  v13 = sub_23361D6A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v8 + 48);
  if (v18)
  {
    v33 = v14;
    v19 = v18;
    v20 = (void *)sub_23361E12C();
    objc_msgSend(v19, sel_setTransactionAuthor_, v20);

    if (*(_QWORD *)(v8 + 48))
    {
      v22 = MEMORY[0x24BDAC7A8](v21);
      *(&v31 - 6) = a1;
      *(&v31 - 5) = v8;
      LODWORD(v32) = a4;
      *((_BYTE *)&v31 - 32) = a4 & 1;
      v23 = v36;
      *(&v31 - 3) = a5;
      *(&v31 - 2) = v23;
      *(&v31 - 1) = a3;
      MEMORY[0x24BDAC7A8](v22);
      *(&v31 - 4) = (uint64_t)sub_2331675EC;
      *(&v31 - 3) = v24;
      *(&v31 - 2) = (uint64_t)v25;
      v26 = v25;
      sub_23361E960();

      v27 = sub_23361E534();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
      v28 = (_QWORD *)swift_allocObject();
      v28[2] = 0;
      v28[3] = 0;
      v28[4] = v8;
      v28[5] = v23;
      v29 = v34;
      v30 = v35;
      v28[6] = a3;
      v28[7] = v29;
      v28[8] = v30;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_233162918((uint64_t)v17, (uint64_t)&unk_256041E10, (uint64_t)v28);
      swift_release();
      sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247060);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_233161598(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t started;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57[2];

  v52._countAndFlagsBits = a5;
  v52._object = a6;
  v51 = a4;
  v57[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for AccountStartDate();
  MEMORY[0x24BDAC7A8](started);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23361D6A0();
  v17 = *(_QWORD *)(v16 - 8);
  v54 = v16;
  v55 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a2;
  v20 = *(void **)(a2 + 48);
  if (!v20)
    __break(1u);
  type metadata accessor for ManagedInternalAccount();
  v21 = v20;
  v22 = (void *)static ManagedInternalAccount.existingAccount(withPublicAccountID:in:)(a1, (uint64_t)v21);

  if (!v6)
  {
    if (v22)
    {
      if ((a3 & 1) != 0)
      {
        v23 = v51;
        sub_2331686A0(v51, (uint64_t)v12, (uint64_t *)&unk_254247DA0);
        v24 = sub_23361D634();
        LOBYTE(v23) = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24) == 1;
        sub_233168478((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_254247DA0);
        v15[*(int *)(started + 20)] = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2560421E8);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560421F0);
        v26 = *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80);
        v27 = (v26 + 32) & ~v26;
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_233623D60;
        v29 = v28 + v27 + *(int *)(v25 + 48);
        (*(void (**)(void))(v55 + 16))();
        sub_2331684BC((uint64_t)v15, v29, (uint64_t (*)(_QWORD))type metadata accessor for AccountStartDate);
        v30 = sub_2331606E4(v28, &qword_2560421F0, &qword_2560421F8, (uint64_t (*)(_QWORD))type metadata accessor for AccountStartDate);
        v31 = v53;
        v32 = *(void **)(v53 + 48);
        if (v32)
        {
          v33 = v30;
          v34 = v32;
          sub_233368388(v52._countAndFlagsBits, (uint64_t)v52._object, v33, 1, v34);
          sub_233168500((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for AccountStartDate);
          swift_bridgeObjectRelease();

          goto LABEL_17;
        }
        __break(1u);
      }
      else
      {
        v31 = v53;
        v44 = *(void **)(v53 + 48);
        if (v44)
        {
          v45 = v44;
          ManagedInternalAccount.deleteApplication(with:in:)(v52, (NSManagedObjectContext)v45);
          if (v46)
          {

            return;
          }

LABEL_17:
          v47 = *(void **)(v31 + 48);
          if (v47)
          {
            v57[0] = 0;
            if (objc_msgSend(v47, sel_save_, v57))
            {
              v48 = v57[0];
            }
            else
            {
              v49 = v57[0];
              sub_23361D1B4();

              swift_willThrow();
            }

            return;
          }
LABEL_25:
          __break(1u);
          return;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
    v53 = 0;
    if (qword_256041CA0 != -1)
      swift_once();
    v35 = sub_23361DB80();
    __swift_project_value_buffer(v35, (uint64_t)qword_2560495B0);
    v37 = v54;
    v36 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v19, a1, v54);
    v38 = sub_23361DB68();
    v39 = sub_23361E768();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = (void *)swift_slowAlloc();
      v57[0] = v41;
      *(_DWORD *)v40 = 136315138;
      sub_233167C58(&qword_256041E00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v42 = sub_23361F1D0();
      v56 = sub_233164DCC(v42, v43, (uint64_t *)v57);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v37);
      _os_log_impl(&dword_233151000, v38, v39, "Unable to obtain managedInternalAccount for accountID %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v41, -1, -1);
      MEMORY[0x234934590](v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
    }

  }
}

uint64_t sub_233161AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (__cdecl *v12)();

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v8[7] = *(_QWORD *)(type metadata accessor for InternalAccount() - 8);
  v8[8] = swift_task_alloc();
  v9 = sub_23361D6A0();
  v8[9] = v9;
  v8[10] = *(_QWORD *)(v9 - 8);
  v8[11] = swift_task_alloc();
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v8[14] = swift_task_alloc();
  v12 = (uint64_t (__cdecl *)())((char *)&dword_256041DF8 + dword_256041DF8);
  v10 = (_QWORD *)swift_task_alloc();
  v8[15] = v10;
  *v10 = v8;
  v10[1] = sub_233161BB8;
  return v12();
}

uint64_t sub_233161BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_233161C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  id v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v2 + 64);
  v54 = v2 + 64;
  v56 = *(_QWORD *)(v0 + 56);
  v57 = v2;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v55 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v65 = MEMORY[0x24BEE4B08];
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v10 = (v6 - 1) & v6;
      v11 = v9 | (v8 << 6);
      goto LABEL_27;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v12 >= v55)
      goto LABEL_49;
    v13 = *(_QWORD *)(v54 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v55)
        goto LABEL_49;
      v13 = *(_QWORD *)(v54 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v55)
          goto LABEL_49;
        v13 = *(_QWORD *)(v54 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v55)
            goto LABEL_49;
          v13 = *(_QWORD *)(v54 + 8 * v8);
          if (!v13)
          {
            v8 = v12 + 4;
            if (v12 + 4 >= v55)
              goto LABEL_49;
            v13 = *(_QWORD *)(v54 + 8 * v8);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_26:
    v10 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_27:
    v58 = v10;
    v59 = v8;
    v15 = *(_QWORD *)(*(_QWORD *)(v57 + 56) + 8 * v11);
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v66 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_233273918(0, v16, 0);
      v17 = v15 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
      v18 = *(_QWORD *)(v56 + 72);
      v19 = v66;
      do
      {
        v20 = v19;
        v21 = *(_QWORD *)(v0 + 104);
        v22 = *(_QWORD *)(v0 + 64);
        v23 = *(_QWORD *)(v0 + 72);
        sub_2331684BC(v17, v22, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v24 = v21;
        v19 = v20;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v24, v22, v23);
        sub_233168500(v22, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273918(0, *(_QWORD *)(v20 + 16) + 1, 1);
          v19 = v66;
        }
        v26 = *(_QWORD *)(v19 + 16);
        v25 = *(_QWORD *)(v19 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_233273918(v25 > 1, v26 + 1, 1);
          v19 = v66;
        }
        v27 = *(_QWORD *)(v0 + 104);
        v28 = *(_QWORD *)(v0 + 72);
        *(_QWORD *)(v19 + 16) = v26 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32))(v19+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v26, v27, v28);
        v66 = v19;
        v17 += v18;
        --v16;
      }
      while (v16);
    }
    else
    {
      swift_bridgeObjectRetain();
      v19 = MEMORY[0x24BEE4AF8];
    }
    v62 = *(_QWORD *)(v19 + 16);
    if (v62)
    {
      v29 = 0;
      v61 = v19 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v64 = *(_QWORD *)(v1 + 72);
      v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
      do
      {
        v36 = *(_QWORD *)(v0 + 112);
        v37 = *(_QWORD *)(v0 + 72);
        v30(v36, v61 + v29 * v64, v37);
        v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
        v60(v36, 0, 1, v37);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v36, 1, v37) == 1)
        {
          v6 = v58;
          v8 = v59;
          goto LABEL_6;
        }
        v63 = v29;
        v38 = v1;
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 72));
        sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        swift_bridgeObjectRetain();
        v39 = sub_23361E084();
        v40 = -1 << *(_BYTE *)(v65 + 32);
        v41 = v39 & ~v40;
        if (((*(_QWORD *)(v65 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
        {
          v42 = ~v40;
          while (1)
          {
            v43 = *(_QWORD *)(v0 + 88);
            v44 = *(_QWORD *)(v0 + 72);
            v30(v43, *(_QWORD *)(v65 + 48) + v41 * v64, v44);
            sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v45 = sub_23361E108();
            v35 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
            v35(v43, v44);
            if ((v45 & 1) != 0)
              break;
            v41 = (v41 + 1) & v42;
            if (((*(_QWORD *)(v65 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
              goto LABEL_38;
          }
          swift_bridgeObjectRelease();
          v1 = v38;
        }
        else
        {
LABEL_38:
          v32 = *(_QWORD *)(v0 + 88);
          v31 = *(_QWORD *)(v0 + 96);
          v33 = *(_QWORD *)(v0 + 72);
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v30(v32, v31, v33);
          sub_2334A97EC(v32, v41, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          v1 = v38;
          v35 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        }
        v29 = v63 + 1;
        v35(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      }
      while (v63 + 1 != v62);
      v6 = v58;
      v8 = v59;
      v60(*(_QWORD *)(v0 + 112), 1, 1, *(_QWORD *)(v0 + 72));
    }
    else
    {
      v6 = v58;
      v8 = v59;
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v1 + 56))(*(_QWORD *)(v0 + 112), 1, 1, *(_QWORD *)(v0 + 72));
    }
LABEL_6:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v14 = v12 + 5;
  if (v14 < v55)
  {
    v13 = *(_QWORD *)(v54 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        v8 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_52;
        if (v8 >= v55)
          goto LABEL_49;
        v13 = *(_QWORD *)(v54 + 8 * v8);
        ++v14;
        if (v13)
          goto LABEL_26;
      }
    }
    v8 = v14;
    goto LABEL_26;
  }
LABEL_49:
  swift_release();
  v46 = *(_QWORD *)(v0 + 16);
  result = swift_bridgeObjectRelease();
  v47 = *(void **)(v46 + 48);
  if (v47)
  {
    v49 = *(_QWORD *)(v0 + 24);
    v48 = *(_QWORD *)(v0 + 32);
    v50 = *(_QWORD *)(v0 + 16);
    v51 = swift_task_alloc();
    v52 = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v51 + 16) = v49;
    *(_QWORD *)(v51 + 24) = v48;
    *(_QWORD *)(v51 + 32) = v65;
    *(_QWORD *)(v51 + 40) = v50;
    *(_OWORD *)(v51 + 48) = v52;
    v53 = v47;
    sub_23361E960();
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_53:
  __break(1u);
  return result;
}

void sub_2331622DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  Swift::String v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  Swift::String v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  __int128 v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[2];
  char v76;
  objc_super v77;
  uint64_t v78;

  v64 = a5;
  v12 = sub_23361D6A0();
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v69 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(a4 + 48);
  if (!v14)
  {
    __break(1u);
    goto LABEL_28;
  }
  type metadata accessor for ManagedApplication();
  v77.receiver = (id)swift_getObjCClassFromMetadata();
  v77.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedApplication;
  v15 = v14;
  v16 = objc_msgSendSuper2(&v77, sel_fetchRequest);
  v17 = (void *)_s10FinanceKit18ManagedApplicationC12predicateFor8bundleID10accountIDsSo11NSPredicateCSS_Shy10Foundation4UUIDVGtFZ_0(a1, (uint64_t)a2, a3);
  objc_msgSend(v16, sel_setPredicate_, v17);

  v18 = sub_23361E984();
  if (v6)
    return;
  v62._object = a2;
  v63 = 0;
  v62._countAndFlagsBits = a1;
  v19 = v18;
  if (!(v18 >> 62))
  {
    v78 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v78)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  v78 = sub_23361EF30();
  if (!v78)
  {
LABEL_22:
    v52 = swift_bridgeObjectRelease_n();
    if (*(_QWORD *)(a4 + 48))
    {
      v53 = MEMORY[0x24BDAC7A8](v52);
      countAndFlagsBits = v62._countAndFlagsBits;
      object = v62._object;
      *(&v61 - 4) = v62._countAndFlagsBits;
      *(&v61 - 3) = (uint64_t)object;
      *(&v61 - 2) = a4;
      MEMORY[0x24BDAC7A8](v53);
      *(&v61 - 4) = (uint64_t)sub_233168AE0;
      *(&v61 - 3) = v56;
      *(&v61 - 2) = (uint64_t)v57;
      v58 = v57;
      v59 = v63;
      sub_23361E960();

      if (!v59)
      {
        v63 = 0;
        v60._countAndFlagsBits = countAndFlagsBits;
        v60._object = object;
        FinancialDataTCC.setGranted(_:forBundleID:)(0, v60);
        v48 = v64;
LABEL_25:
        v48(v47);
      }
      return;
    }
LABEL_28:
    __break(1u);
    return;
  }
LABEL_5:
  v61 = a6;
  v21 = v19 & 0xC000000000000001;
  a6 = 4;
  *(_QWORD *)&v20 = 141558787;
  v66 = v20;
  v65 = MEMORY[0x24BEE4AD8] + 8;
  v67 = v19 & 0xC000000000000001;
  v68 = v19;
  do
  {
    a4 = a6 - 4;
    if (v21)
      v22 = (id)MEMORY[0x234933120](a6 - 4, v19);
    else
      v22 = *(id *)(v19 + 8 * a6);
    v23 = v22;
    v24 = a6 - 3;
    if (__OFADD__(a4, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (qword_256041CA0 != -1)
      swift_once();
    v25 = sub_23361DB80();
    __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
    v26 = v23;
    v27 = sub_23361DB68();
    v28 = sub_23361E768();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v73 = swift_slowAlloc();
      v74 = a6 - 3;
      v75[0] = v73;
      *(_DWORD *)v30 = v66;
      *(_QWORD *)(v30 + 4) = 1752392040;
      *(_WORD *)(v30 + 12) = 2081;
      v31 = objc_msgSend(v26, sel_bundleID);
      v72 = v29;
      v32 = v31;
      v33 = sub_23361E150();
      v35 = v34;

      *(_QWORD *)(v30 + 14) = sub_233164DCC(v33, v35, v75);
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2160;
      *(_QWORD *)(v30 + 24) = 1752392040;
      *(_WORD *)(v30 + 32) = 2081;
      v36 = objc_msgSend(v26, sel_accountID);
      v37 = v69;
      sub_23361D67C();

      sub_233167C58(&qword_256041E00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v38 = v71;
      v39 = sub_23361F1D0();
      v41 = v40;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v38);
      v42 = v39;
      v19 = v68;
      *(_QWORD *)(v30 + 34) = sub_233164DCC(v42, v41, v75);

      v24 = v74;
      v21 = v67;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v27, (os_log_type_t)v72, "App %{private,mask.hash}s\n- %{private,mask.hash}s", (uint8_t *)v30, 0x2Au);
      v43 = v73;
      swift_arrayDestroy();
      MEMORY[0x234934590](v43, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);

    }
    else
    {

    }
    ++a6;
  }
  while (v24 != v78);
  swift_bridgeObjectRelease_n();
  v45 = v62._countAndFlagsBits;
  v44 = v62._object;
  FinancialDataTCC.tccInfo(forBundleID:)(v62);
  if (v75[1])
  {
    v46 = v76;
    v47 = swift_bridgeObjectRelease();
    v48 = v64;
    if ((v46 & 1) != 0)
      goto LABEL_25;
    v49._countAndFlagsBits = v45;
    v49._object = v44;
    v50 = v64;
    FinancialDataTCC.setGranted(_:forBundleID:)(1, v49);
    v50(v51);
  }
  else
  {
    v64(0);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PrivacySettingsStoreCoordinator.removeAllAccountLinking(forBundleIdentifier:)(Swift::String forBundleIdentifier)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;

  if (*(_QWORD *)(v1 + 48))
  {
    v4 = MEMORY[0x24BDAC7A8](forBundleIdentifier._countAndFlagsBits);
    MEMORY[0x24BDAC7A8](v4);
    v3 = v2;
    sub_23361E960();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_233162918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(a1, (uint64_t)v7, (uint64_t *)&unk_254247060);
  v8 = sub_23361E534();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_233168608((uint64_t)v7, (uint64_t *)&unk_254247060);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  else
  {
    sub_23361E528();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v10 = sub_23361E474();
  v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

void sub_233162A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  objc_super v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)(a3 + 48);
  if (!v4)
LABEL_21:
    __break(1u);
  type metadata accessor for ManagedApplication();
  v23.receiver = (id)swift_getObjCClassFromMetadata();
  v23.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedApplication;
  v8 = v4;
  v9 = objc_msgSendSuper2(&v23, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 64) = sub_2331683F0();
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23361E6B4();
  objc_msgSend(v9, sel_setPredicate_, v11);

  v12 = sub_23361E984();
  if (!v3)
  {
    if (v12 >> 62)
      goto LABEL_18;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v13)
    {
      v14 = 4;
      while (1)
      {
        v15 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x234933120](v14 - 4, v12)
            : *(id *)(v12 + 8 * v14);
        v16 = v15;
        v17 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
          break;
        v18 = *(void **)(a3 + 48);
        if (!v18)
        {
          __break(1u);
          goto LABEL_21;
        }
        objc_msgSend(v18, sel_deleteObject_, v16);

        ++v14;
        if (v17 == v13)
          goto LABEL_12;
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      v13 = sub_23361EF30();
      swift_bridgeObjectRelease();
    }
LABEL_12:
    swift_bridgeObjectRelease();
    v19 = *(void **)(a3 + 48);
    if (v19)
    {
      v22 = 0;
      if (objc_msgSend(v19, sel_save_, &v22))
      {
        v20 = v22;
      }
      else
      {
        v21 = v22;
        sub_23361D1B4();

        swift_willThrow();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void PrivacySettingsStoreCoordinator.linkedAccountDate(toBundleID:withAccountID:)(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  if (*(_QWORD *)(v1 + 48))
  {
    MEMORY[0x24BDAC7A8](a1);
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256041E18);
    sub_23361E960();

  }
  else
  {
    __break(1u);
  }
}

void sub_233162DD4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t started;
  char *v33;
  uint64_t v34;
  char *v35;

  v35 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v33 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23361D634();
  v12 = *(_QWORD *)(v34 - 8);
  v13 = MEMORY[0x24BDAC7A8](v34);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  v18 = *(void **)(a4 + 48);
  if (!v18)
  {
    __break(1u);
    return;
  }
  type metadata accessor for ManagedApplication();
  v19 = v18;
  v20 = (void *)static ManagedApplication.existingApplication(with:associatedWith:in:)(a1, a2, a3, (uint64_t)v19);

  if (!v5)
  {
    if (!v20)
    {
      started = type metadata accessor for AccountStartDate();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 56))(v35, 1, 1, started);
      return;
    }
    v21 = v20;
    v22 = objc_msgSend(v21, sel_sharingStartDate);
    if (v22)
    {
      v23 = v22;
      sub_23361D5EC();

      v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v25 = (uint64_t)v33;
      v26 = v15;
      v27 = v34;
      v24(v33, v26, v34);
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v28(v25, 0, 1, v27);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v25, 1, v27) != 1)
      {
        v24(v17, (char *)v25, v27);
        v29 = v35;
        v24(v35, v17, v27);
        v28((uint64_t)v29, 0, 1, v27);
        v30 = type metadata accessor for AccountStartDate();
        v31 = v30;
        v29[*(int *)(v30 + 20)] = 0;
LABEL_10:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v31);
        return;
      }
    }
    else
    {

      v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v25 = (uint64_t)v33;
      v27 = v34;
      v28((uint64_t)v33, 1, 1, v34);
    }
    sub_233168608(v25, (uint64_t *)&unk_254247DA0);
    v29 = v35;
    v28((uint64_t)v35, 1, 1, v27);
    v30 = type metadata accessor for AccountStartDate();
    v31 = v30;
    v29[*(int *)(v30 + 20)] = 1;
    goto LABEL_10;
  }
}

uint64_t sub_233163084(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[6];

  v2 = *(void **)(v1 + 48);
  if (v2)
  {
    v3 = (void *)result;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v1;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_233167DF8;
    *(_QWORD *)(v5 + 24) = v4;
    v10[4] = sub_233167E10;
    v10[5] = v5;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_2332714C0;
    v10[3] = &block_descriptor;
    v6 = _Block_copy(v10);
    v7 = v2;
    v8 = v3;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_performBlockAndWait_, v6);

    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_2331631D4(void *a1, _QWORD *a2)
{
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  void *v22;
  id v23;
  char v24;
  char v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  id v29[4];

  v29[3] = *(id *)MEMORY[0x24BDAC8D0];
  result = objc_msgSend(a1, sel_userInfo);
  if (result)
  {
    v4 = result;
    v5 = sub_23361E06C();

    v6 = objc_msgSend((id)objc_opt_self(), sel_fetchHistoryAfterToken_, a2[5]);
    result = (id)a2[6];
    if (result)
    {
      v29[0] = 0;
      v7 = objc_msgSend(result, sel_executeRequest_error_, v6, v29);
      v8 = v29[0];
      if (v7)
      {
        v9 = v7;
        objc_opt_self();
        v10 = (void *)swift_dynamicCastObjCClass();
        v11 = v8;
        if (!v10)

        v23 = v10;
        sub_233167E20(v10);
        v25 = v24;

        if ((v25 & 1) != 0 && (swift_beginAccess(), (v26 = (void (*)(uint64_t))a2[3]) != 0))
        {
          v27 = swift_retain();
          v26(v27);

          sub_233166944((uint64_t)v26);
        }
        else
        {

          v6 = v23;
        }

      }
      else
      {
        v12 = v29[0];
        v13 = (void *)sub_23361D1B4();

        swift_willThrow();
        if (qword_256041CA0 != -1)
          swift_once();
        v14 = sub_23361DB80();
        __swift_project_value_buffer(v14, (uint64_t)qword_2560495B0);
        v15 = v13;
        v16 = v13;
        v17 = sub_23361DB68();
        v18 = sub_23361E768();
        if (os_log_type_enabled(v17, v18))
        {
          v28 = v5;
          v19 = (uint8_t *)swift_slowAlloc();
          v20 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v19 = 138412290;
          v21 = v13;
          v22 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v29[0] = v22;
          sub_23361EBC4();
          *v20 = v22;
          v5 = v28;

          _os_log_impl(&dword_233151000, v17, v18, "Unable to obtain persistent history: %@", v19, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
          swift_arrayDestroy();
          MEMORY[0x234934590](v20, -1, -1);
          MEMORY[0x234934590](v19, -1, -1);

        }
        else
        {

        }
      }
      sub_233163540((uint64_t)a2, v5);
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_233163540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  *(_QWORD *)&v12 = sub_23361E150();
  *((_QWORD *)&v12 + 1) = v4;
  sub_23361ED50();
  if (*(_QWORD *)(a2 + 16) && (v5 = sub_2331E3EC4((uint64_t)v11), (v6 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_23316831C((uint64_t)v11);
  if (*((_QWORD *)&v13 + 1))
  {
    sub_233168668(0, (unint64_t *)&unk_256048680);
    v7 = swift_dynamicCast();
    v8 = v10;
    if (!v7)
      v8 = 0;
  }
  else
  {
    sub_233168608((uint64_t)&v12, &qword_254245020);
    v8 = 0;
  }
  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;

}

uint64_t PrivacySettingsStoreCoordinator.deinit()
{
  uint64_t v0;

  swift_release();
  sub_233166944(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t PrivacySettingsStoreCoordinator.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_233166944(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance();
}

void sub_2331636EC(void (*a1)(void)@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  __int128 v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void (*v51)(void);
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;

  v49 = a3;
  v8 = sub_23361DB80();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361C938();
  v53 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v44 - v14;
  v16 = sub_23361C944();
  v58 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v54 = (char *)&v44 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v44 - v21;
  v60 = 1;
  v23 = swift_beginAccess();
  v50 = a4;
  v51 = a1;
  v48 = a2;
  ((void (*)(uint64_t))a1)(v23);
  if (v4)
  {
    *(_QWORD *)&v24 = 134218242;
    v44 = v24;
    v46 = v10;
    v47 = v13;
    v25 = v54;
    v26 = v58;
    v45 = v22;
    v59 = v4;
    v27 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if (!swift_dynamicCast())
    {
LABEL_16:

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v25, v22, v16);
    sub_233167C58(&qword_254246B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_23361D190();
    sub_23361C8CC();
    sub_233167C58(&qword_256042148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC8]);
    v28 = sub_23361E108();
    v29 = v10;
    v30 = *(void (**)(char *, uint64_t))(v53 + 8);
    v30(v13, v29);
    if ((v28 & 1) != 0)
    {
      v30(v15, v29);
      v31 = v52;
    }
    else
    {
      sub_23361C908();
      v32 = sub_23361E108();
      v30(v15, v29);
      v30(v13, v29);
      v31 = v52;
      if ((v32 & 1) == 0)
      {
        v43 = *(void (**)(char *, uint64_t))(v58 + 8);
        v36 = v54;
LABEL_15:
        v43(v36, v16);
        goto LABEL_16;
      }
    }

    v33 = v58;
    if (qword_2542483B0 != -1)
      swift_once();
    v34 = v57;
    v35 = __swift_project_value_buffer(v57, (uint64_t)qword_254248210);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v35, v34);
    v36 = v54;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v54, v16);
    v37 = sub_23361DB68();
    v38 = sub_23361E768();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = v31;
      v41 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v39 = v44;
      *(_QWORD *)(v39 + 4) = v60;
      *(_WORD *)(v39 + 12) = 2112;
      sub_23361C8B4();
      v42 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v39 + 14) = v42;
      *v41 = v42;
      v43 = *(void (**)(char *, uint64_t))(v58 + 8);
      v43(v40, v16);
      _os_log_impl(&dword_233151000, v37, v38, "Failed to perform operation (#%ld) with error: %@", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v41, -1, -1);
      MEMORY[0x234934590](v39, -1, -1);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t))(v33 + 8);
      v43(v31, v16);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
    if (v60 <= 4)
    {
      ++v60;
      objc_msgSend(v49, sel_reset);
      v43(v36, v16);

      v51();
      return;
    }
    sub_23361C8B4();
    swift_willThrow();
    goto LABEL_15;
  }
}

void sub_233163BF8(void (*a1)(void)@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_2331636EC(a1, a2, a3, a4);
}

void sub_233163C0C(void (*a1)(void)@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char *v24;
  id v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  __int128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void (*v50)(void);
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;

  v48 = a3;
  v8 = sub_23361DB80();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361C938();
  v53 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v44 - v14;
  v15 = sub_23361C944();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v51 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v55 = (char *)&v44 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v54 = (char *)&v44 - v21;
  v60 = 1;
  v22 = swift_beginAccess();
  v49 = a4;
  v50 = a1;
  v47 = a2;
  ((void (*)(uint64_t))a1)(v22);
  if (v4)
  {
    *(_QWORD *)&v23 = 134218242;
    v44 = v23;
    v45 = v10;
    v46 = v13;
    v24 = v55;
    v59 = v4;
    v25 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    v26 = v54;
    if (!swift_dynamicCast())
    {
LABEL_16:

      return;
    }
    v27 = v16;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v26, v15);
    sub_233167C58(&qword_254246B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v28 = v52;
    sub_23361D190();
    sub_23361C8CC();
    sub_233167C58(&qword_256042148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC8]);
    v29 = sub_23361E108();
    v30 = v10;
    v31 = *(void (**)(char *, uint64_t))(v53 + 8);
    v31(v13, v30);
    if ((v29 & 1) != 0)
    {
      v31(v28, v30);
      v32 = v51;
    }
    else
    {
      sub_23361C908();
      v33 = sub_23361E108();
      v31(v13, v30);
      v31(v28, v30);
      v32 = v51;
      if ((v33 & 1) == 0)
      {
        v43 = *(void (**)(char *, uint64_t))(v27 + 8);
        v36 = v55;
LABEL_15:
        v43(v36, v15);
        goto LABEL_16;
      }
    }

    if (qword_2542483B0 != -1)
      swift_once();
    v34 = v58;
    v35 = __swift_project_value_buffer(v58, (uint64_t)qword_254248210);
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v35, v34);
    v36 = v55;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v32, v55, v15);
    v37 = sub_23361DB68();
    v38 = sub_23361E768();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = v32;
      v41 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v39 = v44;
      *(_QWORD *)(v39 + 4) = v60;
      *(_WORD *)(v39 + 12) = 2112;
      sub_23361C8B4();
      v42 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v39 + 14) = v42;
      *v41 = v42;
      v43 = *(void (**)(char *, uint64_t))(v27 + 8);
      v43(v40, v15);
      _os_log_impl(&dword_233151000, v37, v38, "Failed to perform operation (#%ld) with error: %@", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v41, -1, -1);
      MEMORY[0x234934590](v39, -1, -1);
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t))(v27 + 8);
      v43(v32, v15);
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    if (v60 <= 4)
    {
      ++v60;
      objc_msgSend(v48, sel_reset);
      v43(v36, v15);

      v50();
      return;
    }
    sub_23361C8B4();
    swift_willThrow();
    goto LABEL_15;
  }
}

void sub_233164110(void (*a1)(uint64_t *__return_ptr), uint64_t a2, void *a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(uint64_t *__return_ptr);
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;

  v53 = a3;
  v6 = sub_23361DB80();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361C938();
  v56 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v48 - v12;
  v13 = sub_23361C944();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v48 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v57 = (char *)&v48 - v21;
  v63 = 1;
  v22 = swift_beginAccess();
  v54 = a2;
  v52 = a1;
  ((void (*)(uint64_t *__return_ptr, uint64_t))a1)(&v64, v22);
  if (v3)
  {
    *(_QWORD *)&v23 = 134218242;
    v48 = v23;
    v49 = v8;
    v50 = v17;
    v51 = v11;
    v58 = v13;
    v62 = v3;
    v24 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    v25 = v57;
    if (!swift_dynamicCast())
    {
LABEL_17:

      return;
    }
    v26 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v25, v13);
    sub_233167C58(&qword_254246B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v27 = v55;
    v28 = v20;
    sub_23361D190();
    sub_23361C8CC();
    sub_233167C58(&qword_256042148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEC8]);
    v29 = sub_23361E108();
    v30 = v8;
    v31 = *(void (**)(char *, uint64_t))(v56 + 8);
    v31(v11, v30);
    if ((v29 & 1) != 0)
    {
      v31(v27, v30);
    }
    else
    {
      sub_23361C908();
      v32 = sub_23361E108();
      v31(v11, v30);
      v31(v27, v30);
      if ((v32 & 1) == 0)
      {
        v46 = *(void (**)(char *, uint64_t))(v26 + 8);
        v33 = v28;
        v40 = v58;
LABEL_16:
        v46(v33, v40);
        goto LABEL_17;
      }
    }

    v33 = v28;
    v34 = v26;
    if (qword_2542483B0 != -1)
      swift_once();
    v35 = v61;
    v36 = __swift_project_value_buffer(v61, (uint64_t)qword_254248210);
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v36, v35);
    v37 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    v38 = v50;
    v39 = v28;
    v40 = v58;
    v37(v50, v39, v58);
    v41 = sub_23361DB68();
    v42 = sub_23361E768();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v43 = v48;
      *(_QWORD *)(v43 + 4) = v63;
      *(_WORD *)(v43 + 12) = 2112;
      sub_23361C8B4();
      v45 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v43 + 14) = v45;
      *v44 = v45;
      v46 = *(void (**)(char *, uint64_t))(v34 + 8);
      v46(v38, v58);
      _os_log_impl(&dword_233151000, v41, v42, "Failed to perform operation (#%ld) with error: %@", (uint8_t *)v43, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v44, -1, -1);
      v47 = v43;
      v40 = v58;
      MEMORY[0x234934590](v47, -1, -1);
    }
    else
    {
      v46 = *(void (**)(char *, uint64_t))(v34 + 8);
      v46(v38, v40);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
    if (v63 <= 4)
    {
      ++v63;
      objc_msgSend(v53, sel_reset);
      v46(v33, v40);

      v52(&v64);
      return;
    }
    sub_23361C8B4();
    swift_willThrow();
    goto LABEL_16;
  }
}

uint64_t sub_23316461C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for InternalAccount() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_233605C18(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2331653A8(v6);
  *a1 = v3;
  return result;
}

_QWORD *sub_23316469C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_2331646AC(uint64_t a1, uint64_t a2)
{
  return sub_233164904(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2331646CC(uint64_t a1)
{
  MEMORY[0x234934494](&unk_2336242E4, a1);
  return sub_23361D9AC();
}

uint64_t sub_233164708()
{
  MEMORY[0x234934494](&unk_2336242E4);
  return sub_23361D9A0();
}

uint64_t sub_233164750(uint64_t a1, uint64_t a2)
{
  sub_23361F350();
  MEMORY[0x234934494](&unk_2336242E4, a2);
  sub_23361D9A0();
  return sub_23361F3A4();
}

void sub_2331647A8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_2331647B4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2331647C8(uint64_t a1, uint64_t a2)
{
  return sub_233164904(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2331647D4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23361E138();
  *a2 = 0;
  return result;
}

uint64_t sub_233164848(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23361E144();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2331648C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23361E150();
  v2 = sub_23361E12C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_233164904(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23361E150();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_233164940()
{
  sub_23361E150();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233164980()
{
  uint64_t v0;

  sub_23361E150();
  sub_23361F350();
  sub_23361E0A8();
  v0 = sub_23361F3A4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2331649F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x234934494](&unk_2336242E4, a3);
  return sub_23361D994();
}

uint64_t sub_233164A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23361E150();
  v2 = v1;
  if (v0 == sub_23361E150() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_233164ACC()
{
  sub_233167C58(&qword_2560420E0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_233624218);
  sub_233167C58(&qword_2560420E8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2336241B8);
  return sub_23361EF84();
}

uint64_t sub_233164B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23361E150();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_233164B78()
{
  sub_233167C58((unint64_t *)&qword_2560420D0, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_233624430);
  sub_233167C58(&qword_2560420D8, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_233624384);
  return sub_23361EF84();
}

uint64_t sub_233164BFC()
{
  sub_233167C58((unint64_t *)&qword_254246598, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_233624A10);
  sub_233167C58(&qword_2560422B8, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_233624970);
  return sub_23361EF84();
}

uint64_t sub_233164C80()
{
  sub_233167C58((unint64_t *)&qword_2560422C0, (uint64_t (*)(uint64_t))type metadata accessor for ODIAttributeKey, (uint64_t)&unk_233624A50);
  sub_233167C58(&qword_2560422C8, (uint64_t (*)(uint64_t))type metadata accessor for ODIAttributeKey, (uint64_t)&unk_233624864);
  return sub_23361EF84();
}

uint64_t sub_233164D04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361E12C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_233164D48()
{
  sub_233167C58(&qword_2560422D0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_233624A94);
  sub_233167C58(&qword_2560422D8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_233624748);
  return sub_23361EF84();
}

uint64_t sub_233164DCC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_233164E9C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_233168350((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_233168350((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_233164E9C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23361EBD0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_233165054(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23361EE34();
  if (!v8)
  {
    sub_23361EF18();
    __break(1u);
LABEL_17:
    result = sub_23361EF6C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_233165054(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2331650E8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23316525C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23316525C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2331650E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_233490214(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23361EDA4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23361EF18();
      __break(1u);
LABEL_10:
      v2 = sub_23361E2A0();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23361EF6C();
    __break(1u);
LABEL_14:
    result = sub_23361EF18();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23316525C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254246960);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2331653A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;

  v2 = v1;
  v161 = type metadata accessor for InternalAccount();
  v157 = *(_QWORD *)(v161 - 8);
  v4 = MEMORY[0x24BDAC7A8](v161);
  v153 = (uint64_t)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v162 = (uint64_t)&v144 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v144 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v144 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v144 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v144 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v144 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v144 - v23;
  v169 = a1;
  v25 = a1[1];
  result = sub_23361F1C4();
  if (result >= v25)
  {
    if (v25 < 0)
      goto LABEL_148;
    if (v25)
      return sub_233165FA4(0, v25, 1, v169);
    return result;
  }
  v149 = result;
  if (v25 >= 0)
    v27 = v25;
  else
    v27 = v25 + 1;
  if (v25 < -1)
    goto LABEL_156;
  v28 = v157;
  if (v25 < 2)
  {
    v156 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80));
    v145 = MEMORY[0x24BEE4AF8];
    if (v25 != 1)
    {
      v34 = (char *)MEMORY[0x24BEE4AF8];
      v37 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_115:
      v136 = v2;
      if (v37 >= 2)
      {
        v137 = *v169;
        do
        {
          v138 = v37 - 2;
          if (v37 < 2)
            goto LABEL_143;
          if (!v137)
            goto LABEL_155;
          v139 = v34;
          v140 = *(_QWORD *)&v34[16 * v138 + 32];
          v141 = *(_QWORD *)&v34[16 * v37 + 24];
          sub_23316623C(v137 + *(_QWORD *)(v157 + 72) * v140, v137 + *(_QWORD *)(v157 + 72) * *(_QWORD *)&v34[16 * v37 + 16], v137 + *(_QWORD *)(v157 + 72) * v141, v156);
          if (v136)
            break;
          if (v141 < v140)
            goto LABEL_144;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v139 = sub_233605C04((uint64_t)v34);
          if (v138 >= *((_QWORD *)v139 + 2))
            goto LABEL_145;
          v142 = &v139[16 * v138 + 32];
          *(_QWORD *)v142 = v140;
          *((_QWORD *)v142 + 1) = v141;
          v143 = *((_QWORD *)v139 + 2);
          if (v37 > v143)
            goto LABEL_146;
          memmove(&v139[16 * v37 + 16], &v139[16 * v37 + 32], 16 * (v143 - v37));
          *((_QWORD *)v139 + 2) = v143 - 1;
          v37 = v143 - 1;
          v34 = v139;
        }
        while (v143 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v29 = 1;
    v152 = v19;
    v158 = v13;
  }
  else
  {
    v29 = v25;
    v152 = v19;
    v158 = v13;
    v30 = v27 >> 1;
    v31 = sub_23361E42C();
    v28 = v157;
    *(_QWORD *)(v31 + 16) = v30;
    v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v145 = v31;
    v156 = v31 + v32;
  }
  v33 = 0;
  v34 = (char *)MEMORY[0x24BEE4AF8];
  v160 = v10;
  v155 = v16;
  v148 = v22;
  v147 = v24;
  v35 = v149;
  v36 = v29;
  while (1)
  {
    v38 = v33;
    v39 = v33 + 1;
    v163 = v36;
    if (v33 + 1 >= v36)
      goto LABEL_44;
    v40 = *v169;
    v41 = *(_QWORD *)(v28 + 72);
    v151 = v33 + 1;
    sub_2331684BC(v40 + v41 * v39, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v154 = v38;
    v150 = v40;
    v164 = v41;
    sub_2331684BC(v40 + v41 * v38, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v42 = *(int *)(v161 + 44);
    v43 = *(_QWORD *)&v24[v42 + 8];
    v167 = *(_QWORD *)&v24[v42];
    v168 = v43;
    v44 = &v22[v42];
    v46 = *(_QWORD *)v44;
    v45 = *((_QWORD *)v44 + 1);
    v165 = v46;
    v166 = v45;
    sub_2331685C4();
    v47 = sub_23361EC00();
    if (v47)
      LODWORD(v159) = v47 == -1;
    else
      LODWORD(v159) = MEMORY[0x2349319C8](v24, v22);
    sub_233168500((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    sub_233168500((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v38 = v154;
    v39 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      v59 = v163;
      v35 = v149;
    }
    else
    {
      v146 = v34;
      v48 = v150;
      v151 *= v164;
      v49 = v164 * v39;
      while (1)
      {
        v50 = v39;
        v51 = (uint64_t)v152;
        sub_2331684BC(v48 + v49, (uint64_t)v152, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        sub_2331684BC(v48 + v151, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v52 = *(int *)(v161 + 44);
        v53 = *(_QWORD *)(v51 + v52 + 8);
        v167 = *(_QWORD *)(v51 + v52);
        v168 = v53;
        v54 = &v16[v52];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v165 = v56;
        v166 = v55;
        v57 = sub_23361EC00();
        v58 = v57 ? v57 == -1 : MEMORY[0x2349319C8](v51, v16);
        sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        sub_233168500(v51, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        if (((v159 ^ v58) & 1) != 0)
          break;
        v39 = v50 + 1;
        v48 += v164;
        if (v163 == v50 + 1)
        {
          v59 = v163;
          v39 = v163;
          v34 = v146;
          v35 = v149;
          v38 = v154;
          goto LABEL_30;
        }
      }
      v34 = v146;
      v35 = v149;
      v39 = v50;
      v38 = v154;
      v59 = v163;
    }
LABEL_30:
    v10 = v160;
    v28 = v157;
    if ((v159 & 1) != 0)
    {
      if (v39 < v38)
        goto LABEL_149;
      if (v38 < v39)
      {
        v146 = v34;
        v144 = v2;
        v60 = 0;
        v61 = v164 * (v39 - 1);
        v62 = v38;
        v63 = v39 * v164;
        v64 = v62;
        v65 = v62 * v164;
        do
        {
          if (v64 != v39 + v60 - 1)
          {
            v66 = v150;
            if (!v150)
              goto LABEL_154;
            v67 = v150 + v65;
            sub_233168580(v150 + v65, v153, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
            if (v65 < v61 || v67 >= v66 + v63)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v65 != v61)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_233168580(v153, v66 + v61, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
            v10 = v160;
          }
          ++v64;
          --v60;
          v61 -= v164;
          v63 -= v164;
          v65 += v164;
        }
        while (v64 < v39 + v60);
        v2 = v144;
        v28 = v157;
        v34 = v146;
        v38 = v154;
        v16 = v155;
        v35 = v149;
LABEL_44:
        v59 = v163;
      }
    }
    if (v39 >= v59)
      goto LABEL_65;
    if (__OFSUB__(v39, v38))
      goto LABEL_147;
    if (v39 - v38 >= v35)
      goto LABEL_65;
    if (__OFADD__(v38, v35))
      goto LABEL_150;
    if (v38 + v35 < v59)
      v59 = v38 + v35;
    if (v59 < v38)
      break;
    if (v39 != v59)
    {
      v154 = v38;
      v146 = v34;
      v144 = v2;
      v159 = *(_QWORD *)(v28 + 72);
      v163 = v39 * v159;
      v164 = v159 * (v39 - 1);
      v151 = v59;
      do
      {
        v68 = 0;
        v69 = v154;
        v70 = (uint64_t)v10;
        while (1)
        {
          v71 = v39;
          v72 = *v169;
          v73 = (uint64_t)v158;
          sub_2331684BC(v163 + v68 + *v169, (uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          sub_2331684BC(v164 + v68 + v72, v70, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          v74 = *(int *)(v161 + 44);
          v75 = *(_QWORD *)(v73 + v74 + 8);
          v167 = *(_QWORD *)(v73 + v74);
          v168 = v75;
          v76 = (uint64_t *)(v70 + v74);
          v78 = *v76;
          v77 = v76[1];
          v165 = v78;
          v166 = v77;
          sub_2331685C4();
          v79 = sub_23361EC00();
          v80 = v79 ? v79 == -1 : MEMORY[0x2349319C8](v73, v70);
          sub_233168500(v70, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          sub_233168500(v73, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          if ((v80 & 1) == 0)
            break;
          v81 = *v169;
          if (!*v169)
            goto LABEL_152;
          v82 = v81 + v164 + v68;
          sub_233168580(v81 + v163 + v68, v162, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          swift_arrayInitWithTakeFrontToBack();
          sub_233168580(v162, v82, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          v70 = (uint64_t)v160;
          v68 -= v159;
          ++v69;
          v39 = v71;
          if (v71 == v69)
            goto LABEL_55;
        }
        v39 = v71;
LABEL_55:
        v10 = (char *)v70;
        ++v39;
        v164 += v159;
        v163 += v159;
      }
      while (v39 != v151);
      v39 = v151;
      v2 = v144;
      v34 = v146;
      v38 = v154;
      v16 = v155;
    }
LABEL_65:
    if (v39 < v38)
      goto LABEL_142;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v164 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v34 = sub_23360573C(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
    v85 = *((_QWORD *)v34 + 2);
    v84 = *((_QWORD *)v34 + 3);
    v37 = v85 + 1;
    v28 = v157;
    if (v85 >= v84 >> 1)
    {
      v135 = sub_23360573C((char *)(v84 > 1), v85 + 1, 1, v34);
      v28 = v157;
      v34 = v135;
    }
    *((_QWORD *)v34 + 2) = v37;
    v86 = v34 + 32;
    v87 = &v34[16 * v85 + 32];
    v88 = v164;
    *(_QWORD *)v87 = v38;
    *((_QWORD *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        v89 = v37 - 1;
        if (v37 >= 4)
        {
          v94 = &v86[16 * v37];
          v95 = *((_QWORD *)v94 - 8);
          v96 = *((_QWORD *)v94 - 7);
          v100 = __OFSUB__(v96, v95);
          v97 = v96 - v95;
          if (v100)
            goto LABEL_131;
          v99 = *((_QWORD *)v94 - 6);
          v98 = *((_QWORD *)v94 - 5);
          v100 = __OFSUB__(v98, v99);
          v92 = v98 - v99;
          v93 = v100;
          if (v100)
            goto LABEL_132;
          v101 = v37 - 2;
          v102 = &v86[16 * v37 - 32];
          v104 = *(_QWORD *)v102;
          v103 = *((_QWORD *)v102 + 1);
          v100 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          if (v100)
            goto LABEL_134;
          v100 = __OFADD__(v92, v105);
          v106 = v92 + v105;
          if (v100)
            goto LABEL_137;
          if (v106 >= v97)
          {
            v124 = &v86[16 * v89];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v100 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v100)
              goto LABEL_141;
            v117 = v92 < v127;
            goto LABEL_102;
          }
        }
        else
        {
          if (v37 != 3)
          {
            v118 = *((_QWORD *)v34 + 4);
            v119 = *((_QWORD *)v34 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
            goto LABEL_96;
          }
          v91 = *((_QWORD *)v34 + 4);
          v90 = *((_QWORD *)v34 + 5);
          v100 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          v93 = v100;
        }
        if ((v93 & 1) != 0)
          goto LABEL_133;
        v101 = v37 - 2;
        v107 = &v86[16 * v37 - 32];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v110 = __OFSUB__(v108, v109);
        v111 = v108 - v109;
        v112 = v110;
        if (v110)
          goto LABEL_136;
        v113 = &v86[16 * v89];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v100 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v100)
          goto LABEL_139;
        if (__OFADD__(v111, v116))
          goto LABEL_140;
        if (v111 + v116 >= v92)
        {
          v117 = v92 < v116;
LABEL_102:
          if (v117)
            v89 = v101;
          goto LABEL_104;
        }
LABEL_96:
        if ((v112 & 1) != 0)
          goto LABEL_135;
        v120 = &v86[16 * v89];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v100 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v100)
          goto LABEL_138;
        if (v123 < v111)
          goto LABEL_15;
LABEL_104:
        v128 = v89 - 1;
        if (v89 - 1 >= v37)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (!*v169)
          goto LABEL_153;
        v129 = v34;
        v130 = &v86[16 * v128];
        v131 = *(_QWORD *)v130;
        v132 = &v86[16 * v89];
        v133 = *((_QWORD *)v132 + 1);
        sub_23316623C(*v169 + *(_QWORD *)(v28 + 72) * *(_QWORD *)v130, *v169 + *(_QWORD *)(v28 + 72) * *(_QWORD *)v132, *v169 + *(_QWORD *)(v28 + 72) * v133, v156);
        if (v2)
          goto LABEL_126;
        if (v133 < v131)
          goto LABEL_128;
        if (v89 > *((_QWORD *)v129 + 2))
          goto LABEL_129;
        *(_QWORD *)v130 = v131;
        *(_QWORD *)&v86[16 * v128 + 8] = v133;
        v134 = *((_QWORD *)v129 + 2);
        if (v89 >= v134)
          goto LABEL_130;
        v34 = v129;
        v37 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((_QWORD *)v129 + 2) = v134 - 1;
        v10 = v160;
        v16 = v155;
        v28 = v157;
        if (v134 <= 2)
          goto LABEL_15;
      }
    }
    v37 = 1;
LABEL_15:
    v36 = v169[1];
    v33 = v164;
    v24 = v147;
    v22 = v148;
    v35 = v149;
    if (v164 >= v36)
      goto LABEL_115;
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  result = sub_23361EF18();
  __break(1u);
  return result;
}

uint64_t sub_233165FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v31 = a1;
  v35 = type metadata accessor for InternalAccount();
  v7 = MEMORY[0x24BDAC7A8](v35);
  v36 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v29 - v14;
  v34 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v42 = v16 * (v34 - 1);
    v33 = v16;
    v37 = v16 * v34;
    v32 = (char *)&v29 - v14;
LABEL_5:
    v17 = 0;
    v18 = v31;
    while (1)
    {
      v19 = *a4;
      sub_2331684BC(v37 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      sub_2331684BC(v42 + v17 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v20 = *(int *)(v35 + 44);
      v21 = *(_QWORD *)&v15[v20 + 8];
      v40 = *(_QWORD *)&v15[v20];
      v41 = v21;
      v22 = &v11[v20];
      v24 = *(_QWORD *)v22;
      v23 = *((_QWORD *)v22 + 1);
      v38 = v24;
      v39 = v23;
      sub_2331685C4();
      v25 = sub_23361EC00();
      if (v25)
        v26 = v25 == -1;
      else
        v26 = MEMORY[0x2349319C8](v15, v11);
      sub_233168500((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      result = sub_233168500((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      if ((v26 & 1) == 0)
      {
LABEL_4:
        v42 += v33;
        v37 += v33;
        if (++v34 == v30)
          return result;
        goto LABEL_5;
      }
      v27 = *a4;
      if (!*a4)
        break;
      v28 = v27 + v42 + v17;
      sub_233168580(v27 + v37 + v17, v36, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_233168580(v36, v28, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v17 -= v33;
      ++v18;
      v15 = v32;
      if (v34 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23316623C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;

  v55 = type metadata accessor for InternalAccount();
  v8 = MEMORY[0x24BDAC7A8](v55);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v51 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v51 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v51 - v17;
  v54 = *(_QWORD *)(v19 + 72);
  if (!v54)
  {
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (a2 - a1 == 0x8000000000000000 && v54 == -1)
    goto LABEL_67;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v54 == -1)
    goto LABEL_68;
  v21 = (uint64_t)(a2 - a1) / v54;
  v62 = a1;
  v61 = a4;
  v22 = v20 / v54;
  if (v21 >= v20 / v54)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v54;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v60 = a4 + v24;
      v62 = a2;
      v53 = a1;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v54;
        v54 = a4;
        v52 = v13;
        do
        {
          sub_2331684BC(v37 + v39, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          v40 = a2 + v39;
          sub_2331684BC(a2 + v39, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          v41 = *(int *)(v55 + 44);
          v42 = *(_QWORD *)&v13[v41 + 8];
          v58 = *(_QWORD *)&v13[v41];
          v59 = v42;
          v43 = &v10[v41];
          v45 = *(_QWORD *)v43;
          v44 = *((_QWORD *)v43 + 1);
          v56 = v45;
          v57 = v44;
          sub_2331685C4();
          v46 = sub_23361EC00();
          if (v46)
            v47 = v46 == -1;
          else
            v47 = MEMORY[0x2349319C8](v13, v10);
          v48 = a3 + v39;
          sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          sub_233168500((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          if ((v47 & 1) != 0)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v62 += v39;
          }
          else
          {
            v49 = v60;
            v60 += v39;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              v40 = a2;
            }
            else
            {
              if (a3 != v49)
                swift_arrayInitWithTakeBackToFront();
              v40 = a2;
            }
          }
          v13 = v52;
          v37 = v60;
          if (v60 <= v54)
            break;
          a2 = v40;
          a3 += v39;
        }
        while (v40 > v53);
      }
      goto LABEL_65;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v54;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v25 = a4 + v23;
    v60 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      do
      {
        sub_2331684BC(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        sub_2331684BC(a4, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v27 = *(int *)(v55 + 44);
        v28 = *(_QWORD *)&v18[v27 + 8];
        v58 = *(_QWORD *)&v18[v27];
        v59 = v28;
        v29 = &v16[v27];
        v31 = *(_QWORD *)v29;
        v30 = *((_QWORD *)v29 + 1);
        v56 = v31;
        v57 = v30;
        sub_2331685C4();
        v32 = sub_23361EC00();
        if (v32)
          v33 = v32 == -1;
        else
          v33 = MEMORY[0x2349319C8](v18, v16);
        sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        sub_233168500((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v34 = v62;
        if ((v33 & 1) != 0)
        {
          v35 = a2 + v54;
          if (v62 < a2 || v62 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v62 == a2)
          {
            v34 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v36 = v61 + v54;
          if (v62 < v61 || v62 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v62 != v61)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v61 = v36;
          v35 = a2;
        }
        v62 = v34 + v54;
        a4 = v61;
        if (v61 >= v25)
          break;
        a2 = v35;
      }
      while (v35 < a3);
    }
LABEL_65:
    sub_233605834(&v62, &v61, (uint64_t *)&v60);
    return 1;
  }
LABEL_69:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t _s10FinanceKit21AccountInstitutionKeyV1loiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  v6 = a1[2] == a2[2] && a1[3] == a2[3];
  if ((v6 || (sub_23361F224() & 1) != 0) && (v2 == v4 ? (v7 = v3 == v5) : (v7 = 0), v7))
    return 0;
  else
    return sub_23361F224();
}

uint64_t _s10FinanceKit21AccountInstitutionKeyV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_23361F224(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_23361F224();
  }
  return result;
}

uint64_t sub_233166934(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_233166944(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_23316696C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  void *v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560421C8);
  v3 = (_QWORD *)sub_23361EF60();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = sub_2331E40AC(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = (void *)*v8;
    v14 = v5;
    result = sub_2331E40AC(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_233166A64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542468A8);
    v3 = (_QWORD *)sub_23361EF60();
    for (i = (unsigned int *)(a1 + 44); ; i += 16)
    {
      v20 = v1;
      v5 = *(i - 1);
      v6 = *i;
      v8 = i[1];
      v7 = i[2];
      v9 = i[3];
      v10 = i[4];
      v24 = *((_BYTE *)i + 21);
      v25 = *((_BYTE *)i + 20);
      v11 = *(i - 3);
      v26 = *(i - 2);
      v21 = *((_BYTE *)i + 22);
      v22 = *(_QWORD *)(i + 7);
      v12 = *(_QWORD *)(i + 9);
      v23 = *((_BYTE *)i + 44);
      result = sub_2331E4260(v11 | (v26 << 32), v5 | (v6 << 32), v8 | (v7 << 32), v9 | (v10 << 32));
      if ((v14 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v15 = (_DWORD *)(v3[6] + 32 * result);
      *v15 = v11;
      v15[1] = v26;
      v15[2] = v5;
      v15[3] = v6;
      v15[4] = v8;
      v15[5] = v7;
      v15[6] = v9;
      v15[7] = v10;
      v16 = v3[7] + 32 * result;
      *(_BYTE *)v16 = v25;
      *(_BYTE *)(v16 + 1) = v24;
      *(_BYTE *)(v16 + 2) = v21;
      *(_QWORD *)(v16 + 8) = v22;
      *(_QWORD *)(v16 + 16) = v12;
      *(_BYTE *)(v16 + 24) = v23;
      v17 = v3[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v3[2] = v19;
      swift_bridgeObjectRetain();
      v1 = v20 - 1;
      if (v20 == 1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_233166BE4(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char v38;
  uint64_t v39;
  _BYTE v40[40];
  _QWORD v41[10];
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned __int8 v45;
  _BYTE v46[24];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = (int *)type metadata accessor for InternalAccount();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v36 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - v7;
  result = MEMORY[0x24BEE4AF8];
  v49 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v30 = v1;
    v11 = *(_QWORD *)(v6 + 72);
    v31 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v12 = a1 + v31;
    v13 = v46;
    v35 = MEMORY[0x24BEE4AF8];
    v33 = v46;
    v34 = v11;
    v32 = v3;
    while (1)
    {
      sub_2331684BC(v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      if (v8[v3[21]] != 1 || v8[v3[13]] == 1)
        goto LABEL_3;
      if (qword_256041B80 != -1)
        swift_once();
      swift_beginAccess();
      sub_2331686A0((uint64_t)&qword_256042540, (uint64_t)&v42, &qword_254244F28);
      v14 = v45;
      sub_2331686A0((uint64_t)&v42, (uint64_t)v41, &qword_254244F28);
      if (v14 != 1)
        break;
      v15 = (*(uint64_t (**)(void))(v41[9] + 16))();
      sub_233168608((uint64_t)v41, &qword_254244F28);
      if ((v15 & 1) != 0)
        goto LABEL_14;
      v16 = v44;
      sub_233168608((uint64_t)&v42, &qword_254244F28);
      v3 = v32;
      if ((v16 & 1) != 0)
        goto LABEL_24;
LABEL_22:
      if (v8[v3[25]] - 1 < 3 || v8[v3[27]] == 1)
        goto LABEL_24;
LABEL_3:
      sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
LABEL_4:
      v12 += v11;
      if (!--v10)
        return v49;
    }
    sub_233168608((uint64_t)v41, &qword_254244F28);
LABEL_14:
    v18 = v47;
    v17 = v48;
    __swift_project_boxed_opaque_existential_1(v13, v47);
    v20 = v42;
    v19 = v43;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16))(v37, v42, v43, v18, v17);
    if (v39)
    {
      v21 = v47;
      v22 = v48;
      __swift_project_boxed_opaque_existential_1(v33, v47);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 24))(v20, v19, v21, v22);
      sub_233168608((uint64_t)v37, &qword_254245020);
      v24 = v23 & 1;
    }
    else
    {
      sub_233168478((uint64_t)v37, (uint64_t)v40, &qword_254245020);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
      if (swift_dynamicCast())
        v24 = v40[39];
      else
        v24 = 2;
    }
    v3 = v32;
    v11 = v34;
    sub_2331686A0((uint64_t)&v42, (uint64_t)v37, &qword_254244F28);
    if (v24 == 2)
      v24 = v38;
    sub_233168608((uint64_t)v37, &qword_254244F28);
    sub_233168608((uint64_t)&v42, &qword_254244F28);
    v13 = v33;
    if ((v24 & 1) != 0)
    {
LABEL_24:
      v25 = v13;
      sub_233168580((uint64_t)v8, v36, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v26 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_2332738EC(0, *(_QWORD *)(v26 + 16) + 1, 1);
      v27 = v49;
      v29 = *(_QWORD *)(v49 + 16);
      v28 = *(_QWORD *)(v49 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_2332738EC(v28 > 1, v29 + 1, 1);
        v27 = v49;
      }
      *(_QWORD *)(v27 + 16) = v29 + 1;
      v35 = v27;
      v11 = v34;
      sub_233168580(v36, v27 + v31 + v29 * v34, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v13 = v25;
      goto LABEL_4;
    }
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_233166FEC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = type metadata accessor for InternalAccount();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = swift_task_alloc();
  v0[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233167058()
{
  uint64_t v0;
  id v1;
  _BYTE *v2;
  _QWORD *v4;
  char v5[9];

  if (qword_254244AD0 != -1)
    swift_once();
  v1 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
  *(_QWORD *)(v0 + 64) = v1;
  static DeviceInfo.deviceType.getter(v5);
  if (v5[0])
  {
    sub_23316853C();
    swift_allocError();
    *v2 = 3;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_2331671A0;
    return sub_2332A0E28(v0 + 16, (uint64_t)v1, MEMORY[0x24BEE4AF8], 0, 1, 0, 1);
  }
}

uint64_t sub_2331671A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_23316720C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 24);

  v3 = (_QWORD *)sub_233166BE4(v2);
  swift_bridgeObjectRelease();
  v44 = v3;
  swift_bridgeObjectRetain();
  sub_23316461C(&v44);
  if (v1)
    return swift_release();
  swift_bridgeObjectRelease();
  v5 = v44;
  v44 = (_QWORD *)MEMORY[0x24BEE4B00];
  v6 = v5[2];
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 40);
    v8 = (uint64_t)v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v40 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v41 = *(_QWORD *)(v0 + 32);
    v9 = (_QWORD *)MEMORY[0x24BEE4B00];
    v42 = v0;
    v39 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v13 = *(_QWORD *)(v0 + 56);
      sub_2331684BC(v8, v13, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v14 = v13 + *(int *)(v41 + 20);
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      v17 = (uint64_t *)(v13 + *(int *)(v41 + 104));
      v18 = *v17;
      v19 = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_2331E3E18(v16, v15, v18, v19);
      v22 = v9[2];
      v23 = (v20 & 1) == 0;
      result = v22 + v23;
      if (__OFADD__(v22, v23))
        break;
      v24 = v20;
      if (v9[3] < result)
      {
        sub_233278B94(result, 1);
        v9 = v44;
        v25 = sub_2331E3E18(v16, v15, v18, v19);
        if ((v24 & 1) != (v26 & 1))
          return sub_23361F2B4();
        v21 = v25;
      }
      v43 = v6;
      v27 = *(_QWORD *)(v0 + 56);
      if ((v24 & 1) != 0)
      {
        v28 = *(_QWORD *)(v0 + 48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = v9[7];
        sub_233168580(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v30 = *(_QWORD *)(v29 + 8 * v21);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v29 + 8 * v21) = v30;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v30 = sub_2334A4744(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
          *(_QWORD *)(v29 + 8 * v21) = v30;
        }
        v33 = *(_QWORD *)(v30 + 16);
        v32 = *(_QWORD *)(v30 + 24);
        if (v33 >= v32 >> 1)
        {
          v30 = sub_2334A4744(v32 > 1, v33 + 1, 1, v30);
          *(_QWORD *)(v29 + 8 * v21) = v30;
        }
        v10 = *(_QWORD *)(v42 + 48);
        *(_QWORD *)(v30 + 16) = v33 + 1;
        v11 = v30 + v40;
        v12 = v39;
        sub_233168580(v10, v11 + v33 * v39, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256042208);
        v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_233623D60;
        result = sub_233168580(v27, v34 + v40, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v9[(v21 >> 6) + 8] |= 1 << v21;
        v35 = (uint64_t *)(v9[6] + 32 * v21);
        *v35 = v16;
        v35[1] = v15;
        v35[2] = v18;
        v35[3] = v19;
        *(_QWORD *)(v9[7] + 8 * v21) = v34;
        v36 = v9[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_23;
        v9[2] = v38;
        v12 = v39;
      }
      v8 += v12;
      v0 = v42;
      v6 = v43 - 1;
      if (v43 == 1)
      {
        swift_release();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_release();
    v9 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v9);
  }
  return result;
}

uint64_t sub_23316759C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2331675EC()
{
  uint64_t v0;

  sub_233161598(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
}

void sub_233167610(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2331636EC(*(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_23316762C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233167668(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_2331676FC;
  return sub_233161AC8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2331676FC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_233167744()
{
  uint64_t *v0;

  sub_233162A98(v0[2], v0[3], v0[4]);
}

void sub_233167760(char *a1@<X8>)
{
  uint64_t *v1;

  sub_233162DD4(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_233167780()
{
  unint64_t result;

  result = qword_256041E20;
  if (!qword_256041E20)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountInstitutionKey, &type metadata for AccountInstitutionKey);
    atomic_store(result, (unint64_t *)&qword_256041E20);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AccountInstitutionKey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AccountInstitutionKey()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AccountInstitutionKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AccountInstitutionKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for AccountInstitutionKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountInstitutionKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountInstitutionKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountInstitutionKey()
{
  return &type metadata for AccountInstitutionKey;
}

uint64_t type metadata accessor for PrivacySettingsStoreCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for PrivacySettingsStoreCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PrivacySettingsStoreCoordinator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void type metadata accessor for FKPaymentTransactionGroupType(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042010);
}

void type metadata accessor for SecPolicy(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042018);
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s11InstitutionV19ClientConfigurationV29TransactionRequestConstraintsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s11InstitutionV19ClientConfigurationV29TransactionRequestConstraintsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042020);
}

void type metadata accessor for FKPrivacySettingsAuthorizationType(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042028);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042030);
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t _s12DoubleStringVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s12DoubleStringVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042038);
}

void type metadata accessor for SecAccessControl(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042040);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042048);
}

void type metadata accessor for CFBundle(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042050);
}

void type metadata accessor for FKCreditDebitIndicator(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042058);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_233168A68(a1, &qword_254247CF0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_233167B80(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_233167BA0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042060);
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042068);
}

void type metadata accessor for CIContextOption(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042070);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042078);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042080);
}

uint64_t sub_233167C2C()
{
  return sub_233167C58(&qword_256042088, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23362417C);
}

uint64_t sub_233167C58(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x234934494](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233167C98()
{
  return sub_233167C58(&qword_256042090, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_233624150);
}

uint64_t sub_233167CC4()
{
  return sub_233167C58(&qword_256042098, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2336241EC);
}

uint64_t sub_233167CF0()
{
  return sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
}

uint64_t sub_233167D1C()
{
  return sub_233167C58(&qword_2560420A8, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_233624348);
}

uint64_t sub_233167D48()
{
  return sub_233167C58(&qword_2560420B0, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_23362431C);
}

uint64_t sub_233167D74()
{
  return sub_233167C58(&qword_2560420B8, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_2336243B8);
}

uint64_t sub_233167DA0()
{
  return sub_233167C58(&qword_2560420C0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2336242B8);
}

uint64_t sub_233167DCC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_233167DF8()
{
  uint64_t v0;

  return sub_2331631D4(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_233167E00()
{
  return swift_deallocObject();
}

uint64_t sub_233167E10()
{
  uint64_t v0;

  return sub_2332714A0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_233167E20(void *a1)
{
  unint64_t v1;
  unint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  if (!a1)
  {
    v28 = 0u;
    v29 = 0u;
LABEL_17:
    sub_233168608((uint64_t)&v28, &qword_254245020);
    return;
  }
  if (objc_msgSend(a1, sel_result))
  {
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_233168478((uint64_t)&v26, (uint64_t)&v28, &qword_254245020);
  if (!*((_QWORD *)&v29 + 1))
    goto LABEL_17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247CF8);
  if ((swift_dynamicCast() & 1) == 0)
    return;
  v2 = v26;
  if ((unint64_t)v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v22)
      goto LABEL_38;
    swift_bridgeObjectRetain();
    v23 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v23 != 1)
      goto LABEL_38;
  }
  else if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_38;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = (id)MEMORY[0x234933120](0, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_47;
    }
    v3 = *(id *)(v2 + 32);
  }
  v4 = objc_msgSend(v3, sel_author, v26, v27);

  if (!v4)
    goto LABEL_38;
  v1 = 0xD000000000000012;
  v5 = sub_23361E150();
  v7 = v6;

  if (v5 == 0xD000000000000015 && v7 == 0x8000000233669EC0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_38;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x234933120](0, v2);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_51;
    }
    v9 = *(id *)(v2 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v10, sel_changes);

  if (!v11)
    return;
  sub_233168668(0, &qword_25604C730);
  v2 = sub_23361E3F0();

  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_27;
LABEL_38:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_47:
  swift_bridgeObjectRetain();
  v24 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (v24 != 1)
    goto LABEL_38;
  swift_bridgeObjectRetain();
  v25 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_38;
LABEL_27:
  if ((v2 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v12 = *(id *)(v2 + 32);
    goto LABEL_30;
  }
LABEL_51:
  v12 = (id)MEMORY[0x234933120](0, v2);
LABEL_30:
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v13, sel_updatedProperties);

  if (v14)
  {
    sub_233168668(0, &qword_256042100);
    sub_2331682C4();
    v15 = sub_23361E5DC();

    if ((v15 & 0xC000000000000001) != 0)
      v16 = sub_23361ECE4();
    else
      v16 = *(_QWORD *)(v15 + 16);
    if (v16 != 1)
      goto LABEL_38;
    v17 = (void *)sub_23319978C(v15);
    swift_bridgeObjectRelease();
    if (v17)
    {
      v18 = objc_msgSend(v17, sel_name);

      v19 = sub_23361E150();
      v21 = v20;

      if (v19 == v1 && v21 == 0x8000000233669F50)
        goto LABEL_38;
      sub_23361F224();
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_2331682C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042108;
  if (!qword_256042108)
  {
    v1 = sub_233168668(255, &qword_256042100);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256042108);
  }
  return result;
}

uint64_t sub_23316831C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_233168350(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23316838C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2331683B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

_OWORD *sub_2331683D0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_2331683E0(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_2331683F0()
{
  unint64_t result;

  result = qword_254246F40;
  if (!qword_254246F40)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254246F40);
  }
  return result;
}

void sub_233168434()
{
  uint64_t v0;

  sub_2331622DC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(uint64_t))(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_233168478(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2331684BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_233168500(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23316853C()
{
  unint64_t result;

  result = qword_256042200;
  if (!qword_256042200)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceError, &type metadata for FinanceError);
    atomic_store(result, (unint64_t *)&qword_256042200);
  }
  return result;
}

uint64_t sub_233168580(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2331685C4()
{
  unint64_t result;

  result = qword_256042210;
  if (!qword_256042210)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256042210);
  }
  return result;
}

uint64_t sub_233168608(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_233168668(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2331686A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for PKPaymentMethodType(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042218);
}

void type metadata accessor for FKMerchantCategory(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042220);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042228);
}

void type metadata accessor for vImageConverter(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042230);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_233168748(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_2331687A4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for vImage_CGImageFormat(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042238);
}

void type metadata accessor for CGImageSource(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042240);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042248);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042250);
}

void type metadata accessor for NSPersistentHistoryTrackingOptionKey(uint64_t a1)
{
  sub_233168A68(a1, &qword_2542465A8);
}

void type metadata accessor for ODIAttributeKey(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042258);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042260);
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042268);
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
  sub_233168A68(a1, &qword_256042270);
}

uint64_t sub_2331688B4()
{
  return sub_233167C58(&qword_256042278, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23362470C);
}

uint64_t sub_2331688E0()
{
  return sub_233167C58(&qword_256042280, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2336246E0);
}

uint64_t sub_23316890C()
{
  return sub_233167C58(&qword_256042288, (uint64_t (*)(uint64_t))type metadata accessor for ODIAttributeKey, (uint64_t)&unk_233624828);
}

uint64_t sub_233168938()
{
  return sub_233167C58(&qword_256042290, (uint64_t (*)(uint64_t))type metadata accessor for ODIAttributeKey, (uint64_t)&unk_2336247FC);
}

uint64_t sub_233168964()
{
  return sub_233167C58(&qword_256042298, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_233624938);
}

uint64_t sub_233168990()
{
  return sub_233167C58(&qword_2560422A0, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_233624910);
}

uint64_t sub_2331689BC()
{
  return sub_233167C58(&qword_2542465A0, (uint64_t (*)(uint64_t))type metadata accessor for NSPersistentHistoryTrackingOptionKey, (uint64_t)&unk_2336249A0);
}

uint64_t sub_2331689E8()
{
  return sub_233167C58(&qword_2560422A8, (uint64_t (*)(uint64_t))type metadata accessor for ODIAttributeKey, (uint64_t)&unk_233624898);
}

uint64_t sub_233168A14()
{
  return sub_233167C58(&qword_2560422B0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23362477C);
}

void type metadata accessor for CGColorRenderingIntent(uint64_t a1)
{
  sub_233168A68(a1, &qword_2560422E0);
}

void type metadata accessor for CGBitmapInfo(uint64_t a1)
{
  sub_233168A68(a1, &qword_2560422E8);
}

void sub_233168A68(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_233168ACC(uint64_t a1@<X8>)
{
  sub_233167610(a1);
}

void sub_233168AE0()
{
  sub_233167744();
}

uint64_t FinancialDataPersistentHistoryChange.init(inserted:updated:deleted:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void FinancialDataPersistentHistoryChange.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v1;
  a1[2] = v1;
}

BOOL sub_233168B18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s10FinanceKit31OrderWebServiceRegisterResponseO9hashValueSivg_0()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_233168B70()
{
  return sub_23361F35C();
}

uint64_t sub_233168B98()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_233168BD8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657461647075;
  if (*v0 != 1)
    v1 = 0x646574656C6564;
  if (*v0)
    return v1;
  else
    return 0x6465747265736E69;
}

uint64_t sub_233168C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23316A0E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233168C58()
{
  return 0;
}

void sub_233168C64(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_233168C70()
{
  sub_233168E60();
  return sub_23361F428();
}

uint64_t sub_233168C98()
{
  sub_233168E60();
  return sub_23361F434();
}

uint64_t FinancialDataPersistentHistoryChange.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560422F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233168E60();
  sub_23361F410();
  v16 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042300);
  sub_233168EA4();
  sub_23361F17C();
  if (!v2)
  {
    v10 = v13;
    v16 = v14;
    v15 = 1;
    sub_23361F17C();
    v16 = v10;
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
    sub_233168F64();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_233168E60()
{
  unint64_t result;

  result = qword_2560422F8;
  if (!qword_2560422F8)
  {
    result = MEMORY[0x234934494](&unk_233624C84, &type metadata for FinancialDataPersistentHistoryChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560422F8);
  }
  return result;
}

unint64_t sub_233168EA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256042308;
  if (!qword_256042308)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256042300);
    v2 = sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256042308);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x234934488](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_233168F64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256042320;
  if (!qword_256042320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C3A0);
    v2 = sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256042320);
  }
  return result;
}

uint64_t FinancialDataPersistentHistoryChange.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v14;
  char v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042330);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233168E60();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v14 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042300);
  v15 = 0;
  sub_233169254();
  sub_23361F068();
  v9 = v16;
  v15 = 1;
  swift_bridgeObjectRetain();
  sub_23361F068();
  v10 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604C3A0);
  v15 = 2;
  sub_2331692D0();
  swift_bridgeObjectRetain();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v14;
  *v14 = v9;
  v12[1] = v10;
  v12[2] = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_233169254()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256042338;
  if (!qword_256042338)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256042300);
    v2 = sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256042338);
  }
  return result;
}

unint64_t sub_2331692D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256042348;
  if (!qword_256042348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C3A0);
    v2 = sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256042348);
  }
  return result;
}

uint64_t sub_23316934C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FinancialDataPersistentHistoryChange.init(from:)(a1, a2);
}

uint64_t sub_233169360(_QWORD *a1)
{
  return FinancialDataPersistentHistoryChange.encode(to:)(a1);
}

uint64_t FinancialDataPersistentHistoryChange.XPC.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id FinancialDataPersistentHistoryChange.XPC.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = &v3[OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value];
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_QWORD *)v5 + 2) = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id FinancialDataPersistentHistoryChange.XPC.init(value:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  char *v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = &v1[OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value];
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_QWORD *)v5 + 2) = v4;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t static FinancialDataPersistentHistoryChange.XPC.supportsSecureCoding.getter()
{
  return 1;
}

id FinancialDataPersistentHistoryChange.XPC.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_23316A234(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id FinancialDataPersistentHistoryChange.XPC.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_23316A234(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

void sub_233169588(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_23316C2C8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E7BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_23361E12C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s10FinanceKit11TransactionV8XPCArrayC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169B2C(a1, (uint64_t)&OBJC_IVAR___XPCTransactions_value, &qword_2560424A0, (void (*)(void))sub_23316C1D0);
}

void _s10FinanceKit22ThumbnailConfigurationV3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_23316C148();
  swift_bridgeObjectRetain();
  sub_23361E7BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_23361E12C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s10FinanceKit19AuthorizationStatusO3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_23316C0C0();
  sub_23361E7BC();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_23361E12C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s10FinanceKit22AccountSelectionResultO3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___XPCAccountSelectionResult_value);
  sub_23316BFE0(v7);
  sub_23316C00C();
  sub_23361E7BC();
  sub_23316C050(v7);
  objc_msgSend(v3, sel_finishEncoding);
  v4 = objc_msgSend(v3, sel_encodedData);
  if (v4)
  {
    v5 = v4;
    v6 = (void *)sub_23361E12C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s10FinanceKit22MapsTransactionInsightV3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169CAC(a1, (uint64_t)&OBJC_IVAR___XPCMapsTransactionInsight_value, type metadata accessor for MapsTransactionInsight, &qword_256058A60, (uint64_t)&protocol conformance descriptor for MapsTransactionInsight);
}

void _s10FinanceKit5OrderV8XPCArrayC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169B2C(a1, (uint64_t)&OBJC_IVAR___XPCOrders_value, &qword_256042430, (void (*)(void))sub_23316BEE8);
}

void sub_233169B2C(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  id v7;
  id v8;
  void *v9;
  void *v10;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  a4();
  sub_23361E7BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_finishEncoding);
  v8 = objc_msgSend(v7, sel_encodedData);
  if (v8)
  {
    v9 = v8;
    v10 = (void *)sub_23361E12C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s10FinanceKit11TransactionV7InsightO3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169CAC(a1, (uint64_t)&OBJC_IVAR___XPCTransactionInsight_value, type metadata accessor for Transaction.Insight, &qword_256042418, (uint64_t)&protocol conformance descriptor for Transaction.Insight);
}

void sub_233169CAC(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  id v9;
  id v10;
  void *v11;
  id v12;

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  a3(0);
  sub_233167C58(a4, a3, a5);
  sub_23361E7BC();
  objc_msgSend(v9, sel_finishEncoding);
  v10 = objc_msgSend(v9, sel_encodedData);
  if (v10)
  {
    v11 = v10;
    v12 = (id)sub_23361E12C();
    objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s10FinanceKit10TimeWindowV3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169CAC(a1, (uint64_t)&OBJC_IVAR___XPCTimeWindow_value, type metadata accessor for TimeWindow, &qword_254245160, (uint64_t)&protocol conformance descriptor for TimeWindow);
}

void _s10FinanceKit19InternalTransactionV3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169CAC(a1, (uint64_t)&OBJC_IVAR___XPCInternalTransaction_value, type metadata accessor for InternalTransaction, &qword_2560423F8, (uint64_t)&protocol conformance descriptor for InternalTransaction);
}

void _s10FinanceKit27MapsTransactionInsightInputV3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169CAC(a1, (uint64_t)&OBJC_IVAR___XPCMapsTransactionInsightInput_value, type metadata accessor for MapsTransactionInsightInput, &qword_2560423E0, (uint64_t)&protocol conformance descriptor for MapsTransactionInsightInput);
}

void _s10FinanceKit28MapsTransactionInsightResultO3XPCC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  sub_233169CAC(a1, (uint64_t)&OBJC_IVAR___XPCMapsTransactionInsightResult_value, type metadata accessor for MapsTransactionInsightResult, &qword_2560423C0, (uint64_t)&protocol conformance descriptor for MapsTransactionInsightResult);
}

id FinancialDataPersistentHistoryChange.XPC.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FinancialDataPersistentHistoryChange.XPC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FinancialDataPersistentHistoryChange.XPC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233169FC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_23316A004(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = &v3[OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value];
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_QWORD *)v5 + 2) = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id FinancialDataPersistentHistoryChange.xpcValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  char *v6;
  objc_super v8;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = (objc_class *)type metadata accessor for FinancialDataPersistentHistoryChange.XPC();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = &v5[OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value];
  *(_QWORD *)v6 = v1;
  *((_QWORD *)v6 + 1) = v2;
  *((_QWORD *)v6 + 2) = v3;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_23316A0E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465747265736E69 && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657461647075 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646574656C6564 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_23316A234(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  objc_class *v9;
  char *v10;
  char *v11;
  id v12;
  __int128 v14;
  objc_super v15;
  uint64_t v16;
  __int128 v17;

  sub_23316BE68();
  v2 = sub_23361E9CC();
  if (!v2)
  {

    return 0;
  }
  v3 = (void *)v2;
  v4 = sub_23361D3C4();
  v6 = v5;
  v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  v8 = sub_233613994();
  sub_23316BEA4(v4, v6);
  if (!v8)
  {
LABEL_8:

    return 0;
  }
  sub_23316C30C();
  sub_23361E810();
  if (!v16)
  {
    objc_msgSend(v8, sel_finishDecoding);

    goto LABEL_8;
  }
  v9 = (objc_class *)type metadata accessor for FinancialDataPersistentHistoryChange.XPC();
  v14 = v17;
  v10 = (char *)objc_allocWithZone(v9);
  v11 = &v10[OBJC_IVAR___XPCFinancialDataPersistentHistoryChange_value];
  *(_QWORD *)v11 = v16;
  *(_OWORD *)(v11 + 8) = v14;
  v15.receiver = v10;
  v15.super_class = v9;
  v12 = objc_msgSendSuper2(&v15, sel_init);
  objc_msgSend(v8, sel_finishDecoding);

  return v12;
}

uint64_t type metadata accessor for FinancialDataPersistentHistoryChange.XPC()
{
  return objc_opt_self();
}

uint64_t destroy for FinancialDataPersistentHistoryChange()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s10FinanceKit36FinancialDataPersistentHistoryChangeVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FinancialDataPersistentHistoryChange(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FinancialDataPersistentHistoryChange(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FinancialDataPersistentHistoryChange(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FinancialDataPersistentHistoryChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FinancialDataPersistentHistoryChange()
{
  return &type metadata for FinancialDataPersistentHistoryChange;
}

uint64_t method lookup function for FinancialDataPersistentHistoryChange.XPC()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FinancialDataPersistentHistoryChange.XPC.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for FinancialDataPersistentHistoryChange.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FinancialDataPersistentHistoryChange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23316A6A8 + 4 * byte_233624B15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23316A6DC + 4 * asc_233624B10[v4]))();
}

uint64_t sub_23316A6DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23316A6E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23316A6ECLL);
  return result;
}

uint64_t sub_23316A6F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23316A700);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23316A704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23316A70C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23316A718(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23316A724(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FinancialDataPersistentHistoryChange.CodingKeys()
{
  return &type metadata for FinancialDataPersistentHistoryChange.CodingKeys;
}

unint64_t sub_23316A740()
{
  unint64_t result;

  result = qword_2560423A8;
  if (!qword_2560423A8)
  {
    result = MEMORY[0x234934494](&unk_233624C5C, &type metadata for FinancialDataPersistentHistoryChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560423A8);
  }
  return result;
}

unint64_t sub_23316A788()
{
  unint64_t result;

  result = qword_2560423B0;
  if (!qword_2560423B0)
  {
    result = MEMORY[0x234934494](&unk_233624BCC, &type metadata for FinancialDataPersistentHistoryChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560423B0);
  }
  return result;
}

unint64_t sub_23316A7D0()
{
  unint64_t result;

  result = qword_2560423B8;
  if (!qword_2560423B8)
  {
    result = MEMORY[0x234934494](&unk_233624BF4, &type metadata for FinancialDataPersistentHistoryChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560423B8);
  }
  return result;
}

id sub_23316A814(void *a1)
{
  return sub_23316AFA8(a1, &qword_2560424A0, (void (*)(void))sub_23316C24C, (uint64_t (*)(_QWORD))type metadata accessor for Transaction.XPCArray, &OBJC_IVAR___XPCTransactions_value);
}

id sub_23316A838(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  objc_class *v14;
  char *v15;
  char *v16;
  id v17;
  __int128 v19;
  objc_super v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_23316BE68();
  v2 = sub_23361E9CC();
  if (!v2)
  {

    return 0;
  }
  v3 = (void *)v2;
  v4 = sub_23361D3C4();
  v6 = v5;
  v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  v8 = sub_233613994();
  sub_23316BEA4(v4, v6);
  if (!v8)
  {
LABEL_8:

    return 0;
  }
  sub_23316C18C();
  sub_23361E810();
  if (!v21)
  {
    objc_msgSend(v8, sel_finishDecoding);

    goto LABEL_8;
  }
  v10 = v25;
  v9 = v26;
  v12 = v23;
  v11 = v24;
  v19 = v22;
  v13 = v27 & 1;
  v14 = (objc_class *)type metadata accessor for ThumbnailConfiguration.XPC();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = &v15[OBJC_IVAR___XPCThumbnailConfiguration_value];
  *(_QWORD *)v16 = v21;
  *(_OWORD *)(v16 + 8) = v19;
  *((_QWORD *)v16 + 3) = v12;
  *((_QWORD *)v16 + 4) = v11;
  v16[40] = v10;
  v16[41] = BYTE1(v10) & 1;
  v16[42] = BYTE2(v10) & 1;
  *((_QWORD *)v16 + 6) = v9;
  v16[56] = v13;
  v20.receiver = v15;
  v20.super_class = v14;
  v17 = objc_msgSendSuper2(&v20, sel_init);
  objc_msgSend(v8, sel_finishDecoding);

  return v17;
}

id sub_23316A9F8(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_class *v11;
  _BYTE *v12;
  objc_super v13;
  char v14;

  sub_23316BE68();
  v2 = sub_23361E9CC();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_23361D3C4();
    v6 = v5;
    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v8 = sub_233613994();
    sub_23316BEA4(v4, v6);
    if (v8)
    {
      sub_23316C104();
      sub_23361E810();
      if (v14 != 3)
      {
        v11 = (objc_class *)type metadata accessor for AuthorizationStatus.XPC();
        v12 = objc_allocWithZone(v11);
        v12[OBJC_IVAR___XPCAuthorizationStatus_value] = v14;
        v13.receiver = v12;
        v13.super_class = v11;
        v9 = objc_msgSendSuper2(&v13, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        return v9;
      }
      objc_msgSend(v8, sel_finishDecoding);

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316AB68(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  objc_super v15;
  uint64_t v16;
  uint64_t v17;

  sub_23316BE68();
  v2 = sub_23361E9CC();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_23361D3C4();
    v6 = v5;
    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v8 = sub_233613994();
    sub_23316BEA4(v4, v6);
    if (v8)
    {
      sub_23316C07C();
      sub_23361E810();
      if (v16 != 1)
      {
        v11 = v17;
        v12 = (objc_class *)type metadata accessor for AccountSelectionResult.XPC();
        v13 = (char *)objc_allocWithZone(v12);
        v14 = &v13[OBJC_IVAR___XPCAccountSelectionResult_value];
        *(_QWORD *)v14 = v16;
        *((_QWORD *)v14 + 1) = v11;
        v15.receiver = v13;
        v15.super_class = v12;
        v9 = objc_msgSendSuper2(&v15, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        return v9;
      }
      objc_msgSend(v8, sel_finishDecoding);

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316ACE0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042460);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MapsTransactionInsight(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23316BE68();
  v12 = sub_23361E9CC();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_23361D3C4();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_233613994();
    sub_23316BEA4(v14, v16);
    if (v18)
    {
      sub_233167C58(&qword_256058A90, type metadata accessor for MapsTransactionInsight, (uint64_t)&protocol conformance descriptor for MapsTransactionInsight);
      sub_23361E810();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for MapsTransactionInsight);
        sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for MapsTransactionInsight);
        v23 = (objc_class *)type metadata accessor for MapsTransactionInsight.XPC(0);
        v24 = objc_allocWithZone(v23);
        sub_2331684BC((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR___XPCMapsTransactionInsight_value, type metadata accessor for MapsTransactionInsight);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_233168500((uint64_t)v9, type metadata accessor for MapsTransactionInsight);
        sub_233168500((uint64_t)v11, type metadata accessor for MapsTransactionInsight);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_233168608((uint64_t)v4, (uint64_t *)&unk_256042460);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316AF84(void *a1)
{
  return sub_23316AFA8(a1, &qword_256042430, (void (*)(void))sub_23316BF64, (uint64_t (*)(_QWORD))type metadata accessor for Order.XPCArray, &OBJC_IVAR___XPCOrders_value);
}

id sub_23316AFA8(void *a1, uint64_t *a2, void (*a3)(void), uint64_t (*a4)(_QWORD), _QWORD *a5)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  objc_class *v17;
  char *v18;
  id v19;
  objc_super v21;
  uint64_t v22;

  sub_23316BE68();
  v10 = sub_23361E9CC();
  if (!v10)
  {

    return 0;
  }
  v11 = (void *)v10;
  v12 = sub_23361D3C4();
  v14 = v13;
  v15 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  v16 = sub_233613994();
  sub_23316BEA4(v12, v14);
  if (!v16)
  {
LABEL_8:

    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  a3();
  sub_23361E810();
  if (!v22)
  {
    objc_msgSend(v16, sel_finishDecoding);

    goto LABEL_8;
  }
  v17 = (objc_class *)a4(0);
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[*a5] = v22;
  v21.receiver = v18;
  v21.super_class = v17;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(v16, sel_finishDecoding);

  return v19;
}

id sub_23316B134(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042420);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Transaction.Insight(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23316BE68();
  v12 = sub_23361E9CC();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_23361D3C4();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_233613994();
    sub_23316BEA4(v14, v16);
    if (v18)
    {
      sub_233167C58(&qword_256042428, type metadata accessor for Transaction.Insight, (uint64_t)&protocol conformance descriptor for Transaction.Insight);
      sub_23361E810();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for Transaction.Insight);
        sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for Transaction.Insight);
        v23 = (objc_class *)type metadata accessor for Transaction.Insight.XPC(0);
        v24 = objc_allocWithZone(v23);
        sub_2331684BC((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR___XPCTransactionInsight_value, type metadata accessor for Transaction.Insight);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_233168500((uint64_t)v9, type metadata accessor for Transaction.Insight);
        sub_233168500((uint64_t)v11, type metadata accessor for Transaction.Insight);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_233168608((uint64_t)v4, &qword_256042420);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316B3D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244E28);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TimeWindow(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23316BE68();
  v12 = sub_23361E9CC();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_23361D3C4();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_233613994();
    sub_23316BEA4(v14, v16);
    if (v18)
    {
      sub_233167C58(&qword_254244E20, type metadata accessor for TimeWindow, (uint64_t)&protocol conformance descriptor for TimeWindow);
      sub_23361E810();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for TimeWindow);
        sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for TimeWindow);
        v23 = (objc_class *)type metadata accessor for TimeWindow.XPC(0);
        v24 = objc_allocWithZone(v23);
        sub_2331684BC((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR___XPCTimeWindow_value, type metadata accessor for TimeWindow);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_233168500((uint64_t)v9, type metadata accessor for TimeWindow);
        sub_233168500((uint64_t)v11, type metadata accessor for TimeWindow);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_233168608((uint64_t)v4, &qword_254244E28);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316B67C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042400);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InternalTransaction(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23316BE68();
  v12 = sub_23361E9CC();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_23361D3C4();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_233613994();
    sub_23316BEA4(v14, v16);
    if (v18)
    {
      sub_233167C58((unint64_t *)&unk_256042408, type metadata accessor for InternalTransaction, (uint64_t)&protocol conformance descriptor for InternalTransaction);
      sub_23361E810();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for InternalTransaction);
        sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for InternalTransaction);
        v23 = (objc_class *)type metadata accessor for InternalTransaction.XPC(0);
        v24 = objc_allocWithZone(v23);
        sub_2331684BC((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR___XPCInternalTransaction_value, type metadata accessor for InternalTransaction);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_233168500((uint64_t)v9, type metadata accessor for InternalTransaction);
        sub_233168500((uint64_t)v11, type metadata accessor for InternalTransaction);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_233168608((uint64_t)v4, &qword_256042400);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316B920(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560423E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MapsTransactionInsightInput(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23316BE68();
  v12 = sub_23361E9CC();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_23361D3C4();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_233613994();
    sub_23316BEA4(v14, v16);
    if (v18)
    {
      sub_233167C58(&qword_2560423F0, type metadata accessor for MapsTransactionInsightInput, (uint64_t)&protocol conformance descriptor for MapsTransactionInsightInput);
      sub_23361E810();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for MapsTransactionInsightInput);
        sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for MapsTransactionInsightInput);
        v23 = (objc_class *)type metadata accessor for MapsTransactionInsightInput.XPC(0);
        v24 = objc_allocWithZone(v23);
        sub_2331684BC((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR___XPCMapsTransactionInsightInput_value, type metadata accessor for MapsTransactionInsightInput);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_233168500((uint64_t)v9, type metadata accessor for MapsTransactionInsightInput);
        sub_233168500((uint64_t)v11, type metadata accessor for MapsTransactionInsightInput);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_233168608((uint64_t)v4, &qword_2560423E8);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

id sub_23316BBC4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  id v21;
  objc_class *v23;
  id v24;
  id v25;
  objc_super v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560423C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MapsTransactionInsightResult(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23316BE68();
  v12 = sub_23361E9CC();
  if (v12)
  {
    v13 = (void *)v12;
    v25 = a1;
    v14 = sub_23361D3C4();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v18 = sub_233613994();
    sub_23316BEA4(v14, v16);
    if (v18)
    {
      sub_233167C58(&qword_2560423D8, type metadata accessor for MapsTransactionInsightResult, (uint64_t)&protocol conformance descriptor for MapsTransactionInsightResult);
      sub_23361E810();
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      v20 = v25;
      if (v19 != 1)
      {
        sub_233168580((uint64_t)v4, (uint64_t)v11, type metadata accessor for MapsTransactionInsightResult);
        sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for MapsTransactionInsightResult);
        v23 = (objc_class *)type metadata accessor for MapsTransactionInsightResult.XPC(0);
        v24 = objc_allocWithZone(v23);
        sub_2331684BC((uint64_t)v9, (uint64_t)v24 + OBJC_IVAR___XPCMapsTransactionInsightResult_value, type metadata accessor for MapsTransactionInsightResult);
        v26.receiver = v24;
        v26.super_class = v23;
        v21 = objc_msgSendSuper2(&v26, sel_init);
        sub_233168500((uint64_t)v9, type metadata accessor for MapsTransactionInsightResult);
        sub_233168500((uint64_t)v11, type metadata accessor for MapsTransactionInsightResult);
        objc_msgSend(v18, sel_finishDecoding);

        return v21;
      }
      sub_233168608((uint64_t)v4, (uint64_t *)&unk_2560423C8);
      objc_msgSend(v18, sel_finishDecoding);

    }
    else
    {

    }
  }
  else
  {

  }
  return 0;
}

unint64_t sub_23316BE68()
{
  unint64_t result;

  result = qword_254246E10;
  if (!qword_254246E10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254246E10);
  }
  return result;
}

uint64_t sub_23316BEA4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_23316BEE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256042438;
  if (!qword_256042438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256042430);
    v2 = sub_233167C58(&qword_256042440, type metadata accessor for Order, (uint64_t)&protocol conformance descriptor for Order);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256042438);
  }
  return result;
}

unint64_t sub_23316BF64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256042448;
  if (!qword_256042448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256042430);
    v2 = sub_233167C58((unint64_t *)&unk_256042450, type metadata accessor for Order, (uint64_t)&protocol conformance descriptor for Order);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256042448);
  }
  return result;
}

uint64_t sub_23316BFE0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23316C00C()
{
  unint64_t result;

  result = qword_256042470;
  if (!qword_256042470)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountSelectionResult, &type metadata for AccountSelectionResult);
    atomic_store(result, (unint64_t *)&qword_256042470);
  }
  return result;
}

uint64_t sub_23316C050(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23316C07C()
{
  unint64_t result;

  result = qword_256042478;
  if (!qword_256042478)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountSelectionResult, &type metadata for AccountSelectionResult);
    atomic_store(result, (unint64_t *)&qword_256042478);
  }
  return result;
}

unint64_t sub_23316C0C0()
{
  unint64_t result;

  result = qword_256042480;
  if (!qword_256042480)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AuthorizationStatus, &type metadata for AuthorizationStatus);
    atomic_store(result, (unint64_t *)&qword_256042480);
  }
  return result;
}

unint64_t sub_23316C104()
{
  unint64_t result;

  result = qword_256042488;
  if (!qword_256042488)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AuthorizationStatus, &type metadata for AuthorizationStatus);
    atomic_store(result, (unint64_t *)&qword_256042488);
  }
  return result;
}

unint64_t sub_23316C148()
{
  unint64_t result;

  result = qword_256042490;
  if (!qword_256042490)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailConfiguration, &type metadata for ThumbnailConfiguration);
    atomic_store(result, (unint64_t *)&qword_256042490);
  }
  return result;
}

unint64_t sub_23316C18C()
{
  unint64_t result;

  result = qword_256042498;
  if (!qword_256042498)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ThumbnailConfiguration, &type metadata for ThumbnailConfiguration);
    atomic_store(result, (unint64_t *)&qword_256042498);
  }
  return result;
}

unint64_t sub_23316C1D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2560424A8;
  if (!qword_2560424A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560424A0);
    v2 = sub_233167C58(&qword_2560424B0, (uint64_t (*)(uint64_t))type metadata accessor for Transaction, (uint64_t)&protocol conformance descriptor for Transaction);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2560424A8);
  }
  return result;
}

unint64_t sub_23316C24C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2560424B8;
  if (!qword_2560424B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560424A0);
    v2 = sub_233167C58(&qword_2560424C0, (uint64_t (*)(uint64_t))type metadata accessor for Transaction, (uint64_t)&protocol conformance descriptor for Transaction);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2560424B8);
  }
  return result;
}

unint64_t sub_23316C2C8()
{
  unint64_t result;

  result = qword_2560424C8;
  if (!qword_2560424C8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinancialDataPersistentHistoryChange, &type metadata for FinancialDataPersistentHistoryChange);
    atomic_store(result, (unint64_t *)&qword_2560424C8);
  }
  return result;
}

unint64_t sub_23316C30C()
{
  unint64_t result;

  result = qword_2560424D0;
  if (!qword_2560424D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinancialDataPersistentHistoryChange, &type metadata for FinancialDataPersistentHistoryChange);
    atomic_store(result, (unint64_t *)&qword_2560424D0);
  }
  return result;
}

uint64_t InternalAccount.isEnabledInPublicAPI.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BYTE v6[80];

  v1 = v0;
  v2 = type metadata accessor for InternalAccount();
  if (*(_BYTE *)(v0 + *(int *)(v2 + 84)) != 1)
    return 0;
  v3 = v2;
  if (*(_BYTE *)(v0 + *(int *)(v2 + 52)) == 1)
    return 0;
  if (qword_256041B80 != -1)
    swift_once();
  swift_beginAccess();
  sub_2331686A0((uint64_t)&qword_256042540, (uint64_t)v6, &qword_254244F28);
  v5 = sub_2331704B8();
  sub_233168608((uint64_t)v6, &qword_254244F28);
  if ((v5 & 1) != 0 || *(unsigned __int8 *)(v1 + *(int *)(v3 + 100)) - 1 < 3)
    return 1;
  else
    return *(unsigned __int8 *)(v1 + *(int *)(v3 + 108));
}

uint64_t InternalAccount.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t InternalAccount.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*InternalAccount.id.modify())()
{
  return nullsub_1;
}

uint64_t InternalAccount.fullyQualifiedAccountIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for InternalAccount() + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 InternalAccount.fullyQualifiedAccountIdentifier.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for InternalAccount() + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*InternalAccount.fullyQualifiedAccountIdentifier.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.consentID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 24);
  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InternalAccount.consentID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 24);
  v4 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InternalAccount.consentID.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.fpanIds.getter()
{
  type metadata accessor for InternalAccount();
  return swift_bridgeObjectRetain();
}

uint64_t InternalAccount.fpanIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for InternalAccount() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*InternalAccount.fpanIds.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.externalAccountId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalAccount.externalAccountId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalAccount() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalAccount.externalAccountId.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.accountType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t InternalAccount.accountType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*InternalAccount.accountType.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.accountNumber.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InternalAccount() + 40));
  v5 = *v3;
  v4 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t InternalAccount.accountNumber.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for InternalAccount() + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  return result;
}

uint64_t (*InternalAccount.accountNumber.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalAccount.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalAccount() + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalAccount.displayName.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.accountDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalAccount.accountDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalAccount() + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalAccount.accountDescription.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.accountStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t InternalAccount.accountStatus.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = v2;
  return result;
}

uint64_t (*InternalAccount.accountStatus.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.currency.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalAccount.currency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for InternalAccount() + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*InternalAccount.currency.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.creditLimit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 60);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

__n128 InternalAccount.creditLimit.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 60);
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)v3 = v6;
  *(__n128 *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

uint64_t (*InternalAccount.creditLimit.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.nextPaymentDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_2331686A0(v1 + *(int *)(v3 + 64), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t InternalAccount.nextPaymentDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 64), (uint64_t *)&unk_254247DA0);
}

uint64_t (*InternalAccount.nextPaymentDate.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.minimumPaymentAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 68);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

__n128 InternalAccount.minimumPaymentAmount.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 68);
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)v3 = v6;
  *(__n128 *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

uint64_t (*InternalAccount.minimumPaymentAmount.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.overduePaymentAmount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 72);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  return swift_bridgeObjectRetain();
}

__n128 InternalAccount.overduePaymentAmount.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 72);
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)v3 = v6;
  *(__n128 *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

uint64_t (*InternalAccount.overduePaymentAmount.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.accountBalance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_2331686A0(v1 + *(int *)(v3 + 76), a1, &qword_256042590);
}

uint64_t InternalAccount.accountBalance.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 76), &qword_256042590);
}

uint64_t (*InternalAccount.accountBalance.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_2331684BC(v1 + *(int *)(v3 + 80), a1, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
}

uint64_t InternalAccount.actions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccount() + 80);
  return sub_233170BD0(a1, v3);
}

uint64_t (*InternalAccount.actions.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.isAccountEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 84));
}

uint64_t InternalAccount.isAccountEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*InternalAccount.isAccountEnabled.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.isAccountMismatched.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 88));
}

uint64_t InternalAccount.isAccountMismatched.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*InternalAccount.isAccountMismatched.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.accountRefreshFailure.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 92));
  return result;
}

uint64_t InternalAccount.accountRefreshFailure.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 92)) = v2;
  return result;
}

uint64_t (*InternalAccount.accountRefreshFailure.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.transactionsRefreshFailure.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 96));
  return result;
}

uint64_t InternalAccount.transactionsRefreshFailure.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 96)) = v2;
  return result;
}

uint64_t (*InternalAccount.transactionsRefreshFailure.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.originType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 100));
  return result;
}

uint64_t InternalAccount.originType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 100)) = v2;
  return result;
}

uint64_t (*InternalAccount.originType.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.institutionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 104));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InternalAccount.thirdPartyShareable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InternalAccount() + 108));
}

uint64_t InternalAccount.thirdPartyShareable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for InternalAccount();
  *(_BYTE *)(v1 + *(int *)(result + 108)) = a1;
  return result;
}

uint64_t (*InternalAccount.thirdPartyShareable.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.openingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_2331686A0(v1 + *(int *)(v3 + 112), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t InternalAccount.openingDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccount();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 112), (uint64_t *)&unk_254247DA0);
}

uint64_t (*InternalAccount.openingDate.modify())()
{
  type metadata accessor for InternalAccount();
  return nullsub_1;
}

uint64_t InternalAccount.init(id:fullyQualifiedAccountIdentifier:consentID:fpanIds:externalAccountId:accountType:accountNumber:displayName:accountDescription:accountStatus:currency:creditLimit:nextPaymentDate:minimumPaymentAmount:overduePaymentAmount:accountBalance:actions:isAccountEnabled:isAccountMismatched:accountRefreshFailure:transactionsRefreshFailure:originType:institutionName:thirdPartyShareable:openingDate:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, __int128 *a17, uint64_t a18, __int128 *a19, __int128 *a20,uint64_t a21,uint64_t a22,char a23,char a24,char *a25,char *a26,char *a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31)
{
  int *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  char v78;
  char v79;
  char v80;

  v57 = *a2;
  v56 = *((_QWORD *)a2 + 2);
  v55 = *((_QWORD *)a2 + 3);
  v59 = *a7;
  v62 = *a8;
  v61 = a8[1];
  v60 = *((_BYTE *)a8 + 16);
  v64 = *a14;
  v66 = a17[1];
  v67 = *a17;
  v65 = *((_QWORD *)a17 + 4);
  v70 = a19[1];
  v71 = *a19;
  v69 = *((_QWORD *)a19 + 4);
  v75 = a20[1];
  v76 = *a20;
  v74 = *((_QWORD *)a20 + 4);
  v78 = *a26;
  v79 = *a25;
  v80 = *a27;
  v32 = (int *)type metadata accessor for InternalAccount();
  v33 = (_QWORD *)(a9 + v32[8]);
  v34 = (_QWORD *)(a9 + v32[12]);
  v35 = a9 + v32[15];
  v36 = a9 + v32[16];
  v51 = v36;
  v52 = v32[13];
  v37 = sub_23361D634();
  v38 = *(void (**)(void))(*(_QWORD *)(v37 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v38)(v36, 1, 1, v37);
  v39 = a9 + v32[17];
  *(_QWORD *)(v39 + 32) = 0;
  *(_OWORD *)v39 = 0u;
  *(_OWORD *)(v39 + 16) = 0u;
  v40 = a9 + v32[18];
  *(_QWORD *)(v40 + 32) = 0;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  v41 = a9 + v32[19];
  v42 = type metadata accessor for InternalAccountBalance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  v54 = v32[23];
  *(_BYTE *)(a9 + v54) = 2;
  v53 = v32[24];
  *(_BYTE *)(a9 + v53) = 2;
  v58 = a9 + v32[28];
  v38();
  v43 = sub_23361D6A0();
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32);
  v44(a9, a1, v43);
  v45 = a9 + v32[5];
  *(_OWORD *)v45 = v57;
  *(_QWORD *)(v45 + 16) = v56;
  *(_QWORD *)(v45 + 24) = v55;
  v44(a9 + v32[6], a3, v43);
  *(_QWORD *)(a9 + v32[7]) = a4;
  *v33 = a5;
  v33[1] = a6;
  *(_BYTE *)(a9 + v32[9]) = v59;
  v46 = a9 + v32[10];
  *(_QWORD *)v46 = v62;
  *(_QWORD *)(v46 + 8) = v61;
  *(_BYTE *)(v46 + 16) = v60;
  v47 = (_QWORD *)(a9 + v32[11]);
  *v47 = a10;
  v47[1] = a11;
  *v34 = a12;
  v34[1] = a13;
  *(_BYTE *)(a9 + v52) = v64;
  v48 = (_QWORD *)(a9 + v32[14]);
  *v48 = a15;
  v48[1] = a16;
  *(_OWORD *)v35 = v67;
  *(_OWORD *)(v35 + 16) = v66;
  *(_QWORD *)(v35 + 32) = v65;
  sub_233170B8C(a18, v51, (uint64_t *)&unk_254247DA0);
  swift_bridgeObjectRelease();
  *(_OWORD *)v39 = v71;
  *(_OWORD *)(v39 + 16) = v70;
  *(_QWORD *)(v39 + 32) = v69;
  swift_bridgeObjectRelease();
  *(_OWORD *)v40 = v76;
  *(_OWORD *)(v40 + 16) = v75;
  *(_QWORD *)(v40 + 32) = v74;
  sub_233170B8C(a21, v41, &qword_256042590);
  sub_233168580(a22, a9 + v32[20], (uint64_t (*)(_QWORD))type metadata accessor for Actions);
  *(_BYTE *)(a9 + v32[21]) = a23;
  *(_BYTE *)(a9 + v32[22]) = a24;
  *(_BYTE *)(a9 + v54) = v79;
  *(_BYTE *)(a9 + v53) = v78;
  *(_BYTE *)(a9 + v32[25]) = v80;
  v49 = (_QWORD *)(a9 + v32[26]);
  *v49 = a28;
  v49[1] = a29;
  *(_BYTE *)(a9 + v32[27]) = a30;
  return sub_233170B8C(a31, v58, (uint64_t *)&unk_254247DA0);
}

uint64_t sub_23316D708(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23316D730 + 4 * byte_233624CE0[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_23316D730()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_23316D95C()
{
  return 0x79546E696769726FLL;
}

uint64_t sub_23316D978()
{
  return 0x7475746974736E69;
}

uint64_t sub_23316D9B8()
{
  return 0x44676E696E65706FLL;
}

uint64_t sub_23316D9DC()
{
  unsigned __int8 *v0;

  return sub_23316D708(*v0);
}

uint64_t sub_23316D9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331764F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23316DA08(_BYTE *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_23316DA14()
{
  sub_2331721C8();
  return sub_23361F428();
}

uint64_t sub_23316DA3C()
{
  sub_2331721C8();
  return sub_23361F434();
}

uint64_t InternalAccount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  _QWORD v28[2];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042598);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331721C8();
  sub_23361F410();
  LOBYTE(v29) = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for InternalAccount();
    v10 = (__int128 *)(v3 + v9[5]);
    v11 = *v10;
    v13 = *((_QWORD *)v10 + 2);
    v12 = *((_QWORD *)v10 + 3);
    v29 = v11;
    *(_QWORD *)&v30 = v13;
    *((_QWORD *)&v30 + 1) = v12;
    v32 = 1;
    sub_23317220C();
    sub_23361F17C();
    LOBYTE(v29) = 2;
    sub_23361F17C();
    *(_QWORD *)&v29 = *(_QWORD *)(v3 + v9[7]);
    v32 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23361F17C();
    LOBYTE(v29) = 4;
    sub_23361F0E0();
    LOBYTE(v29) = *(_BYTE *)(v3 + v9[9]);
    v32 = 5;
    sub_233172250();
    sub_23361F17C();
    v14 = (uint64_t *)(v3 + v9[10]);
    v15 = *v14;
    v16 = v14[1];
    LOBYTE(v14) = *((_BYTE *)v14 + 16);
    *(_QWORD *)&v29 = v15;
    *((_QWORD *)&v29 + 1) = v16;
    LOBYTE(v30) = (_BYTE)v14;
    v32 = 6;
    sub_233172294();
    sub_23361F17C();
    LOBYTE(v29) = 7;
    sub_23361F140();
    LOBYTE(v29) = 8;
    sub_23361F0E0();
    LOBYTE(v29) = *(_BYTE *)(v3 + v9[13]);
    v32 = 9;
    sub_2331722D8();
    sub_23361F110();
    LOBYTE(v29) = 10;
    sub_23361F140();
    v17 = (__int128 *)(v3 + v9[15]);
    v18 = *((_QWORD *)v17 + 4);
    v19 = v17[1];
    v29 = *v17;
    v30 = v19;
    v31 = v18;
    v32 = 11;
    sub_23317231C();
    sub_23361F110();
    LOBYTE(v29) = 12;
    v20 = sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v28[1] = v20;
    sub_23361F110();
    v21 = (__int128 *)(v3 + v9[17]);
    v22 = *((_QWORD *)v21 + 4);
    v23 = v21[1];
    v29 = *v21;
    v30 = v23;
    v31 = v22;
    v32 = 13;
    sub_23361F110();
    v24 = (__int128 *)(v3 + v9[18]);
    v25 = *((_QWORD *)v24 + 4);
    v26 = v24[1];
    v29 = *v24;
    v30 = v26;
    v31 = v25;
    v32 = 14;
    sub_23361F110();
    LOBYTE(v29) = 15;
    type metadata accessor for InternalAccountBalance(0);
    sub_233167C58(&qword_2560425C8, type metadata accessor for InternalAccountBalance, (uint64_t)&protocol conformance descriptor for InternalAccountBalance);
    sub_23361F110();
    LOBYTE(v29) = 16;
    type metadata accessor for Actions();
    sub_233167C58((unint64_t *)&unk_256056630, (uint64_t (*)(uint64_t))type metadata accessor for Actions, (uint64_t)&protocol conformance descriptor for Actions);
    sub_23361F17C();
    LOBYTE(v29) = 17;
    sub_23361F14C();
    LOBYTE(v29) = 18;
    sub_23361F14C();
    LOBYTE(v29) = *(_BYTE *)(v3 + v9[23]);
    v32 = 19;
    sub_233172360();
    sub_23361F110();
    LOBYTE(v29) = *(_BYTE *)(v3 + v9[24]);
    v32 = 20;
    sub_23361F110();
    LOBYTE(v29) = *(_BYTE *)(v3 + v9[25]);
    v32 = 21;
    sub_2331723A4();
    sub_23361F17C();
    LOBYTE(v29) = 22;
    sub_23361F140();
    LOBYTE(v29) = 23;
    sub_23361F14C();
    LOBYTE(v29) = 24;
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t InternalAccount.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int *v47;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  __int128 v51;
  int *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  _QWORD v95[2];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  char *v119;
  uint64_t *v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  char v128;

  v124 = a1;
  v102 = a2;
  v99 = type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v99);
  v100 = (uint64_t)v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  MEMORY[0x24BDAC7A8](v3);
  v103 = (uint64_t)v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v101 = (uint64_t)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v104 = (uint64_t)v95 - v8;
  v9 = sub_23361D6A0();
  v122 = *(_QWORD *)(v9 - 8);
  v123 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)&v106 = (char *)v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)&v107 = (char *)v95 - v12;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560425E0);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v14 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for InternalAccount();
  v16 = (int *)MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v18[v16[8]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v120 = (uint64_t *)v19;
  v20 = &v18[v16[12]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v117 = (uint64_t *)v20;
  v105 = v16[13];
  v18[v105] = 4;
  v21 = &v18[v16[15]];
  *((_QWORD *)v21 + 4) = 0;
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  v116 = v21;
  v22 = (uint64_t)&v18[v16[16]];
  v23 = sub_23361D634();
  v24 = *(void (**)(void))(*(_QWORD *)(v23 - 8) + 56);
  v115 = v22;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v22, 1, 1, v23);
  v25 = &v18[v15[17]];
  *((_QWORD *)v25 + 4) = 0;
  *(_OWORD *)v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  v114 = v25;
  v26 = &v18[v15[18]];
  *((_QWORD *)v26 + 4) = 0;
  *(_OWORD *)v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  v111 = v26;
  v27 = (uint64_t)&v18[v15[19]];
  v28 = type metadata accessor for InternalAccountBalance(0);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v112 = v27;
  v29(v27, 1, 1, v28);
  v30 = v15[23];
  v18[v30] = 2;
  v31 = v15[24];
  v18[v31] = 2;
  v121 = v15;
  v32 = v15[28];
  v119 = v18;
  v33 = (uint64_t)&v18[v32];
  v34 = v23;
  v113 = v33;
  v24();
  __swift_project_boxed_opaque_existential_1(v124, v124[3]);
  sub_2331721C8();
  v110 = v14;
  v35 = v118;
  sub_23361F3EC();
  if (v35)
  {
    v118 = v35;
    v39 = 50395408;
  }
  else
  {
    v36 = v106;
    v98 = v28;
    v96 = v30;
    v97 = v31;
    LOBYTE(v125) = 0;
    sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v37 = v107;
    v38 = v123;
    sub_23361F068();
    v95[1] = v34;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 32);
    v50 = (uint64_t)v119;
    v49(v119, v37, v38);
    v128 = 1;
    sub_2331723E8();
    sub_23361F068();
    v51 = v126;
    v52 = v121;
    v53 = (_OWORD *)(v50 + v121[5]);
    *v53 = v125;
    v53[1] = v51;
    LOBYTE(v125) = 2;
    sub_23361F068();
    v49((char *)(v50 + v52[6]), v36, v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v128 = 3;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361F068();
    *(_QWORD *)(v50 + v52[7]) = v125;
    LOBYTE(v125) = 4;
    v54 = sub_23361EFCC();
    v55 = v120;
    *v120 = v54;
    v55[1] = v56;
    v128 = 5;
    sub_23317248C();
    sub_23361F068();
    v57 = v121;
    *(_BYTE *)(v50 + v121[9]) = v125;
    v128 = 6;
    sub_2331724D0();
    sub_23361F068();
    v58 = *((_QWORD *)&v125 + 1);
    v59 = v126;
    v60 = v50 + v57[10];
    *(_QWORD *)v60 = v125;
    *(_QWORD *)(v60 + 8) = v58;
    *(_BYTE *)(v60 + 16) = v59;
    LOBYTE(v125) = 7;
    v61 = sub_23361F02C();
    v62 = (uint64_t *)(v50 + v121[11]);
    *v62 = v61;
    v62[1] = v63;
    LOBYTE(v125) = 8;
    v64 = sub_23361EFCC();
    v65 = v117;
    *v117 = v64;
    v65[1] = v66;
    v128 = 9;
    sub_233172514();
    sub_23361EFFC();
    v118 = 0;
    v119[v105] = v125;
    LOBYTE(v125) = 10;
    v67 = sub_23361F02C();
    v118 = 0;
    v69 = (uint64_t *)&v119[v121[14]];
    *v69 = v67;
    v69[1] = v68;
    v128 = 11;
    sub_233172558();
    v70 = v118;
    sub_23361EFFC();
    v118 = v70;
    if (v70)
      goto LABEL_31;
    v71 = v127;
    v72 = v126;
    v73 = v116;
    *(_OWORD *)v116 = v125;
    *((_OWORD *)v73 + 1) = v72;
    *((_QWORD *)v73 + 4) = v71;
    LOBYTE(v125) = 12;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v74 = v118;
    sub_23361EFFC();
    v118 = v74;
    if (v74)
      goto LABEL_31;
    sub_233170B8C(v104, v115, (uint64_t *)&unk_254247DA0);
    v128 = 13;
    v75 = v118;
    sub_23361EFFC();
    v118 = v75;
    if (v75)
      goto LABEL_31;
    v107 = v125;
    v106 = v126;
    v76 = v127;
    v77 = v114;
    swift_bridgeObjectRelease();
    v78 = v106;
    *(_OWORD *)v77 = v107;
    *((_OWORD *)v77 + 1) = v78;
    *((_QWORD *)v77 + 4) = v76;
    v128 = 14;
    v79 = v118;
    sub_23361EFFC();
    v118 = v79;
    if (v79)
      goto LABEL_31;
    v107 = v125;
    v106 = v126;
    v80 = v127;
    v81 = v111;
    swift_bridgeObjectRelease();
    v82 = v106;
    *(_OWORD *)v81 = v107;
    *((_OWORD *)v81 + 1) = v82;
    *((_QWORD *)v81 + 4) = v80;
    LOBYTE(v125) = 15;
    sub_233167C58(&qword_256042610, type metadata accessor for InternalAccountBalance, (uint64_t)&protocol conformance descriptor for InternalAccountBalance);
    v83 = v118;
    sub_23361EFFC();
    v118 = v83;
    if (v83
      || (sub_233170B8C(v103, v112, &qword_256042590),
          LOBYTE(v125) = 16,
          sub_233167C58(&qword_256042618, (uint64_t (*)(uint64_t))type metadata accessor for Actions, (uint64_t)&protocol conformance descriptor for Actions), v84 = v118, sub_23361F068(), (v118 = v84) != 0))
    {
LABEL_31:
      v39 = 16842207;
    }
    else
    {
      sub_233168580(v100, (uint64_t)&v119[v121[20]], (uint64_t (*)(_QWORD))type metadata accessor for Actions);
      LOBYTE(v125) = 17;
      v85 = v118;
      v86 = sub_23361F038();
      v118 = v85;
      if (!v85)
      {
        v119[v121[21]] = v86 & 1;
        LOBYTE(v125) = 18;
        v87 = sub_23361F038();
        v118 = 0;
        v119[v121[22]] = v87 & 1;
        v128 = 19;
        sub_23317259C();
        v88 = v118;
        sub_23361EFFC();
        v118 = v88;
        if (!v88)
        {
          v119[v96] = v125;
          v128 = 20;
          sub_23361EFFC();
          v118 = 0;
          v119[v97] = v125;
          v128 = 21;
          sub_2331725E0();
          v89 = v118;
          sub_23361F068();
          v118 = v89;
          if (!v89)
          {
            v119[v121[25]] = v125;
            LOBYTE(v125) = 22;
            v90 = sub_23361F02C();
            v118 = 0;
            v91 = (uint64_t *)&v119[v121[26]];
            *v91 = v90;
            v91[1] = v92;
            LOBYTE(v125) = 23;
            v93 = sub_23361F038();
            v118 = 0;
            v119[v121[27]] = v93 & 1;
            LOBYTE(v125) = 24;
            sub_23361EFFC();
            v118 = 0;
            (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v109);
            sub_233170B8C(v101, v113, (uint64_t *)&unk_254247DA0);
            v94 = (uint64_t)v119;
            sub_2331684BC((uint64_t)v119, v102, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v124);
            return sub_233168500(v94, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          }
          (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v109);
          LODWORD(v110) = 0;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v124);
          v40 = (uint64_t)v119;
          (*(void (**)(char *, uint64_t))(v122 + 8))(v119, v123);
          v46 = 1;
          v45 = 1;
          v44 = 1;
          v43 = 1;
          v42 = 1;
          LOBYTE(v41) = 1;
          v47 = v121;
          goto LABEL_14;
        }
      }
      v39 = 16907743;
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v109);
  }
  v40 = (uint64_t)v119;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v124);
  v41 = (v39 >> 2) & 1;
  v42 = (v39 >> 3) & 1;
  v43 = (v39 >> 6) & 1;
  v44 = (v39 >> 7) & 1;
  v45 = (v39 >> 10) & 1;
  v46 = HIWORD(v39) & 1;
  if ((v39 & 1) != 0)
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v40, v123);
  v47 = v121;
  if ((v39 & 2) == 0)
  {
    LODWORD(v110) = 0;
    if ((v39 & 4) == 0)
      goto LABEL_8;
    goto LABEL_15;
  }
  LODWORD(v110) = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
  {
LABEL_8:
    if (v42)
      goto LABEL_9;
    goto LABEL_16;
  }
LABEL_15:
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v40 + v47[6], v123);
  if ((v42 & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
      goto LABEL_10;
    goto LABEL_17;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  if (!v43)
  {
LABEL_10:
    if (v44)
      goto LABEL_11;
    goto LABEL_18;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if ((v44 & 1) != 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (v45)
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  sub_233168608(v115, (uint64_t *)&unk_254247DA0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233168608(v112, &qword_256042590);
  if (v46)
    sub_233168500(v40 + v47[20], (uint64_t (*)(_QWORD))type metadata accessor for Actions);
  if ((_DWORD)v110)
    swift_bridgeObjectRelease();
  return sub_233168608(v113, (uint64_t *)&unk_254247DA0);
}

uint64_t sub_23316F0C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InternalAccount.init(from:)(a1, a2);
}

uint64_t sub_23316F0D8(_QWORD *a1)
{
  return InternalAccount.encode(to:)(a1);
}

uint64_t _s10FinanceKit12AssetAccountV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t InternalAccount.hash(into:)()
{
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23361E090();
}

uint64_t InternalAccount.hashValue.getter()
{
  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_23316F1EC()
{
  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_23316F258()
{
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23361E090();
}

uint64_t sub_23316F2B0()
{
  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t FullyQualifiedAccountIdentifier.accountID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FullyQualifiedAccountIdentifier.accountID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FullyQualifiedAccountIdentifier.accountID.modify())()
{
  return nullsub_1;
}

uint64_t FullyQualifiedAccountIdentifier.institutionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FullyQualifiedAccountIdentifier.institutionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FullyQualifiedAccountIdentifier.institutionID.modify())()
{
  return nullsub_1;
}

FinanceKit::FullyQualifiedAccountIdentifier __swiftcall FullyQualifiedAccountIdentifier.init(accountID:institutionID:)(Swift::String accountID, Swift::String institutionID)
{
  Swift::String *v2;
  FinanceKit::FullyQualifiedAccountIdentifier result;

  *v2 = accountID;
  v2[1] = institutionID;
  result.institutionID = institutionID;
  result.accountID = accountID;
  return result;
}

uint64_t FullyQualifiedAccountIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

BOOL sub_23316F474(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23316F48C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475746974736E69;
  else
    return 0x49746E756F636361;
}

uint64_t sub_23316F4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233176F48(a1, a2);
  *a3 = result;
  return result;
}

void sub_23316F4FC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23316F508()
{
  sub_233172624();
  return sub_23361F428();
}

uint64_t sub_23316F530()
{
  sub_233172624();
  return sub_23361F434();
}

uint64_t FullyQualifiedAccountIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042630);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233172624();
  sub_23361F410();
  v12 = 0;
  sub_23361F140();
  if (!v2)
  {
    v11 = 1;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t FullyQualifiedAccountIdentifier.hashValue.getter()
{
  sub_23361F350();
  sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t FullyQualifiedAccountIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042640);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233172624();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23361F02C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23316F890@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FullyQualifiedAccountIdentifier.init(from:)(a1, a2);
}

uint64_t sub_23316F8A4(_QWORD *a1)
{
  return FullyQualifiedAccountIdentifier.encode(to:)(a1);
}

uint64_t sub_23316F8B8()
{
  sub_23361F350();
  sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_23316F91C()
{
  sub_23361E0A8();
  return sub_23361E0A8();
}

uint64_t sub_23316F958()
{
  sub_23361F350();
  sub_23361E0A8();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t FullyQualifiedAccountIdentifier.description.getter()
{
  sub_23361ED98();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 0;
}

uint64_t FKAccountType.init(from:)(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t FKBankConnectRefreshFailure.init(from:)(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;

  v1 = *a1;
  v2 = 1;
  if ((v1 & 1) != 0)
    v2 = 2;
  if (v1 == 2)
    return 0;
  else
    return v2;
}

id FKActions.init(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v30 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v30 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v30 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v17 = (int *)type metadata accessor for Actions();
  sub_2331686A0(a1 + v17[6], (uint64_t)v16, &qword_254248700);
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v32 = 0;
  if (v21 != 1)
  {
    v32 = sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  sub_2331686A0(a1 + v17[5], (uint64_t)v14, &qword_254248700);
  if (v20(v14, 1, v18) == 1)
  {
    v31 = 0;
  }
  else
  {
    v31 = sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
  }
  sub_2331686A0(a1, (uint64_t)v11, &qword_254248700);
  if (v20(v11, 1, v18) == 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
  }
  sub_2331686A0(a1 + v17[7], (uint64_t)v8, &qword_254248700);
  if (v20(v8, 1, v18) == 1)
  {
    v23 = 0;
  }
  else
  {
    v23 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  }
  sub_2331686A0(a1 + v17[8], (uint64_t)v5, &qword_254248700);
  if (v20(v5, 1, v18) == 1)
  {
    v24 = 0;
  }
  else
  {
    v24 = (void *)sub_23361D268();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
  }
  v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v26 = (void *)v32;
  v27 = (void *)v31;
  v28 = objc_msgSend(v25, sel_initWithDigitalServicingURL_payNowURL_transferFundsURL_postInstallmentURL_redeemRewardsURL_, v32, v31, v22, v23, v24);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
  return v28;
}

id FKAccount.init(from:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  unint64_t v28;
  char *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char v45;
  char v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  char *v55;
  void *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v2);
  v64 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for InternalAccountBalance(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v63 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (uint64_t)&v61 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233168668(0, &qword_256042648);
  v13 = (int *)type metadata accessor for InternalAccount();
  sub_2331684BC((uint64_t)&a1[v13[20]], (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Actions);
  v73 = FKActions.init(from:)((uint64_t)v12);
  if (*(_QWORD *)&a1[v13[15] + 32])
  {
    v14 = objc_allocWithZone((Class)FKAmount);
    swift_bridgeObjectRetain();
    v15 = (void *)sub_23361EA98();
    swift_bridgeObjectRetain();
    v16 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v72 = objc_msgSend(v14, sel_initWithDecimalNumber_currency_, v15, v16);

    swift_bridgeObjectRelease();
  }
  else
  {
    v72 = 0;
  }
  if (*(_QWORD *)&a1[v13[17] + 32])
  {
    v17 = objc_allocWithZone((Class)FKAmount);
    swift_bridgeObjectRetain();
    v18 = (void *)sub_23361EA98();
    swift_bridgeObjectRetain();
    v19 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v69 = objc_msgSend(v17, sel_initWithDecimalNumber_currency_, v18, v19);

    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = 0;
  }
  if (*(_QWORD *)&a1[v13[18] + 32])
  {
    v20 = objc_allocWithZone((Class)FKAmount);
    swift_bridgeObjectRetain();
    v21 = (void *)sub_23361EA98();
    swift_bridgeObjectRetain();
    v22 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v20, sel_initWithDecimalNumber_currency_, v21, v22);

    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_allocWithZone((Class)FKFullyQualifiedAccountIdentifier);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v26 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v24, sel_initWithAccountID_institutionID_, v25, v26);

  v28 = a1[v13[9]];
  v29 = v65;
  sub_2331686A0((uint64_t)&a1[v13[19]], (uint64_t)v65, &qword_256042590);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48))(v29, 1, v71);
  v67 = v27;
  v68 = v23;
  v66 = (id)v28;
  if (v30 == 1)
  {
    v65 = 0;
  }
  else
  {
    v31 = (uint64_t)v29;
    v32 = v62;
    sub_233168580(v31, v62, type metadata accessor for InternalAccountBalance);
    sub_233168668(0, &qword_256042650);
    v33 = v63;
    sub_2331684BC(v32, v63, type metadata accessor for InternalAccountBalance);
    v65 = (char *)FKBalance.init(_:)(v33);
    sub_233168500(v32, type metadata accessor for InternalAccountBalance);
  }
  v34 = (uint64_t)v64;
  v35 = a1[v13[23]];
  v36 = a1[v13[24]];
  v71 = sub_23361E12C();
  v70 = sub_23361E12C();
  sub_2331686A0((uint64_t)&a1[v13[16]], v34, (uint64_t *)&unk_254247DA0);
  v37 = sub_23361D634();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37) != 1)
  {
    v39 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v37);
  }
  v40 = 1;
  if ((v36 & 1) != 0)
    v41 = 2;
  else
    v41 = 1;
  if (v36 == 2)
    v42 = 0;
  else
    v42 = v41;
  if ((v35 & 1) != 0)
    v40 = 2;
  if (v35 == 2)
    v43 = 0;
  else
    v43 = v40;
  v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v45 = a1[v13[21]];
  v46 = a1[v13[22]];
  v47 = v73;
  v48 = (void *)sub_23361D658();
  v59 = v43;
  v60 = v42;
  BYTE1(v58) = v46;
  LOBYTE(v58) = v45;
  v49 = v68;
  v50 = v69;
  v51 = v44;
  v52 = v67;
  v73 = a1;
  v54 = (void *)v70;
  v53 = (void *)v71;
  v55 = v65;
  v56 = v72;
  v66 = objc_msgSend(v51, sel_initWithFullyQualifiedAccountIdentifier_accountType_displayName_displayAccountNumberValue_balance_creditLimit_minimumPaymentAmount_nextPaymentDate_overduePaymentAmount_actions_isAccountEnabled_isAccountMismatched_consentUUID_accountRefreshFailure_transactionsRefreshFailure_, v67, v66, v71, v70, v65, v72, v69, v39, v68, v47, v58, v48, v59, v60);

  sub_233168500((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  return v66;
}

uint64_t static InternalAccount.enableAllAccountsForPublicAPI.getter()
{
  char v0;
  _BYTE v2[80];

  if (qword_256041B80 != -1)
    swift_once();
  swift_beginAccess();
  sub_2331686A0((uint64_t)&qword_256042540, (uint64_t)v2, &qword_254244F28);
  v0 = sub_2331704B8();
  sub_233168608((uint64_t)v2, &qword_254244F28);
  return v0 & 1;
}

uint64_t sub_2331704B8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;
  char v4;
  char v5;
  _BYTE v7[80];
  _BYTE v8[64];
  uint64_t v9;

  v1 = v0;
  v2 = *(unsigned __int8 *)(v0 + 17);
  sub_2331686A0(v1, (uint64_t)v8, &qword_254244F28);
  if (v2 == 1)
  {
    v3 = (*(uint64_t (**)(void))(v9 + 16))();
    sub_233168608((uint64_t)v8, &qword_254244F28);
    if ((v3 & 1) == 0)
    {
      v4 = *(_BYTE *)(v1 + 16);
      return v4 & 1;
    }
  }
  else
  {
    sub_233168608((uint64_t)v8, &qword_254244F28);
  }
  v5 = sub_233170C14();
  sub_2331686A0(v1, (uint64_t)v7, &qword_254244F28);
  if (v5 == 2)
    v4 = v7[16];
  else
    v4 = v5;
  sub_233168608((uint64_t)v7, &qword_254244F28);
  return v4 & 1;
}

uint64_t sub_233170588()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  _BYTE v10[32];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[80];
  uint64_t v14;

  v1 = (_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 32);
  sub_2331686A0((uint64_t)v1, (uint64_t)v13, &qword_2560426B0);
  if (v2 != 1)
  {
    sub_233168608((uint64_t)v13, &qword_2560426B0);
LABEL_5:
    v5 = v1[8];
    v6 = v1[9];
    __swift_project_boxed_opaque_existential_1(v1 + 5, v5);
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16))(v9, *v1, v1[1], v5, v6);
    sub_233168478((uint64_t)v9, (uint64_t)v10, &qword_254245020);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560426A8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v11;
      v7 = v12;
      sub_2331686A0((uint64_t)v1, (uint64_t)v9, &qword_2560426B0);
      if (v7 != 1)
        goto LABEL_10;
    }
    else
    {
      sub_2331686A0((uint64_t)v1, (uint64_t)v9, &qword_2560426B0);
    }
    v4 = v9[2];
    swift_bridgeObjectRetain();
LABEL_10:
    sub_233168608((uint64_t)v9, &qword_2560426B0);
    return v4;
  }
  v3 = (*(uint64_t (**)(void))(v14 + 16))();
  sub_233168608((uint64_t)v13, &qword_2560426B0);
  if ((v3 & 1) != 0)
    goto LABEL_5;
  v4 = v1[2];
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_2331706F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  char v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _BYTE v23[32];
  _QWORD v24[4];

  v2 = (_QWORD *)v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042698);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254245FD0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = &v23[-v12];
  v14 = *(unsigned __int8 *)(v1 + *(int *)(v11 + 32));
  sub_2331686A0(v1, (uint64_t)&v23[-v12], &qword_254245FD0);
  if (v14 == 1)
  {
    v15 = (*(uint64_t (**)(void))(*(_QWORD *)&v13[v7[10] + 8] + 16))();
    sub_233168608((uint64_t)v13, &qword_254245FD0);
    if ((v15 & 1) == 0)
      return sub_2331686A0((uint64_t)v2 + v7[7], a1, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    sub_233168608((uint64_t)v13, &qword_254245FD0);
  }
  v17 = (_QWORD *)((char *)v2 + v7[9]);
  v18 = v17[3];
  v19 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(v19 + 16))(v24, *v2, v2[1], v18, v19);
  sub_233168478((uint64_t)v24, (uint64_t)v23, &qword_254245020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v21 = swift_dynamicCast();
  v22 = *(_QWORD *)(v20 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v6, v21 ^ 1u, 1, v20);
  sub_2331686A0((uint64_t)v2, (uint64_t)v10, &qword_254245FD0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v20) == 1)
  {
    sub_2331686A0((uint64_t)&v10[v7[7]], a1, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v10, &qword_254245FD0);
    return sub_233168608((uint64_t)v6, &qword_256042698);
  }
  else
  {
    sub_233168608((uint64_t)v10, &qword_254245FD0);
    return sub_233168478((uint64_t)v6, a1, (uint64_t *)&unk_254247DA0);
  }
}

uint64_t static InternalAccount.enableAllAccountsForPublicAPI.setter(char a1)
{
  if (qword_256041B80 != -1)
    swift_once();
  swift_beginAccess();
  sub_233170D24(a1 & 1);
  return swift_endAccess();
}

uint64_t (*static InternalAccount.enableAllAccountsForPublicAPI.modify(uint64_t a1))(uint64_t a1)
{
  if (qword_256041B80 != -1)
    swift_once();
  swift_beginAccess();
  *(_BYTE *)(a1 + 24) = sub_2331704B8() & 1;
  return sub_233170A60;
}

uint64_t sub_233170A60(uint64_t a1)
{
  sub_233170D24(*(_BYTE *)(a1 + 24));
  return swift_endAccess();
}

id sub_233170A98()
{
  id v1;

  if (qword_254246F70 != -1)
    swift_once();
  v1 = (id)qword_254246F68;
  qword_256042570 = sub_233168668(0, (unint64_t *)&qword_254247660);
  unk_256042578 = &protocol witness table for NSUserDefaults;
  qword_256042558 = (uint64_t)v1;
  word_256042550 = 256;
  qword_256042540 = 0xD00000000000001DLL;
  *(_QWORD *)algn_256042548 = 0x800000023366A750;
  qword_256042580 = (uint64_t)&type metadata for DeviceInfo;
  unk_256042588 = &protocol witness table for DeviceInfo;
  return v1;
}

uint64_t type metadata accessor for InternalAccount()
{
  uint64_t result;

  result = qword_254246EF8;
  if (!qword_254246EF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233170B8C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_233170BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_233170C14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v9[32];
  _QWORD v10[4];
  unsigned __int8 v11;

  v1 = v0[6];
  v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  v3 = *v0;
  v4 = v0[1];
  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t, uint64_t))(v2 + 16))(v10, *v0, v4, v1, v2);
  if (v10[3])
  {
    v6 = v0[6];
    v5 = v0[7];
    __swift_project_boxed_opaque_existential_1(v0 + 3, v6);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, v4, v6, v5);
    sub_233168608((uint64_t)v10, &qword_254245020);
    return v7 & 1;
  }
  else
  {
    sub_233168478((uint64_t)v10, (uint64_t)v9, &qword_254245020);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
    if (swift_dynamicCast())
      return v11;
    else
      return 2;
  }
}

uint64_t sub_233170D24(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;

  v2 = v1;
  v17 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560426B8);
  v4 = sub_23361EBA0();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  swift_unknownObjectRelease();

  v6 = v2 + 3;
  if ((id)v4 == v5)
  {
    v9 = v2[6];
    v10 = v2[7];
    __swift_project_boxed_opaque_existential_1(v6, v9);
    v14 = 0u;
    v15 = 0u;
    (*(void (**)(__int128 *, _QWORD, _QWORD, uint64_t, uint64_t))(v10 + 8))(&v14, *v2, v2[1], v9, v10);
    return sub_233168608((uint64_t)&v14, &qword_254245020);
  }
  else
  {
    sub_233177068((uint64_t)v6, (uint64_t)&v14);
    v7 = *((_QWORD *)&v15 + 1);
    v8 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    if (a1 == 2)
    {
      v12 = 0u;
      v13 = 0u;
    }
    else
    {
      *((_QWORD *)&v13 + 1) = MEMORY[0x24BEE1328];
      LOBYTE(v12) = a1 & 1;
    }
    (*(void (**)(__int128 *, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 8))(&v12, *v2, v2[1], v7, v8);
    sub_233168608((uint64_t)&v12, &qword_254245020);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  }
}

uint64_t sub_233170E68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v22 = a1;
  v23 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560426A0);
  v6 = sub_23361EBA0();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  swift_unknownObjectRelease();

  v8 = v3 + 5;
  if ((id)v6 == v7)
  {
    v11 = v3[8];
    v12 = v3[9];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    v19 = 0u;
    v20 = 0u;
    (*(void (**)(__int128 *, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 8))(&v19, *v3, v3[1], v11, v12);
    sub_2331770FC(a1, a2);
    return sub_233168608((uint64_t)&v19, &qword_254245020);
  }
  else
  {
    sub_233177068((uint64_t)v8, (uint64_t)&v19);
    v9 = *((_QWORD *)&v20 + 1);
    v10 = v21;
    __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
    if (a2 == 1)
    {
      v17 = 0u;
      v18 = 0u;
    }
    else
    {
      *((_QWORD *)&v18 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2560426A8);
      *(_QWORD *)&v17 = a1;
      *((_QWORD *)&v17 + 1) = a2;
    }
    v15 = *v3;
    v14 = v3[1];
    v16 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
    sub_2331770E8(a1, a2);
    v16(&v17, v15, v14, v9, v10);
    sub_2331770FC(a1, a2);
    sub_233168608((uint64_t)&v17, &qword_254245020);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v19);
  }
}

uint64_t sub_233170FE0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042698);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361EBA0();
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  swift_unknownObjectRelease();

  v9 = (_QWORD *)((char *)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254245FD0) + 36));
  if ((id)v7 == v8)
  {
    v13 = v9[3];
    v14 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v13);
    v19 = 0u;
    v20 = 0u;
    (*(void (**)(__int128 *, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 8))(&v19, *v2, v2[1], v13, v14);
    sub_233168608(a1, &qword_256042698);
    return sub_233168608((uint64_t)&v19, &qword_254245020);
  }
  else
  {
    sub_233177068((uint64_t)v9, (uint64_t)&v19);
    v10 = *((_QWORD *)&v20 + 1);
    v11 = v21;
    __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
    sub_2331686A0(a1, (uint64_t)v6, &qword_256042698);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12) == 1)
    {
      sub_233168608((uint64_t)v6, &qword_256042698);
      v17 = 0u;
      v18 = 0u;
    }
    else
    {
      *((_QWORD *)&v18 + 1) = v12;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v17);
      sub_233168478((uint64_t)v6, (uint64_t)boxed_opaque_existential_0, (uint64_t *)&unk_254247DA0);
    }
    (*(void (**)(__int128 *, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 8))(&v17, *v2, v2[1], v10, v11);
    sub_233168608(a1, &qword_256042698);
    sub_233168608((uint64_t)&v17, &qword_254245020);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v19);
  }
}

BOOL _s10FinanceKit15InternalAccountV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BOOL8 result;
  char v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t *v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  int v142;
  int v143;
  uint64_t v144;
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  char v151;
  int *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;

  v186 = type metadata accessor for InternalAccountBalance(0);
  v182 = *(_QWORD *)(v186 - 8);
  v4 = MEMORY[0x24BDAC7A8](v186);
  v178 = (uint64_t)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v179 = (uint64_t)&v164 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v180 = (uint64_t)&v164 - v8;
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560426C0);
  MEMORY[0x24BDAC7A8](v181);
  v187 = (uint64_t)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v183 = (uint64_t)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v184 = (uint64_t)&v164 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v185 = (uint64_t)&v164 - v15;
  v16 = sub_23361D634();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v20 = MEMORY[0x24BDAC7A8](v188);
  v22 = (char *)&v164 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v164 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v177 = (uint64_t)&v164 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v175 = (uint64_t)&v164 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v176 = (uint64_t)&v164 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v164 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v164 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v164 - v38;
  if ((sub_23361D670() & 1) == 0)
    return 0;
  v171 = v19;
  v172 = v17;
  v170 = v22;
  v173 = v16;
  v174 = (int *)type metadata accessor for InternalAccount();
  v40 = v174[5];
  v41 = *(_QWORD *)(a1 + v40);
  v42 = *(_QWORD *)(a1 + v40 + 8);
  v43 = *(_QWORD *)(a1 + v40 + 16);
  v44 = *(_QWORD *)(a1 + v40 + 24);
  v45 = (_QWORD *)(a2 + v40);
  v47 = v45[2];
  v46 = v45[3];
  if (v41 == *v45 && v42 == v45[1] || (v48 = sub_23361F224(), result = 0, (v48 & 1) != 0))
  {
    if (v43 == v47 && v44 == v46 || (v50 = sub_23361F224(), result = 0, (v50 & 1) != 0))
    {
      v51 = v174;
      if ((sub_23361D670() & 1) == 0 || (sub_23322B8BC(*(_QWORD **)(a1 + v51[7]), *(_QWORD **)(a2 + v51[7])) & 1) == 0)
        return 0;
      v52 = v51[8];
      v53 = (_QWORD *)(a1 + v52);
      v54 = *(_QWORD *)(a1 + v52 + 8);
      v55 = (_QWORD *)(a2 + v52);
      v56 = v55[1];
      if (v54)
      {
        if (!v56)
          return 0;
        if (*v53 != *v55 || v54 != v56)
        {
          v57 = sub_23361F224();
          result = 0;
          if ((v57 & 1) == 0)
            return result;
        }
      }
      else if (v56)
      {
        return 0;
      }
      if (*(unsigned __int8 *)(a1 + v174[9]) != *(unsigned __int8 *)(a2 + v174[9]))
        return 0;
      v58 = v174[10];
      v59 = *(_QWORD *)(a1 + v58);
      v60 = *(_QWORD *)(a1 + v58 + 8);
      v61 = *(unsigned __int8 *)(a1 + v58 + 16);
      v62 = a2 + v58;
      v63 = *(unsigned __int8 *)(v62 + 16);
      if (v59 == *(_QWORD *)v62 && v60 == *(_QWORD *)(v62 + 8))
      {
        if (v61 != v63)
          return 0;
      }
      else
      {
        v64 = sub_23361F224();
        result = 0;
        if ((v64 & 1) == 0 || v61 != v63)
          return result;
      }
      v65 = v174[11];
      v66 = *(_QWORD *)(a1 + v65);
      v67 = *(_QWORD *)(a1 + v65 + 8);
      v68 = (_QWORD *)(a2 + v65);
      if (v66 != *v68 || v67 != v68[1])
      {
        v69 = sub_23361F224();
        result = 0;
        if ((v69 & 1) == 0)
          return result;
      }
      v70 = v174[12];
      v71 = (_QWORD *)(a1 + v70);
      v72 = *(_QWORD *)(a1 + v70 + 8);
      v73 = (_QWORD *)(a2 + v70);
      v74 = v73[1];
      if (v72)
      {
        if (!v74)
          return 0;
        if (*v71 != *v73 || v72 != v74)
        {
          v75 = sub_23361F224();
          result = 0;
          if ((v75 & 1) == 0)
            return result;
        }
      }
      else if (v74)
      {
        return 0;
      }
      v76 = v174[13];
      v77 = *(unsigned __int8 *)(a1 + v76);
      v78 = *(unsigned __int8 *)(a2 + v76);
      if (v77 == 4)
      {
        if (v78 != 4)
          return 0;
      }
      else
      {
        result = 0;
        if (v78 == 4 || v77 != v78)
          return result;
      }
      v79 = v174[14];
      v80 = *(_QWORD *)(a1 + v79);
      v81 = *(_QWORD *)(a1 + v79 + 8);
      v82 = (_QWORD *)(a2 + v79);
      if (v80 != *v82 || v81 != v82[1])
      {
        v83 = sub_23361F224();
        result = 0;
        if ((v83 & 1) == 0)
          return result;
      }
      v84 = v174[15];
      v85 = (uint64_t *)(a1 + v84);
      v86 = *(_QWORD *)(a1 + v84 + 32);
      v87 = (uint64_t *)(a2 + v84);
      v88 = v87[4];
      if (v86)
      {
        if (!v88)
          goto LABEL_50;
        v89 = *v85;
        v168 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v85[1];
        v169 = v89;
        v91 = v85[2];
        v90 = v85[3];
        v167 = v91;
        v165 = v90;
        v92 = *v87;
        v93 = v87[1];
        v94 = v87[2];
        v164 = v87[3];
        v166 = v86;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((MEMORY[0x234932E38](v169, v168, v167, v92, v93, v94) & 1) == 0)
          goto LABEL_51;
        if (v165 == v164 && v166 == v88)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          v95 = sub_23361F224();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          result = 0;
          if ((v95 & 1) == 0)
            return result;
        }
      }
      else if (v88)
      {
        goto LABEL_79;
      }
      v96 = v174;
      sub_2331686A0(a1 + v174[16], (uint64_t)v39, (uint64_t *)&unk_254247DA0);
      sub_2331686A0(a2 + v96[16], (uint64_t)v37, (uint64_t *)&unk_254247DA0);
      v97 = (uint64_t)&v24[*(int *)(v188 + 48)];
      sub_2331686A0((uint64_t)v39, (uint64_t)v24, (uint64_t *)&unk_254247DA0);
      v169 = v97;
      sub_2331686A0((uint64_t)v37, v97, (uint64_t *)&unk_254247DA0);
      v98 = v172;
      v99 = v173;
      v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48);
      if (v100((uint64_t)v24, 1, v173) == 1)
      {
        sub_233168608((uint64_t)v37, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v39, (uint64_t *)&unk_254247DA0);
        if (v100(v169, 1, v99) == 1)
        {
          v168 = v100;
          sub_233168608((uint64_t)v24, (uint64_t *)&unk_254247DA0);
LABEL_61:
          v105 = v174[17];
          v106 = (uint64_t *)(a1 + v105);
          v107 = *(_QWORD *)(a1 + v105 + 32);
          v108 = (uint64_t *)(a2 + v105);
          v109 = v108[4];
          if (!v107)
          {
            if (v109)
              goto LABEL_79;
            goto LABEL_70;
          }
          if (!v109)
            goto LABEL_50;
          v110 = *v106;
          v111 = v106[1];
          v112 = v106[2];
          v169 = v106[3];
          v114 = *v108;
          v113 = v108[1];
          v115 = v108[2];
          v167 = v108[3];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          if ((MEMORY[0x234932E38](v110, v111, v112, v114, v113, v115) & 1) != 0)
          {
            if (v169 == v167 && v107 == v109)
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
            }
            else
            {
              v116 = sub_23361F224();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              result = 0;
              if ((v116 & 1) == 0)
                return result;
            }
LABEL_70:
            v117 = v174[18];
            v118 = (uint64_t *)(a1 + v117);
            v119 = *(_QWORD *)(a1 + v117 + 32);
            v120 = (uint64_t *)(a2 + v117);
            v121 = v120[4];
            if (!v119)
            {
              if (!v121)
              {
LABEL_83:
                v129 = v174;
                v130 = v185;
                sub_2331686A0(a1 + v174[19], v185, &qword_256042590);
                v131 = v184;
                sub_2331686A0(a2 + v129[19], v184, &qword_256042590);
                v132 = v187;
                v133 = v187 + *(int *)(v181 + 48);
                sub_2331686A0(v130, v187, &qword_256042590);
                sub_2331686A0(v131, v133, &qword_256042590);
                v134 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v182 + 48);
                if (v134(v132, 1, v186) == 1)
                {
                  sub_233168608(v184, &qword_256042590);
                  sub_233168608(v185, &qword_256042590);
                  if (v134(v133, 1, v186) == 1)
                  {
                    sub_233168608(v187, &qword_256042590);
                    goto LABEL_91;
                  }
                  goto LABEL_88;
                }
                sub_2331686A0(v187, v183, &qword_256042590);
                if (v134(v133, 1, v186) == 1)
                {
                  sub_233168608(v184, &qword_256042590);
                  sub_233168608(v185, &qword_256042590);
                  sub_233168500(v183, type metadata accessor for InternalAccountBalance);
LABEL_88:
                  v101 = &qword_2560426C0;
                  v102 = v187;
                  goto LABEL_59;
                }
                v135 = v180;
                sub_233168580(v133, v180, type metadata accessor for InternalAccountBalance);
                v136 = v183;
                v137 = sub_23361D670();
                sub_2331684BC(v136, v179, type metadata accessor for InternalAccountBalance);
                sub_2331684BC(v135, v178, type metadata accessor for InternalAccountBalance);
                if ((v137 & 1) != 0)
                {
                  v139 = v178;
                  v138 = v179;
                  v140 = _s10FinanceKit18BalanceCalculationO2eeoiySbAC_ACtFZ_0(v179 + *(int *)(v186 + 20), v178 + *(int *)(v186 + 20));
                  sub_233168500(v139, type metadata accessor for InternalAccountBalance);
                  sub_233168500(v138, type metadata accessor for InternalAccountBalance);
                  sub_233168500(v180, type metadata accessor for InternalAccountBalance);
                  sub_233168608(v184, &qword_256042590);
                  sub_233168608(v185, &qword_256042590);
                  sub_233168500(v183, type metadata accessor for InternalAccountBalance);
                  sub_233168608(v187, &qword_256042590);
                  if ((v140 & 1) == 0)
                    return 0;
LABEL_91:
                  if (!_s10FinanceKit7ActionsV2eeoiySbAC_ACtFZ_0(a1 + v174[20], a2 + v174[20])
                    || *(unsigned __int8 *)(a1 + v174[21]) != *(unsigned __int8 *)(a2 + v174[21])
                    || *(unsigned __int8 *)(a1 + v174[22]) != *(unsigned __int8 *)(a2 + v174[22]))
                  {
                    return 0;
                  }
                  v141 = v174[23];
                  v142 = *(unsigned __int8 *)(a1 + v141);
                  v143 = *(unsigned __int8 *)(a2 + v141);
                  if (v142 == 2)
                  {
                    if (v143 != 2)
                      return 0;
                  }
                  else
                  {
                    result = 0;
                    if (v143 == 2 || ((v143 ^ v142) & 1) != 0)
                      return result;
                  }
                  v144 = v174[24];
                  v145 = *(unsigned __int8 *)(a1 + v144);
                  v146 = *(unsigned __int8 *)(a2 + v144);
                  if (v145 == 2)
                  {
                    if (v146 != 2)
                      return 0;
                  }
                  else
                  {
                    result = 0;
                    if (v146 == 2 || ((v146 ^ v145) & 1) != 0)
                      return result;
                  }
                  if (*(unsigned __int8 *)(a1 + v174[25]) == *(unsigned __int8 *)(a2 + v174[25]))
                  {
                    v147 = v174[26];
                    v148 = *(_QWORD *)(a1 + v147);
                    v149 = *(_QWORD *)(a1 + v147 + 8);
                    v150 = (_QWORD *)(a2 + v147);
                    if (v148 != *v150 || v149 != v150[1])
                    {
                      v151 = sub_23361F224();
                      result = 0;
                      if ((v151 & 1) == 0)
                        return result;
                    }
                    if (*(unsigned __int8 *)(a1 + v174[27]) == *(unsigned __int8 *)(a2 + v174[27]))
                    {
                      v152 = v174;
                      v153 = a1 + v174[28];
                      v154 = v176;
                      sub_2331686A0(v153, v176, (uint64_t *)&unk_254247DA0);
                      v155 = v175;
                      sub_2331686A0(a2 + v152[28], v175, (uint64_t *)&unk_254247DA0);
                      v156 = (uint64_t)v170;
                      v157 = (uint64_t)&v170[*(int *)(v188 + 48)];
                      sub_2331686A0(v154, (uint64_t)v170, (uint64_t *)&unk_254247DA0);
                      sub_2331686A0(v155, v157, (uint64_t *)&unk_254247DA0);
                      if (v168(v156, 1, v173) == 1)
                      {
                        sub_233168608(v175, (uint64_t *)&unk_254247DA0);
                        sub_233168608(v176, (uint64_t *)&unk_254247DA0);
                        if (v168(v157, 1, v173) == 1)
                        {
                          sub_233168608((uint64_t)v170, (uint64_t *)&unk_254247DA0);
                          return 1;
                        }
                      }
                      else
                      {
                        sub_2331686A0((uint64_t)v170, v177, (uint64_t *)&unk_254247DA0);
                        if (v168(v157, 1, v173) != 1)
                        {
                          v159 = v171;
                          v158 = v172;
                          v160 = v173;
                          (*(void (**)(char *, uint64_t, uint64_t))(v172 + 32))(v171, v157, v173);
                          sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                          v161 = v177;
                          v162 = sub_23361E108();
                          v163 = *(void (**)(char *, uint64_t))(v158 + 8);
                          v163(v159, v160);
                          sub_233168608(v175, (uint64_t *)&unk_254247DA0);
                          sub_233168608(v176, (uint64_t *)&unk_254247DA0);
                          v163((char *)v161, v160);
                          sub_233168608((uint64_t)v170, (uint64_t *)&unk_254247DA0);
                          return (v162 & 1) != 0;
                        }
                        sub_233168608(v175, (uint64_t *)&unk_254247DA0);
                        sub_233168608(v176, (uint64_t *)&unk_254247DA0);
                        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v177, v173);
                      }
                      v101 = &qword_256042DA0;
                      v102 = (uint64_t)v170;
                      goto LABEL_59;
                    }
                  }
                  return 0;
                }
                sub_233168500(v178, type metadata accessor for InternalAccountBalance);
                sub_233168500(v179, type metadata accessor for InternalAccountBalance);
                sub_233168500(v180, type metadata accessor for InternalAccountBalance);
                sub_233168608(v184, &qword_256042590);
                sub_233168608(v185, &qword_256042590);
                sub_233168500(v183, type metadata accessor for InternalAccountBalance);
                v102 = v187;
                v101 = &qword_256042590;
LABEL_59:
                sub_233168608(v102, v101);
                return 0;
              }
LABEL_79:
              swift_bridgeObjectRelease();
              return 0;
            }
            if (v121)
            {
              v122 = *v118;
              v123 = v118[1];
              v124 = v118[2];
              v169 = v118[3];
              v126 = *v120;
              v125 = v120[1];
              v127 = v120[2];
              v167 = v120[3];
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if ((MEMORY[0x234932E38](v122, v123, v124, v126, v125, v127) & 1) != 0)
              {
                if (v169 == v167 && v119 == v121)
                {
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v128 = sub_23361F224();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  result = 0;
                  if ((v128 & 1) == 0)
                    return result;
                }
                goto LABEL_83;
              }
              goto LABEL_51;
            }
LABEL_50:
            swift_bridgeObjectRetain();
            goto LABEL_79;
          }
LABEL_51:
          swift_bridgeObjectRelease_n();
          goto LABEL_79;
        }
      }
      else
      {
        sub_2331686A0((uint64_t)v24, (uint64_t)v34, (uint64_t *)&unk_254247DA0);
        v168 = v100;
        if (v100(v169, 1, v99) != 1)
        {
          v103 = v171;
          (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v171, v169, v99);
          sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
          LODWORD(v169) = sub_23361E108();
          v104 = *(void (**)(char *, uint64_t))(v98 + 8);
          v104(v103, v99);
          sub_233168608((uint64_t)v37, (uint64_t *)&unk_254247DA0);
          sub_233168608((uint64_t)v39, (uint64_t *)&unk_254247DA0);
          v104(v34, v99);
          sub_233168608((uint64_t)v24, (uint64_t *)&unk_254247DA0);
          if ((v169 & 1) == 0)
            return 0;
          goto LABEL_61;
        }
        sub_233168608((uint64_t)v37, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v39, (uint64_t *)&unk_254247DA0);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v34, v99);
      }
      v101 = &qword_256042DA0;
      v102 = (uint64_t)v24;
      goto LABEL_59;
    }
  }
  return result;
}

unint64_t sub_2331721C8()
{
  unint64_t result;

  result = qword_2560425A0;
  if (!qword_2560425A0)
  {
    result = MEMORY[0x234934494](&unk_23362529C, &type metadata for InternalAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560425A0);
  }
  return result;
}

unint64_t sub_23317220C()
{
  unint64_t result;

  result = qword_2560578C0;
  if (!qword_2560578C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedAccountIdentifier, &type metadata for FullyQualifiedAccountIdentifier);
    atomic_store(result, (unint64_t *)&qword_2560578C0);
  }
  return result;
}

unint64_t sub_233172250()
{
  unint64_t result;

  result = qword_2560425B0;
  if (!qword_2560425B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountType, &type metadata for AccountType);
    atomic_store(result, (unint64_t *)&qword_2560425B0);
  }
  return result;
}

unint64_t sub_233172294()
{
  unint64_t result;

  result = qword_2560425B8;
  if (!qword_2560425B8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumber, &type metadata for AccountNumber);
    atomic_store(result, (unint64_t *)&qword_2560425B8);
  }
  return result;
}

unint64_t sub_2331722D8()
{
  unint64_t result;

  result = qword_2560425C0;
  if (!qword_2560425C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountStatus, &type metadata for AccountStatus);
    atomic_store(result, (unint64_t *)&qword_2560425C0);
  }
  return result;
}

unint64_t sub_23317231C()
{
  unint64_t result;

  result = qword_2560565F0;
  if (!qword_2560565F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for CurrencyAmount, &type metadata for CurrencyAmount);
    atomic_store(result, (unint64_t *)&qword_2560565F0);
  }
  return result;
}

unint64_t sub_233172360()
{
  unint64_t result;

  result = qword_2560425D0;
  if (!qword_2560425D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectRefreshFailure, &type metadata for BankConnectRefreshFailure);
    atomic_store(result, (unint64_t *)&qword_2560425D0);
  }
  return result;
}

unint64_t sub_2331723A4()
{
  unint64_t result;

  result = qword_2560425D8;
  if (!qword_2560425D8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountOriginType, &type metadata for AccountOriginType);
    atomic_store(result, (unint64_t *)&qword_2560425D8);
  }
  return result;
}

unint64_t sub_2331723E8()
{
  unint64_t result;

  result = qword_2560578F0;
  if (!qword_2560578F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedAccountIdentifier, &type metadata for FullyQualifiedAccountIdentifier);
    atomic_store(result, (unint64_t *)&qword_2560578F0);
  }
  return result;
}

uint64_t sub_23317242C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246588);
    v8 = a2;
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23317248C()
{
  unint64_t result;

  result = qword_2560425F0;
  if (!qword_2560425F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountType, &type metadata for AccountType);
    atomic_store(result, (unint64_t *)&qword_2560425F0);
  }
  return result;
}

unint64_t sub_2331724D0()
{
  unint64_t result;

  result = qword_2560425F8;
  if (!qword_2560425F8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountNumber, &type metadata for AccountNumber);
    atomic_store(result, (unint64_t *)&qword_2560425F8);
  }
  return result;
}

unint64_t sub_233172514()
{
  unint64_t result;

  result = qword_256042600;
  if (!qword_256042600)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountStatus, &type metadata for AccountStatus);
    atomic_store(result, (unint64_t *)&qword_256042600);
  }
  return result;
}

unint64_t sub_233172558()
{
  unint64_t result;

  result = qword_256042608;
  if (!qword_256042608)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for CurrencyAmount, &type metadata for CurrencyAmount);
    atomic_store(result, (unint64_t *)&qword_256042608);
  }
  return result;
}

unint64_t sub_23317259C()
{
  unint64_t result;

  result = qword_256042620;
  if (!qword_256042620)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectRefreshFailure, &type metadata for BankConnectRefreshFailure);
    atomic_store(result, (unint64_t *)&qword_256042620);
  }
  return result;
}

unint64_t sub_2331725E0()
{
  unint64_t result;

  result = qword_256042628;
  if (!qword_256042628)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountOriginType, &type metadata for AccountOriginType);
    atomic_store(result, (unint64_t *)&qword_256042628);
  }
  return result;
}

unint64_t sub_233172624()
{
  unint64_t result;

  result = qword_256042638;
  if (!qword_256042638)
  {
    result = MEMORY[0x234934494](&unk_23362524C, &type metadata for FullyQualifiedAccountIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042638);
  }
  return result;
}

uint64_t sub_233172668()
{
  return sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_233172694()
{
  return sub_233167C58(&qword_256042658, (uint64_t (*)(uint64_t))type metadata accessor for InternalAccount, (uint64_t)&protocol conformance descriptor for InternalAccount);
}

unint64_t sub_2331726C4()
{
  unint64_t result;

  result = qword_256042660;
  if (!qword_256042660)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FullyQualifiedAccountIdentifier, &type metadata for FullyQualifiedAccountIdentifier);
    atomic_store(result, (unint64_t *)&qword_256042660);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InternalAccount(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  void (*v125)(char *, char *, uint64_t);
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int (*v133)(char *, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *__dst;
  void (**__dsta)(void *, const void *, uint64_t);
  _QWORD *v138;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = *((_QWORD *)v12 + 3);
    *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
    *((_QWORD *)v11 + 3) = v14;
    v15 = &a1[v10];
    v16 = &a2[v10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v125 = v8;
    v129 = v7;
    v8(v15, v16, v7);
    v17 = a3[8];
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v132 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v132;
    v20 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v21[16] = v22[16];
    v24 = a3[11];
    v25 = a3[12];
    v26 = &a1[v24];
    v27 = &a2[v24];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = &a1[v25];
    v30 = &a2[v25];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = a3[15];
    v37 = a3[16];
    v38 = &a1[v36];
    v39 = &a2[v36];
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *((_DWORD *)v38 + 4) = *((_DWORD *)v39 + 4);
    v40 = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 3) = *((_QWORD *)v39 + 3);
    *((_QWORD *)v38 + 4) = v40;
    __dst = &a1[v37];
    v138 = a2;
    v41 = &a2[v37];
    v42 = sub_23361D634();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v133 = v44;
    v134 = v43;
    v135 = v42;
    if (v44(v41, 1, v42))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
    }
    v47 = a3[17];
    v48 = a3[18];
    v49 = &a1[v47];
    v50 = (char *)v138 + v47;
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_DWORD *)v49 + 4) = *((_DWORD *)v50 + 4);
    v51 = *((_QWORD *)v50 + 4);
    *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
    *((_QWORD *)v49 + 4) = v51;
    v52 = &a1[v48];
    v53 = (char *)v138 + v48;
    *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    v54 = *((_QWORD *)v53 + 4);
    *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
    *((_QWORD *)v52 + 4) = v54;
    v55 = a3[19];
    v56 = &a1[v55];
    v57 = (char *)v138 + v55;
    v58 = type metadata accessor for InternalAccountBalance(0);
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60(v57, 1, v58))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v125(v56, v57, v129);
      v62 = *(int *)(v58 + 20);
      v63 = &v56[v62];
      v64 = &v57[v62];
      type metadata accessor for BalanceCalculation(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *((_DWORD *)v63 + 4) = *((_DWORD *)v64 + 4);
        v73 = *((_QWORD *)v64 + 4);
        *((_QWORD *)v63 + 3) = *((_QWORD *)v64 + 3);
        *((_QWORD *)v63 + 4) = v73;
        v74 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v75 = *(int *)(v74 + 20);
        v127 = &v63[v75];
        v131 = v74;
        v122 = &v64[v75];
        v76 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
        v124 = v76;
        swift_bridgeObjectRetain();
        v76(v127, v122, v135);
        v128 = v59;
        v63[*(int *)(v131 + 24)] = v64[*(int *)(v131 + 24)];
        v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
        v78 = &v63[v77];
        v79 = &v64[v77];
        *(_OWORD *)v78 = *(_OWORD *)v79;
        *((_DWORD *)v78 + 4) = *((_DWORD *)v79 + 4);
        v80 = *((_QWORD *)v79 + 4);
        *((_QWORD *)v78 + 3) = *((_QWORD *)v79 + 3);
        *((_QWORD *)v78 + 4) = v80;
        v81 = *(int *)(v131 + 20);
        v82 = &v78[v81];
        v83 = &v79[v81];
        swift_bridgeObjectRetain();
        v84 = v82;
        v68 = v124;
        v124(v84, v83, v135);
        v85 = *(int *)(v131 + 24);
        v71 = &v78[v85];
        v69 = v135;
        v72 = &v79[v85];
        v59 = v128;
      }
      else
      {
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *((_DWORD *)v63 + 4) = *((_DWORD *)v64 + 4);
        v65 = *((_QWORD *)v64 + 4);
        *((_QWORD *)v63 + 3) = *((_QWORD *)v64 + 3);
        *((_QWORD *)v63 + 4) = v65;
        v66 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v67 = *(int *)(v66 + 20);
        v126 = &v63[v67];
        v130 = v66;
        v123 = &v64[v67];
        v68 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
        swift_bridgeObjectRetain();
        v69 = v135;
        v68(v126, v123, v135);
        v70 = *(int *)(v130 + 24);
        v71 = &v63[v70];
        v72 = &v64[v70];
      }
      *v71 = *v72;
      swift_storeEnumTagMultiPayload();
      v68(&v56[*(int *)(v58 + 24)], &v57[*(int *)(v58 + 24)], v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    v86 = a3[20];
    v87 = &a1[v86];
    v88 = (char *)v138 + v86;
    v89 = sub_23361D340();
    v90 = *(_QWORD *)(v89 - 8);
    v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
    __dsta = (void (**)(void *, const void *, uint64_t))v90;
    if (v91(v88, 1, v89))
    {
      v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
    }
    v93 = (int *)type metadata accessor for Actions();
    v94 = v93[5];
    v95 = &v87[v94];
    v96 = &v88[v94];
    if (v91(&v88[v94], 1, v89))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      __dsta[2](v95, v96, v89);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v95, 0, 1, v89);
    }
    v98 = v93[6];
    v99 = &v87[v98];
    v100 = &v88[v98];
    if (v91(&v88[v98], 1, v89))
    {
      v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    }
    else
    {
      __dsta[2](v99, v100, v89);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v99, 0, 1, v89);
    }
    v102 = v93[7];
    v103 = &v87[v102];
    v104 = &v88[v102];
    if (v91(&v88[v102], 1, v89))
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      __dsta[2](v103, v104, v89);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v103, 0, 1, v89);
    }
    v106 = v93[8];
    v107 = &v87[v106];
    v108 = &v88[v106];
    if (v91(v108, 1, v89))
    {
      v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    }
    else
    {
      __dsta[2](v107, v108, v89);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v107, 0, 1, v89);
    }
    v110 = a3[22];
    a1[a3[21]] = *((_BYTE *)v138 + a3[21]);
    a1[v110] = *((_BYTE *)v138 + v110);
    v111 = a3[24];
    a1[a3[23]] = *((_BYTE *)v138 + a3[23]);
    a1[v111] = *((_BYTE *)v138 + v111);
    v112 = a3[26];
    a1[a3[25]] = *((_BYTE *)v138 + a3[25]);
    v113 = &a1[v112];
    v114 = (_QWORD *)((char *)v138 + v112);
    v115 = v114[1];
    *(_QWORD *)v113 = *v114;
    *((_QWORD *)v113 + 1) = v115;
    v116 = a3[27];
    v117 = a3[28];
    v118 = &a1[v117];
    v119 = (char *)v138 + v117;
    a1[v116] = *((_BYTE *)v138 + v116);
    swift_bridgeObjectRetain();
    if (v133(v119, 1, v135))
    {
      v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v118, v119, v135);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v118, 0, 1, v135);
    }
  }
  return a1;
}

uint64_t destroy for InternalAccount(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int EnumCaseMultiPayload;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);

  v4 = sub_23361D6A0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[6], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[16];
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v28(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[19];
  v10 = type metadata accessor for InternalAccountBalance(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v5(v9, v4);
    v11 = v9 + *(int *)(v10 + 20);
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload < 2)
    {
      swift_bridgeObjectRelease();
      v16 = v11 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
      v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v14(v11 + *(int *)(v13 + 20), v7);
      v15 = v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      swift_bridgeObjectRelease();
      v16 = v15 + *(int *)(v13 + 20);
    }
    v14(v16, v7);
LABEL_10:
    v14(v9 + *(int *)(v10 + 24), v7);
  }
  v17 = a1 + a2[20];
  v18 = sub_23361D340();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (!v20(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  v21 = (int *)type metadata accessor for Actions();
  v22 = v17 + v21[5];
  if (!v20(v22, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
  v23 = v17 + v21[6];
  if (!v20(v23, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
  v24 = v17 + v21[7];
  if (!v20(v24, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v24, v18);
  v25 = v17 + v21[8];
  if (!v20(v25, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v18);
  swift_bridgeObjectRelease();
  v26 = a1 + a2[28];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(v26, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v26, v7);
  return result;
}

uint64_t initializeWithCopy for InternalAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(const void *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  int *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  const void *v114;
  uint64_t v115;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  void *__dst;
  uint64_t v126;
  unsigned int (*v127)(const void *, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int *v131;

  v6 = sub_23361D6A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v11[3];
  v10[2] = v11[2];
  v10[3] = v13;
  v14 = a1 + v9;
  v15 = a2 + v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v121 = (void (*)(char *, char *, uint64_t))v7;
  v124 = v6;
  v7(v14, v15, v6);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v126 = v18[1];
  *v17 = *v18;
  v17[1] = v126;
  v19 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  v23 = a3[11];
  v24 = a3[12];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_QWORD *)(a1 + v24);
  v29 = (_QWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[15];
  v36 = a3[16];
  v130 = a1;
  v131 = a3;
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_DWORD *)(v37 + 16) = *(_DWORD *)(v38 + 16);
  v39 = *(_QWORD *)(v38 + 32);
  *(_QWORD *)(v37 + 24) = *(_QWORD *)(v38 + 24);
  *(_QWORD *)(v37 + 32) = v39;
  __dst = (void *)(a1 + v36);
  v40 = (const void *)(a2 + v36);
  v41 = sub_23361D634();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v127 = v43;
  v128 = v42;
  v129 = v41;
  if (v43(v40, 1, v41))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(__dst, v40, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
  }
  v45 = v130;
  v46 = v131[17];
  v47 = v131[18];
  v48 = v130 + v46;
  v49 = a2 + v46;
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_DWORD *)(v48 + 16) = *(_DWORD *)(v49 + 16);
  v50 = *(_QWORD *)(v49 + 32);
  *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
  *(_QWORD *)(v48 + 32) = v50;
  v51 = v130 + v47;
  v52 = a2 + v47;
  *(_DWORD *)(v51 + 16) = *(_DWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  v53 = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
  *(_QWORD *)(v51 + 32) = v53;
  v54 = v131[19];
  v55 = (char *)(v130 + v54);
  v56 = (char *)(a2 + v54);
  v57 = type metadata accessor for InternalAccountBalance(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v59(v56, 1, v57))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v121(v55, v56, v124);
    v61 = *(int *)(v57 + 20);
    v62 = &v55[v61];
    v63 = &v56[v61];
    type metadata accessor for BalanceCalculation(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_DWORD *)v62 + 4) = *((_DWORD *)v63 + 4);
      v71 = *((_QWORD *)v63 + 4);
      *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
      *((_QWORD *)v62 + 4) = v71;
      v72 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v73 = *(int *)(v72 + 20);
      v123 = v58;
      v74 = v72;
      v75 = &v62[v73];
      v119 = &v63[v73];
      v76 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
      swift_bridgeObjectRetain();
      v77 = v75;
      v68 = v129;
      v76(v77, v119, v129);
      v62[*(int *)(v74 + 24)] = v63[*(int *)(v74 + 24)];
      v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v79 = &v62[v78];
      v63 += v78;
      *(_OWORD *)v79 = *(_OWORD *)v63;
      *((_DWORD *)v79 + 4) = *((_DWORD *)v63 + 4);
      v80 = *((_QWORD *)v63 + 4);
      *((_QWORD *)v79 + 3) = *((_QWORD *)v63 + 3);
      *((_QWORD *)v79 + 4) = v80;
      v81 = *(int *)(v74 + 20);
      v117 = &v63[v81];
      v120 = &v79[v81];
      swift_bridgeObjectRetain();
      v76(v120, v117, v129);
      v69 = *(int *)(v74 + 24);
      v58 = v123;
      v70 = &v79[v69];
      v67 = v76;
    }
    else
    {
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_DWORD *)v62 + 4) = *((_DWORD *)v63 + 4);
      v64 = *((_QWORD *)v63 + 4);
      *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
      *((_QWORD *)v62 + 4) = v64;
      v65 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v66 = *(int *)(v65 + 20);
      v118 = &v63[v66];
      v122 = &v62[v66];
      v67 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
      swift_bridgeObjectRetain();
      v68 = v129;
      v67(v122, v118, v129);
      v69 = *(int *)(v65 + 24);
      v70 = &v62[v69];
    }
    *v70 = v63[v69];
    swift_storeEnumTagMultiPayload();
    v67(&v55[*(int *)(v57 + 24)], &v56[*(int *)(v57 + 24)], v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    v45 = v130;
  }
  v82 = v131[20];
  v83 = (char *)(v45 + v82);
  v84 = (char *)(a2 + v82);
  v85 = sub_23361D340();
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  if (v87(v84, 1, v85))
  {
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
  }
  v89 = (int *)type metadata accessor for Actions();
  v90 = v89[5];
  v91 = &v83[v90];
  v92 = &v84[v90];
  if (v87(&v84[v90], 1, v85))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v91, v92, v85);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v91, 0, 1, v85);
  }
  v94 = v89[6];
  v95 = &v83[v94];
  v96 = &v84[v94];
  if (v87(&v84[v94], 1, v85))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v95, v96, v85);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v95, 0, 1, v85);
  }
  v98 = v89[7];
  v99 = &v83[v98];
  v100 = &v84[v98];
  if (v87(&v84[v98], 1, v85))
  {
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v99, v100, v85);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v99, 0, 1, v85);
  }
  v102 = v89[8];
  v103 = &v83[v102];
  v104 = &v84[v102];
  if (v87(v104, 1, v85))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v103, v104, v85);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v103, 0, 1, v85);
  }
  v106 = v131[22];
  *(_BYTE *)(v45 + v131[21]) = *(_BYTE *)(a2 + v131[21]);
  *(_BYTE *)(v45 + v106) = *(_BYTE *)(a2 + v106);
  v107 = v131[24];
  *(_BYTE *)(v45 + v131[23]) = *(_BYTE *)(a2 + v131[23]);
  *(_BYTE *)(v45 + v107) = *(_BYTE *)(a2 + v107);
  v108 = v131[26];
  *(_BYTE *)(v45 + v131[25]) = *(_BYTE *)(a2 + v131[25]);
  v109 = (_QWORD *)(v45 + v108);
  v110 = (_QWORD *)(a2 + v108);
  v111 = v110[1];
  *v109 = *v110;
  v109[1] = v111;
  v112 = v131[28];
  v113 = (void *)(v45 + v112);
  v114 = (const void *)(a2 + v112);
  *(_BYTE *)(v45 + v131[27]) = *(_BYTE *)(a2 + v131[27]);
  swift_bridgeObjectRetain();
  if (v127(v114, 1, v129))
  {
    v115 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v128 + 16))(v113, v114, v129);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v113, 0, 1, v129);
  }
  return v130;
}

uint64_t assignWithCopy for InternalAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int EnumCaseMultiPayload;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  char *v97;
  char *v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  void *v144;
  const void *v145;
  int v146;
  int v147;
  uint64_t v148;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t);
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(uint64_t, uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  int *v168;
  uint64_t v169;
  char *v170;
  void (*v171)(char *, char *, uint64_t);
  char *v172;
  uint64_t v173;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = *(_QWORD *)(a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v10[3] = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8(a1 + a3[6], a2 + a3[6], v6);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v15 = a3[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v18 = a3[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v24 = a3[14];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[15];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_WORD *)(v28 + 4) = *(_WORD *)(v29 + 4);
  *(_WORD *)(v28 + 6) = *(_WORD *)(v29 + 6);
  *(_WORD *)(v28 + 8) = *(_WORD *)(v29 + 8);
  *(_WORD *)(v28 + 10) = *(_WORD *)(v29 + 10);
  *(_WORD *)(v28 + 12) = *(_WORD *)(v29 + 12);
  *(_WORD *)(v28 + 14) = *(_WORD *)(v29 + 14);
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  *(_WORD *)(v28 + 18) = *(_WORD *)(v29 + 18);
  *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v168 = a3;
  v30 = a3[16];
  v31 = (void *)(a1 + v30);
  v32 = (void *)(a2 + v30);
  v33 = sub_23361D634();
  v167 = *(_QWORD *)(v33 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v167 + 48);
  LODWORD(a3) = v34(v31, 1, v33);
  v35 = v34(v32, 1, v33);
  v165 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
  v166 = v33;
  v169 = v7;
  if ((_DWORD)a3)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v167 + 16))(v31, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v31, 0, 1, v33);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v167 + 8))(v31, v33);
LABEL_6:
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v167 + 24))(v31, v32, v33);
LABEL_7:
  v37 = v168[17];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_WORD *)(v38 + 4) = *(_WORD *)(v39 + 4);
  *(_WORD *)(v38 + 6) = *(_WORD *)(v39 + 6);
  *(_WORD *)(v38 + 8) = *(_WORD *)(v39 + 8);
  *(_WORD *)(v38 + 10) = *(_WORD *)(v39 + 10);
  *(_WORD *)(v38 + 12) = *(_WORD *)(v39 + 12);
  *(_WORD *)(v38 + 14) = *(_WORD *)(v39 + 14);
  *(_WORD *)(v38 + 16) = *(_WORD *)(v39 + 16);
  *(_WORD *)(v38 + 18) = *(_WORD *)(v39 + 18);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = v168[18];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *(_WORD *)(v41 + 4) = *(_WORD *)(v42 + 4);
  *(_WORD *)(v41 + 6) = *(_WORD *)(v42 + 6);
  *(_WORD *)(v41 + 8) = *(_WORD *)(v42 + 8);
  *(_WORD *)(v41 + 10) = *(_WORD *)(v42 + 10);
  *(_WORD *)(v41 + 12) = *(_WORD *)(v42 + 12);
  *(_WORD *)(v41 + 14) = *(_WORD *)(v42 + 14);
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  *(_WORD *)(v41 + 18) = *(_WORD *)(v42 + 18);
  *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v168[19];
  v44 = (char *)(a1 + v43);
  v45 = (char *)(a2 + v43);
  v46 = type metadata accessor for InternalAccountBalance(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v44, v45, v6);
      v51 = *(int *)(v46 + 20);
      v52 = &v44[v51];
      v53 = &v45[v51];
      type metadata accessor for BalanceCalculation(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v76 = *(_OWORD *)v53;
        *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
        *(_OWORD *)v52 = v76;
        *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
        *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
        v77 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v78 = *(int *)(v77 + 20);
        v152 = &v52[v78];
        v158 = v77;
        v150 = &v53[v78];
        v79 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
        v171 = v79;
        swift_bridgeObjectRetain();
        v79(v152, v150, v166);
        v52[*(int *)(v158 + 24)] = v53[*(int *)(v158 + 24)];
        v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
        v81 = &v52[v80];
        v53 += v80;
        v82 = *(_OWORD *)v53;
        *((_DWORD *)v81 + 4) = *((_DWORD *)v53 + 4);
        *(_OWORD *)v81 = v82;
        *((_QWORD *)v81 + 3) = *((_QWORD *)v53 + 3);
        *((_QWORD *)v81 + 4) = *((_QWORD *)v53 + 4);
        v83 = *(int *)(v158 + 20);
        v84 = &v81[v83];
        v153 = &v53[v83];
        swift_bridgeObjectRetain();
        v171(v84, v153, v166);
        v61 = *(int *)(v158 + 24);
        v62 = &v81[v61];
        v60 = v166;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v86 = *(_OWORD *)v53;
          *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
          *(_OWORD *)v52 = v86;
          *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
          *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
          v87 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
          v88 = *(int *)(v87 + 20);
          v172 = &v52[v88];
          v154 = &v53[v88];
          v159 = v87;
          v89 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
          swift_bridgeObjectRetain();
          v90 = v172;
          v60 = v166;
          v171 = v89;
          v89(v90, v154, v166);
          v91 = *(int *)(v159 + 24);
          v62 = &v52[v91];
          v85 = &v53[v91];
          goto LABEL_24;
        }
        v55 = *(_OWORD *)v53;
        *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
        *(_OWORD *)v52 = v55;
        *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
        *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
        v56 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v57 = *(int *)(v56 + 20);
        v170 = &v52[v57];
        v151 = &v53[v57];
        v156 = v56;
        v58 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
        swift_bridgeObjectRetain();
        v59 = v170;
        v60 = v166;
        v171 = v58;
        v58(v59, v151, v166);
        v61 = *(int *)(v156 + 24);
        v62 = &v52[v61];
      }
      v85 = &v53[v61];
LABEL_24:
      *v62 = *v85;
      swift_storeEnumTagMultiPayload();
      v171(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_29;
    }
LABEL_14:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_29;
  }
  if (v50)
  {
    sub_233168500((uint64_t)v44, type metadata accessor for InternalAccountBalance);
    goto LABEL_14;
  }
  v8((uint64_t)v44, (uint64_t)v45, v6);
  v64 = v166;
  if (a1 != a2)
  {
    v65 = *(int *)(v46 + 20);
    v66 = &v44[v65];
    v67 = &v45[v65];
    sub_233168500((uint64_t)&v44[v65], type metadata accessor for BalanceCalculation);
    type metadata accessor for BalanceCalculation(0);
    v68 = swift_getEnumCaseMultiPayload();
    if (v68 == 2)
    {
      v92 = *(_OWORD *)v67;
      *((_DWORD *)v66 + 4) = *((_DWORD *)v67 + 4);
      *(_OWORD *)v66 = v92;
      *((_QWORD *)v66 + 3) = *((_QWORD *)v67 + 3);
      *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
      v93 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v94 = *(int *)(v93 + 20);
      v162 = &v66[v94];
      v164 = v93;
      v155 = &v67[v94];
      v95 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
      v160 = v95;
      swift_bridgeObjectRetain();
      v95(v162, v155, v166);
      v66[*(int *)(v164 + 24)] = v67[*(int *)(v164 + 24)];
      v96 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v97 = &v66[v96];
      v98 = &v67[v96];
      v99 = *(_OWORD *)&v67[v96];
      *((_DWORD *)v97 + 4) = *(_DWORD *)&v67[v96 + 16];
      *(_OWORD *)v97 = v99;
      *((_QWORD *)v97 + 3) = *(_QWORD *)&v67[v96 + 24];
      *((_QWORD *)v97 + 4) = *(_QWORD *)&v67[v96 + 32];
      v100 = *(int *)(v164 + 20);
      v101 = &v97[v100];
      v102 = &v98[v100];
      swift_bridgeObjectRetain();
      v103 = v102;
      v64 = v166;
      v160(v101, v103, v166);
      v104 = *(int *)(v164 + 24);
      v74 = &v97[v104];
      v75 = &v98[v104];
    }
    else
    {
      v69 = *(_OWORD *)v67;
      *((_DWORD *)v66 + 4) = *((_DWORD *)v67 + 4);
      *(_OWORD *)v66 = v69;
      *((_QWORD *)v66 + 3) = *((_QWORD *)v67 + 3);
      *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
      if (v68 == 1)
      {
        v70 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v71 = *(int *)(v70 + 20);
        v161 = &v66[v71];
        v163 = v70;
        v157 = &v67[v71];
        v72 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
        v64 = v166;
        swift_bridgeObjectRetain();
      }
      else
      {
        v105 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v106 = *(int *)(v105 + 20);
        v161 = &v66[v106];
        v163 = v105;
        v157 = &v67[v106];
        v72 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
        swift_bridgeObjectRetain();
        v64 = v166;
      }
      v72(v161, v157, v166);
      v73 = *(int *)(v163 + 24);
      v74 = &v66[v73];
      v75 = &v67[v73];
    }
    *v74 = *v75;
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, char *, uint64_t))(v167 + 24))(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v64);
LABEL_29:
  v107 = v168[20];
  v108 = (char *)(a1 + v107);
  v109 = (char *)(a2 + v107);
  v110 = sub_23361D340();
  v173 = *(_QWORD *)(v110 - 8);
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v173 + 48);
  v112 = v111(v108, 1, v110);
  v113 = v111(v109, 1, v110);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v108, v109, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v108, 0, 1, v110);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v173 + 8))(v108, v110);
LABEL_34:
    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v108, v109, v110);
LABEL_35:
  v115 = (int *)type metadata accessor for Actions();
  v116 = v115[5];
  v117 = &v108[v116];
  v118 = &v109[v116];
  v119 = v111(&v108[v116], 1, v110);
  v120 = v111(v118, 1, v110);
  if (v119)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v117, v118, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v117, 0, 1, v110);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v120)
  {
    (*(void (**)(char *, uint64_t))(v173 + 8))(v117, v110);
LABEL_40:
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v117, v118, v110);
LABEL_41:
  v122 = v115[6];
  v123 = &v108[v122];
  v124 = &v109[v122];
  v125 = v111(&v108[v122], 1, v110);
  v126 = v111(v124, 1, v110);
  if (v125)
  {
    if (!v126)
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v123, v124, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v123, 0, 1, v110);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v126)
  {
    (*(void (**)(char *, uint64_t))(v173 + 8))(v123, v110);
LABEL_46:
    v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v123, v124, v110);
LABEL_47:
  v128 = v115[7];
  v129 = &v108[v128];
  v130 = &v109[v128];
  v131 = v111(&v108[v128], 1, v110);
  v132 = v111(v130, 1, v110);
  if (v131)
  {
    if (!v132)
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v129, v130, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v129, 0, 1, v110);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v132)
  {
    (*(void (**)(char *, uint64_t))(v173 + 8))(v129, v110);
LABEL_52:
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v129, v130, v110);
LABEL_53:
  v134 = v115[8];
  v135 = &v108[v134];
  v136 = &v109[v134];
  v137 = v111(v135, 1, v110);
  v138 = v111(v136, 1, v110);
  if (v137)
  {
    if (!v138)
    {
      (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v135, v136, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v135, 0, 1, v110);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v138)
  {
    (*(void (**)(char *, uint64_t))(v173 + 8))(v135, v110);
LABEL_58:
    v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(char *, char *, uint64_t))(v173 + 24))(v135, v136, v110);
LABEL_59:
  *(_BYTE *)(a1 + v168[21]) = *(_BYTE *)(a2 + v168[21]);
  *(_BYTE *)(a1 + v168[22]) = *(_BYTE *)(a2 + v168[22]);
  *(_BYTE *)(a1 + v168[23]) = *(_BYTE *)(a2 + v168[23]);
  *(_BYTE *)(a1 + v168[24]) = *(_BYTE *)(a2 + v168[24]);
  *(_BYTE *)(a1 + v168[25]) = *(_BYTE *)(a2 + v168[25]);
  v140 = v168[26];
  v141 = (_QWORD *)(a1 + v140);
  v142 = (_QWORD *)(a2 + v140);
  *v141 = *v142;
  v141[1] = v142[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v168[27]) = *(_BYTE *)(a2 + v168[27]);
  v143 = v168[28];
  v144 = (void *)(a1 + v143);
  v145 = (const void *)(a2 + v143);
  v146 = v165(a1 + v143, 1, v166);
  v147 = v165((uint64_t)v145, 1, v166);
  if (!v146)
  {
    if (!v147)
    {
      (*(void (**)(void *, const void *, uint64_t))(v167 + 24))(v144, v145, v166);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v167 + 8))(v144, v166);
    goto LABEL_64;
  }
  if (v147)
  {
LABEL_64:
    v148 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v167 + 16))(v144, v145, v166);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v144, 0, 1, v166);
  return a1;
}

uint64_t initializeWithTake for InternalAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(const void *, uint64_t, uint64_t);
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;

  v6 = sub_23361D6A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v7(a1 + v9, a2 + v9, v6);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  v17 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[15];
  v20 = a3[16];
  v21 = a1 + v19;
  v22 = (__int128 *)(a2 + v19);
  v23 = *v22;
  v24 = v22[1];
  *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
  *(_OWORD *)v21 = v23;
  *(_OWORD *)(v21 + 16) = v24;
  v25 = (void *)(a1 + v20);
  v26 = (const void *)(a2 + v20);
  v27 = sub_23361D634();
  v28 = *(_QWORD *)(v27 - 8);
  v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  v89 = v28;
  if (v90(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[17];
  v31 = a3[18];
  v32 = a1 + v30;
  v33 = a2 + v30;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  v35 = a1 + v31;
  v36 = a2 + v31;
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  v38 = a3[19];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = type metadata accessor for InternalAccountBalance(0);
  v42 = *(_QWORD *)(v41 - 8);
  v91 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v39, (uint64_t)v40, v6);
    v44 = *(int *)(v41 + 20);
    v45 = &v39[v44];
    v46 = &v40[v44];
    type metadata accessor for BalanceCalculation(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v50 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v50;
      *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
      v87 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v92 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
      v92(&v45[*(int *)(v87 + 20)], &v46[*(int *)(v87 + 20)], v27);
      v45[*(int *)(v87 + 24)] = v46[*(int *)(v87 + 24)];
      v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v52 = &v45[v51];
      v46 += v51;
      v53 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v52 = *(_OWORD *)v46;
      *((_OWORD *)v52 + 1) = v53;
      *((_QWORD *)v52 + 4) = *((_QWORD *)v46 + 4);
      v92(&v45[v51 + *(int *)(v87 + 20)], &v46[*(int *)(v87 + 20)], v91);
      v48 = *(int *)(v87 + 24);
      v49 = &v52[v48];
      v27 = v91;
    }
    else
    {
      v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
      *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
      v88 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v92 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
      v92(&v45[*(int *)(v88 + 20)], &v46[*(int *)(v88 + 20)], v27);
      v48 = *(int *)(v88 + 24);
      v49 = &v45[v48];
    }
    *v49 = v46[v48];
    swift_storeEnumTagMultiPayload();
    v92(&v39[*(int *)(v41 + 24)], &v40[*(int *)(v41 + 24)], v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v54 = a3[20];
  v55 = (char *)(a1 + v54);
  v56 = (char *)(a2 + v54);
  v57 = sub_23361D340();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v93 = v58;
  if (v59(v56, 1, v57))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v61 = (int *)type metadata accessor for Actions();
  v62 = v61[5];
  v63 = &v55[v62];
  v64 = &v56[v62];
  if (v59(&v56[v62], 1, v57))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v63, v64, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v63, 0, 1, v57);
  }
  v66 = v61[6];
  v67 = &v55[v66];
  v68 = &v56[v66];
  if (v59(&v56[v66], 1, v57))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v67, v68, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v67, 0, 1, v57);
  }
  v70 = v61[7];
  v71 = &v55[v70];
  v72 = &v56[v70];
  if (v59(&v56[v70], 1, v57))
  {
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v71, v72, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v71, 0, 1, v57);
  }
  v74 = v61[8];
  v75 = &v55[v74];
  v76 = &v56[v74];
  if (v59(v76, 1, v57))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v75, v76, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v75, 0, 1, v57);
  }
  v78 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v78) = *(_BYTE *)(a2 + v78);
  v79 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v79) = *(_BYTE *)(a2 + v79);
  v80 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_OWORD *)(a1 + v80) = *(_OWORD *)(a2 + v80);
  v81 = a3[27];
  v82 = a3[28];
  v83 = (void *)(a1 + v82);
  v84 = (const void *)(a2 + v82);
  *(_BYTE *)(a1 + v81) = *(_BYTE *)(a2 + v81);
  if (v90((const void *)(a2 + v82), 1, v91))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v83, v84, v91);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v83, 0, 1, v91);
  }
  return a1;
}

uint64_t assignWithTake for InternalAccount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t (*v48)(void *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int EnumCaseMultiPayload;
  __int128 v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  __int128 v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  char *v92;
  __int128 v93;
  char *v94;
  __int128 v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  __int128 v102;
  char *v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  const void *v149;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v11 + 24);
  v10[2] = *(_QWORD *)(v11 + 16);
  v10[3] = v13;
  swift_bridgeObjectRelease();
  v8(a1 + a3[6], a2 + a3[6], v6);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19);
  v23 = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)v20 = v22;
  *(_QWORD *)(v20 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  v24 = a3[11];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[12];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[15];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *(_OWORD *)(v40 + 4) = *(_OWORD *)(v41 + 4);
  v43 = *(_QWORD *)(v41 + 24);
  v42 = *(_QWORD *)(v41 + 32);
  *(_QWORD *)(v40 + 24) = v43;
  *(_QWORD *)(v40 + 32) = v42;
  swift_bridgeObjectRelease();
  v160 = a3;
  v44 = a3[16];
  v45 = (void *)(a1 + v44);
  v46 = (void *)(a2 + v44);
  v47 = sub_23361D634();
  v158 = *(_QWORD *)(v47 - 8);
  v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v158 + 48);
  v49 = v48(v45, 1, v47);
  v50 = v48(v46, 1, v47);
  v159 = v47;
  v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
  v161 = v7;
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v158 + 32))(v45, v46, v47);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v45, 0, 1, v47);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v158 + 8))(v45, v47);
LABEL_6:
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v158 + 40))(v45, v46, v47);
LABEL_7:
  v52 = v160[17];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_DWORD *)v53 = *(_DWORD *)v54;
  *(_OWORD *)(v53 + 4) = *(_OWORD *)(v54 + 4);
  v56 = *(_QWORD *)(v54 + 24);
  v55 = *(_QWORD *)(v54 + 32);
  *(_QWORD *)(v53 + 24) = v56;
  *(_QWORD *)(v53 + 32) = v55;
  swift_bridgeObjectRelease();
  v57 = v160[18];
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_DWORD *)v58 = *(_DWORD *)v59;
  *(_OWORD *)(v58 + 4) = *(_OWORD *)(v59 + 4);
  v61 = *(_QWORD *)(v59 + 24);
  v60 = *(_QWORD *)(v59 + 32);
  *(_QWORD *)(v58 + 24) = v61;
  *(_QWORD *)(v58 + 32) = v60;
  swift_bridgeObjectRelease();
  v62 = v160[19];
  v63 = (char *)(a1 + v62);
  v64 = (char *)(a2 + v62);
  v65 = type metadata accessor for InternalAccountBalance(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v63, v64, v6);
      v70 = *(int *)(v65 + 20);
      v71 = &v63[v70];
      v72 = &v64[v70];
      type metadata accessor for BalanceCalculation(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v89 = *((_OWORD *)v72 + 1);
        *(_OWORD *)v71 = *(_OWORD *)v72;
        *((_OWORD *)v71 + 1) = v89;
        *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
        v155 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v90 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
        v90(&v71[*(int *)(v155 + 20)], &v72[*(int *)(v155 + 20)], v159);
        v71[*(int *)(v155 + 24)] = v72[*(int *)(v155 + 24)];
        v91 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
        v92 = &v71[v91];
        v72 += v91;
        v93 = *((_OWORD *)v72 + 1);
        *(_OWORD *)v92 = *(_OWORD *)v72;
        *((_OWORD *)v92 + 1) = v93;
        *((_QWORD *)v92 + 4) = *((_QWORD *)v72 + 4);
        v90(&v71[v91 + *(int *)(v155 + 20)], &v72[*(int *)(v155 + 20)], v159);
        v77 = *(int *)(v155 + 24);
        v78 = &v92[v77];
        v76 = v90;
        v75 = v159;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v95 = *((_OWORD *)v72 + 1);
          *(_OWORD *)v71 = *(_OWORD *)v72;
          *((_OWORD *)v71 + 1) = v95;
          *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
          v156 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
          v75 = v159;
          v76 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
          v76(&v71[*(int *)(v156 + 20)], &v72[*(int *)(v156 + 20)], v159);
          v96 = *(int *)(v156 + 24);
          v78 = &v71[v96];
          v94 = &v72[v96];
          goto LABEL_23;
        }
        v74 = *((_OWORD *)v72 + 1);
        *(_OWORD *)v71 = *(_OWORD *)v72;
        *((_OWORD *)v71 + 1) = v74;
        *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
        v154 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v75 = v159;
        v76 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
        v76(&v71[*(int *)(v154 + 20)], &v72[*(int *)(v154 + 20)], v159);
        v77 = *(int *)(v154 + 24);
        v78 = &v71[v77];
      }
      v94 = &v72[v77];
LABEL_23:
      *v78 = *v94;
      swift_storeEnumTagMultiPayload();
      v76(&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      goto LABEL_29;
    }
LABEL_14:
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_29;
  }
  if (v69)
  {
    sub_233168500((uint64_t)v63, type metadata accessor for InternalAccountBalance);
    goto LABEL_14;
  }
  v8((uint64_t)v63, (uint64_t)v64, v6);
  v80 = v159;
  if (a1 != a2)
  {
    v81 = *(int *)(v65 + 20);
    v82 = &v63[v81];
    v83 = &v64[v81];
    sub_233168500((uint64_t)&v63[v81], type metadata accessor for BalanceCalculation);
    type metadata accessor for BalanceCalculation(0);
    v84 = swift_getEnumCaseMultiPayload();
    if (v84 == 2)
    {
      v97 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v97;
      *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
      v98 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v99 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
      v99(&v82[*(int *)(v98 + 20)], &v83[*(int *)(v98 + 20)], v159);
      v82[*(int *)(v98 + 24)] = v83[*(int *)(v98 + 24)];
      v100 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v101 = &v82[v100];
      v83 += v100;
      v102 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v101 = *(_OWORD *)v83;
      *((_OWORD *)v101 + 1) = v102;
      *((_QWORD *)v101 + 4) = *((_QWORD *)v83 + 4);
      v99(&v82[v100 + *(int *)(v98 + 20)], &v83[*(int *)(v98 + 20)], v159);
      v87 = *(int *)(v98 + 24);
      v80 = v159;
      v88 = &v101[v87];
    }
    else
    {
      if (v84 != 1)
      {
        v104 = *((_OWORD *)v83 + 1);
        *(_OWORD *)v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v104;
        *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
        v105 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v80 = v159;
        (*(void (**)(char *, char *, uint64_t))(v158 + 32))(&v82[*(int *)(v105 + 20)], &v83[*(int *)(v105 + 20)], v159);
        v106 = *(int *)(v105 + 24);
        v88 = &v82[v106];
        v103 = &v83[v106];
        goto LABEL_27;
      }
      v85 = *((_OWORD *)v83 + 1);
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v85;
      *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
      v86 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      (*(void (**)(char *, char *, uint64_t))(v158 + 32))(&v82[*(int *)(v86 + 20)], &v83[*(int *)(v86 + 20)], v159);
      v87 = *(int *)(v86 + 24);
      v80 = v159;
      v88 = &v82[v87];
    }
    v103 = &v83[v87];
LABEL_27:
    *v88 = *v103;
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, char *, uint64_t))(v158 + 40))(&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v80);
LABEL_29:
  v107 = v160[20];
  v108 = (char *)(a1 + v107);
  v109 = (char *)(a2 + v107);
  v110 = sub_23361D340();
  v162 = *(_QWORD *)(v110 - 8);
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v162 + 48);
  v112 = v111(v108, 1, v110);
  v113 = v111(v109, 1, v110);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v108, v109, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v108, 0, 1, v110);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v162 + 8))(v108, v110);
LABEL_34:
    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v108, v109, v110);
LABEL_35:
  v115 = (int *)type metadata accessor for Actions();
  v116 = v115[5];
  v117 = &v108[v116];
  v118 = &v109[v116];
  v119 = v111(&v108[v116], 1, v110);
  v120 = v111(v118, 1, v110);
  if (v119)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v117, v118, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v117, 0, 1, v110);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v120)
  {
    (*(void (**)(char *, uint64_t))(v162 + 8))(v117, v110);
LABEL_40:
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v117, v118, v110);
LABEL_41:
  v122 = v115[6];
  v123 = &v108[v122];
  v124 = &v109[v122];
  v125 = v111(&v108[v122], 1, v110);
  v126 = v111(v124, 1, v110);
  if (v125)
  {
    if (!v126)
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v123, v124, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v123, 0, 1, v110);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v126)
  {
    (*(void (**)(char *, uint64_t))(v162 + 8))(v123, v110);
LABEL_46:
    v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v123, v124, v110);
LABEL_47:
  v128 = v115[7];
  v129 = &v108[v128];
  v130 = &v109[v128];
  v131 = v111(&v108[v128], 1, v110);
  v132 = v111(v130, 1, v110);
  if (v131)
  {
    if (!v132)
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v129, v130, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v129, 0, 1, v110);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v132)
  {
    (*(void (**)(char *, uint64_t))(v162 + 8))(v129, v110);
LABEL_52:
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v129, v130, v110);
LABEL_53:
  v134 = v115[8];
  v135 = &v108[v134];
  v136 = &v109[v134];
  v137 = v111(v135, 1, v110);
  v138 = v111(v136, 1, v110);
  if (v137)
  {
    if (!v138)
    {
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v135, v136, v110);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v135, 0, 1, v110);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v138)
  {
    (*(void (**)(char *, uint64_t))(v162 + 8))(v135, v110);
LABEL_58:
    v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_59;
  }
  (*(void (**)(char *, char *, uint64_t))(v162 + 40))(v135, v136, v110);
LABEL_59:
  v140 = v160[22];
  *(_BYTE *)(a1 + v160[21]) = *(_BYTE *)(a2 + v160[21]);
  *(_BYTE *)(a1 + v140) = *(_BYTE *)(a2 + v140);
  v141 = v160[24];
  *(_BYTE *)(a1 + v160[23]) = *(_BYTE *)(a2 + v160[23]);
  *(_BYTE *)(a1 + v141) = *(_BYTE *)(a2 + v141);
  v142 = v160[26];
  *(_BYTE *)(a1 + v160[25]) = *(_BYTE *)(a2 + v160[25]);
  v143 = (_QWORD *)(a1 + v142);
  v144 = (uint64_t *)(a2 + v142);
  v146 = *v144;
  v145 = v144[1];
  *v143 = v146;
  v143[1] = v145;
  swift_bridgeObjectRelease();
  v147 = v160[28];
  *(_BYTE *)(a1 + v160[27]) = *(_BYTE *)(a2 + v160[27]);
  v148 = (void *)(a1 + v147);
  v149 = (const void *)(a2 + v147);
  v150 = v157(a1 + v147, 1, v159);
  v151 = v157((uint64_t)v149, 1, v159);
  if (!v150)
  {
    if (!v151)
    {
      (*(void (**)(void *, const void *, uint64_t))(v158 + 40))(v148, v149, v159);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v158 + 8))(v148, v159);
    goto LABEL_64;
  }
  if (v151)
  {
LABEL_64:
    v152 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v158 + 32))(v148, v149, v159);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v148, 0, 1, v159);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalAccount()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233175CB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[16];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[19];
      }
      else
      {
        v8 = type metadata accessor for Actions();
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[20];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalAccount()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233175DC0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[16];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042590);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[19];
      }
      else
      {
        v10 = type metadata accessor for Actions();
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[20];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233175EB8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23361D6A0();
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, &qword_254247658, (void (*)(uint64_t))type metadata accessor for InternalAccountBalance);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Actions();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_233176020(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23361EBAC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for FullyQualifiedAccountIdentifier()
{
  return &type metadata for FullyQualifiedAccountIdentifier;
}

uint64_t getEnumTagSinglePayload for AccountType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FullyQualifiedAccountIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233176158 + 4 * byte_233624CFE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23317618C + 4 * byte_233624CF9[v4]))();
}

uint64_t sub_23317618C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233176194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23317619CLL);
  return result;
}

uint64_t sub_2331761A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331761B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331761B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331761BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2331761C8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FullyQualifiedAccountIdentifier.CodingKeys()
{
  return &type metadata for FullyQualifiedAccountIdentifier.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InternalAccount.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalAccount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_2331762C0 + 4 * byte_233624D08[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_2331762F4 + 4 * byte_233624D03[v4]))();
}

uint64_t sub_2331762F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331762FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233176304);
  return result;
}

uint64_t sub_233176310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233176318);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_23317631C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233176324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalAccount.CodingKeys()
{
  return &type metadata for InternalAccount.CodingKeys;
}

unint64_t sub_233176344()
{
  unint64_t result;

  result = qword_256042668;
  if (!qword_256042668)
  {
    result = MEMORY[0x234934494](&unk_23362516C, &type metadata for InternalAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042668);
  }
  return result;
}

unint64_t sub_23317638C()
{
  unint64_t result;

  result = qword_256042670;
  if (!qword_256042670)
  {
    result = MEMORY[0x234934494](&unk_233625224, &type metadata for FullyQualifiedAccountIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042670);
  }
  return result;
}

unint64_t sub_2331763D4()
{
  unint64_t result;

  result = qword_256042678;
  if (!qword_256042678)
  {
    result = MEMORY[0x234934494](&unk_233625194, &type metadata for FullyQualifiedAccountIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042678);
  }
  return result;
}

unint64_t sub_23317641C()
{
  unint64_t result;

  result = qword_256042680;
  if (!qword_256042680)
  {
    result = MEMORY[0x234934494](&unk_2336251BC, &type metadata for FullyQualifiedAccountIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042680);
  }
  return result;
}

unint64_t sub_233176464()
{
  unint64_t result;

  result = qword_256042688;
  if (!qword_256042688)
  {
    result = MEMORY[0x234934494](&unk_2336250DC, &type metadata for InternalAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042688);
  }
  return result;
}

unint64_t sub_2331764AC()
{
  unint64_t result;

  result = qword_256042690;
  if (!qword_256042690)
  {
    result = MEMORY[0x234934494](&unk_233625104, &type metadata for InternalAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042690);
  }
  return result;
}

uint64_t sub_2331764F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023366A610 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746E65736E6F63 && a2 == 0xE900000000000044 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7364496E617066 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023366A630 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x54746E756F636361 && a2 == 0xEB00000000657079 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E746E756F636361 && a2 == 0xED00007265626D75 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366A650 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x53746E756F636361 && a2 == 0xED00007375746174 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x694C746964657263 && a2 == 0xEB0000000074696DLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6D7961507478656ELL && a2 == 0xEF65746144746E65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366A670 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366A690 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x42746E756F636361 && a2 == 0xEE0065636E616C61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023366A6B0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023366A6D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023366A6F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023366A710 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x79546E696769726FLL && a2 == 0xEA00000000006570 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xEF656D614E6E6F69 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023366A730 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x44676E696E65706FLL && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 24;
    else
      return 25;
  }
}

uint64_t sub_233176F48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475746974736E69 && a2 == 0xED000044496E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233177068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2331770E8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_2331770FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

id FKBalance.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v24;

  v2 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v24 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = type metadata accessor for BalanceCalculation(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for InternalAccountBalance(0);
  sub_2331684BC(a1 + *(int *)(v14 + 20), (uint64_t)v13, type metadata accessor for BalanceCalculation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_233168580((uint64_t)v13, (uint64_t)v10, type metadata accessor for BalanceCalculation.CalculationDetails);
      sub_233177448();
      sub_2331684BC((uint64_t)v10, (uint64_t)v8, type metadata accessor for BalanceCalculation.CalculationDetails);
      v16 = FKBalanceCalculation.init(_:)((uint64_t)v8);
      v17 = 0;
    }
    else
    {
      v18 = (uint64_t)&v13[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
      sub_233168580((uint64_t)v13, (uint64_t)v10, type metadata accessor for BalanceCalculation.CalculationDetails);
      sub_233168580(v18, (uint64_t)v8, type metadata accessor for BalanceCalculation.CalculationDetails);
      sub_233177448();
      sub_2331684BC((uint64_t)v10, (uint64_t)v5, type metadata accessor for BalanceCalculation.CalculationDetails);
      v17 = FKBalanceCalculation.init(_:)((uint64_t)v5);
      sub_2331684BC((uint64_t)v8, (uint64_t)v5, type metadata accessor for BalanceCalculation.CalculationDetails);
      v16 = FKBalanceCalculation.init(_:)((uint64_t)v5);
      sub_233168500((uint64_t)v8, type metadata accessor for BalanceCalculation.CalculationDetails);
    }
  }
  else
  {
    sub_233168580((uint64_t)v13, (uint64_t)v10, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_233177448();
    sub_2331684BC((uint64_t)v10, (uint64_t)v8, type metadata accessor for BalanceCalculation.CalculationDetails);
    v17 = FKBalanceCalculation.init(_:)((uint64_t)v8);
    v16 = 0;
  }
  sub_233168500((uint64_t)v10, type metadata accessor for BalanceCalculation.CalculationDetails);
  v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v20 = (void *)sub_23361D658();
  v21 = (void *)sub_23361D5B0();
  v22 = objc_msgSend(v19, sel_initWithUUID_availableBalance_bookedBalance_lastUpdatedAt_, v20, v17, v16, v21);

  sub_233168500(a1, type metadata accessor for InternalAccountBalance);
  return v22;
}

uint64_t type metadata accessor for BalanceCalculation.CalculationDetails(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_2542480E8);
}

uint64_t type metadata accessor for BalanceCalculation(uint64_t a1)
{
  return sub_233177414(a1, qword_2542480F8);
}

uint64_t type metadata accessor for InternalAccountBalance(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_254247648);
}

uint64_t sub_233177414(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_233177448()
{
  unint64_t result;

  result = qword_2560426D0;
  if (!qword_2560426D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2560426D0);
  }
  return result;
}

uint64_t InternalAccountBalance.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t InternalAccountBalance.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*InternalAccountBalance.id.modify())()
{
  return nullsub_1;
}

uint64_t InternalAccountBalance.balanceCalculation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for InternalAccountBalance(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 20), a1, type metadata accessor for BalanceCalculation);
}

uint64_t InternalAccountBalance.balanceCalculation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccountBalance(0) + 20);
  return sub_23317A0A0(a1, v3);
}

uint64_t (*InternalAccountBalance.balanceCalculation.modify())()
{
  type metadata accessor for InternalAccountBalance(0);
  return nullsub_1;
}

uint64_t InternalAccountBalance.lastUpdatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccountBalance(0) + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t InternalAccountBalance.lastUpdatedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for InternalAccountBalance(0) + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*InternalAccountBalance.lastUpdatedAt.modify())()
{
  type metadata accessor for InternalAccountBalance(0);
  return nullsub_1;
}

uint64_t InternalAccountBalance.init(id:balanceCalculation:lastUpdatedAt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for InternalAccountBalance(0);
  sub_233168580(a2, a4 + *(int *)(v9 + 20), type metadata accessor for BalanceCalculation);
  v10 = a4 + *(int *)(v9 + 24);
  v11 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a3, v11);
}

uint64_t static InternalAccountBalance.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v13;

  v4 = type metadata accessor for InternalAccountBalance(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  v10 = sub_23361D670();
  sub_2331684BC(a1, (uint64_t)v9, type metadata accessor for InternalAccountBalance);
  sub_2331684BC(a2, (uint64_t)v7, type metadata accessor for InternalAccountBalance);
  if ((v10 & 1) != 0)
    v11 = _s10FinanceKit18BalanceCalculationO2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v4 + 20)], (uint64_t)&v7[*(int *)(v4 + 20)]);
  else
    v11 = 0;
  sub_233168500((uint64_t)v7, type metadata accessor for InternalAccountBalance);
  sub_233168500((uint64_t)v9, type metadata accessor for InternalAccountBalance);
  return v11 & 1;
}

uint64_t sub_233177800()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0x616470557473616CLL;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_233177860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23317CFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233177884()
{
  sub_23317A634();
  return sub_23361F428();
}

uint64_t sub_2331778AC()
{
  sub_23317A634();
  return sub_23361F434();
}

uint64_t InternalAccountBalance.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560426D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23317A634();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for InternalAccountBalance(0);
    v8[14] = 1;
    type metadata accessor for BalanceCalculation(0);
    sub_233167C58(&qword_2560426E8, type metadata accessor for BalanceCalculation, (uint64_t)&protocol conformance descriptor for BalanceCalculation);
    sub_23361F17C();
    v8[13] = 2;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t InternalAccountBalance.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v21 = a2;
  v22 = sub_23361D634();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for BalanceCalculation(0);
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23361D6A0();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560426F0);
  v7 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InternalAccountBalance(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23317A634();
  v29 = v9;
  v13 = v30;
  sub_23361F3EC();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v14 = (uint64_t)v24;
  v30 = v7;
  v19 = v12;
  v33 = 0;
  sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v26;
  sub_23361F068();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v19, v27, v15);
  v32 = 1;
  sub_233167C58(&qword_2560426F8, type metadata accessor for BalanceCalculation, (uint64_t)&protocol conformance descriptor for BalanceCalculation);
  sub_23361F068();
  v16 = (uint64_t)v19;
  sub_233168580(v14, (uint64_t)&v19[*(int *)(v10 + 20)], type metadata accessor for BalanceCalculation);
  v31 = 2;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v17 = v22;
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v16 + *(int *)(v10 + 24), v23, v17);
  sub_2331684BC(v16, v21, type metadata accessor for InternalAccountBalance);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v16, type metadata accessor for InternalAccountBalance);
}

uint64_t sub_233177E7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InternalAccountBalance.init(from:)(a1, a2);
}

uint64_t sub_233177E90(_QWORD *a1)
{
  return InternalAccountBalance.encode(to:)(a1);
}

uint64_t sub_233177EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v14;

  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - v9;
  v11 = sub_23361D670();
  sub_2331684BC(a1, (uint64_t)v10, type metadata accessor for InternalAccountBalance);
  sub_2331684BC(a2, (uint64_t)v8, type metadata accessor for InternalAccountBalance);
  if ((v11 & 1) != 0)
    v12 = _s10FinanceKit18BalanceCalculationO2eeoiySbAC_ACtFZ_0((uint64_t)&v10[*(int *)(a3 + 20)], (uint64_t)&v8[*(int *)(a3 + 20)]);
  else
    v12 = 0;
  sub_233168500((uint64_t)v8, type metadata accessor for InternalAccountBalance);
  sub_233168500((uint64_t)v10, type metadata accessor for InternalAccountBalance);
  return v12 & 1;
}

uint64_t InternalAccountBalance.hash(into:)()
{
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23361E090();
}

uint64_t InternalAccountBalance.hashValue.getter()
{
  sub_23361F350();
  sub_23361D6A0();
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t BalanceCalculation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - v6;
  v8 = type metadata accessor for BalanceCalculation(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v12 = (uint64_t)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_233168580(v12, (uint64_t)v5, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_23361F35C();
    sub_23361EAEC();
    sub_23361E0A8();
    sub_23361D634();
    sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23361E090();
    sub_23361F374();
    sub_23361EAEC();
    sub_23361E0A8();
    sub_23361E090();
    sub_23361F374();
    sub_233168500((uint64_t)v5, type metadata accessor for BalanceCalculation.CalculationDetails);
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_23361F35C();
    sub_23361EAEC();
    sub_23361E0A8();
    sub_23361D634();
    sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23361E090();
    sub_23361F374();
  }
  return sub_233168500((uint64_t)v7, type metadata accessor for BalanceCalculation.CalculationDetails);
}

uint64_t sub_233178340()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656B6F6F62;
  else
    return 0x6C62616C69617661;
}

uint64_t sub_23317837C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23317D130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331783A0()
{
  sub_23317A6BC();
  return sub_23361F428();
}

uint64_t sub_2331783C8()
{
  sub_23317A6BC();
  return sub_23361F434();
}

uint64_t sub_2331783F0()
{
  return 1;
}

uint64_t sub_233178400()
{
  return 12383;
}

void sub_233178410(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23317841C()
{
  sub_23317A744();
  return sub_23361F428();
}

uint64_t sub_233178444()
{
  sub_23317A744();
  return sub_23361F434();
}

uint64_t sub_23317846C()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2331784AC()
{
  return sub_23361F35C();
}

uint64_t sub_2331784D0()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_23317850C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233178588()
{
  sub_23317A700();
  return sub_23361F428();
}

uint64_t sub_2331785B0()
{
  sub_23317A700();
  return sub_23361F434();
}

uint64_t sub_2331785D8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x64656B6F6F62;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x6C62616C69617661;
}

uint64_t sub_233178638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23317D224(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23317865C()
{
  sub_23317A678();
  return sub_23361F428();
}

uint64_t sub_233178684()
{
  sub_23317A678();
  return sub_23361F434();
}

uint64_t BalanceCalculation.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042708);
  v40 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042710);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042718);
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v7 = MEMORY[0x24BDAC7A8](v53);
  v48 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v40 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v41 = (uint64_t)&v40 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for BalanceCalculation(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042720);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23317A678();
  sub_23361F410();
  sub_2331684BC(v55, (uint64_t)v17, type metadata accessor for BalanceCalculation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_233168580((uint64_t)v17, (uint64_t)v14, type metadata accessor for BalanceCalculation.CalculationDetails);
    v56 = 0;
    sub_23317A744();
    v27 = v42;
    sub_23361F0C8();
    sub_233167C58(&qword_256042738, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
    v28 = v44;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v28);
    sub_233168500((uint64_t)v14, type metadata accessor for BalanceCalculation.CalculationDetails);
    v26 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
    goto LABEL_5;
  }
  v52 = v19;
  if (EnumCaseMultiPayload == 1)
  {
    v23 = v41;
    sub_233168580((uint64_t)v17, v41, type metadata accessor for BalanceCalculation.CalculationDetails);
    v57 = 1;
    sub_23317A700();
    v24 = v45;
    sub_23361F0C8();
    sub_233167C58(&qword_256042738, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
    v25 = v47;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v25);
    sub_233168500(v23, type metadata accessor for BalanceCalculation.CalculationDetails);
    v26 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
LABEL_5:
    v29 = v21;
    v30 = v18;
    return v26(v29, v30);
  }
  v31 = (uint64_t)&v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
  v32 = v49;
  sub_233168580((uint64_t)v17, v49, type metadata accessor for BalanceCalculation.CalculationDetails);
  v33 = v48;
  sub_233168580(v31, v48, type metadata accessor for BalanceCalculation.CalculationDetails);
  v60 = 2;
  sub_23317A6BC();
  v34 = v50;
  v55 = v18;
  v35 = v21;
  sub_23361F0C8();
  v59 = 0;
  sub_233167C58(&qword_256042738, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
  v36 = v51;
  v37 = v54;
  sub_23361F17C();
  if (v37)
  {
    v38 = v52;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v36);
    sub_233168500(v33, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_233168500(v32, type metadata accessor for BalanceCalculation.CalculationDetails);
    v26 = *(uint64_t (**)(char *, uint64_t))(v38 + 8);
  }
  else
  {
    v58 = 1;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v36);
    sub_233168500(v33, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_233168500(v32, type metadata accessor for BalanceCalculation.CalculationDetails);
    v26 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
  }
  v29 = v35;
  v30 = v55;
  return v26(v29, v30);
}

uint64_t BalanceCalculation.hashValue.getter()
{
  sub_23361F350();
  BalanceCalculation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t BalanceCalculation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;

  v52 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042750);
  v4 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v58 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v63 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042758);
  v7 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  v56 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042760);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042768);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BalanceCalculation(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v47 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v47 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v47 - v23;
  v25 = a1[3];
  v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_23317A678();
  v64 = v12;
  v26 = v66;
  sub_23361F3EC();
  if (v26)
    goto LABEL_9;
  v49 = v19;
  v50 = v22;
  v51 = v16;
  v28 = v63;
  v27 = v64;
  v48 = v24;
  v66 = v13;
  v29 = v61;
  v30 = v62;
  v31 = sub_23361F098();
  if (*(_QWORD *)(v31 + 16) != 1)
  {
    v37 = sub_23361EE10();
    swift_allocError();
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v39 = v66;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x24BEE26D0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v30);
LABEL_9:
    v36 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_0(v36);
  }
  v32 = v27;
  if (*(_BYTE *)(v31 + 32))
  {
    if (*(_BYTE *)(v31 + 32) == 1)
    {
      v68 = 1;
      sub_23317A700();
      v33 = v59;
      sub_23361EFA8();
      type metadata accessor for BalanceCalculation.CalculationDetails(0);
      sub_233167C58(&qword_256042770, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
      v34 = (uint64_t)v49;
      v35 = v55;
      sub_23361F068();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v30);
      v36 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v71 = 2;
      sub_23317A6BC();
      sub_23361EFA8();
      type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v70 = 0;
      sub_233167C58(&qword_256042770, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
      v41 = v28;
      v42 = (uint64_t)v51;
      v43 = v57;
      sub_23361F068();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
      v69 = 1;
      sub_23361F068();
      v45 = v60;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v30);
      swift_storeEnumTagMultiPayload();
      v34 = v42;
      v36 = (uint64_t)v65;
    }
  }
  else
  {
    v67 = 0;
    sub_23317A744();
    sub_23361EFA8();
    type metadata accessor for BalanceCalculation.CalculationDetails(0);
    sub_233167C58(&qword_256042770, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
    v34 = (uint64_t)v50;
    v40 = v54;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v40);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v30);
    v36 = (uint64_t)v65;
    swift_storeEnumTagMultiPayload();
  }
  v46 = (uint64_t)v48;
  sub_233168580(v34, (uint64_t)v48, type metadata accessor for BalanceCalculation);
  sub_233168580(v46, v52, type metadata accessor for BalanceCalculation);
  return __swift_destroy_boxed_opaque_existential_0(v36);
}

uint64_t sub_233179308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BalanceCalculation.init(from:)(a1, a2);
}

uint64_t sub_23317931C(_QWORD *a1)
{
  return BalanceCalculation.encode(to:)(a1);
}

uint64_t sub_233179330()
{
  sub_23361F350();
  BalanceCalculation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_233179370()
{
  sub_23361F350();
  BalanceCalculation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t BalanceCalculation.CalculationDetails.amount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  v2 = *(_QWORD *)(v1 + 32);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v1 + 4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 BalanceCalculation.CalculationDetails.amount.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_DWORD *)v1 = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 4) = result;
  *(_QWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = v5;
  return result;
}

uint64_t (*BalanceCalculation.CalculationDetails.amount.modify())()
{
  return nullsub_1;
}

uint64_t BalanceCalculation.CalculationDetails.asOf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BalanceCalculation.CalculationDetails.asOf.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BalanceCalculation.CalculationDetails.asOf.modify())()
{
  type metadata accessor for BalanceCalculation.CalculationDetails(0);
  return nullsub_1;
}

uint64_t BalanceCalculation.CalculationDetails.creditDebitIndicator.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t BalanceCalculation.CalculationDetails.creditDebitIndicator.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*BalanceCalculation.CalculationDetails.creditDebitIndicator.modify())()
{
  type metadata accessor for BalanceCalculation.CalculationDetails(0);
  return nullsub_1;
}

uint64_t BalanceCalculation.CalculationDetails.init(amount:asOf:creditDebitIndicator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *a3;
  *(_DWORD *)a4 = *(_DWORD *)a1;
  *(_OWORD *)(a4 + 4) = *(_OWORD *)(a1 + 4);
  *(_QWORD *)(a4 + 24) = v6;
  *(_QWORD *)(a4 + 32) = v7;
  v9 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = sub_23361D634();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  *(_BYTE *)(a4 + *(int *)(v9 + 24)) = v8;
  return result;
}

uint64_t BalanceCalculation.CalculationDetails.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  type metadata accessor for BalanceCalculation.CalculationDetails(0);
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  return sub_23361F374();
}

uint64_t sub_2331796BC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 1716482913;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x746E756F6D61;
}

uint64_t sub_233179710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23317D378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233179734()
{
  sub_23317A788();
  return sub_23361F428();
}

uint64_t sub_23317975C()
{
  sub_23317A788();
  return sub_23361F434();
}

uint64_t BalanceCalculation.CalculationDetails.encode(to:)(_QWORD *a1)
{
  int *v1;
  uint64_t v2;
  int *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042778);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23317A788();
  sub_23361F410();
  v9 = *((_QWORD *)v3 + 3);
  v10 = *((_QWORD *)v3 + 4);
  v14 = *v3;
  v15 = *(_OWORD *)(v3 + 1);
  v16 = v9;
  v17 = v10;
  HIBYTE(v13) = 0;
  sub_23317231C();
  sub_23361F17C();
  if (!v2)
  {
    v11 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    LOBYTE(v14) = 1;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    LOBYTE(v14) = *((_BYTE *)v3 + *(int *)(v11 + 24));
    HIBYTE(v13) = 2;
    sub_23317A7CC();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BalanceCalculation.CalculationDetails.hashValue.getter()
{
  sub_23361F350();
  sub_23361EAEC();
  sub_23361E0A8();
  type metadata accessor for BalanceCalculation.CalculationDetails(0);
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t BalanceCalculation.CalculationDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v22 = a2;
  v23 = sub_23361D634();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042788);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23317A788();
  v24 = v8;
  v13 = v27;
  sub_23361F3EC();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  v27 = v6;
  v14 = (uint64_t)v11;
  v21 = v3;
  v15 = v23;
  v32 = 0;
  sub_233172558();
  v16 = v24;
  v17 = v25;
  sub_23361F068();
  v18 = v30;
  v19 = v31;
  *(_DWORD *)v14 = v28;
  *(_OWORD *)(v14 + 4) = v29;
  *(_QWORD *)(v14 + 24) = v18;
  *(_QWORD *)(v14 + 32) = v19;
  LOBYTE(v28) = 1;
  sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23361F068();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14 + *(int *)(v9 + 20), v5, v15);
  v32 = 2;
  sub_23317A810();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v17);
  *(_BYTE *)(v14 + *(int *)(v9 + 24)) = v28;
  sub_2331684BC(v14, v22, type metadata accessor for BalanceCalculation.CalculationDetails);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return sub_233168500(v14, type metadata accessor for BalanceCalculation.CalculationDetails);
}

uint64_t sub_233179D30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BalanceCalculation.CalculationDetails.init(from:)(a1, a2);
}

uint64_t sub_233179D44(_QWORD *a1)
{
  return BalanceCalculation.CalculationDetails.encode(to:)(a1);
}

uint64_t sub_233179D58()
{
  sub_23361F350();
  sub_23361EAEC();
  sub_23361E0A8();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t sub_233179E14()
{
  sub_23361EAEC();
  sub_23361E0A8();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  return sub_23361F374();
}

uint64_t sub_233179EBC()
{
  sub_23361F350();
  sub_23361EAEC();
  sub_23361E0A8();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  sub_23361F374();
  return sub_23361F3A4();
}

id FKBalanceCalculation.init(_:)(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_allocWithZone((Class)FKAmount);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_23361EA98();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_initWithDecimalNumber_currency_, v3, v4);

  swift_bridgeObjectRelease();
  v6 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v7 = (void *)sub_23361D5B0();
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAmount_asOf_creditDebitIndicator_, v5, v7, *(unsigned __int8 *)(a1 + *(int *)(v6 + 24)));

  sub_233168500(a1, type metadata accessor for BalanceCalculation.CalculationDetails);
  return v8;
}

uint64_t sub_23317A0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BalanceCalculation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s10FinanceKit18BalanceCalculationO0D7DetailsV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *((unsigned int *)a1 + 4);
  v5 = a1[4];
  v6 = *((unsigned int *)a2 + 4);
  v7 = a2[4];
  v17 = a2[3];
  v18 = a1[3];
  v9 = *a1;
  v8 = a1[1];
  v11 = *a2;
  v10 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((MEMORY[0x234932E38](v9, v8, v4, v11, v10, v6) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    v14 = 0;
    return v14 & 1;
  }
  if (v18 == v17 && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = 0;
    if ((v13 & 1) == 0)
      return v14 & 1;
  }
  v15 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  if ((sub_23361D5E0() & 1) == 0)
    goto LABEL_12;
  v14 = *((_BYTE *)a1 + *(int *)(v15 + 24)) ^ *((_BYTE *)a2 + *(int *)(v15 + 24)) ^ 1;
  return v14 & 1;
}

uint64_t _s10FinanceKit18BalanceCalculationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  char v36;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;

  v41 = a2;
  v3 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v38 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v39 = (uint64_t *)((char *)&v38 - v7);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t *)((char *)&v38 - v9);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v38 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v38 - v13);
  v15 = type metadata accessor for BalanceCalculation(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (uint64_t *)((char *)&v38 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v38 - v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042840);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t)&v27[*(int *)(v25 + 48)];
  sub_2331684BC(a1, (uint64_t)v27, type metadata accessor for BalanceCalculation);
  sub_2331684BC(v41, v28, type metadata accessor for BalanceCalculation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_2331684BC((uint64_t)v27, (uint64_t)v23, type metadata accessor for BalanceCalculation);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_233168580(v28, (uint64_t)v14, type metadata accessor for BalanceCalculation.CalculationDetails);
      v30 = _s10FinanceKit18BalanceCalculationO0D7DetailsV2eeoiySbAE_AEtFZ_0(v23, v14);
      sub_233168500((uint64_t)v14, type metadata accessor for BalanceCalculation.CalculationDetails);
      v31 = (uint64_t)v23;
      goto LABEL_15;
    }
    v18 = v23;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_2331684BC((uint64_t)v27, (uint64_t)v21, type metadata accessor for BalanceCalculation);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v28, (uint64_t)v12, type metadata accessor for BalanceCalculation.CalculationDetails);
      v30 = _s10FinanceKit18BalanceCalculationO0D7DetailsV2eeoiySbAE_AEtFZ_0(v21, v12);
      sub_233168500((uint64_t)v12, type metadata accessor for BalanceCalculation.CalculationDetails);
      v31 = (uint64_t)v21;
LABEL_15:
      sub_233168500(v31, type metadata accessor for BalanceCalculation.CalculationDetails);
      sub_233168500((uint64_t)v27, type metadata accessor for BalanceCalculation);
      return v30 & 1;
    }
    v18 = v21;
    goto LABEL_12;
  }
  sub_2331684BC((uint64_t)v27, (uint64_t)v18, type metadata accessor for BalanceCalculation);
  v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_233168500((uint64_t)v18 + v32, type metadata accessor for BalanceCalculation.CalculationDetails);
LABEL_12:
    sub_233168500((uint64_t)v18, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_23317D4B0((uint64_t)v27);
    goto LABEL_13;
  }
  v33 = v40;
  sub_233168580(v28, (uint64_t)v40, type metadata accessor for BalanceCalculation.CalculationDetails);
  v34 = v39;
  sub_233168580((uint64_t)v18 + v32, (uint64_t)v39, type metadata accessor for BalanceCalculation.CalculationDetails);
  v35 = v38;
  sub_233168580(v28 + v32, (uint64_t)v38, type metadata accessor for BalanceCalculation.CalculationDetails);
  v36 = _s10FinanceKit18BalanceCalculationO0D7DetailsV2eeoiySbAE_AEtFZ_0(v18, v33);
  sub_233168500((uint64_t)v18, type metadata accessor for BalanceCalculation.CalculationDetails);
  if ((v36 & 1) != 0)
  {
    v30 = _s10FinanceKit18BalanceCalculationO0D7DetailsV2eeoiySbAE_AEtFZ_0(v34, v35);
    sub_233168500((uint64_t)v35, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_233168500((uint64_t)v34, type metadata accessor for BalanceCalculation.CalculationDetails);
    v31 = (uint64_t)v33;
    goto LABEL_15;
  }
  sub_233168500((uint64_t)v35, type metadata accessor for BalanceCalculation.CalculationDetails);
  sub_233168500((uint64_t)v34, type metadata accessor for BalanceCalculation.CalculationDetails);
  sub_233168500((uint64_t)v33, type metadata accessor for BalanceCalculation.CalculationDetails);
  sub_233168500((uint64_t)v27, type metadata accessor for BalanceCalculation);
LABEL_13:
  v30 = 0;
  return v30 & 1;
}

unint64_t sub_23317A634()
{
  unint64_t result;

  result = qword_2560426E0;
  if (!qword_2560426E0)
  {
    result = MEMORY[0x234934494](&unk_233625C80, &type metadata for InternalAccountBalance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560426E0);
  }
  return result;
}

unint64_t sub_23317A678()
{
  unint64_t result;

  result = qword_256042728;
  if (!qword_256042728)
  {
    result = MEMORY[0x234934494](&unk_233625C30, &type metadata for BalanceCalculation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042728);
  }
  return result;
}

unint64_t sub_23317A6BC()
{
  unint64_t result;

  result = qword_256042730;
  if (!qword_256042730)
  {
    result = MEMORY[0x234934494](&unk_233625BE0, &type metadata for BalanceCalculation.AvailableAndBookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042730);
  }
  return result;
}

unint64_t sub_23317A700()
{
  unint64_t result;

  result = qword_256042740;
  if (!qword_256042740)
  {
    result = MEMORY[0x234934494](&unk_233625B90, &type metadata for BalanceCalculation.BookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042740);
  }
  return result;
}

unint64_t sub_23317A744()
{
  unint64_t result;

  result = qword_256042748;
  if (!qword_256042748)
  {
    result = MEMORY[0x234934494](&unk_233625B40, &type metadata for BalanceCalculation.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042748);
  }
  return result;
}

unint64_t sub_23317A788()
{
  unint64_t result;

  result = qword_256042780;
  if (!qword_256042780)
  {
    result = MEMORY[0x234934494](&unk_233625AF0, &type metadata for BalanceCalculation.CalculationDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042780);
  }
  return result;
}

unint64_t sub_23317A7CC()
{
  unint64_t result;

  result = qword_256056600;
  if (!qword_256056600)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for CreditDebitIndicator, &type metadata for CreditDebitIndicator);
    atomic_store(result, (unint64_t *)&qword_256056600);
  }
  return result;
}

unint64_t sub_23317A810()
{
  unint64_t result;

  result = qword_256042790;
  if (!qword_256042790)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for CreditDebitIndicator, &type metadata for CreditDebitIndicator);
    atomic_store(result, (unint64_t *)&qword_256042790);
  }
  return result;
}

uint64_t sub_23317A854()
{
  return sub_233167C58(&qword_256042798, type metadata accessor for InternalAccountBalance, (uint64_t)&protocol conformance descriptor for InternalAccountBalance);
}

uint64_t sub_23317A880()
{
  return sub_233167C58(&qword_2560427A0, type metadata accessor for BalanceCalculation, (uint64_t)&protocol conformance descriptor for BalanceCalculation);
}

uint64_t sub_23317A8AC()
{
  return sub_233167C58(&qword_2560427A8, type metadata accessor for BalanceCalculation.CalculationDetails, (uint64_t)&protocol conformance descriptor for BalanceCalculation.CalculationDetails);
}

uint64_t *initializeBufferWithCopyOfBuffer for InternalAccountBalance(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
      v19 = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 4) = v19;
      v20 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v21 = *(int *)(v20 + 20);
      v46 = &v9[v21];
      v41 = &v10[v21];
      v15 = sub_23361D634();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v43 = v22;
      swift_bridgeObjectRetain();
      v22(v46, v41, v15);
      v9[*(int *)(v20 + 24)] = v10[*(int *)(v20 + 24)];
      v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v24 = &v9[v23];
      v25 = &v10[v23];
      *(_OWORD *)v24 = *(_OWORD *)&v10[v23];
      *((_DWORD *)v24 + 4) = *(_DWORD *)&v10[v23 + 16];
      v26 = *(_QWORD *)&v10[v23 + 32];
      *((_QWORD *)v24 + 3) = *(_QWORD *)&v10[v23 + 24];
      *((_QWORD *)v24 + 4) = v26;
      v27 = *(int *)(v20 + 20);
      v28 = &v24[v27];
      v29 = &v25[v27];
      swift_bridgeObjectRetain();
      v43(v28, v29, v15);
      v30 = *(int *)(v20 + 24);
      v31 = &v24[v30];
      v32 = &v25[v30];
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
      if (EnumCaseMultiPayload == 1)
      {
        v12 = *((_QWORD *)v10 + 4);
        *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
        *((_QWORD *)v9 + 4) = v12;
        v13 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v14 = *(int *)(v13 + 20);
        v42 = &v10[v14];
        v45 = &v9[v14];
        v15 = sub_23361D634();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v45, v42, v15);
        v17 = *(int *)(v13 + 24);
      }
      else
      {
        v33 = *((_QWORD *)v10 + 4);
        *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
        *((_QWORD *)v9 + 4) = v33;
        v34 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v35 = *(int *)(v34 + 20);
        v44 = &v10[v35];
        v47 = &v9[v35];
        v15 = sub_23361D634();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v47, v44, v15);
        v17 = *(int *)(v34 + 24);
      }
      v31 = &v9[v17];
      v32 = &v10[v17];
    }
    *v31 = *v32;
    swift_storeEnumTagMultiPayload();
    v37 = *(int *)(a3 + 24);
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v38, v39, v15);
  }
  return a1;
}

uint64_t destroy for InternalAccountBalance(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for BalanceCalculation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    v9 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v10 = v5 + *(int *)(v9 + 20);
    v11 = sub_23361D634();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    swift_bridgeObjectRelease();
    v12(v13 + *(int *)(v9 + 20), v11);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
    v8 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v14 = a1 + *(int *)(a2 + 24);
  v15 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

uint64_t initializeWithCopy for InternalAccountBalance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v45 = a3;
  v46 = a2;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  type metadata accessor for BalanceCalculation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
    v19 = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 32) = v19;
    v20 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v21 = *(int *)(v20 + 20);
    v22 = v8 + v21;
    v23 = v9 + v21;
    v16 = sub_23361D634();
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v22, v23, v16);
    *(_BYTE *)(v8 + *(int *)(v20 + 24)) = *(_BYTE *)(v9 + *(int *)(v20 + 24));
    v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    v26 = v8 + v25;
    v27 = v9 + v25;
    *(_OWORD *)v26 = *(_OWORD *)(v9 + v25);
    *(_DWORD *)(v26 + 16) = *(_DWORD *)(v9 + v25 + 16);
    v28 = *(_QWORD *)(v9 + v25 + 32);
    *(_QWORD *)(v26 + 24) = *(_QWORD *)(v9 + v25 + 24);
    *(_QWORD *)(v26 + 32) = v28;
    v29 = *(int *)(v20 + 20);
    v30 = v26 + v29;
    v31 = v27 + v29;
    swift_bridgeObjectRetain();
    v24(v30, v31, v16);
    v32 = *(int *)(v20 + 24);
    v33 = (_BYTE *)(v26 + v32);
    v34 = (_BYTE *)(v27 + v32);
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 32) = v11;
      v12 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v13 = *(int *)(v12 + 20);
      v14 = v8 + v13;
      v15 = v9 + v13;
      v16 = sub_23361D634();
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      v18 = *(int *)(v12 + 24);
    }
    else
    {
      v35 = *(_QWORD *)(v9 + 32);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 32) = v35;
      v36 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v37 = *(int *)(v36 + 20);
      v38 = v8 + v37;
      v39 = v9 + v37;
      v16 = sub_23361D634();
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v40(v38, v39, v16);
      v18 = *(int *)(v36 + 24);
    }
    v33 = (_BYTE *)(v8 + v18);
    v34 = (_BYTE *)(v9 + v18);
  }
  *v33 = *v34;
  swift_storeEnumTagMultiPayload();
  v41 = *(int *)(v45 + 24);
  v42 = a1 + v41;
  v43 = v46 + v41;
  sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v42, v43, v16);
  return a1;
}

uint64_t assignWithCopy for InternalAccountBalance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  int EnumCaseMultiPayload;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = (__int128 *)(a2 + v7);
    sub_233168500(a1 + v7, type metadata accessor for BalanceCalculation);
    type metadata accessor for BalanceCalculation(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v48 = a3;
    if (EnumCaseMultiPayload == 2)
    {
      v18 = *v9;
      *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
      *(_OWORD *)v8 = v18;
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
      v19 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v20 = *(int *)(v19 + 20);
      v44 = v8 + v20;
      v21 = (uint64_t)v9 + v20;
      v22 = sub_23361D634();
      v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v46 = v23;
      swift_bridgeObjectRetain();
      v23(v44, v21, v22);
      *(_BYTE *)(v8 + *(int *)(v19 + 24)) = *((_BYTE *)v9 + *(int *)(v19 + 24));
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v25 = v8 + v24;
      v26 = (uint64_t)v9 + v24;
      v27 = *(__int128 *)((char *)v9 + v24);
      *(_DWORD *)(v25 + 16) = *(_DWORD *)((char *)v9 + v24 + 16);
      *(_OWORD *)v25 = v27;
      *(_QWORD *)(v25 + 24) = *(_QWORD *)((char *)v9 + v24 + 24);
      *(_QWORD *)(v25 + 32) = *(_QWORD *)((char *)v9 + v24 + 32);
      v28 = *(int *)(v19 + 20);
      v29 = v25 + v28;
      v30 = v26 + v28;
      swift_bridgeObjectRetain();
      v46(v29, v30, v22);
      v31 = *(int *)(v19 + 24);
      v32 = (_BYTE *)(v25 + v31);
      v33 = (_BYTE *)(v26 + v31);
    }
    else
    {
      v11 = *v9;
      *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
      *(_OWORD *)v8 = v11;
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
      if (EnumCaseMultiPayload == 1)
      {
        v12 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v13 = *(int *)(v12 + 20);
        v45 = v8 + v13;
        v14 = (uint64_t)v9 + v13;
        v15 = sub_23361D634();
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v45, v14, v15);
        v17 = *(int *)(v12 + 24);
      }
      else
      {
        v34 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
        v35 = *(int *)(v34 + 20);
        v36 = v8 + v35;
        v47 = (uint64_t)v9 + v35;
        v37 = sub_23361D634();
        v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v36, v47, v37);
        v17 = *(int *)(v34 + 24);
      }
      v32 = (_BYTE *)(v8 + v17);
      v33 = (char *)v9 + v17;
    }
    *v32 = *v33;
    swift_storeEnumTagMultiPayload();
    a3 = v48;
  }
  v39 = *(int *)(a3 + 24);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for InternalAccountBalance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  type metadata accessor for BalanceCalculation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v18 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v18;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    v19 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v20 = *(int *)(v19 + 20);
    v21 = v8 + v20;
    v22 = v9 + v20;
    v16 = sub_23361D634();
    v36 = a3;
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
    v23(v21, v22, v16);
    *(_BYTE *)(v8 + *(int *)(v19 + 24)) = *(_BYTE *)(v9 + *(int *)(v19 + 24));
    v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    v25 = v8 + v24;
    v9 += v24;
    v26 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v9;
    *(_OWORD *)(v25 + 16) = v26;
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v9 + 32);
    v23(v8 + v24 + *(int *)(v19 + 20), v9 + *(int *)(v19 + 20), v16);
    a3 = v36;
    v17 = *(int *)(v19 + 24);
    v27 = (_BYTE *)(v25 + v17);
  }
  else
  {
    v11 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v13 = *(int *)(v12 + 20);
      v14 = v8 + v13;
      v15 = v9 + v13;
      v16 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v17 = *(int *)(v12 + 24);
    }
    else
    {
      v28 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v29 = *(int *)(v28 + 20);
      v30 = v8 + v29;
      v31 = v9 + v29;
      v16 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v30, v31, v16);
      v17 = *(int *)(v28 + 24);
    }
    v27 = (_BYTE *)(v8 + v17);
  }
  *v27 = *(_BYTE *)(v9 + v17);
  swift_storeEnumTagMultiPayload();
  v32 = *(int *)(a3 + 24);
  v33 = a1 + v32;
  v34 = a2 + v32;
  sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v33, v34, v16);
  return a1;
}

uint64_t assignWithTake for InternalAccountBalance(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    sub_233168500(a1 + v7, type metadata accessor for BalanceCalculation);
    type metadata accessor for BalanceCalculation(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v18 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v18;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      v19 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v20 = *(int *)(v19 + 20);
      v21 = v8 + v20;
      v22 = v9 + v20;
      v33 = a3;
      v23 = sub_23361D634();
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v24(v21, v22, v23);
      *(_BYTE *)(v8 + *(int *)(v19 + 24)) = *(_BYTE *)(v9 + *(int *)(v19 + 24));
      v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v26 = v8 + v25;
      v9 += v25;
      v27 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v26 = *(_OWORD *)v9;
      *(_OWORD *)(v26 + 16) = v27;
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v9 + 32);
      v24(v8 + v25 + *(int *)(v19 + 20), v9 + *(int *)(v19 + 20), v23);
      a3 = v33;
      v16 = *(int *)(v19 + 24);
      v17 = (_BYTE *)(v26 + v16);
    }
    else
    {
      v10 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v10;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      v11 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v12 = *(int *)(v11 + 20);
      v13 = v8 + v12;
      v14 = v9 + v12;
      v15 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v16 = *(int *)(v11 + 24);
      v17 = (_BYTE *)(v8 + v16);
    }
    *v17 = *(_BYTE *)(v9 + v16);
    swift_storeEnumTagMultiPayload();
  }
  v28 = *(int *)(a3 + 24);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalAccountBalance()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23317B688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for BalanceCalculation(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_23361D634();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for InternalAccountBalance()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23317B72C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23361D6A0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for BalanceCalculation(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_23361D634();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23317B7CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for BalanceCalculation(319);
    if (v2 <= 0x3F)
    {
      result = sub_23361D634();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BalanceCalculation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      v14 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v14;
      v15 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v16 = *(int *)(v15 + 20);
      v17 = a1 + v16;
      v18 = (uint64_t)a2 + v16;
      v19 = sub_23361D634();
      v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      *(_BYTE *)(a1 + *(int *)(v15 + 24)) = *((_BYTE *)a2 + *(int *)(v15 + 24));
      v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v22 = a1 + v21;
      v23 = (uint64_t)a2 + v21;
      *(_OWORD *)v22 = *(_OWORD *)((char *)a2 + v21);
      *(_DWORD *)(v22 + 16) = *(_DWORD *)((char *)a2 + v21 + 16);
      v24 = *(uint64_t *)((char *)a2 + v21 + 32);
      *(_QWORD *)(v22 + 24) = *(uint64_t *)((char *)a2 + v21 + 24);
      *(_QWORD *)(v22 + 32) = v24;
      v25 = *(int *)(v15 + 20);
      v26 = v22 + v25;
      v27 = v23 + v25;
      swift_bridgeObjectRetain();
      v20(v26, v27, v19);
      *(_BYTE *)(v22 + *(int *)(v15 + 24)) = *(_BYTE *)(v23 + *(int *)(v15 + 24));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      v6 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v6;
      v7 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v8 = *(int *)(v7 + 20);
      v9 = a1 + v8;
      v10 = (uint64_t)a2 + v8;
      v11 = sub_23361D634();
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      *(_BYTE *)(a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BalanceCalculation(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    v5 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v6 = a1 + *(int *)(v5 + 20);
    v7 = sub_23361D634();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9(v6, v7);
    v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8 + *(int *)(v5 + 20), v7);
  }
  else if (result <= 1)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for BalanceCalculation.CalculationDetails(0) + 20);
    v4 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

uint64_t initializeWithCopy for BalanceCalculation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    v14 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v14;
    v15 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v16 = *(int *)(v15 + 20);
    v17 = a1 + v16;
    v18 = a2 + v16;
    v19 = sub_23361D634();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    *(_BYTE *)(a1 + *(int *)(v15 + 24)) = *(_BYTE *)(a2 + *(int *)(v15 + 24));
    v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    v22 = a1 + v21;
    v23 = a2 + v21;
    *(_OWORD *)v22 = *(_OWORD *)(a2 + v21);
    *(_DWORD *)(v22 + 16) = *(_DWORD *)(a2 + v21 + 16);
    v24 = *(_QWORD *)(a2 + v21 + 32);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(a2 + v21 + 24);
    *(_QWORD *)(v22 + 32) = v24;
    v25 = *(int *)(v15 + 20);
    v26 = v22 + v25;
    v27 = v23 + v25;
    swift_bridgeObjectRetain();
    v20(v26, v27, v19);
    v28 = *(int *)(v15 + 24);
    v12 = (_BYTE *)(v22 + v28);
    v13 = (_BYTE *)(v23 + v28);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v4;
    v5 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v6 = *(int *)(v5 + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23361D634();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    v11 = *(int *)(v5 + 24);
    v12 = (_BYTE *)(a1 + v11);
    v13 = (_BYTE *)(a2 + v11);
  }
  *v12 = *v13;
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for BalanceCalculation(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((__int128 *)a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for BalanceCalculation);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v14 = *a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(_OWORD *)a1 = v14;
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      v15 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v16 = *(int *)(v15 + 20);
      v17 = a1 + v16;
      v18 = (uint64_t)a2 + v16;
      v19 = sub_23361D634();
      v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      *(_BYTE *)(a1 + *(int *)(v15 + 24)) = *((_BYTE *)a2 + *(int *)(v15 + 24));
      v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v22 = a1 + v21;
      v23 = (uint64_t)a2 + v21;
      v24 = *(__int128 *)((char *)a2 + v21);
      *(_DWORD *)(v22 + 16) = *(_DWORD *)((char *)a2 + v21 + 16);
      *(_OWORD *)v22 = v24;
      *(_QWORD *)(v22 + 24) = *(_QWORD *)((char *)a2 + v21 + 24);
      *(_QWORD *)(v22 + 32) = *(_QWORD *)((char *)a2 + v21 + 32);
      v25 = *(int *)(v15 + 20);
      v26 = v22 + v25;
      v27 = v23 + v25;
      swift_bridgeObjectRetain();
      v20(v26, v27, v19);
      v28 = *(int *)(v15 + 24);
      v12 = (_BYTE *)(v22 + v28);
      v13 = (_BYTE *)(v23 + v28);
    }
    else
    {
      v4 = *a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(_OWORD *)a1 = v4;
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      v5 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v6 = *(int *)(v5 + 20);
      v7 = a1 + v6;
      v8 = (uint64_t)a2 + v6;
      v9 = sub_23361D634();
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      v11 = *(int *)(v5 + 24);
      v12 = (_BYTE *)(a1 + v11);
      v13 = (char *)a2 + v11;
    }
    *v12 = *v13;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for BalanceCalculation(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v13 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v14 = *(int *)(v13 + 20);
    v15 = a1 + v14;
    v16 = a2 + v14;
    v17 = sub_23361D634();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
    v18(v15, v16, v17);
    *(_BYTE *)(a1 + *(int *)(v13 + 24)) = *(_BYTE *)(a2 + *(int *)(v13 + 24));
    v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
    v20 = a1 + v19;
    a2 += v19;
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v20 = *(_OWORD *)a2;
    *(_OWORD *)(v20 + 16) = v21;
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(a2 + 32);
    v18(a1 + v19 + *(int *)(v13 + 20), a2 + *(int *)(v13 + 20), v17);
    v10 = *(int *)(v13 + 24);
    v11 = (_BYTE *)(v20 + v10);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v5 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
    v6 = *(int *)(v5 + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    v10 = *(int *)(v5 + 24);
    v11 = (_BYTE *)(a1 + v10);
  }
  *v11 = *(_BYTE *)(a2 + v10);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for BalanceCalculation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  if (a1 != a2)
  {
    v3 = a2;
    sub_233168500(a1, type metadata accessor for BalanceCalculation);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v12 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v3;
      *(_OWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v3 + 32);
      v13 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v14 = *(int *)(v13 + 20);
      v15 = a1 + v14;
      v16 = v3 + v14;
      v17 = sub_23361D634();
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
      v18(v15, v16, v17);
      *(_BYTE *)(a1 + *(int *)(v13 + 24)) = *(_BYTE *)(v3 + *(int *)(v13 + 24));
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48);
      v20 = a1 + v19;
      v3 += v19;
      v21 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)v20 = *(_OWORD *)v3;
      *(_OWORD *)(v20 + 16) = v21;
      *(_QWORD *)(v20 + 32) = *(_QWORD *)(v3 + 32);
      v18(a1 + v19 + *(int *)(v13 + 20), v3 + *(int *)(v13 + 20), v17);
      v10 = *(int *)(v13 + 24);
      v11 = (_BYTE *)(v20 + v10);
    }
    else
    {
      v4 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v3;
      *(_OWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v3 + 32);
      v5 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
      v6 = *(int *)(v5 + 20);
      v7 = a1 + v6;
      v8 = v3 + v6;
      v9 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = *(int *)(v5 + 24);
      v11 = (_BYTE *)(a1 + v10);
    }
    *v11 = *(_BYTE *)(v3 + v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BalanceCalculation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for BalanceCalculation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23317C258()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23317C268()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  result = type metadata accessor for BalanceCalculation.CalculationDetails(319);
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    v4 = v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for BalanceCalculation.CalculationDetails(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23361D634();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for BalanceCalculation.CalculationDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for BalanceCalculation.CalculationDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D634();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for BalanceCalculation.CalculationDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 6);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for BalanceCalculation.CalculationDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for BalanceCalculation.CalculationDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for BalanceCalculation.CalculationDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23317C680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BalanceCalculation.CalculationDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23317C708(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23317C77C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BalanceCalculation.CalculationDetails.CodingKeys()
{
  return &type metadata for BalanceCalculation.CalculationDetails.CodingKeys;
}

ValueMetadata *type metadata accessor for BalanceCalculation.CodingKeys()
{
  return &type metadata for BalanceCalculation.CodingKeys;
}

uint64_t sub_23317C82C()
{
  return 0;
}

ValueMetadata *type metadata accessor for BalanceCalculation.AvailableCodingKeys()
{
  return &type metadata for BalanceCalculation.AvailableCodingKeys;
}

uint64_t getEnumTagSinglePayload for ManagedConsentDeleter.ConsentDeletingError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s10FinanceKit18BalanceCalculationO19AvailableCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23317C8D4 + 4 * byte_2336252F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23317C8F4 + 4 * byte_2336252F5[v4]))();
}

_BYTE *sub_23317C8D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23317C8F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23317C8FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23317C904(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23317C90C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23317C914(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BalanceCalculation.BookedCodingKeys()
{
  return &type metadata for BalanceCalculation.BookedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for BalanceCalculation.AvailableAndBookedCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23317C97C + 4 * byte_2336252FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23317C9B0 + 4 * byte_2336252FA[v4]))();
}

uint64_t sub_23317C9B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23317C9B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23317C9C0);
  return result;
}

uint64_t sub_23317C9CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23317C9D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23317C9D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23317C9E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BalanceCalculation.AvailableAndBookedCodingKeys()
{
  return &type metadata for BalanceCalculation.AvailableAndBookedCodingKeys;
}

uint64_t _s10FinanceKit18BalanceCalculationO18CalculationDetailsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23317CA48 + 4 * byte_233625309[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23317CA7C + 4 * byte_233625304[v4]))();
}

uint64_t sub_23317CA7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23317CA84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23317CA8CLL);
  return result;
}

uint64_t sub_23317CA98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23317CAA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23317CAA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23317CAAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountBalance.CodingKeys()
{
  return &type metadata for InternalAccountBalance.CodingKeys;
}

unint64_t sub_23317CACC()
{
  unint64_t result;

  result = qword_2560427B0;
  if (!qword_2560427B0)
  {
    result = MEMORY[0x234934494](&unk_233625730, &type metadata for InternalAccountBalance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427B0);
  }
  return result;
}

unint64_t sub_23317CB14()
{
  unint64_t result;

  result = qword_2560427B8;
  if (!qword_2560427B8)
  {
    result = MEMORY[0x234934494](&unk_2336257E8, &type metadata for BalanceCalculation.AvailableAndBookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427B8);
  }
  return result;
}

unint64_t sub_23317CB5C()
{
  unint64_t result;

  result = qword_2560427C0;
  if (!qword_2560427C0)
  {
    result = MEMORY[0x234934494](&unk_2336258A0, &type metadata for BalanceCalculation.BookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427C0);
  }
  return result;
}

unint64_t sub_23317CBA4()
{
  unint64_t result;

  result = qword_2560427C8;
  if (!qword_2560427C8)
  {
    result = MEMORY[0x234934494](&unk_233625958, &type metadata for BalanceCalculation.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427C8);
  }
  return result;
}

unint64_t sub_23317CBEC()
{
  unint64_t result;

  result = qword_2560427D0;
  if (!qword_2560427D0)
  {
    result = MEMORY[0x234934494](&unk_233625A10, &type metadata for BalanceCalculation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427D0);
  }
  return result;
}

unint64_t sub_23317CC34()
{
  unint64_t result;

  result = qword_2560427D8;
  if (!qword_2560427D8)
  {
    result = MEMORY[0x234934494](&unk_233625AC8, &type metadata for BalanceCalculation.CalculationDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427D8);
  }
  return result;
}

unint64_t sub_23317CC7C()
{
  unint64_t result;

  result = qword_2560427E0;
  if (!qword_2560427E0)
  {
    result = MEMORY[0x234934494](&unk_233625A38, &type metadata for BalanceCalculation.CalculationDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427E0);
  }
  return result;
}

unint64_t sub_23317CCC4()
{
  unint64_t result;

  result = qword_2560427E8;
  if (!qword_2560427E8)
  {
    result = MEMORY[0x234934494](&unk_233625A60, &type metadata for BalanceCalculation.CalculationDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427E8);
  }
  return result;
}

unint64_t sub_23317CD0C()
{
  unint64_t result;

  result = qword_2560427F0;
  if (!qword_2560427F0)
  {
    result = MEMORY[0x234934494](&unk_2336258C8, &type metadata for BalanceCalculation.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427F0);
  }
  return result;
}

unint64_t sub_23317CD54()
{
  unint64_t result;

  result = qword_2560427F8;
  if (!qword_2560427F8)
  {
    result = MEMORY[0x234934494](&unk_2336258F0, &type metadata for BalanceCalculation.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560427F8);
  }
  return result;
}

unint64_t sub_23317CD9C()
{
  unint64_t result;

  result = qword_256042800;
  if (!qword_256042800)
  {
    result = MEMORY[0x234934494](&unk_233625810, &type metadata for BalanceCalculation.BookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042800);
  }
  return result;
}

unint64_t sub_23317CDE4()
{
  unint64_t result;

  result = qword_256042808;
  if (!qword_256042808)
  {
    result = MEMORY[0x234934494](&unk_233625838, &type metadata for BalanceCalculation.BookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042808);
  }
  return result;
}

unint64_t sub_23317CE2C()
{
  unint64_t result;

  result = qword_256042810;
  if (!qword_256042810)
  {
    result = MEMORY[0x234934494](&unk_233625758, &type metadata for BalanceCalculation.AvailableAndBookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042810);
  }
  return result;
}

unint64_t sub_23317CE74()
{
  unint64_t result;

  result = qword_256042818;
  if (!qword_256042818)
  {
    result = MEMORY[0x234934494](&unk_233625780, &type metadata for BalanceCalculation.AvailableAndBookedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042818);
  }
  return result;
}

unint64_t sub_23317CEBC()
{
  unint64_t result;

  result = qword_256042820;
  if (!qword_256042820)
  {
    result = MEMORY[0x234934494](&unk_233625980, &type metadata for BalanceCalculation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042820);
  }
  return result;
}

unint64_t sub_23317CF04()
{
  unint64_t result;

  result = qword_256042828;
  if (!qword_256042828)
  {
    result = MEMORY[0x234934494](&unk_2336259A8, &type metadata for BalanceCalculation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042828);
  }
  return result;
}

unint64_t sub_23317CF4C()
{
  unint64_t result;

  result = qword_256042830;
  if (!qword_256042830)
  {
    result = MEMORY[0x234934494](&unk_2336256A0, &type metadata for InternalAccountBalance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042830);
  }
  return result;
}

unint64_t sub_23317CF94()
{
  unint64_t result;

  result = qword_256042838;
  if (!qword_256042838)
  {
    result = MEMORY[0x234934494](&unk_2336256C8, &type metadata for InternalAccountBalance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042838);
  }
  return result;
}

uint64_t sub_23317CFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366A7A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616470557473616CLL && a2 == 0xED00007441646574)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23317D130(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656B6F6F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23317D224(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656B6F6F62 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366A7C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23317D378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1716482913 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023366A7E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23317D4B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23317D504(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for InternalAccount();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_2331684BC(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v17 = a1(v12);
      if (v3)
      {
        sub_233168500((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_233168580((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2332738EC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_2332738EC(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_233168580(v23, v15 + v16 + v19 * v13, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_233168500((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23317D71C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = a3;
  v19 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = v4 & 0xC000000000000001;
      v15 = v4;
      while (v17)
      {
        v9 = (id)MEMORY[0x234933120](v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v9;
        v12 = a2;
        v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_23361EE4C();
          sub_23361EE7C();
          v4 = v15;
          sub_23361EE88();
          sub_23361EE58();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_23361EF30();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23317D8C0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_2332739D4(0, v1, 0);
    v2 = v12;
    v4 = type metadata accessor for InternalAccount();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = *(_BYTE *)(v6 + *(int *)(v4 + 36));
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      if (v10 >= v9 >> 1)
        sub_2332739D4(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v12 + 16) = v10 + 1;
      *(_BYTE *)(v12 + v10 + 32) = v8;
      v6 += v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23317D9B4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0x73736563637573;
}

uint64_t sub_23317D9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23318BC2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23317DA18()
{
  sub_23318AE98();
  return sub_23361F428();
}

uint64_t sub_23317DA40()
{
  sub_23318AE98();
  return sub_23361F434();
}

uint64_t sub_23317DA68()
{
  sub_23318AEDC();
  return sub_23361F428();
}

uint64_t sub_23317DA90()
{
  sub_23318AEDC();
  return sub_23361F434();
}

uint64_t sub_23317DAB8()
{
  sub_23318AF20();
  return sub_23361F428();
}

uint64_t sub_23317DAE0()
{
  sub_23318AF20();
  return sub_23361F434();
}

uint64_t BankConnectAccountLinkingResult.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042848);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042850);
  v17 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042858);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v12 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23318AE98();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    LOBYTE(v23) = 1;
    sub_23318AEDC();
    v13 = v22;
    sub_23361F0C8();
    v23 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
    sub_23318AF64(&qword_256042870, &qword_256042878, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12A0]);
    v14 = v19;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v14);
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_23318AF20();
    v13 = v22;
    sub_23361F0C8();
    v23 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
    sub_23318AF64(&qword_256042870, &qword_256042878, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12A0]);
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v13);
}

uint64_t BankConnectAccountLinkingResult.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042888);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042890);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042898);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23318AE98();
  v14 = v39;
  sub_23361F3EC();
  if (!v14)
  {
    v31 = v5;
    v32 = v6;
    v15 = v35;
    v16 = v36;
    v17 = v37;
    v33 = v10;
    v39 = v12;
    v18 = sub_23361F098();
    if (*(_QWORD *)(v18 + 16) == 1)
    {
      v19 = *(_BYTE *)(v18 + 32);
      if ((v19 & 1) != 0)
      {
        LODWORD(v32) = *(unsigned __int8 *)(v18 + 32);
        LOBYTE(v40) = 1;
        sub_23318AEDC();
        v20 = v39;
        sub_23361EFA8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
        sub_23318AF64(&qword_2560428A0, &qword_2560428A8, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12D0]);
        sub_23361F068();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v17);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v9);
        v28 = v40;
        v19 = v32;
      }
      else
      {
        LOBYTE(v40) = 0;
        sub_23318AF20();
        sub_23361EFA8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
        sub_23318AF64(&qword_2560428A0, &qword_2560428A8, (uint64_t)&protocol conformance descriptor for InternalAccount, MEMORY[0x24BEE12D0]);
        v26 = v31;
        sub_23361F068();
        v27 = v33;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v39, v9);
        v28 = v40;
      }
      v29 = v34;
      *v34 = v28;
      *((_BYTE *)v29 + 8) = v19;
    }
    else
    {
      v21 = sub_23361EE10();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
      *v23 = &type metadata for BankConnectAccountLinkingResult;
      v24 = v39;
      sub_23361EFC0();
      sub_23361EDEC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
}

uint64_t sub_23317E1FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return BankConnectAccountLinkingResult.init(from:)(a1, a2);
}

uint64_t sub_23317E210(_QWORD *a1)
{
  return BankConnectAccountLinkingResult.encode(to:)(a1);
}

uint64_t BankConnectAccountLinker.__allocating_init(store:consentStore:accountMatcherProvider:paymentPassDataSourceProvider:passKitTransactionsDataSourceProvider:webServiceClientProvider:transactionsDataLoader:accountUnlinking:passMatcher:)(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5, __int128 *a6, __int128 *a7, __int128 *a8, __int128 *a9)
{
  uint64_t v17;

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_23318B020(a2, v17 + 24);
  sub_23318B020(a3, v17 + 64);
  sub_23318B020(a4, v17 + 104);
  sub_23318B020(a5, v17 + 144);
  sub_23318B020(a6, v17 + 184);
  sub_23318B020(a7, v17 + 224);
  sub_23318B020(a8, v17 + 264);
  sub_23318B020(a9, v17 + 304);
  return v17;
}

uint64_t BankConnectAccountLinker.init(store:consentStore:accountMatcherProvider:paymentPassDataSourceProvider:passKitTransactionsDataSourceProvider:webServiceClientProvider:transactionsDataLoader:accountUnlinking:passMatcher:)(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5, __int128 *a6, __int128 *a7, __int128 *a8, __int128 *a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 + 16) = a1;
  sub_23318B020(a2, v9 + 24);
  sub_23318B020(a3, v9 + 64);
  sub_23318B020(a4, v9 + 104);
  sub_23318B020(a5, v9 + 144);
  sub_23318B020(a6, v9 + 184);
  sub_23318B020(a7, v9 + 224);
  sub_23318B020(a8, v9 + 264);
  sub_23318B020(a9, v9 + 304);
  return v9;
}

uint64_t BankConnectAccountLinker.connectAccounts(primaryPass:primaryPassAccountFQAI:institution:shouldConnectSecondaryAccounts:ignoreConnectedAccounts:userPresence:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;

  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = v7;
  *(_BYTE *)(v8 + 65) = a5;
  *(_QWORD *)(v8 + 88) = a1;
  *(_QWORD *)(v8 + 96) = a4;
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(type metadata accessor for InternalAccount() - 8);
  v14 = swift_task_alloc();
  *(_QWORD *)(v8 + 128) = v14;
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v15 = a3[1];
  *(_OWORD *)(v8 + 16) = *a3;
  *(_OWORD *)(v8 + 32) = v15;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 144) = v16;
  *v16 = v8;
  v16[1] = sub_23317E498;
  return sub_23317EA90(v14, a2, (_OWORD *)(v8 + 16), a4, a6, a7);
}

uint64_t sub_23317E498()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23317E4FC()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *(unsigned __int8 *)(v0 + 65);
  sub_233168580(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  if (v1 == 1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v2;
    *v2 = v0;
    v2[1] = sub_23317E630;
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 96);
    v2[6] = v4;
    v2[7] = v3;
    v5 = (_QWORD *)swift_task_alloc();
    v2[8] = v5;
    *v5 = v2;
    v5[1] = sub_23317FF60;
    return sub_233186788(v4);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256042208);
    v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_233623D60;
    sub_2331684BC(v7, v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    sub_233168500(v7, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    *(_QWORD *)v9 = v11;
    *(_BYTE *)(v9 + 8) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23317E630(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v5;

  v3 = *v1;
  v4 = *v1;
  (*v1)[21] = a1;
  swift_task_dealloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[22] = (uint64_t)v5;
  *v5 = v4;
  v5[1] = sub_23317E6B0;
  return sub_233180C98(a1, v3[12], 1, v3[13]);
}

uint64_t sub_23317E6B0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23317E714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042208);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  sub_2331684BC(v2, v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  sub_23318A20C(v1, (uint64_t (*)(void))sub_2334A4744, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  sub_233168500(v2, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  *(_QWORD *)v4 = v6;
  *(_BYTE *)(v4 + 8) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317E7F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 72) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(unsigned __int8 *)(v0 + 64);
    if (v4 == 3)
    {
      v5 = *(_QWORD *)(v0 + 88);

      *(_QWORD *)v5 = v3;
      *(_BYTE *)(v5 + 8) = 1;

      swift_task_dealloc();
      swift_task_dealloc();
      v6 = *(uint64_t (**)(void))(v0 + 8);
      return v6();
    }
    sub_23318B07C(*(id *)(v0 + 48), *(_QWORD *)(v0 + 56), v4);
  }

  if (qword_256041CA0 != -1)
    swift_once();
  v7 = *(void **)(v0 + 152);
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
  v9 = v7;
  v10 = v7;
  v11 = sub_23361DB68();
  v12 = sub_23361E768();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void **)(v0 + 152);
  if (v13)
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138412290;
    v17 = v14;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v18;
    sub_23361EBC4();
    *v16 = v18;

    _os_log_impl(&dword_233151000, v11, v12, "Failed to connect a primary account: %@.", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v16, -1, -1);
    MEMORY[0x234934590](v15, -1, -1);
  }
  else
  {

  }
  v19 = *(_QWORD *)(v0 + 152);

  sub_23318B038();
  swift_allocError();
  *v20 = v19;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_23317EA90(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;

  *(_QWORD *)(v7 + 160) = a6;
  *(_QWORD *)(v7 + 168) = v6;
  *(_BYTE *)(v7 + 461) = a5;
  *(_QWORD *)(v7 + 144) = a2;
  *(_QWORD *)(v7 + 152) = a4;
  *(_QWORD *)(v7 + 136) = a1;
  type metadata accessor for Institution(0);
  *(_QWORD *)(v7 + 176) = swift_task_alloc();
  *(_QWORD *)(v7 + 184) = type metadata accessor for AccountMatchResult();
  *(_QWORD *)(v7 + 192) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  *(_QWORD *)(v7 + 200) = swift_task_alloc();
  v9 = type metadata accessor for InternalAccount();
  *(_QWORD *)(v7 + 208) = v9;
  *(_QWORD *)(v7 + 216) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 224) = swift_task_alloc();
  *(_QWORD *)(v7 + 232) = swift_task_alloc();
  v10 = a3[1];
  *(_OWORD *)(v7 + 240) = *a3;
  *(_OWORD *)(v7 + 256) = v10;
  return swift_task_switch();
}

uint64_t sub_23317EB80()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  int v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 144);
  if ((*(_BYTE *)(v0 + 461) & 1) == 0)
  {
    v7 = objc_msgSend(v1, sel_primaryAccountIdentifier);
    v8 = sub_23361E150();
    v10 = v9;

    *(_QWORD *)(v0 + 272) = v10;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v11;
    *v11 = v0;
    v11[1] = sub_23317EDF0;
    return sub_23318331C(*(_QWORD *)(v0 + 200), v8, v10);
  }
  v2 = objc_msgSend(v1, sel_devicePrimaryPaymentApplication);
  *(_QWORD *)(v0 + 288) = v2;
  if (v2)
  {
    v3 = v2;
    if (objc_msgSend(v2, sel_state) == (id)1)
    {
      v4 = *(unsigned __int8 *)(v0 + 461);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v5;
      *v5 = v0;
      if (v4 == 1)
        v6 = sub_23317F3DC;
      else
        v6 = sub_23317F498;
      v5[1] = v6;
      return sub_233183804(*(_QWORD *)(v0 + 152));
    }

  }
  if (qword_256041CA0 != -1)
    swift_once();
  v13 = sub_23361DB80();
  __swift_project_value_buffer(v13, (uint64_t)qword_2560495B0);
  v14 = sub_23361DB68();
  v15 = sub_23361E768();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_233151000, v14, v15, "Can't connect a payment pass that hasn't been activated", v16, 2u);
    MEMORY[0x234934590](v16, -1, -1);
  }

  sub_23318BF8C();
  swift_allocError();
  *(_OWORD *)v17 = xmmword_233625CE0;
  *(_BYTE *)(v17 + 16) = 4;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317EDF0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23317EE4C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  int v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v30;
  os_log_type_t type;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v1 = *(_QWORD *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 48))(v1, 1, *(_QWORD *)(v0 + 208)) != 1)
  {
    sub_233168580(v1, *(_QWORD *)(v0 + 232), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    if (qword_256041CA0 != -1)
      swift_once();
    v7 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(void **)(v0 + 144);
    v10 = sub_23361DB80();
    __swift_project_value_buffer(v10, (uint64_t)qword_2560495B0);
    sub_2331684BC(v8, v7, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v11 = v9;
    v12 = sub_23361DB68();
    v13 = sub_23361E750();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 224);
    if (v14)
    {
      type = v13;
      v16 = *(void **)(v0 + 144);
      v17 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v32 = v30;
      *(_DWORD *)v17 = 136315394;
      v18 = objc_msgSend(v16, sel_primaryAccountIdentifier);
      v19 = sub_23361E150();
      v21 = v20;

      *(_QWORD *)(v0 + 120) = sub_233164DCC(v19, v21, &v32);
      sub_23361EBC4();
      swift_bridgeObjectRelease();

      *(_WORD *)(v17 + 12) = 2080;
      v33 = 0;
      v34 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361ED98();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRetain();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      sub_23361E27C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 128) = sub_233164DCC(v33, v34, &v32);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500(v15, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      _os_log_impl(&dword_233151000, v12, type, "An account is connected already. Let's skip matching.\nexternalAccountId: %s\nfqaid: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v30, -1, -1);
      MEMORY[0x234934590](v17, -1, -1);
    }
    else
    {
      v22 = *(void **)(v0 + 144);

      sub_233168500(v15, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    }

    sub_233168580(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  sub_233168608(v1, &qword_2560486B0);
  v2 = objc_msgSend(*(id *)(v0 + 144), sel_devicePrimaryPaymentApplication);
  *(_QWORD *)(v0 + 288) = v2;
  if (!v2)
  {
LABEL_13:
    if (qword_256041CA0 != -1)
      swift_once();
    v24 = sub_23361DB80();
    __swift_project_value_buffer(v24, (uint64_t)qword_2560495B0);
    v25 = sub_23361DB68();
    v26 = sub_23361E768();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_233151000, v25, v26, "Can't connect a payment pass that hasn't been activated", v27, 2u);
      MEMORY[0x234934590](v27, -1, -1);
    }

    sub_23318BF8C();
    swift_allocError();
    *(_OWORD *)v28 = xmmword_233625CE0;
    *(_BYTE *)(v28 + 16) = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  v3 = v2;
  if (objc_msgSend(v2, sel_state) != (id)1)
  {

    goto LABEL_13;
  }
  v4 = *(unsigned __int8 *)(v0 + 461);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v5;
  *v5 = v0;
  if (v4 == 1)
    v6 = sub_23317F3DC;
  else
    v6 = sub_23317F498;
  v5[1] = v6;
  return sub_233183804(*(_QWORD *)(v0 + 152));
}

uint64_t sub_23317F3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  _QWORD *v6;

  v4 = *v2;
  v4[38] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v4[41] = a1;
  v6 = (_QWORD *)swift_task_alloc();
  v4[42] = (uint64_t)v6;
  *v6 = v4;
  v6[1] = sub_23317F648;
  return sub_233183B24(v4[24], v4[30], v4[31], v4[32], v4[33], v4[21], a1, v4[18]);
}

uint64_t sub_23317F498(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 312) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 320) = a1;
  return swift_task_switch();
}

uint64_t sub_23317F50C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v17[11];

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD **)(v0 + 168);
  v3 = v2[16];
  v4 = v2[17];
  __swift_project_boxed_opaque_existential_1(v2 + 13, v3);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v4 + 8))(v17, v3, v4);
  v5 = v17[0];
  v6 = sub_23318B7EC(v1, v17[0]);

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 328) = v6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v7;
  *v7 = v0;
  v7[1] = sub_23317F648;
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(void **)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 144);
  v17[9] = *(void **)(v0 + 152);
  v17[10] = v14;
  return sub_233183B24(v12, v10, v11, v8, v9, v13, v6, v15);
}

uint64_t sub_23317F5D4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317F648()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23317F6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(int *)(*(_QWORD *)(v0 + 208) + 20);
  *(_DWORD *)(v0 + 456) = v2;
  v3 = (uint64_t *)(v1 + v2);
  v5 = *v3;
  v4 = v3[1];
  *(_QWORD *)(v0 + 352) = v4;
  v6 = v3[2];
  v7 = v3[3];
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 360) = v7;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v8;
  *v8 = v0;
  v8[1] = sub_23317F74C;
  return sub_233185920((uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 328));
}

uint64_t sub_23317F74C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23317F7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t *v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v27;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  sub_2331684BC(v2, v1, type metadata accessor for Institution);
  v4 = sub_23361DB68();
  v5 = sub_23361E750();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(uint64_t **)(v0 + 176);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v27 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = *v7;
    v10 = v7[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 112) = sub_233164DCC(v11, v10, &v27);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v7, type metadata accessor for Institution);
    _os_log_impl(&dword_233151000, v4, v5, "Connecting a primary account for institution: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    sub_233168500(*(_QWORD *)(v0 + 176), type metadata accessor for Institution);
  }

  v13 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(void **)(v0 + 144);
  v15 = (uint64_t *)(v12 + *(int *)(v0 + 456));
  v16 = *v15;
  *(_QWORD *)(v0 + 384) = *v15;
  v17 = v15[1];
  *(_QWORD *)(v0 + 392) = v17;
  v18 = v15[2];
  *(_QWORD *)(v0 + 400) = v18;
  v19 = v15[3];
  *(_QWORD *)(v0 + 408) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = objc_msgSend(v14, sel_primaryAccountIdentifier);
  v21 = sub_23361E150();
  v23 = v22;

  *(_QWORD *)(v0 + 416) = v23;
  v24 = *(_BYTE *)(v12 + *(int *)(v13 + 20));
  *(_QWORD *)(v0 + 48) = v16;
  *(_QWORD *)(v0 + 56) = v17;
  *(_QWORD *)(v0 + 64) = v18;
  *(_QWORD *)(v0 + 72) = v19;
  *(_BYTE *)(v0 + 460) = v24;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v25;
  *v25 = v0;
  v25[1] = sub_23317FA84;
  return sub_233186A2C(*(_QWORD *)(v0 + 136), (uint64_t *)(v0 + 48), v21, v23, (_BYTE *)(v0 + 460));
}

uint64_t sub_23317FA84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 432) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v4 = *(_QWORD *)(v2 + 400);
    v3 = *(_QWORD *)(v2 + 408);
    *(_OWORD *)(v2 + 80) = *(_OWORD *)(v2 + 384);
    *(_QWORD *)(v2 + 96) = v4;
    *(_QWORD *)(v2 + 104) = v3;
    v5 = swift_task_alloc();
    *(_QWORD *)(v2 + 440) = v5;
    *(_QWORD *)v5 = v2;
    *(_QWORD *)(v5 + 8) = sub_23317FB38;
    v6 = *(_QWORD *)(v2 + 80);
    *(_QWORD *)(v5 + 72) = *(_QWORD *)(v2 + 168);
    *(_QWORD *)(v5 + 80) = v6;
    *(_OWORD *)(v5 + 88) = *(_OWORD *)(v2 + 88);
    *(_QWORD *)(v5 + 104) = *(_QWORD *)(v2 + 104);
  }
  return swift_task_switch();
}

uint64_t sub_23317FB38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23317FB9C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 192);

  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317FC40()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_233168500(v2, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317FCDC()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168500(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 192);

  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317FD94()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317FE08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317FE88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);

  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23317FF10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v2[6] = a1;
  v2[7] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v2[8] = v4;
  *v4 = v2;
  v4[1] = sub_23317FF60;
  return sub_233186788(a1);
}

uint64_t sub_23317FF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23317FFD4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_23317D8C0(v0[10]);
  swift_bridgeObjectRelease();
  v0[11] = sub_2331C8F9C(v1);
  swift_bridgeObjectRelease();
  v2 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_233180054;
  return sub_23318864C();
}

uint64_t sub_233180054(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

id sub_2331800C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;

  *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD *)(v0 + 104);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 120) = v2;
    if (v2)
      goto LABEL_3;
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
  }
LABEL_40:
  swift_bridgeObjectRetain();
  v35 = sub_23361EF30();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 120) = v35;
  if (!v35)
    goto LABEL_41;
LABEL_3:
  v3 = 0;
  v4 = (uint64_t *)(v0 + 112);
  for (i = (uint64_t *)(v0 + 144); ; v4 = i)
  {
    v6 = *v4;
    v7 = *(_QWORD *)(v0 + 104);
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = (id)MEMORY[0x234933120](v3);
    }
    else
    {
      if (v3 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_39;
      v8 = *(id *)(v7 + 8 * v3 + 32);
    }
    *(_QWORD *)(v0 + 128) = v8;
    *(_QWORD *)(v0 + 136) = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v36 = v8;
    result = objc_msgSend(v36, sel_paymentApplications);
    if (!result)
      break;
    v10 = result;
    sub_233168668(0, (unint64_t *)&qword_256042B60);
    sub_23318C0AC();
    v11 = sub_23361E5DC();

    v12 = sub_2331C8790(v11);
    *i = v6;
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      v14 = 0;
      v15 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
        v17 = v16 - 1;
        if ((unint64_t)(v16 - 1) <= 4)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_2334A4A98(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
          v19 = *((_QWORD *)v15 + 2);
          v18 = *((_QWORD *)v15 + 3);
          if (v19 >= v18 >> 1)
            v15 = sub_2334A4A98((char *)(v18 > 1), v19 + 1, 1, v15);
          *((_QWORD *)v15 + 2) = v19 + 1;
          v15[v19 + 32] = v17 & 1;
        }
        ++v14;
      }
      while (v13 != v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    sub_23318C104();
    v20 = sub_23361E5F4();
    v21 = *((_QWORD *)v15 + 2);
    if (v21)
    {
      v22 = 0;
      do
      {
        v24 = v20 + 56;
        while (1)
        {
          v25 = v15[v22++ + 32];
          sub_23361F350();
          sub_23361F35C();
          v26 = sub_23361F3A4();
          v27 = -1 << *(_BYTE *)(v20 + 32);
          v28 = v26 & ~v27;
          if (((*(_QWORD *)(v24 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            break;
          v29 = *(_QWORD *)(v20 + 48);
          if ((_DWORD)v25 != *(unsigned __int8 *)(v29 + v28))
          {
            v30 = ~v27;
            do
            {
              v28 = (v28 + 1) & v30;
              if (((*(_QWORD *)(v24 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
                goto LABEL_23;
            }
            while ((_DWORD)v25 != *(unsigned __int8 *)(v29 + v28));
          }
          if (v22 == v21)
            goto LABEL_32;
        }
LABEL_23:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_2334AA3F4(v25, v28, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
      while (v22 != v21);
LABEL_32:
      swift_bridgeObjectRelease();
      i = (uint64_t *)(v0 + 144);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    v31 = sub_233610EC4(v20, *(_QWORD *)(v0 + 88));
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
    {
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v34;
      *v34 = v0;
      v34[1] = sub_2331804C8;
      return (id)sub_2331889B0((uint64_t)v36, *(_QWORD *)(v0 + 48));
    }
    v32 = *(_QWORD *)(v0 + 136);
    v33 = *(_QWORD *)(v0 + 120);

    if (v32 == v33)
      goto LABEL_41;
    v3 = *(_QWORD *)(v0 + 136);
  }
  __break(1u);
  return result;
}

uint64_t sub_2331804C8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

id sub_233180524()
{
  uint64_t v0;
  id v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;

  if ((*(_BYTE *)(v0 + 160) & 1) != 0)
  {
    MEMORY[0x234932730](*(id *)(v0 + 128));
    if (*(_QWORD *)((*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      goto LABEL_40;
    goto LABEL_3;
  }
  while (1)
  {
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 120);

    if (v3 == v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
    }
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 104);
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = (id)MEMORY[0x234933120](*(_QWORD *)(v0 + 136));
    }
    else
    {
      if (v5 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_39;
      v8 = *(id *)(v7 + 8 * v5 + 32);
    }
    *(_QWORD *)(v0 + 128) = v8;
    *(_QWORD *)(v0 + 136) = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      sub_23361E414();
LABEL_3:
      sub_23361E438();
      sub_23361E408();
      continue;
    }
    v1 = v8;
    result = objc_msgSend(v1, sel_paymentApplications);
    if (!result)
      break;
    v10 = result;
    sub_233168668(0, (unint64_t *)&qword_256042B60);
    sub_23318C0AC();
    v11 = sub_23361E5DC();

    v12 = sub_2331C8790(v11);
    *(_QWORD *)(v0 + 144) = v6;
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      v14 = 0;
      v15 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
        v17 = v16 - 1;
        if ((unint64_t)(v16 - 1) <= 4)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_2334A4A98(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
          v19 = *((_QWORD *)v15 + 2);
          v18 = *((_QWORD *)v15 + 3);
          if (v19 >= v18 >> 1)
            v15 = sub_2334A4A98((char *)(v18 > 1), v19 + 1, 1, v15);
          *((_QWORD *)v15 + 2) = v19 + 1;
          v15[v19 + 32] = v17 & 1;
        }
        ++v14;
      }
      while (v13 != v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    sub_23318C104();
    v20 = sub_23361E5F4();
    v21 = *((_QWORD *)v15 + 2);
    if (v21)
    {
      v32 = v1;
      v22 = 0;
      do
      {
        v24 = v20 + 56;
        while (1)
        {
          v25 = v15[v22++ + 32];
          sub_23361F350();
          sub_23361F35C();
          v26 = sub_23361F3A4();
          v27 = -1 << *(_BYTE *)(v20 + 32);
          v28 = v26 & ~v27;
          if (((*(_QWORD *)(v24 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            break;
          v29 = *(_QWORD *)(v20 + 48);
          if ((_DWORD)v25 != *(unsigned __int8 *)(v29 + v28))
          {
            v30 = ~v27;
            do
            {
              v28 = (v28 + 1) & v30;
              if (((*(_QWORD *)(v24 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
                goto LABEL_26;
            }
            while ((_DWORD)v25 != *(unsigned __int8 *)(v29 + v28));
          }
          if (v22 == v21)
            goto LABEL_4;
        }
LABEL_26:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_2334AA3F4(v25, v28, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
      while (v22 != v21);
LABEL_4:
      swift_bridgeObjectRelease();
      v1 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    v2 = sub_233610EC4(v20, *(_QWORD *)(v0 + 88));
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v31;
      *v31 = v0;
      v31[1] = sub_2331804C8;
      return (id)sub_2331889B0((uint64_t)v1, *(_QWORD *)(v0 + 48));
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_233180910()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 72);
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to find payment passes: %@.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_233180AD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 112);
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23361EBC4();
    *v8 = v10;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to find payment passes: %@.", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_233180C98(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 224) = a4;
  *(_QWORD *)(v5 + 232) = v4;
  *(_BYTE *)(v5 + 457) = a3;
  *(_QWORD *)(v5 + 208) = a1;
  *(_QWORD *)(v5 + 216) = a2;
  v6 = type metadata accessor for InternalAccount();
  *(_QWORD *)(v5 + 240) = v6;
  *(_QWORD *)(v5 + 248) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 256) = swift_task_alloc();
  *(_QWORD *)(v5 + 264) = swift_task_alloc();
  *(_QWORD *)(v5 + 272) = type metadata accessor for AccountMatchResult();
  *(_QWORD *)(v5 + 280) = swift_task_alloc();
  type metadata accessor for Institution(0);
  *(_QWORD *)(v5 + 288) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233180D54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v1 = *(_QWORD *)(v0 + 208);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 296) = v2;
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  }
  swift_bridgeObjectRetain();
  v23 = sub_23361EF30();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 296) = v23;
  if (!v23)
    goto LABEL_17;
LABEL_3:
  if (*(_BYTE *)(v0 + 457) == 1)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v3;
    *v3 = v0;
    v3[1] = sub_233181140;
    return sub_233184A1C(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  }
  sub_233177068(*(_QWORD *)(v0 + 232) + 64, v0 + 56);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v5);
  if (qword_256041CE0 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 296);
  swift_beginAccess();
  v24 = qword_25604AE00;
  v25 = byte_25604AE08;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 8))(&v24, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 208);
    v9 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 312) = 0;
    *(_QWORD *)(v0 + 320) = v9;
    swift_bridgeObjectRetain();
    if ((v8 & 0xC000000000000001) != 0)
      v10 = (id)MEMORY[0x234933120](0, v8);
    else
      v10 = *(id *)(v8 + 32);
    *(_QWORD *)(v0 + 328) = v10;
    if (qword_256041CA0 == -1)
      goto LABEL_12;
  }
  swift_once();
LABEL_12:
  v11 = *(_QWORD *)(v0 + 288);
  v12 = *(_QWORD *)(v0 + 216);
  v13 = sub_23361DB80();
  *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v13, (uint64_t)qword_2560495B0);
  sub_2331684BC(v12, v11, type metadata accessor for Institution);
  v14 = sub_23361DB68();
  v15 = sub_23361E750();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(uint64_t **)(v0 + 288);
  if (v16)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v18 = 136315138;
    v20 = *v17;
    v21 = v17[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_233164DCC(v20, v21, &v24);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v17, type metadata accessor for Institution);
    _os_log_impl(&dword_233151000, v14, v15, "Connecting a secondary account for institution: %s.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v19, -1, -1);
    MEMORY[0x234934590](v18, -1, -1);
  }
  else
  {
    sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
  }

  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v22;
  *v22 = v0;
  v22[1] = sub_23318148C;
  return sub_233186788(*(_QWORD *)(v0 + 216));
}

uint64_t sub_233181140()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233181194()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  char v21;

  sub_233177068(v0[29] + 64, (uint64_t)(v0 + 7));
  v1 = v0[10];
  v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  if (qword_256041CE0 != -1)
    swift_once();
  v3 = v0[37];
  swift_beginAccess();
  v20 = qword_25604AE00;
  v21 = byte_25604AE08;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 8))(&v20, v1, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  if (v3 < 1)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_8;
  }
  v4 = v0[26];
  v5 = MEMORY[0x24BEE4AF8];
  v0[39] = 0;
  v0[40] = v5;
  swift_bridgeObjectRetain();
  if ((v4 & 0xC000000000000001) != 0)
    v6 = (id)MEMORY[0x234933120](0, v4);
  else
    v6 = *(id *)(v4 + 32);
  v0[41] = v6;
  if (qword_256041CA0 != -1)
    goto LABEL_13;
LABEL_8:
  v7 = v0[36];
  v8 = v0[27];
  v9 = sub_23361DB80();
  v0[42] = __swift_project_value_buffer(v9, (uint64_t)qword_2560495B0);
  sub_2331684BC(v8, v7, type metadata accessor for Institution);
  v10 = sub_23361DB68();
  v11 = sub_23361E750();
  v12 = os_log_type_enabled(v10, v11);
  v13 = (uint64_t *)v0[36];
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v20 = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = *v13;
    v17 = v13[1];
    swift_bridgeObjectRetain();
    v0[25] = sub_233164DCC(v16, v17, &v20);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    sub_233168500((uint64_t)v13, type metadata accessor for Institution);
    _os_log_impl(&dword_233151000, v10, v11, "Connecting a secondary account for institution: %s.", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v15, -1, -1);
    MEMORY[0x234934590](v14, -1, -1);
  }
  else
  {
    sub_233168500(v0[36], type metadata accessor for Institution);
  }

  v18 = (_QWORD *)swift_task_alloc();
  v0[43] = v18;
  *v18 = v0;
  v18[1] = sub_23318148C;
  return sub_233186788(v0[27]);
}

uint64_t sub_23318148C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2331814F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v23;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 352) + 16))
  {
    v1 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    v22 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v3;
    *v3 = v0;
    v3[1] = sub_233181830;
    return v22(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 352), v1, v2);
  }
  else
  {
    v5 = *(void **)(v0 + 328);
    swift_bridgeObjectRelease();

    v6 = *(_QWORD *)(v0 + 312) + 1;
    if (v6 == *(_QWORD *)(v0 + 296))
    {
      v7 = *(_QWORD *)(v0 + 320);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
    }
    else
    {
      v8 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v0 + 312) = v6;
      if ((v8 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x234933120]();
      else
        v9 = *(id *)(v8 + 8 * v6 + 32);
      *(_QWORD *)(v0 + 328) = v9;
      if (qword_256041CA0 != -1)
        swift_once();
      v10 = *(_QWORD *)(v0 + 288);
      v11 = *(_QWORD *)(v0 + 216);
      v12 = sub_23361DB80();
      *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
      sub_2331684BC(v11, v10, type metadata accessor for Institution);
      v13 = sub_23361DB68();
      v14 = sub_23361E750();
      v15 = os_log_type_enabled(v13, v14);
      v16 = *(uint64_t **)(v0 + 288);
      if (v15)
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v23 = v18;
        *(_DWORD *)v17 = 136315138;
        v19 = *v16;
        v20 = v16[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 200) = sub_233164DCC(v19, v20, &v23);
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        sub_233168500((uint64_t)v16, type metadata accessor for Institution);
        _os_log_impl(&dword_233151000, v13, v14, "Connecting a secondary account for institution: %s.", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v18, -1, -1);
        MEMORY[0x234934590](v17, -1, -1);
      }
      else
      {
        sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
      }

      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 344) = v21;
      *v21 = v0;
      v21[1] = sub_23318148C;
      return sub_233186788(*(_QWORD *)(v0 + 216));
    }
  }
}

uint64_t sub_233181830()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2331818A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;

  v1 = *(void **)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v4 = (uint64_t *)(v2 + *(int *)(*(_QWORD *)(v0 + 240) + 20));
  v5 = *v4;
  *(_QWORD *)(v0 + 384) = *v4;
  v6 = v4[1];
  *(_QWORD *)(v0 + 392) = v6;
  v7 = v4[2];
  *(_QWORD *)(v0 + 400) = v7;
  v8 = v4[3];
  *(_QWORD *)(v0 + 408) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v1, sel_primaryAccountIdentifier);
  v10 = sub_23361E150();
  v12 = v11;

  *(_QWORD *)(v0 + 416) = v12;
  v13 = *(_BYTE *)(v2 + *(int *)(v3 + 20));
  *(_QWORD *)(v0 + 128) = v5;
  *(_QWORD *)(v0 + 136) = v6;
  *(_QWORD *)(v0 + 144) = v7;
  *(_QWORD *)(v0 + 152) = v8;
  *(_BYTE *)(v0 + 456) = v13;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v14;
  *v14 = v0;
  v14[1] = sub_2331819B8;
  return sub_233186A2C(*(_QWORD *)(v0 + 264), (uint64_t *)(v0 + 128), v10, v12, (_BYTE *)(v0 + 456));
}

uint64_t sub_2331819B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 432) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v4 = *(_QWORD *)(v2 + 400);
    v3 = *(_QWORD *)(v2 + 408);
    *(_OWORD *)(v2 + 96) = *(_OWORD *)(v2 + 384);
    *(_QWORD *)(v2 + 112) = v4;
    *(_QWORD *)(v2 + 120) = v3;
    v5 = swift_task_alloc();
    *(_QWORD *)(v2 + 440) = v5;
    *(_QWORD *)v5 = v2;
    *(_QWORD *)(v5 + 8) = sub_233181A6C;
    v6 = *(_QWORD *)(v2 + 96);
    *(_QWORD *)(v5 + 72) = *(_QWORD *)(v2 + 232);
    *(_QWORD *)(v5 + 80) = v6;
    *(_OWORD *)(v5 + 88) = *(_OWORD *)(v2 + 104);
    *(_QWORD *)(v5 + 104) = *(_QWORD *)(v2 + 120);
  }
  return swift_task_switch();
}

uint64_t sub_233181A6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233181AD0()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (uint64_t *)(v0 + 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 432);
  sub_233168500(*(_QWORD *)(v0 + 280), (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  v3 = *(id *)(v0 + 328);
  v4 = v2;
  v5 = v3;
  v6 = v2;
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 328);
    v35 = v9;
    v10 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v38 = v37;
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(v9, sel_primaryAccountIdentifier);
    v12 = sub_23361E150();
    v14 = v13;

    v1 = (uint64_t *)(v0 + 200);
    *(_QWORD *)(v0 + 192) = sub_233164DCC(v12, v14, &v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2112;
    v15 = v2;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 184) = v16;
    sub_23361EBC4();
    *v36 = v16;

    _os_log_impl(&dword_233151000, v7, v8, "Failed to connect a secondary account: %s.\n%@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v37, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 328);

  }
  v18 = *(_QWORD *)(v0 + 312) + 1;
  if (v18 == *(_QWORD *)(v0 + 296))
  {
    v19 = *(_QWORD *)(v0 + 320);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
  }
  else
  {
    *(_QWORD *)(v0 + 312) = v18;
    v21 = *(_QWORD *)(v0 + 208);
    if ((v21 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x234933120]();
    else
      v22 = *(id *)(v21 + 8 * v18 + 32);
    *(_QWORD *)(v0 + 328) = v22;
    if (qword_256041CA0 != -1)
      swift_once();
    v23 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = sub_23361DB80();
    *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
    sub_2331684BC(v24, v23, type metadata accessor for Institution);
    v26 = sub_23361DB68();
    v27 = sub_23361E750();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(uint64_t **)(v0 + 288);
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v38 = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = *v29;
      v33 = v29[1];
      swift_bridgeObjectRetain();
      *v1 = sub_233164DCC(v32, v33, &v38);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v29, type metadata accessor for Institution);
      _os_log_impl(&dword_233151000, v26, v27, "Connecting a secondary account for institution: %s.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v31, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);
    }
    else
    {
      sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
    }

    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v34;
    *v34 = v0;
    v34[1] = sub_23318148C;
    return sub_233186788(*(_QWORD *)(v0 + 216));
  }
}

uint64_t sub_233181FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2331684BC(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4 = *(_QWORD *)(v0 + 320);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v4 = sub_2334A4744(0, *(_QWORD *)(v4 + 16) + 1, 1, *(_QWORD *)(v0 + 320));
  v6 = *(_QWORD *)(v4 + 16);
  v5 = *(_QWORD *)(v4 + 24);
  if (v6 >= v5 >> 1)
    v4 = sub_2334A4744(v5 > 1, v6 + 1, 1, v4);
  v7 = *(void **)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v4 + 16) = v6 + 1;
  sub_233168580(v9, v4+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v6, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);

  sub_233168500(v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  sub_233168500(v8, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  v12 = *(_QWORD *)(v0 + 312) + 1;
  if (v12 == *(_QWORD *)(v0 + 296))
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v4);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 312) = v12;
    *(_QWORD *)(v0 + 320) = v4;
    if ((v14 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x234933120]();
    else
      v15 = *(id *)(v14 + 8 * v12 + 32);
    *(_QWORD *)(v0 + 328) = v15;
    if (qword_256041CA0 != -1)
      swift_once();
    v16 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 216);
    v18 = sub_23361DB80();
    *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v18, (uint64_t)qword_2560495B0);
    sub_2331684BC(v17, v16, type metadata accessor for Institution);
    v19 = sub_23361DB68();
    v20 = sub_23361E750();
    v21 = os_log_type_enabled(v19, v20);
    v22 = *(uint64_t **)(v0 + 288);
    if (v21)
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v28 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = *v22;
      v26 = v22[1];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 200) = sub_233164DCC(v25, v26, &v28);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v22, type metadata accessor for Institution);
      _os_log_impl(&dword_233151000, v19, v20, "Connecting a secondary account for institution: %s.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v24, -1, -1);
      MEMORY[0x234934590](v23, -1, -1);
    }
    else
    {
      sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
    }

    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v27;
    *v27 = v0;
    v27[1] = sub_23318148C;
    return sub_233186788(*(_QWORD *)(v0 + 216));
  }
}

uint64_t sub_23318234C()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (uint64_t *)(v0 + 200);
  sub_233168500(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 448);
  sub_233168500(*(_QWORD *)(v0 + 280), (uint64_t (*)(_QWORD))type metadata accessor for AccountMatchResult);
  v3 = *(id *)(v0 + 328);
  v4 = v2;
  v5 = v3;
  v6 = v2;
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 328);
    v35 = v9;
    v10 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v38 = v37;
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(v9, sel_primaryAccountIdentifier);
    v12 = sub_23361E150();
    v14 = v13;

    v1 = (uint64_t *)(v0 + 200);
    *(_QWORD *)(v0 + 192) = sub_233164DCC(v12, v14, &v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2112;
    v15 = v2;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 184) = v16;
    sub_23361EBC4();
    *v36 = v16;

    _os_log_impl(&dword_233151000, v7, v8, "Failed to connect a secondary account: %s.\n%@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v37, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 328);

  }
  v18 = *(_QWORD *)(v0 + 312) + 1;
  if (v18 == *(_QWORD *)(v0 + 296))
  {
    v19 = *(_QWORD *)(v0 + 320);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
  }
  else
  {
    *(_QWORD *)(v0 + 312) = v18;
    v21 = *(_QWORD *)(v0 + 208);
    if ((v21 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x234933120]();
    else
      v22 = *(id *)(v21 + 8 * v18 + 32);
    *(_QWORD *)(v0 + 328) = v22;
    if (qword_256041CA0 != -1)
      swift_once();
    v23 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = sub_23361DB80();
    *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
    sub_2331684BC(v24, v23, type metadata accessor for Institution);
    v26 = sub_23361DB68();
    v27 = sub_23361E750();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(uint64_t **)(v0 + 288);
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v38 = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = *v29;
      v33 = v29[1];
      swift_bridgeObjectRetain();
      *v1 = sub_233164DCC(v32, v33, &v38);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v29, type metadata accessor for Institution);
      _os_log_impl(&dword_233151000, v26, v27, "Connecting a secondary account for institution: %s.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v31, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);
    }
    else
    {
      sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
    }

    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v34;
    *v34 = v0;
    v34[1] = sub_23318148C;
    return sub_233186788(*(_QWORD *)(v0 + 216));
  }
}

uint64_t sub_233182848()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (uint64_t *)(v0 + 200);
  v2 = *(void **)(v0 + 360);
  v3 = *(id *)(v0 + 328);
  v4 = v2;
  v5 = v3;
  v6 = v2;
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 328);
    v35 = v9;
    v10 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v38 = v37;
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(v9, sel_primaryAccountIdentifier);
    v12 = sub_23361E150();
    v14 = v13;

    v1 = (uint64_t *)(v0 + 200);
    *(_QWORD *)(v0 + 192) = sub_233164DCC(v12, v14, &v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2112;
    v15 = v2;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 184) = v16;
    sub_23361EBC4();
    *v36 = v16;

    _os_log_impl(&dword_233151000, v7, v8, "Failed to connect a secondary account: %s.\n%@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v37, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 328);

  }
  v18 = *(_QWORD *)(v0 + 312) + 1;
  if (v18 == *(_QWORD *)(v0 + 296))
  {
    v19 = *(_QWORD *)(v0 + 320);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
  }
  else
  {
    *(_QWORD *)(v0 + 312) = v18;
    v21 = *(_QWORD *)(v0 + 208);
    if ((v21 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x234933120]();
    else
      v22 = *(id *)(v21 + 8 * v18 + 32);
    *(_QWORD *)(v0 + 328) = v22;
    if (qword_256041CA0 != -1)
      swift_once();
    v23 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = sub_23361DB80();
    *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
    sub_2331684BC(v24, v23, type metadata accessor for Institution);
    v26 = sub_23361DB68();
    v27 = sub_23361E750();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(uint64_t **)(v0 + 288);
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v38 = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = *v29;
      v33 = v29[1];
      swift_bridgeObjectRetain();
      *v1 = sub_233164DCC(v32, v33, &v38);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v29, type metadata accessor for Institution);
      _os_log_impl(&dword_233151000, v26, v27, "Connecting a secondary account for institution: %s.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v31, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);
    }
    else
    {
      sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
    }

    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v34;
    *v34 = v0;
    v34[1] = sub_23318148C;
    return sub_233186788(*(_QWORD *)(v0 + 216));
  }
}

uint64_t sub_233182D04()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (uint64_t *)(v0 + 200);
  v2 = *(void **)(v0 + 376);
  v3 = *(id *)(v0 + 328);
  v4 = v2;
  v5 = v3;
  v6 = v2;
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 328);
    v35 = v9;
    v10 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v38 = v37;
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(v9, sel_primaryAccountIdentifier);
    v12 = sub_23361E150();
    v14 = v13;

    v1 = (uint64_t *)(v0 + 200);
    *(_QWORD *)(v0 + 192) = sub_233164DCC(v12, v14, &v38);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2112;
    v15 = v2;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 184) = v16;
    sub_23361EBC4();
    *v36 = v16;

    _os_log_impl(&dword_233151000, v7, v8, "Failed to connect a secondary account: %s.\n%@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v37, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 328);

  }
  v18 = *(_QWORD *)(v0 + 312) + 1;
  if (v18 == *(_QWORD *)(v0 + 296))
  {
    v19 = *(_QWORD *)(v0 + 320);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
  }
  else
  {
    *(_QWORD *)(v0 + 312) = v18;
    v21 = *(_QWORD *)(v0 + 208);
    if ((v21 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x234933120]();
    else
      v22 = *(id *)(v21 + 8 * v18 + 32);
    *(_QWORD *)(v0 + 328) = v22;
    if (qword_256041CA0 != -1)
      swift_once();
    v23 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = sub_23361DB80();
    *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
    sub_2331684BC(v24, v23, type metadata accessor for Institution);
    v26 = sub_23361DB68();
    v27 = sub_23361E750();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(uint64_t **)(v0 + 288);
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v38 = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = *v29;
      v33 = v29[1];
      swift_bridgeObjectRetain();
      *v1 = sub_233164DCC(v32, v33, &v38);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      sub_233168500((uint64_t)v29, type metadata accessor for Institution);
      _os_log_impl(&dword_233151000, v26, v27, "Connecting a secondary account for institution: %s.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v31, -1, -1);
      MEMORY[0x234934590](v30, -1, -1);
    }
    else
    {
      sub_233168500(*(_QWORD *)(v0 + 288), type metadata accessor for Institution);
    }

    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v34;
    *v34 = v0;
    v34[1] = sub_23318148C;
    return sub_233186788(*(_QWORD *)(v0 + 216));
  }
}

uint64_t BankConnectAccountLinker.connectUnlinkedAccounts(for:shouldFetchTransactions:userPresence:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 40) = v6;
  *v6 = v4;
  v6[1] = sub_233183244;
  v6[6] = a1;
  v6[7] = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v6[8] = v7;
  *v7 = v6;
  v7[1] = sub_23317FF60;
  return sub_233186788(a1);
}

uint64_t sub_233183244(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *v1;
  v4 = *v1;
  *(_QWORD *)(*v1 + 48) = a1;
  swift_task_dealloc();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 56) = v5;
  *v5 = v4;
  v5[1] = sub_2331832C4;
  return sub_233180C98(a1, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 64), *(_QWORD *)(v3 + 24));
}

uint64_t sub_2331832C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23318331C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_23361E96C();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233183380()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v5 = v0[5];
  v4 = v0[6];
  v6 = objc_msgSend(*(id *)(*(_QWORD *)(v0[7] + 16) + 16), sel_newBackgroundContext);
  v0[11] = v6;
  v7 = (_QWORD *)swift_allocObject();
  v0[12] = v7;
  v7[2] = v5;
  v7[3] = v4;
  v7[4] = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BDBB370], v3);
  swift_bridgeObjectRetain();
  v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[13] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  *v8 = v0;
  v8[1] = sub_233183488;
  return sub_23361E990();
}

uint64_t sub_233183488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23318351C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233183554()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 112);
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 48);
  if (v7)
  {
    v18 = *(_QWORD *)(v0 + 40);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_233164DCC(v18, v9, &v19);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    v13 = v8;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v14;
    sub_23361EBC4();
    *v11 = v14;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to fetch an account with externalAccountID %s. %@.", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v12, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v15 = *(_QWORD *)(v0 + 32);
  v16 = type metadata accessor for InternalAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233183804(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23361E96C();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = *(_QWORD *)(type metadata accessor for Institution(0) - 8);
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 + 64);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23318388C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v14 = v0[7];
  v4 = v0[6];
  v13 = v0[5];
  v6 = v0[3];
  v5 = v0[4];
  v7 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 16) + 16), sel_newBackgroundContext);
  v0[11] = v7;
  sub_2331684BC(v6, v1, type metadata accessor for Institution);
  v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v9 = (v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = swift_allocObject();
  v0[12] = v10;
  sub_233168580(v1, v10 + v8, type metadata accessor for Institution);
  *(_QWORD *)(v10 + v9) = v7;
  *(_QWORD *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)) = v5;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v14, *MEMORY[0x24BDBB370], v13);
  v7;
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  v0[13] = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560486A0);
  *v11 = v0;
  v11[1] = sub_2331839F0;
  return sub_23361E990();
}

uint64_t sub_2331839F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233183A84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_233183ADC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233183B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[32] = v11;
  v8[33] = v12;
  v8[30] = a7;
  v8[31] = a8;
  v8[28] = a5;
  v8[29] = a6;
  v8[26] = a3;
  v8[27] = a4;
  v8[24] = a1;
  v8[25] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  v8[34] = swift_task_alloc();
  v9 = type metadata accessor for InternalAccount();
  v8[35] = v9;
  v8[36] = *(_QWORD *)(v9 - 8);
  v8[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233183BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t inited;
  id v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 200);
    v3 = *(_QWORD *)(v0 + 216);
    v2 = *(_QWORD *)(v0 + 224);
    *(_QWORD *)(v0 + 144) = v1;
    *(_QWORD *)(v0 + 152) = v3;
    *(_QWORD *)(v0 + 160) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v4;
    *v4 = v0;
    v4[1] = sub_233183E5C;
    return sub_233184400(*(_QWORD *)(v0 + 272), (uint64_t *)(v0 + 136));
  }
  else
  {
    if (qword_254246F70 != -1)
      swift_once();
    v6 = (void *)qword_254246F68;
    v7 = (void *)sub_23361E12C();
    LODWORD(v6) = objc_msgSend(v6, sel_BOOLForKey_, v7);

    if ((_DWORD)v6)
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v8 = sub_23361DB80();
      __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
      v9 = sub_23361DB68();
      v10 = sub_23361E750();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_233151000, v9, v10, "Show account matching picker while connecting a primary account", v11, 2u);
        MEMORY[0x234934590](v11, -1, -1);
      }
      v12 = *(_QWORD *)(v0 + 240);

      sub_23318BF8C();
      swift_allocError();
      *(_QWORD *)v13 = v12;
      *(_QWORD *)(v13 + 8) = 0;
      *(_BYTE *)(v13 + 16) = 3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v14 = *(void **)(v0 + 248);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
      inited = swift_initStackObject();
      *(_QWORD *)(v0 + 312) = inited;
      *(_OWORD *)(inited + 16) = xmmword_233625CF0;
      *(_QWORD *)(inited + 32) = v14;
      v18 = inited;
      sub_23361E408();
      *(_QWORD *)(v0 + 320) = v18;
      v16 = v14;
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 328) = v17;
      *v17 = v0;
      v17[1] = sub_23318417C;
      return sub_233184A1C(v18, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
    }
  }
}

uint64_t sub_233183E5C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233183EB0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  void *v14;
  uint64_t inited;
  id v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = v0[34];
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[36] + 48))(v1, 1, v0[35]) != 1)
  {
    v11 = v0[37];
    v12 = v0[24];
    sub_233168580(v1, v11, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    sub_233168580(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    *(_BYTE *)(v12 + *(int *)(type metadata accessor for AccountMatchResult() + 20)) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  sub_233168608(v1, &qword_2560486B0);
  if (qword_254246F70 != -1)
    swift_once();
  v2 = (void *)qword_254246F68;
  v3 = (void *)sub_23361E12C();
  LODWORD(v2) = objc_msgSend(v2, sel_BOOLForKey_, v3);

  if ((_DWORD)v2)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v4 = sub_23361DB80();
    __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
    v5 = sub_23361DB68();
    v6 = sub_23361E750();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_233151000, v5, v6, "Show account matching picker while connecting a primary account", v7, 2u);
      MEMORY[0x234934590](v7, -1, -1);
    }
    v8 = v0[30];

    sub_23318BF8C();
    swift_allocError();
    *(_QWORD *)v9 = v8;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  v14 = (void *)v0[31];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  inited = swift_initStackObject();
  v0[39] = inited;
  *(_OWORD *)(inited + 16) = xmmword_233625CF0;
  *(_QWORD *)(inited + 32) = v14;
  v18 = inited;
  sub_23361E408();
  v0[40] = v18;
  v16 = v14;
  v17 = (_QWORD *)swift_task_alloc();
  v0[41] = v17;
  *v17 = v0;
  v17[1] = sub_23318417C;
  return sub_233184A1C(v18, v0[32], v0[33]);
}

uint64_t sub_23318417C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2331841D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v8;
  char v9;

  sub_233177068(v0[29] + 64, (uint64_t)(v0 + 12));
  v1 = v0[15];
  v2 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 12, v1);
  if (qword_256041CE0 != -1)
    swift_once();
  swift_beginAccess();
  v8 = qword_25604AE00;
  v9 = byte_25604AE08;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 8))(&v8, v1, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 12));
  v3 = v0[10];
  v4 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v3);
  v7 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[42] = v5;
  *v5 = v0;
  v5[1] = sub_23318430C;
  return v7(v0[24], v0[31], v0[30], v3, v4);
}

uint64_t sub_23318430C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233184370()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331843B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233184400(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v2;
  v5 = sub_23361E96C();
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a2;
  *(_QWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 72) = v7;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v3 + 96) = a2[3];
  return swift_task_switch();
}

uint64_t sub_233184478()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  _QWORD *v10;

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v6 = v0[7];
  v5 = v0[8];
  v7 = v0[6];
  v8 = objc_msgSend(*(id *)(*(_QWORD *)(v0[5] + 16) + 16), sel_newBackgroundContext);
  v0[13] = v8;
  v9 = (_QWORD *)swift_allocObject();
  v0[14] = v9;
  v9[2] = v4;
  v9[3] = v3;
  v9[4] = v2;
  v9[5] = v1;
  v9[6] = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDBB370], v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[15] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  *v10 = v0;
  v10[1] = sub_233184594;
  return sub_23361E990();
}

uint64_t sub_233184594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233184628()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233184660()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17[3];

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 128);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17[0] = v16;
    *(_DWORD *)v9 = 136315394;
    v17[1] = 0;
    v17[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361ED98();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = sub_233164DCC(0, 0xE000000000000000, v17);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    v10 = v8;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v11;
    sub_23361EBC4();
    *v15 = v11;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to fetch an account with accountID %s. %@.", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v16, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v12 = *(_QWORD *)(v0 + 32);
  v13 = type metadata accessor for InternalAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233184A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4[17] = a3;
  v4[18] = v3;
  v4[16] = a1;
  v4[19] = *(_QWORD *)(type metadata accessor for BankConnectTransactionsDataLoader.DateQuery() - 8);
  v4[20] = swift_task_alloc();
  v6 = type metadata accessor for InternalAccount();
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v7 = sub_23361D634();
  v4[24] = v7;
  v4[25] = *(_QWORD *)(v7 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = type metadata accessor for BankConnectLinkingDateQueryCalculator();
  v4[28] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v4[29] = v8;
  *v8 = v4;
  v8[1] = sub_233184B08;
  return sub_233183804(a2);
}

uint64_t sub_233184B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 248) = a1;
  return swift_task_switch();
}

uint64_t sub_233184B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v11;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD **)(v0 + 144);
  v4 = v3[16];
  v5 = v3[17];
  __swift_project_boxed_opaque_existential_1(v3 + 13, v4);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v5 + 8))(&v11, v4, v5);
  v6 = v11;
  *(_QWORD *)(v0 + 256) = sub_23318B7EC(v1, v11);

  swift_bridgeObjectRelease();
  v7 = v3[21];
  v8 = v3[22];
  __swift_project_boxed_opaque_existential_1(v3 + 18, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_233177068(v0 + 16, v2);
  sub_23361D7D8();
  sub_23361D5F8();
  *(_BYTE *)(v0 + 372) = 1;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v9;
  *v9 = v0;
  v9[1] = sub_233184CAC;
  return BankConnectLinkingDateQueryCalculator.linkingDateQueries(forTransactionsFrom:now:calculation:)(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 208), (_BYTE *)(v0 + 372));
}

uint64_t sub_233184CAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[34] = a1;
  v3[35] = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v3[25] + 8))(v3[26], v3[24]);
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233184D44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 240);
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_23361F2E4();
    *(_QWORD *)(v0 + 120) = sub_233164DCC(v9, v10, &v12);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v5, v6, "    Failed to load BankConnect transactions for account matching.     %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233184F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 288) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 296) = *(_QWORD *)(*(_QWORD *)(v0 + 272) + 16);
    *(_DWORD *)(v0 + 360) = *(_DWORD *)(v3 + 80);
    *(_QWORD *)(v0 + 304) = 0;
    if (*(_QWORD *)(v1 + 16))
    {
      v4 = 0;
      while (1)
      {
        v5 = *(_QWORD *)(v0 + 296);
        sub_2331684BC(v1+ ((*(unsigned __int8 *)(v0 + 360) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 360))+ *(_QWORD *)(*(_QWORD *)(v0 + 176) + 72) * v4, *(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        if (v5)
          break;
        v6 = *(_QWORD *)(v0 + 288);
        v7 = *(_QWORD *)(v0 + 304) + 1;
        sub_233168500(*(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        if (v7 == v6)
          goto LABEL_9;
        v4 = *(_QWORD *)(v0 + 304) + 1;
        *(_QWORD *)(v0 + 304) = v4;
        v1 = *(_QWORD *)(v0 + 256);
        if (v4 >= *(_QWORD *)(v1 + 16))
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      __break(1u);
    }
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(int *)(*(_QWORD *)(v0 + 168) + 20);
    *(_DWORD *)(v0 + 364) = v10;
    v11 = (uint64_t *)(v8 + v10);
    v13 = *(_QWORD **)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 152);
    LODWORD(v10) = *(_DWORD *)(v12 + 80);
    *(_DWORD *)(v0 + 368) = v10;
    v14 = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v0 + 312) = *(_QWORD *)(v12 + 72);
    *(_QWORD *)(v0 + 320) = 0;
    v15 = v14 + ((v10 + 32) & ~(unint64_t)v10);
    v16 = v13 + 28;
    swift_bridgeObjectRetain();
    sub_2331684BC(v15, v9, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
    v17 = v13[31];
    v18 = v13[32];
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v20 = *v11;
    v19 = v11[1];
    *(_QWORD *)(v0 + 328) = v19;
    v21 = v11[2];
    v22 = v11[3];
    *(_QWORD *)(v0 + 336) = v22;
    *(_QWORD *)(v0 + 56) = v20;
    *(_QWORD *)(v0 + 64) = v19;
    *(_QWORD *)(v0 + 72) = v21;
    *(_QWORD *)(v0 + 80) = v22;
    v26 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v18 + 8) + *(_QWORD *)(v18 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v23;
    *v23 = v0;
    v23[1] = sub_233185198;
    return v26(v0 + 56, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), v17, v18);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v0 + 224);
    swift_bridgeObjectRelease();
    sub_233168500(v25, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectLinkingDateQueryCalculator);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_233185198()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233185240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 320) + 1;
  sub_233168500(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    while (1)
    {
      v3 = *(_QWORD *)(v0 + 288);
      v4 = *(_QWORD *)(v0 + 304) + 1;
      result = sub_233168500(*(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      if (v4 == v3)
      {
        swift_bridgeObjectRelease();
        v24 = *(_QWORD *)(v0 + 224);
        swift_bridgeObjectRelease();
        sub_233168500(v24, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectLinkingDateQueryCalculator);
        __swift_destroy_boxed_opaque_existential_0(v0 + 16);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v6 = *(_QWORD *)(v0 + 304) + 1;
      *(_QWORD *)(v0 + 304) = v6;
      v7 = *(_QWORD *)(v0 + 256);
      if (v6 >= *(_QWORD *)(v7 + 16))
        break;
      v8 = *(_QWORD *)(v0 + 296);
      sub_2331684BC(v7+ ((*(unsigned __int8 *)(v0 + 360) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 360))+ *(_QWORD *)(*(_QWORD *)(v0 + 176) + 72) * v6, *(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      if (v8)
      {
        v9 = *(_QWORD *)(v0 + 152);
        v10 = *(_DWORD *)(*(_QWORD *)(v0 + 168) + 20);
        *(_DWORD *)(v0 + 364) = v10;
        v11 = *(_DWORD *)(v9 + 80);
        *(_DWORD *)(v0 + 368) = v11;
        v12 = *(_QWORD *)(v9 + 72);
        *(_QWORD *)(v0 + 312) = v12;
        v13 = swift_bridgeObjectRetain();
        v14 = 0;
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 320) + 1;
    LOBYTE(v11) = *(_BYTE *)(v0 + 368);
    v10 = *(_DWORD *)(v0 + 364);
    v13 = *(_QWORD *)(v0 + 272);
LABEL_8:
    *(_QWORD *)(v0 + 320) = v14;
    v15 = *(_QWORD **)(v0 + 144);
    v16 = (uint64_t *)(*(_QWORD *)(v0 + 184) + v10);
    sub_2331684BC(v13 + ((v11 + 32) & ~(unint64_t)v11) + v12 * v14, *(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
    v17 = v15[31];
    v18 = v15[32];
    __swift_project_boxed_opaque_existential_1(v15 + 28, v17);
    v20 = *v16;
    v19 = v16[1];
    *(_QWORD *)(v0 + 328) = v19;
    v21 = v16[2];
    v22 = v16[3];
    *(_QWORD *)(v0 + 336) = v22;
    *(_QWORD *)(v0 + 56) = v20;
    *(_QWORD *)(v0 + 64) = v19;
    *(_QWORD *)(v0 + 72) = v21;
    *(_QWORD *)(v0 + 80) = v22;
    v25 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v18 + 8) + *(_QWORD *)(v18 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v23;
    *v23 = v0;
    v23[1] = sub_233185198;
    return v25(v0 + 56, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), v17, v18);
  }
  return result;
}

uint64_t sub_233185498()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  sub_233168500(*(_QWORD *)(v0 + 224), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectLinkingDateQueryCalculator);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = *(void **)(v0 + 280);
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_23361F2E4();
    *(_QWORD *)(v0 + 120) = sub_233164DCC(v9, v10, &v12);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v5, v6, "    Failed to load BankConnect transactions for account matching.     %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v8, -1, -1);
    MEMORY[0x234934590](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331856C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 184);
  sub_233168500(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTransactionsDataLoader.DateQuery);
  sub_233168500(v2, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectLinkingDateQueryCalculator);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v3 = *(void **)(v0 + 352);
  if (qword_256041CA0 != -1)
    swift_once();
  v4 = sub_23361DB80();
  __swift_project_value_buffer(v4, (uint64_t)qword_2560495B0);
  v5 = v3;
  v6 = v3;
  v7 = sub_23361DB68();
  v8 = sub_23361E768();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_23361F2E4();
    *(_QWORD *)(v0 + 120) = sub_233164DCC(v11, v12, &v14);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v7, v8, "    Failed to load BankConnect transactions for account matching.     %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233185920(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 96) = v3;
  *(_QWORD *)(v4 + 80) = a2;
  v6 = type metadata accessor for InternalAccount();
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  *(_QWORD *)(v4 + 136) = swift_task_alloc();
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  v7 = swift_task_alloc();
  v8 = *a1;
  *(_QWORD *)(v4 + 176) = v7;
  *(_QWORD *)(v4 + 184) = v8;
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v4 + 208) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233185A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 216) = v2;
  if (!v2)
  {
LABEL_13:
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 56);
    v17(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 104));
    goto LABEL_16;
  }
  v3 = *(_QWORD *)(v0 + 112);
  v91 = *(_QWORD *)(v0 + 104);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(void **)(v0 + 80);
    sub_2331684BC(v4, v6, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v8 = (uint64_t *)(v6 + *(int *)(v91 + 32));
    v10 = *v8;
    v9 = v8[1];
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v7, sel_primaryAccountIdentifier);
    v12 = sub_23361E150();
    v14 = v13;

    if (!v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v10 == v12 && v9 == v14)
      break;
    v16 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      goto LABEL_15;
LABEL_4:
    sub_233168500(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v4 += v5;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  v18 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  sub_233168580(v19, v18, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v17(v18, 0, 1, v20);
LABEL_16:
  v23 = (uint64_t *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 224) = v17;
  v24 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 112);
  sub_23318C184(v22, v24);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  *(_QWORD *)(v0 + 232) = v27;
  if (v27(v24, 1, v25) != 1)
  {
    v46 = *(_QWORD *)(v0 + 184);
    v45 = *(_QWORD *)(v0 + 192);
    v47 = *(_QWORD *)(v0 + 144);
    v48 = *(_QWORD *)(v0 + 104);
    sub_233168580(*(_QWORD *)(v0 + 168), v47, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v49 = (uint64_t *)(v47 + *(int *)(v48 + 20));
    v51 = *v49;
    v50 = v49[1];
    *(_QWORD *)(v0 + 240) = v50;
    v53 = v49[2];
    v52 = v49[3];
    *(_QWORD *)(v0 + 248) = v52;
    v54 = v51 == v46 && v50 == v45;
    if (!v54 && (sub_23361F224() & 1) == 0
      || (v53 != *(_QWORD *)(v0 + 200) || v52 != *(_QWORD *)(v0 + 208)) && (sub_23361F224() & 1) == 0)
    {
      v55 = *(_QWORD **)(v0 + 96);
      v56 = v55[36];
      v57 = v55[37];
      __swift_project_boxed_opaque_existential_1(v55 + 33, v56);
      *(_QWORD *)(v0 + 48) = v51;
      *(_QWORD *)(v0 + 56) = v50;
      *(_QWORD *)(v0 + 64) = v53;
      *(_QWORD *)(v0 + 72) = v52;
      v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v57 + 8) + *(_QWORD *)(v57 + 8));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v58;
      *v58 = v0;
      v58[1] = sub_233186098;
      v59 = v0 + 48;
      v60 = v56;
      v61 = v57;
      return v92(v59, v60, v61);
    }
    sub_233168500(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    if (*(_QWORD *)(v0 + 216))
      goto LABEL_18;
LABEL_40:
    v44 = 1;
    goto LABEL_44;
  }
  sub_233168608(*(_QWORD *)(v0 + 168), &qword_2560486B0);
  if (!*(_QWORD *)(v0 + 216))
    goto LABEL_40;
LABEL_18:
  v29 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 112);
  v30 = *(_QWORD *)(v0 + 88)
      + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v31 = *(_QWORD *)(v28 + 72);
  swift_bridgeObjectRetain();
  v32 = 0;
  do
  {
    v34 = *(_QWORD *)(v0 + 184);
    v35 = *(_QWORD *)(v0 + 192);
    v36 = *(_QWORD *)(v0 + 120);
    sub_2331684BC(v30, v36, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v37 = (_QWORD *)(v36 + *(int *)(v29 + 20));
    v38 = v37[2];
    v39 = v37[3];
    v40 = *v37 == v34 && v37[1] == v35;
    if (v40 || (sub_23361F224() & 1) != 0)
    {
      v41 = v38 == *(_QWORD *)(v0 + 200) && v39 == *(_QWORD *)(v0 + 208);
      if (v41 || (sub_23361F224() & 1) != 0)
      {
        v42 = *(_QWORD *)(v0 + 160);
        v43 = *(_QWORD *)(v0 + 120);
        swift_bridgeObjectRelease();
        sub_233168580(v43, v42, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v44 = 0;
        goto LABEL_43;
      }
    }
    ++v32;
    v33 = *(_QWORD *)(v0 + 216);
    sub_233168500(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v30 += v31;
  }
  while (v32 != v33);
  swift_bridgeObjectRelease();
  v44 = 1;
LABEL_43:
  v23 = (uint64_t *)(v0 + 176);
LABEL_44:
  v63 = (uint64_t *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 160);
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v65 = *(_QWORD *)(v0 + 152);
  v66 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 224))(v62, v44, 1, v66);
  sub_23318C184(v62, v65);
  if (v64(v65, 1, v66) == 1)
  {
    sub_233168608(*v63, &qword_2560486B0);
    v63 = v23;
    v23 = (uint64_t *)(v0 + 152);
    goto LABEL_52;
  }
  v67 = *(_QWORD *)(v0 + 128);
  v68 = *(_QWORD *)(v0 + 104);
  sub_233168580(*(_QWORD *)(v0 + 152), v67, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  v69 = (uint64_t *)(v67 + *(int *)(v68 + 32));
  v70 = v69[1];
  if (v70)
  {
    v71 = *v69;
    v72 = *(void **)(v0 + 80);
    swift_bridgeObjectRetain();
    v73 = objc_msgSend(v72, sel_primaryAccountIdentifier);
    v74 = sub_23361E150();
    v76 = v75;

    if (v71 == v74 && v70 == v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    v77 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v77 & 1) != 0)
      goto LABEL_51;
    v80 = *(_QWORD *)(v0 + 128);
    v81 = *(_QWORD **)(v0 + 96);
    v82 = *(_QWORD *)(v0 + 104);
    v83 = v81[36];
    v84 = v81[37];
    __swift_project_boxed_opaque_existential_1(v81 + 33, v83);
    v85 = (uint64_t *)(v80 + *(int *)(v82 + 20));
    v87 = *v85;
    v86 = v85[1];
    *(_QWORD *)(v0 + 272) = v86;
    v88 = v85[2];
    v89 = v85[3];
    *(_QWORD *)(v0 + 280) = v89;
    *(_QWORD *)(v0 + 16) = v87;
    *(_QWORD *)(v0 + 24) = v86;
    *(_QWORD *)(v0 + 32) = v88;
    *(_QWORD *)(v0 + 40) = v89;
    v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v84 + 8) + *(_QWORD *)(v84 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v90 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v90;
    *v90 = v0;
    v90[1] = sub_2331864C0;
    v59 = v0 + 16;
    v60 = v83;
    v61 = v84;
    return v92(v59, v60, v61);
  }
  else
  {
LABEL_51:
    sub_233168500(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
LABEL_52:
    v78 = *v23;
    sub_233168608(*v63, &qword_2560486B0);
    sub_233168608(v78, &qword_2560486B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_233186098()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233186118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);

  sub_233168500(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  if (*(_QWORD *)(v0 + 216))
  {
    v2 = *(_QWORD *)(v0 + 104);
    v1 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 88)
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v4 = *(_QWORD *)(v1 + 72);
    swift_bridgeObjectRetain();
    v5 = 0;
    do
    {
      v8 = *(_QWORD *)(v0 + 184);
      v7 = *(_QWORD *)(v0 + 192);
      v9 = *(_QWORD *)(v0 + 120);
      sub_2331684BC(v3, v9, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v10 = (_QWORD *)(v9 + *(int *)(v2 + 20));
      v11 = v10[2];
      v12 = v10[3];
      v13 = *v10 == v8 && v10[1] == v7;
      if (v13 || (sub_23361F224() & 1) != 0)
      {
        v14 = v11 == *(_QWORD *)(v0 + 200) && v12 == *(_QWORD *)(v0 + 208);
        if (v14 || (sub_23361F224() & 1) != 0)
        {
          v15 = *(_QWORD *)(v0 + 160);
          v16 = *(_QWORD *)(v0 + 120);
          swift_bridgeObjectRelease();
          sub_233168580(v16, v15, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
          v17 = 0;
          goto LABEL_17;
        }
      }
      ++v5;
      v6 = *(_QWORD *)(v0 + 216);
      sub_233168500(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v3 += v4;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
  }
  v17 = 1;
LABEL_17:
  v19 = (uint64_t *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 160);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v22 = (uint64_t *)(v0 + 152);
  v21 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 224))(v18, v17, 1, v23);
  sub_23318C184(v18, v21);
  if (v20(v21, 1, v23) == 1)
  {
    sub_233168608(*(_QWORD *)(v0 + 160), &qword_2560486B0);
    v19 = (uint64_t *)(v0 + 176);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 104);
    sub_233168580(*(_QWORD *)(v0 + 152), v24, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v26 = (uint64_t *)(v24 + *(int *)(v25 + 32));
    v27 = v26[1];
    if (v27)
    {
      v28 = *v26;
      v29 = *(void **)(v0 + 80);
      swift_bridgeObjectRetain();
      v30 = objc_msgSend(v29, sel_primaryAccountIdentifier);
      v31 = sub_23361E150();
      v33 = v32;

      if (v28 == v31 && v27 == v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = sub_23361F224();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
          v36 = *(_QWORD *)(v0 + 128);
          v37 = *(_QWORD **)(v0 + 96);
          v38 = *(_QWORD *)(v0 + 104);
          v39 = v37[36];
          v40 = v37[37];
          __swift_project_boxed_opaque_existential_1(v37 + 33, v39);
          v41 = (uint64_t *)(v36 + *(int *)(v38 + 20));
          v43 = *v41;
          v42 = v41[1];
          *(_QWORD *)(v0 + 272) = v42;
          v44 = v41[2];
          v45 = v41[3];
          *(_QWORD *)(v0 + 280) = v45;
          *(_QWORD *)(v0 + 16) = v43;
          *(_QWORD *)(v0 + 24) = v42;
          *(_QWORD *)(v0 + 32) = v44;
          *(_QWORD *)(v0 + 40) = v45;
          v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v40 + 8) + *(_QWORD *)(v40 + 8));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v46 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 288) = v46;
          *v46 = v0;
          v46[1] = sub_2331864C0;
          return v49(v0 + 16, v39, v40);
        }
      }
    }
    sub_233168500(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    v22 = (uint64_t *)(v0 + 176);
  }
  v48 = *v22;
  sub_233168608(*v19, &qword_2560486B0);
  sub_233168608(v48, &qword_2560486B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331864C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233186540()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168500(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  v1 = *(_QWORD *)(v0 + 176);
  sub_233168608(*(_QWORD *)(v0 + 160), &qword_2560486B0);
  sub_233168608(v1, &qword_2560486B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23318660C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_233168500(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  sub_233168608(v1, &qword_2560486B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331866C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  sub_233168500(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  sub_233168608(v2, &qword_2560486B0);
  sub_233168608(v1, &qword_2560486B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233186788(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = type metadata accessor for InternalAccount();
  v1[2] = v3;
  v1[3] = *(_QWORD *)(v3 - 8);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  v4 = (_QWORD *)swift_task_alloc();
  v1[6] = v4;
  *v4 = v1;
  v4[1] = sub_233186814;
  return sub_233183804(a1);
}

uint64_t sub_233186814(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_233186898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = MEMORY[0x24BEE4AF8];
  v16 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = v2 + 8;
    v7 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 16);
    v14 = *(_QWORD *)(v0 + 56);
    while (v5 < *(_QWORD *)(v1 + 16))
    {
      v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v9 = *(_QWORD *)(v7 + 72);
      sub_2331684BC(*(_QWORD *)(v0 + 56) + v8 + v9 * v5, *(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      v10 = *(_QWORD *)(v0 + 40);
      if (*(_QWORD *)(v6 + *(int *)(v15 + 32)))
      {
        sub_233168500(v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
      }
      else
      {
        sub_233168580(v10, *(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2332738EC(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v16;
        }
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_2332738EC(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        v13 = *(_QWORD *)(v0 + 32);
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_233168580(v13, v3 + v8 + v12 * v9, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
        v6 = v2 + 8;
        v1 = v14;
      }
      if (v4 == ++v5)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v3);
  }
}

uint64_t sub_233186A2C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v6 + 88) = a4;
  *(_QWORD *)(v6 + 96) = v5;
  *(_QWORD *)(v6 + 72) = a1;
  *(_QWORD *)(v6 + 80) = a3;
  v9 = sub_23361CAC4();
  *(_QWORD *)(v6 + 104) = v9;
  *(_QWORD *)(v6 + 112) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  type metadata accessor for BankConnectConsent();
  v10 = swift_task_alloc();
  v11 = *a2;
  *(_QWORD *)(v6 + 128) = v10;
  *(_QWORD *)(v6 + 136) = v11;
  *(_OWORD *)(v6 + 144) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v6 + 160) = a2[3];
  *(_BYTE *)(v6 + 208) = *a5;
  return swift_task_switch();
}

uint64_t sub_233186ADC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E750();
  if (os_log_type_enabled(v2, v3))
  {
    v36 = *(unsigned __int8 *)(v0 + 208);
    v4 = *(_QWORD *)(v0 + 88);
    v35 = *(_QWORD *)(v0 + 80);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v42[0] = v6;
    *(_DWORD *)v5 = 136315650;
    *(_QWORD *)&v39 = 0;
    *((_QWORD *)&v39 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361ED98();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = sub_233164DCC(0, 0xE000000000000000, v42);
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_233164DCC(v35, v4, v42);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 64) = v36;
    sub_23361EBC4();
    _os_log_impl(&dword_233151000, v2, v3, "    linkAccount with fqaID: %s;\n    fpanID: %s;\n    matchingType: %ld",
      (uint8_t *)v5,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v6, -1, -1);
    MEMORY[0x234934590](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v8 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 160);
  v37 = *(_OWORD *)(v0 + 136);
  v9 = *(_QWORD **)(v0 + 96);
  v10 = v9[26];
  v11 = v9[27];
  __swift_project_boxed_opaque_existential_1(v9 + 23, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  *(_QWORD *)(v0 + 168) = v12;
  v13 = v9 + 3;
  v14 = v9[6];
  v15 = v9[7];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v39 = v37;
  v40 = v8;
  v41 = v7;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v15 + 16))(&v39, v14, v15);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v17 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 160);
  v38 = *(_OWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_256045900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v21, v20);
  sub_23361CADC();
  *(_OWORD *)(v0 + 16) = v38;
  *(_QWORD *)(v0 + 32) = v17;
  *(_QWORD *)(v0 + 40) = v16;
  sub_23317220C();
  v22 = sub_23361CAE8();
  v23 = *(_QWORD *)(v0 + 128);
  v24 = v22;
  v26 = v25;
  v28 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  swift_release();
  v29 = sub_23361D3B8();
  v31 = v30;
  *(_QWORD *)(v0 + 176) = v30;
  sub_23316BEA4(v24, v26);
  v32 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v32;
  v32[2] = v12;
  v32[3] = v23;
  v32[4] = v28;
  v32[5] = v27;
  v32[6] = v29;
  v32[7] = v31;
  *(_QWORD *)&v38 = (char *)&dword_256057878 + dword_256057878;
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v33;
  *v33 = v0;
  v33[1] = sub_233187068;
  return ((uint64_t (*)(uint64_t, int *))v38)(v38, (int *)&unk_256042B48);
}

uint64_t sub_233187068()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2331870E4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  v15 = *(_QWORD *)(v0 + 200);
  v1 = *(_BYTE *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v14 = *(_OWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = objc_msgSend(*(id *)(*(_QWORD *)(v4 + 16) + 16), sel_newBackgroundContext);
  v8 = swift_task_alloc();
  *(_OWORD *)(v8 + 16) = v14;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  *(_QWORD *)(v8 + 48) = v7;
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v5;
  *(_BYTE *)(v8 + 80) = v1;
  v9 = (_QWORD *)swift_task_alloc();
  v9[2] = sub_23318C05C;
  v9[3] = v8;
  v9[4] = v7;
  type metadata accessor for InternalAccount();
  sub_23361E960();
  v10 = *(_QWORD *)(v0 + 128);
  if (v15)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_233168500(v10, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);

  }
  else
  {
    v11 = *(void **)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_2331882D0(v12, v11);
    swift_release();

    sub_233168500(v10, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233187278()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release();
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331872D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 72) = v1;
  *(_QWORD *)(v2 + 80) = v3;
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 104) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233187348()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  NSObject *v10;
  _QWORD *v11;

  v1 = *(_QWORD **)(v0 + 72);
  v2 = v1[2];
  type metadata accessor for BankConnectPassKitTransactionsImporter();
  v3 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 112) = v3;
  v3[2] = v2;
  type metadata accessor for ManagedTransactionImporter();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  v3[3] = v4;
  type metadata accessor for BankConnectTransactionsMatcher();
  v3[4] = swift_allocObject();
  v5 = v1 + 18;
  v6 = v1[21];
  v7 = v1[22];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  swift_retain();
  v8(v6, v7);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6EC00]), sel_init);
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 120) = v9;
  *(_QWORD *)(v0 + 64) = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v10 = _os_activity_create(&dword_233151000, "bankConnect/importPassKitTransactions", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  *(_QWORD *)(v0 + 128) = v10;
  os_activity_scope_enter(v10, (os_activity_scope_state_t)(v0 + 56));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *v11 = v0;
  v11[1] = sub_2331874FC;
  return sub_233414CC8((uint64_t)v11, (uint64_t)v3, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), v0 + 16, (uint64_t)v9);
}

uint64_t sub_2331874FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2331875A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 56));
  swift_unknownObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23318763C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 56));
  swift_unknownObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2331876D4(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  id v36;
  void *v37;
  uint64_t v38;
  objc_super v39;
  uint64_t v40;

  v36 = a2;
  v35 = a3;
  v4 = type metadata accessor for InternalAccount();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalAccount();
  v39.receiver = (id)swift_getObjCClassFromMetadata();
  v39.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v8 = objc_msgSendSuper2(&v39, sel_fetchRequest);
  v9 = MEMORY[0x24BEE0D00];
  v10 = (void *)sub_23361E3D8();
  objc_msgSend(v8, sel_setRelationshipKeyPathsForPrefetching_, v10);

  v12 = *a1;
  v11 = a1[1];
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_233623D60;
  *(_QWORD *)(v13 + 56) = v9;
  *(_QWORD *)(v13 + 64) = sub_2331683F0();
  *(_QWORD *)(v13 + 32) = v12;
  *(_QWORD *)(v13 + 40) = v11;
  swift_bridgeObjectRetain();
  v14 = (void *)sub_23361E6B4();
  objc_msgSend(v8, sel_setPredicate_, v14);

  v15 = v37;
  v16 = sub_23361E984();
  if (v15)
  {

    if (qword_256041CA0 != -1)
      swift_once();
    v17 = sub_23361DB80();
    __swift_project_value_buffer(v17, (uint64_t)qword_2560495B0);
    v18 = v15;
    v19 = v15;
    v20 = sub_23361DB68();
    v21 = sub_23361E768();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v40 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_getErrorValue();
      v24 = sub_23361F2E4();
      v38 = sub_233164DCC(v24, v25, &v40);
      sub_23361EBC4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_233151000, v20, v21, "Failed to fetch accounts: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v23, -1, -1);
      MEMORY[0x234934590](v22, -1, -1);
    }
    else
    {

    }
    sub_23318BF8C();
    swift_allocError();
    *(_QWORD *)v34 = v15;
    *(_QWORD *)(v34 + 8) = 0;
    *(_BYTE *)(v34 + 16) = 0;
    swift_willThrow();
    return;
  }
  v26 = v16;
  if (!(v16 >> 62))
  {
    v27 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    v28 = v35;
    if (v27)
      goto LABEL_8;
LABEL_20:
    swift_bridgeObjectRelease();

    *v28 = MEMORY[0x24BEE4AF8];
    return;
  }
  swift_bridgeObjectRetain();
  v27 = sub_23361EF30();
  swift_bridgeObjectRelease();
  v28 = v35;
  if (!v27)
    goto LABEL_20;
LABEL_8:
  v40 = MEMORY[0x24BEE4AF8];
  sub_2332738EC(0, v27 & ~(v27 >> 63), 0);
  if (v27 < 0)
  {
    __break(1u);
  }
  else
  {
    v36 = v8;
    v37 = 0;
    v29 = 0;
    v30 = v40;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v31 = (id)MEMORY[0x234933120](v29, v26);
      else
        v31 = *(id *)(v26 + 8 * v29 + 32);
      InternalAccount.init(_:)(v31, (uint64_t)v7);
      v40 = v30;
      v33 = *(_QWORD *)(v30 + 16);
      v32 = *(_QWORD *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_2332738EC(v32 > 1, v33 + 1, 1);
        v30 = v40;
      }
      ++v29;
      *(_QWORD *)(v30 + 16) = v33 + 1;
      sub_233168580((uint64_t)v7, v30+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v33, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    }
    while (v27 != v29);
    swift_bridgeObjectRelease();

    *v35 = v30;
  }
}

uint64_t sub_233187B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a2;
  v7[3] = a3;
  v7[8] = type metadata accessor for BankConnectWebServicePassLinkingRequest(0);
  v7[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233187BF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v6 = v0[4];
  v5 = v0[5];
  sub_2331684BC(v0[3], v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042B50);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_233187CC0;
  return BankConnectWebServiceClient.linkAccountWithPass(for:)(v0[9]);
}

uint64_t sub_233187CC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_233168500(v2, type metadata accessor for BankConnectWebServicePassLinkingRequest);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_233187D50()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233187D84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint8_t *a8@<X8>, char a9)
{
  uint64_t v9;
  int *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t inited;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v43 = a7;
  v44 = a6;
  v45 = a8;
  v49[1] = *MEMORY[0x24BDAC8D0];
  v15 = (int *)type metadata accessor for AccountMatch();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalAccount();
  *(_QWORD *)&v46 = a1;
  *((_QWORD *)&v46 + 1) = a2;
  v47 = a3;
  v48 = a4;
  v18 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v46);
  if (!v9)
  {
    v19 = v43;
    v39 = a1;
    v40 = a2;
    v41 = a3;
    v42 = a4;
    v38 = v18;
    if (v18)
    {
      sub_23361D694();
      v20 = v40;
      swift_bridgeObjectRetain();
      v21 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23361D5F8();
      v22 = &v17[v15[5]];
      *(_QWORD *)v22 = v39;
      *((_QWORD *)v22 + 1) = v20;
      *((_QWORD *)v22 + 2) = v41;
      *((_QWORD *)v22 + 3) = v21;
      v23 = &v17[v15[6]];
      *(_QWORD *)v23 = v44;
      *((_QWORD *)v23 + 1) = v19;
      v17[v15[7]] = a9;
      v17[v15[8]] = 0;
      type metadata accessor for ManagedAccountMatchImporter();
      inited = swift_initStackObject();
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6EC00]), sel_init);
      *(_QWORD *)(inited + 16) = v25;
      v26 = (void *)a5;
      v27 = ManagedAccountMatchImporter.insertOrUpdateAccountMatch(_:context:)((uint64_t)v17, a5);
      v28 = (uint64_t)v45;
      v29 = v27;

      *(_QWORD *)&v46 = 0;
      if ((objc_msgSend(v26, sel_save_, &v46) & 1) != 0)
      {
        v30 = (id)v46;
        InternalAccount.init(_:)(v38, v28);
      }
      else
      {
        v31 = (id)v46;
        sub_23361D1B4();

        swift_willThrow();
      }
      sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AccountMatch);
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v32 = sub_23361DB80();
      __swift_project_value_buffer(v32, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v33 = sub_23361DB68();
      v34 = sub_23361E768();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        *(_DWORD *)v35 = 136315138;
        v49[0] = v36;
        v45 = v35 + 4;
        *(_QWORD *)&v46 = 0;
        *((_QWORD *)&v46 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23361ED98();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v46 = sub_233164DCC(v46, *((unint64_t *)&v46 + 1), v49);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v33, v34, "Failed to fetch an account with fqaid: %s.", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v36, -1, -1);
        MEMORY[0x234934590](v35, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_23361ED98();
      sub_23361E27C();
      sub_23358CAF8();
      sub_23361E27C();
      sub_23361EF24();
      __break(1u);
    }
  }
}

void sub_2331882D0(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  void *v16;

  v3 = v2;
  if (qword_256041CA0 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E750();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = (void *)v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(a1, (unint64_t)a2, (uint64_t *)&v16);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Enabling card art for fpanID: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = v3 + 13;
  v13 = v3[16];
  v12 = v3[17];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v16, v13, v12);
  v14 = v16;
  v15._countAndFlagsBits = a1;
  v15._object = a2;
  BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(1, v15);

}

void *sub_2331884C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *result;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ManagedInternalAccount();
  result = (void *)static ManagedInternalAccount.existingAccount(withExternalAccountID:in:)(a1, a2, a3);
  if (!v4)
  {
    if (result)
    {
      InternalAccount.init(_:)(result, a4);
      v10 = type metadata accessor for InternalAccount();
      return (void *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 0, 1, v10);
    }
    else
    {
      v11 = type metadata accessor for InternalAccount();
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a4, 1, 1, v11);
    }
  }
  return result;
}

void *sub_233188578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  void *result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for ManagedInternalAccount();
  *(_QWORD *)&v14 = a1;
  *((_QWORD *)&v14 + 1) = a2;
  v15 = a3;
  v16 = a4;
  result = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v14);
  if (!v5)
  {
    if (result)
    {
      InternalAccount.init(_:)(result, a5);
      v12 = type metadata accessor for InternalAccount();
      return (void *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a5, 0, 1, v12);
    }
    else
    {
      v13 = type metadata accessor for InternalAccount();
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a5, 1, 1, v13);
    }
  }
  return result;
}

uint64_t sub_23318864C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = sub_23361E96C();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331886AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v14[2];

  v2 = v0[5];
  v1 = v0[6];
  v4 = (_QWORD *)v0[3];
  v3 = v0[4];
  v5 = v4[16];
  v6 = v4[17];
  __swift_project_boxed_opaque_existential_1(v4 + 13, v5);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v14, v5, v6);
  v7 = v14[0];
  v8 = objc_msgSend(v14[0], sel_passesOfType_, 1);
  sub_233168668(0, &qword_256042B88);
  v9 = sub_23361E3F0();

  v0[7] = sub_233547E54(v9);
  swift_bridgeObjectRelease();

  v10 = objc_msgSend(*(id *)(v4[2] + 16), sel_newBackgroundContext);
  v0[8] = v10;
  v11 = swift_allocObject();
  v0[9] = v11;
  *(_QWORD *)(v11 + 16) = v10;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BDBB370], v3);
  v10;
  v12 = (_QWORD *)swift_task_alloc();
  v0[10] = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560578D0);
  *v12 = v0;
  v12[1] = sub_233188840;
  return sub_23361E990();
}

uint64_t sub_233188840()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[5] + 8))(v2[6], v2[4]);
  swift_release();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2331888E8()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v4 = sub_23318BA44(v1, v3);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_233188970()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331889B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042B80);
  v3[7] = swift_task_alloc();
  v4 = type metadata accessor for Institution(0);
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233188A38()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, id, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[6];
  v2 = (void *)v0[4];
  v3 = v1[41];
  v4 = v1[42];
  __swift_project_boxed_opaque_existential_1(v1 + 38, v3);
  v5 = objc_msgSend(v2, sel_fkPaymentPass);
  v0[11] = v5;
  v8 = (uint64_t (*)(_QWORD, id, uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v6 = (_QWORD *)swift_task_alloc();
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_233188AEC;
  return v8(v0[7], v5, v3, v4);
}

uint64_t sub_233188AEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_233188B58()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 48))(v1, 1, *(_QWORD *)(v0 + 64)) == 1)
  {
    sub_233168608(v1, &qword_256042B80);
    v2 = 0;
  }
  else
  {
    v3 = *(_QWORD **)(v0 + 80);
    v4 = *(_QWORD **)(v0 + 40);
    sub_233168580(v1, (uint64_t)v3, type metadata accessor for Institution);
    if (*v3 == *v4 && v3[1] == v4[1])
      v2 = 1;
    else
      v2 = sub_23361F224();
    sub_233168500(*(_QWORD *)(v0 + 80), type metadata accessor for Institution);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v2 & 1);
}

uint64_t sub_233188C2C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *log;
  _QWORD *v22;
  os_log_type_t type;
  uint64_t v24;
  uint64_t v25;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 104);
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  v4 = v1;
  v5 = v2;
  v6 = v4;
  v7 = v2;
  v8 = sub_23361DB68();
  v9 = sub_23361E768();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 104);
  v12 = *(void **)(v0 + 32);
  if (v10)
  {
    type = v9;
    v13 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    *(_DWORD *)v13 = 136315394;
    log = v8;
    v14 = objc_msgSend(v12, sel_primaryAccountIdentifier);
    v15 = sub_23361E150();
    v17 = v16;

    *(_QWORD *)(v0 + 16) = sub_233164DCC(v15, v17, &v25);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    v18 = v11;
    v19 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v19;
    sub_23361EBC4();
    *v22 = v19;

    _os_log_impl(&dword_233151000, log, type, "Failed to fetch institution for pass: %s. %@.", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v24, -1, -1);
    MEMORY[0x234934590](v13, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_233188EF8(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  objc_super v11;

  type metadata accessor for ManagedInternalAccount();
  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v3 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  v4 = MEMORY[0x24BEE0D00];
  v5 = (void *)sub_23361E3D8();
  objc_msgSend(v3, sel_setRelationshipKeyPathsForPrefetching_, v5);

  objc_msgSend(v3, sel_setReturnsObjectsAsFaults_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 32) = 0xD000000000000011;
  *(_QWORD *)(v6 + 40) = 0x800000023366A630;
  v7 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setPropertiesToFetch_, v7);

  objc_msgSend(v3, sel_setReturnsDistinctResults_, 1);
  v8 = sub_23361E984();
  if (v1)
  {

  }
  else
  {
    v9 = sub_2331890A8(v8);
    swift_bridgeObjectRelease();
    v10 = sub_2331C92EC((uint64_t)v9);

    swift_bridgeObjectRelease();
    *a1 = v10;
  }
}

_QWORD *sub_2331890A8(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23361EF30())
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_externalAccountId);
      if (v8)
      {
        v9 = v8;
        v10 = sub_23361E150();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_2334A4AA4(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_2334A4AA4((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t BankConnectAccountLinker.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  __swift_destroy_boxed_opaque_existential_0(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  __swift_destroy_boxed_opaque_existential_0(v0 + 264);
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);
  return v0;
}

uint64_t BankConnectAccountLinker.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  __swift_destroy_boxed_opaque_existential_0(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  __swift_destroy_boxed_opaque_existential_0(v0 + 264);
  __swift_destroy_boxed_opaque_existential_0(v0 + 304);
  return swift_deallocClassInstance();
}

uint64_t sub_2331892FC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_2331676FC;
  return BankConnectAccountLinker.connectAccounts(primaryPass:primaryPassAccountFQAI:institution:shouldConnectSecondaryAccounts:ignoreConnectedAccounts:userPresence:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23318939C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  *(_BYTE *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a3;
  v6 = *v3;
  *(_QWORD *)(v4 + 32) = v6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 40) = v7;
  *v7 = v4;
  v7[1] = sub_233183244;
  v7[6] = a1;
  v7[7] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v7[8] = v8;
  *v8 = v7;
  v8[1] = sub_23317FF60;
  return sub_233186788(a1);
}

uint64_t sub_233189424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2334A4AA4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_233189574(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2334A4BB0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_2331896C8(uint64_t a1)
{
  return sub_23318A398(a1, (uint64_t (*)(void))sub_2334A4CE4);
}

uint64_t sub_2331896DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2334A50D8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_233189834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2334A557C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[4 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 32 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_233189978(uint64_t a1)
{
  return sub_23318A20C(a1, (uint64_t (*)(void))sub_2334A57DC, type metadata accessor for Order.ContentItem);
}

uint64_t sub_23318998C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_5;
      goto LABEL_18;
    }
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2334A57F0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = v3[3] >> 1;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v9 = v3[2];
  if (v8 - v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v2] && (unint64_t)v10 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v2);
  v14 = v12 + v2;
  if (!v13)
  {
    v3[2] = v14;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_233189AD8(uint64_t a1)
{
  return sub_23318A20C(a1, (uint64_t (*)(void))sub_2334A5088, type metadata accessor for InternalTransaction);
}

uint64_t sub_233189AEC(unint64_t a1)
{
  return sub_233189B04(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23318A9B4);
}

uint64_t sub_233189AF8(unint64_t a1)
{
  return sub_233189B04(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23318ABC8);
}

uint64_t sub_233189B04(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23361EF30();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x23493312C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23361E408();
  }
  __break(1u);
  return result;
}

uint64_t sub_233189CC0(unint64_t a1)
{
  return sub_233189EA0(a1, (unint64_t *)type metadata accessor for ManagedWalletMessage, &qword_256042A90, &qword_256042A88, (uint64_t *)sub_2333833A4);
}

uint64_t sub_233189CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2334A5C7C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[16 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 7) && v9 < a1 + 32 + (v2 << 7))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_233189E34(unint64_t a1)
{
  return sub_233189EA0(a1, (unint64_t *)type metadata accessor for ManagedOrderImage, &qword_256042A60, &qword_256042A58, (uint64_t *)sub_2333833FC);
}

uint64_t sub_233189E58(unint64_t a1)
{
  return sub_233189EA0(a1, (unint64_t *)type metadata accessor for ManagedOrderReturnLabel, &qword_256042A70, &qword_256042A68, (uint64_t *)sub_2333833A4);
}

uint64_t sub_233189E7C(unint64_t a1)
{
  return sub_233189EA0(a1, (unint64_t *)type metadata accessor for ManagedOrderReceipt, &qword_256042A80, &qword_256042A78, (uint64_t *)sub_2333833A4);
}

uint64_t sub_233189EA0(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t *v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_23361EF30();
    swift_bridgeObjectRelease();
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_23;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v23 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62)
    goto LABEL_25;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x23493312C](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v23;
LABEL_15:
    result = sub_23318A6D4(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v17 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23361E408();
  }
  __break(1u);
  return result;
}

uint64_t sub_23318A0B0(uint64_t a1)
{
  char **v1;
  size_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2334A5D88(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318A1F8(uint64_t a1)
{
  return sub_23318A20C(a1, (uint64_t (*)(void))sub_2334A5D94, type metadata accessor for MapsSuggestionsOrderPickup);
}

uint64_t sub_23318A20C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318A384(uint64_t a1)
{
  return sub_23318A398(a1, (uint64_t (*)(void))sub_2334A5DA8);
}

uint64_t sub_23318A398(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v4 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v3)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v8 = *(_QWORD *)(v4 + 16);
  if ((*(_QWORD *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = v4 + 8 * v8 + 32;
  if (a1 + 32 < v9 + 8 * v3 && v9 < a1 + 32 + 8 * v3)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v2 = v4;
    return result;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v11, v3);
  v13 = v11 + v3;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318A4F4(unint64_t a1)
{
  return sub_233189EA0(a1, (unint64_t *)type metadata accessor for ManagedInternalTransaction, &qword_256042A30, &qword_256042A28, (uint64_t *)sub_2333833A4);
}

uint64_t sub_23318A518(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_2334A5ED4(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for InstitutionWithPass();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318A68C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderShippingFulfillment, &qword_256042B08, &qword_256042B00, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A6B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderPickupFulfillment, &qword_256042AF8, &qword_256042AF0, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A6D4(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_23318BD18(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318A8DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturn, &qword_256042AD8, &qword_256042AD0, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A900(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderReceipt, &qword_256042A80, &qword_256042A78, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A924(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturnLabel, &qword_256042A70, &qword_256042A68, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A948(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderLineItem, &qword_256042AE8, &qword_256042AE0, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A96C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderImage, &qword_256042A60, &qword_256042A58, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833FC);
}

uint64_t sub_23318A990(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderApplication, &qword_256042AA0, &qword_256042A98, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318A9B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23318BD18(&qword_256042AB0, &qword_256042AA8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256042AA8);
          v12 = sub_2333833A4(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_233168668(0, (unint64_t *)&qword_254247FB8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318ABC8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23318BD18(&qword_256042AC8, &qword_256042AB8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256042AB8);
          v12 = sub_2333833A4(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_233168668(0, &qword_256042AC0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

uint64_t sub_23318ADDC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderPaymentSummaryItem, &qword_256042A50, &qword_256042A48, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t sub_23318AE00(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23318A6D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ManagedOrderPaymentTransaction, &qword_256042A40, &qword_256042A38, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_2333833A4);
}

uint64_t _s10FinanceKit31BankConnectAccountLinkingResultO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)a2;
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      goto LABEL_3;
LABEL_5:
    v4 = 0;
    return v4 & 1;
  }
  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
    goto LABEL_5;
LABEL_3:
  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_23322B980(v3, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_23318AE98()
{
  unint64_t result;

  result = qword_256042860;
  if (!qword_256042860)
  {
    result = MEMORY[0x234934494](&unk_23362619C, &type metadata for BankConnectAccountLinkingResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042860);
  }
  return result;
}

unint64_t sub_23318AEDC()
{
  unint64_t result;

  result = qword_256042868;
  if (!qword_256042868)
  {
    result = MEMORY[0x234934494](&unk_23362614C, &type metadata for BankConnectAccountLinkingResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042868);
  }
  return result;
}

unint64_t sub_23318AF20()
{
  unint64_t result;

  result = qword_256042880;
  if (!qword_256042880)
  {
    result = MEMORY[0x234934494](&unk_2336260FC, &type metadata for BankConnectAccountLinkingResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042880);
  }
  return result;
}

uint64_t sub_23318AF64(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2560486A0);
    v10 = sub_23318AFE0(a2, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23318AFE0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for InternalAccount();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23318B020(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_23318B038()
{
  unint64_t result;

  result = qword_2560428C0;
  if (!qword_2560428C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectServiceAccountConnectingError, &type metadata for BankConnectServiceAccountConnectingError);
    atomic_store(result, &qword_2560428C0);
  }
  return result;
}

void sub_23318B07C(id a1, uint64_t a2, char a3)
{
  if (a3 == 3)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {

  }
}

uint64_t initializeBufferWithCopyOfBuffer for BankConnectAccountLinkingResult(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BankConnectAccountLinkingResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for BankConnectAccountLinkingResult(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for BankConnectAccountLinkingResult(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectAccountLinkingResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectAccountLinkingResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23318B1EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23318B1F4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAccountLinkingResult()
{
  return &type metadata for BankConnectAccountLinkingResult;
}

uint64_t dispatch thunk of BankConnectAccountLinking.connectAccounts(primaryPass:primaryPassAccountFQAI:institution:shouldConnectSecondaryAccounts:ignoreConnectedAccounts:userPresence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 8) + *(_QWORD *)(a9 + 8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_23318C26C;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of BankConnectAccountLinking.connectUnlinkedAccounts(for:shouldFetchTransactions:userPresence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23318B35C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_23318B35C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t type metadata accessor for BankConnectAccountLinker()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectAccountLinker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectAccountLinker.__allocating_init(store:consentStore:accountMatcherProvider:paymentPassDataSourceProvider:passKitTransactionsDataSourceProvider:webServiceClientProvider:transactionsDataLoader:accountUnlinking:passMatcher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for BankConnectAccountLinkingResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23318B434 + 4 * byte_233625D15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23318B468 + 4 * byte_233625D10[v4]))();
}

uint64_t sub_23318B468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23318B470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23318B478);
  return result;
}

uint64_t sub_23318B484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23318B48CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23318B490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23318B498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAccountLinkingResult.CodingKeys()
{
  return &type metadata for BankConnectAccountLinkingResult.CodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectAccountLinkingResult.SuccessCodingKeys()
{
  return &type metadata for BankConnectAccountLinkingResult.SuccessCodingKeys;
}

uint64_t _s10FinanceKit31BankConnectAccountLinkingResultO17SuccessCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23318B508 + 4 * byte_233625D1A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23318B528 + 4 * byte_233625D1F[v4]))();
}

_BYTE *sub_23318B508(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23318B528(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23318B530(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23318B538(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23318B540(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23318B548(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAccountLinkingResult.RequiresDisambiguationCodingKeys()
{
  return &type metadata for BankConnectAccountLinkingResult.RequiresDisambiguationCodingKeys;
}

unint64_t sub_23318B568()
{
  unint64_t result;

  result = qword_2560429E0;
  if (!qword_2560429E0)
  {
    result = MEMORY[0x234934494](&unk_233625F64, &type metadata for BankConnectAccountLinkingResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560429E0);
  }
  return result;
}

unint64_t sub_23318B5B0()
{
  unint64_t result;

  result = qword_2560429E8;
  if (!qword_2560429E8)
  {
    result = MEMORY[0x234934494](&unk_23362601C, &type metadata for BankConnectAccountLinkingResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560429E8);
  }
  return result;
}

unint64_t sub_23318B5F8()
{
  unint64_t result;

  result = qword_2560429F0;
  if (!qword_2560429F0)
  {
    result = MEMORY[0x234934494](&unk_2336260D4, &type metadata for BankConnectAccountLinkingResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560429F0);
  }
  return result;
}

unint64_t sub_23318B640()
{
  unint64_t result;

  result = qword_2560429F8;
  if (!qword_2560429F8)
  {
    result = MEMORY[0x234934494](&unk_233625F8C, &type metadata for BankConnectAccountLinkingResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560429F8);
  }
  return result;
}

unint64_t sub_23318B688()
{
  unint64_t result;

  result = qword_256042A00;
  if (!qword_256042A00)
  {
    result = MEMORY[0x234934494](&unk_233625FB4, &type metadata for BankConnectAccountLinkingResult.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042A00);
  }
  return result;
}

unint64_t sub_23318B6D0()
{
  unint64_t result;

  result = qword_256042A08;
  if (!qword_256042A08)
  {
    result = MEMORY[0x234934494](&unk_233625ED4, &type metadata for BankConnectAccountLinkingResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042A08);
  }
  return result;
}

unint64_t sub_23318B718()
{
  unint64_t result;

  result = qword_256042A10;
  if (!qword_256042A10)
  {
    result = MEMORY[0x234934494](&unk_233625EFC, &type metadata for BankConnectAccountLinkingResult.RequiresDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042A10);
  }
  return result;
}

unint64_t sub_23318B760()
{
  unint64_t result;

  result = qword_256042A18;
  if (!qword_256042A18)
  {
    result = MEMORY[0x234934494](&unk_233626044, &type metadata for BankConnectAccountLinkingResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042A18);
  }
  return result;
}

unint64_t sub_23318B7A8()
{
  unint64_t result;

  result = qword_256042A20;
  if (!qword_256042A20)
  {
    result = MEMORY[0x234934494](&unk_23362606C, &type metadata for BankConnectAccountLinkingResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256042A20);
  }
  return result;
}

uint64_t sub_23318B7EC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t (*v16)();
  void *v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a2;
  v28 = type metadata accessor for InternalAccount();
  v4 = MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v23 - v8;
  result = MEMORY[0x24BEE4AF8];
  v29 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v23 = v2;
    v12 = *(_QWORD *)(v7 + 72);
    v13 = MEMORY[0x24BEE4AF8];
    v27 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = a1 + v27;
    v15 = type metadata accessor for InternalAccount;
    v25 = v6;
    while (1)
    {
      v16 = v15;
      sub_2331684BC(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))v15);
      if (!*(_QWORD *)&v9[*(int *)(v28 + 32) + 8])
        goto LABEL_9;
      v17 = (void *)sub_23361E12C();
      v18 = objc_msgSend(v26, sel_passWithFPANIdentifier_, v17);

      if (!v18)
        goto LABEL_9;
      v19 = objc_msgSend(v18, sel_devicePrimaryPaymentApplication);
      if (!v19)
        goto LABEL_8;
      v20 = v19;
      if (objc_msgSend(v19, sel_state) == (id)10)
        break;
      v24 = objc_msgSend(v20, sel_state);

      v6 = v25;
      if (!v24)
        goto LABEL_9;
      v15 = v16;
      sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))v16);
LABEL_14:
      v14 += v12;
      if (!--v11)
        return v29;
    }

    v6 = v25;
LABEL_8:

LABEL_9:
    v15 = v16;
    sub_233168580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_2332738EC(0, *(_QWORD *)(v13 + 16) + 1, 1);
    v13 = v29;
    v22 = *(_QWORD *)(v29 + 16);
    v21 = *(_QWORD *)(v29 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_2332738EC(v21 > 1, v22 + 1, 1);
      v13 = v29;
    }
    *(_QWORD *)(v13 + 16) = v22 + 1;
    sub_233168580((uint64_t)v6, v13 + v27 + v22 * v12, (uint64_t (*)(_QWORD))v15);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_23318BA44(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char **v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v2 = a1;
  v23 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_21;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v5 = v2 & 0xC000000000000001;
      v6 = v2 & 0xFFFFFFFFFFFFFF8;
      v7 = &selRef__initWithImage_;
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
      v21 = v2;
      while (v5)
      {
        v8 = (id)MEMORY[0x234933120](v4, v2);
LABEL_9:
        v9 = v8;
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_20;
        v11 = objc_msgSend(v8, v7[312]);
        if (v11)
        {
          v12 = v11;
          if (objc_msgSend(v11, sel_state) == (id)1)
          {
            v13 = v3;
            v14 = v5;
            v15 = objc_msgSend(v9, sel_primaryAccountIdentifier);
            v16 = sub_23361E150();
            v18 = v17;

            LOBYTE(v15) = sub_233266A38(v16, v18, a2);
            swift_bridgeObjectRelease();

            if ((v15 & 1) != 0)
            {

            }
            else
            {
              sub_23361EE4C();
              sub_23361EE7C();
              sub_23361EE88();
              sub_23361EE58();
            }
            v5 = v14;
            v3 = v13;
            v6 = v20;
            v2 = v21;
            v7 = &selRef__initWithImage_;
          }
          else
          {

          }
        }
        else
        {

        }
        ++v4;
        if (v10 == v3)
          return v23;
      }
      if (v4 < *(_QWORD *)(v6 + 16))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v3 = sub_23361EF30();
      if (!v3)
        return MEMORY[0x24BEE4AF8];
    }
    v8 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23318BC2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023366A900)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23318BD18(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23318BD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t refreshed;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(unint64_t, uint64_t, uint64_t);
  unint64_t v9;
  unint64_t v10;
  int *v11;
  void (*v12)(unint64_t, uint64_t);
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;

  v1 = type metadata accessor for Institution(0);
  v2 = *(_QWORD *)(v1 - 8);
  v15 = *(_QWORD *)(v2 + 64);
  v16 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + v16 + *(int *)(v1 + 48);
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v5 = v3 + *(int *)(refreshed + 24);
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = v3 + *(int *)(refreshed + 28);
  if (!v8(v9, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = v0 + v16 + *(int *)(v1 + 60);
  v11 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    v12 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
    v12(v10 + v11[5], v6);
    v13 = v10 + v11[6];
    if (!v8(v13, 1, v6))
      v12(v13, v6);
    v12(v10 + v11[7], v6);
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_23318BF24(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Institution(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_2331876D4((uint64_t *)(v1 + v4), *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

unint64_t sub_23318BF8C()
{
  unint64_t result;

  result = qword_256042B38;
  if (!qword_256042B38)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectAccountMatcherError, &type metadata for BankConnectAccountMatcherError);
    atomic_store(result, &qword_256042B38);
  }
  return result;
}

uint64_t sub_23318BFD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2331676FC;
  return sub_233187B90(a1, v4, v5, v6, v7, v9, v8);
}

void sub_23318C05C(uint8_t *a1@<X8>)
{
  uint64_t v1;

  sub_233187D84(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1, *(_BYTE *)(v1 + 80));
}

void sub_23318C090(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_233163BF8(*(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), a1);
}

unint64_t sub_23318C0AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042B68;
  if (!qword_256042B68)
  {
    v1 = sub_233168668(255, (unint64_t *)&qword_256042B60);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256042B68);
  }
  return result;
}

unint64_t sub_23318C104()
{
  unint64_t result;

  result = qword_256042B70;
  if (!qword_256042B70)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountType, &type metadata for AccountType);
    atomic_store(result, &qword_256042B70);
  }
  return result;
}

uint64_t sub_23318C148()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23318C16C(uint64_t *a1@<X8>)
{
  sub_233188EF8(a1);
}

uint64_t sub_23318C184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560486B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23318C1CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void *sub_23318C200@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_233188578(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_23318C220()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void *sub_23318C24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2331884C0(v1[2], v1[3], v1[4], a1);
}

unint64_t static AppleAccountConstants.institutionID.getter()
{
  return 0xD000000000000015;
}

unint64_t static AppleAccountConstants.consentID.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_23318C2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  int *refreshed;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27[8];
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v0);
  v26 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v9 = MEMORY[0x24BDAC7A8](refreshed);
  v11 = (_DWORD *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v14 = type metadata accessor for Institution(0);
  __swift_allocate_value_buffer(v14, qword_254247630);
  v25 = __swift_project_value_buffer(v14, (uint64_t)qword_254247630);
  v31 = 7;
  v15 = sub_23361D634();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v7, 1, 1, v15);
  v16(v5, 1, 1, v15);
  v17 = (uint64_t)v11 + refreshed[6];
  v16((char *)v17, 1, 1, v15);
  v18 = (uint64_t)v11 + refreshed[7];
  v16((char *)v18, 1, 1, v15);
  v19 = (char *)v11 + refreshed[8];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = (char *)v11 + refreshed[9];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  *v11 = 0;
  sub_23318C8A8((uint64_t)v7, v17);
  sub_23318C8A8((uint64_t)v5, v18);
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  sub_23318F3EC((uint64_t)v11, (uint64_t)v13);
  v21 = type metadata accessor for BankConnectTermsAndConditions();
  v22 = (uint64_t)v26;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v26, 1, 1, v21);
  v30 = 0;
  v29 = 0;
  v27[0] = 0;
  v28 = 0;
  return Institution.init(id:name:reconsentType:supportedAuthTypes:firstTransactionsRequestWindow:maxAgeTransactionsFirstRequest:maxAgeTransactionsRefreshRequest:extensionsBundleIdentifiers:backgroundRefreshConfiguration:multipleConsentsEnabled:problemReportingEnabled:termsAndConditions:financialLabEnabled:timestampSuitableForUserDisplay:piiRedactionConfiguration:privacyLabels:consentSyncingConfiguration:)(0xD000000000000015, 0x800000023366AA00, 0x656C707041, 0xE500000000000000, 0, &v31, 0, 1, v25, 0.0, 0.0, 0, (uint64_t)v13, 0, 0, v22, 0, 1, &v30,
           &v29,
           v27);
}

uint64_t static AppleAccountConstants.institution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254246F08 != -1)
    swift_once();
  v2 = type metadata accessor for Institution(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254247630);
  return sub_23318C604(v3, a1);
}

uint64_t sub_23318C604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Institution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static AppleAccountConstants.consent(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t, char *, uint64_t);
  _QWORD *v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;

  v27 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D634();
  v25 = *(_QWORD *)(v6 - 8);
  v7 = v25;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v26 = (char *)&v25 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - v12;
  v14 = sub_23361D6A0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v27, v14);
  sub_23361D5F8();
  sub_23361D520();
  sub_23361D5F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18(v5, 0, 1, v6);
  sub_23361D5F8();
  v19 = (int *)type metadata accessor for BankConnectConsent();
  v20 = a2 + v19[8];
  v18((char *)v20, 1, 1, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v17, v14);
  v21 = (_QWORD *)(a2 + v19[5]);
  *v21 = 0xD000000000000019;
  v21[1] = 0x800000023366AA20;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v22(a2 + v19[6], v13, v6);
  v22(a2 + v19[7], v26, v6);
  sub_23318C8A8((uint64_t)v5, v20);
  *(_QWORD *)(a2 + v19[9]) = 0;
  v23 = (_QWORD *)(a2 + v19[10]);
  *v23 = 0xD00000000000001CLL;
  v23[1] = 0x800000023366AA40;
  *(_BYTE *)(a2 + v19[11]) = 0;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v22)(a2 + v19[12], v28, v6);
}

uint64_t sub_23318C8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id AppleAccountDataImporter.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AppleAccountDataImporter.init(store:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for AppleAccountDataImporter();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for AppleAccountDataImporter()
{
  return objc_opt_self();
}

id sub_23318C9F4()
{
  return sub_23318ED78();
}

void sub_23318CA78(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233625CF0;
  *(_QWORD *)(v3 + 32) = a1;
  v7 = v3;
  sub_23361E408();
  v4 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store) + 16);
  v5 = a1;
  v6 = objc_msgSend(v4, sel_newBackgroundContext);
  sub_23318EE6C(v7);
  swift_bridgeObjectRelease();

}

void sub_23318CC38(unint64_t a1)
{
  uint64_t v1;
  id v3;

  if (a1)
  {
    v3 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store) + 16), sel_newBackgroundContext);
    sub_23318EE6C(a1);

  }
}

void sub_23318CDA0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  if (qword_254246F38 != -1)
    swift_once();
  v7 = sub_23361DB80();
  __swift_project_value_buffer(v7, (uint64_t)qword_254246F20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_23361DB68();
  v9 = sub_23361E780();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v14 = v11;
    *(_DWORD *)v10 = 134218242;
    swift_bridgeObjectRelease();
    sub_23361EBC4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_233164DCC(a2, a3, &v14);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v8, v9, "Deleting %ld apple transactions for\naccount %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v11, -1, -1);
    MEMORY[0x234934590](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v12 = objc_msgSend(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store) + 16), sel_newBackgroundContext);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  sub_23361E960();

}

void sub_23318D03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t i;
  BOOL v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  int64_t v73;
  id v74;
  __int128 v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;

  v80 = *MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInstitution();
  if (qword_254246F08 != -1)
    swift_once();
  v9 = type metadata accessor for Institution(0);
  v10 = (uint64_t *)__swift_project_value_buffer(v9, (uint64_t)qword_254247630);
  v11 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*v10, v10[1], a1);
  if (!v4)
  {
    v12 = (void *)v11;
    if (v11)
    {
      type metadata accessor for ManagedInternalAccount();
      swift_bridgeObjectRetain();
      v13 = objc_msgSend(v12, "id");
      v14 = v12;
      v74 = (id)a1;
      v15 = sub_23361E150();
      v17 = v16;

      *(_QWORD *)&v75 = a2;
      *((_QWORD *)&v75 + 1) = a3;
      v76 = v15;
      v77 = v17;
      v22 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v75);
      v65 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v22)
      {
        v17 = v14;
        if (qword_254246F38 == -1)
        {
LABEL_46:
          v59 = sub_23361DB80();
          __swift_project_value_buffer(v59, (uint64_t)qword_254246F20);
          v60 = sub_23361DB68();
          v61 = sub_23361E768();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v62 = 0;
            _os_log_impl(&dword_233151000, v60, v61, "Cannot delete apple account transactions without an internal account", v62, 2u);
            MEMORY[0x234934590](v62, -1, -1);
          }

          return;
        }
LABEL_56:
        swift_once();
        goto LABEL_46;
      }
      v67 = a4 + 56;
      v23 = 1 << *(_BYTE *)(a4 + 32);
      v24 = -1;
      if (v23 < 64)
        v24 = ~(-1 << v23);
      v25 = v24 & *(_QWORD *)(a4 + 56);
      v68 = (unint64_t)(v23 + 63) >> 6;
      swift_bridgeObjectRetain();
      v26 = 0;
      v69 = v22;
      v70 = a4;
      if (v25)
        goto LABEL_16;
LABEL_17:
      v28 = __OFADD__(v26, 1);
      v29 = v26 + 1;
      if (!v28)
      {
        if (v29 >= v68)
          goto LABEL_49;
        v30 = *(_QWORD *)(v67 + 8 * v29);
        if (v30)
        {
LABEL_27:
          v72 = (v30 - 1) & v30;
          v73 = v29;
          for (i = __clz(__rbit64(v30)) + (v29 << 6); ; i = __clz(__rbit64(v25)) | (v26 << 6))
          {
            v32 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * i);
            v33 = *v32;
            v34 = v32[1];
            swift_bridgeObjectRetain_n();
            v35 = objc_msgSend(v22, sel_accountId);
            v36 = sub_23361E150();
            v38 = v37;

            v39 = v22;
            v40 = objc_msgSend(v22, sel_institutionId);
            v41 = sub_23361E150();
            v17 = v42;

            type metadata accessor for ManagedInternalTransaction();
            v43 = v33;
            *(_QWORD *)&v75 = v33;
            *((_QWORD *)&v75 + 1) = v34;
            v76 = v36;
            v77 = v38;
            v78 = v41;
            v79 = v17;
            v44 = static ManagedInternalTransaction.existingTransaction(with:in:)((uint64_t *)&v75);
            if (v44)
            {
              v71 = (void *)v44;
              if (qword_254246F38 != -1)
                swift_once();
              v45 = sub_23361DB80();
              __swift_project_value_buffer(v45, (uint64_t)qword_254246F20);
              swift_bridgeObjectRetain();
              v46 = sub_23361DB68();
              v47 = sub_23361E780();
              if (os_log_type_enabled(v46, v47))
              {
                v48 = (uint8_t *)swift_slowAlloc();
                v66 = swift_slowAlloc();
                *(_QWORD *)&v75 = v66;
                *(_DWORD *)v48 = 136315138;
                swift_bridgeObjectRetain();
                sub_233164DCC(v43, v34, (uint64_t *)&v75);
                sub_23361EBC4();
                swift_bridgeObjectRelease_n();
                v49 = v47;
                v50 = v43;
                _os_log_impl(&dword_233151000, v46, v49, "Deleting apple account transaction %s", v48, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x234934590](v66, -1, -1);
                MEMORY[0x234934590](v48, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
                v50 = v43;
              }
              v22 = v69;
              *(_QWORD *)&v75 = v36;
              *((_QWORD *)&v75 + 1) = v38;
              v76 = v41;
              v77 = v17;
              sub_233168668(0, (unint64_t *)&qword_254247FB0);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
              v56 = swift_allocObject();
              *(_OWORD *)(v56 + 16) = xmmword_233623D60;
              *(_QWORD *)(v56 + 56) = MEMORY[0x24BEE0D00];
              *(_QWORD *)(v56 + 64) = sub_2331683F0();
              *(_QWORD *)(v56 + 32) = v50;
              *(_QWORD *)(v56 + 40) = v34;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v57 = (void *)sub_23361E6B4();
              v58 = sub_23338355C((uint64_t *)&v75, v57);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              sub_233382BA0((uint64_t)v58, v74);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              a4 = v70;
              v25 = v72;
              v26 = v73;
              if (!v72)
                goto LABEL_17;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_254246F38 != -1)
                swift_once();
              v51 = sub_23361DB80();
              __swift_project_value_buffer(v51, (uint64_t)qword_254246F20);
              swift_bridgeObjectRetain();
              v52 = sub_23361DB68();
              v53 = sub_23361E768();
              a4 = v70;
              if (os_log_type_enabled(v52, v53))
              {
                v54 = swift_slowAlloc();
                v17 = (void *)swift_slowAlloc();
                *(_QWORD *)&v75 = v17;
                *(_DWORD *)v54 = 136315138;
                swift_bridgeObjectRetain();
                *(_QWORD *)(v54 + 4) = sub_233164DCC(v33, v34, (uint64_t *)&v75);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_233151000, v52, v53, "Cannot delete apple account transactions\n%s if it doesn't exist", (uint8_t *)v54, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x234934590](v17, -1, -1);
                v55 = v54;
                v22 = v69;
                MEMORY[0x234934590](v55, -1, -1);

                v25 = v72;
                v26 = v73;
                if (!v72)
                  goto LABEL_17;
              }
              else
              {

                swift_bridgeObjectRelease_n();
                v25 = v72;
                v26 = v73;
                v22 = v39;
                if (!v72)
                  goto LABEL_17;
              }
            }
LABEL_16:
            v72 = (v25 - 1) & v25;
            v73 = v26;
          }
        }
        v31 = v29 + 1;
        if (v29 + 1 >= v68)
          goto LABEL_49;
        v30 = *(_QWORD *)(v67 + 8 * v31);
        if (!v30)
        {
          v31 = v29 + 2;
          if (v29 + 2 >= v68)
            goto LABEL_49;
          v30 = *(_QWORD *)(v67 + 8 * v31);
          if (!v30)
          {
            v31 = v29 + 3;
            if (v29 + 3 < v68)
            {
              v30 = *(_QWORD *)(v67 + 8 * v31);
              if (v30)
                goto LABEL_26;
              while (1)
              {
                v29 = v31 + 1;
                if (__OFADD__(v31, 1))
                  break;
                if (v29 >= v68)
                  goto LABEL_49;
                v30 = *(_QWORD *)(v67 + 8 * v29);
                ++v31;
                if (v30)
                  goto LABEL_27;
              }
              __break(1u);
              goto LABEL_56;
            }
LABEL_49:
            swift_release();
            *(_QWORD *)&v75 = 0;
            if ((objc_msgSend(v74, sel_save_, &v75) & 1) != 0)
            {
              v63 = (id)v75;
            }
            else
            {
              v64 = (id)v75;
              sub_23361D1B4();

              swift_willThrow();
            }

            return;
          }
        }
LABEL_26:
        v29 = v31;
        goto LABEL_27;
      }
      __break(1u);
    }
    else if (qword_254246F38 == -1)
    {
LABEL_7:
      v18 = sub_23361DB80();
      __swift_project_value_buffer(v18, (uint64_t)qword_254246F20);
      v19 = sub_23361DB68();
      v20 = sub_23361E768();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_233151000, v19, v20, "Cannot delete apple account transactions without an apple institution", v21, 2u);
        MEMORY[0x234934590](v21, -1, -1);
      }

      return;
    }
    swift_once();
    goto LABEL_7;
  }
}

void sub_23318DAD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (qword_254246F38 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_254246F20);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E780();
  if (os_log_type_enabled(v7, v8))
  {
    v13 = v3;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    v14 = sub_233164DCC(a1, a2, &v15);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Deleting all transactions for apple account %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store) + 16), sel_newBackgroundContext, v13, v14);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_23361E960();

}

void sub_23318DD28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInstitution();
  if (qword_254246F08 != -1)
    swift_once();
  v7 = type metadata accessor for Institution(0);
  v8 = (uint64_t *)__swift_project_value_buffer(v7, (uint64_t)qword_254247630);
  v9 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*v8, v8[1], (uint64_t)a1);
  if (!v3)
  {
    v10 = (void *)v9;
    if (!v9)
    {
      if (qword_254246F38 != -1)
        swift_once();
      v15 = sub_23361DB80();
      __swift_project_value_buffer(v15, (uint64_t)qword_254246F20);
      v16 = sub_23361DB68();
      v17 = sub_23361E768();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_233151000, v16, v17, "Cannot delete apple account transactions without an apple institution", v18, 2u);
        MEMORY[0x234934590](v18, -1, -1);
      }
      goto LABEL_21;
    }
    type metadata accessor for ManagedInternalAccount();
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, "id");
    v12 = sub_23361E150();
    v14 = v13;

    *(_QWORD *)&v33 = a2;
    *((_QWORD *)&v33 + 1) = a3;
    v34 = v12;
    v35 = v14;
    v16 = static ManagedInternalAccount.existingAccount(with:in:)(&v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16)
    {
      v19 = -[NSObject accountId](v16, sel_accountId);
      v20 = sub_23361E150();
      v22 = v21;

      v23 = -[NSObject institutionId](v16, sel_institutionId);
      v24 = sub_23361E150();
      v26 = v25;

      *(_QWORD *)&v33 = v20;
      *((_QWORD *)&v33 + 1) = v22;
      v34 = v24;
      v35 = v26;
      sub_233383E88(&v33, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v33 = 0;
      if ((objc_msgSend(a1, sel_save_, &v33) & 1) != 0)
      {
        v31 = (id)v33;
      }
      else
      {
        v32 = (id)v33;
        sub_23361D1B4();

        swift_willThrow();
      }

LABEL_21:
      return;
    }
    if (qword_254246F38 != -1)
      swift_once();
    v27 = sub_23361DB80();
    __swift_project_value_buffer(v27, (uint64_t)qword_254246F20);
    v28 = sub_23361DB68();
    v29 = sub_23361E768();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_233151000, v28, v29, "Cannot delete apple account transactions without an internal account", v30, 2u);
      MEMORY[0x234934590](v30, -1, -1);
    }

  }
}

void sub_23318E0F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (qword_254246F38 != -1)
    swift_once();
  v6 = sub_23361DB80();
  __swift_project_value_buffer(v6, (uint64_t)qword_254246F20);
  swift_bridgeObjectRetain_n();
  v7 = sub_23361DB68();
  v8 = sub_23361E780();
  if (os_log_type_enabled(v7, v8))
  {
    v13 = v3;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    v14 = sub_233164DCC(a1, a2, &v15);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v7, v8, "Deleting apple account %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store) + 16), sel_newBackgroundContext, v13, v14);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_23361E960();

}

void sub_23318E34C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  id v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInstitution();
  if (qword_254246F08 != -1)
    swift_once();
  v7 = type metadata accessor for Institution(0);
  v8 = (uint64_t *)__swift_project_value_buffer(v7, (uint64_t)qword_254247630);
  v9 = static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*v8, v8[1], (uint64_t)a1);
  if (!v3)
  {
    v10 = (void *)v9;
    if (v9)
    {
      type metadata accessor for ManagedInternalAccount();
      swift_bridgeObjectRetain();
      v11 = objc_msgSend(v10, "id");
      v12 = sub_23361E150();
      v14 = v13;

      *(_QWORD *)&v34 = a2;
      *((_QWORD *)&v34 + 1) = a3;
      v35 = v12;
      v36 = v14;
      v19 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19)
      {
        v20 = objc_msgSend(v19, sel_accountId);
        v33 = sub_23361E150();
        v22 = v21;

        v23 = objc_msgSend(v19, sel_institutionId);
        v24 = sub_23361E150();
        v26 = v25;

        *(_QWORD *)&v34 = v33;
        *((_QWORD *)&v34 + 1) = v22;
        v35 = v24;
        v36 = v26;
        static ManagedInternalAccount.deleteAccount(with:in:)(&v34, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v34 = 0;
        if (objc_msgSend(a1, sel_save_, &v34))
        {
          v31 = (id)v34;
        }
        else
        {
          v32 = (id)v34;
          sub_23361D1B4();

          swift_willThrow();
        }

      }
      else
      {
        if (qword_254246F38 != -1)
          swift_once();
        v27 = sub_23361DB80();
        __swift_project_value_buffer(v27, (uint64_t)qword_254246F20);
        v28 = sub_23361DB68();
        v29 = sub_23361E768();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v30 = 0;
          _os_log_impl(&dword_233151000, v28, v29, "Cannot delete apple account without an internal account", v30, 2u);
          MEMORY[0x234934590](v30, -1, -1);
        }

      }
    }
    else
    {
      if (qword_254246F38 != -1)
        swift_once();
      v15 = sub_23361DB80();
      __swift_project_value_buffer(v15, (uint64_t)qword_254246F20);
      v16 = sub_23361DB68();
      v17 = sub_23361E768();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_233151000, v16, v17, "Cannot delete apple account without an apple institution", v18, 2u);
        MEMORY[0x234934590](v18, -1, -1);
      }

    }
  }
}

uint64_t sub_23318E734(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v7 = sub_23361E150();
  v9 = v8;
  v10 = a1;
  a5(v7, v9);
  swift_bridgeObjectRelease();

  return 1;
}

void sub_23318E7DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  objc_class *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t inited;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  char *v48;
  unint64_t v49;
  id v50;
  void *v51;
  unint64_t v52;
  id v53[7];

  v52 = a2;
  v53[6] = *(id *)MEMORY[0x24BDAC8D0];
  v49 = sub_23361D6A0();
  v4 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = (id)type metadata accessor for BankConnectConsent();
  MEMORY[0x24BDAC7A8](v50);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Institution(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v46 - v13);
  if (qword_254246F08 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v9, (uint64_t)qword_254247630);
  sub_23318C604(v15, (uint64_t)v14);
  type metadata accessor for ManagedInstitution();
  v16 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*v14, v14[1], a1);
  if (v2)
  {
    sub_233168500((uint64_t)v14, type metadata accessor for Institution);
  }
  else
  {
    v17 = (void *)a1;
    v18 = v16;
    v48 = v8;
    v51 = v17;
    if (v16)
    {
      v19 = v16;
      v20 = v51;
      _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA0D0VSo22NSManagedObjectContextCtFZ_0(v19, (uint64_t)v14, v51);
    }
    else
    {
      sub_23318C604((uint64_t)v14, (uint64_t)v12);
      v20 = v51;
      v19 = ManagedInstitution.__allocating_init(_:context:)((uint64_t)v12, v51);
    }
    sub_2334C6820((uint64_t)v14 + *(int *)(v9 + 60), v19, (uint64_t)v20);

    sub_233168500((uint64_t)v14, type metadata accessor for Institution);
    v21 = (objc_class *)type metadata accessor for ManagedConsent();
    v22 = (void *)static ManagedConsent.existingConsent(withConsentID:in:)(0xD000000000000019, 0x800000023366AA20, (uint64_t)v20);
    v23 = v20;
    v47 = v19;
    if (v22)
    {
      v50 = v22;
      objc_msgSend(v22, sel_setInstitutionObject_, v19);
    }
    else
    {
      sub_23361D694();
      v24 = (uint64_t)v48;
      static AppleAccountConstants.consent(with:)((uint64_t)v6, (uint64_t)v48);
      (*(void (**)(char *, unint64_t))(v4 + 8))(v6, v49);
      v25 = objc_allocWithZone(v21);
      v26 = v23;
      v27 = v19;
      v28 = objc_msgSend(v25, sel_initWithContext_, v26);
      v29 = (void *)sub_23361D658();
      objc_msgSend(v28, sel_setId_, v29);

      v30 = (void *)sub_23361E12C();
      objc_msgSend(v28, sel_setConsentID_, v30);

      objc_msgSend(v28, sel_setInstitutionObject_, v27);
      _s10FinanceKit14ManagedConsentC6update_4withyAC_AA011BankConnectD0VtFZ_0(v28, v24);
      v50 = v28;

      sub_233168500(v24, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
    }
    v31 = v52;
    if (v52 >> 62)
      goto LABEL_25;
    v32 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v32; v32 = sub_23361EF30())
    {
      v49 = v31 & 0xC000000000000001;
      v33 = 4;
      while (1)
      {
        v34 = v49 ? (id)MEMORY[0x234933120](v33 - 4, v31) : *(id *)(v31 + 8 * v33);
        v35 = v34;
        v36 = v33 - 3;
        if (__OFADD__(v33 - 4, 1))
          break;
        type metadata accessor for ManagedAccountImporter();
        inited = swift_initStackObject();
        type metadata accessor for ManagedAccountBalanceImporter();
        *(_QWORD *)(inited + 16) = swift_initStackObject();
        v38 = objc_msgSend(v50, sel_consentID);
        v39 = sub_23361E150();
        v41 = v40;

        v42 = v39;
        v23 = v51;
        v43 = sub_23332E1C0(v35, v42, v41, v51);
        swift_release();
        swift_bridgeObjectRelease();

        ++v33;
        v31 = v52;
        if (v36 == v32)
          goto LABEL_20;
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
    }
LABEL_20:
    swift_bridgeObjectRelease();
    v53[0] = 0;
    if ((objc_msgSend(v23, sel_save_, v53) & 1) != 0)
    {
      v44 = v53[0];
    }
    else
    {
      v45 = v53[0];
      sub_23361D1B4();

      swift_willThrow();
    }

  }
}

id AppleAccountDataImporter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppleAccountDataImporter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23318ED78()
{
  uint64_t v0;
  uint64_t *v1;
  os_unfair_lock_s *v2;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  objc_super v8;
  uint64_t v9;

  if (qword_254246A38 != -1)
    swift_once();
  v1 = (uint64_t *)(qword_254246B20 + 16);
  v2 = (os_unfair_lock_s *)(qword_254246B20 + 24);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_233432294(v1, &v9);
  os_unfair_lock_unlock(v2);
  if (v0)
    return (id)swift_release();
  v4 = v9;
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  swift_retain();
  swift_release();
  v6 = (objc_class *)type metadata accessor for AppleAccountDataImporter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FinanceKit24AppleAccountDataImporter_store] = v5;
  v8.receiver = v7;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_init);
}

unint64_t sub_23318EE6C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v24)
      return result;
  }
  else if (!*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  swift_bridgeObjectRetain_n();
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v26 = v5;
    v6 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29 = v25;
    v27 = v6;
    *(_DWORD *)v6 = 136315138;
    if (v2)
    {
      swift_bridgeObjectRetain();
      v7 = sub_23361EF30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v9 = MEMORY[0x24BEE4AF8];
    if (v7)
    {
      v28 = MEMORY[0x24BEE4AF8];
      result = sub_23327399C(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = 0;
      v9 = v28;
      do
      {
        if ((v1 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x234933120](v10, v1);
        else
          v11 = *(id *)(v1 + 8 * v10 + 32);
        v12 = v11;
        v13 = objc_msgSend(v12, sel_accountIdentifier);
        v14 = sub_23361E150();
        v16 = v15;

        v18 = *(_QWORD *)(v28 + 16);
        v17 = *(_QWORD *)(v28 + 24);
        if (v18 >= v17 >> 1)
          sub_23327399C(v17 > 1, v18 + 1, 1);
        ++v10;
        *(_QWORD *)(v28 + 16) = v18 + 1;
        v19 = v28 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v14;
        *(_QWORD *)(v19 + 40) = v16;
      }
      while (v7 != v10);
    }
    v20 = MEMORY[0x234932760](v9, MEMORY[0x24BEE0D00]);
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_233164DCC(v20, v22, &v29);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v4, v26, "Inserting or updating apple account identifiers %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v25, -1, -1);
    MEMORY[0x234934590](v27, -1, -1);

  }
  else
  {

    v8 = swift_bridgeObjectRelease_n();
  }
  v23 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v23);
  return sub_23361E960();
}

void sub_23318F228()
{
  uint64_t *v0;

  sub_23318D03C(v0[2], v0[3], v0[4], v0[5]);
}

void sub_23318F244()
{
  uint64_t v0;

  sub_23318DD28(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_23318F260()
{
  uint64_t v0;

  sub_23318E34C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

ValueMetadata *type metadata accessor for AppleAccountConstants()
{
  return &type metadata for AppleAccountConstants;
}

uint64_t method lookup function for AppleAccountDataImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppleAccountDataImporter.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static AppleAccountDataImporter.makeClass()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AppleAccountDataImporter.insertOrUpdate(appleAccount:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AppleAccountDataImporter.insertOrUpdate(appleAccounts:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AppleAccountDataImporter.deleteTransactions(with:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AppleAccountDataImporter.deleteAllTransactions(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AppleAccountDataImporter.deleteAppleAccount(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

void sub_23318F394()
{
  uint64_t v0;

  sub_23318E7DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23318F3EC(uint64_t a1, uint64_t a2)
{
  uint64_t refreshed;

  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(refreshed - 8) + 32))(a2, a1, refreshed);
  return a2;
}

uint64_t sub_23318F430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v16[2];
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v17 = type metadata accessor for ExtensionIdentityWrapper();
  MEMORY[0x24BDAC7A8](v17);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v16[1] = v1;
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273A5C(0, v5, 0);
    v6 = v21;
    v7 = sub_23361DA60();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    do
    {
      v11(v4, v9, v7);
      v21 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_233273A5C(v12 > 1, v13 + 1, 1);
        v6 = v21;
      }
      v19 = v17;
      v20 = sub_233167C58((unint64_t *)&qword_256042C98, (uint64_t (*)(uint64_t))type metadata accessor for ExtensionIdentityWrapper, (uint64_t)&protocol conformance descriptor for ExtensionIdentityWrapper);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v18);
      sub_233190B1C((uint64_t)v4, (uint64_t)boxed_opaque_existential_0);
      *(_QWORD *)(v6 + 16) = v13 + 1;
      sub_23318B020(&v18, v6 + 40 * v13 + 32);
      sub_233190B60((uint64_t)v4);
      v9 += v10;
      --v5;
    }
    while (v5);
  }
  return v6;
}

NSXPCConnection sub_23318F5C4()
{
  return ExtensionIdentifying.makeXPCConnection()();
}

id sub_23318F5D8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = (void *)sub_23361DA48();
  v5[0] = 0;
  v1 = objc_msgSend(v0, sel_makeXPCConnectionWithError_, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v1;
}

NSXPCConnection __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ExtensionIdentifying.makeXPCConnection()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v13[2];

  v2 = v1;
  v3 = v0;
  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23361DA60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
  v8 = (void *)sub_23361DA48();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13[0] = 0;
  v9 = objc_msgSend(v8, sel_makeXPCConnectionWithError_, v13);

  v10 = v13[0];
  if (!v9)
  {
    v11 = v10;
    sub_23361D1B4();

    swift_willThrow();
  }
  return (NSXPCConnection)v9;
}

uint64_t ExtensionIdentityWrapper.identity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361DA60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ExtensionIdentityWrapper.identity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361DA60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ExtensionIdentityWrapper.identity.modify())()
{
  return nullsub_1;
}

uint64_t ExtensionIdentityWrapper.hash(into:)()
{
  sub_23361DA60();
  sub_233167C58(&qword_256042BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC7920], MEMORY[0x24BDC7930]);
  return sub_23361E090();
}

uint64_t ExtensionIdentityWrapper.hashValue.getter()
{
  sub_23361F350();
  sub_23361DA60();
  sub_233167C58(&qword_256042BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC7920], MEMORY[0x24BDC7930]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_23318F908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361DA60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id sub_23318F940()
{
  return sub_23318F5D8();
}

uint64_t sub_23318F954()
{
  sub_23361F350();
  sub_23361DA60();
  sub_233167C58(&qword_256042BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC7920], MEMORY[0x24BDC7930]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_23318F9C0()
{
  sub_23361DA60();
  sub_233167C58(&qword_256042BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC7920], MEMORY[0x24BDC7930]);
  return sub_23361E090();
}

uint64_t sub_23318FA18()
{
  sub_23361F350();
  sub_23361DA60();
  sub_233167C58(&qword_256042BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDC7920], MEMORY[0x24BDC7930]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t ExtensionFinder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ExtensionFinder.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ExtensionFinder.getExtensions(for:withBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23318FAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042BD0);
  *v3 = v0;
  v3[1] = sub_23318FB78;
  return sub_23361F1DC();
}

uint64_t sub_23318FB78()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23318FBD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_23318FBDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042CA0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = objc_allocWithZone(MEMORY[0x24BDC79E8]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithExtensionPointIdentifier_, v10);

  if (a4)
  {
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_233623D60;
    *(_QWORD *)(v12 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    *(_QWORD *)(v12 + 64) = sub_233190AD0();
    *(_QWORD *)(v12 + 32) = a4;
    swift_bridgeObjectRetain();
    a4 = (void *)sub_23361E6B4();
  }
  objc_msgSend(v11, sel_setPredicate_, a4);

  v13 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_233625CF0;
  *(_QWORD *)(v14 + 32) = v11;
  aBlock[0] = v14;
  sub_23361E408();
  sub_233168668(0, &qword_256042CA8);
  v15 = v11;
  v16 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_233190C00;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233190238;
  aBlock[3] = &block_descriptor_0;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v13, sel_executeQueries_completionHandler_, v16, v19);
  _Block_release(v19);

}

void sub_23318FEA4(uint64_t a1)
{
  uint64_t v1;

  sub_23318FBDC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_23318FEB0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  id *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for ExtensionIdentityWrapper();
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361DA60();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v34 - v12;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = MEMORY[0x24BEE4AF8];
  v34[1] = a2;
  if (!v14)
  {
    v17 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v22)
    {
LABEL_18:
      v36 = v15;
      sub_233273A88(0, v22, 0);
      v23 = v36;
      v28 = v17 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v29 = *(_QWORD *)(v8 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      do
      {
        v30(v6, v28, v7);
        v36 = v23;
        v32 = *(_QWORD *)(v23 + 16);
        v31 = *(_QWORD *)(v23 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_233273A88(v31 > 1, v32 + 1, 1);
          v23 = v36;
        }
        *(_QWORD *)(v23 + 16) = v32 + 1;
        sub_233190C48((uint64_t)v6, v23+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v32);
        v28 += v29;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
LABEL_23:
    v33 = sub_2331CE378(v23);
    swift_bridgeObjectRelease();
    v36 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256042CA0);
    return sub_23361E48C();
  }
  v34[0] = a1;
  v36 = MEMORY[0x24BEE4AF8];
  result = sub_233273AB4(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v17 = v36;
    v18 = v34[0];
    if ((v34[0] & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v14; ++i)
      {
        MEMORY[0x234933120](i, v18);
        sub_23361DA6C();
        v36 = v17;
        v21 = *(_QWORD *)(v17 + 16);
        v20 = *(_QWORD *)(v17 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_233273AB4(v20 > 1, v21 + 1, 1);
          v18 = v34[0];
          v17 = v36;
        }
        *(_QWORD *)(v17 + 16) = v21 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v21, v13, v7);
      }
    }
    else
    {
      v24 = (id *)(v34[0] + 32);
      do
      {
        v25 = *v24;
        sub_23361DA6C();
        v36 = v17;
        v27 = *(_QWORD *)(v17 + 16);
        v26 = *(_QWORD *)(v17 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_233273AB4(v26 > 1, v27 + 1, 1);
          v17 = v36;
        }
        *(_QWORD *)(v17 + 16) = v27 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v27, v11, v7);
        ++v24;
        --v14;
      }
      while (v14);
    }
    v15 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(v17 + 16);
    if (v22)
      goto LABEL_18;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_233190238(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_233168668(0, &qword_256042C88);
  v2 = sub_23361E3F0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t ExtensionFinder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExtensionFinder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2331902C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_2331902DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042BD0);
  *v3 = v0;
  v3[1] = sub_23318FB78;
  return sub_23361F1DC();
}

uint64_t _s10FinanceKit15ExtensionFinderC13getExtensions3for21withBundleIdentifiersSayAA0C11Identifying_pGSS_SaySSGSgtF_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v4 = sub_23361DA60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(MEMORY[0x24BDC79E8]);
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithExtensionPointIdentifier_, v9);

  if (a3)
  {
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_233623D60;
    *(_QWORD *)(v11 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    *(_QWORD *)(v11 + 64) = sub_233190AD0();
    *(_QWORD *)(v11 + 32) = a3;
    swift_bridgeObjectRetain();
    a3 = (void *)sub_23361E6B4();
  }
  objc_msgSend(v10, sel_setPredicate_, a3);

  v12 = objc_msgSend((id)objc_opt_self(), sel_executeQuery_, v10);
  sub_233168668(0, &qword_256042C88);
  v13 = sub_23361E3F0();

  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
LABEL_16:
    v21 = sub_23318F430(v17);
    swift_bridgeObjectRelease();

    return v21;
  }
  swift_bridgeObjectRetain();
  v14 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_15;
LABEL_5:
  v23 = MEMORY[0x24BEE4AF8];
  result = sub_233273AB4(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v22 = v10;
    v16 = 0;
    v17 = v23;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        MEMORY[0x234933120](v16, v13);
      else
        v18 = *(id *)(v13 + 8 * v16 + 32);
      sub_23361DA6C();
      v23 = v17;
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_233273AB4(v19 > 1, v20 + 1, 1);
        v17 = v23;
      }
      ++v16;
      *(_QWORD *)(v17 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v20, v7, v4);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    v10 = v22;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_2331906C4(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256042BD8, (uint64_t (*)(uint64_t))type metadata accessor for ExtensionIdentityWrapper, (uint64_t)&protocol conformance descriptor for ExtensionIdentityWrapper);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ExtensionIdentityWrapper()
{
  uint64_t result;

  result = qword_256042C48;
  if (!qword_256042C48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23319073C()
{
  return sub_233167C58(&qword_256042BE0, (uint64_t (*)(uint64_t))type metadata accessor for ExtensionIdentityWrapper, (uint64_t)&protocol conformance descriptor for ExtensionIdentityWrapper);
}

uint64_t dispatch thunk of ExtensionIdentifying.identity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ExtensionIdentifying.makeXPCConnection()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeBufferWithCopyOfBuffer for ExtensionIdentityWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ExtensionIdentityWrapper(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361DA60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ExtensionIdentityWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ExtensionIdentityWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ExtensionIdentityWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ExtensionIdentityWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtensionIdentityWrapper()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233190914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ExtensionIdentityWrapper()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23319095C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361DA60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23319099C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361DA60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ExtensionFinding.getExtensions(for:withBundleIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23318B35C;
  return v13(a1, a2, a3, a4, a5);
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t type metadata accessor for ExtensionFinder()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExtensionFinder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExtensionFinder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_233190AD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042C90;
  if (!qword_256042C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246588);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, (unint64_t *)&qword_256042C90);
  }
  return result;
}

uint64_t sub_233190B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionIdentityWrapper();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233190B60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExtensionIdentityWrapper();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233190B9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042CA0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_233190C00(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256042CA0) - 8) + 80);
  return sub_23318FEB0(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_233190C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionIdentityWrapper();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ManagedConsentDeleter.init(widgetRefresher:messagesManager:passDataSourceProvider:userDefaults:notificationCenter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v12;
  void *v13;
  id v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;

  *(_QWORD *)(a6 + 32) = 0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  sub_233190E4C(a1, a6);
  sub_233177068(a2, a6 + 40);
  sub_233177068(a3, a6 + 80);
  sub_233177068(a4, a6 + 120);
  sub_2331686A0(a5, (uint64_t)&v16, &qword_256042CB8);
  if (v17)
  {
    sub_233168608(a5, &qword_256042CB8);
    __swift_destroy_boxed_opaque_existential_0(a4);
    __swift_destroy_boxed_opaque_existential_0(a3);
    __swift_destroy_boxed_opaque_existential_0(a2);
    sub_233168608(a1, &qword_256042CB0);
    sub_23318B020(&v16, (uint64_t)&v18);
  }
  else
  {
    v12 = objc_allocWithZone(MEMORY[0x24BDF88B8]);
    v13 = (void *)sub_23361E12C();
    v14 = objc_msgSend(v12, sel_initWithBundleIdentifier_, v13);

    v19 = sub_233168668(0, (unint64_t *)&qword_256042CC0);
    v20 = &protocol witness table for UNUserNotificationCenter;
    *(_QWORD *)&v18 = v14;
    sub_233168608(a5, &qword_256042CB8);
    __swift_destroy_boxed_opaque_existential_0(a4);
    __swift_destroy_boxed_opaque_existential_0(a3);
    __swift_destroy_boxed_opaque_existential_0(a2);
    sub_233168608(a1, &qword_256042CB0);
    sub_233168608((uint64_t)&v16, &qword_256042CB8);
  }
  return sub_23318B020(&v18, a6 + 160);
}

uint64_t sub_233190E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t ManagedConsentDeleter.deleteConsent(withConsentID:deleteAccountMatches:in:)()
{
  type metadata accessor for ManagedConsentDeleter.Metadata();
  return sub_23361E960();
}

void sub_233190EFC(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, unint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  uint64_t v55;
  id v56;
  id v57;
  char *v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  void *v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  id v102;
  char **v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  __int128 v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  void *ObjCClassFromMetadata;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  objc_super v125;
  objc_super v126;
  uint64_t v127[4];
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;

  v13 = type metadata accessor for BankConnectConsent();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedConsent();
  v16 = (void *)static ManagedConsent.existingConsent(withConsentID:in:)(a1, (uint64_t)a2, (uint64_t)a3);
  if (!v6)
  {
    if (!v16)
    {
      sub_2331939C4();
      swift_allocError();
      swift_willThrow();
      return;
    }
    v116 = 0;
    v17 = v16;
    v114 = v17;
    BankConnectConsent.init(_:)(v17, (uint64_t)v15);
    v18 = objc_msgSend(v17, sel_accountObjects);
    v127[0] = 0;
    type metadata accessor for ManagedInternalAccount();
    sub_233193A08();
    sub_23361E5D0();

    v113 = a6;
    v115 = a3;
    LODWORD(v112) = a5;
    v109 = a4;
    v111 = a2;
    *(_QWORD *)&v110 = a1;
    v119 = v15;
    if (v127[0])
    {
      v19 = v127[0];
    }
    else
    {
      if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
        goto LABEL_64;
      v19 = MEMORY[0x24BEE4B08];
    }
    while (1)
    {
      v120 = v19 & 0xC000000000000001;
      if ((v19 & 0xC000000000000001) != 0)
      {
        v20 = sub_23361ECE4();
        if (!v20)
          goto LABEL_13;
      }
      else
      {
        v20 = *(_QWORD *)(v19 + 16);
        if (!v20)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          v24 = MEMORY[0x24BEE4AF8];
          goto LABEL_33;
        }
      }
      v131 = MEMORY[0x24BEE4AF8];
      sub_233273AE0(0, v20 & ~(v20 >> 63), 0);
      if (v120)
      {
        v21 = sub_23361EC9C();
        v23 = 1;
      }
      else
      {
        v21 = sub_2334F28D4(v19);
        v23 = v25 & 1;
      }
      v128 = v21;
      v129 = v22;
      v130 = v23;
      if ((v20 & 0x8000000000000000) == 0)
        break;
LABEL_63:
      __break(1u);
LABEL_64:
      if (sub_23361EF30())
      {
        sub_2333EF9EC(MEMORY[0x24BEE4AF8]);
        v19 = v107;
      }
      else
      {
        v19 = MEMORY[0x24BEE4B08];
      }
      v15 = v119;
    }
    v26 = v19 & 0xFFFFFFFFFFFFFF8;
    if (v19 < 0)
      v26 = v19;
    ObjCClassFromMetadata = (void *)v26;
    v118 = v19;
    do
    {
      while (1)
      {
        v33 = v128;
        v34 = v130;
        v121 = v129;
        sub_2334F2650(v128, v129, v130, v19);
        v36 = v35;
        v37 = objc_msgSend(v35, sel_accountId);
        v38 = sub_23361E150();
        *(_QWORD *)&v124 = v39;

        v40 = objc_msgSend(v36, sel_institutionId);
        v41 = sub_23361E150();
        v122 = v42;
        v123 = v41;

        v43 = objc_msgSend(v36, sel_externalAccountId);
        if (v43)
        {
          v44 = v43;
          v45 = sub_23361E150();
          v47 = v46;

        }
        else
        {

          v45 = 0;
          v47 = 0;
        }
        v48 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273AE0(0, *(_QWORD *)(v48 + 16) + 1, 1);
          v48 = v131;
        }
        v50 = *(_QWORD *)(v48 + 16);
        v49 = *(_QWORD *)(v48 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_233273AE0(v49 > 1, v50 + 1, 1);
          v48 = v131;
        }
        *(_QWORD *)(v48 + 16) = v50 + 1;
        v51 = (_QWORD *)(v48 + 48 * v50);
        v52 = v124;
        v51[4] = v38;
        v51[5] = v52;
        v53 = v122;
        v51[6] = v123;
        v51[7] = v53;
        v51[8] = v45;
        v51[9] = v47;
        if (v120)
          break;
        v27 = v121;
        v19 = v118;
        v28 = sub_2334F22E0(v33, v121, v34, v118);
        v30 = v29;
        v32 = v31;
        sub_233193A50(v33, v27, v34);
        v128 = v28;
        v129 = v30;
        v130 = v32 & 1;
        v15 = v119;
        if (!--v20)
          goto LABEL_32;
      }
      v19 = v118;
      if ((v34 & 1) == 0)
      {
        __break(1u);
        return;
      }
      if (sub_23361ECB4())
        swift_isUniquelyReferenced_nonNull_native();
      v15 = v119;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042D78);
      v54 = (void (*)(uint64_t *, _QWORD))sub_23361E600();
      sub_23361ED2C();
      v54(v127, 0);
      --v20;
    }
    while (v20);
LABEL_32:
    sub_233193A50(v128, v129, v130);
    swift_bridgeObjectRelease();
    v24 = v131;
LABEL_33:
    v55 = v113;
    sub_233193A5C((uint64_t)v15, v113);
    *(_QWORD *)(v55 + *(int *)(type metadata accessor for ManagedConsentDeleter.Metadata() + 20)) = v24;
    v56 = v114;
    v57 = objc_msgSend(v114, sel_institutionObject);
    v58 = (char *)objc_msgSend(v57, sel_termsAndConditionsObject);

    v59 = v115;
    objc_msgSend(v115, sel_deleteObject_, v56);
    type metadata accessor for ManagedPendingConsent();
    v60 = v116;
    v61 = static ManagedPendingConsent.existingConsent(withConsentID:in:)(v110, (uint64_t)v111, (uint64_t)v59);
    v62 = v60;
    v63 = v112;
    if (v60)
    {
      sub_233193AA0(v55);
      goto LABEL_35;
    }
    v64 = (void *)v61;
    if (v61)
    {
      objc_msgSend(v59, sel_deleteObject_, v61);

    }
    if (v58)
    {
      v108 = v24;
      type metadata accessor for ManagedInstitution();
      v125.receiver = (id)swift_getObjCClassFromMetadata();
      v125.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit18ManagedInstitution;
      v65 = v58;
      v66 = objc_msgSendSuper2(&v125, sel_fetchRequest);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_233626360;
      sub_233168668(0, (unint64_t *)&qword_254247FB0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v68 = swift_allocObject();
      v116 = 0;
      v69 = (_QWORD *)v68;
      *(_OWORD *)(v68 + 16) = xmmword_233623D60;
      v70 = objc_msgSend(v65, "id");
      v71 = sub_23361E150();
      v119 = v58;
      v72 = v71;
      v74 = v73;

      v69[7] = MEMORY[0x24BEE0D00];
      v69[8] = sub_2331683F0();
      v69[4] = v72;
      v69[5] = v74;
      *(_QWORD *)(v67 + 32) = sub_23361E6B4();
      *(_QWORD *)(v67 + 40) = sub_23361E6B4();
      v127[0] = v67;
      sub_23361E408();
      v75 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      v76 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v75);

      objc_msgSend(v66, sel_setPredicate_, v76);
      objc_msgSend(v66, sel_setResultType_, 4);
      v77 = v116;
      v78 = sub_23361E978();
      v62 = v77;
      if (v77)
      {
        sub_233193AA0(v113);

        return;
      }
      v58 = v119;
      v24 = v108;
      v79 = v65;
      if (!v78)
      {
        objc_msgSend(v65, sel_setReviewedAt_, 0);
        v80 = objc_msgSend(v65, "id");
        sub_23361E150();

        sub_233191C0C();
        swift_bridgeObjectRelease();
        v81 = objc_msgSend(v65, "id");
        v82 = sub_23361E150();
        v84 = v83;

        sub_233191E5C(v82, v84, v115);
        v62 = 0;
        swift_bridgeObjectRelease();
      }

      v56 = v114;
      v63 = v112;
    }
    if ((v63 & 1) != 0)
    {
      v85 = *(_QWORD *)(v24 + 16);
      if (v85)
      {
        v116 = v62;
        v118 = type metadata accessor for ManagedAccountMatch();
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        v112 = sub_233168668(0, (unint64_t *)&qword_254247FB0);
        v111 = (id)objc_opt_self();
        swift_bridgeObjectRetain();
        v108 = v24;
        v86 = (uint64_t *)(v24 + 40);
        v110 = xmmword_233626360;
        v124 = xmmword_233623D60;
        v109 = 0x800000023366AC00;
        v119 = v58;
        v87 = MEMORY[0x24BEE0D00];
        while (1)
        {
          v120 = v85;
          v88 = v86[2];
          v89 = v86[4];
          v90 = *(v86 - 1);
          v91 = *v86;
          v122 = v86[1];
          v123 = v90;
          v126.receiver = ObjCClassFromMetadata;
          v126.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit19ManagedAccountMatch;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v121 = v89;
          swift_bridgeObjectRetain();
          v92 = objc_msgSendSuper2(&v126, sel_fetchRequest, v108, v109);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
          v93 = swift_allocObject();
          *(_OWORD *)(v93 + 16) = v110;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
          v94 = swift_allocObject();
          *(_OWORD *)(v94 + 16) = v124;
          *(_QWORD *)(v94 + 56) = v87;
          v95 = sub_2331683F0();
          *(_QWORD *)(v94 + 64) = v95;
          *(_QWORD *)(v94 + 32) = v122;
          *(_QWORD *)(v94 + 40) = v88;
          v122 = v88;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v93 + 32) = sub_23361E6B4();
          v96 = swift_allocObject();
          *(_OWORD *)(v96 + 16) = v124;
          *(_QWORD *)(v96 + 56) = v87;
          *(_QWORD *)(v96 + 64) = v95;
          *(_QWORD *)(v96 + 32) = v123;
          *(_QWORD *)(v96 + 40) = v91;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v93 + 40) = sub_23361E6B4();
          v127[0] = v93;
          sub_23361E408();
          v97 = (void *)sub_23361E3D8();
          swift_bridgeObjectRelease();
          v98 = objc_msgSend(v111, sel_andPredicateWithSubpredicates_, v97);

          objc_msgSend(v92, sel_setPredicate_, v98);
          v99 = v116;
          v100 = sub_23361E984();
          if (v99)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

            sub_233193AA0(v113);
            return;
          }
          v101 = v100;
          v116 = 0;
          v102 = v119;
          if (v100 >> 62)
          {
            swift_bridgeObjectRetain();
            v106 = sub_23361EF30();
            swift_bridgeObjectRelease();
            v103 = &selRef__initWithImage_;
            if (!v106)
            {
LABEL_48:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              goto LABEL_49;
            }
          }
          else
          {
            v103 = &selRef__initWithImage_;
            if (!*(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_48;
          }
          if ((v101 & 0xC000000000000001) != 0)
          {
            v104 = (id)MEMORY[0x234933120](0, v101);
          }
          else
          {
            if (!*(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_63;
            }
            v104 = *(id *)(v101 + 32);
          }
          v105 = v104;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          objc_msgSend(v115, v103[291], v105);
          v92 = v105;
LABEL_49:
          v86 += 6;

          v85 = v120 - 1;
          if (v120 == 1)
          {

            swift_bridgeObjectRelease();
            return;
          }
        }
      }
    }
LABEL_35:

  }
}

void sub_233191BB0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_233190EFC(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), a1);
}

uint64_t type metadata accessor for ManagedConsentDeleter.Metadata()
{
  uint64_t result;

  result = qword_256042D30;
  if (!qword_256042D30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233191C0C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[2];

  v1 = v0;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_23361ED98();
  sub_23361E27C();
  sub_23361E27C();
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v3 = sub_23361DB68();
  v4 = sub_23361E780();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12[0] = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(0, 0xE000000000000000, v12);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v3, v4, "Removing outstanding T&Cs notification with ID: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v6, -1, -1);
    MEMORY[0x234934590](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v7 = v1 + 20;
  v9 = v1[23];
  v8 = v1[24];
  __swift_project_boxed_opaque_existential_1(v7, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 40) = 0xE000000000000000;
  (*(void (**)(void))(v8 + 24))();
  return swift_bridgeObjectRelease();
}

void sub_233191E5C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v6;
  os_log_t oslog;

  type metadata accessor for ManagedWalletMessage();
  v6 = static ManagedWalletMessage.existingMessage(withTermsAndConditionsID:in:)(a1, a2, (uint64_t)a3);
  if (v6)
  {
    oslog = (os_log_t)v6;
    objc_msgSend(a3, sel_deleteObject_);

  }
}

Swift::Void __swiftcall ManagedConsentDeleter.postProcess(_:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  char v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v2 = (uint64_t)v1;
  v4 = v1[13];
  v5 = v1[14];
  __swift_project_boxed_opaque_existential_1(v1 + 10, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v22, v4, v5);
  v18 = (void *)v22[0];
  v6 = *((_QWORD *)a1._rawValue + 2);
  if (v6)
  {
    v19 = v1 + 5;
    v20 = v1;
    swift_bridgeObjectRetain();
    v7 = (void **)((char *)a1._rawValue + 72);
    do
    {
      v8 = (uint64_t)*(v7 - 5);
      v9 = (uint64_t)*(v7 - 4);
      v10 = (uint64_t)*(v7 - 1);
      v11 = *v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256042CC8);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_233626370;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      *(_BYTE *)(v12 + 48) = 1;
      *(_QWORD *)(v12 + 56) = v8;
      *(_QWORD *)(v12 + 64) = v9;
      *(_BYTE *)(v12 + 72) = 2;
      *(_QWORD *)(v12 + 80) = v8;
      *(_QWORD *)(v12 + 88) = v9;
      *(_BYTE *)(v12 + 96) = 3;
      *(_QWORD *)(v12 + 104) = v8;
      *(_QWORD *)(v12 + 112) = v9;
      *(_BYTE *)(v12 + 120) = 4;
      *(_QWORD *)(v12 + 128) = v8;
      *(_QWORD *)(v12 + 136) = v9;
      *(_BYTE *)(v12 + 144) = 5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v12 = (uint64_t)sub_2334A4CBC((_QWORD *)1, 6, 1, (_QWORD *)v12);
        *(_QWORD *)(v12 + 16) = 6;
        *(_QWORD *)(v12 + 152) = v10;
        *(_QWORD *)(v12 + 160) = v11;
        *(_BYTE *)(v12 + 168) = 0;
      }
      v13 = v20[8];
      v14 = v20[9];
      __swift_project_boxed_opaque_existential_1(v19, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        v22[0] = v18;
        v15._countAndFlagsBits = v10;
        v15._object = v11;
        BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(0, v15);
      }
      swift_bridgeObjectRelease();
      v7 += 6;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v2 = (uint64_t)v20;
  }
  sub_2331686A0(v2, (uint64_t)v22, &qword_256042CB0);
  v16 = v23;
  if (v23)
  {
    v17 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v21 = 1;
    (*(void (**)(char *, unint64_t, unint64_t, uint64_t, uint64_t))(v17 + 8))(&v21, 0xD000000000000012, 0x800000023366ABE0, v16, v17);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  }
  else
  {

    sub_233168608((uint64_t)v22, &qword_256042CB0);
  }
}

uint64_t static ManagedConsentDeleter.ConsentDeletingError.== infix(_:_:)()
{
  return 1;
}

uint64_t ManagedConsentDeleter.ConsentDeletingError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ManagedConsentDeleter.ConsentDeletingError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t ManagedConsentDeleter.Metadata.deletedConsent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331925D8(v1, a1);
}

uint64_t ManagedConsentDeleter.Metadata.deletedConsent.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23319261C(a1, v1);
}

uint64_t (*ManagedConsentDeleter.Metadata.deletedConsent.modify())()
{
  return nullsub_1;
}

uint64_t ManagedConsentDeleter.Metadata.grantedAccountsMetadata.getter()
{
  type metadata accessor for ManagedConsentDeleter.Metadata();
  return swift_bridgeObjectRetain();
}

uint64_t ManagedConsentDeleter.Metadata.grantedAccountsMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ManagedConsentDeleter.Metadata() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ManagedConsentDeleter.Metadata.grantedAccountsMetadata.modify())()
{
  type metadata accessor for ManagedConsentDeleter.Metadata();
  return nullsub_1;
}

uint64_t ManagedConsentDeleter.Metadata.AccountMetadata.fullyQualifiedAccountIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ManagedConsentDeleter.Metadata.AccountMetadata.fullyQualifiedAccountIdentifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*ManagedConsentDeleter.Metadata.AccountMetadata.fullyQualifiedAccountIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ManagedConsentDeleter.Metadata.AccountMetadata.fpanID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ManagedConsentDeleter.Metadata.AccountMetadata.fpanID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ManagedConsentDeleter.Metadata.AccountMetadata.fpanID.modify())()
{
  return nullsub_1;
}

uint64_t sub_2331925D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectConsent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23319261C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectConsent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_233192664()
{
  unint64_t result;

  result = qword_256042CD0;
  if (!qword_256042CD0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedConsentDeleter.ConsentDeletingError, &type metadata for ManagedConsentDeleter.ConsentDeletingError);
    atomic_store(result, (unint64_t *)&qword_256042CD0);
  }
  return result;
}

uint64_t destroy for ManagedConsentDeleter(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0(a1);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  __swift_destroy_boxed_opaque_existential_0(a1 + 80);
  __swift_destroy_boxed_opaque_existential_0(a1 + 120);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 160);
}

uint64_t initializeWithCopy for ManagedConsentDeleter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 80, a2 + 80);
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 120, a2 + 120);
  v10 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 160, a2 + 160);
  return a1;
}

uint64_t assignWithCopy for ManagedConsentDeleter(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)a2 + 15);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 160), (uint64_t *)a2 + 20);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ManagedConsentDeleter(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  __swift_destroy_boxed_opaque_existential_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  __swift_destroy_boxed_opaque_existential_0(a1 + 160);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedConsentDeleter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedConsentDeleter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedConsentDeleter()
{
  return &type metadata for ManagedConsentDeleter;
}

uint64_t storeEnumTagSinglePayload for ManagedConsentDeleter.ConsentDeletingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233192BE4 + 4 * byte_233626380[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233192C04 + 4 * byte_233626385[v4]))();
}

_BYTE *sub_233192BE4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233192C04(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233192C0C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233192C14(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233192C1C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233192C24(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ManagedConsentDeleter.ConsentDeletingError()
{
  return &type metadata for ManagedConsentDeleter.ConsentDeletingError;
}

char *initializeBufferWithCopyOfBuffer for ManagedConsentDeleter.Metadata(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for BankConnectConsent();
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23361D634();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    swift_bridgeObjectRetain();
    v18(v14, v15, v16);
    v18(&a1[v8[7]], &a2[v8[7]], v16);
    v19 = v8[8];
    v20 = &a1[v19];
    v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v19], 1, v16))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
    v24 = v8[10];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    a1[v8[11]] = a2[v8[11]];
    v28 = v8[12];
    v29 = &a1[v28];
    v30 = &a2[v28];
    swift_bridgeObjectRetain();
    v18(v29, v30, v16);
    *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ManagedConsentDeleter.Metadata(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v2 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for BankConnectConsent();
  swift_bridgeObjectRelease();
  v4 = a1 + v3[6];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + v3[7], v5);
  v8 = a1 + v3[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  v7(a1 + v3[12], v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManagedConsentDeleter.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v7[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  v17(v13, v14, v15);
  v17((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v15);
  v18 = v7[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a2 + v18, 1, v15))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v17(v19, v20, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v22 = v7[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v26 = v7[12];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  swift_bridgeObjectRetain();
  v17(v27, v28, v15);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManagedConsentDeleter.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v6[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v15((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v13);
  v16 = v6[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19((const void *)(a1 + v16), 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v23 = v6[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v15((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v13);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ManagedConsentDeleter.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v13((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v14 = v7[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v13((void *)(a1 + v7[12]), (const void *)(a2 + v7[12]), v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ManagedConsentDeleter.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(const void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = v6[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v17((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v15);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21((const void *)(a1 + v18), 1, v15);
  v23 = v21(v20, 1, v15);
  if (!v22)
  {
    if (!v23)
    {
      v17(v19, v20, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v19, v20, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v25 = v6[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v17((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v15);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedConsentDeleter.Metadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233193634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BankConnectConsent();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedConsentDeleter.Metadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331936BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BankConnectConsent();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_233193734()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BankConnectConsent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ManagedConsentDeleter.Metadata.AccountMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ManagedConsentDeleter.Metadata.AccountMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ManagedConsentDeleter.Metadata.AccountMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for ManagedConsentDeleter.Metadata.AccountMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedConsentDeleter.Metadata.AccountMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedConsentDeleter.Metadata.AccountMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedConsentDeleter.Metadata.AccountMetadata()
{
  return &type metadata for ManagedConsentDeleter.Metadata.AccountMetadata;
}

unint64_t sub_2331939C4()
{
  unint64_t result;

  result = qword_256042D68;
  if (!qword_256042D68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedConsentDeleter.ConsentDeletingError, &type metadata for ManagedConsentDeleter.ConsentDeletingError);
    atomic_store(result, (unint64_t *)&qword_256042D68);
  }
  return result;
}

unint64_t sub_233193A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042D70;
  if (!qword_256042D70)
  {
    v1 = type metadata accessor for ManagedInternalAccount();
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256042D70);
  }
  return result;
}

uint64_t sub_233193A50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_233193A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectConsent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233193AA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManagedConsentDeleter.Metadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StringParams.value.getter()
{
  return swift_bridgeObjectRetain();
}

id StringParams.__allocating_init(value:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit12StringParams_value] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id StringParams.init(value:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit12StringParams_value] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t StringParams.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char *v7;
  _BYTE v8[24];
  uint64_t v9;

  swift_getObjectType();
  sub_2331686A0(a1, (uint64_t)v8, &qword_254245020);
  if (!v9)
  {
    sub_233168608((uint64_t)v8, &qword_254245020);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v5 = 0;
    return v5 & 1;
  }
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit12StringParams_value);
  v4 = *(_QWORD *)&v7[OBJC_IVAR____TtC10FinanceKit12StringParams_value];
  swift_bridgeObjectRetain();
  v5 = sub_233193C50(v3, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_233193C50(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_2331E3D18(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_23361F224();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_233193E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  BOOL v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  int64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t started;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  _BOOL4 v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v4 = sub_23361D634();
  v80 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v75 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v76);
  v86 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for AccountStartDate();
  v82 = *(_QWORD *)(started - 8);
  v9 = MEMORY[0x24BDAC7A8](started);
  v85 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)&v66 - v11;
  v12 = sub_23361D6A0();
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v77 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v66 - v19;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v74 = 0;
  v70 = a1;
  v71 = a2;
  v23 = *(_QWORD *)(a1 + 64);
  v22 = a1 + 64;
  v21 = v23;
  v24 = 1 << *(_BYTE *)(v22 - 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v21;
  v67 = v22;
  v68 = (unint64_t)(v24 + 63) >> 6;
  v66 = v68 - 1;
  v72 = v4;
  v27 = (uint64_t)v78;
  while (1)
  {
    if (v26)
    {
      v32 = __clz(__rbit64(v26));
      v33 = (v26 - 1) & v26;
      v34 = v32 | (v74 << 6);
LABEL_12:
      v35 = v70;
      (*(void (**)(char *, unint64_t, uint64_t))(v83 + 16))(v17, *(_QWORD *)(v70 + 48) + *(_QWORD *)(v83 + 72) * v34, v84);
      v36 = *(_QWORD *)(v35 + 56) + *(_QWORD *)(v82 + 72) * v34;
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042DB0);
      sub_2331960E4(v36, (uint64_t)&v17[*(int *)(v37 + 48)]);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 0, 1, v37);
      v27 = (uint64_t)v78;
      goto LABEL_31;
    }
    v38 = v74 + 1;
    if (__OFADD__(v74, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v38 < v68)
    {
      v39 = *(_QWORD *)(v67 + 8 * v38);
      if (v39)
        goto LABEL_16;
      v40 = v74 + 2;
      ++v74;
      if (v38 + 1 < v68)
      {
        v39 = *(_QWORD *)(v67 + 8 * v40);
        if (v39)
          goto LABEL_19;
        v74 = v38 + 1;
        if (v38 + 2 < v68)
        {
          v39 = *(_QWORD *)(v67 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_16;
          }
          v40 = v38 + 3;
          v74 = v38 + 2;
          if (v38 + 3 < v68)
            break;
        }
      }
    }
LABEL_30:
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v17, 1, 1, v41);
    v33 = 0;
LABEL_31:
    sub_233196128((uint64_t)v17, (uint64_t)v20);
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042DB0);
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v20, 1, v42);
    v79 = v43 == 1;
    if (v43 == 1)
      return v79;
    v81 = v33;
    v44 = (uint64_t)&v20[*(int *)(v42 + 48)];
    v45 = v83;
    v46 = (uint64_t)v77;
    v47 = v20;
    v48 = v20;
    v49 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v77, v48, v84);
    sub_233196170(v44, v27);
    v50 = sub_2331E3D7C(v46);
    v52 = v51;
    v53 = v27;
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v49);
    if ((v52 & 1) == 0)
      goto LABEL_41;
    v54 = v85;
    sub_2331960E4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v82 + 72) * v50, v85);
    v55 = v86;
    v56 = v86 + *(int *)(v76 + 48);
    sub_2331686A0(v54, v86, (uint64_t *)&unk_254247DA0);
    sub_2331686A0(v27, v56, (uint64_t *)&unk_254247DA0);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    v58 = v55;
    v59 = v72;
    if (v57(v58, 1, v72) == 1)
    {
      if (v57(v56, 1, v59) != 1)
        goto LABEL_39;
      sub_233168608(v86, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      sub_2331686A0(v86, v75, (uint64_t *)&unk_254247DA0);
      if (v57(v56, 1, v59) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v75, v59);
LABEL_39:
        sub_233168608(v86, &qword_256042DA0);
LABEL_40:
        sub_2331961B4(v85);
LABEL_41:
        sub_2331961B4(v53);
        return 0;
      }
      v60 = v80;
      v61 = v75;
      v62 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v69, v56, v59);
      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v63 = sub_23361E108();
      v64 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v64(v61, v59);
      v65 = v86;
      v53 = (uint64_t)v78;
      v64((uint64_t)v62, v59);
      sub_233168608(v65, (uint64_t *)&unk_254247DA0);
      if ((v63 & 1) == 0)
        goto LABEL_40;
    }
    v28 = *(int *)(started + 20);
    v29 = *(unsigned __int8 *)(v85 + v28);
    v30 = *(unsigned __int8 *)(v53 + v28);
    sub_2331961B4(v85);
    v27 = v53;
    result = sub_2331961B4(v53);
    v31 = v29 == v30;
    a2 = v71;
    v20 = v47;
    v26 = v81;
    if (!v31)
      return v79;
  }
  v39 = *(_QWORD *)(v67 + 8 * v40);
  if (v39)
  {
LABEL_19:
    v38 = v40;
LABEL_16:
    v33 = (v39 - 1) & v39;
    v34 = __clz(__rbit64(v39)) + (v38 << 6);
    v74 = v38;
    goto LABEL_12;
  }
  while (1)
  {
    v38 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v38 >= v68)
    {
      v74 = v66;
      goto LABEL_30;
    }
    v39 = *(_QWORD *)(v67 + 8 * v38);
    ++v40;
    if (v39)
      goto LABEL_16;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t StringParams.hash.getter()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[4];
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  sub_23361F3B0();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit12StringParams_value);
  swift_bridgeObjectRetain();
  sub_233195E88((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  v7 = v3[2];
  v8 = v3[3];
  v9 = v4;
  v5 = v3[0];
  v6 = v3[1];
  return sub_23361F398();
}

uint64_t static StringParams.supportsSecureCoding.getter()
{
  return 1;
}

id StringParams.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StringParams.init(coder:)(a1);
}

id StringParams.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247DC0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  v6 = sub_23319604C();
  *(_QWORD *)(v5 + 32) = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 32) = v6;
  v8 = v2;
  v9 = sub_23361E9E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9 && (v10 = sub_2331947EC(v9), swift_bridgeObjectRelease(), v10))
  {
    *(_QWORD *)&v8[OBJC_IVAR____TtC10FinanceKit12StringParams_value] = v10;

    v13.receiver = v8;
    v13.super_class = ObjectType;
    v11 = objc_msgSendSuper2(&v13, sel_init);

  }
  else
  {

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

unint64_t sub_2331947EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  _OWORD v28[2];
  _OWORD v29[2];
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254245098);
    v1 = (_QWORD *)sub_23361EF60();
  }
  else
  {
    v1 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  v4 = v2 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v4)
    {
      v10 = (v4 - 1) & v4;
      v11 = __clz(__rbit64(v4)) | (v6 << 6);
      v12 = v6;
    }
    else
    {
      v13 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_40;
      if (v13 >= v22)
      {
LABEL_36:
        sub_2331961F0();
        return (unint64_t)v1;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v6 + 1;
      if (!v14)
      {
        v12 = v6 + 2;
        if (v6 + 2 >= v22)
          goto LABEL_36;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v6 + 3;
          if (v6 + 3 >= v22)
            goto LABEL_36;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v6 + 4;
            if (v6 + 4 >= v22)
              goto LABEL_36;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v6 + 5;
              if (v6 + 5 >= v22)
                goto LABEL_36;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_41;
                  if (v12 >= v22)
                    goto LABEL_36;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_2331961F8(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v31);
    sub_233168350(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v32 + 8);
    v29[0] = v32[0];
    v29[1] = v32[1];
    v30 = v33;
    v28[0] = v31[0];
    v28[1] = v31[1];
    sub_2331961F8((uint64_t)v28, (uint64_t)v27);
    if (!swift_dynamicCast())
    {
      sub_233168608((uint64_t)v28, (uint64_t *)&unk_256042DF0);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_2331961F0();
      swift_release();
      return 0;
    }
    sub_233168350((uint64_t)v29 + 8, (uint64_t)v27);
    sub_233168608((uint64_t)v28, (uint64_t *)&unk_256042DF0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    result = sub_2331E3D18(v25, v26);
    if ((v16 & 1) != 0)
    {
      v7 = 16 * result;
      v8 = (uint64_t *)(v1[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v25;
      v8[1] = v26;
      v9 = (uint64_t *)(v1[7] + v7);
      result = swift_bridgeObjectRelease();
      *v9 = v25;
      v9[1] = v26;
      goto LABEL_8;
    }
    if (v1[2] >= v1[3])
      break;
    *(_QWORD *)((char *)v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v17 = (uint64_t *)(v1[6] + 16 * result);
    *v17 = v25;
    v17[1] = v26;
    v18 = (uint64_t *)(v1[7] + 16 * result);
    *v18 = v25;
    v18[1] = v26;
    v19 = v1[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_39;
    v1[2] = v21;
LABEL_8:
    v6 = v12;
    v4 = v10;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Void __swiftcall StringParams.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  id v4;

  sub_233194C98(*(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit12StringParams_value));
  sub_23319604C();
  sub_233167C58((unint64_t *)&qword_256042D98, (uint64_t (*)(uint64_t))sub_23319604C, MEMORY[0x24BEE5BD8]);
  v3 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  v4 = (id)sub_23361E12C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

}

uint64_t sub_233194C98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042DE0);
    v2 = sub_23361EF60();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v25 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_28;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v24)
      goto LABEL_37;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v24)
        goto LABEL_37;
      v12 = *(_QWORD *)(v25 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v24)
          goto LABEL_37;
        v12 = *(_QWORD *)(v25 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v24)
            goto LABEL_37;
          v12 = *(_QWORD *)(v25 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v8 = v13;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_23361E12C();
    swift_bridgeObjectRelease();
    v16 = sub_23361E12C();
    swift_bridgeObjectRelease();
    result = sub_23361EA08();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v6 + 8 * (v18 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v6 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v6 + 8 * v19);
      }
      while (v23 == -1);
      v9 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = 8 * v9;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + v10) = v15;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + v10) = v16;
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v24)
  {
LABEL_37:
    swift_release();
    sub_2331961F0();
    return v2;
  }
  v12 = *(_QWORD *)(v25 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v24)
      goto LABEL_37;
    v12 = *(_QWORD *)(v25 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_233194FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  void *v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  _OWORD v29[4];
  _OWORD v30[2];
  _OWORD v31[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256042DD0);
    v2 = sub_23361EF60();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_28;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v27)
      goto LABEL_37;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    v14 = v8 + 1;
    if (!v13)
    {
      v14 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v13 = *(_QWORD *)(v28 + 8 * v14);
      if (!v13)
      {
        v14 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (!v13)
        {
          v14 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v13 = *(_QWORD *)(v28 + 8 * v14);
          if (!v13)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v8 = v14;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v11);
    v17 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v11);
    *(_QWORD *)&v31[0] = v16;
    LOBYTE(v30[0]) = v17;
    v18 = v16;
    swift_dynamicCast();
    v19 = *(_QWORD *)&v31[0];
    sub_2331683D0((_OWORD *)((char *)v31 + 8), v29);
    sub_2331683D0(v29, v31);
    sub_2331683D0(v31, v30);
    sub_23361F350();
    type metadata accessor for CFString(0);
    sub_233167C58(&qword_256042DD8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2336242E4);
    sub_23361D9A0();
    result = sub_23361F3A4();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v19;
    result = (uint64_t)sub_2331683D0(v30, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_2331961F0();
    return v2;
  }
  v13 = *(_QWORD *)(v28 + 8 * v15);
  if (v13)
  {
    v14 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v27)
      goto LABEL_37;
    v13 = *(_QWORD *)(v28 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_233195348(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  _OWORD v32[4];
  _OWORD v33[2];
  _OWORD v34[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256042DC0);
    v2 = sub_23361EF60();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v30 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v31 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v31 << 6);
      goto LABEL_28;
    }
    v11 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v29)
      goto LABEL_37;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v31 + 1;
    if (!v12)
    {
      v13 = v31 + 2;
      if (v31 + 2 >= v29)
        goto LABEL_37;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v31 + 3;
        if (v31 + 3 >= v29)
          goto LABEL_37;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v31 + 4;
          if (v31 + 4 >= v29)
            goto LABEL_37;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v31 = v13;
LABEL_28:
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v17 = *v16;
    v18 = v16[1];
    *(_QWORD *)&v34[0] = v15;
    *(_QWORD *)&v33[0] = v17;
    *((_QWORD *)&v33[0] + 1) = v18;
    v19 = v15;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v20 = *(_QWORD *)&v34[0];
    sub_2331683D0((_OWORD *)((char *)v34 + 8), v32);
    sub_2331683D0(v32, v34);
    sub_2331683D0(v34, v33);
    sub_23361E150();
    sub_23361F350();
    sub_23361E0A8();
    v21 = sub_23361F3A4();
    result = swift_bridgeObjectRelease();
    v22 = -1 << *(_BYTE *)(v2 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v6 + 8 * (v23 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v6 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v6 + 8 * v24);
      }
      while (v28 == -1);
      v8 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v20;
    result = (uint64_t)sub_2331683D0(v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v31 + 5;
  if (v31 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_2331961F0();
    return v2;
  }
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v31 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v29)
      goto LABEL_37;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_2331956E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254245010);
    v2 = sub_23361EF60();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_233168350(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_2331683D0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_2331683D0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_2331683D0(v36, v37);
    sub_2331683D0(v37, &v33);
    result = sub_23361ED38();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_2331683D0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_2331961F0();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id StringParams.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StringParams.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_233195C10()
{
  uint64_t result;

  result = sub_23361E12C();
  qword_2542481F0 = result;
  return result;
}

id static NSValueTransformerName.stringParamsTransformerName.getter()
{
  if (qword_254248710 != -1)
    swift_once();
  return (id)qword_2542481F0;
}

uint64_t static StringParamsTransformer.allowedTopLevelClasses.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254247DC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  *(_QWORD *)(v0 + 32) = type metadata accessor for StringParams();
  return v0;
}

void static StringParamsTransformer.register()()
{
  objc_class *v0;
  uint64_t v1;
  void *v2;
  id v3;

  if (qword_254248710 != -1)
    swift_once();
  v1 = qword_2542481F0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  objc_msgSend(v2, sel_setValueTransformer_forName_, v3, v1);

}

id StringParamsTransformer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id _s10FinanceKit12StringParamsCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233195E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_18:
    v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    result = sub_23361F3A4();
    v7 ^= result;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_23361F35C();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_23319604C()
{
  unint64_t result;

  result = qword_2542465C0;
  if (!qword_2542465C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542465C0);
  }
  return result;
}

uint64_t type metadata accessor for StringParams()
{
  return objc_opt_self();
}

uint64_t method lookup function for StringParams()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StringParams.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of StringParams.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for StringParamsTransformer()
{
  return objc_opt_self();
}

uint64_t sub_2331960E4(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for AccountStartDate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_233196128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233196170(uint64_t a1, uint64_t a2)
{
  uint64_t started;

  started = type metadata accessor for AccountStartDate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_2331961B4(uint64_t a1)
{
  uint64_t started;

  started = type metadata accessor for AccountStartDate();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_2331961F0()
{
  return swift_release();
}

uint64_t sub_2331961F8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

Swift::String __swiftcall PIIStringProcessorWrapper.redact(from:)(Swift::String from)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void *v4;
  Swift::String result;
  _QWORD v6[2];
  char v7;

  object = from._object;
  countAndFlagsBits = from._countAndFlagsBits;
  PIIStringProcessor.redact(from:forCountryCodes:)(from._countAndFlagsBits, (uint64_t)from._object, MEMORY[0x24BEE4B08], (uint64_t)v6);
  if ((v7 & 1) != 0)
  {
    countAndFlagsBits = v6[0];
    object = (void *)v6[1];
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2331966B8();
  }
  v3 = countAndFlagsBits;
  v4 = object;
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t PIIStringProcessorWrapper.redact(from:forCountryCodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char v6;

  v3 = a1;
  PIIStringProcessor.redact(from:forCountryCodes:)(a1, a2, a3, (uint64_t)&v5);
  if ((v6 & 1) != 0)
    return v5;
  swift_bridgeObjectRetain();
  sub_2331966B8();
  return v3;
}

id PIIStringProcessorWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PIIStringProcessorWrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PIIStringProcessorWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id _s10FinanceKit25PIIStringProcessorWrapperC04makeD0ACyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  objc_class *v4;
  char *v5;
  objc_super v7;
  _BYTE v8[24];
  ValueMetadata *v9;
  _UNKNOWN **v10;

  v0 = type metadata accessor for PIIRedactionRegexCollectionProvider();
  v1 = swift_allocObject();
  v9 = &type metadata for FinanceTrialProvider;
  v10 = &protocol witness table for FinanceTrialProvider;
  sub_233177068((uint64_t)v8, v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042E30);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 40) = 0;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  *(_QWORD *)(v1 + 56) = v2;
  type metadata accessor for PIIStringProcessor();
  v3 = (_QWORD *)swift_allocObject();
  v3[5] = v0;
  v3[6] = &protocol witness table for PIIRedactionRegexCollectionProvider;
  v3[2] = v1;
  v4 = (objc_class *)type metadata accessor for PIIStringProcessorWrapper();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit25PIIStringProcessorWrapper_piiProcessor] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_2331966B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PIIStringProcessorWrapper()
{
  return objc_opt_self();
}

uint64_t method lookup function for PIIStringProcessorWrapper()
{
  return swift_lookUpClassMethod();
}

id ManagedInternalAccountBalance.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInternalAccountBalance.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInternalAccountBalance.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedInternalAccountBalance.__allocating_init(_:account:updatedAt:context:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;

  v6 = sub_233198D0C(a1, a2, a3, a4, type metadata accessor for InternalAccountBalance, (uint64_t (*)(char *, id, id))sub_23319E070);

  return v6;
}

{
  id v6;

  v6 = sub_233198D0C(a1, a2, a3, a4, type metadata accessor for RawBankConnectData.Account, (uint64_t (*)(char *, id, id))sub_23319E6C8);

  return v6;
}

void static ManagedInternalAccountBalance.update(_:withAvailableAmountAsOf:withBookedAmountAsOf:updatedAt:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;

  v6 = (void *)sub_23361D5B0();
  objc_msgSend(a1, sel_setLastUpdatedAt_, v6);

  v7 = objc_msgSend(a1, sel_publicAccountBalanceObject);
  _s10FinanceKit21ManagedAccountBalanceC6update_23withAvailableAmountAsOf0g6BookedijK0yAC_10Foundation4DateVSgAJtFZ_0(v7, a2, a3);

}

uint64_t BalanceCalculation.init(managedAccountBalance:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  int v57;
  void (*v58)(unint64_t, char *, uint64_t);
  unint64_t v59;
  __int16 v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int16 v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  unint64_t v108;
  char *v109;
  void (*v110)(char *, uint64_t, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unsigned int v139;

  v126 = a2;
  v3 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v115 = (uint64_t)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v121 = (uint64_t)&v103 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v116 = (uint64_t)&v103 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v132 = (char *)&v103 - v11;
  v12 = sub_23361D634();
  v134 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v119 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v118 = (unint64_t)&v103 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v127 = (char *)&v103 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v128 = (unint64_t)&v103 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v103 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v103 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v136 = (unint64_t)&v103 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042E48);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v120 = (uint64_t)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v122 = (char *)&v103 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v130 = (char *)&v103 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v129 = (uint64_t)&v103 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v103 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v103 - v43;
  v45 = type metadata accessor for BalanceCalculation(0);
  v124 = *(_QWORD *)(v45 - 8);
  v125 = v45;
  MEMORY[0x24BDAC7A8](v45);
  v123 = (uint64_t)&v103 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = v4;
  v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v135 = v3;
  v133 = v47;
  v47(v44, 1, 1, v3);
  v48 = objc_msgSend(a1, sel_availableAmountValue);
  if (v48)
  {
    v49 = v48;
    objc_msgSend(v48, sel_decimalValue);
    v117 = v139;
    v114 = v138;
    v113 = v137;
    v50 = objc_msgSend(a1, sel_currency);
    v112 = sub_23361E150();
    v52 = v51;

  }
  else
  {
    v113 = 0;
    v114 = 0;
    v117 = 0;
    v112 = 0;
    v52 = 0;
  }
  v53 = objc_msgSend(a1, sel_availableAmountAsOf);
  v54 = v134;
  if (v53)
  {
    v55 = v53;
    sub_23361D5EC();

    v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
    v56(v29, 0, 1, v12);
  }
  else
  {
    v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56);
    v56(v29, 1, 1, v12);
  }
  sub_233168478((uint64_t)v29, v136, (uint64_t *)&unk_254247DA0);
  sub_23319CDA8((char *)&v137);
  if (v52)
  {
    v57 = v137;
    sub_2331686A0(v136, (uint64_t)v26, (uint64_t *)&unk_254247DA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v26, 1, v12) == 1)
    {
      swift_bridgeObjectRelease();
      sub_233168608((uint64_t)v26, (uint64_t *)&unk_254247DA0);
    }
    else
    {
      v110 = v56;
      v111 = v19;
      v58 = *(void (**)(unint64_t, char *, uint64_t))(v54 + 32);
      v59 = v118;
      v58(v118, v26, v12);
      if (v57 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v54 + 8))(v59, v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        v108 = v117 >> 16;
        v60 = v114;
        v106 = HIWORD(v114);
        v105 = HIDWORD(v114);
        v104 = v114 >> 16;
        v109 = v42;
        v61 = v113;
        v103 = HIWORD(v113);
        v107 = v57 & 1;
        v62 = HIDWORD(v113);
        sub_233168608((uint64_t)v44, &qword_256042E48);
        v63 = v135;
        v58((unint64_t)&v44[*(int *)(v135 + 20)], (char *)v59, v12);
        *(_DWORD *)v44 = v61;
        v42 = v109;
        *((_WORD *)v44 + 2) = v62;
        *((_WORD *)v44 + 3) = v103;
        *((_WORD *)v44 + 4) = v60;
        *((_WORD *)v44 + 5) = v104;
        *((_WORD *)v44 + 6) = v105;
        *((_WORD *)v44 + 7) = v106;
        *((_WORD *)v44 + 8) = v117;
        *((_WORD *)v44 + 9) = v108;
        *((_QWORD *)v44 + 3) = v112;
        *((_QWORD *)v44 + 4) = v52;
        v44[*(int *)(v63 + 24)] = v107;
        v133(v44, 0, 1, v63);
      }
      v19 = v111;
      v56 = v110;
    }
  }
  v133(v42, 1, 1, v135);
  v64 = objc_msgSend(a1, sel_bookedAmountValue);
  if (v64)
  {
    v65 = v64;
    objc_msgSend(v64, sel_decimalValue);
    v118 = v139;
    v66 = v138;
    v117 = v137;
    v67 = objc_msgSend(a1, sel_currency);
    v114 = sub_23361E150();
    v69 = v68;

  }
  else
  {
    v117 = 0;
    v66 = 0;
    v118 = 0;
    v114 = 0;
    v69 = 0;
  }
  v70 = (uint64_t)v127;
  v71 = objc_msgSend(a1, sel_bookedAmountAsOf);
  if (v71)
  {
    v72 = v71;
    sub_23361D5EC();

    v73 = 0;
  }
  else
  {
    v73 = 1;
  }
  v56((char *)v70, v73, 1, v12);
  v74 = v128;
  sub_233168478(v70, v128, (uint64_t *)&unk_254247DA0);
  sub_23319CDBC((char *)&v137);

  sub_233168608(v136, (uint64_t *)&unk_254247DA0);
  if (!v69)
  {
    sub_233168608(v74, (uint64_t *)&unk_254247DA0);
    goto LABEL_26;
  }
  v75 = v137;
  sub_233168478(v74, (uint64_t)v19, (uint64_t *)&unk_254247DA0);
  v76 = v134;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v19, 1, v12) == 1)
  {
    swift_bridgeObjectRelease();
    sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
LABEL_26:
    v80 = v135;
    goto LABEL_27;
  }
  v77 = v76;
  v78 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v79 = v119;
  v78(v119, v19, v12);
  if (v75 == 2)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v12);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v99 = v118;
  v136 = v118 >> 16;
  v127 = (char *)HIDWORD(v66);
  v128 = HIWORD(v66);
  v113 = v66 >> 16;
  v100 = v117;
  v112 = HIWORD(v117);
  LODWORD(v134) = v75 & 1;
  v101 = HIDWORD(v117);
  sub_233168608((uint64_t)v42, &qword_256042E48);
  v102 = v12;
  v80 = v135;
  v78(&v42[*(int *)(v135 + 20)], v79, v102);
  *(_DWORD *)v42 = v100;
  *((_WORD *)v42 + 2) = v101;
  *((_WORD *)v42 + 3) = v112;
  *((_WORD *)v42 + 4) = v66;
  *((_WORD *)v42 + 5) = v113;
  *((_WORD *)v42 + 6) = (_WORD)v127;
  *((_WORD *)v42 + 7) = v128;
  *((_WORD *)v42 + 8) = v99;
  *((_WORD *)v42 + 9) = v136;
  *((_QWORD *)v42 + 3) = v114;
  *((_QWORD *)v42 + 4) = v69;
  v42[*(int *)(v80 + 24)] = v134;
  v133(v42, 0, 1, v80);
LABEL_27:
  v81 = (uint64_t)v132;
  v82 = v129;
  sub_2331686A0((uint64_t)v44, v129, &qword_256042E48);
  v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48);
  v84 = v83(v82, 1, v80);
  v85 = (uint64_t)v130;
  if (v84 == 1)
  {
    v85 = v82;
  }
  else
  {
    sub_233168580(v82, v81, type metadata accessor for BalanceCalculation.CalculationDetails);
    sub_2331686A0((uint64_t)v42, v85, &qword_256042E48);
    if (v83(v85, 1, v80) != 1)
    {
      sub_233168608((uint64_t)v42, &qword_256042E48);
      sub_233168608((uint64_t)v44, &qword_256042E48);
      v94 = v116;
      sub_233168580(v85, v116, type metadata accessor for BalanceCalculation.CalculationDetails);
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604C650);
      v93 = v123;
      v96 = v123 + *(int *)(v95 + 48);
      sub_233168580(v81, v123, type metadata accessor for BalanceCalculation.CalculationDetails);
      sub_233168580(v94, v96, type metadata accessor for BalanceCalculation.CalculationDetails);
      goto LABEL_37;
    }
    sub_233168500(v81, type metadata accessor for BalanceCalculation.CalculationDetails);
  }
  v86 = (uint64_t)v122;
  sub_233168608(v85, &qword_256042E48);
  sub_233168478((uint64_t)v44, v86, &qword_256042E48);
  if (v83(v86, 1, v80) != 1)
  {
    sub_233168608((uint64_t)v42, &qword_256042E48);
    v92 = v121;
    sub_233168580(v86, v121, type metadata accessor for BalanceCalculation.CalculationDetails);
    v93 = v123;
    sub_233168580(v92, v123, type metadata accessor for BalanceCalculation.CalculationDetails);
LABEL_37:
    v90 = v125;
    v89 = v126;
    v91 = v124;
    swift_storeEnumTagMultiPayload();
    sub_233168580(v93, v89, type metadata accessor for BalanceCalculation);
    v88 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v89, v88, 1, v90);
  }
  sub_233168608(v86, &qword_256042E48);
  v87 = v120;
  sub_233168478((uint64_t)v42, v120, &qword_256042E48);
  if (v83(v87, 1, v80) != 1)
  {
    v97 = v115;
    sub_233168580(v87, v115, type metadata accessor for BalanceCalculation.CalculationDetails);
    v93 = v123;
    sub_233168580(v97, v123, type metadata accessor for BalanceCalculation.CalculationDetails);
    goto LABEL_37;
  }
  sub_233168608(v87, &qword_256042E48);
  v88 = 1;
  v90 = v125;
  v89 = v126;
  v91 = v124;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v89, v88, 1, v90);
}

uint64_t InternalAccountBalance.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_23361D634();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D6A0();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042E50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BalanceCalculation(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v25 - v18;
  BalanceCalculation.init(managedAccountBalance:)(objc_msgSend(a1, sel_publicAccountBalanceObject), (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_233168608((uint64_t)v12, &qword_256042E50);
    result = sub_23361EF24();
    __break(1u);
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v19, type metadata accessor for BalanceCalculation);
    v20 = objc_msgSend(a1, sel_publicAccountBalanceObject);
    v21 = objc_msgSend(v20, "id");

    sub_23361D67C();
    sub_2331684BC((uint64_t)v19, (uint64_t)v17, type metadata accessor for BalanceCalculation);
    v22 = objc_msgSend(a1, sel_lastUpdatedAt);
    sub_23361D5EC();

    sub_233168500((uint64_t)v19, type metadata accessor for BalanceCalculation);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(a2, v9, v26);
    v23 = type metadata accessor for InternalAccountBalance(0);
    sub_233168580((uint64_t)v17, a2 + *(int *)(v23 + 20), type metadata accessor for BalanceCalculation);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(a2 + *(int *)(v23 + 24), v6, v28);
  }
  return result;
}

void ManagedInternalAccountBalance.id.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_publicAccountBalanceObject);
  v2 = objc_msgSend(v1, "id");

  sub_23361D67C();
}

void ManagedInternalAccountBalance.availableAmountCreditDebitIndicator.getter()
{
  sub_233197830((void (*)(void))sub_23319CDA8);
}

void ManagedInternalAccountBalance.bookedAmountCreditDebitIndicator.getter()
{
  sub_233197830((void (*)(void))sub_23319CDBC);
}

void sub_233197830(void (*a1)(void))
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_publicAccountBalanceObject);
  a1();

}

void sub_233197884(id *a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X3>, _BYTE *a3@<X8>)
{
  id v5;
  uint64_t v6;

  v5 = objc_msgSend(*a1, sel_publicAccountBalanceObject);
  a2(&v6);

  *a3 = v6;
}

void sub_2331978E4(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  int v6;
  id v7;
  id v8;
  id v9;

  v6 = *a1;
  v7 = objc_msgSend(*a2, sel_publicAccountBalanceObject);
  if (v6 == 2)
    v8 = 0;
  else
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v6 & 1);
  v9 = v8;
  objc_msgSend(v7, *a5);

}

uint64_t ManagedInternalAccountBalance.availableAmountAsOf.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233197AF0((SEL *)&selRef_availableAmountAsOf, a1);
}

uint64_t ManagedInternalAccountBalance.availableAmountAsOf.setter(uint64_t a1)
{
  return sub_233197DA0(a1, (SEL *)&selRef_setAvailableAmountAsOf_);
}

void (*ManagedInternalAccountBalance.availableAmountAsOf.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  size_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  *v4 = v1;
  v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
  v4[1] = malloc(v5);
  v4[2] = malloc(v5);
  v4[3] = malloc(v5);
  v6 = malloc(v5);
  v4[4] = v6;
  v7 = malloc(v5);
  v4[5] = v7;
  v8 = objc_msgSend(v2, sel_publicAccountBalanceObject);
  v9 = objc_msgSend(v8, sel_availableAmountAsOf);

  if (v9)
  {
    sub_23361D5EC();

    v10 = sub_23361D634();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  else
  {
    v11 = sub_23361D634();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  }
  sub_233168478((uint64_t)v6, (uint64_t)v7, (uint64_t *)&unk_254247DA0);
  return sub_233197AD8;
}

void sub_233197AD8(uint64_t *a1, char a2)
{
  sub_233198008(a1, a2, (SEL *)&selRef_setAvailableAmountAsOf_);
}

uint64_t ManagedInternalAccountBalance.bookedAmountAsOf.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233197AF0((SEL *)&selRef_bookedAmountAsOf, a1);
}

uint64_t sub_233197AF0@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(v2, sel_publicAccountBalanceObject);
  v6 = objc_msgSend(v5, *a1);

  if (v6)
  {
    sub_23361D5EC();

    v7 = sub_23361D634();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  else
  {
    v7 = sub_23361D634();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_233197BA0@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(*a1, sel_publicAccountBalanceObject);
  v6 = objc_msgSend(v5, *a2);

  if (v6)
  {
    sub_23361D5EC();

    v7 = sub_23361D634();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a3;
    v10 = 0;
  }
  else
  {
    v7 = sub_23361D634();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a3;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_233197C50(uint64_t a1, id *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - v12;
  sub_2331686A0(a1, (uint64_t)&v19 - v12, (uint64_t *)&unk_254247DA0);
  v14 = objc_msgSend(*a2, sel_publicAccountBalanceObject);
  sub_2331686A0((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_254247DA0);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) != 1)
  {
    v17 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  objc_msgSend(v14, *a5, v17);

  return sub_233168608((uint64_t)v13, (uint64_t *)&unk_254247DA0);
}

uint64_t ManagedInternalAccountBalance.bookedAmountAsOf.setter(uint64_t a1)
{
  return sub_233197DA0(a1, (SEL *)&selRef_setBookedAmountAsOf_);
}

uint64_t sub_233197DA0(uint64_t a1, SEL *a2)
{
  void *v2;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v4 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v4, sel_publicAccountBalanceObject);
  sub_2331686A0(a1, (uint64_t)v8, (uint64_t *)&unk_254247DA0);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    v12 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  objc_msgSend(v9, *a2, v12);

  return sub_233168608(a1, (uint64_t *)&unk_254247DA0);
}

void (*ManagedInternalAccountBalance.bookedAmountAsOf.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  size_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  *v4 = v1;
  v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8) + 64);
  v4[1] = malloc(v5);
  v4[2] = malloc(v5);
  v4[3] = malloc(v5);
  v6 = malloc(v5);
  v4[4] = v6;
  v7 = malloc(v5);
  v4[5] = v7;
  v8 = objc_msgSend(v2, sel_publicAccountBalanceObject);
  v9 = objc_msgSend(v8, sel_bookedAmountAsOf);

  if (v9)
  {
    sub_23361D5EC();

    v10 = sub_23361D634();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  else
  {
    v11 = sub_23361D634();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  }
  sub_233168478((uint64_t)v6, (uint64_t)v7, (uint64_t *)&unk_254247DA0);
  return sub_233197FFC;
}

void sub_233197FFC(uint64_t *a1, char a2)
{
  sub_233198008(a1, a2, (SEL *)&selRef_setBookedAmountAsOf_);
}

void sub_233198008(uint64_t *a1, char a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 40);
  if ((a2 & 1) != 0)
  {
    v7 = *(_QWORD *)(v4 + 8);
    v6 = *(_QWORD *)(v4 + 16);
    v8 = *(id *)v4;
    sub_2331686A0(*(_QWORD *)(*a1 + 40), v6, (uint64_t *)&unk_254247DA0);
    v9 = objc_msgSend(v8, sel_publicAccountBalanceObject);
    sub_2331686A0(v6, v7, (uint64_t *)&unk_254247DA0);
    v10 = sub_23361D634();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
    {
      v13 = *(_QWORD *)(v4 + 8);
      v12 = (void *)sub_23361D5B0();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
    }
    v15 = *(void **)(v4 + 32);
    v14 = *(void **)(v4 + 40);
    v17 = *(void **)(v4 + 16);
    v16 = *(void **)(v4 + 24);
    v18 = *(void **)(v4 + 8);
    objc_msgSend(v9, *a3, v12);

    sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v19 = *(_QWORD *)(v4 + 24);
    v20 = objc_msgSend(*(id *)v4, sel_publicAccountBalanceObject);
    sub_2331686A0(v5, v19, (uint64_t *)&unk_254247DA0);
    v21 = sub_23361D634();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) != 1)
    {
      v24 = *(_QWORD *)(v4 + 24);
      v23 = (void *)sub_23361D5B0();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
    }
    v15 = *(void **)(v4 + 32);
    v14 = *(void **)(v4 + 40);
    v17 = *(void **)(v4 + 16);
    v16 = *(void **)(v4 + 24);
    v18 = *(void **)(v4 + 8);
    objc_msgSend(v20, *a3, v23);

  }
  sub_233168608((uint64_t)v14, (uint64_t *)&unk_254247DA0);
  free(v14);
  free(v15);
  free(v16);
  free(v17);
  free(v18);
  free((void *)v4);
}

void ManagedInternalAccountBalance.availableAmount.getter(_QWORD *a1@<X8>)
{
  sub_233198218((SEL *)&selRef_availableAmountValue, a1);
}

void ManagedInternalAccountBalance.bookedAmount.getter(_QWORD *a1@<X8>)
{
  sub_233198218((SEL *)&selRef_bookedAmountValue, a1);
}

void sub_233198218(SEL *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;

  v5 = objc_msgSend(v2, sel_publicAccountBalanceObject);
  v6 = objc_msgSend(v5, *a1);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_decimalValue);
    v8 = v17;
    v9 = v16;
    v10 = v15;
    v11 = objc_msgSend(v5, sel_currency);
    v12 = sub_23361E150();
    v14 = v13;

  }
  else
  {

    v10 = 0;
    v9 = 0;
    v8 = 0;
    v12 = 0;
    v14 = 0;
  }
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v8;
  a2[3] = v12;
  a2[4] = v14;
}

id static ManagedInternalAccountBalance.fetchRequest(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  void *ObjCClassFromMetadata;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  objc_super v19;

  v1 = *a1;
  v2 = a1[1];
  v3 = (void *)a1[2];
  v4 = a1[3];
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v19.receiver = ObjCClassFromMetadata;
  v19.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  v6 = objc_msgSendSuper2(&v19, sel_fetchRequest);
  v7 = (void *)sub_23361E3D8();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v7);

  if (v3 != (void *)1)
  {
    if ((v2 & 1) != 0)
      v8 = 0;
    else
      v8 = v1;
    swift_bridgeObjectRetain();
    v9 = v3;
    objc_msgSend(v6, sel_setFetchLimit_, v8);
    if (v3)
    {
      v10 = qword_256041B88;
      v11 = v9;
      if (v10 != -1)
        swift_once();
      v12 = swift_bridgeObjectRetain();
      v13 = sub_2333B13C8(v12);
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setPredicate_, v13);

    }
    if (v4)
    {
      v14 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
      v15 = objc_msgSend(v14, sel_attributesByName);

      sub_233168668(0, &qword_256042E58);
      v16 = sub_23361E06C();

      swift_bridgeObjectRetain();
      sub_233198A44(v4, v16);
      swift_bridgeObjectRelease();
      sub_233168668(0, (unint64_t *)&qword_2560446E0);
      v17 = (void *)sub_23361E3D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setSortDescriptors_, v17);
      swift_bridgeObjectRelease();

    }
    sub_233198E64(v1, v2, v3);
  }
  return v6;
}

void sub_233198564()
{
  off_256042E38 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

uint64_t static ManagedInternalAccountBalance.attributeNamesByKeyPath.getter()
{
  if (qword_256041B88 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331985B8()
{
  if (qword_256041B88 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

id sub_2331985F8(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v28;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v18 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  v19 = objc_msgSend(a1, sel_lastUpdated);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_5;
  }
  v20 = v19;
  sub_23361D5EC();

  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v10, v15, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_5:
    sub_23361D5F8();
    sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
    goto LABEL_6;
  }
  v21(v17, v10, v11);
LABEL_6:
  v22 = (void *)sub_23361D5B0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  objc_msgSend(v18, sel_setLastUpdatedAt_, v22);

  type metadata accessor for ManagedAccountBalance();
  v23 = a1;
  v24 = a2;
  v25 = a3;
  v26 = (void *)sub_23319CF78(v23, v24, v25);
  objc_msgSend(v18, sel_setPublicAccountBalanceObject_, v26);

  return v18;
}

unint64_t static ManagedInternalAccountBalance.entityName.getter()
{
  return 0xD000000000000016;
}

void sub_23319885C()
{
  qword_256042E40 = MEMORY[0x24BEE4B00];
}

uint64_t static ManagedInternalAccountBalance.mappedKeyPaths.getter()
{
  if (qword_256041B90 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ManagedInternalAccountBalance.mappedKeyPaths.setter(uint64_t a1)
{
  if (qword_256041B90 != -1)
    swift_once();
  swift_beginAccess();
  qword_256042E40 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ManagedInternalAccountBalance.mappedKeyPaths.modify())()
{
  if (qword_256041B90 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_2331989BC()
{
  return 0xD000000000000016;
}

uint64_t sub_2331989D8()
{
  if (qword_256041B90 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_233198A44(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v20 = a2;
      for (i = 4; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x234933120](i - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * i);
        v7 = v6;
        v8 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v9 = objc_msgSend(v6, sel_key);
        if (!v9)
          goto LABEL_20;
        v10 = v9;
        v11 = sub_23361E150();
        v13 = v12;

        if (*(_QWORD *)(a2 + 16))
        {
          sub_2331E3D18(v11, v13);
          if ((v14 & 1) != 0)
            break;
        }
        if (qword_256041B88 != -1)
          swift_once();
        if (*((_QWORD *)off_256042E38 + 2))
        {
          swift_bridgeObjectRetain();
          sub_2331E3D18(v11, v13);
          if ((v15 & 1) != 0)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v16 = objc_msgSend(v7, sel_ascending);
            v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
            v18 = (void *)sub_23361E12C();
            swift_bridgeObjectRelease();
            objc_msgSend(v17, sel_initWithKey_ascending_, v18, v16);

            a2 = v20;
            swift_bridgeObjectRelease();

            goto LABEL_20;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        swift_bridgeObjectRelease();
LABEL_6:
        if (v8 == v4)
        {
          swift_bridgeObjectRelease();
          return v21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

id sub_233198D0C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *, id, id))
{
  objc_class *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;

  v13 = a5(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - v14;
  v16 = objc_msgSend(objc_allocWithZone(v6), sel_initWithContext_, a4);
  v17 = (void *)sub_23361D5B0();
  objc_msgSend(v16, sel_setLastUpdatedAt_, v17);

  type metadata accessor for ManagedAccountBalance();
  sub_2331684BC(a1, (uint64_t)v15, a5);
  v18 = a2;
  v19 = a4;
  v20 = (void *)a6(v15, v18, v19);

  objc_msgSend(v16, sel_setPublicAccountBalanceObject_, v20);
  v21 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a3, v21);
  sub_233168500(a1, a5);
  return v16;
}

uint64_t sub_233198E64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;

  if (a3 != (void *)1)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

char *keypath_get_selector_lastUpdatedAt()
{
  return sel_lastUpdatedAt;
}

char *keypath_get_selector_publicAccountBalanceObject()
{
  return sel_publicAccountBalanceObject;
}

id sub_233198EB4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_publicAccountBalanceObject);
  *a2 = result;
  return result;
}

id sub_233198EEC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPublicAccountBalanceObject_, *a1);
}

void sub_233198F00(id *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_233197884(a1, (void (*)(uint64_t *__return_ptr))sub_23319CDA8, a2);
}

void sub_233198F1C(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  sub_2331978E4(a1, a2, a3, a4, (SEL *)&selRef_setAvailableAmountCreditDebitIndicatorValue_);
}

void sub_233198F38(id *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_233197884(a1, (void (*)(uint64_t *__return_ptr))sub_23319CDBC, a2);
}

void sub_233198F54(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  sub_2331978E4(a1, a2, a3, a4, (SEL *)&selRef_setBookedAmountCreditDebitIndicatorValue_);
}

uint64_t sub_233198F70@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233197BA0(a1, (SEL *)&selRef_availableAmountAsOf, a2);
}

uint64_t sub_233198F8C(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_233197C50(a1, a2, a3, a4, (SEL *)&selRef_setAvailableAmountAsOf_);
}

uint64_t sub_233198FA8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233197BA0(a1, (SEL *)&selRef_bookedAmountAsOf, a2);
}

uint64_t sub_233198FC4(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_233197C50(a1, a2, a3, a4, (SEL *)&selRef_setBookedAmountAsOf_);
}

uint64_t type metadata accessor for ManagedInternalAccountBalance()
{
  return objc_opt_self();
}

id InternalAccountBalanceResult.token.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t InternalAccountBalanceResult.accountBalances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FinanceStore.internalAccountBalances(for:since:isMonitoring:)(uint64_t a1, void **a2, char a3)
{
  uint64_t v3;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  _QWORD v10[5];
  void *v11;

  v6 = *a2;
  static DeviceInfo.deviceType.getter((char *)v10);
  if (LOBYTE(v10[0]))
  {
    sub_23316853C();
    swift_allocError();
    *v7 = 3;
    swift_willThrow();
  }
  else
  {
    v11 = v6;
    v10[3] = type metadata accessor for FinanceStore();
    v10[4] = &off_250487D20;
    v10[0] = v3;
    swift_retain();
    sub_23329E3C4(a1, &v11, a3 & 1, (uint64_t)v10);
    v3 = v8;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  return v3;
}

uint64_t FinanceStore.internalAccountBalances(with:sortDescriptors:limit:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + 73) = a7;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 56) = v7;
  *(_BYTE *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_233199120()
{
  uint64_t v0;
  _BYTE *v1;
  char v3;
  char v4;
  _QWORD *v5;
  char v6[9];

  static DeviceInfo.deviceType.getter(v6);
  if (v6[0])
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_BYTE *)(v0 + 73) & 1;
    v4 = *(_BYTE *)(v0 + 72) & 1;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_2331991F4;
    return sub_23329E634(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v4, *(_QWORD *)(v0 + 48), v3);
  }
}

uint64_t sub_2331991F4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *initializeBufferWithCopyOfBuffer for InternalAccountBalanceResult(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for InternalAccountBalanceResult(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for InternalAccountBalanceResult(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for InternalAccountBalanceResult(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalAccountBalanceResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalAccountBalanceResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountBalanceResult()
{
  return &type metadata for InternalAccountBalanceResult;
}

uint64_t ManagedMapsBrandImporter.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ManagedMapsBrandImporter.init()()
{
  uint64_t v0;

  return v0;
}

id ManagedMapsBrandImporter.addOrUpdateBrand(_:in:)(uint64_t *a1, void *a2)
{
  return sub_233199408(a1, a2);
}

uint64_t ManagedMapsBrandImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedMapsBrandImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_233199408(uint64_t *a1, id a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD v18[2];

  v5 = type metadata accessor for MapsBrand();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for ManagedMapsBrand();
  v12 = (void *)static ManagedMapsBrand.brand(withMUID:in:)(*a1, (uint64_t)a2);
  if (!v2)
  {
    if (v12)
    {
      a2 = v12;
      sub_2335DDFD4((uint64_t)a1, a2);
      sub_233199624((uint64_t)a1 + *(int *)(v5 + 64), (uint64_t)v10);
      v13 = sub_23361D340();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
      {
        v15 = (id)sub_23361D268();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
      }
      objc_msgSend(a2, sel_setLogoURL_, v15);

    }
    else
    {
      sub_2331995E0((uint64_t)a1, (uint64_t)v7);
      v16 = objc_allocWithZone(v11);
      v15 = a2;
      a2 = sub_2335DE548((uint64_t)v7, v15);
    }

  }
  return a2;
}

uint64_t type metadata accessor for ManagedMapsBrandImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedMapsBrandImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedMapsBrandImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_2331995E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapsBrand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233199624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FinanceStore.insights(transactionID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_233199684()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v3;
  char v4[9];

  static DeviceInfo.deviceType.getter(v4);
  if (v4[0])
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v3;
    *v3 = v0;
    v3[1] = sub_233199738;
    return sub_23329EC6C(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_233199738(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23319978C(uint64_t a1)
{
  return sub_233199844(a1, (uint64_t (*)(uint64_t))sub_2334F28D4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_2334F23C8);
}

uint64_t sub_2331997A0(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_233398654(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_2334F2960(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_23319981C(uint64_t a1)
{
  return sub_233199844(a1, sub_2334F28D4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_2334F28A8);
}

uint64_t sub_233199830(uint64_t a1)
{
  return sub_233199844(a1, sub_2334F28D4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_2334F28B4);
}

uint64_t sub_233199844(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;

  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = sub_23361EC9C();
    v8 = v7;
    v9 = sub_23361ED20();
    v11 = MEMORY[0x234933024](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_3:
      sub_233193A50(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    v12 = a3(v6, v8, v5 != 0, a1);
    sub_233193A50(v6, v8, v5 != 0);
    return v12;
  }
  result = a2(a1);
  if ((v15 & 1) == 0)
  {
    v8 = v14;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v14)
    {
      v6 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ContentPackageError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2331999DC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ContentPackageManifestValidator.validate(_:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = swift_bridgeObjectRetain();
  v31 = sub_2331C89E8(v4);
  v5 = *(os_unfair_lock_s **)(a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v6 = a2 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v7 = v5 + 4;
  v8 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_23319A0E0(v7, v6, (uint64_t (*)(_QWORD))sub_23319B4D4);
  os_unfair_lock_unlock(v8);
  if (v2)
    return swift_bridgeObjectRelease();
  v9 = swift_bridgeObjectRetain();
  result = sub_23319B03C(v9);
  v11 = result;
  v12 = 0;
  v13 = 1 << *(_BYTE *)(result + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = result + 56;
  v16 = v14 & *(_QWORD *)(result + 56);
  v17 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v12 << 6);
      goto LABEL_6;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    if (v23 >= v17)
      goto LABEL_22;
    v24 = *(_QWORD *)(v15 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v17)
        goto LABEL_22;
      v24 = *(_QWORD *)(v15 + 8 * v12);
      if (!v24)
      {
        v12 = v23 + 2;
        if (v23 + 2 >= v17)
          goto LABEL_22;
        v24 = *(_QWORD *)(v15 + 8 * v12);
        if (!v24)
          break;
      }
    }
LABEL_21:
    v16 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_6:
    v20 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_23319AA70(v21, v22);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v25 = v23 + 3;
  if (v25 < v17)
  {
    v24 = *(_QWORD *)(v15 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        v12 = v25 + 1;
        if (__OFADD__(v25, 1))
          goto LABEL_26;
        if (v12 >= v17)
          goto LABEL_22;
        v24 = *(_QWORD *)(v15 + 8 * v12);
        ++v25;
        if (v24)
          goto LABEL_21;
      }
    }
    v12 = v25;
    goto LABEL_21;
  }
LABEL_22:
  swift_release();
  v26 = sub_2331997A0(v31);
  if (v27)
  {
    v28 = v26;
    v29 = v27;
    sub_23319B4F0();
    swift_allocError();
    *v30 = 0xD00000000000002BLL;
    v30[1] = 0x800000023366AF60;
    v30[2] = v28;
    v30[3] = v29;
    swift_willThrow();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_233199CCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v23[2];

  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v23 - v12;
  if (a1)
  {
    v14 = a1;
    v15 = objc_msgSend(v14, sel_bundleURL);
    sub_23361D2D4();

    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    type metadata accessor for ContentPackageHashesEnumerator();
    v16 = swift_allocObject();
    v17 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + OBJC_IVAR____TtC10FinanceKit30ContentPackageHashesEnumerator_bundleURL, v11, v7);
    MEMORY[0x24BDAC7A8](v17);
    v23[-2] = a3;
    v23[-1] = a4;
    ContentPackageHashesEnumerator.enumerateHashes(loadFilesInChunks:filesPredicate:body:)(1, (uint64_t (*)(char *))j___s10FinanceKit30ContentPackageHashesEnumeratorC29fileShouldBePresentInManifestySb6System8FilePathVFZ_0, 0, (void (*)(char *, id, uint64_t))sub_23319B580, (uint64_t)&v23[-4]);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);

    return swift_release();
  }
  else
  {
    v19 = sub_23361D304();
    v21 = v20;
    sub_23319B4F0();
    swift_allocError();
    *v22 = 0xD00000000000002ELL;
    v22[1] = 0x800000023366AF90;
    v22[2] = v19;
    v22[3] = v21;
    return swift_willThrow();
  }
}

uint64_t sub_233199EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  _QWORD *v17;
  unint64_t v18;

  v7 = sub_23361DD18();
  v9 = v8;
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v10 = sub_2331E3D18(v7, v9);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23319B4F0();
    swift_allocError();
    *v17 = 0xD000000000000027;
    v18 = 0x800000023366AFC0;
    goto LABEL_11;
  }
  v12 = (uint64_t *)(*(_QWORD *)(a4 + 56) + 16 * v10);
  v14 = *v12;
  v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v14 == a2 && v13 == a3;
  if (v15 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_23319AA70(v7, v9);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_23361ED98();
  sub_23361E27C();
  sub_23361E27C();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  v18 = 0xE000000000000000;
  sub_23319B4F0();
  swift_allocError();
  *v17 = 0;
LABEL_11:
  v17[1] = v18;
  v17[2] = v7;
  v17[3] = v9;
  return swift_willThrow();
}

uint64_t sub_23319A0E0(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v20[2];
  uint8_t *v21;
  uint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;

  v7 = sub_23361D340();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    v25 = a3;
    if (qword_254246760 != -1)
      swift_once();
    v11 = sub_23361DB80();
    __swift_project_value_buffer(v11, (uint64_t)qword_254246748);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    v12 = sub_23361DB68();
    v13 = sub_23361E768();
    if (os_log_type_enabled(v12, v13))
    {
      v23 = v12;
      v14 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v27 = v22;
      v24 = v3;
      *(_DWORD *)v14 = 136315138;
      v20[1] = v14 + 4;
      v21 = v14;
      sub_233167C58((unint64_t *)&qword_256042F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v15 = sub_23361F1D0();
      v26 = sub_233164DCC(v15, v16, &v27);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v12 = v23;
      v17 = v21;
      _os_log_impl(&dword_233151000, v23, v13, "Reading already closed bundle at %s", v21, 0xCu);
      v18 = v22;
      swift_arrayDestroy();
      MEMORY[0x234934590](v18, -1, -1);
      MEMORY[0x234934590](v17, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }

    a3 = v25;
  }
  return a3(*a1);
}

uint64_t sub_23319A344(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return sub_23319A0E0(a1, a2, a3);
}

_QWORD *sub_23319A358(_QWORD *a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  os_log_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *result;
  _QWORD v22[2];
  uint8_t *v23;
  uint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v8 = sub_23361D340();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    v26 = v3;
    if (qword_254246760 != -1)
      swift_once();
    v12 = sub_23361DB80();
    __swift_project_value_buffer(v12, (uint64_t)qword_254246748);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    v13 = sub_23361DB68();
    v14 = sub_23361E768();
    if (os_log_type_enabled(v13, v14))
    {
      v25 = v13;
      v15 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v28 = v24;
      v23 = v15;
      *(_DWORD *)v15 = 136315138;
      v22[1] = v15 + 4;
      sub_233167C58((unint64_t *)&qword_256042F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v16 = sub_23361F1D0();
      v27 = sub_233164DCC(v16, v17, &v28);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v18 = v25;
      v19 = v23;
      _os_log_impl(&dword_233151000, v25, v14, "Reading already closed bundle at %s", v23, 0xCu);
      v20 = v24;
      swift_arrayDestroy();
      MEMORY[0x234934590](v20, -1, -1);
      MEMORY[0x234934590](v19, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    }
    v4 = v26;
  }
  result = a3(&v29, *a1);
  if (!v4)
    return (_QWORD *)v29;
  return result;
}

uint64_t sub_23319A5C4(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  os_log_t v18;
  uint8_t *v19;
  uint64_t v20;
  char v21;
  _QWORD v23[2];
  uint8_t *v24;
  uint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  v8 = sub_23361D340();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    v27 = v3;
    if (qword_254246760 != -1)
      swift_once();
    v12 = sub_23361DB80();
    __swift_project_value_buffer(v12, (uint64_t)qword_254246748);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    v13 = sub_23361DB68();
    v14 = sub_23361E768();
    if (os_log_type_enabled(v13, v14))
    {
      v26 = v13;
      v15 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v29 = v25;
      v24 = v15;
      *(_DWORD *)v15 = 136315138;
      v23[1] = v15 + 4;
      sub_233167C58((unint64_t *)&qword_256042F10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v16 = sub_23361F1D0();
      v28 = sub_233164DCC(v16, v17, &v29);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v18 = v26;
      v19 = v24;
      _os_log_impl(&dword_233151000, v26, v14, "Reading already closed bundle at %s", v24, 0xCu);
      v20 = v25;
      swift_arrayDestroy();
      MEMORY[0x234934590](v20, -1, -1);
      MEMORY[0x234934590](v19, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    }
    v4 = v27;
  }
  a3(&v30, *a1);
  if (!v4)
    v21 = v30;
  return v21 & 1;
}

uint64_t sub_23319A834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_233167C58(&qword_25604DB90, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_23361E084();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_233167C58(&qword_2560568E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2334A7188();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_23319ABFC(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_23319AA70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  v6 = sub_23361F3A4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_23361F224() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_23361F224() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2334A73C0();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_23319AE78(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23319ABFC(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_23361D6A0();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_23361EC78();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_23361E084();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

unint64_t sub_23319AE78(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23361EC78();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23361F350();
        swift_bridgeObjectRetain();
        sub_23361E0A8();
        v10 = sub_23361F3A4();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23319B03C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_23319B198((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_23319B198((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x234934590](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_23319B198(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v24 = a2;
  v25 = a1;
  v4 = sub_23361D340();
  v29 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = a3;
  v10 = *(_QWORD *)(a3 + 56);
  v26 = 0;
  v27 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v28 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v8 << 6);
LABEL_21:
    swift_bridgeObjectRetain();
    sub_23361D250();
    v20 = sub_23361D25C();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v4);
    if (v20 == 0x726F74535F53442ELL && v22 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    v14 = sub_23361F224();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
LABEL_24:
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_27:
        swift_retain();
        return sub_2334F19C4(v25, v24, v26, v9);
      }
    }
  }
  v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v17 >= v28)
    goto LABEL_27;
  v18 = *(_QWORD *)(v27 + 8 * v17);
  ++v8;
  if (v18)
    goto LABEL_20;
  v8 = v17 + 1;
  if (v17 + 1 >= v28)
    goto LABEL_27;
  v18 = *(_QWORD *)(v27 + 8 * v8);
  if (v18)
    goto LABEL_20;
  v8 = v17 + 2;
  if (v17 + 2 >= v28)
    goto LABEL_27;
  v18 = *(_QWORD *)(v27 + 8 * v8);
  if (v18)
  {
LABEL_20:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v8 << 6);
    goto LABEL_21;
  }
  v19 = v17 + 3;
  if (v19 >= v28)
    goto LABEL_27;
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v28)
      goto LABEL_27;
    v18 = *(_QWORD *)(v27 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

BOOL _s10FinanceKit19ContentPackageErrorO2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  result = 0;
  if (v6 || (sub_23361F224() & 1) != 0)
  {
    v7 = v2 == v4 && v3 == v5;
    if (v7 || (sub_23361F224() & 1) != 0)
      return 1;
  }
  return result;
}

uint64_t sub_23319B4D4(void *a1)
{
  uint64_t *v1;

  return sub_233199CCC(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_23319B4F0()
{
  unint64_t result;

  result = qword_256042F08;
  if (!qword_256042F08)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ContentPackageError, &type metadata for ContentPackageError);
    atomic_store(result, (unint64_t *)&qword_256042F08);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentPackageError()
{
  return &type metadata for ContentPackageError;
}

ValueMetadata *type metadata accessor for ContentPackageError.Context()
{
  return &type metadata for ContentPackageError.Context;
}

ValueMetadata *type metadata accessor for ContentPackageManifestValidator()
{
  return &type metadata for ContentPackageManifestValidator;
}

uint64_t sub_23319B580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_233199EC8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

BOOL static WalletFeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WalletFeatureFlag.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t WalletFeatureFlag.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

const char *sub_23319B618()
{
  return "Wallet";
}

uint64_t sub_23319B62C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_23319B654 + 4
                                                                                * asc_233626720[*v0]))("BankConnectShowCreditPaymentDetails", 35);
}

const char *sub_23319B654()
{
  return "BankConnectShowCreditPaymentOverdueDetails";
}

const char *sub_23319B668()
{
  return "BankConnectPushNotifications";
}

const char *sub_23319B67C()
{
  return "BankConnectShowWidget";
}

_BYTE *sub_23319B690@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23319B69C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

Swift::Bool __swiftcall isWalletFeatureEnabled(_:)(FinanceKit::WalletFeatureFlag a1)
{
  char v1;
  uint64_t v2;
  Class v3;
  _BYTE v5[24];
  ValueMetadata *v6;
  unint64_t v7;

  v1 = *(_BYTE *)a1;
  v2 = sub_23361E12C();
  v3 = NSClassFromString((NSString *)v2);

  v6 = &type metadata for FeatureFlag;
  v7 = sub_23319B734();
  v5[0] = v1;
  LOBYTE(v2) = sub_23361D988();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  return v2 & 1 | (v3 != 0);
}

unint64_t sub_23319B734()
{
  unint64_t result;

  result = qword_254248118;
  if (!qword_254248118)
  {
    result = MEMORY[0x234934494](&unk_233626808, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_254248118);
  }
  return result;
}

unint64_t sub_23319B77C()
{
  unint64_t result;

  result = qword_256042F18;
  if (!qword_256042F18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for WalletFeatureFlag, &type metadata for WalletFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256042F18);
  }
  return result;
}

ValueMetadata *type metadata accessor for WalletFeatureFlag()
{
  return &type metadata for WalletFeatureFlag;
}

uint64_t getEnumTagSinglePayload for AccountStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10FinanceKit17WalletFeatureFlagOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23319B8B4 + 4 * byte_233626729[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23319B8E8 + 4 * byte_233626724[v4]))();
}

uint64_t sub_23319B8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23319B8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23319B8F8);
  return result;
}

uint64_t sub_23319B904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23319B90CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23319B910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23319B918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

FinanceKit::SaveOrderUIInfoKeys_optional __swiftcall SaveOrderUIInfoKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FinanceKit::SaveOrderUIInfoKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SaveOrderUIInfoKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 1635017060;
}

uint64_t sub_23319B9CC(char *a1, char *a2)
{
  return sub_233226FC4(*a1, *a2);
}

unint64_t sub_23319B9DC()
{
  unint64_t result;

  result = qword_256042F20;
  if (!qword_256042F20)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SaveOrderUIInfoKeys, &type metadata for SaveOrderUIInfoKeys);
    atomic_store(result, (unint64_t *)&qword_256042F20);
  }
  return result;
}

uint64_t sub_23319BA20()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23319BA9C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23319BAF4()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::SaveOrderUIInfoKeys_optional sub_23319BB6C(Swift::String *a1)
{
  return SaveOrderUIInfoKeys.init(rawValue:)(*a1);
}

void sub_23319BB78(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (*v1)
    v2 = 0xD000000000000011;
  v3 = 0x8000000233668890;
  if (!*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for SaveOrderUIInfoKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23319BC00 + 4 * byte_233626845[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23319BC34 + 4 * byte_233626840[v4]))();
}

uint64_t sub_23319BC34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23319BC3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23319BC44);
  return result;
}

uint64_t sub_23319BC50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23319BC58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23319BC5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23319BC64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SaveOrderUIInfoKeys()
{
  return &type metadata for SaveOrderUIInfoKeys;
}

uint64_t SupportedAuthTypes.rawValue.getter()
{
  unsigned __int16 *v0;

  return *v0;
}

uint64_t SupportedAuthTypes.rawValue.setter(uint64_t result)
{
  _WORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SupportedAuthTypes.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t SupportedAuthTypes.init(rawValue:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static SupportedAuthTypes.appExtension.getter(_WORD *a1@<X8>)
{
  *a1 = 1;
}

void static SupportedAuthTypes.oauthApp.getter(_WORD *a1@<X8>)
{
  *a1 = 2;
}

void static SupportedAuthTypes.oauthWeb.getter(_WORD *a1@<X8>)
{
  *a1 = 4;
}

void sub_23319BCCC()
{
  word_256042F28 = 7;
}

uint64_t static SupportedAuthTypes.allTypes.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result;

  if (qword_256041B98 != -1)
    result = swift_once();
  *a1 = word_256042F28;
  return result;
}

uint64_t SupportedAuthTypes.debugDescription.getter()
{
  __int16 *v0;
  __int16 v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v1 = *v0;
  if ((*v0 & 1) == 0)
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_2334A4AA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_2334A4AA4((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = (char *)&v2[2 * v4];
  strcpy(v5 + 32, "appExtension");
  v5[45] = 0;
  *((_WORD *)v5 + 23) = -5120;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2334A4AA4(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_2334A4AA4((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0x707041687475616FLL;
    v8[5] = 0xE800000000000000;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2334A4AA4(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_2334A4AA4((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 0x626557687475616FLL;
    v11[5] = 0xE800000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23319C29C();
  sub_23361E0D8();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 91;
}

_WORD *sub_23319BF80@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23319BF8C()
{
  sub_23319C2F0();
  return sub_23361E3A8();
}

uint64_t sub_23319BFE8()
{
  sub_23319C2F0();
  return sub_23361E36C();
}

uint64_t sub_23319C034()
{
  sub_23361F350();
  sub_23361F374();
  return sub_23361F3A4();
}

uint64_t sub_23319C078()
{
  return sub_23361F374();
}

uint64_t sub_23319C0A0()
{
  sub_23361F350();
  sub_23361F374();
  return sub_23361F3A4();
}

void sub_23319C0E0(_WORD *a1@<X8>)
{
  *a1 = 0;
}

_WORD *sub_23319C0E8@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_WORD *sub_23319C0FC@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_WORD *sub_23319C110@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23319C124(_WORD *a1, unsigned __int16 *a2)
{
  _WORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = (unsigned __int16)*v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int16 *sub_23319C154@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  _WORD *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = (unsigned __int16)*v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_WORD)v3;
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v5 == 0;
  return result;
}

unsigned __int16 *sub_23319C180@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  _WORD *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = (unsigned __int16)*v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v5 == 0;
  return result;
}

_WORD *sub_23319C1A4(_WORD *result)
{
  _WORD *v1;

  *v1 |= *result;
  return result;
}

_WORD *sub_23319C1B8(_WORD *result)
{
  _WORD *v1;

  *v1 &= *result;
  return result;
}

_WORD *sub_23319C1CC(_WORD *result)
{
  _WORD *v1;

  *v1 ^= *result;
  return result;
}

_WORD *sub_23319C1E0@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  _WORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23319C1F4(unsigned __int16 *a1)
{
  unsigned __int16 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23319C208(_WORD *a1)
{
  _WORD *v1;

  return (unsigned __int16)(*v1 & *a1) == 0;
}

BOOL sub_23319C21C(unsigned __int16 *a1)
{
  unsigned __int16 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23319C230()
{
  _WORD *v0;

  return *v0 == 0;
}

uint64_t sub_23319C240()
{
  return sub_23361EC60();
}

_WORD *sub_23319C258(_WORD *result)
{
  _WORD *v1;

  *v1 &= ~*result;
  return result;
}

_WORD *sub_23319C26C@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

void sub_23319C27C(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

BOOL sub_23319C288(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_23319C29C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560512B0;
  if (!qword_2560512B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246588);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2560512B0);
  }
  return result;
}

unint64_t sub_23319C2F0()
{
  unint64_t result;

  result = qword_256042F30;
  if (!qword_256042F30)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SupportedAuthTypes, &type metadata for SupportedAuthTypes);
    atomic_store(result, (unint64_t *)&qword_256042F30);
  }
  return result;
}

unint64_t sub_23319C338()
{
  unint64_t result;

  result = qword_256042F38;
  if (!qword_256042F38)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SupportedAuthTypes, &type metadata for SupportedAuthTypes);
    atomic_store(result, (unint64_t *)&qword_256042F38);
  }
  return result;
}

unint64_t sub_23319C380()
{
  unint64_t result;

  result = qword_256042F40;
  if (!qword_256042F40)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SupportedAuthTypes, &type metadata for SupportedAuthTypes);
    atomic_store(result, (unint64_t *)&qword_256042F40);
  }
  return result;
}

unint64_t sub_23319C3C8()
{
  unint64_t result;

  result = qword_256042F48;
  if (!qword_256042F48)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SupportedAuthTypes, &type metadata for SupportedAuthTypes);
    atomic_store(result, (unint64_t *)&qword_256042F48);
  }
  return result;
}

ValueMetadata *type metadata accessor for SupportedAuthTypes()
{
  return &type metadata for SupportedAuthTypes;
}

void sub_23319C420(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_data);
  v4 = sub_23361D3C4();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_23319C474(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_mimeType);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_23319C4D8(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setMimeType_);

}

id ManagedOrderReceipt.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReceipt.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOrderReceipt.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedOrderReceipt.__allocating_init(data:name:mimeType:localizationName:context:)(uint64_t a1, unint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7, uint64_t a8, void *a9)
{
  objc_class *v9;
  objc_class *v10;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v10 = v9;
  v15 = objc_msgSend(objc_allocWithZone(v10), sel_initWithContext_, a9);
  v16 = (void *)sub_23361D3AC();
  objc_msgSend(v15, sel_setData_, v16);

  v17 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setName_, v17);

  if (a6)
  {
    v18 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v15, sel_setMimeType_, v18);

  if (a8)
  {
    v19 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v15, sel_setLocalizationName_, v19);

  sub_23316BEA4(a1, a2);
  return v15;
}

id ManagedOrderReceipt.__allocating_init(name:url:localizationName:context:)(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t inited;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a4;
  v42 = a6;
  v10 = sub_23361CE00();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042F50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23361D340();
  v18 = *(_QWORD *)(v17 - 8);
  v43 = v17;
  v44 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v19 = sub_23361D358();
  v34 = v16;
  v35 = v11;
  v36 = v10;
  v37 = v20;
  v38 = v19;
  v39 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042F58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v22 = (void *)*MEMORY[0x24BDBCBE8];
  v41 = a3;
  *(_QWORD *)(inited + 32) = v22;
  v23 = v22;
  sub_2333EFA00(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_23361D244();
  swift_bridgeObjectRelease();
  v24 = (uint64_t)v34;
  sub_23361CDE8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  v25 = sub_23361DACC();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_23319CC30(v24);
    v27 = 0;
    v28 = 0;
  }
  else
  {
    v27 = sub_23361DA84();
    v28 = v29;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  v30 = v41;
  v31 = ManagedOrderReceipt.__allocating_init(data:name:mimeType:localizationName:context:)(v38, v37, a1, a2, v27, v28, v40, v39, v42);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v43);
  return v31;
}

uint64_t sub_23319CC30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042F50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *keypath_get_selector_data()
{
  return sel_data;
}

void sub_23319CC80(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D3AC();
  objc_msgSend(v2, sel_setData_, v3);

}

char *keypath_get_selector_name()
{
  return sel_name;
}

char *keypath_get_selector_mimeType()
{
  return sel_mimeType;
}

char *keypath_get_selector_localizationName()
{
  return sel_localizationName;
}

uint64_t type metadata accessor for ManagedOrderReceipt()
{
  return objc_opt_self();
}

id ManagedAccountBalance.__allocating_init(_:account:context:)(uint64_t a1, void *a2, void *a3)
{
  id v5;

  v5 = sub_23319E070(a1, a2, (uint64_t)a3);

  return v5;
}

{
  id v5;

  v5 = sub_23319E6C8(a1, a2, (uint64_t)a3);

  return v5;
}

void sub_23319CDA8(char *a1@<X8>)
{
  sub_23319CDD0((SEL *)&selRef_availableAmountCreditDebitIndicatorValue, "Unexpected raw value for available CreditDebitIndicator: %hd.", a1);
}

void sub_23319CDBC(char *a1@<X8>)
{
  sub_23319CDD0((SEL *)&selRef_bookedAmountCreditDebitIndicatorValue, "Unexpected raw value for booked CreditDebitIndicator: %hd.", a1);
}

void sub_23319CDD0(SEL *a1@<X0>, const char *a2@<X1>, char *a3@<X8>)
{
  void *v3;
  id v6;
  void *v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v6 = objc_msgSend(v3, *a1);
  if (!v6)
  {
LABEL_11:
    v9 = 2;
    goto LABEL_12;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_shortValue);
  if (!v8)
  {
    v9 = 0;

    goto LABEL_12;
  }
  if ((unsigned __int16)v8 != 1)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v10 = sub_23361DB80();
    __swift_project_value_buffer(v10, (uint64_t)qword_2560495B0);
    v11 = v7;
    v12 = sub_23361DB68();
    v13 = sub_23361E768();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v14 = 33554688;
      objc_msgSend(v11, sel_shortValue);
      sub_23361EBC4();

      _os_log_impl(&dword_233151000, v12, v13, a2, v14, 6u);
      MEMORY[0x234934590](v14, -1, -1);

    }
    else
    {

    }
    goto LABEL_11;
  }
  v9 = 1;

LABEL_12:
  *a3 = v9;
}

uint64_t sub_23319CF78(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  char *v40;
  id v41;
  uint64_t result;
  char *v43;
  char *v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;

  v4 = v3;
  v8 = sub_23361D634();
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v43 - v13;
  v15 = sub_23361D6A0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_allocWithZone(v4);
  v47 = a3;
  v20 = objc_msgSend(v19, sel_initWithContext_, a3);
  sub_23361D694();
  v21 = (void *)sub_23361D658();
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v22(v18, v15);
  objc_msgSend(v20, sel_setId_, v21);

  v46 = a2;
  v23 = objc_msgSend(a2, sel_publicAccountObject);
  v24 = objc_msgSend(v23, "id");

  sub_23361D67C();
  v25 = (void *)sub_23361D658();
  v22(v18, v15);
  objc_msgSend(v20, sel_setAccountId_, v25);

  v26 = objc_msgSend(a1, sel_totalBalance);
  objc_msgSend(v20, sel_setAvailableAmountValue_, v26);

  v27 = objc_msgSend(a1, sel_creditDebitIndicator);
  if (v27)
  {
    v29 = v27;
    if (v27 != (id)1)
      goto LABEL_22;
    v28 = 1;
  }
  else
  {
    v28 = 0;
  }
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v28);
  objc_msgSend(v20, sel_setAvailableAmountCreditDebitIndicatorValue_, v30);

  v31 = objc_msgSend(a1, sel_currentBalance);
  objc_msgSend(v20, sel_setBookedAmountValue_, v31);

  v32 = objc_msgSend(a1, sel_creditDebitIndicator);
  if (v32)
  {
    v29 = v32;
    if (v32 == (id)1)
    {
      v33 = 1;
      goto LABEL_9;
    }
LABEL_22:
    v49 = 0;
    v50 = 0xE000000000000000;
    sub_23361ED98();
    sub_23361E27C();
    v48 = v29;
    type metadata accessor for FKCreditDebitIndicator(0);
    sub_23361EEE8();
    result = sub_23361EF24();
    __break(1u);
    return result;
  }
  v33 = 0;
LABEL_9:
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v33);
  objc_msgSend(v20, sel_setBookedAmountCreditDebitIndicatorValue_, v34);

  v35 = objc_msgSend(a1, sel_lastUpdated);
  v36 = v43;
  if (v35)
  {
    sub_23361D5EC();

    v37 = v45;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v14, v36, v8);
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v38(v14, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v8) == 1)
    {
      v35 = 0;
    }
    else
    {
      v35 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v8);
    }
  }
  else
  {
    v37 = v45;
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
    v38(v14, 1, 1, v8);
  }
  objc_msgSend(v20, sel_setAvailableAmountAsOf_, v35);

  v39 = objc_msgSend(a1, sel_lastUpdated);
  if (v39)
  {
    sub_23361D5EC();

    v40 = v44;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v44, v36, v8);
    v38(v40, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v40, 1, v8) == 1)
    {
      v39 = 0;
    }
    else
    {
      v39 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v8);
    }
  }
  else
  {
    v38(v44, 1, 1, v8);
  }
  objc_msgSend(v20, sel_setBookedAmountAsOf_, v39);

  v41 = objc_msgSend(a1, sel_currency);
  if (!v41)
  {
    sub_23361E150();
    v41 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v20, sel_setCurrency_, v41);

  return (uint64_t)v20;
}

void sub_23319D544(id *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v4;

  v4 = objc_msgSend(*a1, *a4);
  sub_23361D67C();

}

uint64_t sub_23319D58C@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_23361D5EC();

    v6 = sub_23361D634();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 0;
  }
  else
  {
    v6 = sub_23361D634();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

void sub_23319D60C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23319F164(a1, (uint64_t)v10);
  v11 = *a2;
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);

}

void sub_23319D6E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_currency);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id ManagedAccountBalance.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccountBalance.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccountBalance.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static ManagedAccountBalance.ValidationError.== infix(_:_:)()
{
  return 1;
}

uint64_t ManagedAccountBalance.ValidationError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ManagedAccountBalance.ValidationError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedAccountBalance.validateForInsert()()
{
  sub_23319D994((SEL *)&selRef_validateForInsert_);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ManagedAccountBalance.validateForUpdate()()
{
  sub_23319D994((SEL *)&selRef_validateForUpdate_);
}

uint64_t sub_23319D994(SEL *a1)
{
  void *v1;
  void *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  int v10;
  uint64_t result;
  id v12;
  objc_super v13;
  id v14[2];

  v3 = v1;
  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042E50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.super_class = ObjectType;
  v14[0] = 0;
  v13.receiver = v3;
  if (objc_msgSendSuper2(&v13, *a1, v14))
  {
    v8 = v14[0];
    BalanceCalculation.init(managedAccountBalance:)(v3, (uint64_t)v7);
    v9 = type metadata accessor for BalanceCalculation(0);
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9);
    result = sub_23319ECDC((uint64_t)v7);
    if (v10 != 1)
      return result;
    sub_23319ED1C();
    swift_allocError();
  }
  else
  {
    v12 = v14[0];
    sub_23361D1B4();

  }
  return swift_willThrow();
}

uint64_t sub_23319DAF8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5;

  v5 = a1;
  a4();

  return 1;
}

void AccountBalance.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  unsigned __int8 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - v6;
  v8 = sub_23361D6A0();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v43 - v12;
  v14 = objc_msgSend(a1, "id");
  v44 = v13;
  sub_23361D67C();

  v15 = objc_msgSend(a1, sel_accountId);
  v45 = v11;
  sub_23361D67C();

  v16 = objc_msgSend(a1, sel_availableAmountValue);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_decimalValue);
    v18 = v54;
    v20 = *((_QWORD *)&v53 + 1);
    v19 = v53;
    v21 = objc_msgSend(a1, sel_currency);
    v22 = sub_23361E150();
    v24 = v23;

  }
  else
  {
    v19 = 0;
    v20 = 0;
    v18 = 0;
    v22 = 0;
    v24 = 0;
  }
  *(_QWORD *)&v53 = v19;
  *((_QWORD *)&v53 + 1) = v20;
  v54 = v18;
  v55 = v22;
  v56 = v24;
  v25 = objc_msgSend(a1, sel_availableAmountAsOf);
  if (v25)
  {
    v26 = v25;
    sub_23361D5EC();

    v27 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 0, 1, v27);
  }
  else
  {
    v28 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
  }
  sub_23319CDD0((SEL *)&selRef_availableAmountCreditDebitIndicatorValue, "Unexpected raw value for available CreditDebitIndicator: %hd.", &v52);
  v29 = objc_msgSend(a1, sel_bookedAmountValue);
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, sel_decimalValue);
    v31 = v49;
    v32 = *((_QWORD *)&v48 + 1);
    v33 = v48;
    v34 = objc_msgSend(a1, sel_currency);
    v35 = sub_23361E150();
    v37 = v36;

  }
  else
  {
    v33 = 0;
    v32 = 0;
    v31 = 0;
    v35 = 0;
    v37 = 0;
  }
  *(_QWORD *)&v48 = v33;
  *((_QWORD *)&v48 + 1) = v32;
  v49 = v31;
  v50 = v35;
  v51 = v37;
  v38 = objc_msgSend(a1, sel_bookedAmountAsOf);
  if (v38)
  {
    v39 = v38;
    v40 = (uint64_t)v43;
    sub_23361D5EC();

    v41 = sub_23361D634();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  else
  {
    v42 = sub_23361D634();
    v40 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v43, 1, 1, v42);
  }
  sub_23319CDD0((SEL *)&selRef_bookedAmountCreditDebitIndicatorValue, "Unexpected raw value for booked CreditDebitIndicator: %hd.", (char *)&v47);
  AccountBalance.init(id:accountId:availableAmount:availableAsOf:availableCreditDebitIndicator:bookedAmount:bookedAsOf:bookedCreditDebitIndicator:)((uint64_t)v44, (uint64_t)v45, &v53, (uint64_t)v7, &v52, &v48, v40, &v47, v46);

}

void _s10FinanceKit21ManagedAccountBalanceC6update_23withAvailableAmountAsOf0g6BookedijK0yAC_10Foundation4DateVSgAJtFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  void *v15;
  void *v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  sub_23319F164(a2, (uint64_t)&v17 - v10);
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = 0;
  if (v14(v11, 1, v12) != 1)
  {
    v15 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  objc_msgSend(a1, sel_setAvailableAmountAsOf_, v15);

  sub_23319F164(a3, (uint64_t)v9);
  if (v14(v9, 1, v12) == 1)
  {
    v16 = 0;
  }
  else
  {
    v16 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  objc_msgSend(a1, sel_setBookedAmountAsOf_, v16);

}

id sub_23319E070(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  int v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  int v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  int v56;
  __int128 v57;

  v4 = v3;
  v55 = type metadata accessor for BalanceCalculation.CalculationDetails(0);
  v8 = MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)&v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v53 - v10;
  v12 = type metadata accessor for BalanceCalculation(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23361D6A0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  v20 = (void *)sub_23361D658();
  objc_msgSend(v19, sel_setId_, v20);

  v21 = objc_msgSend(a2, sel_publicAccountObject);
  v22 = objc_msgSend(v21, "id");

  sub_23361D67C();
  v23 = (void *)sub_23361D658();
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25 = a1;
  v24(v18, v15);
  objc_msgSend(v19, sel_setAccountId_, v23);

  v26 = a1 + *(int *)(type metadata accessor for InternalAccountBalance(0) + 20);
  sub_2331684BC(v26, (uint64_t)v14, type metadata accessor for BalanceCalculation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_233168580((uint64_t)v14, (uint64_t)v11, type metadata accessor for BalanceCalculation.CalculationDetails);
      objc_msgSend(v19, sel_setAvailableAmountValue_, 0);
      objc_msgSend(v19, sel_setAvailableAmountAsOf_, 0);
      objc_msgSend(v19, sel_setAvailableAmountCreditDebitIndicatorValue_, 0);
      v28 = *(_DWORD *)v11;
      v54 = *(_OWORD *)(v11 + 4);
      v29 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      v56 = v28;
      v57 = v54;
      v30 = objc_msgSend(v29, sel_initWithDecimal_, &v56);
      objc_msgSend(v19, sel_setBookedAmountValue_, v30);

      v31 = v55;
      v32 = (void *)sub_23361D5B0();
      objc_msgSend(v19, sel_setBookedAmountAsOf_, v32);

      v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v11[*(int *)(v31 + 24)]);
      objc_msgSend(v19, sel_setBookedAmountCreditDebitIndicatorValue_, v33);

    }
    else
    {
      v40 = (uint64_t)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25604C650) + 48)];
      sub_233168580((uint64_t)v14, (uint64_t)v11, type metadata accessor for BalanceCalculation.CalculationDetails);
      v41 = v54;
      sub_233168580(v40, v54, type metadata accessor for BalanceCalculation.CalculationDetails);
      LODWORD(v40) = *(_DWORD *)v11;
      v53 = *(_OWORD *)(v11 + 4);
      v42 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      v56 = v40;
      v57 = v53;
      v43 = objc_msgSend(v42, sel_initWithDecimal_, &v56);
      objc_msgSend(v19, sel_setAvailableAmountValue_, v43);

      v44 = v55;
      v45 = (void *)sub_23361D5B0();
      objc_msgSend(v19, sel_setAvailableAmountAsOf_, v45);

      v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v11[*(int *)(v44 + 24)]);
      objc_msgSend(v19, sel_setAvailableAmountCreditDebitIndicatorValue_, v46);

      LODWORD(v46) = *(_DWORD *)v41;
      v25 = a1;
      v53 = *(_OWORD *)(v41 + 4);
      v47 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      v56 = (int)v46;
      v57 = v53;
      v48 = objc_msgSend(v47, sel_initWithDecimal_, &v56);
      objc_msgSend(v19, sel_setBookedAmountValue_, v48);

      v49 = (void *)sub_23361D5B0();
      objc_msgSend(v19, sel_setBookedAmountAsOf_, v49);

      v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *(unsigned __int8 *)(v41 + *(int *)(v44 + 24)));
      objc_msgSend(v19, sel_setBookedAmountCreditDebitIndicatorValue_, v50);

      sub_233168500(v41, type metadata accessor for BalanceCalculation.CalculationDetails);
    }
  }
  else
  {
    sub_233168580((uint64_t)v14, (uint64_t)v11, type metadata accessor for BalanceCalculation.CalculationDetails);
    v34 = *(_DWORD *)v11;
    v54 = *(_OWORD *)(v11 + 4);
    v35 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v56 = v34;
    v57 = v54;
    v36 = objc_msgSend(v35, sel_initWithDecimal_, &v56);
    objc_msgSend(v19, sel_setAvailableAmountValue_, v36);

    v37 = v55;
    v38 = (void *)sub_23361D5B0();
    objc_msgSend(v19, sel_setAvailableAmountAsOf_, v38);

    v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v11[*(int *)(v37 + 24)]);
    objc_msgSend(v19, sel_setAvailableAmountCreditDebitIndicatorValue_, v39);

    objc_msgSend(v19, sel_setBookedAmountValue_, 0);
    objc_msgSend(v19, sel_setBookedAmountAsOf_, 0);
    objc_msgSend(v19, sel_setBookedAmountCreditDebitIndicatorValue_, 0);
  }
  sub_233168500((uint64_t)v11, type metadata accessor for BalanceCalculation.CalculationDetails);
  BalanceCalculation.currencyCode.getter();
  v51 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setCurrency_, v51);

  sub_233168500(v25, type metadata accessor for InternalAccountBalance);
  return v19;
}

id sub_23319E6C8(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  int v30;
  __int16 v31;
  __int16 v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  char v44;
  unint64_t v45;
  char **v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  __int16 v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  void *v63;
  char v64;
  id v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  void *v69;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  __int16 v83;
  __int16 v84;
  __int16 v85;
  __int16 v86;
  __int16 v87;
  __int16 v88;
  __int16 v89;
  __int16 v90;

  v4 = v3;
  v77 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v77);
  v78 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v75);
  v76 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for RawBankConnectData.Account(0);
  MEMORY[0x24BDAC7A8](v80);
  v81 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v79 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v71 - v14;
  v16 = sub_23361D6A0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a3);
  sub_23361D694();
  v21 = (void *)sub_23361D658();
  v22 = *(void (**)(char *, uint64_t))(v17 + 8);
  v22(v19, v16);
  objc_msgSend(v20, sel_setId_, v21);

  v23 = objc_msgSend(a2, sel_publicAccountObject);
  v24 = objc_msgSend(v23, "id");

  sub_23361D67C();
  v25 = (void *)sub_23361D658();
  v22(v19, v16);
  objc_msgSend(v20, sel_setAccountId_, v25);

  v26 = RawBankConnectData.Account.availableBalance.getter();
  v29 = 0;
  if ((v28 & 0x100000000) == 0)
  {
    v30 = v26;
    v31 = v27;
    v32 = v28;
    v33 = HIDWORD(v26);
    v34 = HIWORD(v26);
    v35 = v27 >> 16;
    v36 = HIDWORD(v27);
    v73 = v15;
    v74 = (id)a1;
    v37 = HIWORD(v27);
    v38 = v28 >> 16;
    v39 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v82 = v30;
    v83 = v33;
    v84 = v34;
    v85 = v31;
    v86 = v35;
    v87 = v36;
    v88 = v37;
    v89 = v32;
    v90 = v38;
    v15 = v73;
    a1 = (uint64_t)v74;
    v29 = objc_msgSend(v39, sel_initWithDecimal_, &v82);
  }
  objc_msgSend(v20, sel_setAvailableAmountValue_, v29);

  RawBankConnectData.Account.availableBalanceAsOf.getter((uint64_t)v15);
  v40 = sub_23361D634();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(char **)(v41 + 48);
  v43 = 0;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v15, 1, v40) != 1)
  {
    v43 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v40);
  }
  objc_msgSend(v20, sel_setAvailableAmountAsOf_, v43);

  RawBankConnectData.Account.availableBalanceCreditDebitIndicator.getter((char *)&v82);
  v44 = v82;
  v45 = 0x24BDD1000uLL;
  v46 = &selRef__initWithImage_;
  if (v82 == 2)
    v47 = 0;
  else
    v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v44 & 1);
  objc_msgSend(v20, sel_setAvailableAmountCreditDebitIndicatorValue_, v47);

  v48 = RawBankConnectData.Account.bookedBalance.getter();
  if ((v50 & 0x100000000) != 0)
  {
    v61 = 0;
  }
  else
  {
    v51 = v48;
    v52 = v49;
    v53 = v50;
    v73 = v42;
    v74 = v20;
    v54 = v41;
    v55 = a1;
    v56 = HIDWORD(v48);
    v57 = HIWORD(v48);
    v58 = v49 >> 16;
    v59 = HIDWORD(v49);
    v71 = HIWORD(v49);
    v72 = v50 >> 16;
    v60 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v82 = v51;
    v83 = v56;
    a1 = v55;
    v41 = v54;
    v84 = v57;
    v46 = &selRef__initWithImage_;
    v85 = v52;
    v86 = v58;
    v42 = v73;
    v20 = v74;
    v87 = v59;
    v45 = 0x24BDD1000;
    v88 = v71;
    v89 = v53;
    v90 = v72;
    v61 = objc_msgSend(v60, sel_initWithDecimal_, &v82);
  }
  objc_msgSend(v20, sel_setBookedAmountValue_, v61);

  v62 = v79;
  RawBankConnectData.Account.bookedBalanceAsOf.getter(v79);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v42)(v62, 1, v40) == 1)
  {
    v63 = 0;
  }
  else
  {
    v63 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v62, v40);
  }
  objc_msgSend(v20, sel_setBookedAmountAsOf_, v63);

  RawBankConnectData.Account.bookedBalanceCreditDebitIndicator.getter((char *)&v82);
  v64 = v82;
  if (v82 == 2)
    v65 = 0;
  else
    v65 = objc_msgSend(objc_allocWithZone(*(Class *)(v45 + 1760)), v46[360], v64 & 1);
  objc_msgSend(v20, sel_setBookedAmountCreditDebitIndicatorValue_, v65);

  v66 = v81;
  sub_2331684BC(a1, v81, type metadata accessor for RawBankConnectData.Account);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v67 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    v68 = v78;
    sub_233168580(v66, v78, type metadata accessor for RawBankConnectData.LiabilityAccount);
  }
  else
  {
    v67 = type metadata accessor for RawBankConnectData.AssetAccount;
    v68 = v76;
    sub_233168580(v66, v76, type metadata accessor for RawBankConnectData.AssetAccount);
  }
  sub_23323F380();
  sub_233168500(v68, v67);
  v69 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setCurrency_, v69);

  sub_233168500(a1, type metadata accessor for RawBankConnectData.Account);
  return v20;
}

uint64_t sub_23319ECDC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042E50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23319ED1C()
{
  unint64_t result;

  result = qword_256042F60;
  if (!qword_256042F60)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedAccountBalance.ValidationError, &type metadata for ManagedAccountBalance.ValidationError);
    atomic_store(result, (unint64_t *)&qword_256042F60);
  }
  return result;
}

unint64_t sub_23319ED64()
{
  unint64_t result;

  result = qword_256042F68;
  if (!qword_256042F68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedAccountBalance.ValidationError, &type metadata for ManagedAccountBalance.ValidationError);
    atomic_store(result, (unint64_t *)&qword_256042F68);
  }
  return result;
}

void *keypath_get_selector_id()
{
  return &sel_id;
}

void sub_23319EDB4(id *a1, uint64_t a2, uint64_t a3)
{
  sub_23319D544(a1, a2, a3, (SEL *)&selRef_id);
}

void sub_23319EDD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (SEL *)&selRef_setId_);
}

char *keypath_get_selector_accountId()
{
  return sel_accountId;
}

void sub_23319EDE8(id *a1, uint64_t a2, uint64_t a3)
{
  sub_23319D544(a1, a2, a3, (SEL *)&selRef_accountId);
}

void sub_23319EE04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (SEL *)&selRef_setAccountId_);
}

void keypath_setTm(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  v7 = (id)sub_23361D658();
  objc_msgSend(v6, *a5, v7);

}

char *keypath_get_selector_availableAmountValue()
{
  return sel_availableAmountValue;
}

id sub_23319EE6C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_availableAmountValue);
  *a2 = result;
  return result;
}

id sub_23319EEA4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAvailableAmountValue_, *a1);
}

char *keypath_get_selector_availableAmountAsOf()
{
  return sel_availableAmountAsOf;
}

uint64_t sub_23319EEC4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_availableAmountAsOf, a2);
}

void sub_23319EEE0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setAvailableAmountAsOf_);
}

char *keypath_get_selector_availableAmountCreditDebitIndicatorValue()
{
  return sel_availableAmountCreditDebitIndicatorValue;
}

id sub_23319EF08@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_availableAmountCreditDebitIndicatorValue);
  *a2 = result;
  return result;
}

id sub_23319EF40(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAvailableAmountCreditDebitIndicatorValue_, *a1);
}

char *keypath_get_selector_bookedAmountValue()
{
  return sel_bookedAmountValue;
}

id sub_23319EF60@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_bookedAmountValue);
  *a2 = result;
  return result;
}

id sub_23319EF98(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBookedAmountValue_, *a1);
}

char *keypath_get_selector_bookedAmountAsOf()
{
  return sel_bookedAmountAsOf;
}

uint64_t sub_23319EFB8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_bookedAmountAsOf, a2);
}

void sub_23319EFD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setBookedAmountAsOf_);
}

char *keypath_get_selector_bookedAmountCreditDebitIndicatorValue()
{
  return sel_bookedAmountCreditDebitIndicatorValue;
}

id sub_23319EFFC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_bookedAmountCreditDebitIndicatorValue);
  *a2 = result;
  return result;
}

id sub_23319F034(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBookedAmountCreditDebitIndicatorValue_, *a1);
}

char *keypath_get_selector_currency()
{
  return sel_currency;
}

void sub_23319F058(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361E12C();
  objc_msgSend(v2, sel_setCurrency_, v3);

}

uint64_t type metadata accessor for ManagedAccountBalance()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ManagedAccountBalance.ValidationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23319F108 + 4 * byte_233626B90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23319F128 + 4 * byte_233626B95[v4]))();
}

_BYTE *sub_23319F108(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23319F128(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23319F130(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23319F138(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23319F140(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23319F148(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ManagedAccountBalance.ValidationError()
{
  return &type metadata for ManagedAccountBalance.ValidationError;
}

uint64_t sub_23319F164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void validateRelationshipExists<A, B>(object:keyPath:)(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;

  sub_233168668(0, &qword_256042F70);
  swift_retain();
  v2 = (void *)sub_23361E6F0();
  v3 = objc_msgSend(v2, sel_keyPath);

  v4 = v3;
  if (!v3)
  {
    sub_23361E150();
    v4 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  v5 = sub_23361E150();
  v7 = v6;
  v8 = objc_msgSend(a1, sel_valueForKeyPath_, v4);

  if (v8)
  {
    sub_23361EC24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_23319F578((uint64_t)v17, (uint64_t)v18);
  if (!v19)
  {
    sub_23319F5C0((uint64_t)v18);
    goto LABEL_11;
  }
  sub_233168668(0, (unint64_t *)&qword_256042F80);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v9 = 0;
    goto LABEL_12;
  }
  v9 = v16;
  if ((objc_msgSend(v16, sel_isDeleted) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_14:

    return;
  }
LABEL_12:
  v10 = objc_msgSend(a1, sel_entity);
  v11 = objc_msgSend(v10, sel_name);

  if (v11)
  {
    v12 = sub_23361E150();
    v14 = v13;

    sub_23319F600();
    swift_allocError();
    *(_QWORD *)v15 = v12;
    *(_QWORD *)(v15 + 8) = v14;
    *(_QWORD *)(v15 + 16) = v5;
    *(_QWORD *)(v15 + 24) = v7;
    *(_BYTE *)(v15 + 32) = 1;
    swift_willThrow();
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t _s10FinanceKit28ManagedObjectValidationErrorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v12;
  BOOL v13;
  char v14;
  char v17;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  if ((a1[4] & 1) != 0)
  {
    if ((a2[4] & 1) != 0)
    {
      v10 = v2 == v6 && v3 == v7;
      if (!v10 && (sub_23361F224() & 1) == 0)
      {
        v12 = 0;
        goto LABEL_26;
      }
      if (v5 != v8 || v4 != v9)
      {
LABEL_25:
        v12 = sub_23361F224();
        goto LABEL_26;
      }
      v12 = 1;
      goto LABEL_26;
    }
LABEL_15:
    v12 = 0;
    goto LABEL_26;
  }
  if ((a2[4] & 1) != 0)
    goto LABEL_15;
  v13 = v2 == v6 && v3 == v7;
  if (v13 || (v14 = sub_23361F224(), v12 = 0, (v14 & 1) != 0))
  {
    if (v5 == v8 && v4 == v9)
    {
      v12 = 1;
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_26:
  v17 = v12;
  sub_23319F644();
  sub_23319F644();
  sub_23319F680();
  sub_23319F680();
  return v17 & 1;
}

uint64_t sub_23319F578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23319F5C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254245020);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23319F600()
{
  unint64_t result;

  result = qword_256042F78;
  if (!qword_256042F78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedObjectValidationError, &type metadata for ManagedObjectValidationError);
    atomic_store(result, (unint64_t *)&qword_256042F78);
  }
  return result;
}

uint64_t sub_23319F644()
{
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ManagedObjectValidationError()
{
  return sub_23319F680();
}

uint64_t sub_23319F680()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManagedObjectValidationError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 32);
  sub_23319F644();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ManagedObjectValidationError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 32);
  sub_23319F644();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_23319F680();
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ManagedObjectValidationError(uint64_t a1, uint64_t a2)
{
  char v3;
  __int128 v4;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v3;
  sub_23319F680();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedObjectValidationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedObjectValidationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_23319F864(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_23319F86C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedObjectValidationError()
{
  return &type metadata for ManagedObjectValidationError;
}

void ContentPackageReader.returnLabelUrl(named:localization:preferUnlocalized:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v3 = v1 + 4;
  v4 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_23319A344(v3, v2, (uint64_t (*)(_QWORD))sub_23319FA18);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_23319F918@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v14;
  id v15;
  uint64_t v17;

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_233623D60;
    *(_QWORD *)(v14 + 32) = a2;
    *(_QWORD *)(v14 + 40) = a3;
    v15 = a1;
    swift_bridgeObjectRetain();
    ContentPackageReader.fileUrl(possibleNames:ext:bundle:localization:preferUnlocalized:)(v14, 0, 0, v15, a4, a5, a6 & 1, a7);

    return swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a7, 1, 1, v17);
  }
}

uint64_t sub_23319FA18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23319F918(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56), a2);
}

void ContentPackageReader.returnLabelUrls(named:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
  v2 = v0 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
  v3 = v1 + 4;
  v4 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_23319A344(v3, v2, (uint64_t (*)(_QWORD))sub_2331A0450);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_23319FAC4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, char *);
  uint64_t inited;
  id v35;
  void *v36;
  id v37;
  uint64_t (*v38)(uint64_t, uint64_t, char *);
  void (*v39)(uint64_t, uint64_t, uint64_t, char *);
  char *v40;
  uint64_t v41;
  uint64_t result;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, char *);
  unsigned int v45;
  void *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, char *);
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, char *);
  char *v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v73;
  uint64_t v74;
  int v75;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  void (*v89)(unint64_t *, uint64_t, char *);
  unint64_t *v90;
  uint64_t v91;
  unint64_t *v92;
  char *v93;
  char *v94;
  char *v95;
  void (*v96)(char *, unint64_t, char *);
  id v97;
  void (*v98)(uint64_t, uint64_t, uint64_t, char *);
  char *v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, char *);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;

  v106 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v93 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v95 = (char *)&v91 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v105 = (uint64_t)&v91 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v91 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v108 = (uint64_t)&v91 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v91 - v21;
  v23 = sub_23361D340();
  v109 = *(_QWORD *)(v23 - 8);
  v110 = (char *)v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v94 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v104 = (char *)&v91 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v91 - v30;
  MEMORY[0x24BDAC7A8](v29);
  if (!a1)
  {
    *a5 = sub_23315FA70(MEMORY[0x24BEE4AF8]);
    type metadata accessor for LocalizedURLMap();
    return swift_storeEnumTagMultiPayload();
  }
  v96 = v33;
  v92 = (unint64_t *)((char *)&v91 - v32);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  inited = swift_initStackObject();
  v100 = xmmword_233623D60;
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = a3;
  v99 = (char *)(inited + 32);
  *(_QWORD *)(inited + 40) = a4;
  swift_bridgeObjectRetain_n();
  v35 = a1;
  swift_bridgeObjectRetain();
  v102 = a3;
  v107 = a4;
  v36 = (void *)sub_23361E12C();
  v97 = v35;
  v37 = objc_msgSend(v35, sel_URLForResource_withExtension_subdirectory_localization_, v36, 0, 0, 0);

  if (v37)
  {
    sub_23361D2D4();

    v38 = (uint64_t (*)(uint64_t, uint64_t, char *))v109;
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, char *))(v109 + 56);
    v40 = v18;
    v41 = 0;
  }
  else
  {
    v38 = (uint64_t (*)(uint64_t, uint64_t, char *))v109;
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, char *))(v109 + 56);
    v40 = v18;
    v41 = 1;
  }
  v43 = v110;
  v98 = v39;
  v39((uint64_t)v40, v41, 1, v110);
  swift_bridgeObjectRelease();
  v44 = (unsigned int (*)(char *, uint64_t, char *))*((_QWORD *)v38 + 6);
  v45 = v44(v18, 1, v43);
  v46 = v97;
  v103 = v44;
  if (v45 == 1)
  {
    sub_2331A046C((uint64_t)v18);
    v47 = (char *)MEMORY[0x24BEE4AF8];
    v48 = (uint64_t)v22;
  }
  else
  {
    v49 = (void (*)(char *, char *, char *))*((_QWORD *)v38 + 4);
    v49(v31, v18, v43);
    v49((char *)v96, v31, v43);
    v47 = (char *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_46:
      v47 = (char *)sub_2334A4CD0(0, *((_QWORD *)v47 + 2) + 1, 1, (unint64_t)v47);
    v51 = *((_QWORD *)v47 + 2);
    v50 = *((_QWORD *)v47 + 3);
    if (v51 >= v50 >> 1)
      v47 = (char *)sub_2334A4CD0(v50 > 1, v51 + 1, 1, (unint64_t)v47);
    v48 = (uint64_t)v22;
    *((_QWORD *)v47 + 2) = v51 + 1;
    v49(&v47[((*((unsigned __int8 *)v38 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v38 + 80))+ *((_QWORD *)v38 + 9) * v51], (char *)v96, v110);
    v46 = v97;
    v44 = v103;
  }
  v52 = v108;

  swift_bridgeObjectRelease();
  if (*((_QWORD *)v47 + 2))
  {
    v53 = v110;
    (*((void (**)(uint64_t, char *, char *))v38 + 2))(v52, &v47[(*((unsigned __int8 *)v38 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v38 + 80)], v110);
    v54 = 0;
  }
  else
  {
    v54 = 1;
    v53 = v110;
  }
  v98(v52, v54, 1, v53);
  swift_bridgeObjectRelease();
  sub_2331A04AC(v52, v48);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (v44((char *)v48, 1, v53) != 1)
  {

    v89 = (void (*)(unint64_t *, uint64_t, char *))*((_QWORD *)v38 + 4);
    v90 = v92;
    v89(v92, v48, v53);
    v89(a5, (uint64_t)v90, v53);
    type metadata accessor for LocalizedURLMap();
    return swift_storeEnumTagMultiPayload();
  }
  v92 = a5;
  sub_2331A046C(v48);
  v55 = objc_msgSend(v46, sel_localizations);
  v56 = sub_23361E3F0();

  a5 = *(unint64_t **)(v56 + 16);
  v91 = v56;
  if (!a5)
  {
    v99 = (char *)MEMORY[0x24BEE4B00];
LABEL_42:

    swift_bridgeObjectRelease();
    *v92 = (unint64_t)v99;
    type metadata accessor for LocalizedURLMap();
    return swift_storeEnumTagMultiPayload();
  }
  v49 = (void (*)(char *, char *, char *))(v56 + 40);
  v99 = (char *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v58 = *((_QWORD *)v49 - 1);
    v57 = *(_QWORD *)v49;
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v100;
    *(_QWORD *)(v59 + 32) = v102;
    *(_QWORD *)(v59 + 40) = v107;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v105;
    ContentPackageReader.fileUrl(possibleNames:ext:bundle:localization:preferUnlocalized:)(v59, 0, 0, v46, v58, v57, 0, v105);
    v61 = v60;
    swift_bridgeObjectRelease();
    v62 = v60;
    v22 = v110;
    v38 = (uint64_t (*)(uint64_t, uint64_t, char *))v103;
    if (v103((char *)v62, 1, v110) != 1)
      break;
    swift_bridgeObjectRelease();
    sub_2331A046C(v61);
LABEL_19:
    v49 = (void (*)(char *, char *, char *))((char *)v49 + 16);
    a5 = (unint64_t *)((char *)a5 - 1);
    if (!a5)
      goto LABEL_42;
  }
  v108 = v58;
  v63 = v109;
  v64 = *(void (**)(char *, uint64_t, char *))(v109 + 32);
  v65 = v104;
  v64(v104, v61, v22);
  v66 = (uint64_t)v95;
  (*(void (**)(char *, char *, char *))(v63 + 16))(v95, v65, v22);
  v98(v66, 0, 1, v22);
  v67 = v38(v66, 1, v22);
  v96 = (void (*)(char *, unint64_t, char *))v64;
  if (v67 == 1)
  {
    sub_2331A046C(v66);
    v68 = (uint64_t)v99;
    swift_bridgeObjectRetain();
    v69 = sub_2331E3D18(v108, v57);
    v71 = v70;
    swift_bridgeObjectRelease();
    if ((v71 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v111 = (char *)v68;
      v46 = v97;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23327DD3C();
        v68 = (uint64_t)v111;
      }
      swift_bridgeObjectRelease();
      v73 = (uint64_t)v93;
      v96(v93, *(_QWORD *)(v68 + 56) + *(_QWORD *)(v109 + 72) * v69, v22);
      v99 = (char *)v68;
      sub_23328DC04(v69, v68);
      swift_bridgeObjectRelease();
      v74 = 0;
    }
    else
    {
      v74 = 1;
      v73 = (uint64_t)v93;
      v46 = v97;
    }
    v98(v73, v74, 1, v22);
    swift_bridgeObjectRelease();
    sub_2331A046C(v73);
LABEL_39:
    (*(void (**)(char *, char *))(v109 + 8))(v104, v22);
    goto LABEL_19;
  }
  v64(v94, v66, v22);
  v47 = v99;
  v75 = swift_isUniquelyReferenced_nonNull_native();
  v111 = v47;
  v77 = sub_2331E3D18(v108, v57);
  v78 = *((_QWORD *)v47 + 2);
  v79 = (v76 & 1) == 0;
  v80 = v78 + v79;
  if (__OFADD__(v78, v79))
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v81 = v76;
  if (*((_QWORD *)v47 + 3) >= v80)
  {
    v82 = v108;
    v38 = (uint64_t (*)(uint64_t, uint64_t, char *))v109;
    if ((v75 & 1) == 0)
      sub_23327DD3C();
    goto LABEL_34;
  }
  sub_23327987C(v80, v75);
  v82 = v108;
  v83 = sub_2331E3D18(v108, v57);
  v38 = (uint64_t (*)(uint64_t, uint64_t, char *))v109;
  if ((v81 & 1) == (v84 & 1))
  {
    v77 = v83;
LABEL_34:
    v46 = v97;
    v47 = v111;
    if ((v81 & 1) != 0)
    {
      v22 = v110;
      (*((void (**)(unint64_t, char *, char *))v38 + 5))(*((_QWORD *)v111 + 7) + *((_QWORD *)v38 + 9) * v77, v94, v110);
    }
    else
    {
      *(_QWORD *)&v111[8 * (v77 >> 6) + 64] |= 1 << v77;
      v85 = (uint64_t *)(*((_QWORD *)v47 + 6) + 16 * v77);
      *v85 = v82;
      v85[1] = v57;
      v22 = v110;
      v96((char *)(*((_QWORD *)v47 + 7) + *((_QWORD *)v38 + 9) * v77), (unint64_t)v94, v110);
      v86 = *((_QWORD *)v47 + 2);
      v87 = __OFADD__(v86, 1);
      v88 = v86 + 1;
      if (v87)
        goto LABEL_45;
      *((_QWORD *)v47 + 2) = v88;
      swift_bridgeObjectRetain();
    }
    v99 = v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  result = sub_23361F2B4();
  __break(1u);
  return result;
}

uint64_t sub_2331A0450@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_23319FAC4(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_2331A046C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2331A04AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MapsInsightsExtension.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(uint64_t a1)@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *a3 = sub_2331A06DC;
  a3[1] = (uint64_t (*)(uint64_t))v10;
  return result;
}

uint64_t sub_2331A05BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v9;
  void *v10;
  __int128 v12[2];
  uint64_t v13[5];

  v7 = *(_QWORD *)(a4 + 16);
  v13[3] = a3;
  v13[4] = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, a2, a3);
  sub_233177068((uint64_t)v13, (uint64_t)v12);
  type metadata accessor for MapsInsightsExtensionModel();
  v9 = swift_allocObject();
  sub_23318B020(v12, v9 + 16);
  v10 = *(void **)(a1 + 16);
  objc_msgSend(v10, sel_setExportedObject_, v9);
  swift_release();
  objc_msgSend(v10, sel_resume);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
}

uint64_t sub_2331A0684()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_2331A06DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_2331A05BC(a1, v1 + ((v3 + 32) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

uint64_t dispatch thunk of MapsInsightsExtensionProviding.mapsInsights(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318B35C;
  return v9(a1, a2, a3);
}

unint64_t sub_2331A0784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042F90;
  if (!qword_256042F90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256042F98);
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceAppExtensionConfiguration<A>, v1);
    atomic_store(result, (unint64_t *)&qword_256042F90);
  }
  return result;
}

uint64_t BankConnectService.loadTransactions(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v3[13] = type metadata accessor for BankConnectService.Message();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A0830()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[14];
  v2 = v0[11];
  v3 = v0[10];
  v0[15] = *(_QWORD *)(v0[12] + 16);
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2331A088C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v0[2] = v0;
  v0[3] = sub_2331A08E8;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A08E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 128) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331A0954()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A0994()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.loadTransactions(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *a1;
  *(_QWORD *)(v2 + 96) = v4;
  *(_QWORD *)(v2 + 104) = v5;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 128) = a1[3];
  return swift_task_switch();
}

uint64_t sub_2331A0A48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = (_QWORD *)v0[12];
  v0[17] = *(_QWORD *)(v0[10] + 16);
  *v5 = v3;
  v5[1] = v4;
  v5[2] = v1;
  v5[3] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2331A0AB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[17];
  v0[2] = v0;
  v0[3] = sub_2331A0B14;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A0B14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331A0B80()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A0BC0()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A0C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318C26C;
  return BankConnectService.loadTransactions(for:)(a1, a2);
}

uint64_t sub_2331A0C60(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectService.loadTransactions(for:)(a1);
}

uint64_t sub_2331A0CB0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v6;

  sub_23361DBE0();
  sub_23361E87C();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = v6;
  type metadata accessor for BankConnectService.Message();
  sub_233167C58(&qword_256042FD0, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectService.Message, (uint64_t)&protocol conformance descriptor for BankConnectService.Message);
  swift_retain();
  swift_retain();
  sub_23361DBB0();
  swift_release();
  return swift_release();
}

uint64_t sub_2331A0DF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BankConnectService.Message();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of BankConnectTransactionsUpdating.loadTransactions(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23318C26C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectTransactionsUpdating.loadTransactions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return v9(a1, a2, a3);
}

uint64_t sub_2331A0F2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v6;

  sub_23361DBE0();
  sub_23361E87C();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = v6;
  type metadata accessor for FinanceStore.Message();
  sub_233167C58(&qword_254246730, (uint64_t (*)(uint64_t))type metadata accessor for FinanceStore.Message, (uint64_t)&protocol conformance descriptor for FinanceStore.Message);
  swift_retain();
  swift_retain();
  sub_23361DBB0();
  swift_release();
  return swift_release();
}

uint64_t sub_2331A1070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23329DA6C(v1, a1);
}

uint64_t sub_2331A108C(uint64_t a1)
{
  _QWORD *v1;

  return sub_233602698(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2331A1098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_233605CB8(v1, a1);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t BankConnectService.logo(forInstitutionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for BankConnectService.Message();
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A1140()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = (_QWORD *)v0[8];
  v2 = v0[5];
  *v1 = v0[4];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (char *)&dword_256042FE0 + dword_256042FE0;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_2331A11DC;
  return ((uint64_t (*)(_QWORD *, _QWORD))v5)(v0 + 2, v0[8]);
}

uint64_t sub_2331A11DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  return swift_task_switch();
}

uint64_t sub_2331A1248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_2331A1288()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A12BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  v3[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[27] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[28] = v4;
  v3[29] = *(_QWORD *)(v4 - 8);
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A1348()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A13AC;
  v2 = swift_continuation_init();
  sub_23329761C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A13AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 248) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    *(_OWORD *)*(_QWORD *)(v1 + 184) = *(_OWORD *)(v1 + 144);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A1448()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 248);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 200) + *(_QWORD *)(**(_QWORD **)(v0 + 200) + 120), *(_QWORD *)(v0 + 216), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    sub_233168608(*(_QWORD *)(v0 + 216), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A160C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v0[15] = v0 + 20;
  v0[10] = v0;
  v0[11] = sub_2331A1670;
  v2 = swift_continuation_init();
  sub_23329761C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A1670()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 256) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_OWORD *)*(_QWORD *)(v1 + 184) = *(_OWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_2331A16E8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A1740()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A17A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A1830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_2331A1894;
  v2 = swift_continuation_init();
  sub_233297760(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A1894()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 216) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v1 + 152) = *(_BYTE *)(v1 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A1930()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A1AF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = (char *)v0 + 233;
  v0[10] = v0;
  v0[11] = sub_2331A1B58;
  v2 = swift_continuation_init();
  sub_233297760(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A1B58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 224) = v2;
  if (v2)
    swift_willThrow();
  else
    **(_BYTE **)(v1 + 152) = *(_BYTE *)(v1 + 233);
  return swift_task_switch();
}

uint64_t sub_2331A1BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A1C5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_2331A1CC0;
  v2 = swift_continuation_init();
  sub_2332978A4(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A1CC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  char v5;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 216) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_BYTE **)(v1 + 152);
    v5 = *(_BYTE *)(v1 + 233);
    *v4 = *(_BYTE *)(v1 + 232);
    v4[1] = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A1D64()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A1F28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = (char *)v0 + 234;
  v0[10] = v0;
  v0[11] = sub_2331A1F8C;
  v2 = swift_continuation_init();
  sub_2332978A4(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A1F8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  char v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(_BYTE **)(v1 + 152);
    v4 = *(_BYTE *)(v1 + 234);
    v5 = *(_BYTE *)(v1 + 235);
    *v3 = v4;
    v3[1] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_2331A200C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A20CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0[28];
  v0[2] = v0;
  v0[3] = sub_2331A2130;
  v2 = swift_continuation_init();
  sub_2332979E8(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A2130()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_233168478(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 152), &qword_254247CD0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A21F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A23D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = v0[27];
  v0[10] = v0;
  v0[11] = sub_2331A243C;
  v2 = swift_continuation_init();
  sub_2332979E8(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A243C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 240) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_233168478(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 152), &qword_254247CD0);
  return swift_task_switch();
}

uint64_t sub_2331A24BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A257C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0[28];
  v0[2] = v0;
  v0[3] = sub_2331A25E0;
  v2 = swift_continuation_init();
  sub_233297B2C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A25E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_233168478(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 152), &qword_254248700);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A26A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A2888()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = v0[27];
  v0[10] = v0;
  v0[11] = sub_2331A28EC;
  v2 = swift_continuation_init();
  sub_233297B2C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A28EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 240) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_233168478(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 152), &qword_254248700);
  return swift_task_switch();
}

uint64_t sub_2331A296C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A29E0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A2A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A2AEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_2331A2B50;
  v2 = swift_continuation_init();
  sub_233297C70(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A2B50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 216) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v1 + 152) = *(_BYTE *)(v1 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A2BEC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A2DB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = (char *)v0 + 233;
  v0[10] = v0;
  v0[11] = sub_2331A1B58;
  v2 = swift_continuation_init();
  sub_233297C70(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A2E14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[21] = a1;
  v2[22] = v1;
  v2[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v2[24] = swift_task_alloc();
  v3 = sub_23361DBF8();
  v2[25] = v3;
  v2[26] = *(_QWORD *)(v3 - 8);
  v2[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A2E9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A2F00;
  v2 = swift_continuation_init();
  sub_233298304(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A2F00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 144);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_2331A2F98()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 224);
  *(_QWORD *)(v0 + 152) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 176) + *(_QWORD *)(**(_QWORD **)(v0 + 176) + 120), *(_QWORD *)(v0 + 192), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 200);
    sub_233168608(*(_QWORD *)(v0 + 192), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A315C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[15] = v0 + 20;
  v0[10] = v0;
  v0[11] = sub_2331A31C0;
  v2 = swift_continuation_init();
  sub_233298304(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A31C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 232) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 240) = *(_QWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_2331A3234(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[21] = a1;
  v2[22] = v1;
  v2[23] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v2[24] = swift_task_alloc();
  v3 = sub_23361DBF8();
  v2[25] = v3;
  v2[26] = *(_QWORD *)(v3 - 8);
  v2[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A32BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A3320;
  v2 = swift_continuation_init();
  sub_233298448(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A3320()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 144);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_2331A33B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 224);
  *(_QWORD *)(v0 + 152) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 176) + *(_QWORD *)(**(_QWORD **)(v0 + 176) + 120), *(_QWORD *)(v0 + 192), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 200);
    sub_233168608(*(_QWORD *)(v0 + 192), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A357C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[15] = v0 + 20;
  v0[10] = v0;
  v0[11] = sub_2331A31C0;
  v2 = swift_continuation_init();
  sub_233298448(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A35E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[21] = a1;
  v2[22] = v1;
  v2[23] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v2[24] = swift_task_alloc();
  v3 = sub_23361DBF8();
  v2[25] = v3;
  v2[26] = *(_QWORD *)(v3 - 8);
  v2[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A3668()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A36CC;
  v2 = swift_continuation_init();
  sub_23329858C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A36CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 224) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 144);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_2331A3764()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 224);
  *(_QWORD *)(v0 + 152) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 176) + *(_QWORD *)(**(_QWORD **)(v0 + 176) + 120), *(_QWORD *)(v0 + 192), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 200);
    sub_233168608(*(_QWORD *)(v0 + 192), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A3928()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[22];
  v0[15] = v0 + 20;
  v0[10] = v0;
  v0[11] = sub_2331A398C;
  v2 = swift_continuation_init();
  sub_23329858C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A398C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 232) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 240) = *(_QWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_2331A3A00()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));

  v1 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2331A3A60()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A3AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v3[28] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v3[29] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[30] = v4;
  v3[31] = *(_QWORD *)(v4 - 8);
  v3[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A3B50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[27];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A3BB4;
  v2 = swift_continuation_init();
  sub_2332986D0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A3BB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 264) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 200);
    v5 = *(_QWORD *)(v1 + 160);
    *(_OWORD *)v4 = *(_OWORD *)(v1 + 144);
    *(_QWORD *)(v4 + 16) = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A3C58()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 264);
  *(_QWORD *)(v0 + 192) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 216) + *(_QWORD *)(**(_QWORD **)(v0 + 216) + 120), *(_QWORD *)(v0 + 232), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 240);
    sub_233168608(*(_QWORD *)(v0 + 232), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A3E1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[27];
  v0[15] = v0 + 21;
  v0[10] = v0;
  v0[11] = sub_2331A3E80;
  v2 = swift_continuation_init();
  sub_2332986D0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A3E80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 272) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 200);
    v4 = *(_QWORD *)(v1 + 184);
    *(_OWORD *)v3 = *(_OWORD *)(v1 + 168);
    *(_QWORD *)(v3 + 16) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_2331A3F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256042B80);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A3FC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0[28];
  v0[2] = v0;
  v0[3] = sub_2331A4024;
  v2 = swift_continuation_init();
  sub_233298814(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A4024()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_233168478(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 152), &qword_256042B80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A40E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A42CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = v0[27];
  v0[10] = v0;
  v0[11] = sub_2331A4330;
  v2 = swift_continuation_init();
  sub_233298814(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A4330()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 240) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_233168478(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 152), &qword_256042B80);
  return swift_task_switch();
}

uint64_t sub_2331A43B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  type metadata accessor for InternalAccount();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A446C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0[28];
  v0[2] = v0;
  v0[3] = sub_2331A44D0;
  v2 = swift_continuation_init();
  sub_233298958(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A44D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_233168580(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A4594()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A4778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = v0[27];
  v0[10] = v0;
  v0[11] = sub_2331A47DC;
  v2 = swift_continuation_init();
  sub_233298958(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A47DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 240) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_233168580(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  return swift_task_switch();
}

uint64_t sub_2331A485C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  v3[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[27] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[28] = v4;
  v3[29] = *(_QWORD *)(v4 - 8);
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A48E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A494C;
  v2 = swift_continuation_init();
  sub_233298FAC(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A494C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 248) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    *(_OWORD *)*(_QWORD *)(v1 + 184) = *(_OWORD *)(v1 + 144);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A49E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 248);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 200) + *(_QWORD *)(**(_QWORD **)(v0 + 200) + 120), *(_QWORD *)(v0 + 216), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    sub_233168608(*(_QWORD *)(v0 + 216), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A4BAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v0[15] = v0 + 20;
  v0[10] = v0;
  v0[11] = sub_2331A4C10;
  v2 = swift_continuation_init();
  sub_233298FAC(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A4C10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 256) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_OWORD *)*(_QWORD *)(v1 + 184) = *(_OWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_2331A4C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A4D14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_2331A4D78;
  v2 = swift_continuation_init();
  sub_2332990F0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A4D78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 216) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v1 + 152) = *(_BYTE *)(v1 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A4E14()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A4FD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = (char *)v0 + 233;
  v0[10] = v0;
  v0[11] = sub_2331A503C;
  v2 = swift_continuation_init();
  sub_2332990F0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A503C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 224) = v2;
  if (v2)
    swift_willThrow();
  else
    **(_BYTE **)(v1 + 152) = *(_BYTE *)(v1 + 233);
  return swift_task_switch();
}

uint64_t sub_2331A50B4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A510C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A5170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v3[23] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[24] = v4;
  v3[25] = *(_QWORD *)(v4 - 8);
  v3[26] = swift_task_alloc();
  type metadata accessor for BankConnectConsent();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A522C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[7] = v0[28];
  v0[2] = v0;
  v0[3] = sub_2331A5290;
  v2 = swift_continuation_init();
  sub_233298BE0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A5290()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 232) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_233168580(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A5354()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 168) + *(_QWORD *)(**(_QWORD **)(v0 + 168) + 120), *(_QWORD *)(v0 + 184), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 192);
    sub_233168608(*(_QWORD *)(v0 + 184), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A5538()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v0[15] = v0[27];
  v0[10] = v0;
  v0[11] = sub_2331A559C;
  v2 = swift_continuation_init();
  sub_233298BE0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A559C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 240) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_233168580(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 152), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  return swift_task_switch();
}

uint64_t sub_2331A561C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v3[28] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v3[29] = swift_task_alloc();
  v4 = sub_23361DBF8();
  v3[30] = v4;
  v3[31] = *(_QWORD *)(v4 - 8);
  v3[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A56A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[27];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2331A570C;
  v2 = swift_continuation_init();
  sub_233299234(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A570C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 264) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 200);
    v5 = *(_QWORD *)(v1 + 160);
    *(_OWORD *)v4 = *(_OWORD *)(v1 + 144);
    *(_QWORD *)(v4 + 16) = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331A57B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 264);
  *(_QWORD *)(v0 + 192) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 216) + *(_QWORD *)(**(_QWORD **)(v0 + 216) + 120), *(_QWORD *)(v0 + 232), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 240);
    sub_233168608(*(_QWORD *)(v0 + 232), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331A5974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[27];
  v0[15] = v0 + 21;
  v0[10] = v0;
  v0[11] = sub_2331A59D8;
  v2 = swift_continuation_init();
  sub_233299234(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331A59D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 272) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 200);
    v4 = *(_QWORD *)(v1 + 184);
    *(_OWORD *)v3 = *(_OWORD *)(v1 + 168);
    *(_QWORD *)(v3 + 16) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_2331A5A58()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331A5AB0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.removeLogo(forInstitutionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v3[13] = type metadata accessor for BankConnectService.Message();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331A5B74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[14];
  v2 = v0[11];
  v3 = v0[10];
  v0[15] = *(_QWORD *)(v0[12] + 16);
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2331A5BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331A5C30;
  return BankConnectService.logo(forInstitutionID:)(a1, a2);
}

uint64_t sub_2331A5C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_2331A5C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  return BankConnectService.removeLogo(forInstitutionID:)(a1, a2);
}

uint64_t dispatch thunk of BankConnectImageProviding.logo(forInstitutionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331A5D78;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2331A5D78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of BankConnectImageProviding.removeLogo(forInstitutionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331676FC;
  return v11(a1, a2, a3, a4);
}

uint64_t InternalAccountBalanceQuery.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t InternalAccountBalanceQuery.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*InternalAccountBalanceQuery.limit.modify())()
{
  return nullsub_1;
}

void *InternalAccountBalanceQuery.predicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void InternalAccountBalanceQuery.predicate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*InternalAccountBalanceQuery.predicate.modify())()
{
  return nullsub_1;
}

uint64_t InternalAccountBalanceQuery.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InternalAccountBalanceQuery.sortDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*InternalAccountBalanceQuery.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t InternalAccountBalanceQuery.init(limit:predicate:sortDescriptors:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

void *sub_2331A5F68()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_2331A5F8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_233225D5C(*a1, *a2);
}

uint64_t sub_2331A5F98()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2331A6044()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331A60CC()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2331A6174@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2331A6F70();
  *a1 = result;
  return result;
}

void sub_2331A61A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE900000000000065;
  v5 = 0x7461636964657270;
  if (v2 != 1)
  {
    v5 = 0x6373654474726F73;
    v4 = 0xEF73726F74706972;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x74696D696CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2331A620C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7461636964657270;
  if (*v0 != 1)
    v1 = 0x6373654474726F73;
  if (*v0)
    return v1;
  else
    return 0x74696D696CLL;
}

uint64_t sub_2331A6274@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2331A6F70();
  *a1 = result;
  return result;
}

uint64_t sub_2331A6298()
{
  sub_2331A6AC4();
  return sub_23361F428();
}

uint64_t sub_2331A62C0()
{
  sub_2331A6AC4();
  return sub_23361F434();
}

void InternalAccountBalanceQuery.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043090);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331A6AC4();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
  else
  {
    LOBYTE(v28) = 0;
    v9 = sub_23361EFF0();
    v11 = v10;
    v27 = v9;
    LOBYTE(v28) = 1;
    v12 = sub_23361F0A4();
    if ((v12 & 1) != 0)
    {
      v30 = 1;
      sub_2331A6B08();
      sub_23361F068();
      v26 = a2;
      v13 = v28;
      v14 = v29;
      sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_254247FB0);
      v25 = v14;
      v21 = (void *)sub_23361E81C();
      sub_23316BEA4(v13, v25);
    }
    else
    {
      v26 = a2;
      v21 = 0;
    }
    LOBYTE(v28) = 2;
    if ((sub_23361F0A4() & 1) != 0)
    {
      v30 = 2;
      sub_2331A6B08();
      sub_23361F068();
      v18 = v28;
      v19 = v29;
      v25 = sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_2560446E0);
      v23 = v18;
      v24 = v19;
      v20 = sub_23361E834();
      if (v20)
        v15 = v20;
      else
        v15 = MEMORY[0x24BEE4AF8];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_23316BEA4(v23, v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v15 = 0;
    }
    v16 = v26;
    *v26 = v27;
    *((_BYTE *)v16 + 8) = v11 & 1;
    v16[2] = (uint64_t)v21;
    v16[3] = v15;
    swift_bridgeObjectRetain();
    v17 = v21;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

uint64_t InternalAccountBalanceQuery.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  id v37;
  unint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560430A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)v1;
  v8 = *(_BYTE *)(v1 + 8);
  v9 = *(void **)(v1 + 16);
  v33 = *(_QWORD *)(v1 + 24);
  v34 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331A6AC4();
  sub_23361F410();
  v37 = v7;
  LOBYTE(v38) = v8;
  v10 = v6;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560430B0);
  sub_2331A6B4C();
  v11 = v35;
  sub_23361F17C();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v4;
  v15 = v33;
  v14 = v34;
  if (v34)
  {
    v16 = (void *)objc_opt_self();
    v37 = 0;
    v17 = v14;
    v18 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, &v37);
    v19 = v37;
    if (!v18)
    {
      v23 = v19;
      sub_23361D1B4();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
    }
    v20 = (void *)sub_23361D3C4();
    v22 = v21;

    v37 = v20;
    v38 = v22;
    v36 = 1;
    sub_2331A6BA8();
    sub_23361F17C();

    sub_23316BEA4((uint64_t)v20, v22);
  }
  if (v15)
  {
    v24 = (void *)objc_opt_self();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v25 = (void *)sub_23361E3D8();
    v37 = 0;
    v26 = objc_msgSend(v24, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v25, 1, &v37);

    v27 = v37;
    if (v26)
    {
      v28 = (void *)sub_23361D3C4();
      v30 = v29;

      v37 = v28;
      v38 = v30;
      v36 = 2;
      sub_2331A6BA8();
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v3);
      return sub_23316BEA4((uint64_t)v28, v30);
    }
    v31 = v27;
    sub_23361D1B4();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
}

void sub_2331A69A8(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  InternalAccountBalanceQuery.init(from:)(a1, a2);
}

uint64_t sub_2331A69BC(_QWORD *a1)
{
  return InternalAccountBalanceQuery.encode(to:)(a1);
}

BOOL _s10FinanceKit27InternalAccountBalanceQueryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  unint64_t v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  char v11;

  v3 = *(void **)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  if (v3)
  {
    if (!v6)
      return 0;
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    v7 = v6;
    v8 = v3;
    v9 = sub_23361EA14();

    if ((v9 & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  if (v2)
  {
    if (!v5)
      return 0;
    swift_bridgeObjectRetain();
    v10 = swift_bridgeObjectRetain();
    v11 = sub_23322BAD0(v10, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  return !v5;
}

unint64_t sub_2331A6AC4()
{
  unint64_t result;

  result = qword_256043098;
  if (!qword_256043098)
  {
    result = MEMORY[0x234934494](&unk_233626FA8, &type metadata for InternalAccountBalanceQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043098);
  }
  return result;
}

unint64_t sub_2331A6B08()
{
  unint64_t result;

  result = qword_256054DA0;
  if (!qword_256054DA0)
  {
    result = MEMORY[0x234934494](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256054DA0);
  }
  return result;
}

unint64_t sub_2331A6B4C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2560430B8;
  if (!qword_2560430B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560430B0);
    v2 = MEMORY[0x24BEE1770];
    result = MEMORY[0x234934494](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2560430B8);
  }
  return result;
}

unint64_t sub_2331A6BA8()
{
  unint64_t result;

  result = qword_256054DB0[0];
  if (!qword_256054DB0[0])
  {
    result = MEMORY[0x234934494](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, qword_256054DB0);
  }
  return result;
}

uint64_t destroy for InternalAccountBalanceQuery(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InternalAccountBalanceQuery(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InternalAccountBalanceQuery(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(void **)(a1 + 16);
  v6 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;

  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InternalAccountBalanceQuery(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalAccountBalanceQuery(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalAccountBalanceQuery(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountBalanceQuery()
{
  return &type metadata for InternalAccountBalanceQuery;
}

uint64_t storeEnumTagSinglePayload for InternalAccountBalanceQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2331A6E18 + 4 * byte_233626DF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2331A6E4C + 4 * byte_233626DF0[v4]))();
}

uint64_t sub_2331A6E4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331A6E54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331A6E5CLL);
  return result;
}

uint64_t sub_2331A6E68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331A6E70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2331A6E74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331A6E7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountBalanceQuery.CodingKeys()
{
  return &type metadata for InternalAccountBalanceQuery.CodingKeys;
}

unint64_t sub_2331A6E9C()
{
  unint64_t result;

  result = qword_2560430D8;
  if (!qword_2560430D8)
  {
    result = MEMORY[0x234934494](&unk_233626F80, &type metadata for InternalAccountBalanceQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560430D8);
  }
  return result;
}

unint64_t sub_2331A6EE4()
{
  unint64_t result;

  result = qword_2560430E0;
  if (!qword_2560430E0)
  {
    result = MEMORY[0x234934494](&unk_233626EB8, &type metadata for InternalAccountBalanceQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560430E0);
  }
  return result;
}

unint64_t sub_2331A6F2C()
{
  unint64_t result;

  result = qword_2560430E8;
  if (!qword_2560430E8)
  {
    result = MEMORY[0x234934494](&unk_233626EE0, &type metadata for InternalAccountBalanceQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560430E8);
  }
  return result;
}

uint64_t sub_2331A6F70()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_2331A6FB8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v10 = MEMORY[0x24BEE4AF8];
    result = sub_233273B28(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v10;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x234933120](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v9 = *(_QWORD *)(v10 + 16);
      v8 = *(_QWORD *)(v10 + 24);
      if (v9 >= v8 >> 1)
        sub_233273B28(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v10 + 16) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9 + 32) = v7;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2331A70F4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v10 = MEMORY[0x24BEE4AF8];
    result = sub_233273B28(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v10;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x234933120](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = (unint64_t)v6;
      v9 = *(_QWORD *)(v10 + 16);
      v8 = *(_QWORD *)(v10 + 24);
      if (v9 >= v8 >> 1)
        sub_233273B28(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v10 + 16) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9 + 32) = v7 | 0x8000000000000000;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t ManagedOrderUpdater.__allocating_init(widgetRefresher:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2331A7290(a1, v2 + 16);
  return v2;
}

uint64_t ManagedOrderUpdater.init(widgetRefresher:)(uint64_t a1)
{
  uint64_t v1;

  sub_2331A7290(a1, v1 + 16);
  return v1;
}

uint64_t sub_2331A7290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331A72D8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t active;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  char v39;
  id v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned __int8 v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  id v51;
  _BYTE *v52;
  _BYTE *v53;
  char *v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  objc_super v67;
  _BYTE v68[40];
  _BYTE v69[40];
  __int128 v70;
  uint64_t v71;
  _UNKNOWN **v72;
  _OWORD v73[2];
  uint64_t v74;
  int v75;
  unsigned __int16 v76;

  v55 = a2;
  v56 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v2);
  v58 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_23361D634();
  v62 = *(_QWORD *)(v63 - 8);
  v4 = MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v50 - v6;
  v74 = 0;
  memset(v73, 0, sizeof(v73));
  v7 = objc_allocWithZone(MEMORY[0x24BDF88B8]);
  v8 = (void *)sub_23361E12C();
  v9 = objc_msgSend(v7, sel_initWithBundleIdentifier_, v8);

  v71 = sub_233168668(0, (unint64_t *)&qword_256042CC0);
  v72 = &protocol witness table for UNUserNotificationCenter;
  *(_QWORD *)&v70 = v9;
  sub_23318B020(&v70, (uint64_t)v68);
  sub_2331A7290((uint64_t)v73, (uint64_t)v69);
  type metadata accessor for ManagedOrder();
  v67.receiver = (id)swift_getObjCClassFromMetadata();
  v67.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit12ManagedOrder;
  v10 = objc_msgSendSuper2(&v67, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_233623D60;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 1);
  *(_QWORD *)(v11 + 56) = sub_233168668(0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v11 + 64) = sub_2331A85D0();
  *(_QWORD *)(v11 + 32) = v12;
  v13 = (void *)sub_23361E6B4();
  objc_msgSend(v10, sel_setPredicate_, v13);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v14 + 16) = xmmword_233627000;
  *(_QWORD *)(v14 + 32) = 0xD000000000000012;
  *(_QWORD *)(v14 + 40) = 0x800000023366B360;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = 0xD000000000000016;
  *(_QWORD *)(v14 + 72) = 0x800000023366B380;
  *(_QWORD *)(v14 + 120) = v15;
  *(_QWORD *)(v14 + 88) = v15;
  *(_QWORD *)(v14 + 96) = 0xD000000000000015;
  *(_QWORD *)(v14 + 104) = 0x80000002336688D0;
  v16 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToFetch_, v16);

  v17 = (void *)sub_23361E3D8();
  objc_msgSend(v10, sel_setRelationshipKeyPathsForPrefetching_, v17);

  v18 = v64;
  v19 = sub_23361E984();
  v20 = v18;
  if (v18)
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v68);
    sub_233168608((uint64_t)v69, &qword_256042CB0);
    return v21 & 1;
  }
  v22 = v19;
  v51 = v10;
  v52 = v68;
  v53 = v69;
  if (v19 >> 62)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    v64 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v23 = (uint64_t)v58;
  v24 = (uint64_t)v53;
  active = (unint64_t)v52;
  v60 = v20;
  if (!v64)
  {
    v75 = 0;
    goto LABEL_50;
  }
  v75 = 0;
  v26 = 0;
  v27 = v22 & 0xC000000000000001;
  v59 = v22 & 0xFFFFFFFFFFFFFF8;
  v57 = v22 & 0xC000000000000001;
  while (2)
  {
    v20 = v26;
    while (1)
    {
      if (v27)
      {
        v28 = (id)MEMORY[0x234933120](v20, v22);
      }
      else
      {
        if (v20 >= *(_QWORD *)(v59 + 16))
        {
          __break(1u);
          goto LABEL_55;
        }
        v28 = *(id *)(v22 + 8 * v20 + 32);
      }
      v29 = v28;
      v26 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        goto LABEL_53;
      }
      if ((objc_msgSend(v28, sel_isMarkedAsComplete) & 1) == 0)
      {
        v30 = objc_msgSend(v29, sel_ecommerceOrderContent);
        if (!v30)
          goto LABEL_58;
        v24 = (uint64_t)v30;
        v31 = objc_msgSend((id)v24, sel_statusValue);
        if (v31)
        {
          if ((unsigned __int16)v31 == 1)
          {
            active = ManagedECommerceOrderContent.hasActiveReturn.getter();

            if ((active & 1) != 0)
              goto LABEL_38;
          }
          else
          {
            if ((unsigned __int16)v31 != 2)
            {
              v65 = 0;
              v66 = 0xE000000000000000;
              sub_23361ED98();
              swift_bridgeObjectRelease();
              v65 = (_QWORD *)0xD00000000000001FLL;
              v66 = 0x800000023366B410;
              v76 = (unsigned __int16)objc_msgSend((id)v24, sel_statusValue);
              sub_23361F1D0();
              sub_23361E27C();
              swift_bridgeObjectRelease();
LABEL_58:
              result = sub_23361EF24();
              __break(1u);
              return result;
            }

          }
        }
        else
        {
          v32 = ManagedECommerceOrderContent.shippingFulfillments.getter();
          v33 = v60;
          v34 = (_QWORD *)sub_2331A6FB8(v32);
          swift_bridgeObjectRelease();
          v65 = v34;
          v35 = ManagedECommerceOrderContent.pickupFulfillments.getter();
          v36 = sub_2331A70F4(v35);
          swift_bridgeObjectRelease();
          sub_2331896C8(v36);
          sub_2331A8628(&v65);
          v60 = v33;
          active = v65[2];
          swift_bridgeObjectRelease();
          if (active)
          {
            v37 = 0;
            v27 = v57;
          }
          else
          {
            active = ManagedECommerceOrderContent.returns.getter();
            if (active >> 62)
              v38 = sub_23361EF30();
            else
              v38 = *(_QWORD *)((active & 0xFFFFFFFFFFFFF8) + 0x10);
            v27 = v57;
            swift_bridgeObjectRelease();
            v37 = v38 == 0;
          }
          if (objc_msgSend((id)v24, sel_hasActiveFulfillment))
          {

            v23 = (uint64_t)v58;
            goto LABEL_38;
          }
          active = ManagedECommerceOrderContent.hasActiveReturn.getter();

          v39 = v37 | active;
          v23 = (uint64_t)v58;
          if ((v39 & 1) != 0)
            goto LABEL_38;
        }
      }
      if (!objc_msgSend(v29, sel_isMarkedAsComplete))
        break;
      if ((objc_msgSend(v29, sel_showsAsActive) & 1) != 0)
      {
        LOBYTE(v24) = 0;
        goto LABEL_43;
      }
LABEL_9:

      ++v20;
      if (v26 == v64)
      {
        v24 = (uint64_t)v53;
        active = (unint64_t)v52;
        goto LABEL_50;
      }
    }
    v40 = objc_msgSend(v29, sel_showsAsActiveUntilDate);
    active = (unint64_t)v61;
    if (!v40)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v23, 1, 1, v63);
      goto LABEL_37;
    }
    v41 = v40;
    sub_23361D5EC();

    v42 = active;
    active = v62;
    v24 = *(_QWORD *)(v62 + 32);
    v43 = v63;
    ((void (*)(uint64_t, unint64_t, uint64_t))v24)(v23, v42, v63);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(active + 56))(v23, 0, 1, v43);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(active + 48))(v23, 1, v43) == 1)
    {
LABEL_37:
      sub_233168608(v23, (uint64_t *)&unk_254247DA0);
LABEL_38:
      if ((objc_msgSend(v29, sel_showsAsActive) & 1) == 0)
      {
        LOBYTE(v24) = 1;
        goto LABEL_43;
      }
      goto LABEL_9;
    }
    v44 = v22;
    v45 = v54;
    v46 = v63;
    ((void (*)(char *, uint64_t, uint64_t))v24)(v54, v23, v63);
    v24 = sub_23361D5BC();
    (*(void (**)(char *, uint64_t))(active + 8))(v45, v46);
    v22 = v44;
    if (((v24 ^ objc_msgSend(v29, sel_showsAsActive)) & 1) == 0)
    {
      v27 = v57;
      goto LABEL_9;
    }
    v27 = v57;
LABEL_43:
    objc_msgSend(v29, sel_setShowsAsActive_, v24 & 1);
    v47 = objc_msgSend(v29, sel_showsAsActive);
    v24 = (uint64_t)v53;
    active = (unint64_t)v52;
    if ((v47 & 1) == 0)
    {
      v48 = v60;
      sub_233318874(v29, v56);
      if (!v48)
      {
        v60 = 0;
        goto LABEL_46;
      }
LABEL_53:

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(active);
      sub_233168608(v24, &qword_256042CB0);

      return v21 & 1;
    }
LABEL_46:

    v75 = 1;
    if (v26 != v64)
      continue;
    break;
  }
LABEL_50:

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(active);
  sub_233168608(v24, &qword_256042CB0);
  v21 = v75;
  return v21 & 1;
}

uint64_t sub_2331A7D50()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t i;
  id v15;
  void *v16;
  char v17;
  void *v19;
  objc_super v20;
  uint64_t v21;

  type metadata accessor for ManagedOrder();
  v20.receiver = (id)swift_getObjCClassFromMetadata();
  v20.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit12ManagedOrder;
  v0 = objc_msgSendSuper2(&v20, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_233623D60;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 1);
  *(_QWORD *)(v1 + 56) = sub_233168668(0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v1 + 64) = sub_2331A85D0();
  *(_QWORD *)(v1 + 32) = v2;
  v3 = (void *)sub_23361E6B4();
  objc_msgSend(v0, sel_setPredicate_, v3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233627010;
  v5 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 32) = 0xD000000000000012;
  *(_QWORD *)(v4 + 40) = 0x800000023366B360;
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = 0x626557726564726FLL;
  *(_QWORD *)(v4 + 72) = 0xEF65636976726553;
  *(_QWORD *)(v4 + 88) = v5;
  *(_QWORD *)(v4 + 96) = 0xD000000000000013;
  *(_QWORD *)(v4 + 104) = 0x8000000233669B00;
  *(_QWORD *)(v4 + 120) = v5;
  *(_QWORD *)(v4 + 128) = 0xD000000000000017;
  *(_QWORD *)(v4 + 136) = 0x800000023366B460;
  *(_QWORD *)(v4 + 152) = v5;
  *(_QWORD *)(v4 + 160) = 0xD000000000000020;
  *(_QWORD *)(v4 + 168) = 0x800000023366B480;
  *(_QWORD *)(v4 + 216) = v5;
  *(_QWORD *)(v4 + 184) = v5;
  *(_QWORD *)(v4 + 192) = 0xD000000000000020;
  *(_QWORD *)(v4 + 200) = 0x800000023366B4B0;
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPropertiesToFetch_, v6);

  v7 = v21;
  v8 = sub_23361E984();
  if (v7)
  {

    return v9 & 1;
  }
  v10 = v8;
  if (v8 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v11 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_5;
LABEL_20:

    swift_bridgeObjectRelease();
    v9 = 0;
    return v9 & 1;
  }
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
    goto LABEL_20;
LABEL_5:
  v19 = v0;
  v12 = 0;
  v13 = 0;
  v0 = (id)(v10 & 0xFFFFFFFFFFFFFF8);
  while (2)
  {
    LODWORD(v21) = v12;
    for (i = v13; ; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v15 = (id)MEMORY[0x234933120](i, v10);
      }
      else
      {
        if (i >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_18;
        v15 = *(id *)(v10 + 8 * i + 32);
      }
      v16 = v15;
      v13 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      v17 = sub_233300218();

      if ((v17 & 1) != 0)
        break;
      if (v13 == v11)
      {

        swift_bridgeObjectRelease();
        v9 = v21;
        return v9 & 1;
      }
    }
    v12 = 1;
    if (v13 != v11)
      continue;
    break;
  }

  swift_bridgeObjectRelease();
  v9 = 1;
  return v9 & 1;
}

void sub_2331A80F0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v12 = *(_OWORD *)a2;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  type metadata accessor for ManagedOrder();
  v13 = v12;
  v14 = v7;
  v15 = v8;
  v9 = (void *)static ManagedOrder.existingOrder(with:in:)(&v13, a4);
  if (!v4)
  {
    v10 = v9;
    if (v9)
    {
      objc_msgSend(v9, sel_setNotificationsEnabled_, a1 & 1);
      v11 = (void *)sub_23361D5B0();
      objc_msgSend(v10, sel_setNotificationsEnabledModificationDate_, v11);

    }
    else
    {
      sub_2331A9338();
      swift_allocError();
      swift_willThrow();
    }
  }
}

void sub_2331A81E4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_OWORD *)a1;
  v13 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  type metadata accessor for ManagedOrder();
  v20 = v19;
  v21 = v13;
  v22 = v12;
  v14 = (void *)static ManagedOrder.existingOrder(with:in:)(&v20, a4);
  if (!v4)
  {
    v15 = v14;
    if (v14)
    {
      objc_msgSend(v14, sel_setIsMarkedAsComplete_, a2 & 1);
      sub_2331686A0(a3, (uint64_t)v11, (uint64_t *)&unk_254247DA0);
      v16 = sub_23361D634();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) != 1)
      {
        v18 = (void *)sub_23361D5B0();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
      }
      objc_msgSend(v15, sel_setIsMarkedAsCompleteModificationDate_, v18);

    }
    else
    {
      sub_2331A9338();
      swift_allocError();
      swift_willThrow();
    }
  }
}

void sub_2331A8370(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setIsMarkedAsComplete_, a2 & 1);
  sub_2331686A0(a3, (uint64_t)v8, (uint64_t *)&unk_254247DA0);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v11 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  objc_msgSend(a1, sel_setIsMarkedAsCompleteModificationDate_, v11);

}

uint64_t sub_2331A8468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_2331686A0(v0 + 16, (uint64_t)v5, &qword_256042CB0);
  v1 = v6;
  if (!v6)
    return sub_233168608((uint64_t)v5, &qword_256042CB0);
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v4 = 0;
  (*(void (**)(char *, uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 8))(&v4, 0x686320726564724FLL, 0xED00006465676E61, v1, v2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
}

uint64_t ManagedOrderUpdater.deinit()
{
  uint64_t v0;

  sub_233168608(v0 + 16, &qword_256042CB0);
  return v0;
}

uint64_t ManagedOrderUpdater.__deallocating_deinit()
{
  uint64_t v0;

  sub_233168608(v0 + 16, &qword_256042CB0);
  return swift_deallocClassInstance();
}

uint64_t static ManagedOrderUpdater.OrderUpdatingError.== infix(_:_:)()
{
  return 1;
}

uint64_t ManagedOrderUpdater.OrderUpdatingError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ManagedOrderUpdater.OrderUpdatingError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

unint64_t sub_2331A85D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560430F0;
  if (!qword_2560430F0)
  {
    v1 = sub_233168668(255, (unint64_t *)&qword_254248750);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_2560430F0);
  }
  return result;
}

void sub_2331A8628(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_233612E88(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_2331A8694(v4);
  *a1 = v2;
}

void sub_2331A8694(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  signed int v20;
  signed int v21;
  BOOL v22;
  signed int v23;
  int v24;
  uint64_t v25;
  signed int v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  id v31;
  signed int v32;
  signed int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  void *v43;
  id v44;
  id v45;
  signed int v46;
  signed int v47;
  signed int v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  void **v119;
  uint64_t v120;
  uint64_t v121;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_23361F1C4();
  if (v5 < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 >= -1)
    {
      v113 = v5;
      v111 = a1;
      if (v4 < 2)
      {
        v9 = MEMORY[0x24BEE4AF8];
        v119 = (void **)(MEMORY[0x24BEE4AF8] + 32);
        if (v4 != 1)
        {
          v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          v12 = (char *)MEMORY[0x24BEE4AF8];
          if (v13 < 2)
            goto LABEL_128;
          goto LABEL_116;
        }
        v112 = MEMORY[0x24BEE4AF8];
        v120 = v1;
      }
      else
      {
        v120 = v1;
        v7 = v6 >> 1;
        v8 = sub_23361E42C();
        *(_QWORD *)(v8 + 16) = v7;
        v112 = v8;
        v119 = (void **)(v8 + 32);
      }
      v10 = 0;
      v11 = *a1;
      v110 = *a1 - 8;
      v12 = (char *)MEMORY[0x24BEE4AF8];
      v118 = v4;
      v121 = *a1;
LABEL_16:
      v14 = v10++;
      if (v10 < v4)
      {
        v15 = v12;
        v16 = *(_QWORD *)(v11 + 8 * v14);
        v17 = (void *)(*(_QWORD *)(v11 + 8 * v10) & 0x7FFFFFFFFFFFFFFFLL);
        v18 = (id)(v16 & 0x7FFFFFFFFFFFFFFFLL);
        v19 = v17;
        v20 = objc_msgSend(v19, sel_positionIndex);
        if ((v16 & 0x8000000000000000) != 0)
        {
          v23 = objc_msgSend(v18, sel_positionIndex);

          v22 = v20 < v23;
        }
        else
        {
          v21 = objc_msgSend((id)v16, sel_positionIndex);

          v22 = v20 < v21;
        }
        v24 = v22;
        v116 = v24;
        v25 = v14 + 2;
        if (v14 + 2 >= v4)
        {
          v11 = v121;
        }
        else
        {
          v114 = v14;
          v11 = v121;
          do
          {
            v28 = *(_QWORD *)(v11 + 8 * v10);
            v29 = (void *)(*(_QWORD *)(v11 + 8 * v25) & 0x7FFFFFFFFFFFFFFFLL);
            v30 = (id)(v28 & 0x7FFFFFFFFFFFFFFFLL);
            v31 = v29;
            v32 = objc_msgSend(v31, sel_positionIndex);
            if ((v28 & 0x8000000000000000) != 0)
            {
              v26 = objc_msgSend(v30, sel_positionIndex);

              if (v116 == v32 >= v26)
                goto LABEL_29;
            }
            else
            {
              v33 = objc_msgSend((id)v28, sel_positionIndex);

              if (((v116 ^ (v32 >= v33)) & 1) == 0)
              {
LABEL_29:
                v11 = v121;
                goto LABEL_32;
              }
            }
            v27 = v25 + 1;
            v10 = v25;
            v25 = v27;
            v11 = v121;
          }
          while (v27 < v4);
          v25 = v27;
LABEL_32:
          v14 = v114;
        }
        v12 = v15;
        if (v116)
        {
          if (v25 < v14)
            goto LABEL_152;
          if (v14 < v25)
          {
            v34 = v25 - 1;
            v35 = v14;
            do
            {
              if (v35 != v34)
              {
                if (!v11)
                  goto LABEL_157;
                v36 = *(_QWORD *)(v11 + 8 * v35);
                *(_QWORD *)(v11 + 8 * v35) = *(_QWORD *)(v11 + 8 * v34);
                *(_QWORD *)(v11 + 8 * v34) = v36;
              }
              v22 = ++v35 < v34--;
            }
            while (v22);
          }
        }
        v10 = v25;
      }
      if (v10 >= v4)
        goto LABEL_65;
      if (__OFSUB__(v10, v14))
        goto LABEL_150;
      if (v10 - v14 >= v113)
        goto LABEL_65;
      if (__OFADD__(v14, v113))
        goto LABEL_153;
      if (v14 + v113 >= v4)
        v37 = v4;
      else
        v37 = v14 + v113;
      if (v37 >= v14)
      {
        if (v10 == v37)
          goto LABEL_65;
        v115 = v14;
        v117 = v37;
        v109 = v12;
        v38 = v110 + 8 * v10;
LABEL_56:
        v39 = *(_QWORD *)(v11 + 8 * v10);
        v40 = v115;
        v41 = (unint64_t *)v38;
        while (1)
        {
          v42 = *v41;
          v43 = (void *)(v39 & 0x7FFFFFFFFFFFFFFFLL);
          v44 = (id)(*v41 & 0x7FFFFFFFFFFFFFFFLL);
          v45 = v43;
          v46 = objc_msgSend(v45, sel_positionIndex);
          if ((v42 & 0x8000000000000000) != 0)
          {
            v48 = objc_msgSend(v44, sel_positionIndex);

            if (v46 >= v48)
            {
LABEL_54:
              v11 = v121;
LABEL_55:
              ++v10;
              v38 += 8;
              if (v10 != v117)
                goto LABEL_56;
              v10 = v117;
              v12 = v109;
              v4 = v118;
              v14 = v115;
LABEL_65:
              if (v10 < v14)
                goto LABEL_145;
              v50 = v12;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v12 = v50;
              else
                v12 = sub_23360573C(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
              v52 = *((_QWORD *)v12 + 2);
              v51 = *((_QWORD *)v12 + 3);
              v13 = v52 + 1;
              v11 = v121;
              if (v52 >= v51 >> 1)
              {
                v101 = sub_23360573C((char *)(v51 > 1), v52 + 1, 1, v12);
                v11 = v121;
                v12 = v101;
              }
              *((_QWORD *)v12 + 2) = v13;
              v53 = v12 + 32;
              v54 = &v12[16 * v52 + 32];
              *(_QWORD *)v54 = v14;
              *((_QWORD *)v54 + 1) = v10;
              if (v52)
              {
LABEL_71:
                v55 = v13 - 1;
                if (v13 >= 4)
                {
                  v60 = &v53[16 * v13];
                  v61 = *((_QWORD *)v60 - 8);
                  v62 = *((_QWORD *)v60 - 7);
                  v66 = __OFSUB__(v62, v61);
                  v63 = v62 - v61;
                  if (v66)
                    goto LABEL_134;
                  v65 = *((_QWORD *)v60 - 6);
                  v64 = *((_QWORD *)v60 - 5);
                  v66 = __OFSUB__(v64, v65);
                  v58 = v64 - v65;
                  v59 = v66;
                  if (v66)
                    goto LABEL_135;
                  v67 = v13 - 2;
                  v68 = &v53[16 * v13 - 32];
                  v70 = *(_QWORD *)v68;
                  v69 = *((_QWORD *)v68 + 1);
                  v66 = __OFSUB__(v69, v70);
                  v71 = v69 - v70;
                  if (v66)
                    goto LABEL_137;
                  v66 = __OFADD__(v58, v71);
                  v72 = v58 + v71;
                  if (v66)
                    goto LABEL_140;
                  if (v72 >= v63)
                  {
                    v90 = &v53[16 * v55];
                    v92 = *(_QWORD *)v90;
                    v91 = *((_QWORD *)v90 + 1);
                    v66 = __OFSUB__(v91, v92);
                    v93 = v91 - v92;
                    if (v66)
                      goto LABEL_144;
                    v83 = v58 < v93;
                  }
                  else
                  {
LABEL_84:
                    if ((v59 & 1) != 0)
                      goto LABEL_136;
                    v67 = v13 - 2;
                    v73 = &v53[16 * v13 - 32];
                    v75 = *(_QWORD *)v73;
                    v74 = *((_QWORD *)v73 + 1);
                    v76 = __OFSUB__(v74, v75);
                    v77 = v74 - v75;
                    v78 = v76;
                    if (v76)
                      goto LABEL_139;
                    v79 = &v53[16 * v55];
                    v81 = *(_QWORD *)v79;
                    v80 = *((_QWORD *)v79 + 1);
                    v66 = __OFSUB__(v80, v81);
                    v82 = v80 - v81;
                    if (v66)
                      goto LABEL_142;
                    if (__OFADD__(v77, v82))
                      goto LABEL_143;
                    if (v77 + v82 < v58)
                      goto LABEL_96;
                    v83 = v58 < v82;
                  }
                  if (v83)
                    v55 = v67;
                }
                else
                {
                  if (v13 == 3)
                  {
                    v57 = *((_QWORD *)v12 + 4);
                    v56 = *((_QWORD *)v12 + 5);
                    v66 = __OFSUB__(v56, v57);
                    v58 = v56 - v57;
                    v59 = v66;
                    goto LABEL_84;
                  }
                  v84 = *((_QWORD *)v12 + 4);
                  v85 = *((_QWORD *)v12 + 5);
                  v66 = __OFSUB__(v85, v84);
                  v77 = v85 - v84;
                  v78 = v66;
LABEL_96:
                  if ((v78 & 1) != 0)
                    goto LABEL_138;
                  v86 = &v53[16 * v55];
                  v88 = *(_QWORD *)v86;
                  v87 = *((_QWORD *)v86 + 1);
                  v66 = __OFSUB__(v87, v88);
                  v89 = v87 - v88;
                  if (v66)
                    goto LABEL_141;
                  if (v89 < v77)
                    goto LABEL_15;
                }
                v94 = v55 - 1;
                if (v55 - 1 >= v13)
                {
                  __break(1u);
LABEL_131:
                  __break(1u);
LABEL_132:
                  __break(1u);
LABEL_133:
                  __break(1u);
LABEL_134:
                  __break(1u);
LABEL_135:
                  __break(1u);
LABEL_136:
                  __break(1u);
LABEL_137:
                  __break(1u);
LABEL_138:
                  __break(1u);
LABEL_139:
                  __break(1u);
LABEL_140:
                  __break(1u);
LABEL_141:
                  __break(1u);
LABEL_142:
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
                  break;
                }
                if (!v11)
                  goto LABEL_156;
                v95 = v12;
                v96 = &v53[16 * v94];
                v97 = *(_QWORD *)v96;
                v98 = &v53[16 * v55];
                v99 = *((_QWORD *)v98 + 1);
                sub_2331A8FA0((void **)(v11 + 8 * *(_QWORD *)v96), (void **)(v11 + 8 * *(_QWORD *)v98), v11 + 8 * v99, v119);
                if (v120)
                {
                  v9 = v112;
                  goto LABEL_128;
                }
                if (v99 < v97)
                  goto LABEL_131;
                if (v55 > *((_QWORD *)v95 + 2))
                  goto LABEL_132;
                *(_QWORD *)v96 = v97;
                *(_QWORD *)&v53[16 * v94 + 8] = v99;
                v100 = *((_QWORD *)v95 + 2);
                if (v55 >= v100)
                  goto LABEL_133;
                v13 = v100 - 1;
                memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
                v12 = v95;
                *((_QWORD *)v95 + 2) = v100 - 1;
                v4 = v118;
                v11 = v121;
                if (v100 <= 2)
                  goto LABEL_15;
                goto LABEL_71;
              }
              v13 = 1;
LABEL_15:
              if (v10 >= v4)
              {
                v2 = v120;
                v9 = v112;
                if (v13 < 2)
                {
LABEL_128:
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v9 + 16) = 0;
                  swift_bridgeObjectRelease();
                  return;
                }
LABEL_116:
                v102 = *v111;
                while (1)
                {
                  v103 = v13 - 2;
                  if (v13 < 2)
                    goto LABEL_146;
                  if (!v102)
                    goto LABEL_158;
                  v104 = v12;
                  v105 = *(_QWORD *)&v12[16 * v103 + 32];
                  v106 = *(_QWORD *)&v12[16 * v13 + 24];
                  sub_2331A8FA0((void **)(v102 + 8 * v105), (void **)(v102 + 8 * *(_QWORD *)&v12[16 * v13 + 16]), v102 + 8 * v106, v119);
                  if (v2)
                    goto LABEL_128;
                  if (v106 < v105)
                    goto LABEL_147;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v104 = sub_233605C04((uint64_t)v104);
                  if (v103 >= *((_QWORD *)v104 + 2))
                    goto LABEL_148;
                  v107 = &v104[16 * v103 + 32];
                  *(_QWORD *)v107 = v105;
                  *((_QWORD *)v107 + 1) = v106;
                  v108 = *((_QWORD *)v104 + 2);
                  if (v13 > v108)
                    goto LABEL_149;
                  memmove(&v104[16 * v13 + 16], &v104[16 * v13 + 32], 16 * (v108 - v13));
                  v12 = v104;
                  *((_QWORD *)v104 + 2) = v108 - 1;
                  v13 = v108 - 1;
                  if (v108 <= 2)
                    goto LABEL_128;
                }
              }
              goto LABEL_16;
            }
          }
          else
          {
            v47 = objc_msgSend((id)v42, sel_positionIndex);

            if (v46 >= v47)
              goto LABEL_54;
          }
          v11 = v121;
          if (!v121)
            goto LABEL_155;
          v49 = *v41;
          v39 = v41[1];
          *v41 = v39;
          v41[1] = v49;
          --v41;
          if (v10 == ++v40)
            goto LABEL_55;
        }
      }
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
    }
    sub_23361EF18();
    __break(1u);
    return;
  }
  if (v4 < 0)
    goto LABEL_151;
  if (v4)
    sub_2331A8E84(0, v4, 1, a1);
}

void sub_2331A8E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  signed int v13;
  signed int v14;
  signed int v15;
  unint64_t v16;
  uint64_t v19;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * v4);
    v8 = a1;
    v19 = v6;
    while (1)
    {
      v9 = *(_QWORD *)v6;
      v10 = (void *)(v7 & 0x7FFFFFFFFFFFFFFFLL);
      v11 = (id)(*(_QWORD *)v6 & 0x7FFFFFFFFFFFFFFFLL);
      v12 = v10;
      v13 = objc_msgSend(v12, sel_positionIndex);
      if ((v9 & 0x8000000000000000) != 0)
      {
        v15 = objc_msgSend(v11, sel_positionIndex);

        if (v13 >= v15)
          goto LABEL_4;
      }
      else
      {
        v14 = objc_msgSend((id)v9, sel_positionIndex);

        if (v13 >= v14)
          goto LABEL_4;
      }
      if (!v5)
        break;
      v16 = *(_QWORD *)v6;
      v7 = *(_QWORD *)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v16;
      v6 -= 8;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        v6 = v19 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_2331A8FA0(void **__src, void **a2, unint64_t a3, void **a4)
{
  _QWORD *v4;
  void **v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  unint64_t v13;
  void **v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  signed int v21;
  signed int v22;
  void **v23;
  signed int v24;
  char *v25;
  char *v26;
  char **v27;
  void **v28;
  char *v29;
  void *v30;
  unint64_t v31;
  void *v32;
  id v33;
  id v34;
  unsigned int v35;
  char **v36;
  signed int v37;
  signed int v38;
  signed int v39;
  uint64_t result;
  void **v41;
  char *v44;
  char *v45;
  void **v46;
  void **v47;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v47 = __src;
  v46 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7)
      goto LABEL_50;
    if (a4 != a2 || &a2[v11] <= a4)
      memmove(a4, a2, 8 * v11);
    v25 = (char *)&a4[v11];
    v45 = v25;
    v47 = (void **)v4;
    if (v5 >= v4 || v9 < 8)
    {
LABEL_49:
      sub_233605850((void **)&v47, (const void **)&v46, &v45);
      return 1;
    }
    v26 = (char *)(a3 - 8);
    v27 = &selRef__initWithImage_;
    v28 = (void **)v4;
    v41 = v5;
    while (1)
    {
      v44 = v26 + 8;
      v29 = v25 - 8;
      v31 = (unint64_t)*--v28;
      v30 = (void *)v31;
      v32 = (void *)(*((_QWORD *)v25 - 1) & 0x7FFFFFFFFFFFFFFFLL);
      v33 = (id)(v31 & 0x7FFFFFFFFFFFFFFFLL);
      v34 = v32;
      v35 = objc_msgSend(v34, v27[409]);
      v36 = v27;
      v37 = v35;
      if ((v31 & 0x8000000000000000) != 0)
      {
        v39 = objc_msgSend(v33, (SEL)v36 + 1543);

        if (v37 < v39)
        {
LABEL_35:
          if (v44 != (char *)v4 || v26 >= (char *)v4)
            *(_QWORD *)v26 = *v28;
          v47 = v28;
LABEL_47:
          v27 = &selRef__initWithImage_;
          if (v28 <= v41)
            goto LABEL_49;
          goto LABEL_48;
        }
      }
      else
      {
        v38 = objc_msgSend(v30, (SEL)v36 + 1543);

        if (v37 < v38)
          goto LABEL_35;
      }
      v45 = v25 - 8;
      if (v44 < v25 || v26 >= v25)
      {
        *(_QWORD *)v26 = *(_QWORD *)v29;
        v28 = (void **)v4;
        v25 -= 8;
        goto LABEL_47;
      }
      v27 = &selRef__initWithImage_;
      if (v44 != v25)
        *(_QWORD *)v26 = *(_QWORD *)v29;
      v28 = (void **)v4;
      v25 -= 8;
      if (v4 <= v41)
        goto LABEL_49;
LABEL_48:
      v26 -= 8;
      v4 = v28;
      if (v25 <= (char *)a4)
        goto LABEL_49;
    }
  }
  if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v45 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = 0x1F3F57000uLL;
      v14 = a4;
      while (1)
      {
        v15 = (unint64_t)*v14;
        v16 = v13;
        v17 = (void *)(*v4 & 0x7FFFFFFFFFFFFFFFLL);
        v18 = (id)((unint64_t)*v14 & 0x7FFFFFFFFFFFFFFFLL);
        v19 = v17;
        v13 = v16;
        v20 = v19;
        v21 = objc_msgSend(v19, (SEL)(v13 + 1543));
        if ((v15 & 0x8000000000000000) != 0)
        {
          v24 = objc_msgSend(v18, (SEL)(v13 + 1543));

          if (v21 >= v24)
          {
LABEL_20:
            if (v5 != v14)
              *v5 = *v14;
            v46 = ++v14;
            v23 = (void **)v4;
            goto LABEL_23;
          }
        }
        else
        {
          v22 = objc_msgSend((id)v15, (SEL)(v13 + 1543));

          if (v21 >= v22)
            goto LABEL_20;
        }
        v23 = (void **)(v4 + 1);
        if (v5 < v4 || v5 >= v23 || v5 != v4)
          *v5 = (void *)*v4;
LABEL_23:
        ++v5;
        if (v14 < v12)
        {
          v4 = v23;
          if ((unint64_t)v23 < a3)
            continue;
        }
        v47 = v5;
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
LABEL_50:
  result = sub_23361EF6C();
  __break(1u);
  return result;
}

unint64_t sub_2331A9338()
{
  unint64_t result;

  result = qword_2560430F8;
  if (!qword_2560430F8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedOrderUpdater.OrderUpdatingError, &type metadata for ManagedOrderUpdater.OrderUpdatingError);
    atomic_store(result, (unint64_t *)&qword_2560430F8);
  }
  return result;
}

unint64_t sub_2331A9380()
{
  unint64_t result;

  result = qword_256043100;
  if (!qword_256043100)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedOrderUpdater.OrderUpdatingError, &type metadata for ManagedOrderUpdater.OrderUpdatingError);
    atomic_store(result, (unint64_t *)&qword_256043100);
  }
  return result;
}

uint64_t type metadata accessor for ManagedOrderUpdater()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedOrderUpdater()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedOrderUpdater.__allocating_init(widgetRefresher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ManagedOrderUpdater.updateShowsAsActive(context:now:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))() & 1;
}

uint64_t dispatch thunk of ManagedOrderUpdater.updateEffectiveAutomaticUpdatesEnabled(context:now:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))() & 1;
}

uint64_t dispatch thunk of ManagedOrderUpdater.setOrderNotificationsEnabled(_:for:modificationDate:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ManagedOrderUpdater.setOrderMarkedAsComplete(with:newValue:modificationDate:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ManagedOrderUpdater.setOrderMarkedAsComplete(_:newValue:modificationDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ManagedOrderUpdater.postProcess()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for ManagedOrderUpdater.OrderUpdatingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2331A94C8 + 4 * byte_233627020[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2331A94E8 + 4 * byte_233627025[v4]))();
}

_BYTE *sub_2331A94C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2331A94E8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331A94F0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331A94F8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331A9500(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331A9508(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderUpdater.OrderUpdatingError()
{
  return &type metadata for ManagedOrderUpdater.OrderUpdatingError;
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.uuid.modify())()
{
  return nullsub_1;
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.institutionID.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.fpanIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServiceInitiateConsentRequest.fpanIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.fpanIDs.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.codeChallenge.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.codeChallenge.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.codeChallenge.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.challengeMethod.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.challengeMethod.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.challengeMethod.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.clientState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.clientState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.clientState.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.flowConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for BankConnectWebServiceInitiateConsentRequest(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
}

uint64_t type metadata accessor for BankConnectWebServiceInitiateConsentRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_256043348);
}

uint64_t BankConnectWebServiceInitiateConsentRequest.flowConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for BankConnectWebServiceInitiateConsentRequest(0);
  return sub_2331AAB2C(a1, v1 + *(int *)(v3 + 40), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
}

uint64_t (*BankConnectWebServiceInitiateConsentRequest.flowConfiguration.modify())()
{
  type metadata accessor for BankConnectWebServiceInitiateConsentRequest(0);
  return nullsub_1;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.init(uuid:institutionID:codeChallenge:challengeMethod:fpanIDs:clientState:flowConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[6] = a6;
  a9[7] = a7;
  a9[4] = a10;
  a9[5] = a5;
  a9[8] = a8;
  a9[9] = a11;
  a9[10] = a12;
  v14 = type metadata accessor for BankConnectWebServiceInitiateConsentRequest(0);
  return sub_233168580(a13, (uint64_t)a9 + *(int *)(v14 + 40), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
}

void *BankConnectWebServiceInitiateConsentRequest.pathComponents.getter()
{
  return &unk_2504679E8;
}

uint64_t BankConnectWebServiceInitiateConsentRequest.jsonBody.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];

  v2 = v1;
  v4 = type metadata accessor for BankConnectAuthorizationConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[4];
  if (v7 && *(_QWORD *)(v7 + 16))
  {
    v25[1] = v1[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23319C29C();
    v8 = sub_23361E0D8();
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = type metadata accessor for BankConnectWebServiceInitiateConsentRequest(0);
  sub_2331684BC((uint64_t)v2 + *(int *)(v11 + 40), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v13 = 0;
      goto LABEL_11;
    }
    v13 = 2;
  }
  else
  {
    v13 = 1;
  }
  v14 = sub_23361D6A0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
LABEL_11:
  v15 = v2[1];
  v16 = v2[2];
  v17 = v2[3];
  v18 = v2[5];
  v19 = v2[6];
  v20 = v2[7];
  v21 = v2[8];
  v23 = v2[9];
  v22 = v2[10];
  *(_QWORD *)a1 = *v2;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 24) = v17;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v19;
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v23;
  *(_QWORD *)(a1 + 88) = v22;
  *(_BYTE *)(a1 + 96) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_2331A9984()
{
  return &unk_2504679E8;
}

void sub_2331A9990(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t *v20;
  uint64_t *v21;
  id v22;
  id v23;
  _QWORD *v24;
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  v5 = sub_23361CA40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (!v9)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v21 = v20;
    *v20 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v21[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v21[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v22 = a1;
    swift_willThrow();
    return;
  }
  v10 = (void *)v9;
  v40 = a2;
  v11 = a1;
  v12 = objc_msgSend(v10, sel_statusCode);
  if (v12 != (id)200)
  {
    v23 = v12;
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v24 = v23;
LABEL_15:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    return;
  }
  v44 = v11;
  v13 = (void *)sub_23361E12C();
  v14 = objc_msgSend(v10, sel_valueForHTTPHeaderField_, v13);

  if (!v14)
  {
    sub_2331B04A4();
    v18 = swift_allocError();
    *v25 = 0;
    goto LABEL_9;
  }
  sub_23361E150();

  v15 = sub_23361D37C();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17 >> 60 == 15)
  {
    sub_2331B04A4();
    v18 = swift_allocError();
    *v19 = 3;
LABEL_9:
    swift_willThrow();
    v11 = v44;
LABEL_14:
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v30 = v18;
    goto LABEL_15;
  }
  v38 = v15;
  v39 = v17;
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  v11 = v44;
  if (qword_256041BF0 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v5, (uint64_t)qword_2560458E0);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v36 = v26;
  v37 = v27;
  ((void (*)(char *))v27)(v8);
  sub_23361CA4C();
  sub_2331B0540();
  v28 = v38;
  sub_23361CA58();
  if (v2)
  {
    swift_release();
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    v18 = swift_allocError();
    *v29 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_2331B04E8(v28, v39);
    goto LABEL_14;
  }
  swift_release();
  sub_2331B04E8(v28, v39);
  v31 = *((_QWORD *)&v41 + 1);
  v32 = v43;
  v38 = v42;
  v39 = v41;
  swift_allocObject();
  sub_23361CA64();
  v37(v8, v36, v5);
  sub_23361CA4C();
  sub_2331B0584();
  sub_23361CA58();
  swift_release();

  v33 = v42;
  v34 = (_QWORD *)v40;
  *(_OWORD *)(v40 + 32) = v41;
  v34[6] = v33;
  *v34 = v39;
  v34[1] = v31;
  v34[2] = v38;
  v34[3] = v32;
}

uint64_t sub_2331A9E98()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F69736E65747865;
  else
    return 0x7463657269646572;
}

uint64_t sub_2331A9EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331B0378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331A9F0C()
{
  sub_2331AA374();
  return sub_23361F428();
}

uint64_t sub_2331A9F34()
{
  sub_2331AA374();
  return sub_23361F434();
}

uint64_t sub_2331A9F5C()
{
  sub_2331AA3B8();
  return sub_23361F428();
}

uint64_t sub_2331A9F84()
{
  sub_2331AA3B8();
  return sub_23361F434();
}

uint64_t sub_2331A9FAC()
{
  sub_2331AA3FC();
  return sub_23361F428();
}

uint64_t sub_2331A9FD4()
{
  sub_2331AA3FC();
  return sub_23361F434();
}

uint64_t BankConnectAuthorizationPayload.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560431D8);
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560431E0);
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23361D340();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BankConnectAuthorizationPayload(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560431E8);
  v11 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331AA374();
  sub_23361F410();
  sub_2331684BC(v31, (uint64_t)v10, type metadata accessor for BankConnectAuthorizationPayload);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = *v10;
    v35 = 1;
    sub_2331AA3B8();
    v15 = v27;
    v16 = v32;
    sub_23361F0C8();
    v33 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256048E80);
    sub_2331AA938((unint64_t *)&qword_256043200, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    v17 = v30;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = v24;
    v20 = v26;
    (*(void (**)(char *, uint64_t *, uint64_t))(v24 + 32))(v7, v10, v26);
    v34 = 0;
    sub_2331AA3FC();
    v21 = v32;
    sub_23361F0C8();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    v22 = v28;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v22);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  }
}

uint64_t type metadata accessor for BankConnectAuthorizationPayload(uint64_t a1)
{
  return sub_233177414(a1, qword_256043408);
}

unint64_t sub_2331AA374()
{
  unint64_t result;

  result = qword_2560431F0;
  if (!qword_2560431F0)
  {
    result = MEMORY[0x234934494](&unk_233627714, &type metadata for BankConnectAuthorizationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560431F0);
  }
  return result;
}

unint64_t sub_2331AA3B8()
{
  unint64_t result;

  result = qword_2560431F8;
  if (!qword_2560431F8)
  {
    result = MEMORY[0x234934494](&unk_2336276C4, &type metadata for BankConnectAuthorizationPayload.ExtensionParamsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560431F8);
  }
  return result;
}

unint64_t sub_2331AA3FC()
{
  unint64_t result;

  result = qword_256043208;
  if (!qword_256043208)
  {
    result = MEMORY[0x234934494](&unk_233627674, &type metadata for BankConnectAuthorizationPayload.RedirectURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043208);
  }
  return result;
}

uint64_t BankConnectAuthorizationPayload.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043210);
  v4 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v44 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043218);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043220);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BankConnectAuthorizationPayload(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v37 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v37 - v18;
  v20 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2331AA374();
  v21 = v49;
  sub_23361F3EC();
  if (v21)
    goto LABEL_7;
  v38 = v19;
  v39 = v17;
  v37 = v14;
  v22 = v46;
  v23 = v47;
  v49 = v11;
  v24 = sub_23361F098();
  v25 = v8;
  v26 = v10;
  if (*(_QWORD *)(v24 + 16) != 1)
  {
    v31 = sub_23361EE10();
    swift_allocError();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v33 = v49;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BEE26D0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
LABEL_7:
    v30 = (uint64_t)v48;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  if ((*(_BYTE *)(v24 + 32) & 1) != 0)
  {
    v52 = 1;
    sub_2331AA3B8();
    sub_23361EFA8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256048E80);
    sub_2331AA938(&qword_256043228, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    v27 = v43;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
    v28 = (uint64_t)v37;
    *v37 = v50;
    swift_storeEnumTagMultiPayload();
    v29 = (uint64_t)v38;
    sub_233168580(v28, (uint64_t)v38, type metadata accessor for BankConnectAuthorizationPayload);
    v30 = (uint64_t)v48;
  }
  else
  {
    v51 = 0;
    sub_2331AA3FC();
    sub_23361EFA8();
    sub_23361D340();
    sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    v35 = (uint64_t)v39;
    v36 = v42;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v25);
    v30 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    v29 = (uint64_t)v38;
    sub_233168580(v35, (uint64_t)v38, type metadata accessor for BankConnectAuthorizationPayload);
  }
  sub_233168580(v29, v40, type metadata accessor for BankConnectAuthorizationPayload);
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_2331AA938(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256048E80);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x234934494](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2331AA998@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankConnectAuthorizationPayload.init(from:)(a1, a2);
}

uint64_t sub_2331AA9AC(_QWORD *a1)
{
  return BankConnectAuthorizationPayload.encode(to:)(a1);
}

uint64_t BankConnectWebServiceCompleteConsentRequest.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BankConnectWebServiceCompleteConsentRequest.id.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.token.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BankConnectWebServiceCompleteConsentRequest.token.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.authorizationPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  return sub_2331684BC(v1 + *(int *)(v3 + 24), a1, type metadata accessor for BankConnectAuthorizationPayload);
}

uint64_t type metadata accessor for BankConnectWebServiceCompleteConsentRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_256043498);
}

uint64_t BankConnectWebServiceCompleteConsentRequest.authorizationPayload.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  return sub_2331AAB2C(a1, v1 + *(int *)(v3 + 24), type metadata accessor for BankConnectAuthorizationPayload);
}

uint64_t sub_2331AAB2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*BankConnectWebServiceCompleteConsentRequest.authorizationPayload.modify())()
{
  type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  return nullsub_1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.codeVerifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.codeVerifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BankConnectWebServiceCompleteConsentRequest.codeVerifier.modify())()
{
  type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  return nullsub_1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.fraudAssessment.getter()
{
  type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  return swift_retain();
}

uint64_t BankConnectWebServiceCompleteConsentRequest.fraudAssessment.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0) + 32);
  result = swift_release();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*BankConnectWebServiceCompleteConsentRequest.fraudAssessment.modify())()
{
  type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  return nullsub_1;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.init(id:token:authorizationPayload:codeVerifier:fraudAssessment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v14;
  uint64_t result;
  _QWORD *v16;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v14 = (int *)type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  result = sub_233168580(a5, (uint64_t)a9 + v14[6], type metadata accessor for BankConnectAuthorizationPayload);
  v16 = (_QWORD *)((char *)a9 + v14[7]);
  *v16 = a6;
  v16[1] = a7;
  *(_QWORD *)((char *)a9 + v14[8]) = a8;
  return result;
}

void *BankConnectWebServiceCompleteConsentRequest.pathComponents.getter()
{
  return &unk_250467CE8;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.jsonBody.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v31 = type metadata accessor for RawBankConnectData.CompleteConsentRequestBody(0);
  MEMORY[0x24BDAC7A8](v31);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BankConnectAuthorizationPayload(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - v11;
  v13 = sub_23361D340();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v15(v12, 1, 1, v13);
  v16 = (int *)type metadata accessor for BankConnectWebServiceCompleteConsentRequest(0);
  sub_2331684BC(v1 + v16[6], (uint64_t)v6, type metadata accessor for BankConnectAuthorizationPayload);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = *v6;
  }
  else
  {
    sub_233168608((uint64_t)v12, &qword_254248700);
    (*(void (**)(char *, uint64_t *, uint64_t))(v14 + 32))(v12, v6, v13);
    v15(v12, 0, 1, v13);
    v30 = 0;
  }
  sub_2331686A0((uint64_t)v12, (uint64_t)v10, &qword_254248700);
  v17 = v16[8];
  v18 = (uint64_t *)(v1 + v16[7]);
  v20 = *v18;
  v19 = v18[1];
  v21 = *(_QWORD *)(v1 + v17);
  v23 = *(_QWORD *)(v21 + 16);
  v22 = *(_QWORD *)(v21 + 24);
  v15(v3, 1, 1, v13);
  v24 = v31;
  v25 = *(int *)(v31 + 20);
  *(_QWORD *)&v3[v25] = 0;
  v26 = &v3[*(int *)(v24 + 28)];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2331AAFB8((uint64_t)v10, (uint64_t)v3);
  v27 = &v3[*(int *)(v24 + 24)];
  *(_QWORD *)v27 = v20;
  *((_QWORD *)v27 + 1) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)v26 = v23;
  *((_QWORD *)v26 + 1) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v3[v25] = v30;
  sub_233168580((uint64_t)v3, v32, type metadata accessor for RawBankConnectData.CompleteConsentRequestBody);
  return sub_233168608((uint64_t)v12, &qword_254248700);
}

uint64_t sub_2331AAFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t BankConnectWebServiceCompleteConsentRequest.makeAdditionalHTTPHeaderFields()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[7];

  v1 = sub_23361CAC4();
  v19 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v20[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v6 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  v20[3] = &type metadata for RawBankConnectData.InitiatedConsent;
  v20[4] = sub_2331AB220();
  v9 = (_QWORD *)swift_allocObject();
  v20[0] = v9;
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v7;
  v9[5] = v6;
  __swift_project_boxed_opaque_existential_1(v20, (uint64_t)&type metadata for RawBankConnectData.InitiatedConsent);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v1, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v3, v10, v1);
  sub_23361CADC();
  v11 = v20[6];
  v12 = sub_23361CAE8();
  v14 = v13;
  swift_release();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    *(_QWORD *)(v8 + 16) = 0;
    swift_release();
  }
  else
  {
    v15 = sub_23361D3B8();
    v17 = v16;
    sub_23316BEA4(v12, v14);
    *(_QWORD *)(v8 + 32) = 0x746E65736E6F43;
    *(_QWORD *)(v8 + 40) = 0xE700000000000000;
    *(_QWORD *)(v8 + 48) = v15;
    *(_QWORD *)(v8 + 56) = v17;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  return v8;
}

unint64_t sub_2331AB220()
{
  unint64_t result;

  result = qword_2560512C0;
  if (!qword_2560512C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InitiatedConsent, &type metadata for RawBankConnectData.InitiatedConsent);
    atomic_store(result, (unint64_t *)&qword_2560512C0);
  }
  return result;
}

uint64_t sub_2331AB264()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2331AB294()
{
  return BankConnectWebServiceCompleteConsentRequest.makeAdditionalHTTPHeaderFields()();
}

void *sub_2331AB2A8()
{
  return &unk_250467CE8;
}

void sub_2331AB2B4(int *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  _BYTE *v32;
  uint64_t *v33;
  uint64_t *v34;
  id v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  int *v77;
  void *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v90 = a1;
  v91 = a2;
  v89 = a4;
  v5 = type metadata accessor for FinanceNetworkError();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v84 - v9);
  v11 = sub_23361CA40();
  v94 = *(_QWORD *)(v11 - 8);
  v95 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RawBankConnectData.Consent(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v92 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v84 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v84 - v20;
  objc_opt_self();
  v22 = swift_dynamicCastObjCClass();
  if (!v22)
  {
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v34 = v33;
    *v33 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v34[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v34[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v35 = a3;
    swift_willThrow();
    return;
  }
  v23 = (void *)v22;
  v88 = v14;
  v24 = a3;
  v25 = objc_msgSend(v23, sel_statusCode);
  if (v25 != (id)200)
  {
    *v10 = v25;
    swift_storeEnumTagMultiPayload();
    v36 = (int *)type metadata accessor for BankConnectErrorWithConsent(0);
    sub_233167C58(&qword_256043648, type metadata accessor for BankConnectErrorWithConsent, (uint64_t)&protocol conformance descriptor for BankConnectErrorWithConsent);
    v37 = swift_allocError();
    v91 = v38;
    v92 = (char *)v37;
    v39 = v24;
    v40 = (void *)sub_23361E12C();
    v41 = objc_msgSend(v23, sel_valueForHTTPHeaderField_, v40);

    if (v41)
    {
      sub_23361E150();

      v42 = sub_23361D37C();
      v44 = v43;
      swift_bridgeObjectRelease();
      if (v44 >> 60 != 15)
      {
        v90 = v36;
        sub_23361CA70();
        swift_allocObject();
        sub_23361CA64();
        if (qword_256041BF0 != -1)
          swift_once();
        v66 = v95;
        v67 = __swift_project_value_buffer(v95, (uint64_t)qword_2560458E0);
        (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v13, v67, v66);
        sub_23361CA4C();
        sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
        v68 = v93;
        sub_23361CA58();
        if (!v68)
        {
          swift_release();
          sub_2331B04E8(v42, v44);

          v79 = v91;
          sub_233168580((uint64_t)v19, v91, type metadata accessor for RawBankConnectData.Consent);
          sub_233168580((uint64_t)v10, v79 + v90[5], (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
          swift_willThrow();

          return;
        }
        swift_release();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        v45 = (void *)swift_allocError();
        *v69 = v68;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_2331B04E8(v42, v44);
        v36 = v90;
LABEL_27:
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        sub_2331684BC((uint64_t)v10, v70, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
        swift_willThrow();

        sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
        v76 = (uint64_t)v92;
        v77 = v36;
        goto LABEL_31;
      }
      sub_2331B04A4();
      v45 = (void *)swift_allocError();
      *v46 = 3;
    }
    else
    {
      sub_2331B04A4();
      v45 = (void *)swift_allocError();
      *v48 = 0;
    }
    swift_willThrow();
    goto LABEL_27;
  }
  v87 = v24;
  v26 = (void *)sub_23361E12C();
  v27 = objc_msgSend(v23, sel_valueForHTTPHeaderField_, v26);

  if (!v27)
  {
    sub_2331B04A4();
    v31 = (void *)swift_allocError();
    *v47 = 0;
    goto LABEL_11;
  }
  sub_23361E150();

  v28 = sub_23361D37C();
  v30 = v29;
  swift_bridgeObjectRelease();
  if (v30 >> 60 == 15)
  {
    sub_2331B04A4();
    v31 = (void *)swift_allocError();
    *v32 = 3;
LABEL_11:
    swift_willThrow();
    goto LABEL_18;
  }
  v86 = v28;
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v49 = __swift_project_value_buffer(v95, (uint64_t)qword_2560458E0);
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
  v84 = v49;
  v85 = v50;
  ((void (*)(char *))v50)(v13);
  sub_23361CA4C();
  sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  v51 = v86;
  v52 = v93;
  sub_23361CA58();
  v93 = v52;
  if (v52)
  {
    swift_release();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    v31 = (void *)swift_allocError();
    *v53 = v93;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_2331B04E8(v51, v30);
  }
  else
  {
    swift_release();
    sub_2331B04E8(v51, v30);
    swift_allocObject();
    sub_23361CA64();
    v85(v13, v84, v95);
    sub_23361CA4C();
    sub_2331B04FC();
    v78 = (void *)v93;
    sub_23361CA58();
    if (!v78)
    {
      swift_release();

      v82 = v96;
      v83 = v89;
      sub_233168580((uint64_t)v21, v89, type metadata accessor for RawBankConnectData.Consent);
      *(_QWORD *)(v83 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256043660) + 36)) = v82;
      return;
    }
    sub_233168500((uint64_t)v21, type metadata accessor for RawBankConnectData.Consent);
    swift_release();
    v31 = v78;
  }
LABEL_18:
  *v8 = v31;
  swift_storeEnumTagMultiPayload();
  v54 = type metadata accessor for BankConnectErrorWithConsent(0);
  sub_233167C58(&qword_256043648, type metadata accessor for BankConnectErrorWithConsent, (uint64_t)&protocol conformance descriptor for BankConnectErrorWithConsent);
  v93 = v54;
  v91 = swift_allocError();
  v56 = v55;
  v90 = (int *)v87;
  v57 = v31;
  v58 = (void *)sub_23361E12C();
  v59 = objc_msgSend(v23, sel_valueForHTTPHeaderField_, v58);

  if (!v59)
  {
    sub_2331B04A4();
    v63 = (void *)swift_allocError();
    *v65 = 0;
    goto LABEL_22;
  }
  v89 = v56;
  sub_23361E150();

  v60 = sub_23361D37C();
  v62 = v61;
  swift_bridgeObjectRelease();
  if (v62 >> 60 == 15)
  {
    sub_2331B04A4();
    v63 = (void *)swift_allocError();
    *v64 = 3;
LABEL_22:
    swift_willThrow();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    sub_2331684BC((uint64_t)v8, v74, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    swift_willThrow();

    v75 = v90;
    sub_233168500((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);

    v76 = v91;
    v77 = (int *)v93;
LABEL_31:
    MEMORY[0x2349342D8](v76, v77);
    return;
  }
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v71 = v95;
  v72 = __swift_project_value_buffer(v95, (uint64_t)qword_2560458E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v13, v72, v71);
  sub_23361CA4C();
  sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  v73 = (uint64_t)v92;
  sub_23361CA58();
  swift_release();
  sub_2331B04E8(v60, v62);
  v80 = v90;

  v81 = v89;
  sub_233168580(v73, v89, type metadata accessor for RawBankConnectData.Consent);
  sub_233168580((uint64_t)v8, v81 + *(int *)(v93 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
  swift_willThrow();

}

uint64_t (*BankConnectWebServiceRevokeConsentRequest.consent.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceRevokeConsentRequest.fpanIDs.getter()
{
  type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServiceRevokeConsentRequest.fpanIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0) + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*BankConnectWebServiceRevokeConsentRequest.fpanIDs.modify())()
{
  type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0);
  return nullsub_1;
}

uint64_t BankConnectWebServiceRevokeConsentRequest.init(consent:fpanIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = *(int *)(type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0) + 20);
  result = sub_233168580(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  *(_QWORD *)(a3 + v6) = a2;
  return result;
}

void *BankConnectWebServiceRevokeConsentRequest.pathComponents.getter()
{
  return &unk_250467C98;
}

uint64_t BankConnectWebServiceRevokeConsentRequest.jsonBody.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0) + 20));
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23319C29C();
    result = sub_23361E0D8();
  }
  else
  {
    result = 0;
    v5 = 0;
  }
  *a1 = result;
  a1[1] = v5;
  return result;
}

_QWORD *BankConnectWebServiceRevokeConsentRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_2331AC150();
}

uint64_t sub_2331AC010@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + *(int *)(a1 + 20));
  if (v4 && *(_QWORD *)(v4 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23319C29C();
    result = sub_23361E0D8();
  }
  else
  {
    result = 0;
    v6 = 0;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

_QWORD *sub_2331AC090()
{
  return BankConnectWebServiceConsentStatusRequest.makeHTTPHeaderFields()();
}

void *sub_2331AC0A4()
{
  return &unk_250467C98;
}

uint64_t BankConnectWebServiceConsentStatusRequest.consent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
}

uint64_t BankConnectWebServiceConsentStatusRequest.consent.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2331AAB2C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
}

uint64_t (*BankConnectWebServiceConsentStatusRequest.consent.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServiceConsentStatusRequest.init(consent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233168580(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
}

void *BankConnectWebServiceConsentStatusRequest.pathComponents.getter()
{
  return &unk_250467C48;
}

void BankConnectWebServiceConsentStatusRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

_QWORD *BankConnectWebServiceConsentStatusRequest.makeHTTPHeaderFields()()
{
  return sub_2331AC150();
}

_QWORD *sub_2331AC150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t *boxed_opaque_existential_0;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  int *v35;
  uint64_t v36;
  uint64_t v37;

  v1 = sub_23361CAC4();
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v30 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_233623D60;
  v3 = (int *)type metadata accessor for BankConnectConsent();
  v4 = v3[6];
  v5 = (uint64_t *)(v0 + v3[5]);
  v6 = v5[1];
  v29 = *v5;
  v7 = v0 + v4;
  v8 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  v35 = v8;
  v36 = sub_233167C58(&qword_256043230, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
  v10 = (char *)boxed_opaque_existential_0 + v8[5];
  v11 = sub_23361D634();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v10, v7, v11);
  v12((char *)boxed_opaque_existential_0 + v8[6], v0 + v3[7], v11);
  v13 = *(_QWORD *)(v0 + v3[9]);
  v14 = (uint64_t *)(v0 + v3[10]);
  v15 = *v14;
  v16 = v14[1];
  *boxed_opaque_existential_0 = v29;
  boxed_opaque_existential_0[1] = v6;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]) = v13;
  v17 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[8]);
  *v17 = v15;
  v17[1] = v16;
  __swift_project_boxed_opaque_existential_1(v34, (uint64_t)v35);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v18 = v32;
  v19 = __swift_project_value_buffer(v32, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v19, v18);
  sub_23361CADC();
  v20 = v33;
  v21 = sub_23361CAE8();
  v23 = v22;
  swift_release();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    v24 = (_QWORD *)v37;
    *(_QWORD *)(v37 + 16) = 0;
    swift_release();
  }
  else
  {
    v25 = sub_23361D3B8();
    v27 = v26;
    sub_23316BEA4(v21, v23);
    v24 = (_QWORD *)v37;
    *(_QWORD *)(v37 + 32) = 0x746E65736E6F43;
    v24[5] = 0xE700000000000000;
    v24[6] = v25;
    v24[7] = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  }
  return v24;
}

void *sub_2331AC408()
{
  return &unk_250467C48;
}

void sub_2331AC414(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  _BYTE *v49;
  uint64_t *v50;
  uint64_t *v51;
  id v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void (*v75)(_QWORD, _QWORD, _QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void *v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  void *v85;
  _BYTE *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  void *v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  void *v97;
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  void (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  id v131;
  void *v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  void *v137;
  _BYTE *v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(_QWORD, _QWORD, _QWORD);
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(_QWORD, _QWORD, _QWORD);
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  void *v162;
  void (*v163)(char *, uint64_t, uint64_t);
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char v171;
  char v172;

  v157 = a1;
  v158 = a2;
  v152 = a4;
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v169 = (char *)&v151 - v13;
  v14 = type metadata accessor for FinanceNetworkError();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v161 = (uint64_t *)((char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v163 = (void (*)(char *, uint64_t, uint64_t))((char *)&v151 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v159 = (uint64_t)&v151 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v164 = (char *)&v151 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (uint64_t *)((char *)&v151 - v24);
  MEMORY[0x24BDAC7A8](v23);
  v165 = (char *)&v151 - v26;
  v27 = sub_23361CA40();
  v166 = *(_QWORD *)(v27 - 8);
  v167 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v168 = (char *)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for RawBankConnectData.Consent(0);
  v29 = MEMORY[0x24BDAC7A8](v160);
  v153 = (char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v154 = (char *)&v151 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v155 = (char *)&v151 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v156 = (char *)&v151 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v151 - v37;
  objc_opt_self();
  v39 = swift_dynamicCastObjCClass();
  if (!v39)
  {
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v51 = v50;
    *v50 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v51[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v51[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v52 = a3;
    swift_willThrow();
    return;
  }
  v40 = (char *)v39;
  v170 = v14;
  v41 = a3;
  v42 = objc_msgSend(v40, sel_statusCode);
  if (v42 == (id)429)
  {
    v53 = v41;
    v54 = (uint64_t)v169;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v169, 1, 1, v5);
    v55 = (void *)sub_23361E12C();
    v56 = objc_msgSend(v40, sel_valueForHTTPHeaderField_, v55);

    if (v56)
    {
      v57 = sub_23361E150();
      v59 = v58;

      sub_23361D5F8();
      sub_2332C5200(v57, v59, (uint64_t)v8, v12);
      v54 = (uint64_t)v169;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_233168608(v54, (uint64_t *)&unk_254247DA0);
      sub_2331B05C8((uint64_t)v12, v54);
    }
    v60 = v159;
    sub_2331686A0(v54, v159, (uint64_t *)&unk_254247DA0);
    swift_storeEnumTagMultiPayload();
    v61 = type metadata accessor for BankConnectErrorWithConsent(0);
    sub_233167C58(&qword_256043648, type metadata accessor for BankConnectErrorWithConsent, (uint64_t)&protocol conformance descriptor for BankConnectErrorWithConsent);
    v165 = (char *)swift_allocError();
    v63 = v62;
    v64 = v53;
    v65 = (void *)sub_23361E12C();
    v66 = objc_msgSend(v40, sel_valueForHTTPHeaderField_, v65);

    if (v66)
    {
      sub_23361E150();

      v67 = sub_23361D37C();
      v69 = v68;
      swift_bridgeObjectRelease();
      if (v69 >> 60 != 15)
      {
        sub_23361CA70();
        swift_allocObject();
        sub_23361CA64();
        if (qword_256041BF0 != -1)
          swift_once();
        v108 = v167;
        v109 = __swift_project_value_buffer(v167, (uint64_t)qword_2560458E0);
        (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v168, v109, v108);
        sub_23361CA4C();
        sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
        v110 = (uint64_t)v155;
        v111 = (uint64_t)v162;
        sub_23361CA58();
        if (!v111)
        {
          swift_release();
          sub_2331B04E8(v67, v69);

          sub_233168580(v110, v63, type metadata accessor for RawBankConnectData.Consent);
          sub_233168580(v159, v63 + *(int *)(v61 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
          swift_willThrow();

          sub_233168608((uint64_t)v169, (uint64_t *)&unk_254247DA0);
          return;
        }
        swift_release();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        v70 = (void *)swift_allocError();
        *v112 = v111;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_2331B04E8(v67, v69);
        v60 = v159;
        goto LABEL_41;
      }
      sub_2331B04A4();
      v70 = (void *)swift_allocError();
      *v71 = 3;
    }
    else
    {
      sub_2331B04A4();
      v70 = (void *)swift_allocError();
      *v100 = 0;
    }
    swift_willThrow();
LABEL_41:
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    sub_2331684BC(v60, v113, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    swift_willThrow();

    sub_233168500(v60, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    sub_233168608((uint64_t)v169, (uint64_t *)&unk_254247DA0);

    v114 = v165;
    v115 = v61;
    goto LABEL_60;
  }
  if (v42 == (id)403)
  {
    v169 = v40;
    sub_23361CA70();
    swift_allocObject();
    sub_23361CA64();
    if (qword_256041BF0 != -1)
      swift_once();
    v72 = v167;
    v73 = __swift_project_value_buffer(v167, (uint64_t)qword_2560458E0);
    v163 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
    v163(v168, v73, v72);
    sub_23361CA4C();
    sub_2331B0610();
    v74 = v162;
    sub_23361CA58();
    if (v74)
    {

      swift_release();
    }
    else
    {
      swift_release();
      if (v172 == 1)
        goto LABEL_19;
      if (v172 == 2)
      {
        sub_2331B0654();
        *v25 = swift_allocError();
        goto LABEL_19;
      }
    }
    *v25 = 403;
LABEL_19:
    swift_storeEnumTagMultiPayload();
    v75 = (void (*)(_QWORD, _QWORD, _QWORD))v165;
    sub_233168580((uint64_t)v25, (uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    sub_2331684BC((uint64_t)v75, (uint64_t)v164, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    v76 = type metadata accessor for BankConnectErrorWithConsent(0);
    sub_233167C58(&qword_256043648, type metadata accessor for BankConnectErrorWithConsent, (uint64_t)&protocol conformance descriptor for BankConnectErrorWithConsent);
    v166 = v76;
    v77 = swift_allocError();
    v162 = (void *)v78;
    v79 = v41;
    v80 = (void *)sub_23361E12C();
    v81 = objc_msgSend(v169, sel_valueForHTTPHeaderField_, v80);

    if (v81)
    {
      sub_23361E150();

      v82 = sub_23361D37C();
      v84 = v83;
      swift_bridgeObjectRelease();
      if (v84 >> 60 != 15)
      {
        swift_allocObject();
        sub_23361CA64();
        v163(v168, v73, v167);
        sub_23361CA4C();
        sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
        v116 = (uint64_t)v156;
        sub_23361CA58();
        swift_release();
        sub_2331B04E8(v82, v84);

        v147 = (uint64_t)v162;
        sub_233168580(v116, (uint64_t)v162, type metadata accessor for RawBankConnectData.Consent);
        sub_233168580((uint64_t)v164, v147 + *(int *)(v166 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
        swift_willThrow();

        sub_233168500((uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
        return;
      }
      sub_2331B04A4();
      v85 = (void *)swift_allocError();
      *v86 = 3;
      swift_willThrow();
    }
    else
    {
      sub_2331B04A4();
      v85 = (void *)swift_allocError();
      *v101 = 0;
      swift_willThrow();
    }
    v117 = v166;
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v118 = (uint64_t)v164;
    sub_2331684BC((uint64_t)v164, v119, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    swift_willThrow();

    sub_233168500(v118, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    sub_233168500((uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);

    v114 = (char *)v77;
    v115 = v117;
    goto LABEL_60;
  }
  if (v42 != (id)200)
  {
    *(_QWORD *)v163 = v42;
    swift_storeEnumTagMultiPayload();
    v87 = type metadata accessor for BankConnectErrorWithConsent(0);
    sub_233167C58(&qword_256043648, type metadata accessor for BankConnectErrorWithConsent, (uint64_t)&protocol conformance descriptor for BankConnectErrorWithConsent);
    v88 = (char *)swift_allocError();
    v90 = v89;
    v91 = v41;
    v92 = (void *)sub_23361E12C();
    v93 = objc_msgSend(v40, sel_valueForHTTPHeaderField_, v92);

    if (v93)
    {
      v169 = v88;
      sub_23361E150();

      v94 = sub_23361D37C();
      v96 = v95;
      swift_bridgeObjectRelease();
      if (v96 >> 60 == 15)
      {
        sub_2331B04A4();
        v97 = (void *)swift_allocError();
        *v98 = 3;
        swift_willThrow();
        v88 = v169;
      }
      else
      {
        v165 = v90;
        sub_23361CA70();
        swift_allocObject();
        sub_23361CA64();
        if (qword_256041BF0 != -1)
          swift_once();
        v120 = v167;
        v121 = __swift_project_value_buffer(v167, (uint64_t)qword_2560458E0);
        (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v168, v121, v120);
        sub_23361CA4C();
        sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
        v122 = (uint64_t)v154;
        v123 = (uint64_t)v162;
        sub_23361CA58();
        v88 = v169;
        if (!v123)
        {
          swift_release();
          sub_2331B04E8(v94, v96);

          v148 = (void (*)(_QWORD, _QWORD, _QWORD))v165;
          sub_233168580(v122, (uint64_t)v165, type metadata accessor for RawBankConnectData.Consent);
          sub_233168580((uint64_t)v163, (uint64_t)v148 + *(int *)(v87 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
          swift_willThrow();

          return;
        }
        swift_release();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        v97 = (void *)swift_allocError();
        *v124 = v123;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_2331B04E8(v94, v96);
      }
    }
    else
    {
      sub_2331B04A4();
      v97 = (void *)swift_allocError();
      *v102 = 0;
      swift_willThrow();
    }
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v125 = v163;
    sub_2331684BC((uint64_t)v163, v126, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    swift_willThrow();

    sub_233168500((uint64_t)v125, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    v114 = v88;
    v115 = v87;
LABEL_60:
    MEMORY[0x2349342D8](v114, v115);
    return;
  }
  v43 = (void *)sub_23361E12C();
  v44 = objc_msgSend(v40, sel_valueForHTTPHeaderField_, v43);

  if (v44)
  {
    sub_23361E150();

    v45 = sub_23361D37C();
    v47 = v46;
    swift_bridgeObjectRelease();
    if (v47 >> 60 == 15)
    {
      sub_2331B04A4();
      v48 = (void *)swift_allocError();
      *v49 = 3;
      swift_willThrow();
      v165 = 0;
    }
    else
    {
      v164 = v41;
      v169 = v40;
      sub_23361CA70();
      swift_allocObject();
      sub_23361CA64();
      if (qword_256041BF0 != -1)
        swift_once();
      v103 = v167;
      v104 = __swift_project_value_buffer(v167, (uint64_t)qword_2560458E0);
      v105 = v168;
      v165 = *(char **)(v166 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v165)(v168, v104, v103);
      sub_23361CA4C();
      sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
      v106 = (uint64_t)v162;
      sub_23361CA58();
      if (!v106)
      {
        swift_release();
        sub_2331B04E8(v45, v47);
        swift_allocObject();
        sub_23361CA64();
        ((void (*)(char *, uint64_t, uint64_t))v165)(v105, v104, v103);
        sub_23361CA4C();
        sub_2331B0698();
        sub_23361CA58();
        swift_release();

        v149 = v171;
        v150 = v152;
        sub_233168580((uint64_t)v38, v152, type metadata accessor for RawBankConnectData.Consent);
        *(_BYTE *)(v150 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256043688) + 36)) = v149;
        return;
      }
      swift_release();
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      v48 = (void *)swift_allocError();
      *v107 = v106;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_2331B04E8(v45, v47);
      v165 = 0;
      v40 = v169;
      v41 = v164;
    }
  }
  else
  {
    sub_2331B04A4();
    v48 = (void *)swift_allocError();
    *v99 = 0;
    swift_willThrow();
    v165 = 0;
  }
  *v161 = v48;
  swift_storeEnumTagMultiPayload();
  v127 = type metadata accessor for BankConnectErrorWithConsent(0);
  sub_233167C58(&qword_256043648, type metadata accessor for BankConnectErrorWithConsent, (uint64_t)&protocol conformance descriptor for BankConnectErrorWithConsent);
  v169 = (char *)swift_allocError();
  v129 = v128;
  v130 = v41;
  v131 = v48;
  v132 = (void *)sub_23361E12C();
  v133 = objc_msgSend(v40, sel_valueForHTTPHeaderField_, v132);

  if (!v133)
  {
    sub_2331B04A4();
    v137 = (void *)swift_allocError();
    *v139 = 0;
    swift_willThrow();
    goto LABEL_59;
  }
  sub_23361E150();

  v134 = sub_23361D37C();
  v136 = v135;
  swift_bridgeObjectRelease();
  if (v136 >> 60 == 15)
  {
    sub_2331B04A4();
    v137 = (void *)swift_allocError();
    *v138 = 3;
    swift_willThrow();
LABEL_59:
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v145 = v161;
    sub_2331684BC((uint64_t)v161, v146, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    swift_willThrow();

    sub_233168500((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    v114 = v169;
    v115 = v127;
    goto LABEL_60;
  }
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v140 = v167;
  v141 = __swift_project_value_buffer(v167, (uint64_t)qword_2560458E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v168, v141, v140);
  sub_23361CA4C();
  sub_233167C58(&qword_256057030, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  v142 = (uint64_t)v153;
  v143 = (void (*)(_QWORD, _QWORD, _QWORD))v165;
  sub_23361CA58();
  if (v143)
  {
    swift_release();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    v137 = (void *)swift_allocError();
    *v144 = v143;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_2331B04E8(v134, v136);
    goto LABEL_59;
  }
  swift_release();
  sub_2331B04E8(v134, v136);

  sub_233168580(v142, v129, type metadata accessor for RawBankConnectData.Consent);
  sub_233168580((uint64_t)v161, v129 + *(int *)(v127 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
  swift_willThrow();

}

uint64_t type metadata accessor for BankConnectWebServiceRevokeConsentRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_256043538);
}

unint64_t sub_2331ADA8C()
{
  unint64_t result;

  result = qword_256043238;
  if (!qword_256043238)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InitiateConsentRequestBody, &type metadata for RawBankConnectData.InitiateConsentRequestBody);
    atomic_store(result, (unint64_t *)&qword_256043238);
  }
  return result;
}

uint64_t sub_2331ADAD0()
{
  return sub_233167C58(&qword_256043278, type metadata accessor for RawBankConnectData.CompleteConsentRequestBody, (uint64_t)&protocol conformance descriptor for RawBankConnectData.CompleteConsentRequestBody);
}

unint64_t sub_2331ADB00()
{
  unint64_t result;

  result = qword_2560512A0;
  if (!qword_2560512A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.RevokeConsentRequestBody, &type metadata for RawBankConnectData.RevokeConsentRequestBody);
    atomic_store(result, (unint64_t *)&qword_2560512A0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectWebServiceInitiateConsentRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = *(int *)(a3 + 40);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[10] = a2[10];
    v13 = type metadata accessor for BankConnectAuthorizationConfiguration();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = sub_23361D6A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v3;
}

uint64_t destroy for BankConnectWebServiceInitiateConsentRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  type metadata accessor for BankConnectAuthorizationConfiguration();
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v6 = sub_23361D6A0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  return result;
}

_QWORD *initializeWithCopy for BankConnectWebServiceInitiateConsentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = *(int *)(a3 + 40);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[10] = a2[10];
  v12 = type metadata accessor for BankConnectAuthorizationConfiguration();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_23361D6A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for BankConnectWebServiceInitiateConsentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 40);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_233168500((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
    v9 = type metadata accessor for BankConnectAuthorizationConfiguration();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = sub_23361D6A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t initializeWithTake for BankConnectWebServiceInitiateConsentRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 40);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = type metadata accessor for BankConnectAuthorizationConfiguration();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for BankConnectWebServiceInitiateConsentRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 40);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_233168500((uint64_t)a1 + v11, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
    v14 = type metadata accessor for BankConnectAuthorizationConfiguration();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = sub_23361D6A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceInitiateConsentRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AE2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BankConnectAuthorizationConfiguration();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceInitiateConsentRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AE330(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BankConnectAuthorizationConfiguration();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2331AE3A4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BankConnectAuthorizationConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectAuthorizationPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = sub_23361D340();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BankConnectAuthorizationPayload(uint64_t a1)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_bridgeObjectRelease();
  v3 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *initializeWithCopy for BankConnectAuthorizationPayload(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = sub_23361D340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for BankConnectAuthorizationPayload(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, type metadata accessor for BankConnectAuthorizationPayload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = sub_23361D340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for BankConnectAuthorizationPayload(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23361D340();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for BankConnectAuthorizationPayload(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, type metadata accessor for BankConnectAuthorizationPayload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23361D340();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2331AE79C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectWebServiceCompleteConsentRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    type metadata accessor for BankConnectAuthorizationPayload(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v10 = *v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = sub_23361D340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    }
    swift_storeEnumTagMultiPayload();
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for BankConnectWebServiceCompleteConsentRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for BankConnectAuthorizationPayload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_23361D340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for BankConnectWebServiceCompleteConsentRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  type metadata accessor for BankConnectAuthorizationPayload(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v9 = *v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = sub_23361D340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BankConnectWebServiceCompleteConsentRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_233168500((uint64_t)a1 + v6, type metadata accessor for BankConnectAuthorizationPayload);
    type metadata accessor for BankConnectAuthorizationPayload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = sub_23361D340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for BankConnectWebServiceCompleteConsentRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for BankConnectAuthorizationPayload(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_23361D340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *assignWithTake for BankConnectWebServiceCompleteConsentRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_233168500((uint64_t)a1 + v8, type metadata accessor for BankConnectAuthorizationPayload);
    v11 = type metadata accessor for BankConnectAuthorizationPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v12 = sub_23361D340();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceCompleteConsentRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AEDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BankConnectAuthorizationPayload(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceCompleteConsentRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AEE70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BankConnectAuthorizationPayload(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2331AEEE4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BankConnectAuthorizationPayload(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t assignWithCopy for BankConnectWebServiceRevokeConsentRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v6[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v15((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v13);
  v16 = v6[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19((const void *)(a1 + v16), 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v23 = v6[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v15((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v13);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BankConnectWebServiceRevokeConsentRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(const void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = v6[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v17((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v15);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21((const void *)(a1 + v18), 1, v15);
  v23 = v21(v20, 1, v15);
  if (!v22)
  {
    if (!v23)
    {
      v17(v19, v20, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v19, v20, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v25 = v6[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v17((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v15);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceRevokeConsentRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AF37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for BankConnectConsent();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceRevokeConsentRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AF410(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BankConnectConsent();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_2331AF488()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BankConnectConsent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceRevokeConsentResponse()
{
  return &type metadata for BankConnectWebServiceRevokeConsentResponse;
}

char *initializeBufferWithCopyOfBuffer for BankConnectWebServiceConsentStatusRequest(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v4 = type metadata accessor for BankConnectConsent();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_23361D6A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    v12 = v6[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_23361D634();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v15);
    v17(&a1[v6[7]], &a2[v6[7]], v15);
    v18 = v6[8];
    v19 = &a1[v18];
    v20 = &a2[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&a2[v18], 1, v15))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    v23 = v6[10];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    a1[v6[11]] = a2[v6[11]];
    v27 = v6[12];
    v28 = &a1[v27];
    v29 = &a2[v27];
    swift_bridgeObjectRetain();
    v17(v28, v29, v15);
  }
  return a1;
}

uint64_t destroy for BankConnectWebServiceConsentStatusRequest(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v2 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for BankConnectConsent();
  swift_bridgeObjectRelease();
  v4 = a1 + v3[6];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v9(a1 + v3[7], v5);
  v7 = a1 + v3[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    v9(v7, v5);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + v3[12], v5);
}

uint64_t initializeWithCopy for BankConnectWebServiceConsentStatusRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankConnectConsent();
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = v5[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v13);
  v15((void *)(a1 + v5[7]), (const void *)(a2 + v5[7]), v13);
  v16 = v5[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2 + v16, 1, v13))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v20 = v5[10];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_BYTE *)(a1 + v5[11]) = *(_BYTE *)(a2 + v5[11]);
  v24 = v5[12];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  swift_bridgeObjectRetain();
  v15(v25, v26, v13);
  return a1;
}

uint64_t assignWithCopy for BankConnectWebServiceConsentStatusRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t (*v18)(const void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankConnectConsent();
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = v5[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  v14((void *)(a1 + v5[7]), (const void *)(a2 + v5[7]), v12);
  v15 = v5[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  v19 = v18((const void *)(a1 + v15), 1, v12);
  v20 = v18(v17, 1, v12);
  if (!v19)
  {
    if (!v20)
    {
      v14(v16, v17, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
LABEL_7:
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v22 = v5[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[11]) = *(_BYTE *)(a2 + v5[11]);
  v14((void *)(a1 + v5[12]), (const void *)(a2 + v5[12]), v12);
  return a1;
}

uint64_t initializeWithTake for BankConnectWebServiceConsentStatusRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankConnectConsent();
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  v6 = v5[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11((void *)(a1 + v5[7]), (const void *)(a2 + v5[7]), v9);
  v12 = v5[8];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  *(_OWORD *)(a1 + v5[10]) = *(_OWORD *)(a2 + v5[10]);
  *(_BYTE *)(a1 + v5[11]) = *(_BYTE *)(a2 + v5[11]);
  v11((void *)(a1 + v5[12]), (const void *)(a2 + v5[12]), v9);
  return a1;
}

uint64_t assignWithTake for BankConnectWebServiceConsentStatusRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void *, const void *, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t (*v20)(const void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BankConnectConsent();
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v10 = *v8;
  v9 = v8[1];
  *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v11 = v5[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  v16((void *)(a1 + v5[7]), (const void *)(a2 + v5[7]), v14);
  v17 = v5[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  v21 = v20((const void *)(a1 + v17), 1, v14);
  v22 = v20(v19, 1, v14);
  if (!v21)
  {
    if (!v22)
    {
      v16(v18, v19, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
LABEL_7:
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v24 = v5[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[11]) = *(_BYTE *)(a2 + v5[11]);
  v16((void *)(a1 + v5[12]), (const void *)(a2 + v5[12]), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceConsentStatusRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AFE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectConsent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceConsentStatusRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331AFEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BankConnectConsent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BankConnectWebServiceConsentStatusRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_2560435C8);
}

uint64_t sub_2331AFF0C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BankConnectConsent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BankConnectAuthorizationPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331AFFC0 + 4 * byte_233627135[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331AFFF4 + 4 * asc_233627130[v4]))();
}

uint64_t sub_2331AFFF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331AFFFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331B0004);
  return result;
}

uint64_t sub_2331B0010(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331B0018);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331B001C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B0024(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationPayload.CodingKeys()
{
  return &type metadata for BankConnectAuthorizationPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationPayload.RedirectURLCodingKeys()
{
  return &type metadata for BankConnectAuthorizationPayload.RedirectURLCodingKeys;
}

uint64_t _s10FinanceKit31BankConnectAuthorizationPayloadO21RedirectURLCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2331B0094 + 4 * byte_23362713A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2331B00B4 + 4 * byte_23362713F[v4]))();
}

_BYTE *sub_2331B0094(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2331B00B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331B00BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331B00C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331B00CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331B00D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationPayload.ExtensionParamsCodingKeys()
{
  return &type metadata for BankConnectAuthorizationPayload.ExtensionParamsCodingKeys;
}

unint64_t sub_2331B00F4()
{
  unint64_t result;

  result = qword_256043600;
  if (!qword_256043600)
  {
    result = MEMORY[0x234934494](&unk_2336274DC, &type metadata for BankConnectAuthorizationPayload.ExtensionParamsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043600);
  }
  return result;
}

unint64_t sub_2331B013C()
{
  unint64_t result;

  result = qword_256043608;
  if (!qword_256043608)
  {
    result = MEMORY[0x234934494](&unk_233627594, &type metadata for BankConnectAuthorizationPayload.RedirectURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043608);
  }
  return result;
}

unint64_t sub_2331B0184()
{
  unint64_t result;

  result = qword_256043610;
  if (!qword_256043610)
  {
    result = MEMORY[0x234934494](&unk_23362764C, &type metadata for BankConnectAuthorizationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043610);
  }
  return result;
}

unint64_t sub_2331B01CC()
{
  unint64_t result;

  result = qword_256043618;
  if (!qword_256043618)
  {
    result = MEMORY[0x234934494](&unk_233627504, &type metadata for BankConnectAuthorizationPayload.RedirectURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043618);
  }
  return result;
}

unint64_t sub_2331B0214()
{
  unint64_t result;

  result = qword_256043620;
  if (!qword_256043620)
  {
    result = MEMORY[0x234934494](&unk_23362752C, &type metadata for BankConnectAuthorizationPayload.RedirectURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043620);
  }
  return result;
}

unint64_t sub_2331B025C()
{
  unint64_t result;

  result = qword_256043628;
  if (!qword_256043628)
  {
    result = MEMORY[0x234934494](&unk_23362744C, &type metadata for BankConnectAuthorizationPayload.ExtensionParamsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043628);
  }
  return result;
}

unint64_t sub_2331B02A4()
{
  unint64_t result;

  result = qword_256043630;
  if (!qword_256043630)
  {
    result = MEMORY[0x234934494](&unk_233627474, &type metadata for BankConnectAuthorizationPayload.ExtensionParamsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043630);
  }
  return result;
}

unint64_t sub_2331B02EC()
{
  unint64_t result;

  result = qword_256043638;
  if (!qword_256043638)
  {
    result = MEMORY[0x234934494](&unk_2336275BC, &type metadata for BankConnectAuthorizationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043638);
  }
  return result;
}

unint64_t sub_2331B0334()
{
  unint64_t result;

  result = qword_256043640;
  if (!qword_256043640)
  {
    result = MEMORY[0x234934494](&unk_2336275E4, &type metadata for BankConnectAuthorizationPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043640);
  }
  return result;
}

uint64_t sub_2331B0378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7463657269646572 && a2 == 0xEB000000004C5255;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69736E65747865 && a2 == 0xEF736D617261506ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2331B04A4()
{
  unint64_t result;

  result = qword_256043650;
  if (!qword_256043650)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectWebServiceError, &type metadata for BankConnectWebServiceError);
    atomic_store(result, (unint64_t *)&qword_256043650);
  }
  return result;
}

uint64_t sub_2331B04E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23316BEA4(a1, a2);
  return a1;
}

unint64_t sub_2331B04FC()
{
  unint64_t result;

  result = qword_256043658;
  if (!qword_256043658)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.CompleteConsentResponse, &type metadata for RawBankConnectData.CompleteConsentResponse);
    atomic_store(result, (unint64_t *)&qword_256043658);
  }
  return result;
}

unint64_t sub_2331B0540()
{
  unint64_t result;

  result = qword_256043668;
  if (!qword_256043668)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InitiatedConsent, &type metadata for RawBankConnectData.InitiatedConsent);
    atomic_store(result, (unint64_t *)&qword_256043668);
  }
  return result;
}

unint64_t sub_2331B0584()
{
  unint64_t result;

  result = qword_256043670;
  if (!qword_256043670)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InitiateConsentResponse, &type metadata for RawBankConnectData.InitiateConsentResponse);
    atomic_store(result, (unint64_t *)&qword_256043670);
  }
  return result;
}

uint64_t sub_2331B05C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2331B0610()
{
  unint64_t result;

  result = qword_256057500;
  if (!qword_256057500)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ErrorResponse, &type metadata for RawBankConnectData.ErrorResponse);
    atomic_store(result, (unint64_t *)&qword_256057500);
  }
  return result;
}

unint64_t sub_2331B0654()
{
  unint64_t result;

  result = qword_256043678;
  if (!qword_256043678)
  {
    result = MEMORY[0x234934494](&unk_233664620, &type metadata for BankConnectNetworkError);
    atomic_store(result, (unint64_t *)&qword_256043678);
  }
  return result;
}

unint64_t sub_2331B0698()
{
  unint64_t result;

  result = qword_256043680;
  if (!qword_256043680)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.ConsentStatusResponse, &type metadata for RawBankConnectData.ConsentStatusResponse);
    atomic_store(result, (unint64_t *)&qword_256043680);
  }
  return result;
}

uint64_t sub_2331B0704(unint64_t a1, SEL *a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_23361EF30())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v9 = objc_msgSend(v6, *a2);

      if (v9)
      {
        MEMORY[0x234932730]();
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23361E414();
        sub_23361E438();
        sub_23361E408();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

char *sub_2331B0880(unint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  unsigned __int16 v10;
  unint64_t v11;
  unint64_t v12;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23361EF30())
  {
    v3 = (char *)MEMORY[0x24BEE4AF8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x234933120](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_fallbackCategoryValue);
      if (v8)
      {
        v9 = v8;
        v10 = (unsigned __int16)objc_msgSend(v8, sel_shortValue);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_2334A4CF8(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
        v12 = *((_QWORD *)v3 + 2);
        v11 = *((_QWORD *)v3 + 3);
        if (v12 >= v11 >> 1)
          v3 = sub_2334A4CF8((char *)(v11 > 1), v12 + 1, 1, v3);
        *((_QWORD *)v3 + 2) = v12 + 1;
        *(_WORD *)&v3[2 * v12 + 32] = v10;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (char *)MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

void sub_2331B0A10(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_updatedAt);
  sub_23361D5EC();

}

void sub_2331B0A5C(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setUpdatedAt_, v3);

}

uint64_t sub_2331B0AA4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_earliestRetryDate);
  if (v3)
  {
    v4 = v3;
    sub_23361D5EC();

    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_23361D634();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2331B0B28(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23319F164(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setEarliestRetryDate_, v10);

}

void ManagedMapsTransactionInsight.fallbackCategory.getter(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  unsigned __int16 v5;

  v3 = objc_msgSend(v1, sel_fallbackCategoryValue);
  v4 = v3;
  if (v3)
  {
    v5 = (unsigned __int16)objc_msgSend(v3, sel_shortValue);

  }
  else
  {
    v5 = 0;
  }
  *(_WORD *)a1 = v5;
  *(_BYTE *)(a1 + 2) = v4 == 0;
}

void sub_2331B0C78(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  unsigned __int16 v5;

  v3 = objc_msgSend(*a1, sel_fallbackCategoryValue);
  v4 = v3;
  if (v3)
  {
    v5 = (unsigned __int16)objc_msgSend(v3, sel_shortValue);

  }
  else
  {
    v5 = 0;
  }
  *(_WORD *)a2 = v5;
  *(_BYTE *)(a2 + 2) = v4 == 0;
}

void sub_2331B0CEC(__int16 *a1, void **a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a2;
  if ((a1[1] & 1) != 0)
    v3 = 0;
  else
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *a1);
  v4 = v3;
  objc_msgSend(v2, sel_setFallbackCategoryValue_);

}

void ManagedMapsTransactionInsight.fallbackCategory.setter(__int16 *a1)
{
  void *v1;
  id v2;
  id v3;

  if ((a1[1] & 1) != 0)
    v2 = 0;
  else
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *a1);
  v3 = v2;
  objc_msgSend(v1, sel_setFallbackCategoryValue_);

}

id ManagedMapsTransactionInsight.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMapsTransactionInsight.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMapsTransactionInsight.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void (*ManagedMapsTransactionInsight.fallbackCategory.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  unsigned __int16 v6;

  v2 = v1;
  *(_QWORD *)a1 = v2;
  v4 = objc_msgSend(v2, sel_fallbackCategoryValue);
  v5 = v4;
  if (v4)
  {
    v6 = (unsigned __int16)objc_msgSend(v4, sel_shortValue);

  }
  else
  {
    v6 = 0;
  }
  *(_WORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 10) = v5 == 0;
  return sub_2331B0F94;
}

void sub_2331B0F94(uint64_t a1)
{
  id v2;
  id v3;

  if ((*(_BYTE *)(a1 + 10) & 1) != 0)
    v2 = 0;
  else
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, *(__int16 *)(a1 + 8));
  v3 = v2;
  objc_msgSend(*(id *)a1, sel_setFallbackCategoryValue_);

}

void ManagedMapsTransactionInsight.classificationMissReason.getter(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_classificationMissReasonValue);
  if (v3)
  {
    v4 = v3;
    MapsClassificationMissReason.init(rawValue:)((Swift::Int16)objc_msgSend(v3, sel_shortValue));

  }
  else
  {
    *a1 = 4;
  }
}

void sub_2331B107C(id *a1@<X0>, char *a2@<X8>)
{
  id v3;
  void *v4;
  char v5;
  char v6;

  v3 = objc_msgSend(*a1, sel_classificationMissReasonValue);
  if (v3)
  {
    v4 = v3;
    MapsClassificationMissReason.init(rawValue:)((Swift::Int16)objc_msgSend(v3, sel_shortValue));

    v5 = v6;
  }
  else
  {
    v5 = 4;
  }
  *a2 = v5;
}

void sub_2331B10E8(unsigned __int8 *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  if ((_DWORD)v2 == 4)
    v4 = 0;
  else
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v2);
  v5 = v4;
  objc_msgSend(v3, sel_setClassificationMissReasonValue_);

}

void ManagedMapsTransactionInsight.classificationMissReason.setter(unsigned __int8 *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;

  v2 = *a1;
  if ((_DWORD)v2 == 4)
    v3 = 0;
  else
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v2);
  v4 = v3;
  objc_msgSend(v1, sel_setClassificationMissReasonValue_);

}

void (*ManagedMapsTransactionInsight.classificationMissReason.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  char *v2;
  id v3;
  void *v4;
  char v5;

  *a1 = v1;
  v2 = (char *)(a1 + 1);
  v3 = objc_msgSend(v1, sel_classificationMissReasonValue);
  if (v3)
  {
    v4 = v3;
    switch(objc_msgSend(v3, sel_shortValue))
    {
      case 0u:
        *v2 = 0;
        goto LABEL_10;
      case 1u:
        v5 = 1;
        goto LABEL_9;
      case 2u:
        v5 = 2;
        goto LABEL_9;
      case 3u:
        v5 = 3;
        goto LABEL_9;
      default:
        v5 = 4;
LABEL_9:
        *v2 = v5;
LABEL_10:

        break;
    }
  }
  else
  {
    *v2 = 4;
  }
  return sub_2331B1288;
}

void sub_2331B1288(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;

  v2 = *(unsigned __int8 *)(a1 + 8);
  if ((_DWORD)v2 == 4)
    v3 = 0;
  else
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v2);
  v4 = v3;
  objc_msgSend(*(id *)a1, sel_setClassificationMissReasonValue_);

}

id static ManagedMapsTransactionInsight.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedMapsTransactionInsight;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id ManagedInternalTransaction.mapsInsight.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_insightsObject);
  v2 = objc_msgSend(v1, sel_mapsInsightObject);

  return v2;
}

char *keypath_get_selector_updatedAt()
{
  return sel_updatedAt;
}

void sub_2331B13A0(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setUpdatedAt_, v3);

}

char *keypath_get_selector_failedAttemptsCount()
{
  return sel_failedAttemptsCount;
}

id sub_2331B13F4@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_failedAttemptsCount);
  *a2 = (_WORD)result;
  return result;
}

id sub_2331B1424(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFailedAttemptsCount_, *a1);
}

char *keypath_get_selector_includeLocationsInTheNextRetry()
{
  return sel_includeLocationsInTheNextRetry;
}

id sub_2331B1444@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_includeLocationsInTheNextRetry);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2331B1474(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIncludeLocationsInTheNextRetry_, *a1);
}

char *keypath_get_selector_classificationMissReasonValue()
{
  return sel_classificationMissReasonValue;
}

id sub_2331B1494@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_classificationMissReasonValue);
  *a2 = result;
  return result;
}

id sub_2331B14CC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setClassificationMissReasonValue_, *a1);
}

char *keypath_get_selector_earliestRetryDate()
{
  return sel_earliestRetryDate;
}

char *keypath_get_selector_fallbackCategoryValue()
{
  return sel_fallbackCategoryValue;
}

id sub_2331B1500@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fallbackCategoryValue);
  *a2 = result;
  return result;
}

id sub_2331B1538(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFallbackCategoryValue_, *a1);
}

char *keypath_get_selector_merchantObject()
{
  return sel_merchantObject;
}

id sub_2331B1558@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_merchantObject);
  *a2 = result;
  return result;
}

id sub_2331B1590(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMerchantObject_, *a1);
}

char *keypath_get_selector_brandObject()
{
  return sel_brandObject;
}

id sub_2331B15B0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_brandObject);
  *a2 = result;
  return result;
}

id sub_2331B15E8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBrandObject_, *a1);
}

uint64_t type metadata accessor for ManagedMapsTransactionInsight()
{
  return objc_opt_self();
}

uint64_t sub_2331B162C()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t result;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256043690);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256043698);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_233623D60;
  swift_getKeyPath();
  sub_2331B19CC();
  sub_23361CDA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560436A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560436B0);
  v0 = sub_2331B1A14(&qword_2560436B8, &qword_2560436A8, MEMORY[0x24BEE1718]);
  sub_2331B1A14(&qword_2560436C0, &qword_2560436B0, MEMORY[0x24BEE12C8]);
  sub_2331B1A14(&qword_2560436C8, &qword_256043698, MEMORY[0x24BDCBF20]);
  v1 = sub_23361E318();
  swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    v2 = *(void **)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  v2 = (void *)sub_23361EF30();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x234933120](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_16:
      if (sub_23361EF30())
        goto LABEL_8;
LABEL_17:
      v5 = 0;
      goto LABEL_18;
    }
    v3 = *(id *)(v1 + 32);
  }
  v2 = v3;
  swift_bridgeObjectRelease();
  v0 = sub_2331B0704(v1, (SEL *)&selRef_merchantObject);
  if (v0 >> 62)
    goto LABEL_16;
  if (!*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_17;
LABEL_8:
  if ((v0 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x234933120](0, v0);
  }
  else
  {
    if (!*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    v4 = *(id *)(v0 + 32);
  }
  v5 = v4;
LABEL_18:
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setMerchantObject_, v5);

  v0 = sub_2331B0704(v1, (SEL *)&selRef_brandObject);
  if (!(v0 >> 62))
  {
    result = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_20;
LABEL_25:
    v8 = 0;
    goto LABEL_26;
  }
  result = sub_23361EF30();
  if (!result)
    goto LABEL_25;
LABEL_20:
  if ((v0 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v7 = (id)MEMORY[0x234933120](0, v0);
    goto LABEL_23;
  }
  if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v0 + 32);
LABEL_23:
    v8 = v7;
LABEL_26:
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setBrandObject_, v8);

    v9 = sub_2331B0880(v1);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v9 + 2))
    {
      v10 = *((__int16 *)v9 + 16);
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, v10);
    }
    else
    {
      swift_bridgeObjectRelease();
      v11 = 0;
    }
    objc_msgSend(v2, sel_setFallbackCategoryValue_, v11);

    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

unint64_t sub_2331B19CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560436A0;
  if (!qword_2560436A0)
  {
    v1 = sub_23361D634();
    result = MEMORY[0x234934494](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_2560436A0);
  }
  return result;
}

uint64_t sub_2331B1A14(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x234934494](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RawBankConnectData.Account.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  char v6;

  v4 = objc_msgSend(a1, sel_publicAccountObject);
  ManagedAccount.accountType.getter(&v6);

  if ((v6 & 1) != 0)
    sub_2331B1EE0((char *)a1, a2);
  else
    sub_2331B1AE8(a1, a2);
  type metadata accessor for RawBankConnectData.Account(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2331B1AE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  char v67;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
  MEMORY[0x24BDAC7A8](v4);
  v63 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v64 = v13;
  v65 = (uint64_t)&v50 - v14;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 64) = 3;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  v15 = *(int *)(v13 + 44);
  v61 = a2;
  v16 = a2 + v15;
  v17 = type metadata accessor for RawBankConnectData.Actions();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v62 = v16;
  v19 = v17;
  v60 = v18;
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v16, 1, 1);
  ManagedInternalAccount.accountStatus.getter((char *)v66);
  v20 = v66[0];
  v21 = objc_msgSend(a1, sel_accountId);
  v22 = sub_23361E150();
  v58 = v23;
  v59 = v22;

  v24 = objc_msgSend(a1, sel_institutionId);
  sub_23361E150();

  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, sel_fpanIds);
  v57 = sub_23361E3F0();

  ManagedInternalAccount.accountNumber.getter((uint64_t)v66);
  v55 = v66[1];
  v56 = v66[0];
  v26 = v67;
  v27 = objc_msgSend(a1, sel_publicAccountObject);
  v28 = objc_msgSend(v27, sel_displayName);

  v29 = sub_23361E150();
  v53 = v30;
  v54 = v29;

  v31 = objc_msgSend(a1, sel_publicAccountObject);
  v32 = objc_msgSend(v31, sel_accountDescription);

  if (v32)
  {
    v33 = sub_23361E150();
    v51 = v34;
    v52 = v33;

  }
  else
  {
    v51 = 0;
    v52 = 0;
  }
  v35 = 0x40302010004uLL >> (8 * v26);
  v50 = 0x301020100uLL >> (8 * v20);
  v36 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  v37 = (uint64_t)v8;
  sub_2331B27CC(v36, (uint64_t)v8);
  v38 = (uint64_t)v63;
  v39 = v60;
  v60((uint64_t)v63, 1, 1, v19);
  v40 = objc_msgSend(a1, sel_thirdPartyShareable);
  v41 = v64;
  v42 = (uint64_t)&v12[*(int *)(v64 + 44)];
  v39(v42, 1, 1, v19);
  v43 = v58;
  *(_QWORD *)v12 = v59;
  *((_QWORD *)v12 + 1) = v43;
  v44 = v56;
  *((_QWORD *)v12 + 2) = v57;
  *((_QWORD *)v12 + 3) = v44;
  *((_QWORD *)v12 + 4) = v55;
  v12[40] = v35;
  v45 = v53;
  *((_QWORD *)v12 + 6) = v54;
  *((_QWORD *)v12 + 7) = v45;
  v12[64] = v50;
  v46 = v51;
  *((_QWORD *)v12 + 9) = v52;
  *((_QWORD *)v12 + 10) = v46;
  sub_233168580(v37, (uint64_t)&v12[*(int *)(v41 + 40)], type metadata accessor for RawBankConnectData.AccountBalances);
  sub_233170B8C(v38, v42, &qword_2560436D0);
  v12[*(int *)(v41 + 48)] = v40;
  v47 = v65;
  sub_233168580((uint64_t)v12, v65, type metadata accessor for RawBankConnectData.AssetAccount);

  v48 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233168608(v62, &qword_2560436D0);
  return sub_233168580(v47, v48, type metadata accessor for RawBankConnectData.AssetAccount);
}

void sub_2331B1EE0(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  id v73;
  void *v74;
  uint64_t *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  id v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  _QWORD *v95;
  uint64_t *v96;
  _QWORD *v97;
  _QWORD *v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  int *v111;
  void (*v112)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D0);
  MEMORY[0x24BDAC7A8](v4);
  v118 = (uint64_t)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v119 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v116 = (uint64_t)&v94 - v9;
  v10 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  MEMORY[0x24BDAC7A8](v10);
  v117 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  v13 = (int *)MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 64) = 3;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  v16 = (uint64_t *)(a2 + v13[11]);
  *((_OWORD *)v16 + 4) = 0u;
  v95 = v16 + 8;
  *((_OWORD *)v16 + 2) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v94 = v16;
  v17 = (uint64_t *)(a2 + v13[12]);
  *((_OWORD *)v17 + 4) = 0u;
  v97 = v17 + 8;
  *((_OWORD *)v17 + 2) = 0u;
  *((_OWORD *)v17 + 3) = 0u;
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v96 = v17;
  v18 = a2 + v13[13];
  v19 = sub_23361D634();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v113 = v18;
  v21 = v20;
  v20(v18, 1, 1, v19);
  v22 = (uint64_t *)(a2 + *(int *)(v12 + 56));
  *((_OWORD *)v22 + 4) = 0u;
  v98 = v22 + 8;
  *((_OWORD *)v22 + 2) = 0u;
  *((_OWORD *)v22 + 3) = 0u;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v111 = (int *)v12;
  v23 = *(int *)(v12 + 60);
  v115 = a2;
  v24 = a2 + v23;
  v25 = type metadata accessor for RawBankConnectData.Actions();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v114 = v24;
  v27 = v25;
  v112 = v26;
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v24, 1, 1);
  ManagedInternalAccount.accountStatus.getter((char *)&v120);
  v110 = 0x301020100uLL >> (8 * v120);
  v28 = objc_msgSend(a1, sel_accountId);
  v29 = sub_23361E150();
  v108 = v30;
  v109 = v29;

  v31 = objc_msgSend(a1, sel_institutionId);
  sub_23361E150();

  swift_bridgeObjectRelease();
  v32 = objc_msgSend(a1, sel_fpanIds);
  v107 = sub_23361E3F0();

  ManagedInternalAccount.accountNumber.getter((uint64_t)&v120);
  v105 = v121;
  v106 = v120;
  v104 = 0x40302010004uLL >> (8 * v122);
  v33 = objc_msgSend(a1, sel_publicAccountObject);
  v34 = objc_msgSend(v33, sel_displayName);

  v35 = sub_23361E150();
  v102 = v36;
  v103 = v35;

  v37 = objc_msgSend(a1, sel_publicAccountObject);
  v38 = objc_msgSend(v37, sel_accountDescription);

  if (v38)
  {
    v101 = sub_23361E150();
    v100 = v39;

  }
  else
  {
    v101 = 0;
    v100 = 0;
  }
  v40 = (void *)ManagedInternalAccount.latestAccountBalanceObject.getter();
  sub_2331B27CC(v40, v117);
  v41 = objc_msgSend(a1, sel_publicAccountObject);
  v42 = objc_msgSend(v41, sel_nextPaymentDate);

  if (v42)
  {
    v43 = v119;
    sub_23361D5EC();

    v44 = 0;
  }
  else
  {
    v44 = 1;
    v43 = v119;
  }
  v45 = v21;
  v21(v43, v44, 1, v19);
  sub_2331B05C8(v43, v116);
  v46 = v112;
  v112(v118, 1, 1, v27);
  v99 = objc_msgSend(a1, sel_thirdPartyShareable);
  v47 = v111;
  v48 = v111[11];
  v49 = v111[12];
  v119 = (uint64_t)a1;
  v50 = &v15[v48];
  v51 = &v15[v49];
  v52 = (uint64_t)&v15[v111[13]];
  v45(v52, 1, 1, v19);
  v53 = &v15[v47[14]];
  *((_OWORD *)v53 + 3) = 0u;
  *((_OWORD *)v53 + 4) = 0u;
  *((_OWORD *)v53 + 1) = 0u;
  *((_OWORD *)v53 + 2) = 0u;
  *(_OWORD *)v53 = 0u;
  v54 = (uint64_t)&v15[v47[15]];
  v46(v54, 1, 1, v27);
  v55 = v108;
  *(_QWORD *)v15 = v109;
  *((_QWORD *)v15 + 1) = v55;
  v56 = v106;
  *((_QWORD *)v15 + 2) = v107;
  *((_QWORD *)v15 + 3) = v56;
  *((_QWORD *)v15 + 4) = v105;
  v15[40] = v104;
  v57 = v102;
  *((_QWORD *)v15 + 6) = v103;
  *((_QWORD *)v15 + 7) = v57;
  v15[64] = v110;
  v58 = v100;
  *((_QWORD *)v15 + 9) = v101;
  *((_QWORD *)v15 + 10) = v58;
  sub_233168580(v117, (uint64_t)&v15[v47[10]], type metadata accessor for RawBankConnectData.AccountBalances);
  *(_OWORD *)v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  *((_OWORD *)v50 + 2) = 0u;
  *((_OWORD *)v50 + 3) = 0u;
  *((_OWORD *)v50 + 4) = 0u;
  *(_OWORD *)v51 = 0u;
  *((_OWORD *)v51 + 1) = 0u;
  *((_OWORD *)v51 + 2) = 0u;
  *((_OWORD *)v51 + 3) = 0u;
  *((_OWORD *)v51 + 4) = 0u;
  sub_233170B8C(v116, v52, (uint64_t *)&unk_254247DA0);
  sub_2331B3078(*(_QWORD *)v53, *((_QWORD *)v53 + 1), *((_QWORD *)v53 + 2), *((_QWORD *)v53 + 3), *((_QWORD *)v53 + 4), *((_QWORD *)v53 + 5), *((_QWORD *)v53 + 6), *((_QWORD *)v53 + 7));
  *((_OWORD *)v53 + 3) = 0u;
  *((_OWORD *)v53 + 4) = 0u;
  *((_OWORD *)v53 + 1) = 0u;
  *((_OWORD *)v53 + 2) = 0u;
  *(_OWORD *)v53 = 0u;
  sub_233170B8C(v118, v54, &qword_2560436D0);
  v15[v47[16]] = v99;
  v59 = (void *)v119;
  sub_233168608(v113, (uint64_t *)&unk_254247DA0);
  sub_2331B3078(*v22, v22[1], v22[2], v22[3], v22[4], v22[5], v22[6], v22[7]);
  sub_233168608(v114, &qword_2560436D0);
  sub_233168580((uint64_t)v15, v115, type metadata accessor for RawBankConnectData.LiabilityAccount);
  v60 = objc_msgSend(v59, sel_publicAccountObject);
  v61 = objc_msgSend(v60, sel_creditLimitAmountValue);
  if (v61)
  {
    v62 = v61;
    v63 = v94;
    v64 = v94 + 3;
    objc_msgSend(v61, sel_decimalValue);
    v118 = v122;
    v66 = v120;
    v65 = v121;
    v67 = objc_msgSend(v60, sel_currency);
    v68 = sub_23361E150();
    v70 = v69;

    sub_2331B3078(*v63, v63[1], v63[2], v63[3], v63[4], v63[5], v63[6], v63[7]);
    *v63 = v66;
    v63[1] = v65;
    v59 = (void *)v119;
    v63[2] = v118;
    *v64 = 0;
    v63[4] = 0;
    v63[5] = 0x100000000;
    v63[6] = v68;
    v63[7] = v70;
    v71 = v95;
    *v95 = 0;
    v71[1] = 0;
  }
  else
  {

  }
  v72 = objc_msgSend(v59, sel_publicAccountObject);
  v73 = objc_msgSend(v72, sel_minimumPaymentAmountValue);
  if (v73)
  {
    v74 = v73;
    v75 = v96;
    v76 = v96 + 3;
    objc_msgSend(v73, sel_decimalValue);
    v118 = v122;
    v78 = v120;
    v77 = v121;
    v79 = objc_msgSend(v72, sel_currency);
    v80 = sub_23361E150();
    v82 = v81;

    sub_2331B3078(*v75, v75[1], v75[2], v75[3], v75[4], v75[5], v75[6], v75[7]);
    *v75 = v78;
    v75[1] = v77;
    v59 = (void *)v119;
    v75[2] = v118;
    *v76 = 0;
    v75[4] = 0;
    v75[5] = 0x100000000;
    v75[6] = v80;
    v75[7] = v82;
    v83 = v97;
    *v97 = 0;
    v83[1] = 0;
  }
  else
  {

  }
  v84 = objc_msgSend(v59, sel_publicAccountObject);
  v85 = objc_msgSend(v84, sel_overduePaymentAmountValue);
  if (v85)
  {
    v86 = v85;
    objc_msgSend(v85, sel_decimalValue);
    v119 = v122;
    v87 = v120;
    v88 = v121;
    v89 = objc_msgSend(v84, sel_currency);
    v90 = sub_23361E150();
    v92 = v91;

    sub_2331B3078(*v22, v22[1], v22[2], v22[3], v22[4], v22[5], v22[6], v22[7]);
    *v22 = v87;
    v22[1] = v88;
    v22[2] = v119;
    v22[3] = 0;
    v22[4] = 0;
    v22[5] = 0x100000000;
    v22[6] = v90;
    v22[7] = v92;
    v93 = v98;
    *v98 = 0;
    v93[1] = 0;
  }
  else
  {

  }
}

uint64_t sub_2331B27CC@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  char v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  void *v63;
  id v64;
  char *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  id v75;
  char v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  int v87;
  __int128 v88;
  char *v89;
  uint64_t v90;
  __int128 v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  int v105;
  __int128 v106;

  v104 = a2;
  v3 = type metadata accessor for RawBankConnectData.AccountBalances(0);
  MEMORY[0x24BDAC7A8](v3);
  v103 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v93 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v97 = (char *)&v84 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v84 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v84 - v13;
  v15 = sub_23361D634();
  v98 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v94 = (char *)&v84 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)&v91 = (char *)&v84 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v92 = (char *)&v84 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v102 = (uint64_t)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v101 = (uint64_t)&v84 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v84 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v84 - v32;
  v34 = type metadata accessor for RawBankConnectData.InternalAccountBalance(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v35(v33, 1, 1, v34);
  if (a1)
  {
    v99 = v31;
    v100 = v35;
    v89 = v18;
    v95 = v15;
    v36 = a1;
    v37 = objc_msgSend(v36, sel_publicAccountBalanceObject);
    v38 = objc_msgSend(v37, sel_availableAmountValue);
    v96 = v3;
    if (v38)
    {
      v39 = v38;
      objc_msgSend(v38, sel_decimalValue);
      v87 = v105;
      v88 = v106;
      v40 = objc_msgSend(v37, sel_currency);
      v86 = sub_23361E150();
      v90 = v41;

      v42 = v36;
      v43 = objc_msgSend(v42, sel_publicAccountBalanceObject);
      v44 = objc_msgSend(v43, sel_availableAmountAsOf);

      if (v44)
      {
        sub_23361D5EC();

        v45 = 0;
      }
      else
      {
        v45 = 1;
      }
      v46 = v98;
      v47 = v99;
      v48 = v100;
      v49 = v95;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v12, v45, 1, v95);
      sub_2331B05C8((uint64_t)v12, (uint64_t)v14);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v14, 1, v49) == 1)
      {
        swift_bridgeObjectRelease();
        sub_233168608((uint64_t)v14, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        v50 = v92;
        v85 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
        v85(v92, v14, v49);
        v51 = v42;
        v52 = v46;
        v53 = v51;
        v54 = objc_msgSend(v51, sel_publicAccountBalanceObject);
        sub_23319CDA8((char *)&v105);

        v55 = v105;
        if (v105 == 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v49);
        }
        else
        {
          sub_233168608((uint64_t)v33, &qword_2560436D8);
          v56 = v91;
          v57 = v50;
          v58 = (void (*)(char *, uint64_t, uint64_t))v85;
          v85((char *)v91, v57, v49);
          *(_DWORD *)v33 = v87;
          *(_OWORD *)(v33 + 4) = v88;
          *((_QWORD *)v33 + 3) = 0;
          *((_QWORD *)v33 + 4) = 0;
          *((_DWORD *)v33 + 10) = 0;
          v33[44] = 1;
          v59 = v90;
          *((_QWORD *)v33 + 6) = v86;
          *((_QWORD *)v33 + 7) = v59;
          *((_QWORD *)v33 + 8) = 0;
          *((_QWORD *)v33 + 9) = 0;
          v58(&v33[*(int *)(v34 + 20)], v56, v49);
          v33[*(int *)(v34 + 24)] = (v55 & 1) == 0;
          v48(v33, 0, 1, v34);
        }
      }
      v3 = v96;
      v48(v47, 1, 1, v34);
    }
    else
    {

      v100(v99, 1, 1, v34);
    }
    a1 = v36;
    v60 = objc_msgSend(a1, sel_publicAccountBalanceObject);
    v61 = objc_msgSend(v60, sel_bookedAmountValue);
    v62 = (uint64_t)v97;
    if (v61)
    {
      v63 = v61;
      objc_msgSend(v61, sel_decimalValue);
      LODWORD(v90) = v105;
      v91 = v106;
      v64 = objc_msgSend(v60, sel_currency);
      *(_QWORD *)&v88 = sub_23361E150();
      v92 = v65;

      a1 = a1;
      v66 = objc_msgSend(a1, sel_publicAccountBalanceObject);
      v67 = objc_msgSend(v66, sel_bookedAmountAsOf);

      if (v67)
      {
        v68 = (uint64_t)v93;
        sub_23361D5EC();

        v69 = 0;
        v70 = v98;
      }
      else
      {
        v69 = 1;
        v70 = v98;
        v68 = (uint64_t)v93;
      }
      v71 = v94;
      v31 = v99;
      v35 = v100;
      v72 = v95;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v68, v69, 1, v95);
      sub_2331B05C8(v68, v62);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v62, 1, v72) == 1)
      {
        swift_bridgeObjectRelease();
        sub_233168608(v62, (uint64_t *)&unk_254247DA0);
      }
      else
      {
        v73 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
        v73(v71, v62, v72);
        a1 = a1;
        v74 = v71;
        v75 = objc_msgSend(a1, sel_publicAccountBalanceObject);
        sub_23319CDBC((char *)&v105);

        v76 = v105;
        if (v105 == 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v72);
        }
        else
        {
          sub_233168608((uint64_t)v31, &qword_2560436D8);
          v77 = v89;
          v73(v89, (uint64_t)v74, v72);
          *(_DWORD *)v31 = v90;
          *(_OWORD *)(v31 + 4) = v91;
          *((_QWORD *)v31 + 3) = 0;
          *((_QWORD *)v31 + 4) = 0;
          *((_DWORD *)v31 + 10) = 0;
          v31[44] = 1;
          v78 = v92;
          *((_QWORD *)v31 + 6) = v88;
          *((_QWORD *)v31 + 7) = v78;
          *((_QWORD *)v31 + 8) = 0;
          *((_QWORD *)v31 + 9) = 0;
          v73(&v31[*(int *)(v34 + 20)], (uint64_t)v77, v72);
          v31[*(int *)(v34 + 24)] = (v76 & 1) == 0;
          v35(v31, 0, 1, v34);
        }
      }
      v3 = v96;
    }
    else
    {

      v31 = v99;
      v35 = v100;
    }
  }
  else
  {
    v35(v31, 1, 1, v34);
  }
  v79 = v101;
  sub_2331B3030((uint64_t)v33, v101);
  v80 = v102;
  sub_2331B3030((uint64_t)v31, v102);
  v81 = (uint64_t)v103;
  v35(v103, 1, 1, v34);
  v82 = v81 + *(int *)(v3 + 20);
  v35((char *)v82, 1, 1, v34);
  sub_233170B8C(v79, v81, &qword_2560436D8);
  sub_233170B8C(v80, v82, &qword_2560436D8);
  sub_233168580(v81, v104, type metadata accessor for RawBankConnectData.AccountBalances);

  sub_233168608((uint64_t)v31, &qword_2560436D8);
  return sub_233168608((uint64_t)v33, &qword_2560436D8);
}

uint64_t sub_2331B3030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560436D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331B3078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2331B30A8(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, "id");
  sub_23361D67C();

}

void sub_2331B30F4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_subscriptionID);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2331B3158(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setSubscriptionID_);

}

id ManagedConsentNotificationSubscription.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedConsentNotificationSubscription.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedConsentNotificationSubscription.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedConsentNotificationSubscription.__allocating_init(id:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  void *v6;
  uint64_t v7;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v6 = (void *)sub_23361D658();
  objc_msgSend(v5, sel_setId_, v6);

  v7 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v5;
}

id static ManagedConsentNotificationSubscription.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit38ManagedConsentNotificationSubscription;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

id static ManagedConsentNotificationSubscription.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

unint64_t static ManagedConsentNotificationSubscription.existingSubscription(withID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t result;
  unint64_t v9;
  id v10;
  objc_super v11;

  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit38ManagedConsentNotificationSubscription;
  v4 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  v6 = sub_23361D658();
  *(_QWORD *)(v5 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v5 + 64) = sub_2331B372C();
  *(_QWORD *)(v5 + 32) = v6;
  v7 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v7);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v9 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x234933120](0, v9);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v9 + 32);
LABEL_8:
    a2 = (uint64_t)v10;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedConsentNotificationSubscription.predicateForSubscription(withID:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_2331B372C();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

unint64_t sub_2331B372C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560436E8;
  if (!qword_2560436E8)
  {
    v1 = sub_233168668(255, &qword_2560436E0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_2560436E8);
  }
  return result;
}

unint64_t static ManagedConsentNotificationSubscription.existingSubscription(withSubscriptionID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2331B37F8(a1, a2, a3);
}

uint64_t static ManagedConsentNotificationSubscription.predicateForSubscription(withSubscriptionID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

unint64_t static ManagedConsentNotificationSubscription.existingSubscription(withConsentID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2331B37F8(a1, a2, a3);
}

unint64_t sub_2331B37F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;
  uint64_t v14;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit38ManagedConsentNotificationSubscription;
  v6 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = sub_2331683F0();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v6, sel_setPredicate_, v8);

  v9 = v14;
  result = sub_23361E984();
  if (v9)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedConsentNotificationSubscription.predicateForSubscription(withConsentID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

uint64_t sub_2331B39E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

id ManagedConsentNotificationSubscription.eventTypes.getter@<X0>(_DWORD *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_eventTypesValue);
  *a1 = (_DWORD)result;
  return result;
}

id ManagedConsentNotificationSubscription.eventTypes.setter(unsigned int *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setEventTypesValue_, *a1);
}

id (*ManagedConsentNotificationSubscription.eventTypes.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = objc_msgSend(v1, sel_eventTypesValue);
  return sub_2331B3B18;
}

id sub_2331B3B18(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setEventTypesValue_, *(unsigned int *)(a1 + 8));
}

void sub_2331B3B34(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D658();
  objc_msgSend(v2, sel_setId_, v3);

}

char *keypath_get_selector_subscriptionID()
{
  return sel_subscriptionID;
}

char *keypath_get_selector_eventTypesValue()
{
  return sel_eventTypesValue;
}

id sub_2331B3B9C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_eventTypesValue);
  *a2 = (_DWORD)result;
  return result;
}

id sub_2331B3BCC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEventTypesValue_, *a1);
}

char *keypath_get_selector_lastFetchedAt()
{
  return sel_lastFetchedAt;
}

uint64_t sub_2331B3BEC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastFetchedAt, a2);
}

void sub_2331B3C08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastFetchedAt_);
}

char *keypath_get_selector_updateSequenceNumber()
{
  return sel_updateSequenceNumber;
}

id sub_2331B3C30@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_updateSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2331B3C60(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUpdateSequenceNumber_, *a1);
}

char *keypath_get_selector_fetchSequenceNumber()
{
  return sel_fetchSequenceNumber;
}

id sub_2331B3C80@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fetchSequenceNumber);
  *a2 = result;
  return result;
}

id sub_2331B3CB0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFetchSequenceNumber_, *a1);
}

char *keypath_get_selector_requestAttemptCount()
{
  return sel_requestAttemptCount;
}

id sub_2331B3CD0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_requestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2331B3D00(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastRequestAttemptDate()
{
  return sel_lastRequestAttemptDate;
}

uint64_t sub_2331B3D20@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastRequestAttemptDate, a2);
}

void sub_2331B3D3C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastRequestAttemptDate_);
}

char *keypath_get_selector_registerRequestAttemptCount()
{
  return sel_registerRequestAttemptCount;
}

id sub_2331B3D64@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_registerRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2331B3D94(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRegisterRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastRegisterRequestAttemptDate()
{
  return sel_lastRegisterRequestAttemptDate;
}

uint64_t sub_2331B3DB4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastRegisterRequestAttemptDate, a2);
}

void sub_2331B3DD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastRegisterRequestAttemptDate_);
}

char *keypath_get_selector_unregisterRequestAttemptCount()
{
  return sel_unregisterRequestAttemptCount;
}

id sub_2331B3DF8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_unregisterRequestAttemptCount);
  *a2 = result;
  return result;
}

id sub_2331B3E28(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUnregisterRequestAttemptCount_, *a1);
}

char *keypath_get_selector_lastUnregisterRequestAttemptDate()
{
  return sel_lastUnregisterRequestAttemptDate;
}

uint64_t sub_2331B3E48@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_lastUnregisterRequestAttemptDate, a2);
}

void sub_2331B3E64(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setLastUnregisterRequestAttemptDate_);
}

id sub_2331B3E80@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_eventTypesValue);
  *a2 = (_DWORD)result;
  return result;
}

id sub_2331B3EB0(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEventTypesValue_, *a1);
}

uint64_t type metadata accessor for ManagedConsentNotificationSubscription()
{
  return objc_opt_self();
}

uint64_t BankConnectService.offlineLabPermission()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for BankConnectService.Message();
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331B3F40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043088 + dword_256043088);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_2331B3FB8;
  return v3(v0[2], v0[5]);
}

uint64_t sub_2331B3FB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331B4040()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.offlineLabSharingPreference()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for BankConnectService.Message();
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331B40D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043080 + dword_256043080);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_2331B4148;
  return v3(v0[2], v0[5]);
}

uint64_t sub_2331B4148()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t BankConnectService.setOfflineLabSharingPermission(_:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = v1;
  *(_BYTE *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  *(_QWORD *)(v2 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331B4230()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;

  v1 = *(_BYTE **)(v0 + 96);
  v2 = *(_BYTE *)(v0 + 120);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 16);
  *v1 = v2;
  swift_storeEnumTagMultiPayload();
  return swift_task_switch();
}

uint64_t sub_2331B4284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[13];
  v0[2] = v0;
  v0[3] = sub_2331B42E0;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331B42E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 112) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331B434C()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.postOfflineLabItems(outputURL:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for BankConnectService.Message();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331B43E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[13];
  v2 = v0[10];
  v0[14] = *(_QWORD *)(v0[11] + 16);
  v3 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  swift_storeEnumTagMultiPayload();
  return swift_task_switch();
}

uint64_t sub_2331B4464()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v0[2] = v0;
  v0[3] = sub_2331B44C0;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331B44C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 120) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331B452C()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331B456C()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331B45AC(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = type metadata accessor for BankConnectService.Message();
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[4] = v3;
  v2[5] = v4;
  return swift_task_switch();
}

uint64_t sub_2331B460C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043088 + dword_256043088);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_2331B4684;
  return v3(v0[2], v0[4]);
}

uint64_t sub_2331B4684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331B4710()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331B4744(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = type metadata accessor for BankConnectService.Message();
  v3 = swift_task_alloc();
  v4 = *v1;
  v2[4] = v3;
  v2[5] = v4;
  return swift_task_switch();
}

uint64_t sub_2331B47A4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043080 + dword_256043080);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_2331B481C;
  return v3(v0[2], v0[4]);
}

uint64_t sub_2331B481C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331B48A8(char a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectService.setOfflineLabSharingPermission(_:)(a1);
}

uint64_t sub_2331B48F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23318C26C;
  return BankConnectService.postOfflineLabItems(outputURL:)(a1);
}

uint64_t dispatch thunk of BankConnectConnectionOfflineLabManaging.offlineLabPermission()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318C26C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of BankConnectConnectionOfflineLabManaging.offlineLabSharingPreference()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318C26C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of BankConnectConnectionOfflineLabManaging.setOfflineLabSharingPermission(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of BankConnectConnectionOfflineLabManaging.postOfflineLabItems(outputURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23318C26C;
  return v9(a1, a2, a3);
}

uint64_t AccountMatchingType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::AccountMatchingType_optional __swiftcall AccountMatchingType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (FinanceKit::AccountMatchingType_optional)rawValue;
}

void *static AccountMatchingType.allCases.getter()
{
  return &unk_250467FC8;
}

unint64_t sub_2331B4B64()
{
  unint64_t result;

  result = qword_256043750;
  if (!qword_256043750)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountMatchingType, &type metadata for AccountMatchingType);
    atomic_store(result, (unint64_t *)&qword_256043750);
  }
  return result;
}

FinanceKit::AccountMatchingType_optional sub_2331B4BA8(Swift::Int *a1)
{
  return AccountMatchingType.init(rawValue:)(*a1);
}

void sub_2331B4BB0(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_2331B4BBC()
{
  sub_2331B4E20();
  return sub_23361E39C();
}

uint64_t sub_2331B4C18()
{
  sub_2331B4E20();
  return sub_23361E360();
}

unint64_t sub_2331B4C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256043758;
  if (!qword_256043758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256043760);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256043758);
  }
  return result;
}

void sub_2331B4CB4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250467FF0;
}

uint64_t getEnumTagSinglePayload for AccountMatchingType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountMatchingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2331B4DA0 + 4 * byte_233627865[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2331B4DD4 + 4 * byte_233627860[v4]))();
}

uint64_t sub_2331B4DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B4DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331B4DE4);
  return result;
}

uint64_t sub_2331B4DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331B4DF8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2331B4DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B4E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountMatchingType()
{
  return &type metadata for AccountMatchingType;
}

unint64_t sub_2331B4E20()
{
  unint64_t result;

  result = qword_256043768;
  if (!qword_256043768)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountMatchingType, &type metadata for AccountMatchingType);
    atomic_store(result, (unint64_t *)&qword_256043768);
  }
  return result;
}

uint64_t RawBankConnectData.SupportedCapabilities.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void *static RawBankConnectData.SupportedCapabilities.allCases.getter()
{
  return &unk_250468068;
}

unint64_t RawBankConnectData.SupportedCapabilities.rawValue.getter()
{
  return 0xD000000000000024;
}

unint64_t sub_2331B4F04()
{
  unint64_t result;

  result = qword_256043770;
  if (!qword_256043770)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.SupportedCapabilities, &type metadata for RawBankConnectData.SupportedCapabilities);
    atomic_store(result, (unint64_t *)&qword_256043770);
  }
  return result;
}

uint64_t sub_2331B4F48()
{
  return sub_23353D400();
}

uint64_t sub_2331B4F50()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331B4FA8()
{
  return sub_23353F014();
}

uint64_t sub_2331B4FB0@<X0>(char *a1@<X8>)
{
  return RawBankConnectData.SupportedCapabilities.init(rawValue:)(a1);
}

void sub_2331B4FBC(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x8000000233668950;
  if (*v1)
    v2 = 0x8000000233668980;
  *a1 = 0xD000000000000024;
  a1[1] = v2;
}

uint64_t sub_2331B4FF8()
{
  sub_2331B51D8();
  return sub_23361E390();
}

uint64_t sub_2331B5054()
{
  sub_2331B51D8();
  return sub_23361E354();
}

unint64_t sub_2331B50A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256043778;
  if (!qword_256043778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256043780);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256043778);
  }
  return result;
}

void sub_2331B50F0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468090;
}

uint64_t sub_2331B5100(char *a1, char *a2)
{
  return sub_2332275AC(*a1, *a2);
}

uint64_t _s21SupportedCapabilitiesOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331B5158 + 4 * byte_2336279D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331B518C + 4 * byte_2336279D0[v4]))();
}

uint64_t sub_2331B518C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B5194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331B519CLL);
  return result;
}

uint64_t sub_2331B51A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331B51B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331B51B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B51BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawBankConnectData.SupportedCapabilities()
{
  return &type metadata for RawBankConnectData.SupportedCapabilities;
}

unint64_t sub_2331B51D8()
{
  unint64_t result;

  result = qword_256043788;
  if (!qword_256043788)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.SupportedCapabilities, &type metadata for RawBankConnectData.SupportedCapabilities);
    atomic_store(result, (unint64_t *)&qword_256043788);
  }
  return result;
}

uint64_t Order.DisplayStatusValues.init(order:orderContent:contentItem:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  char v8;

  v7 = *a3;
  if ((~*a3 & 0x7000000000000007) != 0)
  {
    if ((v7 & 0x4000000000000000) != 0)
    {
      sub_2331B6B6C(*a3);
      v8 = ManagedOrderReturn.status.getter();
      Order.Fulfillment.DisplayStatus<>.init(order:orderContent:returnStatus:)(a1, a2, v8, (uint64_t)a4);
      sub_2331B6B84(v7);
      sub_2331B6B84(v7);
    }
    else if (v7 < 0)
    {
      Order.PickupFulfillment.StatusValues.init(order:orderContent:fulfillment:)(a1, a2, (void *)(v7 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)a4);
    }
    else
    {
      Order.ShippingFulfillment.StatusValues.init(order:orderContent:fulfillment:)(a1, a2, (void *)*a3, (uint64_t)a4);
    }
  }
  else
  {
    Order.Fulfillment.DisplayStatus<>.init(order:orderContent:)(a1, a2, a4);
  }
  type metadata accessor for Order.DisplayStatusValues(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t Order.DisplayStatusValues.init(orderContent:contentItem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v39 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawOrderReturn();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawOrderShippingFulfillment();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v36 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v37 = (uint64_t)&v35 - v13;
  v14 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Order.DisplayStatusValues(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for RawOrderPickupFulfillment();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v35 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043798);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331B6BB4(a2, (uint64_t)v28);
  v29 = type metadata accessor for RawECommerceOrderContent.ContentItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29) == 1)
  {
    sub_2331684BC(a1, (uint64_t)v16, type metadata accessor for RawECommerceOrderContent);
    Order.Fulfillment.DisplayStatus<>.init(orderContent:)((uint64_t)v16, (uint64_t)v19);
    sub_233168608(a2, &qword_256043798);
    sub_233168500(a1, type metadata accessor for RawECommerceOrderContent);
  }
  else
  {
    v35 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580((uint64_t)v28, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      sub_2331684BC(a1, (uint64_t)v16, type metadata accessor for RawECommerceOrderContent);
      v40 = v9[8];
      v30 = v38;
      Order.Fulfillment.DisplayStatus<>.init(orderContent:returnStatus:)((uint64_t)v16, &v40, v38);
      sub_233168608(a2, &qword_256043798);
      sub_233168500(a1, type metadata accessor for RawECommerceOrderContent);
      sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      sub_233168478(v30, v39, &qword_256043790);
      return swift_storeEnumTagMultiPayload();
    }
    type metadata accessor for RawOrderFulfillment();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      sub_2331684BC(a1, (uint64_t)v16, type metadata accessor for RawECommerceOrderContent);
      sub_2331684BC((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      Order.PickupFulfillment.StatusValues.init(orderContent:fulfillment:)((uint64_t)v16, (uint64_t)v23, (uint64_t)v19);
      sub_233168608(a2, &qword_256043798);
      sub_233168500(a1, type metadata accessor for RawECommerceOrderContent);
      sub_233168500((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    }
    else
    {
      v32 = v37;
      sub_233168580((uint64_t)v28, v37, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      v33 = a1;
      sub_2331684BC(a1, (uint64_t)v16, type metadata accessor for RawECommerceOrderContent);
      v34 = v36;
      sub_2331684BC(v32, v36, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      Order.ShippingFulfillment.StatusValues.init(orderContent:fulfillment:)((uint64_t)v16, v34, (uint64_t)v19);
      sub_233168608(a2, &qword_256043798);
      sub_233168500(v33, type metadata accessor for RawECommerceOrderContent);
      sub_233168500(v32, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    }
  }
  swift_storeEnumTagMultiPayload();
  return sub_233168580((uint64_t)v19, v39, type metadata accessor for Order.DisplayStatusValues);
}

uint64_t Order.DisplayStatusValuesFormatter.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233168580(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t Order.DisplayStatusValues.formatted<A>(_:)()
{
  return sub_23361CA04();
}

void Order.DisplayStatusValuesFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  _QWORD v12[3];
  uint64_t v13;

  v12[2] = a2;
  v13 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for Order.ShippingFulfillment.StatusFormatter(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for Order.PickupFulfillment.StatusFormatter(0);
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for Order.DisplayStatusValues(0);
  MEMORY[0x24BDAC7A8](v8);
  sub_2331684BC(v13, (uint64_t)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (char *)sub_2331B59D0 + 4 * byte_233627B30[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2331B59D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_233168478(v0, v1, &qword_2560437A0);
  v2 = Order.Fulfillment.DisplayStatus<>.localizedTitle.getter();
  sub_233168608(v1, &qword_2560437A0);
  return v2;
}

uint64_t Order.DisplayStatusValuesFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

BOOL static Order.DisplayStatusValuesFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_2331B5CA8()
{
  return 0x72756769666E6F63;
}

uint64_t sub_2331B5CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2331B5D84()
{
  sub_2331B6BFC();
  return sub_23361F428();
}

uint64_t sub_2331B5DAC()
{
  sub_2331B6BFC();
  return sub_23361F434();
}

uint64_t Order.DisplayStatusValuesFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331B6BFC();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Order.DisplayStatusValuesFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t Order.DisplayStatusValuesFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437C8);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.DisplayStatusValuesFormatter(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331B6BFC();
  sub_23361F3EC();
  if (!v2)
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_233168580(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233168580((uint64_t)v11, v13, type metadata accessor for Order.DisplayStatusValuesFormatter);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void sub_2331B61B4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  Order.DisplayStatusValuesFormatter.format(_:now:)(a1, a2);
  *a3 = v4;
  a3[1] = v5;
}

uint64_t sub_2331B61D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  Order.DisplayStatusValuesFormatter.format(_:now:)(a1, (uint64_t)v7);
  v9 = v8;
  v11 = v10;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_2331B6278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.DisplayStatusValuesFormatter.init(from:)(a1, a2);
}

uint64_t sub_2331B628C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331B6BFC();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t _s10FinanceKit5OrderV11FulfillmentO23NotificationFormatStyleV9hashValueSivg_0()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t _s10FinanceKit5OrderV11FulfillmentO23NotificationFormatStyleV4hash4intoys6HasherVz_tF_0()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

uint64_t sub_2331B6594()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

BOOL _s10FinanceKit5OrderV11FulfillmentO23NotificationFormatStyleV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

void _s10FinanceKit5OrderV19DisplayStatusValuesO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v19 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
  MEMORY[0x24BDAC7A8](v2);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v4);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for Order.DisplayStatusValues(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043980);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v18, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Order.DisplayStatusValues);
  sub_2331684BC(v19, (uint64_t)v15, type metadata accessor for Order.DisplayStatusValues);
  v16 = (char *)sub_2331B6924 + 4 * byte_233627B34[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2331B6924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_2331684BC(v0, v2, type metadata accessor for Order.DisplayStatusValues);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_233168608(v2, &qword_2560437A0);
    sub_233168608(v0, &qword_256043980);
    v4 = 0;
  }
  else
  {
    sub_233168478(v1, v3, &qword_2560437A0);
    v4 = sub_2334B73AC(v2, v3);
    sub_233168608(v3, &qword_2560437A0);
    sub_233168608(v2, &qword_2560437A0);
    sub_233168500(v0, type metadata accessor for Order.DisplayStatusValues);
  }
  return v4 & 1;
}

uint64_t type metadata accessor for Order.DisplayStatusValues(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256043888);
}

id sub_2331B6B6C(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xBFFFFFFFFFFFFFFFLL;
  if ((a1 & 0x4000000000000000) == 0)
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  return (id)(v1 & a1);
}

void sub_2331B6B84(uint64_t a1)
{
  if ((~a1 & 0x7000000000000007) != 0)
    sub_2331B6B9C(a1);
}

void sub_2331B6B9C(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xBFFFFFFFFFFFFFFFLL;
  if ((a1 & 0x4000000000000000) == 0)
    v1 = 0x7FFFFFFFFFFFFFFFLL;

}

uint64_t sub_2331B6BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2331B6BFC()
{
  unint64_t result;

  result = qword_2560437C0;
  if (!qword_2560437C0)
  {
    result = MEMORY[0x234934494](&unk_233627DD0, &_s28DisplayStatusValuesFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560437C0);
  }
  return result;
}

uint64_t type metadata accessor for Order.DisplayStatusValuesFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_256043930);
}

uint64_t sub_2331B6C54(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_2560437D8, type metadata accessor for Order.DisplayStatusValuesFormatter, (uint64_t)&protocol conformance descriptor for Order.DisplayStatusValuesFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2331B6C90()
{
  return sub_233167C58(&qword_2560437E0, type metadata accessor for Order.DisplayStatusValuesFormatter, (uint64_t)&protocol conformance descriptor for Order.DisplayStatusValuesFormatter);
}

uint64_t sub_2331B6CBC()
{
  return sub_233167C58(&qword_2560437E8, type metadata accessor for Order.DisplayStatusValuesFormatter, (uint64_t)&protocol conformance descriptor for Order.DisplayStatusValuesFormatter);
}

uint64_t sub_2331B6CE8()
{
  return sub_233167C58(&qword_2560437F0, type metadata accessor for Order.DisplayStatusValuesFormatter, (uint64_t)&protocol conformance descriptor for Order.DisplayStatusValuesFormatter);
}

uint64_t sub_2331B6D14()
{
  return sub_233167C58(&qword_2560437F8, type metadata accessor for Order.DisplayStatusValuesFormatter, (uint64_t)&protocol conformance descriptor for Order.DisplayStatusValuesFormatter);
}

uint64_t _s19DisplayStatusValuesOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2331B6D9C + 4 * byte_233627B38[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t _s19DisplayStatusValuesOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = &qword_2560437A0;
      goto LABEL_20;
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v4 = sub_23361D634();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      }
      v5 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
      v6 = a1 + *(int *)(v5 + 20);
      v7 = type metadata accessor for Order.FulfillmentWindow(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v9 = sub_23361D634();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
        if (EnumCaseMultiPayload == 1)
        {
          v10 = v6 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v11 = sub_23361CD40();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        }
      }
      v12 = a1 + *(int *)(v5 + 24);
      v13 = sub_23361D634();
      v14 = *(_QWORD *)(v13 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v15 = sub_23361D634();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      }
      v16 = (int *)type metadata accessor for Order.ShippingFulfillment.StatusValues(0);
      v17 = a1 + v16[5];
      v18 = type metadata accessor for Order.FulfillmentWindow(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
      {
        v19 = swift_getEnumCaseMultiPayload();
        v20 = sub_23361D634();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);
        if (v19 == 1)
        {
          v21 = v17 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v22 = sub_23361CD40();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
      }
      v23 = a1 + v16[6];
      v24 = sub_23361D634();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
      if (!v26(v23, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      v27 = a1 + v16[7];
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v26)(v27, 1, v24);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
      break;
    case 3:
      v3 = &qword_256043790;
LABEL_20:
      __swift_instantiateConcreteTypeFromMangledName(v3);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
      {
        v28 = sub_23361D634();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
      }
      break;
    default:
      return result;
  }
  return result;
}

void _s19DisplayStatusValuesOwcp()
{
  char *v0;

  v0 = (char *)sub_2331B76A0 + 4 * byte_233627B40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void *sub_2331B76A0()
{
  void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v3 = sub_23361D634();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t _s19DisplayStatusValuesOwca(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_233168500(result, type metadata accessor for Order.DisplayStatusValues);
    v2 = (char *)&loc_2331B7BCC + 4 * byte_233627B44[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void _s19DisplayStatusValuesOwtk()
{
  char *v0;

  v0 = (char *)sub_2331B80E0 + 4 * byte_233627B48[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void *sub_2331B80E0()
{
  void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v3 = sub_23361D634();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v0, v1, v3);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t _s19DisplayStatusValuesOwta(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_233168500(result, type metadata accessor for Order.DisplayStatusValues);
    v2 = (char *)&loc_2331B860C + 4 * byte_233627B4C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_2331B8ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_2331B8B84(319, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    type metadata accessor for Order.PickupFulfillment.StatusValues(319);
    if (v5 <= 0x3F)
    {
      type metadata accessor for Order.ShippingFulfillment.StatusValues(319);
      if (v6 <= 0x3F)
      {
        sub_2331B8BE0(319);
        if (v7 <= 0x3F)
          swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_2331B8B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_256043898)
  {
    v4 = type metadata accessor for Order.Fulfillment.DisplayStatus(0, MEMORY[0x24BEE4078], MEMORY[0x24BEE4098], a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256043898);
  }
}

void sub_2331B8BE0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_2560438A0)
  {
    v2 = sub_2331B8C38();
    v4 = type metadata accessor for Order.Fulfillment.DisplayStatus(a1, (uint64_t)&type metadata for Order.ReturnStatus, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2560438A0);
  }
}

unint64_t sub_2331B8C38()
{
  unint64_t result;

  result = qword_2560438A8[0];
  if (!qword_2560438A8[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ReturnStatus, &type metadata for Order.ReturnStatus);
    atomic_store(result, qword_2560438A8);
  }
  return result;
}

uint64_t *_s28DisplayStatusValuesFormatterVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for FormatterConfiguration();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_23361D73C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23361D868();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(v6 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23361D8A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t _s28DisplayStatusValuesFormatterVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for FormatterConfiguration();
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(v3 + 24);
  v7 = sub_23361D8A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t _s28DisplayStatusValuesFormatterVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for FormatterConfiguration();
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(v5 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t _s28DisplayStatusValuesFormatterVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for FormatterConfiguration();
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(v5 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t _s28DisplayStatusValuesFormatterVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for FormatterConfiguration();
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(v5 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t _s28DisplayStatusValuesFormatterVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for FormatterConfiguration();
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(v5 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t _s28DisplayStatusValuesFormatterVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331B90DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s28DisplayStatusValuesFormatterVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331B9124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2331B9164()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s28DisplayStatusValuesFormatterV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2331B920C + 4 * byte_233627B50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2331B922C + 4 * byte_233627B55[v4]))();
}

_BYTE *sub_2331B920C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2331B922C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331B9234(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331B923C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331B9244(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331B924C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s28DisplayStatusValuesFormatterV10CodingKeysOMa()
{
  return &_s28DisplayStatusValuesFormatterV10CodingKeysON;
}

unint64_t sub_2331B926C()
{
  unint64_t result;

  result = qword_256043968;
  if (!qword_256043968)
  {
    result = MEMORY[0x234934494](&unk_233627DA8, &_s28DisplayStatusValuesFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043968);
  }
  return result;
}

unint64_t sub_2331B92B4()
{
  unint64_t result;

  result = qword_256043970;
  if (!qword_256043970)
  {
    result = MEMORY[0x234934494](&unk_233627D18, &_s28DisplayStatusValuesFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043970);
  }
  return result;
}

unint64_t sub_2331B92FC()
{
  unint64_t result;

  result = qword_256043978;
  if (!qword_256043978)
  {
    result = MEMORY[0x234934494](&unk_233627D40, &_s28DisplayStatusValuesFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043978);
  }
  return result;
}

FinanceKit::FinanceTrialNamespace_optional __swiftcall FinanceTrialNamespace.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::FinanceTrialNamespace_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FinanceTrialNamespace.rawValue.getter()
{
  return 0x5F45434E414E4946;
}

uint64_t sub_2331B93F4(char *a1, unsigned __int8 *a2)
{
  return sub_233229054(*a1, *a2);
}

uint64_t sub_2331B9400()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2331B949C()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331B9514()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

FinanceKit::FinanceTrialNamespace_optional sub_2331B95AC(Swift::String *a1)
{
  return FinanceTrialNamespace.init(rawValue:)(*a1);
}

void sub_2331B95B8(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xEF58494E454F4850;
  if (*v1 != 1)
    v2 = 0xEF504F4F4B534F42;
  if (*v1)
    v3 = v2;
  else
    v3 = 0xEE004749464E4F43;
  *a1 = 0x5F45434E414E4946;
  a1[1] = v3;
}

uint64_t FinanceTrialFactor.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FinanceTrialFactor.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FinanceTrialFactor.rawValue.modify())()
{
  return nullsub_1;
}

FinanceKit::FinanceTrialFactor __swiftcall FinanceTrialFactor.init(rawValue:)(FinanceKit::FinanceTrialFactor rawValue)
{
  FinanceKit::FinanceTrialFactor *v1;

  *v1 = rawValue;
  return rawValue;
}

_QWORD *sub_2331B968C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_2331B9698@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331B96A4()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_2331B96FC()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331B9740()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t _s10FinanceKit18RawBankConnectDataO36RegisterToNotificationEventsResponseV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23361F224();
}

Swift::String_optional __swiftcall FinanceTrialProvider.stringValue(for:in:)(FinanceKit::FinanceTrialFactor a1, FinanceKit::FinanceTrialNamespace in)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 298);
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_levelForFactor_withNamespaceName_, v3, v4);

  if (!v5)
    goto LABEL_5;
  v6 = objc_msgSend(v5, sel_stringValue);
  if (!v6)
  {

LABEL_5:
    v8 = 0;
    v10 = 0;
    goto LABEL_6;
  }
  v7 = v6;
  v8 = sub_23361E150();
  v10 = v9;

LABEL_6:
  v11 = v8;
  v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall FinanceTrialProvider.filePathValue(for:in:)(FinanceKit::FinanceTrialFactor a1, FinanceKit::FinanceTrialNamespace in)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String_optional result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 298);
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_levelForFactor_withNamespaceName_, v3, v4);

  if (!v5)
    goto LABEL_8;
  v6 = objc_msgSend(v5, sel_fileValue);
  if (!v6)
  {
LABEL_7:

LABEL_8:
    v10 = 0;
    v12 = 0;
    goto LABEL_9;
  }
  v7 = v6;
  if ((objc_msgSend(v6, sel_hasPath) & 1) == 0
    || (v8 = objc_msgSend(v7, sel_path)) == 0)
  {

    goto LABEL_7;
  }
  v9 = v8;
  v10 = sub_23361E150();
  v12 = v11;

LABEL_9:
  v13 = v10;
  v14 = v12;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

void FinanceTrialProvider.experimentIdentifiers(for:)(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 298);
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_experimentIdentifiersWithNamespaceName_, v3);

  if (v4)
  {
    v5 = objc_msgSend(v4, sel_experimentId);
    v6 = sub_23361E150();
    v8 = v7;

    v9 = objc_msgSend(v4, sel_treatmentId);
    v10 = sub_23361E150();
    v12 = v11;

    v13 = objc_msgSend(v4, sel_deploymentId);
  }
  else
  {
    v6 = 0;
    v8 = 0;
    v10 = 0;
    v12 = 0;
    v13 = 0;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v12;
  *(_DWORD *)(a1 + 32) = v13;
}

void FinanceTrialProvider.rolloutIdentifiers(for:)(uint64_t *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 298);
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_rolloutIdentifiersWithNamespaceName_, v3);

  if (v4)
  {
    v5 = objc_msgSend(v4, sel_rolloutId);
    v6 = sub_23361E150();
    v8 = v7;

    v9 = objc_msgSend(v4, sel_deploymentId);
    v10 = objc_msgSend(v4, sel_factorPackId);
    v11 = sub_23361E150();
    v13 = v12;

    v14 = objc_msgSend(v4, sel_rampId);
    if (v14)
    {
      v15 = v14;
      v16 = sub_23361E150();
      v18 = v17;

    }
    else
    {

      v16 = 0;
      v18 = 0;
    }
    *a1 = v6;
    a1[1] = v8;
    a1[2] = v9;
    a1[3] = v11;
    a1[4] = v13;
    a1[5] = v16;
    a1[6] = v18;
  }
  else
  {
    a1[6] = 0;
    *((_OWORD *)a1 + 1) = 0u;
    *((_OWORD *)a1 + 2) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

unint64_t sub_2331B9DE4()
{
  unint64_t result;

  result = qword_256043988;
  if (!qword_256043988)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceTrialNamespace, &type metadata for FinanceTrialNamespace);
    atomic_store(result, (unint64_t *)&qword_256043988);
  }
  return result;
}

unint64_t sub_2331B9E2C()
{
  unint64_t result;

  result = qword_256043990;
  if (!qword_256043990)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceTrialFactor, &type metadata for FinanceTrialFactor);
    atomic_store(result, (unint64_t *)&qword_256043990);
  }
  return result;
}

uint64_t sub_2331B9E70(uint64_t a1, uint64_t a2, FinanceKit::FinanceTrialNamespace a3)
{
  return FinanceTrialProvider.stringValue(for:in:)(*(FinanceKit::FinanceTrialFactor *)&a1, a3).value._countAndFlagsBits;
}

uint64_t sub_2331B9E84(uint64_t a1, uint64_t a2, FinanceKit::FinanceTrialNamespace a3)
{
  return FinanceTrialProvider.filePathValue(for:in:)(*(FinanceKit::FinanceTrialFactor *)&a1, a3).value._countAndFlagsBits;
}

uint64_t storeEnumTagSinglePayload for FinanceTrialNamespace(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2331B9EE4 + 4 * byte_233627E25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2331B9F18 + 4 * byte_233627E20[v4]))();
}

uint64_t sub_2331B9F18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B9F20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331B9F28);
  return result;
}

uint64_t sub_2331B9F34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331B9F3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2331B9F40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331B9F48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinanceTrialNamespace()
{
  return &type metadata for FinanceTrialNamespace;
}

_QWORD *initializeBufferWithCopyOfBuffer for FinanceTrialFactor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AccountNumber()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FinanceTrialFactor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FinanceTrialFactor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FinanceTrialFactor()
{
  return &type metadata for FinanceTrialFactor;
}

uint64_t dispatch thunk of FinanceTrialProviding.stringValue(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FinanceTrialProviding.filePathValue(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

ValueMetadata *type metadata accessor for FinanceTrialProvider()
{
  return &type metadata for FinanceTrialProvider;
}

uint64_t initializeWithCopy for FinanceTrialProvider.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FinanceTrialProvider.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FinanceTrialProvider.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FinanceTrialProvider.ExperimentIdentifiers(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 36))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FinanceTrialProvider.ExperimentIdentifiers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FinanceTrialProvider.ExperimentIdentifiers()
{
  return &type metadata for FinanceTrialProvider.ExperimentIdentifiers;
}

uint64_t destroy for FinanceTrialProvider.RolloutIdentifiers()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FinanceTrialProvider.RolloutIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FinanceTrialProvider.RolloutIdentifiers(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FinanceTrialProvider.RolloutIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FinanceTrialProvider.RolloutIdentifiers(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FinanceTrialProvider.RolloutIdentifiers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FinanceTrialProvider.RolloutIdentifiers()
{
  return &type metadata for FinanceTrialProvider.RolloutIdentifiers;
}

BOOL static FinanceFeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FinanceFeatureFlag.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t FinanceFeatureFlag.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

const char *sub_2331BA4AC()
{
  return "Finance";
}

uint64_t sub_2331BA4C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_2331BA4E8 + 4 * byte_233628060[*v0]))("FoundInApp", 10);
}

const char *sub_2331BA4E8()
{
  return "BoskoopAPI";
}

const char *sub_2331BA4FC()
{
  return "CredentialSync";
}

const char *sub_2331BA510()
{
  return "OrderSchemaVersionTwo";
}

const char *sub_2331BA524()
{
  return "BankCredentialsSync";
}

const char *sub_2331BA538()
{
  return "UKReconfirmation";
}

Swift::Bool __swiftcall isFinanceFeatureEnabled(_:)(FinanceKit::FinanceFeatureFlag a1)
{
  char v1;
  uint64_t v2;
  Class v3;
  _BYTE v5[24];
  ValueMetadata *v6;
  unint64_t v7;

  v1 = *(_BYTE *)a1;
  v2 = sub_23361E12C();
  v3 = NSClassFromString((NSString *)v2);

  v6 = &_s10FinanceKit11FeatureFlagVN_0;
  v7 = sub_2331BA5D8();
  v5[0] = v1;
  LOBYTE(v2) = sub_23361D988();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  return v2 & 1 | (v3 != 0);
}

unint64_t sub_2331BA5D8()
{
  unint64_t result;

  result = qword_256043998;
  if (!qword_256043998)
  {
    result = MEMORY[0x234934494](&unk_233628150, &_s10FinanceKit11FeatureFlagVN_0);
    atomic_store(result, (unint64_t *)&qword_256043998);
  }
  return result;
}

unint64_t sub_2331BA620()
{
  unint64_t result;

  result = qword_2560439A0;
  if (!qword_2560439A0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceFeatureFlag, &type metadata for FinanceFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2560439A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FinanceFeatureFlag()
{
  return &type metadata for FinanceFeatureFlag;
}

uint64_t getEnumTagSinglePayload for AccountNumberSchemeType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10FinanceKit18FinanceFeatureFlagOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2331BA758 + 4 * byte_23362806B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2331BA78C + 4 * byte_233628066[v4]))();
}

uint64_t sub_2331BA78C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331BA794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331BA79CLL);
  return result;
}

uint64_t sub_2331BA7A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331BA7B0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2331BA7B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331BA7BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10FinanceKit11FeatureFlagVMa_0()
{
  return &_s10FinanceKit11FeatureFlagVN_0;
}

uint64_t BankConnectService.termsAndConditions(withInstitutionID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for BankConnectService.Message();
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331BA838()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[7];
  v2 = v0[4];
  *v1 = v0[3];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043078 + dword_256043078);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_2331BA8CC;
  return v5(v0[2], v0[7]);
}

uint64_t sub_2331BA8CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331BA954()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.termsAndConditionsURL(forTermsAndConditionsID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for BankConnectService.Message();
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331BA9E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[7];
  v2 = v0[4];
  *v1 = v0[3];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043070 + dword_256043070);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_2331BAA7C;
  return v5(v0[2], v0[7]);
}

uint64_t sub_2331BAA7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t BankConnectService.updateTermsAndConditions(withTermsAndConditionsID:reviewedAt:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v4[14] = type metadata accessor for BankConnectService.Message();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331BAB64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = (_QWORD *)v0[15];
  v2 = v0[12];
  v4 = v0[10];
  v3 = v0[11];
  v0[16] = *(_QWORD *)(v0[13] + 16);
  v5 = (char *)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2560439C0) + 48);
  *v1 = v4;
  v1[1] = v3;
  v6 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v2, v6);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2331BAC0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[16];
  v0[2] = v0;
  v0[3] = sub_2331BAC68;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331BAC68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331BACD4()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331BAD14()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331BAD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  v4[5] = type metadata accessor for BankConnectService.Message();
  v5 = swift_task_alloc();
  v6 = *v3;
  v4[6] = v5;
  v4[7] = v6;
  return swift_task_switch();
}

uint64_t sub_2331BADB8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[6];
  v2 = v0[4];
  *v1 = v0[3];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043078 + dword_256043078);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_2331BAE4C;
  return v5(v0[2], v0[6]);
}

uint64_t sub_2331BAE4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331BAED8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331BAF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  v4[5] = type metadata accessor for BankConnectService.Message();
  v5 = swift_task_alloc();
  v6 = *v3;
  v4[6] = v5;
  v4[7] = v6;
  return swift_task_switch();
}

uint64_t sub_2331BAF70()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[6];
  v2 = v0[4];
  *v1 = v0[3];
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256043070 + dword_256043070);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_2331BB004;
  return v5(v0[2], v0[6]);
}

uint64_t sub_2331BB004()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331BB090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return BankConnectService.updateTermsAndConditions(withTermsAndConditionsID:reviewedAt:)(a1, a2, a3);
}

uint64_t dispatch thunk of BankConnectTermsAndConditionsProviding.termsAndConditions(withInstitutionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2331676FC;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of BankConnectTermsAndConditionsProviding.termsAndConditionsURL(forTermsAndConditionsID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23318C26C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of BankConnectTermsAndConditionsProviding.updateTermsAndConditions(withTermsAndConditionsID:reviewedAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23318C26C;
  return v13(a1, a2, a3, a4, a5);
}

void sub_2331BB2B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_accountDescription);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2331BB31C(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setAccountDescription_);

}

void sub_2331BB378(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  v5 = sub_23361E150();
  v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

id ManagedAccount.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccount.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAccount.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedAccount.__allocating_init(_:consent:context:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  int *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  int v70;
  __int16 v71;
  __int16 v72;
  uint64_t v73;
  __int16 v74;
  __int16 v75;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v64 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)&v59 - v10;
  v11 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone(v3);
  v66 = a3;
  v15 = objc_msgSend(v14, sel_initWithContext_, a3);
  v16 = (void *)sub_23361D658();
  objc_msgSend(v15, sel_setId_, v16);

  v17 = (int *)type metadata accessor for InternalAccount();
  objc_msgSend(v15, sel_setAccountTypeValue_, *(unsigned __int8 *)(a1 + v17[9]));
  v18 = (void *)sub_23361E12C();
  objc_msgSend(v15, sel_setDisplayName_, v18);

  v65 = a2;
  Institution.init(_:)(objc_msgSend(a2, sel_institutionObject), (uint64_t)v13);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v13, type metadata accessor for Institution);
  v19 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setInstitutionName_, v19);

  if (*(_QWORD *)(a1 + v17[12] + 8))
  {
    swift_bridgeObjectRetain();
    v20 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v15, sel_setAccountDescription_, v20);

  v21 = (void *)sub_23361E12C();
  objc_msgSend(v15, sel_setCurrency_, v21);

  v22 = (uint64_t *)(a1 + v17[15]);
  v23 = v22[4];
  v68 = v17;
  v69 = a1;
  if (v23)
  {
    v25 = v22[1];
    v24 = v22[2];
    v26 = *v22;
    v27 = HIDWORD(*v22);
    v28 = HIWORD(*v22);
    v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v24 >> 16);
    v29 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v70 = v26;
    v71 = v27;
    v72 = v28;
    v73 = v25;
    v17 = v68;
    a1 = v69;
    v74 = v24;
    v75 = (__int16)v63;
    v30 = objc_msgSend(v29, sel_initWithDecimal_, &v70);
    objc_msgSend(v15, sel_setCreditLimitAmountValue_, v30);

  }
  else
  {
    objc_msgSend(v15, sel_setCreditLimitAmountValue_, 0);
  }
  v31 = v67;
  sub_23319F164(a1 + v17[16], v67);
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v34 = v63(v31, 1, v32);
  v35 = 0;
  if (v34 != 1)
  {
    v36 = v67;
    v35 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v32);
  }
  v62 = v33;
  v67 = v32;
  objc_msgSend(v15, sel_setNextPaymentDate_, v35);

  v37 = (uint64_t *)(a1 + v17[17]);
  if (v37[4])
  {
    v39 = v37[2];
    v38 = v37[3];
    v41 = *v37;
    v40 = v37[1];
    v42 = HIDWORD(*v37);
    v43 = HIWORD(*v37);
    v60 = v39 >> 16;
    v61 = v38;
    v59 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    swift_bridgeObjectRetain();
    v70 = v41;
    v71 = v42;
    v72 = v43;
    v73 = v40;
    v74 = v39;
    v17 = v68;
    a1 = v69;
    v75 = v60;
    v44 = objc_msgSend(v59, sel_initWithDecimal_, &v70);
    objc_msgSend(v15, sel_setMinimumPaymentAmountValue_, v44);

    v45 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setCurrency_, v45);

  }
  else
  {
    objc_msgSend(v15, sel_setMinimumPaymentAmountValue_, 0);
  }
  v46 = (uint64_t *)(a1 + v17[18]);
  if (v46[4])
  {
    v48 = v46[2];
    v47 = v46[3];
    v50 = *v46;
    v49 = v46[1];
    v51 = HIDWORD(*v46);
    v52 = HIWORD(*v46);
    v60 = v48 >> 16;
    v61 = v47;
    v59 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    swift_bridgeObjectRetain();
    v70 = v50;
    v71 = v51;
    v72 = v52;
    v73 = v49;
    v74 = v48;
    v17 = v68;
    a1 = v69;
    v75 = v60;
    v53 = objc_msgSend(v59, sel_initWithDecimal_, &v70);
    objc_msgSend(v15, sel_setOverduePaymentAmountValue_, v53);

    v54 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setCurrency_, v54);

  }
  else
  {
    objc_msgSend(v15, sel_setOverduePaymentAmountValue_, 0);
  }
  v55 = v64;
  sub_23319F164(a1 + v17[28], v64);
  v56 = v67;
  if (v63(v55, 1, v67) == 1)
  {
    v57 = 0;
  }
  else
  {
    v57 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v55, v56);
  }
  objc_msgSend(v15, sel_setOpeningDate_, v57);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalAccount);
  return v15;
}

{
  objc_class *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v14;

  v7 = sub_23361D6A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a3);
  sub_23361D694();
  v12 = (void *)sub_23361D658();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v11, sel_setId_, v12);

  _s10FinanceKit14ManagedAccountC6update_7consent07withRawD0yAC_AA0C7ConsentCAA0H15BankConnectDataO0D0OtFZ_0(v11, a2, a1);
  sub_233168500(a1, type metadata accessor for RawBankConnectData.Account);
  return v11;
}

void ManagedAccount.creditLimit.setter(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  int v8;
  __int16 v9;
  __int16 v10;
  uint64_t v11;
  int v12;

  if (a1[4])
  {
    v3 = a1[1];
    v2 = a1[2];
    v4 = HIDWORD(*a1);
    v5 = HIWORD(*a1);
    v8 = *a1;
    v9 = v4;
    v10 = v5;
    v11 = v3;
    v12 = v2;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDecimal_, &v8);
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setCreditLimitAmountValue_, v6);

  }
  else
  {
    objc_msgSend(v1, sel_setCreditLimitAmountValue_, 0);
  }
}

void ManagedAccount.minimumPaymentAmount.setter(_QWORD *a1)
{
  sub_2331BBC38(a1, (SEL *)&selRef_setMinimumPaymentAmountValue_);
}

void ManagedAccount.overduePaymentAmount.setter(_QWORD *a1)
{
  sub_2331BBC38(a1, (SEL *)&selRef_setOverduePaymentAmountValue_);
}

void sub_2331BBC38(_QWORD *a1, SEL *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  int v10;
  __int16 v11;
  __int16 v12;
  uint64_t v13;
  int v14;

  if (a1[4])
  {
    v4 = a1[2];
    v5 = a1[1];
    v6 = HIDWORD(*a1);
    v7 = HIWORD(*a1);
    v10 = *a1;
    v11 = v6;
    v12 = v7;
    v13 = v5;
    v14 = v4;
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDecimal_, &v10);
    objc_msgSend(v2, *a2, v8);

    v9 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setCurrency_, v9);

  }
  else
  {
    objc_msgSend(v2, *a2, 0);
  }
}

uint64_t Account.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int v136;
  char v137;

  v133 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v129 = (char *)&v107 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v107 - v9;
  v11 = sub_23361D6A0();
  v130 = *(_QWORD *)(v11 - 8);
  v131 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v107 - v15;
  v132 = type metadata accessor for Account(0);
  v17 = MEMORY[0x24BDAC7A8](v132);
  v19 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v107 - v20;
  ManagedAccount.accountType.getter(&v137);
  v22 = v137;
  v23 = objc_msgSend(a1, "id");
  if ((v22 & 1) != 0)
  {
    v128 = v14;
    sub_23361D67C();

    v24 = objc_msgSend(a1, sel_displayName);
    v25 = sub_23361E150();
    v127 = v26;

    v27 = objc_msgSend(a1, sel_accountDescription);
    if (v27)
    {
      v28 = v27;
      v29 = sub_23361E150();
      v125 = v30;
      v126 = v29;

    }
    else
    {
      v125 = 0;
      v126 = 0;
    }
    v38 = (uint64_t)v6;
    v39 = objc_msgSend(a1, sel_institutionName);
    v40 = sub_23361E150();
    v123 = v41;
    v124 = v40;

    v42 = objc_msgSend(a1, sel_currency);
    v43 = sub_23361E150();
    v121 = v44;
    v122 = v43;

    v45 = objc_msgSend(a1, sel_creditLimitAmountValue);
    v46 = (uint64_t)v129;
    if (v45)
    {
      v47 = v45;
      objc_msgSend(v45, sel_decimalValue);
      v120 = v136;
      v118 = v134;
      v119 = v135;
      v48 = objc_msgSend(a1, sel_currency);
      v117 = sub_23361E150();
      v116 = v49;

    }
    else
    {
      v118 = 0;
      v119 = 0;
      v120 = 0;
      v117 = 0;
      v116 = 0;
    }
    v61 = objc_msgSend(a1, sel_nextPaymentDate);
    if (v61)
    {
      v62 = v61;
      sub_23361D5EC();

      v63 = sub_23361D634();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v46, 0, 1, v63);
    }
    else
    {
      v72 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v46, 1, 1, v72);
    }
    v73 = objc_msgSend(a1, sel_minimumPaymentAmountValue);
    if (v73)
    {
      v74 = v73;
      objc_msgSend(v73, sel_decimalValue);
      v115 = v136;
      v114 = v135;
      v113 = v134;
      v75 = objc_msgSend(a1, sel_currency);
      v112 = sub_23361E150();
      v111 = v76;

    }
    else
    {
      v113 = 0;
      v114 = 0;
      v115 = 0;
      v112 = 0;
      v111 = 0;
    }
    v77 = objc_msgSend(a1, sel_overduePaymentAmountValue);
    if (v77)
    {
      v78 = v77;
      objc_msgSend(v77, (SEL)&selRef_initWithEntity_insertIntoManagedObjectContext_ + 1);
      v110 = v136;
      v109 = v135;
      v108 = v134;
      v79 = objc_msgSend(a1, sel_currency);
      v80 = sub_23361E150();
      v82 = v81;

    }
    else
    {
      v108 = 0;
      v109 = 0;
      v110 = 0;
      v80 = 0;
      v82 = 0;
    }
    v83 = v128;
    v84 = objc_msgSend(a1, sel_openingDate);
    if (v84)
    {
      v85 = v84;
      sub_23361D5EC();

      v86 = sub_23361D634();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v38, 0, 1, v86);
    }
    else
    {

      v87 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v38, 1, 1, v87);
    }
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v19, v83, v131);
    v88 = (int *)type metadata accessor for LiabilityAccount(0);
    v89 = (uint64_t *)&v19[v88[5]];
    v90 = v127;
    *v89 = v25;
    v89[1] = v90;
    v91 = &v19[v88[6]];
    v92 = v125;
    *(_QWORD *)v91 = v126;
    *((_QWORD *)v91 + 1) = v92;
    v93 = &v19[v88[8]];
    v94 = v121;
    *(_QWORD *)v93 = v122;
    *((_QWORD *)v93 + 1) = v94;
    v95 = &v19[v88[7]];
    v96 = v123;
    *(_QWORD *)v95 = v124;
    *((_QWORD *)v95 + 1) = v96;
    v97 = &v19[v88[9]];
    v98 = v119;
    *(_QWORD *)v97 = v118;
    *((_QWORD *)v97 + 1) = v98;
    v99 = v117;
    *((_QWORD *)v97 + 2) = v120;
    *((_QWORD *)v97 + 3) = v99;
    *((_QWORD *)v97 + 4) = v116;
    v100 = (int *)type metadata accessor for AccountCreditInformation(0);
    sub_2331B05C8(v46, (uint64_t)&v97[v100[5]]);
    v101 = &v97[v100[6]];
    v102 = v114;
    *(_QWORD *)v101 = v113;
    *((_QWORD *)v101 + 1) = v102;
    v103 = v112;
    *((_QWORD *)v101 + 2) = v115;
    *((_QWORD *)v101 + 3) = v103;
    *((_QWORD *)v101 + 4) = v111;
    v104 = &v97[v100[7]];
    v105 = v109;
    *(_QWORD *)v104 = v108;
    *((_QWORD *)v104 + 1) = v105;
    *((_QWORD *)v104 + 2) = v110;
    *((_QWORD *)v104 + 3) = v80;
    *((_QWORD *)v104 + 4) = v82;
    sub_2331B05C8(v38, (uint64_t)&v19[v88[10]]);
    swift_storeEnumTagMultiPayload();
    v21 = v19;
  }
  else
  {
    sub_23361D67C();

    v31 = objc_msgSend(a1, sel_displayName);
    v32 = sub_23361E150();
    v128 = v33;
    v129 = (char *)v32;

    v34 = objc_msgSend(a1, sel_accountDescription);
    if (v34)
    {
      v35 = v34;
      v36 = sub_23361E150();
      v126 = v37;
      v127 = v36;

    }
    else
    {
      v126 = 0;
      v127 = 0;
    }
    v50 = objc_msgSend(a1, sel_institutionName);
    v51 = sub_23361E150();
    v53 = v52;

    v54 = objc_msgSend(a1, sel_currency);
    v55 = sub_23361E150();
    v57 = v56;

    v58 = objc_msgSend(a1, sel_openingDate);
    if (v58)
    {
      v59 = v58;
      sub_23361D5EC();

      v60 = sub_23361D634();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v10, 0, 1, v60);
    }
    else
    {

      v64 = sub_23361D634();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v10, 1, 1, v64);
    }
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v21, v16, v131);
    v65 = (int *)type metadata accessor for AssetAccount(0);
    v66 = &v21[v65[5]];
    v67 = v128;
    *(_QWORD *)v66 = v129;
    *((_QWORD *)v66 + 1) = v67;
    v68 = &v21[v65[6]];
    v69 = v126;
    *(_QWORD *)v68 = v127;
    *((_QWORD *)v68 + 1) = v69;
    v70 = (uint64_t *)&v21[v65[8]];
    *v70 = v55;
    v70[1] = v57;
    v71 = (uint64_t *)&v21[v65[7]];
    *v71 = v51;
    v71[1] = v53;
    sub_2331B05C8((uint64_t)v10, (uint64_t)&v21[v65[9]]);
    swift_storeEnumTagMultiPayload();
  }
  return sub_233168580((uint64_t)v21, v133, type metadata accessor for Account);
}

id ManagedAccount.accountType.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;

  v2 = v1;
  result = objc_msgSend(v2, sel_accountTypeValue);
  if ((_DWORD)result && (int)result != 1)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_accountTypeValue);
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = (id)sub_23361EF24();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

void ManagedAccount.creditLimit.getter(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_creditLimitAmountValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    v6 = v15;
    v7 = v14;
    v8 = v13;
    v9 = objc_msgSend(v2, sel_currency);
    v10 = sub_23361E150();
    v12 = v11;

  }
  else
  {
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v10 = 0;
    v12 = 0;
  }
  *a1 = v8;
  a1[1] = v7;
  a1[2] = v6;
  a1[3] = v10;
  a1[4] = v12;
}

void ManagedAccount.minimumPaymentAmount.getter(_QWORD *a1@<X8>)
{
  sub_2331BC898((SEL *)&selRef_minimumPaymentAmountValue, a1);
}

void ManagedAccount.overduePaymentAmount.getter(_QWORD *a1@<X8>)
{
  sub_2331BC898((SEL *)&selRef_overduePaymentAmountValue, a1);
}

void sub_2331BC898(SEL *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v3 = v2;
  v5 = objc_msgSend(v2, *a1);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_decimalValue);
    v7 = v16;
    v8 = v15;
    v9 = v14;
    v10 = objc_msgSend(v3, sel_currency);
    v11 = sub_23361E150();
    v13 = v12;

  }
  else
  {
    v9 = 0;
    v8 = 0;
    v7 = 0;
    v11 = 0;
    v13 = 0;
  }
  *a2 = v9;
  a2[1] = v8;
  a2[2] = v7;
  a2[3] = v11;
  a2[4] = v13;
}

void sub_2331BC964(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_creditLimitAmountValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    v6 = v15;
    v7 = v14;
    v8 = v13;
    v9 = objc_msgSend(v3, sel_currency);
    v10 = sub_23361E150();
    v12 = v11;

  }
  else
  {
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v10 = 0;
    v12 = 0;
  }
  *a2 = v8;
  a2[1] = v7;
  a2[2] = v6;
  a2[3] = v10;
  a2[4] = v12;
}

void sub_2331BCA34(_QWORD *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  int v8;
  __int16 v9;
  __int16 v10;
  uint64_t v11;
  int v12;

  v2 = *a2;
  if (a1[4])
  {
    v4 = a1[1];
    v3 = a1[2];
    v5 = HIDWORD(*a1);
    v6 = HIWORD(*a1);
    v8 = *a1;
    v9 = v5;
    v10 = v6;
    v11 = v4;
    v12 = v3;
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDecimal_, &v8);
    objc_msgSend(v2, sel_setCreditLimitAmountValue_, v7);

  }
  else
  {
    objc_msgSend(v2, sel_setCreditLimitAmountValue_, 0);
  }
}

void (*ManagedAccount.creditLimit.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_creditLimitAmountValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    v6 = v16;
    v7 = v15;
    v8 = v14;
    v9 = objc_msgSend(v1, sel_currency);
    v10 = sub_23361E150();
    v12 = v11;

  }
  else
  {
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v10 = 0;
    v12 = 0;
  }
  *v3 = v8;
  v3[1] = v7;
  v3[2] = v6;
  v3[3] = v10;
  v3[4] = v12;
  return sub_2331BCC18;
}

void sub_2331BCC18(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)a1 + 48;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    if (v5)
    {
      v7 = v2[1];
      v6 = v2[2];
      v8 = *v2;
      v9 = HIDWORD(*v2);
      v10 = HIWORD(*v2);
      v11 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      *((_DWORD *)v2 + 12) = v8;
      *((_WORD *)v2 + 26) = v9;
      *((_WORD *)v2 + 27) = v10;
      v2[7] = v7;
      *((_DWORD *)v2 + 16) = v6;
      v12 = objc_msgSend(v11, sel_initWithDecimal_, v3);
      objc_msgSend(v4, sel_setCreditLimitAmountValue_, v12);

    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 40), sel_setCreditLimitAmountValue_, 0);
    }
    swift_bridgeObjectRelease();
  }
  else if (v5)
  {
    v14 = v2[1];
    v13 = v2[2];
    v15 = *v2;
    v16 = HIDWORD(*v2);
    v17 = HIWORD(*v2);
    v18 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    *((_DWORD *)v2 + 12) = v15;
    *((_WORD *)v2 + 26) = v16;
    *((_WORD *)v2 + 27) = v17;
    v2[7] = v14;
    *((_DWORD *)v2 + 16) = v13;
    v19 = objc_msgSend(v18, sel_initWithDecimal_, v3);
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setCreditLimitAmountValue_, v19);

  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)a1 + 40), sel_setCreditLimitAmountValue_, 0);
  }
  free(v2);
}

void (*ManagedAccount.minimumPaymentAmount.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_minimumPaymentAmountValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    v6 = v16;
    v7 = v15;
    v8 = v14;
    v9 = objc_msgSend(v1, sel_currency);
    v10 = sub_23361E150();
    v12 = v11;

  }
  else
  {
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v10 = 0;
    v12 = 0;
  }
  *v3 = v8;
  v3[1] = v7;
  v3[2] = v6;
  v3[3] = v10;
  v3[4] = v12;
  return sub_2331BCEBC;
}

void sub_2331BCEBC(uint64_t a1, char a2)
{
  sub_2331BD1CC(a1, a2, (SEL *)&selRef_setMinimumPaymentAmountValue_);
}

void sub_2331BCEC8(id *a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v4 = *a1;
  v5 = objc_msgSend(*a1, *a2);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_decimalValue);
    v7 = v16;
    v8 = v15;
    v9 = v14;
    v10 = objc_msgSend(v4, sel_currency);
    v11 = sub_23361E150();
    v13 = v12;

  }
  else
  {
    v9 = 0;
    v8 = 0;
    v7 = 0;
    v11 = 0;
    v13 = 0;
  }
  *a3 = v9;
  a3[1] = v8;
  a3[2] = v7;
  a3[3] = v11;
  a3[4] = v13;
}

void sub_2331BCF94(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  int v15;
  __int16 v16;
  __int16 v17;
  uint64_t v18;
  int v19;

  v6 = *a2;
  if (a1[4])
  {
    v7 = a1[2];
    v9 = *a1;
    v8 = a1[1];
    v10 = HIDWORD(*a1);
    v11 = HIWORD(*a1);
    v14 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    swift_bridgeObjectRetain();
    v15 = v9;
    v16 = v10;
    v17 = v11;
    v18 = v8;
    v19 = v7;
    v12 = objc_msgSend(v14, sel_initWithDecimal_, &v15);
    objc_msgSend(v6, *a5, v12);

    v13 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setCurrency_, v13);

  }
  else
  {
    objc_msgSend(v6, *a5, 0);
  }
}

void (*ManagedAccount.overduePaymentAmount.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_overduePaymentAmountValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_decimalValue);
    v6 = v16;
    v7 = v15;
    v8 = v14;
    v9 = objc_msgSend(v1, sel_currency);
    v10 = sub_23361E150();
    v12 = v11;

  }
  else
  {
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v10 = 0;
    v12 = 0;
  }
  *v3 = v8;
  v3[1] = v7;
  v3[2] = v6;
  v3[3] = v10;
  v3[4] = v12;
  return sub_2331BD1C0;
}

void sub_2331BD1C0(uint64_t a1, char a2)
{
  sub_2331BD1CC(a1, a2, (SEL *)&selRef_setOverduePaymentAmountValue_);
}

void sub_2331BD1CC(uint64_t a1, char a2, SEL *a3)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)a1 + 48;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    if (v7)
    {
      v8 = v4[2];
      v10 = *v4;
      v9 = v4[1];
      v11 = HIDWORD(*v4);
      v12 = HIWORD(*v4);
      v23 = objc_allocWithZone(MEMORY[0x24BDD1518]);
      swift_bridgeObjectRetain();
      *((_DWORD *)v4 + 12) = v10;
      *((_WORD *)v4 + 26) = v11;
      *((_WORD *)v4 + 27) = v12;
      v4[7] = v9;
      *((_DWORD *)v4 + 16) = v8;
      v13 = objc_msgSend(v23, sel_initWithDecimal_, v5);
      objc_msgSend(v6, *a3, v13);

      v14 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setCurrency_, v14);

    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 40), *a3, 0);
    }
    swift_bridgeObjectRelease();
  }
  else if (v7)
  {
    v15 = v4[2];
    v17 = *v4;
    v16 = v4[1];
    v18 = HIDWORD(*v4);
    v19 = HIWORD(*v4);
    v20 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    *((_DWORD *)v4 + 12) = v17;
    *((_WORD *)v4 + 26) = v18;
    *((_WORD *)v4 + 27) = v19;
    v4[7] = v16;
    *((_DWORD *)v4 + 16) = v15;
    v21 = objc_msgSend(v20, sel_initWithDecimal_, v5);
    objc_msgSend(v6, *a3, v21);

    v22 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setCurrency_, v22);

  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)a1 + 40), *a3, 0);
  }
  free(v4);
}

void sub_2331BD3F4(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  int v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  int v29;
  id v30;
  id v31;
  void *v32;
  char *v33;
  id v34;
  id v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  id v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  __int128 v45;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - v12;
  v14 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a3, sel_currency);
  if (!v17)
  {
    sub_23361E150();
    v17 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  v40 = sub_23361E150();
  v41 = v18;
  Institution.init(_:)(objc_msgSend(a2, sel_institutionObject), (uint64_t)v16);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v16, type metadata accessor for Institution);
  v19 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setInstitutionName_, v19);

  objc_msgSend(a1, sel_setAccountTypeValue_, objc_msgSend(a3, sel_type) == 0);
  objc_msgSend(a1, sel_setCurrency_, v17);

  v20 = objc_msgSend(a3, sel_displayName);
  if (!v20)
  {
    sub_23361E150();
    v20 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setDisplayName_, v20);

  v21 = objc_msgSend(a3, sel_displayName);
  if (!v21)
  {
    sub_23361E150();
    v21 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setAccountDescription_, v21);

  v22 = objc_msgSend(a3, sel_creditLimit);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_decimalValue);
    v24 = v44;
    v39 = v45;

    v25 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v44 = v24;
    v45 = v39;
    v26 = objc_msgSend(v25, sel_initWithDecimal_, &v44);
    objc_msgSend(a1, sel_setCreditLimitAmountValue_, v26);

  }
  v27 = objc_msgSend(a3, sel_minimumDueAmount);
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, sel_decimalValue);
    v29 = v44;
    v39 = v45;

    v30 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v44 = v29;
    v45 = v39;
    v31 = objc_msgSend(v30, sel_initWithDecimal_, &v44);
    objc_msgSend(a1, sel_setMinimumPaymentAmountValue_, v31);

    v32 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setCurrency_, v32);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v33 = v42;
  v34 = objc_msgSend(a3, sel_overduePaymentAmount);
  objc_msgSend(a1, sel_setOverduePaymentAmountValue_, v34);

  v35 = objc_msgSend(a3, sel_nextPaymentDueDate);
  if (v35)
  {
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v33, v6);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v36(v13, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      v35 = 0;
    }
    else
    {
      v35 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v36(v13, 1, 1, v6);
  }
  objc_msgSend(a1, sel_setNextPaymentDate_, v35);

  v37 = objc_msgSend(a3, sel_openingDate);
  if (v37)
  {
    sub_23361D5EC();

    v38 = v43;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v33, v6);
    v36(v38, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v38, 1, v6) == 1)
    {
      v37 = 0;
    }
    else
    {
      v37 = (id)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v38, v6);
    }
  }
  else
  {
    v36(v43, 1, 1, v6);
  }
  objc_msgSend(a1, sel_setOpeningDate_, v37);

}

void _s10FinanceKit14ManagedAccountC6update_7consent07withRawD0yAC_AA0C7ConsentCAA0H15BankConnectDataO0D0OtFZ_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  _BOOL8 v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  __int16 v53;
  __int16 v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  __int16 v67;
  __int16 v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  id v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  __int16 v81;
  __int16 v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void *v97;
  int v98;
  __int16 v99;
  __int16 v100;
  __int16 v101;
  __int16 v102;
  __int16 v103;
  __int16 v104;
  __int16 v105;
  __int16 v106;

  v96 = a3;
  v97 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v95 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for RawBankConnectData.LiabilityAccount(0);
  MEMORY[0x24BDAC7A8](v94);
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for RawBankConnectData.AssetAccount(0);
  MEMORY[0x24BDAC7A8](v91);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawBankConnectData.Account(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v91 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v91 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v91 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v91 - v21;
  v23 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  Institution.init(_:)(objc_msgSend(a2, sel_institutionObject), (uint64_t)v25);
  swift_bridgeObjectRetain();
  v26 = v96;
  sub_233168500((uint64_t)v25, type metadata accessor for Institution);
  v27 = (void *)sub_23361E12C();
  v28 = v97;
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setInstitutionName_, v27);

  sub_2331BE518(v26, (uint64_t)v22);
  v29 = swift_getEnumCaseMultiPayload() == 1;
  sub_233168500((uint64_t)v22, type metadata accessor for RawBankConnectData.Account);
  objc_msgSend(v28, sel_setAccountTypeValue_, v29);
  sub_2331BE518(v26, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580((uint64_t)v20, (uint64_t)v7, type metadata accessor for RawBankConnectData.LiabilityAccount);
    swift_bridgeObjectRetain();
    v31 = (uint64_t)v7;
  }
  else
  {
    v30 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580((uint64_t)v20, (uint64_t)v9, type metadata accessor for RawBankConnectData.AssetAccount);
    swift_bridgeObjectRetain();
    v31 = (uint64_t)v9;
  }
  sub_233168500(v31, v30);
  v32 = (uint64_t)v95;
  v33 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setDisplayName_, v33);

  sub_2331BE518(v26, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v34 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580((uint64_t)v17, (uint64_t)v7, type metadata accessor for RawBankConnectData.LiabilityAccount);
    v35 = *((_QWORD *)v7 + 10);
    swift_bridgeObjectRetain();
    v36 = (uint64_t)v7;
  }
  else
  {
    v34 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580((uint64_t)v17, (uint64_t)v9, type metadata accessor for RawBankConnectData.AssetAccount);
    v35 = *((_QWORD *)v9 + 10);
    swift_bridgeObjectRetain();
    v36 = (uint64_t)v9;
  }
  sub_233168500(v36, v34);
  v37 = (uint64_t)v92;
  if (v35)
  {
    v38 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v28, sel_setAccountDescription_, v38);

  sub_2331BE518(v26, v37);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = type metadata accessor for RawBankConnectData.LiabilityAccount;
    sub_233168580(v37, (uint64_t)v7, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_23323F380();
    v40 = (uint64_t)v7;
  }
  else
  {
    v39 = type metadata accessor for RawBankConnectData.AssetAccount;
    sub_233168580(v37, (uint64_t)v9, type metadata accessor for RawBankConnectData.AssetAccount);
    sub_23323F380();
    v40 = (uint64_t)v9;
  }
  sub_233168500(v40, v39);
  v41 = (uint64_t)v93;
  v42 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setCurrency_, v42);

  sub_2331BE518(v26, v41);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580(v41, (uint64_t)v7, type metadata accessor for RawBankConnectData.LiabilityAccount);
    sub_23319F164((uint64_t)&v7[*(int *)(v94 + 52)], v32);
    v43 = (uint64_t)v7;
    v44 = type metadata accessor for RawBankConnectData.LiabilityAccount;
  }
  else
  {
    v45 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v32, 1, 1, v45);
    v44 = type metadata accessor for RawBankConnectData.Account;
    v43 = v41;
  }
  sub_233168500(v43, v44);
  v46 = sub_23361D634();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v32, 1, v46) != 1)
  {
    v48 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v32, v46);
  }
  objc_msgSend(v28, sel_setNextPaymentDate_, v48);

  v49 = RawBankConnectData.Account.creditLimit.getter();
  if ((v51 & 0x100000000) == 0)
  {
    v52 = v49;
    v53 = v50;
    v54 = v51;
    v55 = HIDWORD(v49);
    v56 = HIWORD(v49);
    v57 = v50 >> 16;
    v58 = HIDWORD(v50);
    v59 = HIWORD(v50);
    v60 = v51 >> 16;
    v61 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v98 = v52;
    v99 = v55;
    v100 = v56;
    v101 = v53;
    v102 = v57;
    v103 = v58;
    v104 = v59;
    v28 = v97;
    v105 = v54;
    v106 = v60;
    v62 = objc_msgSend(v61, sel_initWithDecimal_, &v98);
    objc_msgSend(v28, sel_setCreditLimitAmountValue_, v62);

  }
  v63 = RawBankConnectData.Account.minimumPaymentAmount.getter();
  if ((v65 & 0x100000000) == 0)
  {
    v66 = v63;
    v67 = v64;
    v68 = v65;
    v69 = HIDWORD(v63);
    v70 = HIWORD(v63);
    v71 = v64 >> 16;
    v72 = HIDWORD(v64);
    v73 = HIWORD(v64);
    v74 = v65 >> 16;
    v75 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v98 = v66;
    v99 = v69;
    v100 = v70;
    v101 = v67;
    v102 = v71;
    v103 = v72;
    v104 = v73;
    v105 = v68;
    v106 = v74;
    v28 = v97;
    v76 = objc_msgSend(v75, sel_initWithDecimal_, &v98);
    objc_msgSend(v28, sel_setMinimumPaymentAmountValue_, v76);

  }
  v77 = RawBankConnectData.Account.overduePaymentAmount.getter();
  if ((v79 & 0x100000000) == 0)
  {
    v80 = v77;
    v81 = v78;
    v82 = v79;
    v83 = HIDWORD(v77);
    v84 = HIWORD(v77);
    v85 = v78 >> 16;
    v86 = HIDWORD(v78);
    v87 = HIWORD(v78);
    v88 = v79 >> 16;
    v89 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    v98 = v80;
    v99 = v83;
    v100 = v84;
    v101 = v81;
    v102 = v85;
    v103 = v86;
    v104 = v87;
    v105 = v82;
    v106 = v88;
    v90 = objc_msgSend(v89, sel_initWithDecimal_, &v98);
    objc_msgSend(v28, sel_setOverduePaymentAmountValue_, v90);

  }
}

void sub_2331BE118(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D658();
  objc_msgSend(v2, sel_setId_, v3);

}

char *keypath_get_selector_accountTypeValue()
{
  return sel_accountTypeValue;
}

id sub_2331BE16C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_accountTypeValue);
  *a2 = (_WORD)result;
  return result;
}

id sub_2331BE19C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountTypeValue_, *a1);
}

char *keypath_get_selector_displayName()
{
  return sel_displayName;
}

void sub_2331BE1BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_displayName, a2);
}

void sub_2331BE1D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setDisplayName_);
}

char *keypath_get_selector_institutionName()
{
  return sel_institutionName;
}

void sub_2331BE1F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_institutionName, a2);
}

void sub_2331BE20C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setInstitutionName_);
}

char *keypath_get_selector_accountDescription()
{
  return sel_accountDescription;
}

void sub_2331BE22C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_currency, a2);
}

void sub_2331BE248(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setCurrency_);
}

void keypath_set_4Tm(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  v7 = (id)sub_23361E12C();
  objc_msgSend(v6, *a5, v7);

}

char *keypath_get_selector_creditLimitAmountValue()
{
  return sel_creditLimitAmountValue;
}

id sub_2331BE2B0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_creditLimitAmountValue);
  *a2 = result;
  return result;
}

id sub_2331BE2E8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreditLimitAmountValue_, *a1);
}

char *keypath_get_selector_nextPaymentDate()
{
  return sel_nextPaymentDate;
}

uint64_t sub_2331BE308@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_nextPaymentDate, a2);
}

void sub_2331BE324(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setNextPaymentDate_);
}

char *keypath_get_selector_minimumPaymentAmountValue()
{
  return sel_minimumPaymentAmountValue;
}

id sub_2331BE34C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_minimumPaymentAmountValue);
  *a2 = result;
  return result;
}

id sub_2331BE384(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMinimumPaymentAmountValue_, *a1);
}

char *keypath_get_selector_overduePaymentAmountValue()
{
  return sel_overduePaymentAmountValue;
}

id sub_2331BE3A4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_overduePaymentAmountValue);
  *a2 = result;
  return result;
}

id sub_2331BE3DC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOverduePaymentAmountValue_, *a1);
}

char *keypath_get_selector_openingDate()
{
  return sel_openingDate;
}

uint64_t sub_2331BE3FC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23319D58C(a1, (SEL *)&selRef_openingDate, a2);
}

void sub_2331BE418(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_23319D60C(a1, a2, a3, a4, (SEL *)&selRef_setOpeningDate_);
}

id sub_2331BE434@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = ManagedAccount.accountType.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_2331BE46C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccountTypeValue_, *a1);
}

void sub_2331BE488(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2331BCEC8(a1, (SEL *)&selRef_minimumPaymentAmountValue, a2);
}

void sub_2331BE4A4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2331BCF94(a1, a2, a3, a4, (SEL *)&selRef_setMinimumPaymentAmountValue_);
}

void sub_2331BE4C0(id *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2331BCEC8(a1, (SEL *)&selRef_overduePaymentAmountValue, a2);
}

void sub_2331BE4DC(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_2331BCF94(a1, a2, a3, a4, (SEL *)&selRef_setOverduePaymentAmountValue_);
}

uint64_t type metadata accessor for ManagedAccount()
{
  return objc_opt_self();
}

uint64_t sub_2331BE518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Account(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Order.PaymentMethod.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.PaymentMethod.displayName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Order.PaymentMethod.displayName.modify())()
{
  return nullsub_1;
}

uint64_t static Order.PaymentMethod.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23361F224();
}

uint64_t sub_2331BE5FC()
{
  return 0x4E79616C70736964;
}

uint64_t sub_2331BE61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2331BE6C8()
{
  sub_2331BE804();
  return sub_23361F428();
}

uint64_t sub_2331BE6F0()
{
  sub_2331BE804();
  return sub_23361F434();
}

uint64_t Order.PaymentMethod.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560439F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331BE804();
  sub_23361F410();
  sub_23361F140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2331BE804()
{
  unint64_t result;

  result = qword_256043A00;
  if (!qword_256043A00)
  {
    result = MEMORY[0x234934494](&unk_23362833C, &_s13PaymentMethodV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043A00);
  }
  return result;
}

uint64_t Order.PaymentMethod.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043A08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331BE804();
  sub_23361F3EC();
  if (!v2)
  {
    v9 = sub_23361F02C();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2331BE964@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Order.PaymentMethod.init(from:)(a1, a2);
}

uint64_t sub_2331BE978(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560439F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331BE804();
  sub_23361F410();
  sub_23361F140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for Order.PaymentMethod()
{
  return &type metadata for Order.PaymentMethod;
}

uint64_t _s13PaymentMethodV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2331BEAB4 + 4 * byte_2336281E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2331BEAD4 + 4 * byte_2336281E5[v4]))();
}

_BYTE *sub_2331BEAB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2331BEAD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331BEADC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331BEAE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331BEAEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331BEAF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13PaymentMethodV10CodingKeysOMa()
{
  return &_s13PaymentMethodV10CodingKeysON;
}

unint64_t sub_2331BEB14()
{
  unint64_t result;

  result = qword_256043A10;
  if (!qword_256043A10)
  {
    result = MEMORY[0x234934494](&unk_233628314, &_s13PaymentMethodV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043A10);
  }
  return result;
}

unint64_t sub_2331BEB5C()
{
  unint64_t result;

  result = qword_256043A18;
  if (!qword_256043A18)
  {
    result = MEMORY[0x234934494](&unk_233628284, &_s13PaymentMethodV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043A18);
  }
  return result;
}

unint64_t sub_2331BEBA4()
{
  unint64_t result;

  result = qword_256043A20;
  if (!qword_256043A20)
  {
    result = MEMORY[0x234934494](&unk_2336282AC, &_s13PaymentMethodV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043A20);
  }
  return result;
}

uint64_t ManagedTransactionExporter.__allocating_init(transactionClassifier:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *boxed_opaque_existential_0;
  __int128 v10;

  v2 = swift_allocObject();
  v10 = *(_OWORD *)(a1 + 24);
  v3 = v10;
  v4 = __swift_mutable_project_boxed_opaque_existential_1(a1, v10);
  v5 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  *(_OWORD *)(v2 + 40) = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 16));
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 32))(boxed_opaque_existential_0, v7, v3);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v2;
}

uint64_t *ManagedTransactionExporter.init(transactionClassifier:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_2331C061C((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

id sub_2331BED58(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  char **v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  char *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  unsigned int v58;
  signed int v59;
  unsigned int v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v100 = a2;
  v3 = type metadata accessor for Actions();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v95 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v102 = (uint64_t)&v84 - v9;
  v10 = sub_23361D634();
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v101 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_transactionId);
  v13 = sub_23361E150();
  v98 = v14;
  v99 = v13;

  v15 = objc_msgSend(a1, sel_publicTransactionObject);
  v16 = objc_msgSend(v15, sel_amount);
  objc_msgSend(v16, sel_decimalValue);

  v17 = objc_msgSend(v15, sel_currency);
  sub_23361E150();

  v18 = objc_allocWithZone((Class)FKAmount);
  v19 = (void *)sub_23361EA98();
  swift_bridgeObjectRetain();
  v20 = &selRef__initWithImage_;
  v21 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v97 = objc_msgSend(v18, sel_initWithDecimalNumber_currency_, v19, v21);

  swift_bridgeObjectRelease();
  v22 = objc_msgSend(a1, sel_publicTransactionObject);
  v23 = objc_msgSend(v22, sel_foreignAmount);
  if (v23)
  {
    v24 = v23;
    v96 = v5;
    objc_msgSend(v23, sel_decimalValue);

    v25 = objc_msgSend(v22, sel_foreignCurrency);
    if (v25)
    {
      v26 = v25;
      sub_23361E150();

      v27 = objc_allocWithZone((Class)FKAmount);
      swift_bridgeObjectRetain();
      v28 = (void *)sub_23361EA98();
      swift_bridgeObjectRetain();
      v20 = &selRef__initWithImage_;
      v29 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      v88 = objc_msgSend(v27, sel_initWithDecimalNumber_currency_, v28, v29);

      swift_bridgeObjectRelease_n();
    }
    else
    {

      v88 = 0;
    }
    v5 = v96;
  }
  else
  {

    v88 = 0;
  }
  v30 = objc_msgSend(a1, v20[493]);
  v31 = (char *)objc_msgSend(v30, sel_foreignCurrencyExchangeRate);

  v32 = objc_msgSend(a1, v20[493]);
  v33 = objc_msgSend(v32, sel_transactionDate);

  sub_23361D5EC();
  v34 = objc_msgSend(a1, v20[493]);
  v35 = objc_msgSend(v34, sel_postedDate);

  v96 = v31;
  if (v35)
  {
    v36 = v95;
    sub_23361D5EC();

    v37 = 0;
  }
  else
  {
    v37 = 1;
    v36 = v95;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v36, v37, 1, v94);
  sub_2331B05C8(v36, v102);
  v38 = objc_msgSend(a1, v20[493]);
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v38, sel_transactionTypeValue));

  v39 = v103;
  if (v103 == 17)
    v39 = 0;
  LOBYTE(v103) = v39;
  v40 = _sSo24FKPaymentTransactionTypeV10FinanceKitEyAbC0bC0OcfC_0((char *)&v103);
  v41 = objc_msgSend(a1, v20[493]);
  ManagedTransaction.status.getter(&v103);

  v42 = qword_2336283F8[(char)v103];
  v43 = sub_23359D858();
  v45 = v44;
  v46 = objc_msgSend(a1, v20[493]);
  v47 = objc_msgSend(v46, sel_originalTransactionDescription);

  v48 = sub_23361E150();
  v92 = v49;
  v93 = v48;

  v50 = objc_msgSend(a1, v20[493]);
  TransactionType.init(rawValue:)((Swift::Int16)objc_msgSend(v50, sel_transactionTypeValue));

  v51 = v103;
  if (v103 == 17)
    v51 = 0;
  LOBYTE(v103) = v51;
  TransactionType.localizedDescription.getter();
  v53 = v52;
  v91 = v54;
  v55 = objc_msgSend(a1, v20[493]);
  ManagedTransaction.creditDebitIndicator.getter(&v103);

  v90 = v103;
  sub_233168668(0, &qword_256042648);
  Actions.init(_:)(objc_msgSend(a1, sel_actionsObject), (uint64_t)v5);
  v56 = FKActions.init(from:)((uint64_t)v5);
  v57 = objc_msgSend(a1, v20[493]);
  v58 = objc_msgSend(v57, sel_merchantCategoryCodeValue);
  v95 = v42;
  if ((v58 & 0x80000000) != 0)
  {

    v87 = 0;
  }
  else
  {
    v59 = objc_msgSend(v57, sel_merchantCategoryCodeValue);

    v87 = v59;
  }
  v60 = objc_msgSend(a1, sel_hasNotificationServiceData);
  v61 = objc_msgSend(a1, sel_paymentHash);
  v94 = v43;
  v89 = v60;
  if (v61)
  {
    v62 = v61;
    v86 = sub_23361E150();
    v85 = v63;

  }
  else
  {
    v86 = 0;
    v85 = 0;
  }
  v64 = objc_msgSend(a1, sel_altDSID);
  if (v64)
  {
    v65 = v64;
    v66 = v56;
    v67 = v53;
    v68 = v40;
    v69 = sub_23361E150();
    v71 = v70;

  }
  else
  {
    v66 = v56;
    v67 = v53;
    v68 = v40;
    v69 = 0;
    v71 = 0;
  }
  v72 = sub_2331C0694(a1);
  v73 = sub_2331C134C(a1);
  v74 = (void *)sub_2331BF580(a1, v100 & 1);
  v75 = objc_msgSend(objc_allocWithZone((Class)FKPaymentTransactionInsights), sel_initWithApplePayInsight_bankMerchantInformationInsight_mapsInsight_, v72, v73, v74);

  v76 = objc_allocWithZone((Class)FKPaymentTransaction);
  v83 = v71;
  v82 = v67;
  v78 = v96;
  v77 = v97;
  v79 = v88;
  v80 = sub_2331C1558(v99, v98, (uint64_t)v97, (uint64_t)v88, (uint64_t)v96, v101, v102, v68, v95, v94, v45, v93, v92, v82, v91, v90, (uint64_t)v66, 1, v87,
          v89,
          v86,
          v85,
          v69,
          v83,
          (uint64_t)v75);

  return v80;
}

uint64_t sub_2331BF580(void *a1, int a2)
{
  uint64_t v3;
  void (**v4)(char *, uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  id v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void (**v71)(char *, uint64_t);
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (**v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;

  v91 = a2;
  v3 = sub_23361D6A0();
  v4 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MapsBrand();
  v94 = *(_QWORD *)(v7 - 8);
  v95 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v89 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v88 = (uint64_t)&v85 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E480);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v93 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v96 = (void (**)(char *, uint64_t))((char *)&v85 - v14);
  v92 = type metadata accessor for MapsMerchant();
  v15 = *(_QWORD *)(v92 - 8);
  v16 = MEMORY[0x24BDAC7A8](v92);
  v87 = (uint64_t)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v86 = (uint64_t)&v85 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560559E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v85 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = objc_msgSend(a1, sel_insightsObject);
  v29 = (char *)objc_msgSend(v28, sel_mapsInsightObject);

  if (!v29)
  {
    v96 = v4;
    if (qword_256041CA0 != -1)
      swift_once();
    v40 = sub_23361DB80();
    __swift_project_value_buffer(v40, (uint64_t)qword_2560495B0);
    v41 = a1;
    v42 = sub_23361DB68();
    v43 = sub_23361E75C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v98 = v45;
      *(_DWORD *)v44 = 136315394;
      v46 = objc_msgSend(v41, sel_publicTransactionObject);
      v47 = objc_msgSend(v46, "id");

      v48 = v6;
      sub_23361D67C();

      sub_2331C17C8();
      v49 = sub_23361F1D0();
      v51 = v50;
      v96[1](v48, v3);
      v97 = sub_233164DCC(v49, v51, &v98);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      v52 = v91;
      if ((v91 & 1) != 0)
        v53 = 1819044183;
      else
        v53 = 0x746F6E206C6C6957;
      if ((v91 & 1) != 0)
        v54 = 0xE400000000000000;
      else
        v54 = 0xE800000000000000;
      v97 = sub_233164DCC(v53, v54, &v98);
      sub_23361EBC4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v42, v43, "No insight available for transaction %s.\n%s trigger classification.", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234934590](v45, -1, -1);
      MEMORY[0x234934590](v44, -1, -1);

      v55 = v90;
      if ((v52 & 1) == 0)
        return 0;
    }
    else
    {

      v55 = v90;
      if ((v91 & 1) == 0)
        return 0;
    }
    v61 = v55[5];
    v62 = v55[6];
    __swift_project_boxed_opaque_existential_1(v55 + 2, v61);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
    v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_233625CF0;
    *(_QWORD *)(v63 + 32) = v41;
    v98 = v63;
    sub_23361E408();
    v64 = v98;
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 8);
    v66 = v41;
    v65(v64, v61, v62);
    swift_bridgeObjectRelease();
    return 0;
  }
  v30 = objc_msgSend(v29, sel_fallbackCategoryValue);
  if (!v30)
  {
    v56 = v29;
    if (qword_256041CA0 != -1)
      swift_once();
    v57 = sub_23361DB80();
    __swift_project_value_buffer(v57, (uint64_t)qword_2560495B0);
    v58 = sub_23361DB68();
    v59 = sub_23361E768();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_233151000, v58, v59, "Fallback category not available, returning no insight.", v60, 2u);
      MEMORY[0x234934590](v60, -1, -1);
    }

    return 0;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_shortValue);

  if ((v32 & 0x80000000) == 0)
  {
    v33 = objc_msgSend(v29, sel_updatedAt);
    v34 = v27;
    sub_23361D5EC();

    v35 = sub_23361D634();
    v36 = *(_QWORD *)(v35 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v35);
    v37 = objc_msgSend(v29, sel_merchantObject);
    if (v37)
    {
      v38 = v37;
      MapsMerchant.init(_:)(v38, (uint64_t)v24);
      v39 = v92;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v92);

    }
    else
    {
      v39 = v92;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v24, 1, 1, v92);
    }
    v92 = (uint64_t)v32;
    sub_2331686A0((uint64_t)v24, (uint64_t)v22, (uint64_t *)&unk_2560559E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v39) == 1)
    {
      v68 = 0;
    }
    else
    {
      v69 = v86;
      sub_233168580((uint64_t)v22, v86, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      sub_233168668(0, &qword_256043AF8);
      v70 = v87;
      sub_2331684BC(v69, v87, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
      v68 = (void *)sub_2331E9FFC(v70);
      sub_233168500(v69, (uint64_t (*)(_QWORD))type metadata accessor for MapsMerchant);
    }
    v71 = v96;
    v72 = v94;
    sub_233168608((uint64_t)v24, (uint64_t *)&unk_2560559E0);
    v96 = (void (**)(char *, uint64_t))v29;
    v73 = objc_msgSend(v29, sel_brandObject);
    if (v73)
    {
      v74 = v73;
      MapsBrand.init(_:)(v74, (uint64_t)v71);
      v75 = v95;
      (*(void (**)(void (**)(char *, uint64_t), _QWORD, uint64_t, uint64_t))(v72 + 56))(v71, 0, 1, v95);

    }
    else
    {
      v75 = v95;
      (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, 1, 1, v95);
    }
    v76 = v93;
    v77 = (unsigned __int16)v92;
    sub_2331686A0((uint64_t)v71, v93, &qword_25604E480);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v76, 1, v75) == 1)
    {
      v78 = 0;
    }
    else
    {
      v79 = v36;
      v80 = v88;
      sub_233168580(v76, v88, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
      sub_233168668(0, &qword_256043AF0);
      v81 = v89;
      sub_2331684BC(v80, v89, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
      v78 = (void *)sub_2332AEC58(v81);
      v82 = v80;
      v36 = v79;
      sub_233168500(v82, (uint64_t (*)(_QWORD))type metadata accessor for MapsBrand);
    }
    sub_233168608((uint64_t)v71, &qword_25604E480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
    {
      v83 = 0;
    }
    else
    {
      v83 = (void *)sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
    }
    v67 = objc_msgSend(objc_allocWithZone((Class)FKMapsTransactionInsight), sel_initWithUpdatedAt_fallbackCategory_merchant_brand_, v83, v77, v68, v78);

    return (uint64_t)v67;
  }
  result = sub_23361EF18();
  __break(1u);
  return result;
}

uint64_t ManagedTransactionExporter.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t ManagedTransactionExporter.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_2331BFF58(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  void *v11;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;

  v11 = v10;
  if (a2)
  {
    v16 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    if (a6)
      goto LABEL_3;
  }
  else
  {
    v16 = 0;
    if (a6)
    {
LABEL_3:
      v17 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      v18 = a10;
      if (a8)
        goto LABEL_4;
LABEL_8:
      v19 = 0;
      if (v18)
        goto LABEL_5;
LABEL_9:
      v20 = 0;
      goto LABEL_10;
    }
  }
  v17 = 0;
  v18 = a10;
  if (!a8)
    goto LABEL_8;
LABEL_4:
  v19 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_9;
LABEL_5:
  v20 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
LABEL_10:
  v21 = objc_msgSend(v11, sel_initWithCategoryDescription_merchantAddress_merchantCategoryCode_merchantName_merchantNumber_standardIndustrialClassificationCode_, v16, a3, a4, v17, v19, v20);

  return v21;
}

id sub_2331C0088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  id v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;

  if (a2)
  {
    v80 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v80 = 0;
  }
  v48 = sub_23361D634();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(a3, 1, v48) != 1)
  {
    v50 = sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(a3, v48);
  }
  if (a5)
  {
    v79 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v51 = a9;
    if (a7)
      goto LABEL_8;
  }
  else
  {
    v79 = 0;
    v51 = a9;
    if (a7)
    {
LABEL_8:
      v78 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      v52 = a12;
      if (v51)
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  v78 = 0;
  v52 = a12;
  if (v51)
  {
LABEL_9:
    v77 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v53 = a14;
    if (v52)
      goto LABEL_10;
    goto LABEL_17;
  }
LABEL_16:
  v77 = 0;
  v53 = a14;
  if (v52)
  {
LABEL_10:
    v72 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v54 = a16;
    if (v53)
      goto LABEL_11;
    goto LABEL_18;
  }
LABEL_17:
  v72 = 0;
  v54 = a16;
  if (v53)
  {
LABEL_11:
    v76 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v55 = a18;
    if (v54)
      goto LABEL_12;
LABEL_19:
    v75 = 0;
    v56 = a20;
    if (v55)
      goto LABEL_13;
    goto LABEL_20;
  }
LABEL_18:
  v76 = 0;
  v55 = a18;
  if (!v54)
    goto LABEL_19;
LABEL_12:
  v75 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v56 = a20;
  if (v55)
  {
LABEL_13:
    v86 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_20:
  v86 = 0;
LABEL_21:
  if (v56)
  {
    v74 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v57 = a26;
    if (a24)
      goto LABEL_23;
  }
  else
  {
    v74 = 0;
    v57 = a26;
    if (a24)
    {
LABEL_23:
      v73 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      v58 = a28;
      if (v57)
        goto LABEL_24;
      goto LABEL_31;
    }
  }
  v73 = 0;
  v58 = a28;
  if (v57)
  {
LABEL_24:
    v88 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v59 = a30;
    if (v58)
      goto LABEL_25;
    goto LABEL_32;
  }
LABEL_31:
  v88 = 0;
  v59 = a30;
  if (v58)
  {
LABEL_25:
    v87 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v60 = a32;
    if (v59)
      goto LABEL_26;
    goto LABEL_33;
  }
LABEL_32:
  v87 = 0;
  v60 = a32;
  if (v59)
  {
LABEL_26:
    v85 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v61 = a34;
    if (v60)
      goto LABEL_27;
LABEL_34:
    v84 = 0;
    v62 = a36;
    if (v61)
      goto LABEL_28;
    goto LABEL_35;
  }
LABEL_33:
  v85 = 0;
  v61 = a34;
  if (!v60)
    goto LABEL_34;
LABEL_27:
  v84 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v62 = a36;
  if (v61)
  {
LABEL_28:
    v83 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_35:
  v83 = 0;
LABEL_36:
  if (v62)
  {
    v82 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    if (a38)
    {
LABEL_38:
      v63 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
  }
  else
  {
    v82 = 0;
    if (a38)
      goto LABEL_38;
  }
  v63 = 0;
LABEL_41:
  v64 = sub_23361D340();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(a41, 1, v64) != 1)
  {
    v66 = (void *)sub_23361D268();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(a41, v64);
  }
  v67 = (void *)v50;
  if (a43)
  {
    v68 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v68 = 0;
  }
  if (a45)
  {
    v69 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = 0;
  }
  v71 = objc_msgSend(v81, sel_initWithPaymentHash_transactionDate_merchantName_merchantRawName_industryCategory_industryCode_merchantType_merchantCountryCode_terminalIdentifier_merchantAdditionalData_paymentNetwork_isCoarseLocation_location_merchantIdentifier_merchantRawCANL_merchantRawCity_merchantRawState_merchantRawCountry_merchantCity_merchantZip_merchantState_merchantCleanConfidenceLevel_adamIdentifier_webURL_webMerchantIdentifier_webMerchantName_, v80, v67, v79, v78, v77, a10, v72, v76, v75, v86, v74, a21, a22, v73, v88, v87, v85,
          v84,
          v83,
          v82,
          v63,
          a39,
          a40,
          v66,
          v68,
          v69);

  return v71;
}

uint64_t *sub_2331C061C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;

  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id sub_2331C0694(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  void *v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  id v96;
  void *v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int (**v158)(char *, uint64_t, uint64_t);
  uint8_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v2 = sub_23361D6A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v6);
  v160 = (uint64_t)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ApplePayTransactionInsight.Location(0);
  v158 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (double *)((char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v157 = (uint64_t)&v124 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256055AE0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v124 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v19);
  v159 = (uint8_t *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(a1, sel_insightsObject);
  v22 = objc_msgSend(v21, sel_applePayInsightObject);

  if (v22)
  {
    v23 = objc_msgSend(v22, sel_paymentHash);
    v24 = sub_23361E150();
    v155 = v25;
    v156 = v24;

    v26 = objc_msgSend(v22, sel_transactionDate);
    if (v26)
    {
      v27 = v26;
      v28 = (uint64_t)v159;
      sub_23361D5EC();

      v29 = sub_23361D634();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
    }
    else
    {
      v41 = sub_23361D634();
      (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v159, 1, 1, v41);
    }
    v42 = objc_msgSend(v22, sel_merchantName);
    if (v42)
    {
      v43 = v42;
      v44 = sub_23361E150();
      v153 = v45;
      v154 = v44;

    }
    else
    {
      v153 = 0;
      v154 = 0;
    }
    v46 = objc_msgSend(v22, sel_merchantRawName);
    if (v46)
    {
      v47 = v46;
      v48 = sub_23361E150();
      v151 = v49;
      v152 = v48;

    }
    else
    {
      v151 = 0;
      v152 = 0;
    }
    v50 = objc_msgSend(v22, sel_industryCategory);
    if (v50)
    {
      v51 = v50;
      v52 = sub_23361E150();
      v149 = v53;
      v150 = v52;

    }
    else
    {
      v149 = 0;
      v150 = 0;
    }
    v148 = objc_msgSend(v22, sel_industryCodeValue);
    v54 = objc_msgSend(v22, sel_merchantType);
    if (v54)
    {
      v55 = v54;
      v147 = sub_23361E150();
      v146 = v56;

    }
    else
    {
      v147 = 0;
      v146 = 0;
    }
    v57 = objc_msgSend(v22, sel_merchantCountryCode);
    if (v57)
    {
      v58 = v57;
      v145 = sub_23361E150();
      v144 = v59;

    }
    else
    {
      v145 = 0;
      v144 = 0;
    }
    v60 = objc_msgSend(v22, sel_terminalIdentifier);
    if (v60)
    {
      v61 = v60;
      v143 = sub_23361E150();
      v142 = v62;

    }
    else
    {
      v143 = 0;
      v142 = 0;
    }
    v63 = objc_msgSend(v22, sel_merchantAdditionalData);
    if (v63)
    {
      v64 = v63;
      v141 = sub_23361E150();
      v140 = v65;

    }
    else
    {
      v141 = 0;
      v140 = 0;
    }
    v66 = objc_msgSend(v22, sel_paymentNetwork);
    if (v66)
    {
      v67 = v66;
      v139 = sub_23361E150();
      v138 = v68;

    }
    else
    {
      v139 = 0;
      v138 = 0;
    }
    v137 = objc_msgSend(v22, sel_isCoarseLocationValue);
    ManagedApplePayTransactionInsight.location.getter((uint64_t)v18);
    sub_2331686A0((uint64_t)v18, (uint64_t)v16, &qword_256055AE0);
    if (v158[6](v16, 1, v8) == 1)
    {
      v158 = 0;
    }
    else
    {
      v69 = (uint64_t)v16;
      v70 = v157;
      sub_233168580(v69, v157, type metadata accessor for ApplePayTransactionInsight.Location);
      sub_2331684BC(v70, (uint64_t)v11, type metadata accessor for ApplePayTransactionInsight.Location);
      v71 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
      v72 = *v11;
      v73 = v11[1];
      v74 = v11[2];
      v75 = v11[3];
      v76 = v11[4];
      v77 = (void *)sub_23361D5B0();
      v158 = (unsigned int (**)(char *, uint64_t, uint64_t))objc_msgSend(v71, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v77, v72, v73, v74, v75, v76);

      sub_233168500((uint64_t)v11, type metadata accessor for ApplePayTransactionInsight.Location);
      sub_233168500(v70, type metadata accessor for ApplePayTransactionInsight.Location);
    }
    sub_233168608((uint64_t)v18, &qword_256055AE0);
    v78 = objc_msgSend(v22, sel_merchantIdentifier);
    if (v78)
    {
      v79 = v78;
      v157 = sub_23361E150();
      v136 = v80;

    }
    else
    {
      v157 = 0;
      v136 = 0;
    }
    v81 = objc_msgSend(v22, sel_merchantRawCANL);
    if (v81)
    {
      v82 = v81;
      v135 = sub_23361E150();
      v134 = v83;

    }
    else
    {
      v135 = 0;
      v134 = 0;
    }
    v84 = objc_msgSend(v22, sel_merchantRawCity);
    if (v84)
    {
      v85 = v84;
      v133 = sub_23361E150();
      v132 = v86;

    }
    else
    {
      v133 = 0;
      v132 = 0;
    }
    v87 = objc_msgSend(v22, sel_merchantRawState);
    if (v87)
    {
      v88 = v87;
      v131 = sub_23361E150();
      v130 = v89;

    }
    else
    {
      v131 = 0;
      v130 = 0;
    }
    v90 = objc_msgSend(v22, sel_merchantRawCountry);
    if (v90)
    {
      v91 = v90;
      v129 = sub_23361E150();
      v128 = v92;

    }
    else
    {
      v129 = 0;
      v128 = 0;
    }
    v93 = objc_msgSend(v22, sel_merchantCity);
    if (v93)
    {
      v94 = v93;
      v127 = sub_23361E150();
      v126 = v95;

    }
    else
    {
      v127 = 0;
      v126 = 0;
    }
    v96 = objc_msgSend(v22, sel_merchantZip);
    if (v96)
    {
      v97 = v96;
      v125 = sub_23361E150();
      v124 = v98;

    }
    else
    {
      v125 = 0;
      v124 = 0;
    }
    v99 = objc_msgSend(v22, sel_merchantState, v124, v125);
    if (v99)
    {
      v100 = v99;
      v101 = sub_23361E150();
      v103 = v102;

    }
    else
    {
      v101 = 0;
      v103 = 0;
    }
    v104 = objc_msgSend(v22, sel_merchantCleanConfidenceLevelValue);
    v105 = objc_msgSend(v22, sel_adamIdentifierValue);
    v106 = objc_msgSend(v22, sel_webURL);
    if (v106)
    {
      v107 = v106;
      v108 = v160;
      sub_23361D2D4();

      v109 = sub_23361D340();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 0, 1, v109);
    }
    else
    {
      v110 = sub_23361D340();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v160, 1, 1, v110);
    }
    v111 = objc_msgSend(v22, sel_webMerchantIdentifier);
    if (v111)
    {
      v112 = v111;
      v113 = sub_23361E150();
      v115 = v114;

    }
    else
    {
      v113 = 0;
      v115 = 0;
    }
    v116 = objc_msgSend(v22, sel_webMerchantName);
    if (v116)
    {
      v117 = v116;
      v118 = sub_23361E150();
      v120 = v119;

    }
    else
    {
      v118 = 0;
      v120 = 0;
    }
    v121 = objc_allocWithZone((Class)FKApplePayTransactionInsight);
    v122 = sub_2331C0088(v156, v155, (uint64_t)v159, v154, v153, v152, v151, v150, v149, v148, v147, v146, v145, v144, v143, v142, v141, v140, v139,
             v138,
             v137,
             v158,
             v157,
             v136,
             v135,
             v134,
             v133,
             v132,
             v131,
             v130,
             v129,
             v128,
             v127,
             v126,
             v125,
             v124,
             v101,
             v103,
             v104,
             v105,
             v160,
             v113,
             v115,
             v118,
             v120);

  }
  else
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v30 = sub_23361DB80();
    __swift_project_value_buffer(v30, (uint64_t)qword_2560495B0);
    v31 = a1;
    v32 = sub_23361DB68();
    v33 = sub_23361E75C();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v160 = swift_slowAlloc();
      v162 = v160;
      *(_DWORD *)v34 = 136315138;
      v159 = v34 + 4;
      v35 = objc_msgSend(v31, sel_publicTransactionObject);
      v36 = objc_msgSend(v35, "id");

      sub_23361D67C();
      sub_2331C17C8();
      v37 = sub_23361F1D0();
      v39 = v38;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v161 = sub_233164DCC(v37, v39, &v162);
      sub_23361EBC4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233151000, v32, v33, "No Apple Pay insight available for transaction %s.", v34, 0xCu);
      v40 = v160;
      swift_arrayDestroy();
      MEMORY[0x234934590](v40, -1, -1);
      MEMORY[0x234934590](v34, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v122;
}

id sub_2331C134C(void *a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v28;
  uint64_t v29;

  v1 = objc_msgSend(a1, sel_insightsObject);
  v2 = objc_msgSend(v1, sel_bankMerchantInformationInsightObject);

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, sel_categoryDescription);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v28 = objc_msgSend(v2, sel_merchantAddress);
  v9 = ManagedBankMerchantInformationInsight.merchantCategoryCodeValue.getter();
  v29 = v7;
  if ((v9 & 0x10000) != 0)
    v10 = 0;
  else
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithShort_, (__int16)v9);
  v11 = objc_msgSend(v2, sel_merchantName);
  if (v11)
  {
    v12 = v11;
    v13 = sub_23361E150();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v16 = objc_msgSend(v2, sel_merchantNumber);
  if (v16)
  {
    v17 = v16;
    v18 = sub_23361E150();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v21 = objc_msgSend(v2, sel_standardIndustrialClassificationCode);
  if (v21)
  {
    v22 = v21;
    v23 = sub_23361E150();
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v26 = objc_allocWithZone((Class)FKBankMerchantInformationInsight);
  v8 = sub_2331BFF58(v5, v29, v28, v10, v13, v15, v18, v20, v23, v25);

  return v8;
}

id sub_2331C1558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v44;
  uint64_t v46;

  v40 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v46 = a6;
  v39 = (void *)sub_23361D5B0();
  v27 = sub_23361D634();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(a7, 1, v27) != 1)
  {
    v29 = (void *)sub_23361D5B0();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a7, v27);
  }
  v38 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v37 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v36 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  if (a22)
  {
    v30 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = 0;
  }
  if (a24)
  {
    v31 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
  }
  LOBYTE(v35) = a20 & 1;
  LOBYTE(v34) = a18 & 1;
  v32 = objc_msgSend(v44, sel_initWithTransactionIdentifier_amount_foreignAmount_foreignCurrencyExchangeRate_transactionDate_transactionStatusChangedDate_type_status_transactionDescription_originalTransactionDescription_localizedTypeDescription_creditDebitIndicator_actions_isBankConnectTransaction_merchantCategoryCode_hasNotificationServiceData_paymentHash_altDSID_insights_, v40, a3, a4, a5, v39, v29, a8, a9, v38, v37, v36, a16, a17, v34, a19, v35, v30,
          v31,
          a25);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v46, v27);
  return v32;
}

uint64_t dispatch thunk of ManagedTransactionClassifying.classify(transactions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ManagedTransactionExporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedTransactionExporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedTransactionExporter.__allocating_init(transactionClassifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ManagedTransactionExporter.financeKitTransaction(from:classifyIfNecessary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

unint64_t sub_2331C17C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256041E00;
  if (!qword_256041E00)
  {
    v1 = sub_23361D6A0();
    result = MEMORY[0x234934494](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, &qword_256041E00);
  }
  return result;
}

uint64_t dispatch thunk of AnalyticsPayload.analyticsPayload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t InternalAccountQuery.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t InternalAccountQuery.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*InternalAccountQuery.limit.modify())()
{
  return nullsub_1;
}

void *InternalAccountQuery.predicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void InternalAccountQuery.predicate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*InternalAccountQuery.predicate.modify())()
{
  return nullsub_1;
}

uint64_t InternalAccountQuery.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InternalAccountQuery.sortDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*InternalAccountQuery.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t InternalAccountQuery.init(limit:predicate:sortDescriptors:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_2331C18F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2331C2278();
  *a1 = result;
  return result;
}

uint64_t sub_2331C1924@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2331C2278();
  *a1 = result;
  return result;
}

uint64_t sub_2331C1948()
{
  sub_2331C2080();
  return sub_23361F428();
}

uint64_t sub_2331C1970()
{
  sub_2331C2080();
  return sub_23361F434();
}

void InternalAccountQuery.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043B00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C2080();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
  else
  {
    LOBYTE(v28) = 0;
    v9 = sub_23361EFF0();
    v11 = v10;
    v27 = v9;
    LOBYTE(v28) = 1;
    v12 = sub_23361F0A4();
    if ((v12 & 1) != 0)
    {
      v30 = 1;
      sub_2331A6B08();
      sub_23361F068();
      v26 = a2;
      v13 = v28;
      v14 = v29;
      sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_254247FB0);
      v25 = v14;
      v21 = (void *)sub_23361E81C();
      sub_23316BEA4(v13, v25);
    }
    else
    {
      v26 = a2;
      v21 = 0;
    }
    LOBYTE(v28) = 2;
    if ((sub_23361F0A4() & 1) != 0)
    {
      v30 = 2;
      sub_2331A6B08();
      sub_23361F068();
      v18 = v28;
      v19 = v29;
      v25 = sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_2560446E0);
      v23 = v18;
      v24 = v19;
      v20 = sub_23361E834();
      if (v20)
        v15 = v20;
      else
        v15 = MEMORY[0x24BEE4AF8];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_23316BEA4(v23, v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v15 = 0;
    }
    v16 = v26;
    *v26 = v27;
    *((_BYTE *)v16 + 8) = v11 & 1;
    v16[2] = (uint64_t)v21;
    v16[3] = v15;
    swift_bridgeObjectRetain();
    v17 = v21;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

uint64_t InternalAccountQuery.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  id v37;
  unint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043B10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)v1;
  v8 = *(_BYTE *)(v1 + 8);
  v9 = *(void **)(v1 + 16);
  v33 = *(_QWORD *)(v1 + 24);
  v34 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C2080();
  sub_23361F410();
  v37 = v7;
  LOBYTE(v38) = v8;
  v10 = v6;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560430B0);
  sub_2331A6B4C();
  v11 = v35;
  sub_23361F17C();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v4;
  v15 = v33;
  v14 = v34;
  if (v34)
  {
    v16 = (void *)objc_opt_self();
    v37 = 0;
    v17 = v14;
    v18 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, &v37);
    v19 = v37;
    if (!v18)
    {
      v23 = v19;
      sub_23361D1B4();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
    }
    v20 = (void *)sub_23361D3C4();
    v22 = v21;

    v37 = v20;
    v38 = v22;
    v36 = 1;
    sub_2331A6BA8();
    sub_23361F17C();

    sub_23316BEA4((uint64_t)v20, v22);
  }
  if (v15)
  {
    v24 = (void *)objc_opt_self();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v25 = (void *)sub_23361E3D8();
    v37 = 0;
    v26 = objc_msgSend(v24, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v25, 1, &v37);

    v27 = v37;
    if (v26)
    {
      v28 = (void *)sub_23361D3C4();
      v30 = v29;

      v37 = v28;
      v38 = v30;
      v36 = 2;
      sub_2331A6BA8();
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v3);
      return sub_23316BEA4((uint64_t)v28, v30);
    }
    v31 = v27;
    sub_23361D1B4();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
}

void sub_2331C2058(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  InternalAccountQuery.init(from:)(a1, a2);
}

uint64_t sub_2331C206C(_QWORD *a1)
{
  return InternalAccountQuery.encode(to:)(a1);
}

unint64_t sub_2331C2080()
{
  unint64_t result;

  result = qword_256043B08;
  if (!qword_256043B08)
  {
    result = MEMORY[0x234934494](&unk_2336285F0, &type metadata for InternalAccountQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043B08);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountQuery()
{
  return &type metadata for InternalAccountQuery;
}

uint64_t storeEnumTagSinglePayload for InternalAccountQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2331C2120 + 4 * byte_233628445[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2331C2154 + 4 * byte_233628440[v4]))();
}

uint64_t sub_2331C2154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C215C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331C2164);
  return result;
}

uint64_t sub_2331C2170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331C2178);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2331C217C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C2184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalAccountQuery.CodingKeys()
{
  return &type metadata for InternalAccountQuery.CodingKeys;
}

unint64_t sub_2331C21A4()
{
  unint64_t result;

  result = qword_256043B30;
  if (!qword_256043B30)
  {
    result = MEMORY[0x234934494](&unk_2336285C8, &type metadata for InternalAccountQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043B30);
  }
  return result;
}

unint64_t sub_2331C21EC()
{
  unint64_t result;

  result = qword_256043B38;
  if (!qword_256043B38)
  {
    result = MEMORY[0x234934494](&unk_233628500, &type metadata for InternalAccountQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043B38);
  }
  return result;
}

unint64_t sub_2331C2234()
{
  unint64_t result;

  result = qword_256043B40;
  if (!qword_256043B40)
  {
    result = MEMORY[0x234934494](&unk_233628528, &type metadata for InternalAccountQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043B40);
  }
  return result;
}

uint64_t sub_2331C2278()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

FinanceKit::AccountStatus_optional __swiftcall AccountStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FinanceKit::AccountStatus_optional)rawValue;
}

void *static AccountStatus.allCases.getter()
{
  return &unk_250468188;
}

uint64_t AccountStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_2331C22EC()
{
  unint64_t result;

  result = qword_256043B48;
  if (!qword_256043B48)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountStatus, &type metadata for AccountStatus);
    atomic_store(result, (unint64_t *)&qword_256043B48);
  }
  return result;
}

FinanceKit::AccountStatus_optional sub_2331C2330(Swift::Int *a1)
{
  return AccountStatus.init(rawValue:)(*a1);
}

uint64_t sub_2331C2338()
{
  sub_2331C250C();
  return sub_23361E39C();
}

uint64_t sub_2331C2394()
{
  sub_2331C250C();
  return sub_23361E360();
}

unint64_t sub_2331C23E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256043B50;
  if (!qword_256043B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256043B58);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256043B50);
  }
  return result;
}

void sub_2331C2430(_QWORD *a1@<X8>)
{
  *a1 = &unk_2504681B0;
}

uint64_t storeEnumTagSinglePayload for AccountStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2331C248C + 4 * byte_233628645[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2331C24C0 + 4 * byte_233628640[v4]))();
}

uint64_t sub_2331C24C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C24C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331C24D0);
  return result;
}

uint64_t sub_2331C24DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331C24E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2331C24E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C24F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountStatus()
{
  return &type metadata for AccountStatus;
}

unint64_t sub_2331C250C()
{
  unint64_t result;

  result = qword_256043B60;
  if (!qword_256043B60)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountStatus, &type metadata for AccountStatus);
    atomic_store(result, (unint64_t *)&qword_256043B60);
  }
  return result;
}

void Order.PickupFulfillment.StatusValues.init(order:orderContent:fulfillment:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  unsigned __int8 v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a4;
  v7 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  v20 = a2;
  v21 = ManagedOrderPickupFulfillment.status.getter();
  Order.Fulfillment.DisplayStatus<>.init(order:orderContent:pickupStatus:)(v19, v20, v21, v18);
  ManagedOrderPickupFulfillment.pickupWindow.getter(v15);
  v22 = objc_msgSend(a3, sel_pickedUpDate);
  if (v22)
  {
    v23 = v22;
    sub_23361D5EC();

    v24 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
  }
  else
  {
    v24 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 1, 1, v24);
  }
  v25 = (uint64_t)&v9[*(int *)(v7 + 20)];
  v26 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = (uint64_t)&v9[*(int *)(v7 + 24)];
  sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v27, 1, 1, v24);
  sub_2331C4E98((uint64_t)v18, (uint64_t)v9);
  sub_233170B8C((uint64_t)v15, v25, &qword_256043808);
  sub_233170B8C((uint64_t)v12, v27, (uint64_t *)&unk_254247DA0);
  sub_233168580((uint64_t)v9, v29, type metadata accessor for Order.PickupFulfillment.StatusValues);

}

uint64_t Order.PickupFulfillment.StatusValues.init(orderContent:fulfillment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;

  v26 = a3;
  v5 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v16, type metadata accessor for RawECommerceOrderContent);
  v27 = *(_BYTE *)(a2 + 8);
  Order.Fulfillment.DisplayStatus<>.init(orderContent:pickupStatus:)((uint64_t)v16, &v27, v19);
  RawOrderPickupFulfillment.pickupWindow.getter(v13);
  v20 = type metadata accessor for RawOrderPickupFulfillment();
  sub_2331686A0(a2 + *(int *)(v20 + 56), (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  v21 = (uint64_t)&v7[*(int *)(v5 + 20)];
  v22 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = (uint64_t)&v7[*(int *)(v5 + 24)];
  v24 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  sub_2331C4E98((uint64_t)v19, (uint64_t)v7);
  sub_233170B8C((uint64_t)v13, v21, &qword_256043808);
  sub_233170B8C((uint64_t)v10, v23, (uint64_t *)&unk_254247DA0);
  sub_233168580((uint64_t)v7, v26, type metadata accessor for Order.PickupFulfillment.StatusValues);
  sub_233168500(a2, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
  return sub_233168500(a1, type metadata accessor for RawECommerceOrderContent);
}

uint64_t Order.PickupFulfillment.StatusFormatter.init(configuration:formatPickedUpDate:useRelativeDateFormatting:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result;

  sub_233168580(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  result = type metadata accessor for Order.PickupFulfillment.StatusFormatter(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = a2;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t Order.PickupFulfillment.StatusFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v5 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (unsigned __int8 *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  sub_2331686A0(a1, (uint64_t)&v20 - v12, &qword_256043800);
  v14 = 0;
  v15 = 0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2331686A0((uint64_t)v13, (uint64_t)v11, &qword_256043800);
    v16 = *v11;
    if (v16 == 3)
    {
      v14 = 0;
      v15 = 0;
      if (*(_BYTE *)(v2 + *(int *)(type metadata accessor for Order.PickupFulfillment.StatusFormatter(0) + 20)) != 1)
        goto LABEL_9;
      v17 = sub_2331C3088(a1, a2);
      goto LABEL_7;
    }
    if (v16 == 2)
    {
      v17 = sub_2331C2EC4(a1, a2);
LABEL_7:
      v14 = v17;
      v15 = v18;
      goto LABEL_9;
    }
    v14 = 0;
    v15 = 0;
  }
LABEL_9:
  sub_233168608((uint64_t)v13, &qword_256043800);
  sub_2331684BC(a1, (uint64_t)v7, type metadata accessor for Order.PickupFulfillment.StatusValues);
  if (!v15)
    v14 = Order.Fulfillment.DisplayStatus<>.localizedTitle.getter();
  sub_233168500((uint64_t)v7, type metadata accessor for Order.PickupFulfillment.StatusValues);
  return v14;
}

uint64_t Order.PickupFulfillment.StatusValues.displayStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331686A0(v1, a1, &qword_256043800);
}

uint64_t Order.PickupFulfillment.StatusValues.displayStatus.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_233170B8C(a1, v1, &qword_256043800);
}

uint64_t (*Order.PickupFulfillment.StatusValues.displayStatus.modify())()
{
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.StatusValues.pickupWindow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 20), a1, &qword_256043808);
}

uint64_t Order.PickupFulfillment.StatusValues.pickupWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 20), &qword_256043808);
}

uint64_t (*Order.PickupFulfillment.StatusValues.pickupWindow.modify())()
{
  type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.StatusValues.pickedUpDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.PickupFulfillment.StatusValues.pickedUpDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Order.PickupFulfillment.StatusValues.pickedUpDate.modify())()
{
  type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.StatusValues.init(displayStatus:pickupWindow:pickedUpDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  v9 = a4 + *(int *)(v8 + 20);
  v10 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = a4 + *(int *)(v8 + 24);
  v12 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_2331C4E98(a1, a4);
  sub_233170B8C(a2, v9, &qword_256043808);
  return sub_233170B8C(a3, v11, (uint64_t *)&unk_254247DA0);
}

uint64_t sub_2331C2EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = type metadata accessor for EndOfPickupWindowFormatter();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v15 + 20), (uint64_t)v10, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_233168608((uint64_t)v10, &qword_256043808);
    return 0;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v14, type metadata accessor for Order.FulfillmentWindow);
    sub_2331684BC(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v7[*(int *)(v5 + 20)] = *(_BYTE *)(v2
                                     + *(int *)(type metadata accessor for Order.PickupFulfillment.StatusFormatter(0)
                                              + 24));
    v16 = sub_2334B8120((uint64_t)v14, a2);
    sub_233168500((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EndOfPickupWindowFormatter);
    sub_233168500((uint64_t)v14, type metadata accessor for Order.FulfillmentWindow);
  }
  return v16;
}

uint64_t sub_2331C3088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = type metadata accessor for PickedUpDateFormatter(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  sub_2331686A0(a1 + *(int *)(v15 + 24), (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_2331684BC(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v7[*(int *)(v5 + 20)] = *(_BYTE *)(v2
                                     + *(int *)(type metadata accessor for Order.PickupFulfillment.StatusFormatter(0)
                                              + 24));
    v16 = sub_2334B9DF0((uint64_t)v14, a2);
    sub_233168500((uint64_t)v7, type metadata accessor for PickedUpDateFormatter);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v16;
}

uint64_t Order.PickupFulfillment.StatusFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.PickupFulfillment.StatusFormatter(0);
  sub_23361F368();
  return sub_23361F368();
}

uint64_t static Order.PickupFulfillment.StatusFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (v5 = type metadata accessor for Order.PickupFulfillment.StatusFormatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    v6 = *(_BYTE *)(a1 + *(int *)(v5 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_2331C3410()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_2331C347C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331C67FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331C34A0()
{
  sub_2331C4EF4();
  return sub_23361F428();
}

uint64_t sub_2331C34C8()
{
  sub_2331C4EF4();
  return sub_23361F434();
}

uint64_t Order.PickupFulfillment.StatusFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043B68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C4EF4();
  sub_23361F410();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for Order.PickupFulfillment.StatusFormatter(0);
    v8[14] = 1;
    sub_23361F14C();
    v8[13] = 2;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.PickupFulfillment.StatusFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.PickupFulfillment.StatusFormatter(0);
  sub_23361F368();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t Order.PickupFulfillment.StatusFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v17 = a2;
  v18 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043B78);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.PickupFulfillment.StatusFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C4EF4();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11 = v5;
  v12 = (uint64_t)v10;
  v23 = 0;
  sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v13 = (uint64_t)v19;
  v14 = v20;
  sub_23361F068();
  sub_233168580(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v22 = 1;
  *(_BYTE *)(v12 + *(int *)(v8 + 20)) = sub_23361F038() & 1;
  v21 = 2;
  v15 = sub_23361F038();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v14);
  *(_BYTE *)(v12 + *(int *)(v8 + 24)) = v15 & 1;
  sub_2331684BC(v12, v17, type metadata accessor for Order.PickupFulfillment.StatusFormatter);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v12, type metadata accessor for Order.PickupFulfillment.StatusFormatter);
}

uint64_t sub_2331C3A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = Order.PickupFulfillment.StatusFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2331C3A5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = Order.PickupFulfillment.StatusFormatter.format(_:now:)(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_2331C3AF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.PickupFulfillment.StatusFormatter.init(from:)(a1, a2);
}

uint64_t sub_2331C3B0C(_QWORD *a1)
{
  return Order.PickupFulfillment.StatusFormatter.encode(to:)(a1);
}

uint64_t sub_2331C3B24()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F368();
  return sub_23361F368();
}

uint64_t sub_2331C3C38()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F368();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t sub_2331C3D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v6 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24)) & 1) != 0
    && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20)))
  {
    v7 = *(_BYTE *)(a1 + *(int *)(a3 + 24)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_2331C3E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v5 = qword_2542450A8;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_2542450A0;
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = (void *)sub_23361E12C();
  v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

  sub_23361E150();
  v11 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_2331C3F7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043DE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C704C();
  sub_23361F410();
  v8[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for PickedUpDateFormatter(0);
    v8[14] = 1;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2331C40CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v21 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043DD0);
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PickedUpDateFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C704C();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v17 = (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration;
    v16 = (uint64_t)v10;
  }
  else
  {
    v19 = v8;
    v12 = v20;
    v11 = v21;
    v25 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    v13 = v22;
    sub_23361F068();
    sub_2331C7090(v23, (uint64_t)v10);
    v24 = 1;
    v14 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
    v10[*(int *)(v19 + 20)] = v14 & 1;
    sub_2331684BC((uint64_t)v10, v11, type metadata accessor for PickedUpDateFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v16 = (uint64_t)v10;
    v17 = type metadata accessor for PickedUpDateFormatter;
  }
  return sub_233168500(v16, v17);
}

uint64_t sub_2331C4334()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_2331C4380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331C7278(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331C43A4()
{
  sub_2331C704C();
  return sub_23361F428();
}

uint64_t sub_2331C43CC()
{
  sub_2331C704C();
  return sub_23361F434();
}

uint64_t sub_2331C43F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = sub_2334B9DF0(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_2331C4490@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2331C40CC(a1, a2);
}

uint64_t sub_2331C44A4(_QWORD *a1)
{
  return sub_2331C3F7C(a1);
}

uint64_t sub_2331C44B8()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t sub_2331C45D8()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F368();
}

uint64_t sub_2331C46E0()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t sub_2331C47FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v6 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v6 + 20), a2 + *(int *)(v6 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v6 + 24), a2 + *(int *)(v6 + 24)) & 1) != 0)
  {
    v7 = *(_BYTE *)(a1 + *(int *)(a3 + 20)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

BOOL _s10FinanceKit5OrderV17PickupFulfillmentV12StatusValuesV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  unsigned int v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v69 = a2;
  v65 = sub_23361D634();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v66 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v61 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v56 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v56 - v11;
  v13 = type metadata accessor for Order.FulfillmentWindow(0);
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_256043D08);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v56 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v56 - v26;
  v28 = a1;
  v29 = a1;
  v30 = v69;
  if ((sub_2334B763C(v29, v69) & 1) == 0)
    return 0;
  v59 = v12;
  v60 = v22;
  v57 = v15;
  v58 = v10;
  v31 = type metadata accessor for Order.PickupFulfillment.StatusValues(0);
  sub_2331686A0(v28 + *(int *)(v31 + 20), (uint64_t)v27, &qword_256043808);
  v32 = v30;
  sub_2331686A0(v30 + *(int *)(v31 + 20), (uint64_t)v25, &qword_256043808);
  v33 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_2331686A0((uint64_t)v27, (uint64_t)v18, &qword_256043808);
  sub_2331686A0((uint64_t)v25, v33, &qword_256043808);
  v34 = v68;
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v36 = v28;
  if (v35((uint64_t)v18, 1, v68) != 1)
  {
    v39 = (uint64_t)v60;
    sub_2331686A0((uint64_t)v18, (uint64_t)v60, &qword_256043808);
    if (v35(v33, 1, v34) != 1)
    {
      v42 = v33;
      v43 = (uint64_t)v57;
      sub_233168580(v42, (uint64_t)v57, type metadata accessor for Order.FulfillmentWindow);
      v44 = _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0(v39, v43);
      sub_233168500(v43, type metadata accessor for Order.FulfillmentWindow);
      sub_233168608((uint64_t)v25, &qword_256043808);
      sub_233168608((uint64_t)v27, &qword_256043808);
      v38 = v66;
      sub_233168500(v39, type metadata accessor for Order.FulfillmentWindow);
      sub_233168608((uint64_t)v18, &qword_256043808);
      if ((v44 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    sub_233168608((uint64_t)v25, &qword_256043808);
    sub_233168608((uint64_t)v27, &qword_256043808);
    sub_233168500(v39, type metadata accessor for Order.FulfillmentWindow);
LABEL_7:
    v40 = qword_256043D08;
    v41 = (uint64_t)v18;
LABEL_15:
    sub_233168608(v41, v40);
    return 0;
  }
  sub_233168608((uint64_t)v25, &qword_256043808);
  sub_233168608((uint64_t)v27, &qword_256043808);
  v37 = v35(v33, 1, v34);
  v38 = v66;
  if (v37 != 1)
    goto LABEL_7;
  sub_233168608((uint64_t)v18, &qword_256043808);
LABEL_9:
  v45 = (uint64_t)v59;
  sub_2331686A0(v36 + *(int *)(v31 + 24), (uint64_t)v59, (uint64_t *)&unk_254247DA0);
  v46 = (uint64_t)v58;
  sub_2331686A0(v32 + *(int *)(v31 + 24), (uint64_t)v58, (uint64_t *)&unk_254247DA0);
  v47 = v64;
  v48 = v64 + *(int *)(v62 + 48);
  sub_2331686A0(v45, v64, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(v46, v48, (uint64_t *)&unk_254247DA0);
  v49 = v63;
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v51 = v65;
  if (v50(v47, 1, v65) == 1)
  {
    sub_233168608(v46, (uint64_t *)&unk_254247DA0);
    sub_233168608(v45, (uint64_t *)&unk_254247DA0);
    if (v50(v48, 1, v51) == 1)
    {
      sub_233168608(v47, (uint64_t *)&unk_254247DA0);
      return 1;
    }
    goto LABEL_14;
  }
  v52 = v61;
  sub_2331686A0(v47, v61, (uint64_t *)&unk_254247DA0);
  if (v50(v48, 1, v51) == 1)
  {
    sub_233168608(v46, (uint64_t *)&unk_254247DA0);
    sub_233168608(v45, (uint64_t *)&unk_254247DA0);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v51);
LABEL_14:
    v40 = &qword_256042DA0;
    v41 = v47;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v38, v48, v51);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v54 = sub_23361E108();
  v55 = *(void (**)(char *, uint64_t))(v49 + 8);
  v55(v38, v51);
  sub_233168608(v46, (uint64_t *)&unk_254247DA0);
  sub_233168608(v45, (uint64_t *)&unk_254247DA0);
  v55((char *)v52, v51);
  sub_233168608(v47, (uint64_t *)&unk_254247DA0);
  return (v54 & 1) != 0;
}

uint64_t type metadata accessor for Order.PickupFulfillment.StatusValues(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256043C00);
}

uint64_t sub_2331C4E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Order.PickupFulfillment.StatusFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_256043CB0);
}

unint64_t sub_2331C4EF4()
{
  unint64_t result;

  result = qword_256043B70;
  if (!qword_256043B70)
  {
    result = MEMORY[0x234934494](&unk_233628A24, &_s14descr25046FD51C15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043B70);
  }
  return result;
}

uint64_t sub_2331C4F38(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256043B80, type metadata accessor for Order.PickupFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.StatusFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2331C4F74()
{
  return sub_233167C58(&qword_256043B88, type metadata accessor for Order.PickupFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.StatusFormatter);
}

uint64_t sub_2331C4FA0()
{
  return sub_233167C58(&qword_256043B90, type metadata accessor for Order.PickupFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.StatusFormatter);
}

uint64_t sub_2331C4FCC()
{
  return sub_233167C58(&qword_256043B98, type metadata accessor for Order.PickupFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.StatusFormatter);
}

uint64_t sub_2331C4FF8()
{
  return sub_233167C58(&qword_256043BA0, type metadata accessor for Order.PickupFulfillment.StatusFormatter, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment.StatusFormatter);
}

uint64_t *_s14descr25046FD51C12StatusValuesVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_23361D634();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for Order.FulfillmentWindow(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = &v11[v18];
        v20 = &v12[v18];
        v21 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v22 = *(int *)(a3 + 24);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23361D634();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t _s14descr25046FD51C12StatusValuesVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v4 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = v5 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v10 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
  }
  v11 = a1 + *(int *)(a2 + 24);
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return result;
}

char *_s14descr25046FD51C12StatusValuesVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

char *_s14descr25046FD51C12StatusValuesVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043800);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_17;
    }
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  if (v15)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    v23 = swift_getEnumCaseMultiPayload();
    v24 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v9, v10, v24);
    if (v23 == 1)
    {
      v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v26 = &v9[v25];
      v27 = &v10[v25];
      v28 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v29 = *(int *)(a3 + 24);
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_22;
  }
  if (v36)
  {
LABEL_22:
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

char *_s14descr25046FD51C12StatusValuesVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

char *_s14descr25046FD51C12StatusValuesVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  if (a1 != a2)
  {
    sub_233168608((uint64_t)a1, &qword_256043800);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v9, v10, v17);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_17;
    }
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  if (v15)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_11;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
    v23 = swift_getEnumCaseMultiPayload();
    v24 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v9, v10, v24);
    if (v23 == 1)
    {
      v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v26 = &v9[v25];
      v27 = &v10[v25];
      v28 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_17:
  v29 = *(int *)(a3 + 24);
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_22;
  }
  if (v36)
  {
LABEL_22:
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t _s14descr25046FD51C12StatusValuesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331C5EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s14descr25046FD51C12StatusValuesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331C5F78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2331C6024()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2331C60E4(319);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, qword_256043C20, (void (*)(uint64_t))type metadata accessor for Order.FulfillmentWindow);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_2331C60E4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256043C10)
  {
    v2 = sub_2331C613C();
    v4 = type metadata accessor for Order.Fulfillment.DisplayStatus(a1, (uint64_t)&type metadata for Order.PickupStatus, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256043C10);
  }
}

unint64_t sub_2331C613C()
{
  unint64_t result;

  result = qword_256043C18;
  if (!qword_256043C18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.PickupStatus, &type metadata for Order.PickupStatus);
    atomic_store(result, (unint64_t *)&qword_256043C18);
  }
  return result;
}

_QWORD *_s14descr25046FD51C15StatusFormatterVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D73C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for FormatterConfiguration();
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23361D868();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(v8 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23361D8A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  }
  return a1;
}

uint64_t _s14descr25046FD51C15StatusFormatterVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t _s14descr25046FD51C15StatusFormatterVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s14descr25046FD51C15StatusFormatterVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t _s14descr25046FD51C15StatusFormatterVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t _s14descr25046FD51C15StatusFormatterVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s14descr25046FD51C15StatusFormatterVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331C65E4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14descr25046FD51C15StatusFormatterV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2331C66A4 + 4 * byte_2336287A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2331C66D8 + 4 * byte_2336287A0[v4]))();
}

uint64_t sub_2331C66D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C66E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331C66E8);
  return result;
}

uint64_t sub_2331C66F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331C66FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2331C6700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C6708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr25046FD51C15StatusFormatterV10CodingKeysOMa()
{
  return &_s14descr25046FD51C15StatusFormatterV10CodingKeysON;
}

unint64_t sub_2331C6728()
{
  unint64_t result;

  result = qword_256043CF0;
  if (!qword_256043CF0)
  {
    result = MEMORY[0x234934494](&unk_2336289FC, &_s14descr25046FD51C15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043CF0);
  }
  return result;
}

unint64_t sub_2331C6770()
{
  unint64_t result;

  result = qword_256043CF8;
  if (!qword_256043CF8)
  {
    result = MEMORY[0x234934494](&unk_23362896C, &_s14descr25046FD51C15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043CF8);
  }
  return result;
}

unint64_t sub_2331C67B8()
{
  unint64_t result;

  result = qword_256043D00;
  if (!qword_256043D00)
  {
    result = MEMORY[0x234934494](&unk_233628994, &_s14descr25046FD51C15StatusFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043D00);
  }
  return result;
}

uint64_t sub_2331C67FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023366BAB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023366BAD0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t type metadata accessor for PickedUpDateFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_256043D68);
}

_QWORD *initializeBufferWithCopyOfBuffer for SingleDateFormatter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D73C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for FormatterConfiguration();
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23361D868();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = *(int *)(v8 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23361D8A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for SingleDateFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for SingleDateFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for SingleDateFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SingleDateFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for FormatterConfiguration();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2331C6D90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for FormatterConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_2331C6E2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatterConfiguration();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_2331C6EB4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2331C6F24()
{
  return sub_233167C58(&qword_256043DA0, type metadata accessor for PickedUpDateFormatter, (uint64_t)&unk_233628A98);
}

uint64_t sub_2331C6F50()
{
  return sub_233167C58(&qword_256043DA8, type metadata accessor for PickedUpDateFormatter, (uint64_t)&unk_233628B28);
}

uint64_t sub_2331C6F7C()
{
  return sub_233167C58(&qword_256043DB0, type metadata accessor for PickedUpDateFormatter, (uint64_t)&unk_233628B00);
}

uint64_t sub_2331C6FA8()
{
  return sub_233167C58(&qword_256043DB8, type metadata accessor for PickedUpDateFormatter, (uint64_t)&unk_233628AC0);
}

uint64_t sub_2331C6FD4(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256043DC0, type metadata accessor for PickedUpDateFormatter, (uint64_t)&unk_233628B50);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2331C7010(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_256043DC8, type metadata accessor for PickedUpDateFormatter, (uint64_t)&unk_233628BA8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2331C704C()
{
  unint64_t result;

  result = qword_256043DD8;
  if (!qword_256043DD8)
  {
    result = MEMORY[0x234934494](&unk_233628C98, &type metadata for PickedUpDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043DD8);
  }
  return result;
}

uint64_t sub_2331C7090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for PickedUpDateFormatter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331C7120 + 4 * byte_2336287AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331C7154 + 4 * byte_2336287AA[v4]))();
}

uint64_t sub_2331C7154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C715C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331C7164);
  return result;
}

uint64_t sub_2331C7170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331C7178);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331C717C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C7184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PickedUpDateFormatter.CodingKeys()
{
  return &type metadata for PickedUpDateFormatter.CodingKeys;
}

unint64_t sub_2331C71A4()
{
  unint64_t result;

  result = qword_256043DE8;
  if (!qword_256043DE8)
  {
    result = MEMORY[0x234934494](&unk_233628C70, &type metadata for PickedUpDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043DE8);
  }
  return result;
}

unint64_t sub_2331C71EC()
{
  unint64_t result;

  result = qword_256043DF0;
  if (!qword_256043DF0)
  {
    result = MEMORY[0x234934494](&unk_233628BE0, &type metadata for PickedUpDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043DF0);
  }
  return result;
}

unint64_t sub_2331C7234()
{
  unint64_t result;

  result = qword_256043DF8;
  if (!qword_256043DF8)
  {
    result = MEMORY[0x234934494](&unk_233628C08, &type metadata for PickedUpDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043DF8);
  }
  return result;
}

uint64_t sub_2331C7278(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023366BAD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t static BankConnectTermsAndConditionsNotificationFormatter.notificationIdentifier(forTermsAndConditionsID:)()
{
  sub_23361ED98();
  sub_23361E27C();
  sub_23361E27C();
  return 0;
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.Output.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.Output.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23361D6D0();
  type metadata accessor for FormatterConfiguration();
  sub_23361D7D8();
  sub_23361D88C();
  return sub_2331C7090(a1, a2);
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.format(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  if (qword_2542450A8 != -1)
    swift_once();
  v4 = (void *)qword_2542450A0;
  v5 = (void *)sub_23361E12C();
  v6 = (void *)sub_23361E12C();
  v7 = (void *)sub_23361E12C();
  v8 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v5, v6, v7);

  v9 = sub_23361E150();
  v11 = v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_233623D60;
  v13 = sub_2331C7DE0(a1);
  v15 = v14;
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 64) = sub_2331683F0();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  v16 = (void *)qword_2542450A0;
  v17 = (void *)sub_23361E12C();
  v18 = (void *)sub_23361E12C();
  v19 = (void *)sub_23361E12C();
  v20 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, v18, v19);

  sub_23361E150();
  v21 = sub_23361E180();
  v23 = v22;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v21;
  a2[3] = v23;
  return result;
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

BOOL static BankConnectTermsAndConditionsNotificationFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_2331C7838()
{
  sub_2331C8448();
  return sub_23361F428();
}

uint64_t sub_2331C7860()
{
  sub_2331C8448();
  return sub_23361F434();
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043E00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C8448();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t BankConnectTermsAndConditionsNotificationFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v16 = (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043E10);
  v15 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C8448();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  else
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    sub_2331C7090(v16, (uint64_t)v11);
    sub_2331684BC((uint64_t)v11, v14, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  return sub_233168500(v12, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter);
}

uint64_t sub_2331C7CA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return BankConnectTermsAndConditionsNotificationFormatter.format(_:)(a1, a2);
}

uint64_t sub_2331C7CBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankConnectTermsAndConditionsNotificationFormatter.init(from:)(a1, a2);
}

uint64_t sub_2331C7CD0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043E00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331C8448();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2331C7DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v82 = a1;
  v57 = sub_23361D49C();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23361D484();
  v80 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v79 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D4C0();
  v77 = *(_QWORD *)(v4 - 8);
  v78 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v76 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D850();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D634();
  v74 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v70 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v10);
  v69 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23361D8A4();
  v12 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23361D868();
  v14 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v64 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23361D73C();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v60 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_23361D508();
  v65 = *(_QWORD *)(v63 - 8);
  v23 = MEMORY[0x24BDAC7A8](v63);
  v59 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v54 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v54 - v28;
  v30 = type metadata accessor for FormatterConfiguration();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v54 - v34;
  sub_23361D6D0();
  v58 = &v35[*(int *)(v30 + 20)];
  sub_23361D7D8();
  sub_23361D88C();
  sub_2331684BC((uint64_t)v35, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v36 = sub_23361D43C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v22, 1, 1, v36);
  v37 = sub_23361D424();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v19, 1, 1, v37);
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v33, v62);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v64, &v33[*(int *)(v30 + 20)], v66);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v67, &v33[*(int *)(v30 + 24)], v68);
  sub_23361D1FC();
  v38 = v59;
  sub_23361D454();
  sub_233168500((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v39 = v70;
  sub_23361D5F8();
  v40 = v71;
  v41 = v72;
  v42 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, *MEMORY[0x24BDCF240], v73);
  v43 = v40;
  LOBYTE(v40) = sub_23361D82C();
  v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  v45 = v63;
  v44(v43, v42);
  v46 = v39;
  v47 = v65;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v75);
  v48 = v76;
  sub_23361D4B4();
  sub_23361D46C();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v78);
  v49 = v79;
  sub_23361D478();
  sub_23361D448();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v81);
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v38, v45);
  if ((v40 & 1) == 0)
  {
    v51 = v55;
    sub_23361D490();
    sub_23361D460();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v51, v57);
    v50(v27, v45);
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v27, v38, v45);
  }
  v52 = sub_23361D4F0();
  v50(v27, v45);
  v50(v29, v45);
  sub_233168500((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  return v52;
}

unint64_t sub_2331C8448()
{
  unint64_t result;

  result = qword_256043E08;
  if (!qword_256043E08)
  {
    result = MEMORY[0x234934494](&unk_233628F20, &type metadata for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043E08);
  }
  return result;
}

uint64_t type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter()
{
  uint64_t result;

  result = qword_256043E90;
  if (!qword_256043E90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2331C84C8()
{
  return sub_233167C58(&qword_256043E18, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditionsNotificationFormatter);
}

uint64_t sub_2331C84F4()
{
  return sub_233167C58(&qword_256043E20, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditionsNotificationFormatter);
}

uint64_t sub_2331C8520()
{
  return sub_233167C58(&qword_256043E28, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditionsNotificationFormatter);
}

uint64_t sub_2331C854C()
{
  return sub_233167C58(&qword_256043E30, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter, (uint64_t)&protocol conformance descriptor for BankConnectTermsAndConditionsNotificationFormatter);
}

uint64_t getEnumTagSinglePayload for BankConnectTermsAndConditionsNotificationFormatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331C8584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BankConnectTermsAndConditionsNotificationFormatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331C85CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter.Output()
{
  return &type metadata for BankConnectTermsAndConditionsNotificationFormatter.Output;
}

uint64_t storeEnumTagSinglePayload for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2331C865C + 4 * byte_233628CF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2331C867C + 4 * byte_233628CF5[v4]))();
}

_BYTE *sub_2331C865C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2331C867C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331C8684(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331C868C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2331C8694(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2331C869C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys()
{
  return &type metadata for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys;
}

unint64_t sub_2331C86BC()
{
  unint64_t result;

  result = qword_256043EC8;
  if (!qword_256043EC8)
  {
    result = MEMORY[0x234934494](&unk_233628EF8, &type metadata for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043EC8);
  }
  return result;
}

unint64_t sub_2331C8704()
{
  unint64_t result;

  result = qword_256043ED0;
  if (!qword_256043ED0)
  {
    result = MEMORY[0x234934494](&unk_233628E68, &type metadata for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043ED0);
  }
  return result;
}

unint64_t sub_2331C874C()
{
  unint64_t result;

  result = qword_256043ED8;
  if (!qword_256043ED8)
  {
    result = MEMORY[0x234934494](&unk_233628E90, &type metadata for BankConnectTermsAndConditionsNotificationFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256043ED8);
  }
  return result;
}

uint64_t sub_2331C8790(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  unint64_t v22;
  _BYTE v23[32];
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;

  v22 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v2 = sub_23361ECE4();
  else
    v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v27 = MEMORY[0x24BEE4AF8];
    sub_2332739B8(0, v2 & ~(v2 >> 63), 0);
    if (v22)
    {
      result = sub_23361EC9C();
      v5 = 1;
    }
    else
    {
      result = sub_2334F28D4(a1);
      v5 = v6 & 1;
    }
    v24 = result;
    v25 = v4;
    v26 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        while (1)
        {
          v13 = v24;
          v12 = v25;
          v14 = v26;
          sub_2334F23DC(v24, v25, v26, a1);
          v16 = v15;
          v17 = objc_msgSend(v15, sel_paymentType);

          v18 = v27;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_2332739B8(0, *(_QWORD *)(v18 + 16) + 1, 1);
            v18 = v27;
          }
          v20 = *(_QWORD *)(v18 + 16);
          v19 = *(_QWORD *)(v18 + 24);
          if (v20 >= v19 >> 1)
          {
            result = sub_2332739B8(v19 > 1, v20 + 1, 1);
            v18 = v27;
          }
          *(_QWORD *)(v18 + 16) = v20 + 1;
          *(_QWORD *)(v18 + 8 * v20 + 32) = v17;
          if (v22)
            break;
          v7 = sub_2334F22E0(v13, v12, v14, a1);
          v9 = v8;
          v11 = v10;
          sub_233193A50(v13, v12, v14);
          v24 = v7;
          v25 = v9;
          v26 = v11 & 1;
          if (!--v2)
            goto LABEL_20;
        }
        if ((v14 & 1) == 0)
          goto LABEL_23;
        if (sub_23361ECB4())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256043F58);
        v21 = (void (*)(_BYTE *, _QWORD))sub_23361E600();
        sub_23361ED2C();
        v21(v23, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_233193A50(v24, v25, v26);
      return v27;
    }
  }
  return result;
}

uint64_t sub_2331C89EC(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_23361E5F4();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_233308400(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id PKSecureElementPass.accountTypes.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  result = objc_msgSend(v0, sel_paymentApplications);
  if (result)
  {
    v2 = result;
    sub_2331C8D30();
    sub_233167C58((unint64_t *)&qword_256042B68, (uint64_t (*)(uint64_t))sub_2331C8D30, MEMORY[0x24BEE5BD8]);
    v3 = sub_23361E5DC();

    v4 = sub_2331C8790(v3);
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = 0;
      v7 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        v8 = *(_QWORD *)(v4 + 8 * v6 + 32);
        v9 = v8 - 1;
        if ((unint64_t)(v8 - 1) <= 4)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_2334A4A98(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
          v11 = *((_QWORD *)v7 + 2);
          v10 = *((_QWORD *)v7 + 3);
          if (v11 >= v10 >> 1)
            v7 = sub_2334A4A98((char *)(v10 > 1), v11 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v11 + 1;
          v7[v11 + 32] = v9 & 1;
        }
        ++v6;
      }
      while (v5 != v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v12 = sub_2331C9580((uint64_t)v7, (void (*)(void))sub_23318C104, (uint64_t)&type metadata for AccountType, (void (*)(char *, _QWORD))sub_2333085AC);
    swift_bridgeObjectRelease();
    return (id)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_2331C8D30()
{
  unint64_t result;

  result = qword_256042B60;
  if (!qword_256042B60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256042B60);
  }
  return result;
}

FinanceKit::AccountType_optional __swiftcall AccountType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (FinanceKit::AccountType_optional)rawValue;
}

uint64_t AccountType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void *static AccountType.allCases.getter()
{
  return &unk_2504681D8;
}

_QWORD *sub_2331C8D9C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_2331C8DBC()
{
  sub_2331C9808();
  return sub_23361E39C();
}

uint64_t sub_2331C8E18()
{
  sub_2331C9808();
  return sub_23361E360();
}

void sub_2331C8E64(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468200;
}

uint64_t sub_2331C8E74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v2 = sub_23361C938();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_233167C58(&qword_256043F50, v10, MEMORY[0x24BDCAEC0]);
  result = sub_23361E5F4();
  v16 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_233307F48((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

uint64_t sub_2331C8F9C(uint64_t a1)
{
  return sub_2331C9580(a1, (void (*)(void))sub_23318C104, (uint64_t)&type metadata for AccountType, (void (*)(char *, _QWORD))sub_2333085AC);
}

unint64_t sub_2331C8FBC()
{
  unint64_t result;

  result = qword_256043EE0;
  if (!qword_256043EE0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountType, &type metadata for AccountType);
    atomic_store(result, (unint64_t *)&qword_256043EE0);
  }
  return result;
}

unint64_t sub_2331C9004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256043EE8;
  if (!qword_256043EE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256043EF0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256043EE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331C909C + 4 * byte_233628F75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331C90D0 + 4 * byte_233628F70[v4]))();
}

uint64_t sub_2331C90D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C90D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331C90E0);
  return result;
}

uint64_t sub_2331C90EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331C90F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331C90F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331C9100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountType()
{
  return &type metadata for AccountType;
}

uint64_t sub_2331C911C(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_23361D6A0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_233167C58(&qword_25604DB90, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_23361E5F4();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_2333081A4((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_2331C92EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_23361E5F4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_233308400(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2331C9380(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedMapsTransactionInsight, &qword_256043F38, (void (*)(id *, uint64_t))sub_233308708);
}

uint64_t sub_2331C939C(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedContactTransactionInsight, &qword_256043F30, (void (*)(id *, uint64_t))sub_2333086E4);
}

uint64_t sub_2331C93B8(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, void (*a4)(id *, uint64_t))
{
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  uint64_t v16;

  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_233167C58(a3, a2, MEMORY[0x24BEE5BD8]);
  result = sub_23361E5F4();
  v16 = result;
  if (v8)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v10)
      return v16;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      return v16;
  }
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v10; ++i)
      {
        v12 = MEMORY[0x234933120](i, a1);
        a4(&v15, v12);

      }
    }
    else
    {
      v13 = (void **)(a1 + 32);
      do
      {
        v14 = *v13++;
        a4(&v15, (uint64_t)v14);

        --v10;
      }
      while (v10);
    }
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_2331C952C(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedTransactionInsights, &qword_256043F40, (void (*)(id *, uint64_t))sub_23330872C);
}

uint64_t sub_2331C9548(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedInternalTransaction, &qword_256043F48, (void (*)(id *, uint64_t))sub_233308750);
}

uint64_t sub_2331C9564(uint64_t a1)
{
  return sub_2331C9580(a1, (void (*)(void))sub_2331C984C, (uint64_t)&type metadata for FinanceKitPublicValues, (void (*)(char *, _QWORD))sub_233308774);
}

uint64_t sub_2331C9580(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_23361E5F4();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_2331C95F4(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderLineItem, (unint64_t *)&qword_256043F28, (void (*)(id *, uint64_t))sub_233308CF0);
}

uint64_t sub_2331C9610(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderReturn, &qword_256043F20, (void (*)(id *, uint64_t))sub_233308DC8);
}

uint64_t sub_2331C962C(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderImage, &qword_256043F18, (void (*)(id *, uint64_t))sub_233308DA4);
}

uint64_t sub_2331C9648(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderReceipt, &qword_256043F10, (void (*)(id *, uint64_t))sub_233308D80);
}

uint64_t sub_2331C9664(unint64_t a1)
{
  return sub_2331C93B8(a1, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderReturnLabel, &qword_256043F08, (void (*)(id *, uint64_t))sub_233308D5C);
}

uint64_t sub_2331C9680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_233167C58(&qword_254245250, v10, (uint64_t)&protocol conformance descriptor for MapsSuggestionsOrderPickup);
  result = sub_23361E5F4();
  v15 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_2331C9788(v12, (uint64_t)v6);
      sub_233309098((uint64_t)v8, v6);
      sub_2331C97CC((uint64_t)v8);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

uint64_t sub_2331C9788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331C97CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MapsSuggestionsOrderPickup(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2331C9808()
{
  unint64_t result;

  result = qword_256043EF8;
  if (!qword_256043EF8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountType, &type metadata for AccountType);
    atomic_store(result, (unint64_t *)&qword_256043EF8);
  }
  return result;
}

unint64_t sub_2331C984C()
{
  unint64_t result;

  result = qword_254244E10;
  if (!qword_254244E10)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceKitPublicValues, &type metadata for FinanceKitPublicValues);
    atomic_store(result, (unint64_t *)&qword_254244E10);
  }
  return result;
}

uint64_t sub_2331C9890(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_2331C9900();
  result = sub_23361E5F4();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_233309588(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_2331C9900()
{
  unint64_t result;

  result = qword_256043F00;
  if (!qword_256043F00)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectRefreshableAttribute, &type metadata for BankConnectRefreshableAttribute);
    atomic_store(result, (unint64_t *)&qword_256043F00);
  }
  return result;
}

id BankConnectAuthorizationSessionProvider.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_store] = a1;
  v4 = *(void **)(a1 + 16);
  v5 = v3;
  swift_retain();
  v6 = objc_msgSend(v4, sel_newBackgroundContext);
  *(_QWORD *)&v5[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_context] = v6;

  v9.receiver = v5;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_release();
  return v7;
}

id BankConnectAuthorizationSessionProvider.init(store:)(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v3;
  id v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_store] = a1;
  v2 = *(void **)(a1 + 16);
  v3 = v1;
  swift_retain();
  v4 = objc_msgSend(v2, sel_newBackgroundContext);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_context] = v4;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for BankConnectAuthorizationSessionProvider();
  v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_release();
  return v5;
}

uint64_t type metadata accessor for BankConnectAuthorizationSessionProvider()
{
  return objc_opt_self();
}

id sub_2331C9A90()
{
  return sub_2331CA0F8();
}

void sub_2331C9B14(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  _QWORD *v6;
  void *v7;
  char *v8;
  _QWORD v9[6];

  v5 = *(void **)&v2[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_context];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v9[4] = sub_2331CA1E0;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2331C9ED4;
  v9[3] = &block_descriptor_1;
  v7 = _Block_copy(v9);
  v8 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlock_, v7);
  _Block_release(v7);
}

void sub_2331C9BEC(uint64_t a1, void (*a2)(id))
{
  id v3;
  unint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  type metadata accessor for ManagedAuthorizationSession();
  v9.receiver = (id)swift_getObjCClassFromMetadata();
  v9.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedAuthorizationSession;
  v3 = objc_msgSendSuper2(&v9, sel_fetchRequest);
  v4 = sub_23361E984();
  if (!(v4 >> 62))
  {
    v5 = *(id *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();

    v8 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v5 = (id)sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_8;
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x234933120](0, v4);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v4 + 32);
LABEL_6:
    v7 = v6;
    swift_bridgeObjectRelease();

    sub_2331CA2A0();
    v5 = v7;
    v8 = FKAuthorizationSession.init(_:)(v5);
LABEL_9:
    a2(v8);

    return;
  }
  __break(1u);
}

uint64_t sub_2331C9ED4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id BankConnectAuthorizationSessionProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectAuthorizationSessionProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectAuthorizationSessionProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectAuthorizationSessionProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2331CA0F8()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  void *v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  if (qword_254247048 != -1)
    swift_once();
  v0 = *((_QWORD *)off_254247040 + 2);
  v1 = (objc_class *)type metadata accessor for BankConnectAuthorizationSessionProvider();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_store] = v0;
  v3 = *(void **)(v0 + 16);
  swift_retain_n();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_newBackgroundContext);
  *(_QWORD *)&v4[OBJC_IVAR____TtC10FinanceKit39BankConnectAuthorizationSessionProvider_context] = v5;

  v8.receiver = v4;
  v8.super_class = v1;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  swift_release();
  return v6;
}

void sub_2331CA1E0()
{
  uint64_t v0;

  sub_2331C9BEC(*(_QWORD *)(v0 + 16), *(void (**)(id))(v0 + 24));
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t method lookup function for BankConnectAuthorizationSessionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectAuthorizationSessionProvider.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of static BankConnectAuthorizationSessionProvider.makeProvider()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BankConnectAuthorizationSessionProvider.authorizationSession(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t sub_2331CA23C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2331CA260()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_2331CA2A0()
{
  unint64_t result;

  result = qword_256043F98;
  if (!qword_256043F98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256043F98);
  }
  return result;
}

BOOL static FinanceStore.ContainsOrderResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FinanceStore.ContainsOrderResult.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_2331CA324()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2331CA350 + 4 * byte_233629100[*v0]))(0x737473697865, 0xE600000000000000);
}

uint64_t sub_2331CA350()
{
  return 0x646E756F46746F6ELL;
}

uint64_t sub_2331CA368()
{
  return 0x697845726577656ELL;
}

uint64_t sub_2331CA394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331CBC00(a1, a2);
  *a3 = result;
  return result;
}

void sub_2331CA3B8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2331CA3C4()
{
  sub_2331CA8D8();
  return sub_23361F428();
}

uint64_t sub_2331CA3EC()
{
  sub_2331CA8D8();
  return sub_23361F434();
}

uint64_t sub_2331CA414()
{
  return 0;
}

uint64_t sub_2331CA420@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2331CA44C()
{
  sub_2331CA9E8();
  return sub_23361F428();
}

uint64_t sub_2331CA474()
{
  sub_2331CA9E8();
  return sub_23361F434();
}

uint64_t sub_2331CA49C()
{
  sub_2331CA960();
  return sub_23361F428();
}

uint64_t sub_2331CA4C4()
{
  sub_2331CA960();
  return sub_23361F434();
}

uint64_t sub_2331CA4EC()
{
  sub_2331CA9A4();
  return sub_23361F428();
}

uint64_t sub_2331CA514()
{
  sub_2331CA9A4();
  return sub_23361F434();
}

uint64_t sub_2331CA53C()
{
  sub_2331CA91C();
  return sub_23361F428();
}

uint64_t sub_2331CA564()
{
  sub_2331CA91C();
  return sub_23361F434();
}

void *static FinanceStore.ContainsOrderResult.allCases.getter()
{
  return &unk_250468228;
}

uint64_t FinanceStore.ContainsOrderResult.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

void sub_2331CA5DC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250468250;
}

void FinanceStore.ContainsOrderResult.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FA0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FA8);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FB0);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FB8);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FC0);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331CA8D8();
  sub_23361F410();
  __asm { BR              X9 }
}

uint64_t sub_2331CA7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_2331CA9E8();
  sub_23361F0C8();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

unint64_t sub_2331CA8D8()
{
  unint64_t result;

  result = qword_256043FC8;
  if (!qword_256043FC8)
  {
    result = MEMORY[0x234934494](&unk_2336295F0, &_s19ContainsOrderResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043FC8);
  }
  return result;
}

unint64_t sub_2331CA91C()
{
  unint64_t result;

  result = qword_256043FD0;
  if (!qword_256043FD0)
  {
    result = MEMORY[0x234934494](&unk_2336295A0, &_s19ContainsOrderResultO21OlderExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043FD0);
  }
  return result;
}

unint64_t sub_2331CA960()
{
  unint64_t result;

  result = qword_256043FD8;
  if (!qword_256043FD8)
  {
    result = MEMORY[0x234934494](&unk_233629550, &_s19ContainsOrderResultO21NewerExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043FD8);
  }
  return result;
}

unint64_t sub_2331CA9A4()
{
  unint64_t result;

  result = qword_256043FE0;
  if (!qword_256043FE0)
  {
    result = MEMORY[0x234934494](&unk_233629500, &_s19ContainsOrderResultO18NotFoundCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043FE0);
  }
  return result;
}

unint64_t sub_2331CA9E8()
{
  unint64_t result;

  result = qword_256043FE8;
  if (!qword_256043FE8)
  {
    result = MEMORY[0x234934494](&unk_2336294B0, &_s19ContainsOrderResultO16ExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256043FE8);
  }
  return result;
}

uint64_t FinanceStore.ContainsOrderResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FF0);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043FF8);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044000);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044008);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044010);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2331CA8D8();
  v15 = v28;
  sub_23361F3EC();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23361F098();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23361EE10();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v19 = &type metadata for FinanceStore.ContainsOrderResult;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_2331CAEB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FinanceStore.ContainsOrderResult.init(from:)(a1, a2);
}

void sub_2331CAEC4(_QWORD *a1)
{
  FinanceStore.ContainsOrderResult.encode(to:)(a1);
}

uint64_t FinanceStore.containsOrder(matching:updatedDate:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 40) = type metadata accessor for FinanceStore.Message();
  v6 = swift_task_alloc();
  v7 = *a2;
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = v7;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v4 + 80) = a2[3];
  return swift_task_switch();
}

uint64_t sub_2331CAF50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  v2 = v0[9];
  v1 = v0[10];
  v4 = v0[7];
  v3 = v0[8];
  v5 = (_QWORD *)v0[6];
  v6 = v0[3];
  v7 = (uint64_t)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
  *v5 = v4;
  v5[1] = v3;
  v5[2] = v2;
  v5[3] = v1;
  sub_2331686A0(v6, v7, (uint64_t *)&unk_254247DA0);
  swift_storeEnumTagMultiPayload();
  v10 = (char *)&dword_256043068 + dword_256043068;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  *v8 = v0;
  v8[1] = sub_2331CB034;
  return ((uint64_t (*)(_QWORD, _QWORD))v10)(v0[2], v0[6]);
}

uint64_t sub_2331CB034()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  sub_2331CB0F4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331CB0C0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331CB0F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FinanceStore.Message();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FinanceStore.containsOrder(with:updatedDate:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE *v17;

  v17 = a3;
  v5 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v12 = (char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
  *v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v11;
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2331CB25C((uint64_t)v7, v17);
  return sub_2331CB0F4((uint64_t)v7);
}

void sub_2331CB25C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v4 = v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361DBF8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  sub_2332E22D0(a1, a2);
  if (v3)
  {
    v21 = v3;
    v14 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_2331686A0(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120), (uint64_t)v9, qword_254246690);
      if (swift_getEnumCaseMultiPayload() == 1)
      {

        if (qword_254246F38 != -1)
          swift_once();
        v15 = sub_23361DB80();
        __swift_project_value_buffer(v15, (uint64_t)qword_254246F20);
        v16 = sub_23361DB68();
        v17 = sub_23361E780();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v18 = 0;
          _os_log_impl(&dword_233151000, v16, v17, "XPC sync call failed, retrying", v18, 2u);
          MEMORY[0x234934590](v18, -1, -1);
        }

        sub_2332E22D0(v20, a2);
      }
      else
      {
        sub_2331CBDDC((uint64_t)v9);
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }

  }
}

unint64_t sub_2331CB49C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256044028;
  if (!qword_256044028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044030);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256044028);
  }
  return result;
}

unint64_t sub_2331CB4EC()
{
  unint64_t result;

  result = qword_256044038;
  if (!qword_256044038)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.ContainsOrderResult, &type metadata for FinanceStore.ContainsOrderResult);
    atomic_store(result, (unint64_t *)&qword_256044038);
  }
  return result;
}

ValueMetadata *type metadata accessor for FinanceStore.ContainsOrderResult()
{
  return &type metadata for FinanceStore.ContainsOrderResult;
}

uint64_t _s19ContainsOrderResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2331CB590 + 4 * byte_233629111[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2331CB5C4 + 4 * byte_23362910C[v4]))();
}

uint64_t sub_2331CB5C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CB5CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331CB5D4);
  return result;
}

uint64_t sub_2331CB5E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331CB5E8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2331CB5EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CB5F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19ContainsOrderResultO10CodingKeysOMa()
{
  return &_s19ContainsOrderResultO10CodingKeysON;
}

ValueMetadata *_s19ContainsOrderResultO16ExistsCodingKeysOMa()
{
  return &_s19ContainsOrderResultO16ExistsCodingKeysON;
}

ValueMetadata *_s19ContainsOrderResultO18NotFoundCodingKeysOMa()
{
  return &_s19ContainsOrderResultO18NotFoundCodingKeysON;
}

ValueMetadata *_s19ContainsOrderResultO21NewerExistsCodingKeysOMa()
{
  return &_s19ContainsOrderResultO21NewerExistsCodingKeysON;
}

ValueMetadata *_s19ContainsOrderResultO21OlderExistsCodingKeysOMa()
{
  return &_s19ContainsOrderResultO21OlderExistsCodingKeysON;
}

unint64_t sub_2331CB654()
{
  unint64_t result;

  result = qword_256044040;
  if (!qword_256044040)
  {
    result = MEMORY[0x234934494](&unk_233629488, &_s19ContainsOrderResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044040);
  }
  return result;
}

unint64_t sub_2331CB69C()
{
  unint64_t result;

  result = qword_256044048;
  if (!qword_256044048)
  {
    result = MEMORY[0x234934494](&unk_2336293A8, &_s19ContainsOrderResultO16ExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044048);
  }
  return result;
}

unint64_t sub_2331CB6E4()
{
  unint64_t result;

  result = qword_256044050;
  if (!qword_256044050)
  {
    result = MEMORY[0x234934494](&unk_2336293D0, &_s19ContainsOrderResultO16ExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044050);
  }
  return result;
}

unint64_t sub_2331CB72C()
{
  unint64_t result;

  result = qword_256044058;
  if (!qword_256044058)
  {
    result = MEMORY[0x234934494](&unk_233629358, &_s19ContainsOrderResultO18NotFoundCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044058);
  }
  return result;
}

unint64_t sub_2331CB774()
{
  unint64_t result;

  result = qword_256044060;
  if (!qword_256044060)
  {
    result = MEMORY[0x234934494](&unk_233629380, &_s19ContainsOrderResultO18NotFoundCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044060);
  }
  return result;
}

unint64_t sub_2331CB7BC()
{
  unint64_t result;

  result = qword_256044068;
  if (!qword_256044068)
  {
    result = MEMORY[0x234934494](&unk_233629308, &_s19ContainsOrderResultO21NewerExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044068);
  }
  return result;
}

unint64_t sub_2331CB804()
{
  unint64_t result;

  result = qword_256044070;
  if (!qword_256044070)
  {
    result = MEMORY[0x234934494](&unk_233629330, &_s19ContainsOrderResultO21NewerExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044070);
  }
  return result;
}

unint64_t sub_2331CB84C()
{
  unint64_t result;

  result = qword_256044078;
  if (!qword_256044078)
  {
    result = MEMORY[0x234934494](&unk_2336292B8, &_s19ContainsOrderResultO21OlderExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044078);
  }
  return result;
}

unint64_t sub_2331CB894()
{
  unint64_t result;

  result = qword_256044080;
  if (!qword_256044080)
  {
    result = MEMORY[0x234934494](&unk_2336292E0, &_s19ContainsOrderResultO21OlderExistsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044080);
  }
  return result;
}

unint64_t sub_2331CB8DC()
{
  unint64_t result;

  result = qword_256044088;
  if (!qword_256044088)
  {
    result = MEMORY[0x234934494](&unk_2336293F8, &_s19ContainsOrderResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044088);
  }
  return result;
}

unint64_t sub_2331CB924()
{
  unint64_t result;

  result = qword_256044090;
  if (!qword_256044090)
  {
    result = MEMORY[0x234934494](&unk_233629420, &_s19ContainsOrderResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044090);
  }
  return result;
}

uint64_t sub_2331CB968(uint64_t a1)
{
  return sub_2331CB9A0(a1, sub_2332E2DBC);
}

uint64_t sub_2331CB984(uint64_t a1)
{
  return sub_2331CB9A0(a1, sub_2332E38DC);
}

uint64_t sub_2331CB9A0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  id v24;

  v5 = (uint64_t)v3;
  v6 = v2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361DBF8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v23 = a2;
  v15 = a2(a1);
  if (!v3)
    return v15;
  v24 = v3;
  v16 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:

    return v5;
  }
  sub_2331686A0(v6 + *(_QWORD *)(*(_QWORD *)v6 + 120), (uint64_t)v10, qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2331CBDDC((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_11;
  }

  if (qword_254246F38 != -1)
    swift_once();
  v17 = sub_23361DB80();
  __swift_project_value_buffer(v17, (uint64_t)qword_254246F20);
  v18 = sub_23361DB68();
  v19 = sub_23361E780();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_233151000, v18, v19, "XPC sync call failed, retrying", v20, 2u);
    MEMORY[0x234934590](v20, -1, -1);
  }

  v5 = v23(v22);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

  return v5;
}

uint64_t sub_2331CBC00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737473697865 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E756F46746F6ELL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697845726577656ELL && a2 == 0xEB00000000737473 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6978457265646C6FLL && a2 == 0xEB00000000737473)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2331CBDDC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static CurrencyAmount.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if ((MEMORY[0x234932E38](*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16)) & 1) == 0)return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_23361F224();
}

uint64_t CurrencyAmount.amount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CurrencyAmount.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CurrencyAmount.hash(into:)()
{
  sub_23361EAEC();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t CurrencyAmount.hashValue.getter()
{
  sub_23361F350();
  sub_23361EAEC();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2331CBFA0()
{
  sub_23361F350();
  sub_23361EAEC();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2331CC014()
{
  sub_23361EAEC();
  return sub_23361E0A8();
}

uint64_t sub_2331CC054()
{
  sub_23361F350();
  sub_23361EAEC();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_2331CC0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if ((MEMORY[0x234932E38](*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned int *)(a2 + 16)) & 1) == 0)return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_23361F224();
}

uint64_t sub_2331CC144()
{
  _BYTE *v0;

  if (*v0)
    return 0x79636E6572727563;
  else
    return 0x746E756F6D61;
}

uint64_t sub_2331CC17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331CD398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331CC1A0()
{
  sub_2331CC6CC();
  return sub_23361F428();
}

uint64_t sub_2331CC1C8()
{
  sub_2331CC6CC();
  return sub_23361F434();
}

uint64_t sub_2331CC1F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_2331CD480(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_2331CC224()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
    return sub_23361E5A0();
  swift_bridgeObjectRetain();
  return v1;
}

__n128 CurrencyAmount.init(from:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  sub_233177068(a1, (uint64_t)v8);
  v13 = 0;
  CurrencyAmount.init(from:configuration:)(v8, &v13, &v9);
  __swift_destroy_boxed_opaque_existential_0(a1);
  if (!v2)
  {
    v6 = v11;
    v7 = v12;
    result = v10;
    *(_DWORD *)a2 = v9;
    *(__n128 *)(a2 + 4) = result;
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t CurrencyAmount.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, unsigned __int8 *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  __int16 v37;
  void (*v38)(char *, uint64_t);
  _DWORD *v39;
  char *v40;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _DWORD *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  char v55;

  v49 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044098);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560440A0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v50) = *a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331CC6CC();
  sub_23361F3EC();
  if (v3)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v48 = (unint64_t)v8;
  v13 = v10;
  v55 = 0;
  v54 = (char)v50;
  sub_2331CC710();
  v14 = sub_23361EFB4();
  v15 = v9;
  v50 = v12;
  v16 = v53;
  v46 = v51;
  v47 = v52;
  if ((v53 & 1) != 0)
  {
    v17 = MEMORY[0x234932E98](v14, *(double *)&v51);
    LOWORD(v20) = v19;
    LODWORD(v21) = HIWORD(v19);
    v22 = a1;
    goto LABEL_7;
  }
  v23 = sub_23361D73C();
  v24 = v48;
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v48, 1, 1, v23);
  v45 = sub_23361EB10();
  v26 = v25;
  v20 = v27;
  sub_2331CC7B0(v24);
  if ((v20 & 0x100000000) == 0)
  {
    v22 = a1;
    v21 = v20 >> 16;
    v18 = v26;
    v17 = v45;
LABEL_7:
    v45 = v17;
    v48 = v18;
    if ((sub_23361EAF8() & 1) == 0)
    {
      a1 = v22;
      sub_2331CC754(v46, v47, v16);
      LOBYTE(v51) = 1;
      v30 = v50;
      v31 = sub_23361F02C();
      v33 = v32;
      v34 = v13;
      v35 = v15;
      v36 = v45;
      v42 = HIDWORD(v45);
      v43 = HIWORD(v45);
      v37 = v48;
      v44 = v48 >> 16;
      v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v46 = HIWORD(v48);
      v47 = HIDWORD(v48);
      v38(v30, v35);
      v39 = v49;
      *v49 = v36;
      *((_WORD *)v39 + 2) = v42;
      *((_WORD *)v39 + 3) = v43;
      *((_WORD *)v39 + 4) = v37;
      *((_WORD *)v39 + 5) = v44;
      *((_WORD *)v39 + 6) = v47;
      *((_WORD *)v39 + 7) = v46;
      *((_WORD *)v39 + 8) = v20;
      *((_WORD *)v39 + 9) = v21;
      *((_QWORD *)v39 + 3) = v31;
      *((_QWORD *)v39 + 4) = v33;
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    }
  }
  v55 = 0;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  v51 = 39;
  v52 = 0xE100000000000000;
  if ((v16 & 1) != 0)
  {
    v28 = v46;
    sub_23361E5A0();
    v29 = v47;
  }
  else
  {
    v29 = v47;
    swift_bridgeObjectRetain();
    v28 = v46;
  }
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_2331CC754(v28, v29, v16);
  sub_23361E27C();
  sub_23361EE10();
  swift_allocError();
  sub_2331CC764();
  v40 = v50;
  sub_23361EDE0();
  swift_bridgeObjectRelease();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v15);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_2331CC6CC()
{
  unint64_t result;

  result = qword_2560440A8;
  if (!qword_2560440A8)
  {
    result = MEMORY[0x234934494](&unk_2336298B0, &type metadata for CurrencyAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560440A8);
  }
  return result;
}

unint64_t sub_2331CC710()
{
  unint64_t result;

  result = qword_2560440B0;
  if (!qword_2560440B0)
  {
    result = MEMORY[0x234934494](&unk_233629880, &type metadata for CurrencyAmount.AmountValue);
    atomic_store(result, (unint64_t *)&qword_2560440B0);
  }
  return result;
}

uint64_t sub_2331CC754(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2331CC764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560440B8;
  if (!qword_2560440B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560440A0);
    result = MEMORY[0x234934494](MEMORY[0x24BEE33F8], v1);
    atomic_store(result, (unint64_t *)&qword_2560440B8);
  }
  return result;
}

uint64_t sub_2331CC7B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044098);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CurrencyAmount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560440C0);
  v10 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 24);
  v9[0] = *(_QWORD *)(v1 + 32);
  v9[1] = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331CC6CC();
  sub_23361F410();
  sub_23361EA68();
  v12 = 0;
  v7 = v9[2];
  sub_23361F140();
  if (v7)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = 1;
    sub_23361F140();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  }
}

__n128 sub_2331CC95C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  sub_233177068(a1, (uint64_t)v8);
  v13 = 0;
  CurrencyAmount.init(from:configuration:)(v8, &v13, &v9);
  __swift_destroy_boxed_opaque_existential_0(a1);
  if (!v2)
  {
    v6 = v11;
    v7 = v12;
    result = v10;
    *(_DWORD *)a2 = v9;
    *(__n128 *)(a2 + 4) = result;
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_2331CC9DC(_QWORD *a1)
{
  return CurrencyAmount.encode(to:)(a1);
}

uint64_t sub_2331CC9F0@<X0>(_QWORD *a1@<X0>, unsigned __int8 *a2@<X1>, _DWORD *a3@<X8>)
{
  unsigned __int8 v4;

  v4 = *a2;
  return CurrencyAmount.init(from:configuration:)(a1, &v4, a3);
}

uint64_t CurrencyAmount.formatted(locale:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  _QWORD v20[2];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v2 = sub_23361D73C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23361EA5C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v20 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = sub_23361D1E4();
  v22 = *(_QWORD *)(v13 - 8);
  v23 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_DWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 8);
  v20[0] = *(_QWORD *)v1;
  v20[1] = v16;
  sub_23361D1D8();
  swift_bridgeObjectRetain();
  sub_23361D6D0();
  sub_23361EA38();
  sub_23361EA44();
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  sub_23361EA50();
  v17(v10, v3);
  sub_2331CCD90();
  sub_23361EB1C();
  v17(v12, v3);
  v18 = v25;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
  return v18;
}

uint64_t CurrencyAmount.formatted(locale:signDisplayStrategy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v19 = a1;
  v3 = sub_23361D73C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23361EA5C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v16 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - v12;
  v17 = *(_DWORD *)(v2 + 16);
  v16 = *(_QWORD *)(v2 + 8);
  swift_bridgeObjectRetain();
  sub_23361D6D0();
  sub_23361EA38();
  sub_23361EA44();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  sub_23361EA50();
  v14(v11, v4);
  sub_2331CCD90();
  sub_23361EB1C();
  v14(v13, v4);
  return v20;
}

unint64_t sub_2331CCD90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560440C8;
  if (!qword_2560440C8)
  {
    v1 = sub_23361EA5C();
    result = MEMORY[0x234934494](MEMORY[0x24BDD02B0], v1);
    atomic_store(result, (unint64_t *)&qword_2560440C8);
  }
  return result;
}

uint64_t _s10FinanceKit14CurrencyAmountV_12currencyCodeACSo9NSDecimala_SStcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

unint64_t sub_2331CCE24()
{
  unint64_t result;

  result = qword_2560440D0;
  if (!qword_2560440D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for CurrencyAmount, &type metadata for CurrencyAmount);
    atomic_store(result, (unint64_t *)&qword_2560440D0);
  }
  return result;
}

uint64_t destroy for CurrencyAmount()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CurrencyAmount(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CurrencyAmount(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 6);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CurrencyAmount(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrencyAmount(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrencyAmount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurrencyAmount()
{
  return &type metadata for CurrencyAmount;
}

ValueMetadata *type metadata accessor for CurrencyAmount.DecodingConfiguration()
{
  return &type metadata for CurrencyAmount.DecodingConfiguration;
}

uint64_t sub_2331CD030(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for CurrencyAmount.AmountValue(uint64_t a1)
{
  return sub_2331CC754(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FinanceKit14CurrencyAmountV11AmountValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2331CD030(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CurrencyAmount.AmountValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2331CD030(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2331CC754(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CurrencyAmount.AmountValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2331CC754(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrencyAmount.AmountValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrencyAmount.AmountValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2331CD1D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2331CD1D8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyAmount.AmountValue()
{
  return &type metadata for CurrencyAmount.AmountValue;
}

uint64_t storeEnumTagSinglePayload for CurrencyAmount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331CD240 + 4 * byte_233629645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331CD274 + 4 * byte_233629640[v4]))();
}

uint64_t sub_2331CD274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CD27C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331CD284);
  return result;
}

uint64_t sub_2331CD290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331CD298);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331CD29C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CD2A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyAmount.CodingKeys()
{
  return &type metadata for CurrencyAmount.CodingKeys;
}

unint64_t sub_2331CD2C4()
{
  unint64_t result;

  result = qword_2560440D8;
  if (!qword_2560440D8)
  {
    result = MEMORY[0x234934494](&unk_233629830, &type metadata for CurrencyAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560440D8);
  }
  return result;
}

unint64_t sub_2331CD30C()
{
  unint64_t result;

  result = qword_2560440E0;
  if (!qword_2560440E0)
  {
    result = MEMORY[0x234934494](&unk_2336297A0, &type metadata for CurrencyAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560440E0);
  }
  return result;
}

unint64_t sub_2331CD354()
{
  unint64_t result;

  result = qword_2560440E8;
  if (!qword_2560440E8)
  {
    result = MEMORY[0x234934494](&unk_2336297C8, &type metadata for CurrencyAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560440E8);
  }
  return result;
}

uint64_t sub_2331CD398(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2331CD480(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_23361F3E0();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_23361F230();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t _s24OfflineLabPermissionBodyVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10FinanceKit14CurrencyAmountV21DecodingConfigurationVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331CD6B8 + 4 * byte_23362964F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331CD6EC + 4 * byte_23362964A[v4]))();
}

uint64_t sub_2331CD6EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CD6F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331CD6FCLL);
  return result;
}

uint64_t sub_2331CD708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331CD710);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331CD714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CD71C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyAmount.AmountValue.DecodingConfiguration()
{
  return &type metadata for CurrencyAmount.AmountValue.DecodingConfiguration;
}

uint64_t Order.ShippingType.hash(into:)()
{
  return sub_23361F35C();
}

BOOL static Order.ShippingType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2331CD77C()
{
  _BYTE *v0;

  if (*v0)
    return 0x79726576696C6564;
  else
    return 0x676E697070696873;
}

uint64_t sub_2331CD7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331CE284(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331CD7D4()
{
  sub_2331CDA98();
  return sub_23361F428();
}

uint64_t sub_2331CD7FC()
{
  sub_2331CDA98();
  return sub_23361F434();
}

uint64_t sub_2331CD824()
{
  sub_2331CDADC();
  return sub_23361F428();
}

uint64_t sub_2331CD84C()
{
  sub_2331CDADC();
  return sub_23361F434();
}

uint64_t sub_2331CD874()
{
  sub_2331CDB20();
  return sub_23361F428();
}

uint64_t sub_2331CD89C()
{
  sub_2331CDB20();
  return sub_23361F434();
}

uint64_t Order.ShippingType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560440F0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560440F8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044100);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331CDA98();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2331CDADC();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2331CDB20();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_2331CDA98()
{
  unint64_t result;

  result = qword_256044108;
  if (!qword_256044108)
  {
    result = MEMORY[0x234934494](&unk_233629C1C, &_s12ShippingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044108);
  }
  return result;
}

unint64_t sub_2331CDADC()
{
  unint64_t result;

  result = qword_256044110;
  if (!qword_256044110)
  {
    result = MEMORY[0x234934494](&unk_233629BCC, &_s12ShippingTypeO18DeliveryCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044110);
  }
  return result;
}

unint64_t sub_2331CDB20()
{
  unint64_t result;

  result = qword_256044118;
  if (!qword_256044118)
  {
    result = MEMORY[0x234934494](&unk_233629B7C, &_s12ShippingTypeO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044118);
  }
  return result;
}

uint64_t Order.ShippingType.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t Order.ShippingType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044120);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044128);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044130);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331CDA98();
  v11 = v33;
  sub_23361F3EC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23361F098();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23361EE10();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v21 = &type metadata for Order.ShippingType;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2331CDADC();
    sub_23361EFA8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2331CDB20();
    v22 = v6;
    sub_23361EFA8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_2331CDF00@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return Order.ShippingType.init(from:)(a1, a2);
}

uint64_t sub_2331CDF14(_QWORD *a1)
{
  return Order.ShippingType.encode(to:)(a1);
}

_BYTE *Order.ShippingType.init(_:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t Order.ShippingType.init(_:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

unint64_t sub_2331CDF44()
{
  unint64_t result;

  result = qword_256044138;
  if (!qword_256044138)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingType, &type metadata for Order.ShippingType);
    atomic_store(result, (unint64_t *)&qword_256044138);
  }
  return result;
}

ValueMetadata *type metadata accessor for Order.ShippingType()
{
  return &type metadata for Order.ShippingType;
}

uint64_t _s12ShippingTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331CDFEC + 4 * byte_233629905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331CE020 + 4 * byte_233629900[v4]))();
}

uint64_t sub_2331CE020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CE028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331CE030);
  return result;
}

uint64_t sub_2331CE03C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331CE044);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331CE048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331CE050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12ShippingTypeO10CodingKeysOMa()
{
  return &_s12ShippingTypeO10CodingKeysON;
}

ValueMetadata *_s12ShippingTypeO18ShippingCodingKeysOMa()
{
  return &_s12ShippingTypeO18ShippingCodingKeysON;
}

ValueMetadata *_s12ShippingTypeO18DeliveryCodingKeysOMa()
{
  return &_s12ShippingTypeO18DeliveryCodingKeysON;
}

unint64_t sub_2331CE090()
{
  unint64_t result;

  result = qword_256044140;
  if (!qword_256044140)
  {
    result = MEMORY[0x234934494](&unk_233629B54, &_s12ShippingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044140);
  }
  return result;
}

unint64_t sub_2331CE0D8()
{
  unint64_t result;

  result = qword_256044148;
  if (!qword_256044148)
  {
    result = MEMORY[0x234934494](&unk_233629A74, &_s12ShippingTypeO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044148);
  }
  return result;
}

unint64_t sub_2331CE120()
{
  unint64_t result;

  result = qword_256044150;
  if (!qword_256044150)
  {
    result = MEMORY[0x234934494](&unk_233629A9C, &_s12ShippingTypeO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044150);
  }
  return result;
}

unint64_t sub_2331CE168()
{
  unint64_t result;

  result = qword_256044158;
  if (!qword_256044158)
  {
    result = MEMORY[0x234934494](&unk_233629A24, &_s12ShippingTypeO18DeliveryCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044158);
  }
  return result;
}

unint64_t sub_2331CE1B0()
{
  unint64_t result;

  result = qword_256044160;
  if (!qword_256044160)
  {
    result = MEMORY[0x234934494](&unk_233629A4C, &_s12ShippingTypeO18DeliveryCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044160);
  }
  return result;
}

unint64_t sub_2331CE1F8()
{
  unint64_t result;

  result = qword_256044168;
  if (!qword_256044168)
  {
    result = MEMORY[0x234934494](&unk_233629AC4, &_s12ShippingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044168);
  }
  return result;
}

unint64_t sub_2331CE240()
{
  unint64_t result;

  result = qword_256044170;
  if (!qword_256044170)
  {
    result = MEMORY[0x234934494](&unk_233629AEC, &_s12ShippingTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256044170);
  }
  return result;
}

uint64_t sub_2331CE284(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E697070696873 && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726576696C6564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2331CE378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for ExtensionIdentityWrapper();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_233273A5C(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_2331684BC(v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionIdentityWrapper);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_233273A5C(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_2331D0B80();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
      sub_2331684BC((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionIdentityWrapper);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_23318B020(&v14, v7 + 40 * v11 + 32);
      sub_233168500((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionIdentityWrapper);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_2331CE4DC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_233273B54(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273B54(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_233273B54(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2331683D0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2331CE600(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_233273B54(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254247FC0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273B54(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_233273B54(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_2331683D0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2331CE728(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v11[32];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23327399C(0, v1, 0);
    v4 = a1 + 32;
    v2 = v14;
    do
    {
      sub_233168350(v4, (uint64_t)v11);
      swift_dynamicCast();
      v5 = v12;
      v6 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23327399C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v14;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_23327399C(v7 > 1, v8 + 1, 1);
        v2 = v14;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2331CE850(unint64_t a1)
{
  return sub_2331CE868(a1, (void (*)(_QWORD))type metadata accessor for ManagedOrderLineItem);
}

uint64_t sub_2331CE85C(unint64_t a1)
{
  return sub_2331CE868(a1, (void (*)(_QWORD))type metadata accessor for ManagedOrderApplication);
}

uint64_t sub_2331CE868(unint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x24BEE4AF8];
  result = sub_233273B54(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x234933120](i, a1);
        a2(0);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273B54(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_233273B54(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_2331683D0(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      a2(0);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273B54(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_233273B54(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_2331683D0(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_2331CEA9C(unint64_t a1)
{
  return sub_2331CE868(a1, (void (*)(_QWORD))type metadata accessor for ManagedOrderPaymentSummaryItem);
}

uint64_t sub_2331CEAA8(unint64_t a1)
{
  return sub_2331CE868(a1, (void (*)(_QWORD))type metadata accessor for ManagedOrderApplePayTransactionIdentifier);
}

uint64_t sub_2331CEAB4(unint64_t a1)
{
  return sub_2331CE868(a1, (void (*)(_QWORD))type metadata accessor for ManagedOrderPaymentTransaction);
}

uint64_t sub_2331CEAC0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_233273B54(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x234933120](i, a1);
        sub_233168668(0, (unint64_t *)&qword_254248750);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273B54(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_233273B54(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_2331683D0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_233168668(0, (unint64_t *)&qword_254248750);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_233273B54(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_233273B54(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_2331683D0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2331CED20(unint64_t a1)
{
  return sub_2331CE868(a1, (void (*)(_QWORD))type metadata accessor for ManagedOrderReturn);
}

id FKInstitution.init(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  id v22;
  void *v23;
  unsigned __int8 v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  double v28;
  id v29;
  unsigned __int8 v30;
  id v31;
  void *v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;

  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v55 - v10;
  v63 = ManagedInstitution.reconsentType.getter();
  v67 = objc_msgSend(a1, "id");
  v66 = objc_msgSend(a1, sel_name);
  LODWORD(v64) = objc_msgSend(a1, sel_authTypeObjects);
  v65 = objc_msgSend(a1, sel_firstTransactionsRequestWindow);
  objc_msgSend(a1, sel_maxAgeTransactionsFirstRequest);
  v13 = v12;
  objc_msgSend(a1, sel_maxAgeTransactionsRefreshRequest);
  v15 = v14;
  v16 = objc_msgSend(a1, sel_extensionsBundleIdentifiers);
  if (v16)
  {
    v17 = v16;
    v18 = sub_23361E3F0();

    sub_2331CE4DC(v18);
    swift_bridgeObjectRelease();
    v62 = sub_23361E3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v62 = 0;
  }
  v61 = objc_msgSend(a1, sel_maximumNumberOfBackgroundRefreshes);
  v59 = objc_msgSend(a1, sel_numberOfRemainingBackgroundRefreshes);
  v19 = objc_msgSend(a1, sel_backgroundRefreshRetryAfterDate);
  if (v19)
  {
    v20 = v19;
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v5, v2);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v21(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
    {
      v60 = 0;
    }
    else
    {
      v60 = sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v21(v11, 1, 1, v2);
    v60 = 0;
  }
  v22 = objc_msgSend(a1, sel_lastBackgroundRefreshDate);
  if (v22)
  {
    v23 = v22;
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
    v21(v9, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
    {
      v58 = 0;
    }
    else
    {
      v58 = sub_23361D5B0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    }
  }
  else
  {
    v21(v9, 1, 1, v2);
    v58 = 0;
  }
  v68 = objc_msgSend(a1, sel_backgroundRefreshConfirmationWindow);
  v69 = objc_msgSend(a1, sel_backgroundRefreshConfirmationExpiryWindow);
  v24 = objc_msgSend(a1, sel_multipleConsentsEnabled);
  v25 = objc_msgSend(a1, sel_termsAndConditionsObject);
  if (v25)
  {
    v26 = v25;
    sub_233168668(0, &qword_256044178);
    v57 = FKBankConnectTermsAndConditions.init(_:)(v26);
  }
  else
  {
    v57 = 0;
  }
  v27 = objc_msgSend(a1, sel_problemReportingEnabled);
  v56 = objc_msgSend(a1, sel_financialLabEnabled);
  v55 = objc_msgSend(a1, sel_consentSyncingEnabled);
  objc_msgSend(a1, sel_consentSyncingOutdatedTokenWaitTimeout);
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v28);
  v30 = objc_msgSend(a1, sel_timestampSuitableForUserDisplay);
  v31 = objc_msgSend(a1, sel_piiRedactionConfiguration);
  if (v31)
  {
    v32 = v31;
    v33 = v27;
    v34 = v24;
    v35 = objc_msgSend(v31, sel_countryCodes);

    sub_23361E5DC();
    v24 = v34;
    v27 = v33;
  }
  v63 &= 1u;
  v36 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v37 = (int)v61;
  v38 = (int)v59;
  v39 = (void *)sub_23361E5B8();
  swift_bridgeObjectRelease();
  LOWORD(v54) = (unsigned __int16)objc_msgSend(a1, sel_privacyLabelsValue);
  LOBYTE(v53) = v30;
  BYTE2(v52) = v55;
  BYTE1(v52) = v56;
  LOBYTE(v52) = v27;
  v40 = v57;
  LOBYTE(v51) = v24;
  v41 = (void *)v58;
  v42 = (void *)v60;
  v50 = v38;
  v49 = v37;
  v43 = v36;
  v45 = v66;
  v44 = v67;
  v46 = (void *)v62;
  v47 = v65;
  v64 = objc_msgSend(v43, sel_initWithInstitutionIdentifier_name_reconsentType_supportedAuthTypes_firstTransactionsRequestWindow_maxAgeTransactionsFirstRequest_maxAgeTransactionsRefreshRequest_extensionsBundleIdentifiers_maximumNumberOfBackgroundRefreshes_numberOfRemainingBackgroundRefreshes_backgroundRefreshRetryAfterDate_lastBackgroundRefreshDate_backgroundRefreshConfirmationWindow_backgroundRefreshConfirmationExpiryWindow_multipleConsentsEnabled_termsAndConditions_problemReportingEnabled_financialLabEnabled_consentSyncingEnabled_consentSyncingOutdatedTokenWaitTimeout_timestampSuitableForUserDisplay_piiRedactionConfigurationCountryCodes_privacyLabels_, v67, v66, v63, v64, v65, v62, v13, v15, v49, v50, v60, v58, v68, v69, v51, v57, v52,
          v29,
          v53,
          v39,
          v54);

  return v64;
}

id FKBankConnectTermsAndConditions.init(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "id");
  v10 = objc_msgSend(a1, sel_publishedAt);
  sub_23361D5EC();

  v11 = (void *)sub_23361D5B0();
  v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v8, v5);
  v13 = objc_msgSend(a1, sel_reviewedAt);
  if (v13)
  {
    v14 = v13;
    sub_23361D5EC();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      v15 = 0;
    }
    else
    {
      v15 = (void *)sub_23361D5B0();
      v12(v4, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    v15 = 0;
  }
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v17 = objc_msgSend(a1, sel_inEffectOn);
  sub_23361D5EC();

  v18 = (void *)sub_23361D5B0();
  v12(v8, v5);
  v19 = objc_msgSend(v16, sel_initWithIdentifier_publishedAt_reviewedAt_inEffectOn_, v9, v11, v15, v18);

  return v19;
}

id FKInstitution.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  __int16 *v24;
  uint64_t v25;
  int *refreshed;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  double *v31;
  double *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  char *v48;
  char v49;
  id v50;
  void *v51;
  int *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  int v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;

  v2 = type metadata accessor for BankConnectTermsAndConditions();
  v73 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v80 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v79 = (uint64_t)&v69 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v69 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v69 - v16;
  v85 = (id)*(unsigned __int8 *)(a1 + 32);
  v84 = sub_23361E12C();
  v83 = sub_23361E12C();
  v18 = 0;
  v81 = *(unsigned __int16 *)(a1 + 34);
  if ((*(_BYTE *)(a1 + 48) & 1) == 0)
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(a1 + 40));
  v82 = v18;
  v19 = *(double *)(a1 + 56);
  v20 = *(double *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v77 = (int *)v2;
  v69 = v12;
  if (v21)
  {
    v22 = swift_bridgeObjectRetain();
    sub_2331CE4DC(v22);
    swift_bridgeObjectRelease();
    v78 = sub_23361E3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v78 = 0;
  }
  v23 = (int *)type metadata accessor for Institution(0);
  v24 = (__int16 *)(a1 + v23[12]);
  v25 = *v24;
  v75 = v24[1];
  v76 = v25;
  refreshed = (int *)type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  sub_2331686A0((uint64_t)v24 + refreshed[6], (uint64_t)v17, (uint64_t *)&unk_254247DA0);
  v27 = sub_23361D634();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v17, 1, v27);
  v87 = 0;
  if (v30 != 1)
  {
    v87 = sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v27);
  }
  sub_2331686A0((uint64_t)v24 + refreshed[7], (uint64_t)v15, (uint64_t *)&unk_254247DA0);
  if (v29(v15, 1, v27) == 1)
  {
    v74 = 0;
  }
  else
  {
    v74 = sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v27);
  }
  v31 = (double *)((char *)v24 + refreshed[8]);
  if (((_BYTE)v31[1] & 1) != 0)
    v72 = 0;
  else
    v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *v31);
  v32 = (double *)((char *)v24 + refreshed[9]);
  if (((_BYTE)v32[1] & 1) != 0)
    v71 = 0;
  else
    v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *v32);
  v33 = v77;
  v70 = *(unsigned __int8 *)(a1 + v23[13]);
  sub_2331686A0(a1 + v23[15], (uint64_t)v8, &qword_254247CD0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v73 + 48))(v8, 1, v33) == 1)
  {
    v77 = 0;
  }
  else
  {
    v34 = (uint64_t)v8;
    v35 = v79;
    sub_233168580(v34, v79, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    v36 = v80;
    sub_2331684BC(v35, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    v37 = (void *)sub_23361E12C();
    v38 = (void *)sub_23361D5B0();
    v39 = (uint64_t)v69;
    sub_2331686A0((uint64_t)&v36[v33[6]], (uint64_t)v69, (uint64_t *)&unk_254247DA0);
    if (v29((char *)v39, 1, v27) == 1)
    {
      v40 = 0;
    }
    else
    {
      v40 = (void *)sub_23361D5B0();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v39, v27);
    }
    v41 = objc_allocWithZone((Class)FKBankConnectTermsAndConditions);
    v42 = (uint64_t)v80;
    v43 = (void *)sub_23361D5B0();
    v77 = (int *)objc_msgSend(v41, sel_initWithIdentifier_publishedAt_reviewedAt_inEffectOn_, v37, v38, v40, v43);

    sub_233168500(v42, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
    sub_233168500(v79, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
  }
  v44 = *(_BYTE *)(a1 + v23[14]);
  v45 = *(_BYTE *)(a1 + v23[16]);
  v46 = a1 + v23[20];
  v47 = *(_BYTE *)v46;
  v48 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(v46 + 8));
  v80 = v48;
  v49 = *(_BYTE *)(a1 + v23[17]);
  v50 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  v51 = (void *)sub_23361E5B8();
  v86 = v51;
  swift_bridgeObjectRelease();
  LOWORD(v68) = *(_WORD *)(a1 + v23[19]);
  v67 = v51;
  LOBYTE(v66) = v49;
  v65 = v48;
  BYTE2(v64) = v47;
  BYTE1(v64) = v45;
  LOBYTE(v64) = v44;
  v52 = v77;
  LOBYTE(v63) = v70;
  v53 = v71;
  v54 = v72;
  v55 = (void *)v74;
  v56 = (void *)v87;
  v57 = v50;
  v59 = (void *)v83;
  v58 = (void *)v84;
  v60 = v82;
  v61 = (void *)v78;
  v85 = objc_msgSend(v57, sel_initWithInstitutionIdentifier_name_reconsentType_supportedAuthTypes_firstTransactionsRequestWindow_maxAgeTransactionsFirstRequest_maxAgeTransactionsRefreshRequest_extensionsBundleIdentifiers_maximumNumberOfBackgroundRefreshes_numberOfRemainingBackgroundRefreshes_backgroundRefreshRetryAfterDate_lastBackgroundRefreshDate_backgroundRefreshConfirmationWindow_backgroundRefreshConfirmationExpiryWindow_multipleConsentsEnabled_termsAndConditions_problemReportingEnabled_financialLabEnabled_consentSyncingEnabled_consentSyncingOutdatedTokenWaitTimeout_timestampSuitableForUserDisplay_piiRedactionConfigurationCountryCodes_privacyLabels_, v84, v83, v85, (__int16)v81, v82, v78, v19, v20, v76, v75, v87, v74, v72, v71, v63, v77, v64,
          v65,
          v66,
          v67,
          v68);

  sub_233168500(a1, type metadata accessor for Institution);
  return v85;
}

id FKBankConnectTermsAndConditions.init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_23361E12C();
  v6 = type metadata accessor for BankConnectTermsAndConditions();
  v7 = (void *)sub_23361D5B0();
  sub_2331686A0(a1 + *(int *)(v6 + 24), (uint64_t)v4, (uint64_t *)&unk_254247DA0);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) != 1)
  {
    v10 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
  }
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v12 = (void *)sub_23361D5B0();
  v13 = objc_msgSend(v11, sel_initWithIdentifier_publishedAt_reviewedAt_inEffectOn_, v5, v7, v10, v12);

  sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);
  return v13;
}

uint64_t FKInstitution.institution.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  BOOL v53;
  BOOL v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  char v62;
  char v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  char v77;
  unsigned __int8 v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t refreshed;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98[8];
  uint64_t v99;
  unsigned __int16 v100;
  uint64_t v101;
  unsigned __int16 v102[5];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254247CD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v96 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v95 = (uint64_t)&v82 - v10;
  refreshed = type metadata accessor for Institution.BackgroundRefreshConfiguration(0);
  v11 = MEMORY[0x24BDAC7A8](refreshed);
  v13 = (_WORD *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v97 = (uint64_t)&v82 - v14;
  v15 = objc_msgSend(v1, sel_institutionIdentifier);
  v16 = sub_23361E150();
  v18 = v17;

  v19 = objc_msgSend(v1, sel_name);
  v20 = sub_23361E150();
  v94 = v21;

  v22 = FKReconsentType.reconsentType.getter((unint64_t)objc_msgSend(v1, sel_reconsentType));
  v102[0] = (unsigned __int16)objc_msgSend(v1, sel_supportedAuthTypes);
  v23 = objc_msgSend(v1, sel_firstTransactionsRequestWindow);
  v92 = v23;
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, sel_doubleValue);
    v26 = v25;

    v93 = v26;
  }
  else
  {
    v93 = 0;
  }
  objc_msgSend(v2, sel_maxAgeTransactionsFirstRequest);
  v28 = v27;
  objc_msgSend(v2, sel_maxAgeTransactionsRefreshRequest);
  v30 = v29;
  v31 = objc_msgSend(v2, sel_extensionsBundleIdentifiers);
  if (v31)
  {
    v32 = sub_23361E3F0();

    v31 = (id)sub_2331D05F0(v32);
    swift_bridgeObjectRelease();
  }
  result = (uint64_t)objc_msgSend(v2, sel_maximumNumberOfBackgroundRefreshes);
  if (result < -32768)
  {
    __break(1u);
    goto LABEL_28;
  }
  v34 = result;
  if (result >= 0x8000)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v90 = v20;
  result = (uint64_t)objc_msgSend(v2, sel_numberOfRemainingBackgroundRefreshes);
  if (result < -32768)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result >= 0x8000)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  v82 = result;
  v83 = v34;
  v84 = (uint64_t)v31;
  v35 = objc_msgSend(v2, sel_backgroundRefreshRetryAfterDate);
  if (v35)
  {
    v36 = v35;
    v37 = v95;
    sub_23361D5EC();

    v38 = sub_23361D634();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
  }
  else
  {
    v39 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v95, 1, 1, v39);
  }
  v40 = objc_msgSend(v2, sel_lastBackgroundRefreshDate);
  if (v40)
  {
    v41 = v40;
    v42 = v96;
    sub_23361D5EC();

    v43 = sub_23361D634();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
  }
  else
  {
    v44 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v96, 1, 1, v44);
  }
  v45 = objc_msgSend(v2, sel_backgroundRefreshConfirmationWindow);
  v46 = v45;
  v47 = 0;
  v48 = 0;
  if (v45)
  {
    objc_msgSend(v45, sel_doubleValue);
    v48 = v49;

  }
  v85 = v22;
  v86 = v18;
  v87 = v16;
  v88 = v6;
  v89 = a1;
  v50 = objc_msgSend(v2, sel_backgroundRefreshConfirmationExpiryWindow);
  v51 = v50;
  if (v50)
  {
    objc_msgSend(v50, sel_doubleValue);
    v47 = v52;

  }
  v53 = v51 == 0;
  v54 = v46 == 0;
  v55 = (int *)refreshed;
  v56 = (uint64_t)v13 + *(int *)(refreshed + 24);
  v57 = sub_23361D634();
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
  v58(v56, 1, 1, v57);
  v59 = (uint64_t)v13 + v55[7];
  v58(v59, 1, 1, v57);
  v60 = (char *)v13 + v55[8];
  *(_QWORD *)v60 = 0;
  v60[8] = 1;
  v61 = (char *)v13 + v55[9];
  *(_QWORD *)v61 = 0;
  v61[8] = 1;
  *v13 = v83;
  v13[1] = v82;
  sub_23318C8A8(v95, v56);
  sub_23318C8A8(v96, v59);
  *(_QWORD *)v60 = v48;
  v60[8] = v54;
  *(_QWORD *)v61 = v47;
  v61[8] = v53;
  sub_233168580((uint64_t)v13, v97, type metadata accessor for Institution.BackgroundRefreshConfiguration);
  v62 = objc_msgSend(v2, sel_multipleConsentsEnabled);
  v63 = objc_msgSend(v2, sel_problemReportingEnabled);
  v64 = objc_msgSend(v2, sel_termsAndConditions);
  if (v64)
  {
    v65 = v64;
    v66 = (uint64_t)v88;
    BankConnectTermsAndConditions.init(_:)(v65, (uint64_t)v88);
    v67 = type metadata accessor for BankConnectTermsAndConditions();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 0, 1, v67);

  }
  else
  {
    v68 = type metadata accessor for BankConnectTermsAndConditions();
    v66 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v88, 1, 1, v68);
  }
  v69 = objc_msgSend(v2, sel_financialLabEnabled);
  v70 = objc_msgSend(v2, sel_timestampSuitableForUserDisplay);
  v71 = v2;
  v72 = objc_msgSend(v71, sel_piiRedactionConfigurationCountryCodes);
  v73 = sub_23361E5DC();

  v74 = *(_QWORD *)(v73 + 16);
  swift_bridgeObjectRelease();
  if (v74)
  {
    v75 = objc_msgSend(v71, sel_piiRedactionConfigurationCountryCodes);
    v76 = sub_23361E5DC();

  }
  else
  {

    v76 = 0;
  }
  v77 = v92 == 0;
  v101 = v76;
  v100 = (unsigned __int16)objc_msgSend(v71, sel_privacyLabels);
  v78 = objc_msgSend(v71, sel_consentSyncingEnabled);
  v79 = objc_msgSend(v71, sel_consentSyncingOutdatedTokenWaitTimeout);
  objc_msgSend(v79, sel_doubleValue);
  v81 = v80;

  v98[0] = v78;
  v99 = v81;
  return Institution.init(id:name:reconsentType:supportedAuthTypes:firstTransactionsRequestWindow:maxAgeTransactionsFirstRequest:maxAgeTransactionsRefreshRequest:extensionsBundleIdentifiers:backgroundRefreshConfiguration:multipleConsentsEnabled:problemReportingEnabled:termsAndConditions:financialLabEnabled:timestampSuitableForUserDisplay:piiRedactionConfiguration:privacyLabels:consentSyncingConfiguration:)(v87, v86, v90, v94, v85, (__int16 *)v102, v93, v77, v89, v28, v30, v84, v97, v62, v63, v66, v69, v70, &v101,
           (__int16 *)&v100,
           v98);
}

unint64_t FKReconsentType.reconsentType.getter(unint64_t result)
{
  if (result > 1)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = sub_23361EF24();
    __break(1u);
  }
  return result;
}

uint64_t SupportedAuthTypes.init(_:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2331D05F0(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  sub_23327399C(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_233168350(i, (uint64_t)v11);
      if (!swift_dynamicCast() || !v10)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23327399C(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23327399C(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_2331D073C(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v3 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = MEMORY[0x24BEE4AF8];
  sub_233273B9C(0, v3 & ~(v3 >> 63), 0);
  v4 = v12;
  if (!v2)
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v4;
LABEL_7:
    for (i = 4; ; ++i)
    {
      v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x234933120](i - 4, a1);
        v7 = i - 3;
        if (__OFADD__(v6, 1))
          goto LABEL_22;
      }
      else
      {
        swift_unknownObjectRetain();
        v7 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256044950);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256044180);
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273B9C(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v12;
      }
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_233273B9C(v8 > 1, v9 + 1, 1);
        v4 = v12;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      *(_QWORD *)(v4 + 8 * v9 + 32) = v11;
      if (v7 == v2)
        return v4;
    }
  }
  swift_bridgeObjectRetain();
  v2 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (v2)
    goto LABEL_7;
  return v4;
}

void BankConnectTermsAndConditions.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = (int *)type metadata accessor for BankConnectTermsAndConditions();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = objc_msgSend(a1, sel_identifier);
  v17 = sub_23361E150();
  v28 = v18;
  v29 = v17;

  v19 = objc_msgSend(a1, sel_publishedAt);
  sub_23361D5EC();

  v20 = objc_msgSend(a1, sel_reviewedAt);
  if (v20)
  {
    v21 = v20;
    sub_23361D5EC();

    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 0, 1, v9);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 1, 1, v9);
  }
  v23 = objc_msgSend(a1, sel_inEffectOn);
  sub_23361D5EC();

  v24 = (uint64_t)v5 + v3[6];
  v22((char *)v24, 1, 1, v9);
  v25 = v28;
  *v5 = v29;
  v5[1] = v25;
  v26 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v26((char *)v5 + v3[5], v15, v9);
  sub_23318C8A8((uint64_t)v8, v24);
  v26((char *)v5 + v3[7], v13, v9);
  sub_233168580((uint64_t)v5, v30, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectTermsAndConditions);

}

unint64_t sub_2331D0B80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256042C98;
  if (!qword_256042C98)
  {
    v1 = type metadata accessor for ExtensionIdentityWrapper();
    result = MEMORY[0x234934494](&protocol conformance descriptor for ExtensionIdentityWrapper, v1);
    atomic_store(result, (unint64_t *)&qword_256042C98);
  }
  return result;
}

uint64_t AnalyticsEvent.daysSince(_:now:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = sub_23361CD40();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D868();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23361D634();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23319F164(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_2331D0F20((uint64_t)v15);
    sub_23319604C();
    return sub_23361EA2C();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    sub_23361D7D8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
    v21 = sub_23361D850();
    v30[0] = a4;
    v30[1] = a3;
    v22 = *(_QWORD *)(v21 - 8);
    v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_233623D60;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x24BDCF220], v21);
    sub_2333EF4B0(v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23361D784();
    swift_bridgeObjectRelease();
    v25 = sub_23361CC98();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
    if ((v27 & 1) != 0)
      v28 = 0;
    else
      v28 = v25;
    _s10FinanceKit14AnalyticsEventPAAE13counterResult_17singleValueCutoffSSSi_SitF_0(v28, 10000);
    v20 = sub_23361E12C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  return v20;
}

uint64_t _s10FinanceKit14AnalyticsEventPAAE13counterResult_17singleValueCutoffSSSi_SitF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (a2 >= a1)
    return sub_23361F1D0();
  v3 = sub_23361F1D0();
  sub_23361E27C();
  return v3;
}

uint64_t sub_2331D0F20(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of AnalyticsEvent.analyticsEventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsEvent.analyticsPayload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_2331D0F70(id *a1, uint64_t a2, uint64_t a3, SEL *a4, void (*a5)(void))
{
  id v6;

  v6 = objc_msgSend(*a1, *a4);
  a5();

}

void sub_2331D0FBC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_otherBankTransactionLocationsData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361D3C4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_2331D1020(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_23361D3AC();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setOtherBankTransactionLocationsData_);

}

id ManagedMapsLookupRequest.__allocating_init(request:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return ManagedMapsLookupRequest.init(request:context:)(a1, a2);
}

id ManagedMapsLookupRequest.init(request:context:)(uint64_t a1, void *a2)
{
  void *v2;
  objc_class *ObjectType;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v21.receiver = v2;
  v21.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v21, sel_initWithEntity_insertIntoManagedObjectContext_, v6, a2);

  v8 = v7;
  v9 = (void *)sub_23361D658();
  objc_msgSend(v8, sel_setTransactionID_, v9);

  v10 = type metadata accessor for MapsLookupRequest();
  v11 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setTransactionDisplayName_, v11);

  v12 = (void *)sub_23361D5B0();
  objc_msgSend(v8, sel_setCreationDate_, v12);

  v13 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setBankTransactionDescriptionClean_, v13);

  v14 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setBankTransactionDescription_, v14);

  v15 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setBankMerchantEnhancedName_, v15);

  objc_msgSend(v8, sel_setPiiRedactionOccurred_, *(unsigned __int8 *)(a1 + *(int *)(v10 + 40)));
  v16 = 0;
  v17 = a1 + *(int *)(v10 + 44);
  v18 = *(_QWORD *)(v17 + 8);
  if (v18 >> 60 != 15)
  {
    v19 = *(_QWORD *)v17;
    sub_2331D1374(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));
    v16 = (void *)sub_23361D3AC();
    sub_2331B04E8(v19, v18);
  }
  objc_msgSend(v8, sel_setOtherBankTransactionLocationsData_, v16);

  sub_2331D1338(a1);
  return v8;
}

uint64_t sub_2331D1338(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MapsLookupRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2331D1374(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

id ManagedMapsLookupRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MapsLookupRequest.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_23361D634();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D6A0();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_transactionID);
  sub_23361D67C();

  v11 = objc_msgSend(a1, sel_transactionDisplayName);
  v12 = sub_23361E150();
  v45 = v13;
  v46 = v12;

  v14 = objc_msgSend(a1, sel_creationDate);
  sub_23361D5EC();

  v15 = objc_msgSend(a1, sel_bankTransactionDescriptionClean);
  v16 = sub_23361E150();
  v43 = v17;
  v44 = v16;

  v18 = objc_msgSend(a1, sel_bankTransactionDescription);
  v19 = sub_23361E150();
  v41 = v20;
  v42 = v19;

  v21 = objc_msgSend(a1, sel_bankMerchantEnhancedName);
  v22 = sub_23361E150();
  v24 = v23;

  v25 = objc_msgSend(a1, sel_piiRedactionOccurred);
  v26 = objc_msgSend(a1, sel_otherBankTransactionLocationsData);
  if (v26)
  {
    v27 = v26;
    v28 = sub_23361D3C4();
    v30 = v29;

  }
  else
  {

    v28 = 0;
    v30 = 0xF000000000000000;
  }
  v31 = (int *)type metadata accessor for MapsLookupRequest();
  v32 = (uint64_t *)(a2 + v31[11]);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(a2, v9, v48);
  v33 = (uint64_t *)(a2 + v31[5]);
  v34 = v45;
  *v33 = v46;
  v33[1] = v34;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(a2 + v31[6], v6, v50);
  v36 = (uint64_t *)(a2 + v31[7]);
  v37 = v43;
  *v36 = v44;
  v36[1] = v37;
  v38 = (uint64_t *)(a2 + v31[8]);
  v39 = v41;
  *v38 = v42;
  v38[1] = v39;
  v40 = (uint64_t *)(a2 + v31[9]);
  *v40 = v22;
  v40[1] = v24;
  *(_BYTE *)(a2 + v31[10]) = v25;
  *v32 = v28;
  v32[1] = v30;
  return result;
}

id static ManagedMapsLookupRequest.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit24ManagedMapsLookupRequest;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

char *keypath_get_selector_transactionID()
{
  return sel_transactionID;
}

void sub_2331D16D0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_transactionID, (void (*)(void))MEMORY[0x24BDCE9F8]);
}

void sub_2331D16F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE9D0], (SEL *)&selRef_setTransactionID_);
}

char *keypath_get_selector_transactionDisplayName()
{
  return sel_transactionDisplayName;
}

void sub_2331D1714(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_transactionDisplayName, a2);
}

void sub_2331D1730(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setTransactionDisplayName_);
}

char *keypath_get_selector_creationDate()
{
  return sel_creationDate;
}

void sub_2331D1748(id *a1, uint64_t a2, uint64_t a3)
{
  sub_2331D0F70(a1, a2, a3, (SEL *)&selRef_creationDate, (void (*)(void))MEMORY[0x24BDCE878]);
}

void sub_2331D176C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm_0(a1, a2, a3, a4, MEMORY[0x24BDCE5D8], (SEL *)&selRef_setCreationDate_);
}

void keypath_setTm_0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), SEL *a6)
{
  void *v7;
  id v8;

  v7 = *a2;
  v8 = (id)a5();
  objc_msgSend(v7, *a6, v8);

}

char *keypath_get_selector_bankTransactionDescriptionClean()
{
  return sel_bankTransactionDescriptionClean;
}

void sub_2331D17DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_bankTransactionDescriptionClean, a2);
}

void sub_2331D17F8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setBankTransactionDescriptionClean_);
}

char *keypath_get_selector_bankTransactionDescription()
{
  return sel_bankTransactionDescription;
}

void sub_2331D1810(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_bankTransactionDescription, a2);
}

void sub_2331D182C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setBankTransactionDescription_);
}

char *keypath_get_selector_bankMerchantEnhancedName()
{
  return sel_bankMerchantEnhancedName;
}

void sub_2331D1844(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_bankMerchantEnhancedName, a2);
}

void sub_2331D1860(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setBankMerchantEnhancedName_);
}

char *keypath_get_selector_piiRedactionOccurred()
{
  return sel_piiRedactionOccurred;
}

id sub_2331D1878@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_piiRedactionOccurred);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2331D18A8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPiiRedactionOccurred_, *a1);
}

char *keypath_get_selector_otherBankTransactionLocationsData()
{
  return sel_otherBankTransactionLocationsData;
}

uint64_t type metadata accessor for ManagedMapsLookupRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedMapsLookupRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedMapsLookupRequest.__allocating_init(request:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t BankConnectMapsUserIdentifier.userIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectMapsUserIdentifier.userIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BankConnectMapsUserIdentifier.userIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectMapsUserIdentifier.rotation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t BankConnectMapsUserIdentifier.rotation.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*BankConnectMapsUserIdentifier.rotation.modify())()
{
  return nullsub_1;
}

BOOL static BankConnectMapsUserIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v3;
  v5 = sub_23361F224();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_2331D19EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697461746F72;
  else
    return 0x6E65644972657375;
}

uint64_t sub_2331D1A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331D48C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331D1A58()
{
  sub_2331D1BD8();
  return sub_23361F428();
}

uint64_t sub_2331D1A80()
{
  sub_2331D1BD8();
  return sub_23361F434();
}

uint64_t BankConnectMapsUserIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560441F0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331D1BD8();
  sub_23361F410();
  v11 = 0;
  sub_23361F140();
  if (!v2)
  {
    v10 = 1;
    sub_23361F170();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

unint64_t sub_2331D1BD8()
{
  unint64_t result;

  result = qword_2560441F8;
  if (!qword_2560441F8)
  {
    result = MEMORY[0x234934494](&unk_233629F24, &type metadata for BankConnectMapsUserIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560441F8);
  }
  return result;
}

uint64_t BankConnectMapsUserIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044200);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331D1BD8();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v16 = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23361F05C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331D1DA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return BankConnectMapsUserIdentifier.init(from:)(a1, a2);
}

uint64_t sub_2331D1DB4(_QWORD *a1)
{
  return BankConnectMapsUserIdentifier.encode(to:)(a1);
}

BOOL sub_2331D1DC8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v3;
  v5 = sub_23361F224();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t BankConnectUserIdentifierProvider.__allocating_init(userDefaults:keychainAccessGroup:keychainServiceName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v10 = swift_allocObject();
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_2331D42A8((uint64_t)v15, a2, a3, a4, a5, v10, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t BankConnectUserIdentifierProvider.init(userDefaults:keychainAccessGroup:keychainServiceName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_2331D42A8((uint64_t)v15, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t BankConnectUserIdentifierProvider.userIdentifier()@<X0>(uint64_t a1@<X8>)
{
  void (*v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[96];

  v66 = a1;
  v60 = sub_23361CD40();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v62 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23361D868();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v63 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254245FD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23361D634();
  v10 = *(_QWORD *)(v65 - 8);
  v11 = MEMORY[0x24BDAC7A8](v65);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v54 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23361D6A0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v56 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v64 = (char *)&v54 - v22;
  v67 = v1;
  swift_beginAccess();
  sub_2331686A0((uint64_t)v1 + 16, (uint64_t)v70, &qword_2560426B0);
  sub_233170588();
  v24 = v23;
  sub_233168608((uint64_t)v70, &qword_2560426B0);
  if (!v24)
    return sub_2331D2760();
  sub_23361D640();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_233168608((uint64_t)v17, &qword_254246740);
    return sub_2331D2760();
  }
  v26 = v64;
  v55 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v55(v64, v17, v18);
  v27 = (uint64_t)v67
      + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider__webServiceUserIdentifierUpdatedAt;
  swift_beginAccess();
  sub_2331686A0(v27, (uint64_t)v6, &qword_254245FD0);
  sub_2331706F8((uint64_t)v9);
  sub_233168608((uint64_t)v6, &qword_254245FD0);
  v28 = v65;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v65) == 1)
  {
    sub_233168608((uint64_t)v9, (uint64_t *)&unk_254247DA0);
    sub_2331D2760();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v26, v18);
  }
  else
  {
    v29 = v19;
    v54 = v18;
    v30 = v57;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v57, v9, v28);
    v31 = v63;
    sub_23361D844();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
    v32 = sub_23361D850();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_233623D60;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x24BDCF220], v32);
    sub_2333EF4B0(v35);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23361D5F8();
    v36 = v62;
    sub_23361D784();
    v37 = v65;
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v10 + 8);
    v38(v13, v37);
    v39 = sub_23361CC98();
    if ((v40 & 1) != 0 || v39 < 121)
    {
      v67 = v38;
      v41 = v64;
      if (qword_256041CA0 != -1)
        swift_once();
      v42 = sub_23361DB80();
      __swift_project_value_buffer(v42, (uint64_t)qword_2560495B0);
      v43 = v56;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v56, v41, v54);
      v44 = sub_23361DB68();
      v45 = sub_23361E780();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v69 = v47;
        *(_DWORD *)v46 = 136446210;
        v48 = sub_23361D64C();
        v68 = sub_233164DCC(v48, v49, &v69);
        sub_23361EBC4();
        swift_bridgeObjectRelease();
        v50 = v54;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v43, v54);
        _os_log_impl(&dword_233151000, v44, v45, "Web service user identifier: %{public}s", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v47, -1, -1);
        v51 = v46;
        v41 = v64;
        MEMORY[0x234934590](v51, -1, -1);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v62, v60);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v61);
        v67(v30, v65);
        v52 = v50;
      }
      else
      {

        v53 = v54;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v43, v54);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v60);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v61);
        v67(v30, v37);
        v52 = v53;
      }
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v55)(v66, v41, v52);
    }
    else
    {
      sub_2331D2760();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v60);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v61);
      v38(v30, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v64, v54);
    }
  }
}

uint64_t sub_2331D2760()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042698);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  sub_23361D694();
  v10 = sub_23361D64C();
  v12 = v11;
  swift_beginAccess();
  sub_233170E68(v10, v12);
  swift_endAccess();
  sub_23361D5F8();
  v13 = sub_23361D634();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
  sub_2331686A0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_254247DA0);
  swift_beginAccess();
  sub_2331686A0((uint64_t)v7, (uint64_t)v2, (uint64_t *)&unk_254247DA0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  sub_233170FE0((uint64_t)v2);
  sub_233168608((uint64_t)v7, (uint64_t *)&unk_254247DA0);
  swift_endAccess();
  return sub_233168608((uint64_t)v9, (uint64_t *)&unk_254247DA0);
}

uint64_t BankConnectUserIdentifierProvider.rateLimitUserIdentifier()()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result = sub_2331D29F0();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    sub_23361CA70();
    swift_allocObject();
    sub_23361CA64();
    sub_23361D6A0();
    sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23361CA58();
    swift_release();
    return sub_23316BEA4(v3, v4);
  }
  return result;
}

uint64_t sub_2331D29F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1 = sub_23361D6A0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256041CA0 != -1)
    swift_once();
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
  v6 = sub_23361DB68();
  v7 = sub_23361E750();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_233151000, v6, v7, "Fetching Rate Limit identity", v8, 2u);
    MEMORY[0x234934590](v8, -1, -1);
  }

  sub_2331D3730(1);
  v10 = sub_2331D4438(v9);
  v12 = v11;
  swift_bridgeObjectRelease();
  if (!v0 && v12 >> 60 == 15)
  {
    sub_23361CB00();
    swift_allocObject();
    sub_23361CAF4();
    sub_23361D694();
    sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v10 = sub_23361CAE8();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_release();
    sub_2331D3B68(v10, v15, 1);
  }
  return v10;
}

uint64_t BankConnectUserIdentifierProvider.mapsUserIdentifier(now:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v21[18];

  v21[17] = *MEMORY[0x24BDAC8D0];
  v3 = sub_23361E030();
  v21[6] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361E1B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361DE5C();
  v21[8] = *(_QWORD *)(v10 - 8);
  v21[9] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v21[7] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D40C();
  v13 = v12 / 259200.0;
  if ((~COERCE__INT64(v12 / 259200.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v13 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v13 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x2331D3130);
  }
  result = sub_2331D3160();
  if (!v1)
  {
    v16 = result;
    v21[4] = a1;
    v21[5] = v5;
    v21[3] = (unint64_t)v13;
    v21[10] = (unint64_t)v13;
    v17 = v15;
    v21[12] = sub_23361F1D0();
    v21[13] = v18;
    sub_23361E27C();
    sub_2331D1374(v16, v17);
    sub_2331D32A4(v16, v17);
    v21[1] = v17;
    v21[2] = v16;
    sub_23316BEA4(v16, v17);
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E198();
    sub_23361E15C();
    v20 = v19;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v20 >> 60 != 15)
    {
      sub_233167C58((unint64_t *)&qword_256058E20, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      sub_23361DE50();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x2331D313CLL);
  }
  return result;
}

uint64_t sub_2331D3160()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E750();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Fetching Maps identity", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }

  sub_2331D3730(0);
  v6 = sub_2331D4438(v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (!v0 && v8 >> 60 == 15)
    return sub_2331D3F3C();
  return v6;
}

void sub_2331D32A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23361E1B0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23361D3E8();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X9 }
}

uint64_t sub_2331D3354()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  unsigned int v13;
  char v14;
  unint64_t v15;
  char v16;

  if (BYTE6(v2) + 0x4000000000000000 < 0)
    goto LABEL_22;
  v7 = sub_233612DB8(0, 2 * BYTE6(v2));
  if (v4)
  {
    sub_2331D1374(v3, v2);
    sub_2331D1374(v3, v2);
  }
  sub_23361D3F4();
  sub_23316BEA4(v3, v2);
  sub_233167C58(&qword_256044230, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDD78], MEMORY[0x24BDCDD80]);
  sub_23361EBB8();
  if ((*(_BYTE *)(v6 - 81) & 1) == 0)
  {
    v12 = 0;
    v13 = *(unsigned __int8 *)(v6 - 82);
    while (1)
    {
      if (v13 <= 0x9F)
        v14 = (v13 >> 4) | 0x30;
      else
        v14 = (v13 >> 4) + 87;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = (uint64_t)sub_233612E74(v7);
      v15 = *(_QWORD *)(v7 + 16);
      if (v12 >= v15)
        break;
      *(_BYTE *)(v7 + v12 + 32) = v14;
      if (v12 + 1 >= v15)
        goto LABEL_21;
      if ((v13 & 0xF) <= 9)
        v16 = v13 & 0xF | 0x30;
      else
        v16 = (v13 & 0xF) + 87;
      *(_BYTE *)(v7 + v12 + 33) = v16;
      sub_23361EBB8();
      v13 = *(unsigned __int8 *)(v6 - 82);
      v12 += 2;
      if ((*(_BYTE *)(v6 - 81) & 1) != 0)
        goto LABEL_5;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    JUMPOUT(0x2331D3574);
  }
LABEL_5:
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v1);
  *(_QWORD *)(v6 - 96) = v7;
  swift_bridgeObjectRetain();
  sub_23361E198();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044238);
  sub_2331D5180();
  v8 = sub_23361E174();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
  {
    __break(1u);
    JUMPOUT(0x2331D3580);
  }
  swift_bridgeObjectRelease();
  return v8;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> BankConnectUserIdentifierProvider.deleteSyncedUserIdentifiers()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E750();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Deleting Maps identity...", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }

  sub_2331D3730(0);
  sub_2331D49DC();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    v5 = sub_23361DB68();
    v6 = sub_23361E750();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_233151000, v5, v6, "Deleting Rate Limit identity...", v7, 2u);
      MEMORY[0x234934590](v7, -1, -1);
    }

    sub_2331D3730(1);
    sub_2331D49DC();
  }
  swift_bridgeObjectRelease();
}

void sub_2331D3730(char a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t inited;
  void **v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void **v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;

  if ((a1 & 1) != 0)
    v2 = 0xD00000000000002ELL;
  else
    v2 = 0xD000000000000028;
  if ((a1 & 1) != 0)
    v3 = 0x800000023366BE80;
  else
    v3 = 0x800000023366BEB0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044228);
  inited = swift_initStackObject();
  v5 = (void **)MEMORY[0x24BDE9220];
  *(_OWORD *)(inited + 16) = xmmword_233629CC0;
  v6 = *v5;
  *(_QWORD *)(inited + 32) = *v5;
  v7 = (void *)*MEMORY[0x24BDE9230];
  type metadata accessor for CFString(0);
  v9 = (void **)MEMORY[0x24BDE8F50];
  *(_QWORD *)(inited + 40) = v7;
  v10 = *v9;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v10;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_keychainAccessGroup + 8);
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = *(_QWORD *)(v1
                                       + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_keychainAccessGroup);
  *(_QWORD *)(inited + 88) = v11;
  v13 = (void *)*MEMORY[0x24BDE9128];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_keychainServiceName + 8);
  *(_QWORD *)(inited + 120) = *(_QWORD *)(v1
                                        + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_keychainServiceName);
  *(_QWORD *)(inited + 128) = v14;
  v15 = (void *)*MEMORY[0x24BDE8FA8];
  *(_QWORD *)(inited + 144) = v12;
  *(_QWORD *)(inited + 152) = v15;
  *(_QWORD *)(inited + 160) = v2;
  *(_QWORD *)(inited + 168) = v3;
  v16 = (void *)*MEMORY[0x24BDE8F60];
  *(_QWORD *)(inited + 184) = v12;
  *(_QWORD *)(inited + 192) = v16;
  v17 = (void *)*MEMORY[0x24BDE8F68];
  v18 = (void **)MEMORY[0x24BDE9140];
  *(_QWORD *)(inited + 200) = *MEMORY[0x24BDE8F68];
  v19 = *v18;
  *(_QWORD *)(inited + 224) = v8;
  *(_QWORD *)(inited + 232) = v19;
  v20 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 264) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 240) = 1;
  v21 = (void *)*MEMORY[0x24BDE9138];
  if (*MEMORY[0x24BDE9138])
  {
    v38 = v17;
    v39 = v15;
    v40 = v13;
    v22 = v6;
    v23 = v7;
    *(_QWORD *)(inited + 272) = v21;
    v24 = (void *)*MEMORY[0x24BDE9190];
    if (*MEMORY[0x24BDE9190])
    {
      v25 = v10;
      *(_QWORD *)(inited + 280) = v24;
      v26 = (void *)*MEMORY[0x24BDE9008];
      *(_QWORD *)(inited + 304) = v8;
      *(_QWORD *)(inited + 312) = v26;
      *(_QWORD *)(inited + 344) = v20;
      *(_BYTE *)(inited + 320) = 1;
      v27 = v22;
      v28 = v23;
      v29 = v25;
      swift_bridgeObjectRetain();
      v30 = v40;
      swift_bridgeObjectRetain();
      v31 = v39;
      v32 = v16;
      v33 = v38;
      v34 = v19;
      v35 = v21;
      v36 = v24;
      v37 = v26;
      sub_23315F804(inited);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t BankConnectUserIdentifierProvider.deinit()
{
  uint64_t v0;

  sub_233168608(v0 + 16, &qword_2560426B0);
  sub_233168608(v0 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider__webServiceUserIdentifierUpdatedAt, &qword_254245FD0);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_userDefaults);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BankConnectUserIdentifierProvider.__deallocating_deinit()
{
  uint64_t v0;

  sub_233168608(v0 + 16, &qword_2560426B0);
  sub_233168608(v0 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider__webServiceUserIdentifierUpdatedAt, &qword_254245FD0);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_userDefaults);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2331D3A40@<X0>(uint64_t a1@<X8>)
{
  return BankConnectUserIdentifierProvider.userIdentifier()(a1);
}

uint64_t sub_2331D3A60()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result = sub_2331D29F0();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    sub_23361CA70();
    swift_allocObject();
    sub_23361CA64();
    sub_23361D6A0();
    sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23361CA58();
    swift_release();
    return sub_23316BEA4(v3, v4);
  }
  return result;
}

uint64_t sub_2331D3B28@<X0>(uint64_t a1@<X8>)
{
  return BankConnectUserIdentifierProvider.mapsUserIdentifier(now:)(a1);
}

void sub_2331D3B48()
{
  BankConnectUserIdentifierProvider.deleteSyncedUserIdentifiers()();
}

void sub_2331D3B68(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  const __CFDictionary *v20;
  OSStatus v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  int v27;
  uint8_t *v28;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  if ((a3 & 1) != 0)
    v5 = 0xD000000000000020;
  else
    v5 = 0xD000000000000017;
  if ((a3 & 1) != 0)
    v6 = 0x800000023366BF00;
  else
    v6 = 0x800000023366BEE0;
  sub_2331D3730(a3 & 1);
  v8 = v7;
  v9 = (void *)*MEMORY[0x24BDE9550];
  v31 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)&v30 = a1;
  *((_QWORD *)&v30 + 1) = a2;
  sub_2331683D0(&v30, v29);
  v10 = v9;
  sub_2331D1374(a1, a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32 = v8;
  sub_23328E4B0(v29, v10, isUniquelyReferenced_nonNull_native);
  v12 = v32;

  swift_bridgeObjectRelease();
  v13 = (void *)*MEMORY[0x24BDE90A0];
  v31 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v30 = v5;
  *((_QWORD *)&v30 + 1) = v6;
  sub_2331683D0(&v30, v29);
  v14 = v13;
  v15 = swift_isUniquelyReferenced_nonNull_native();
  v32 = v12;
  sub_23328E4B0(v29, v14, v15);

  swift_bridgeObjectRelease();
  if (qword_256041CA0 != -1)
    swift_once();
  v16 = sub_23361DB80();
  __swift_project_value_buffer(v16, (uint64_t)qword_2560495B0);
  v17 = sub_23361DB68();
  v18 = sub_23361E780();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_233151000, v17, v18, "Adding user identity to keychain", v19, 2u);
    MEMORY[0x234934590](v19, -1, -1);
  }

  type metadata accessor for CFString(0);
  sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
  v20 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v21 = SecItemAdd(v20, 0);

  v22 = sub_23361DB68();
  if (v21)
  {
    v23 = sub_23361E768();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v24 = 67109120;
      LODWORD(v30) = v21;
      sub_23361EBC4();
      _os_log_impl(&dword_233151000, v22, v23, "Failed to add identity to keychain with status: %d", v24, 8u);
      MEMORY[0x234934590](v24, -1, -1);
    }

    sub_23361E150();
    v25 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v26 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_initWithDomain_code_userInfo_, v26, v21, 0);

    swift_willThrow();
  }
  else
  {
    v27 = sub_23361E780();
    if (os_log_type_enabled(v22, (os_log_type_t)v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_233151000, v22, (os_log_type_t)v27, "Added user identity to keychain", v28, 2u);
      MEMORY[0x234934590](v28, -1, -1);
    }

  }
}

uint64_t sub_2331D3F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;

  v2 = sub_23361E42C();
  *(_QWORD *)(v2 + 16) = 256;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  v3 = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 0x100uLL, (void *)(v2 + 32));
  if (v3)
  {
    v4 = v3;
    swift_bridgeObjectRelease();
    if (qword_256041CA0 != -1)
      swift_once();
    v5 = sub_23361DB80();
    __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
    v6 = sub_23361DB68();
    v7 = sub_23361E768();
    if (os_log_type_enabled(v6, v7))
    {
      v1 = 8;
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 67109120;
      sub_23361EBC4();
      _os_log_impl(&dword_233151000, v6, v7, "Failed to generate random data: %d", v8, 8u);
      MEMORY[0x234934590](v8, -1, -1);
    }

    sub_23361E150();
    v9 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v10 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, v4, 0);

    swift_willThrow();
  }
  else
  {
    v1 = sub_2332C787C(v2);
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_2331D3B68(v1, v12, 0);
    if (v0)
      sub_23316BEA4(v1, v12);
  }
  return v1;
}

_BYTE *sub_2331D4170@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_2335E4B98(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_2332C7784((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_2332C77FC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2331D41E4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23361CC38();
  if (!result || (result = sub_23361CC5C(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23361CC50();
      sub_23361E030();
      sub_233167C58((unint64_t *)&qword_256058E20, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_23361DE2C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2331D42A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;
  int *v16;
  uint64_t *v17;
  uint64_t *boxed_opaque_existential_0;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  v15 = (_QWORD *)(a6
                 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider__webServiceUserIdentifierUpdatedAt);
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254245FD0);
  v17 = (_QWORD *)((char *)v15 + v16[9]);
  v17[3] = a7;
  v17[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_0, a1, a7);
  sub_233177068((uint64_t)v17, a6 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_userDefaults);
  sub_233177068((uint64_t)v17, a6 + 56);
  *(_QWORD *)(a6 + 32) = 0;
  *(_QWORD *)(a6 + 40) = 0;
  *(_QWORD *)(a6 + 16) = 0xD000000000000019;
  *(_QWORD *)(a6 + 24) = 0x800000023366BF30;
  *(_BYTE *)(a6 + 48) = 0;
  *(_QWORD *)(a6 + 96) = &type metadata for DeviceInfo;
  *(_QWORD *)(a6 + 104) = &protocol witness table for DeviceInfo;
  v19 = (char *)v15 + v16[7];
  v20 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *v15 = 0xD000000000000022;
  v15[1] = 0x800000023366BF50;
  *((_BYTE *)v15 + v16[8]) = 0;
  v21 = (_QWORD *)((char *)v15 + v16[10]);
  *v21 = &type metadata for DeviceInfo;
  v21[1] = &protocol witness table for DeviceInfo;
  v22 = (_QWORD *)(a6 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_keychainAccessGroup);
  *v22 = a2;
  v22[1] = a3;
  v23 = (_QWORD *)(a6 + OBJC_IVAR____TtC10FinanceKit33BankConnectUserIdentifierProvider_keychainServiceName);
  *v23 = a4;
  v23[1] = a5;
  return a6;
}

uint64_t sub_2331D4424(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2331D1374(a1, a2);
  return a1;
}

uint64_t sub_2331D4438(uint64_t a1)
{
  void *v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  const __CFDictionary *v5;
  OSStatus v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v25;
  CFTypeRef result[4];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)*MEMORY[0x24BDE94C8];
  v28 = MEMORY[0x24BEE1328];
  LOBYTE(v27) = 1;
  sub_2331683D0(&v27, result);
  swift_bridgeObjectRetain();
  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = a1;
  sub_23328E4B0(result, v3, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  result[0] = 0;
  type metadata accessor for CFString(0);
  sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
  v5 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v6 = SecItemCopyMatching(v5, result);

  if (v6 == -25300)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v12 = sub_23361DB80();
    __swift_project_value_buffer(v12, (uint64_t)qword_2560495B0);
    v13 = sub_23361DB68();
    v14 = sub_23361E750();
    if (!os_log_type_enabled(v13, v14))
      goto LABEL_22;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = "User identity does not exist.";
    goto LABEL_21;
  }
  if (!v6)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v7 = sub_23361DB80();
    __swift_project_value_buffer(v7, (uint64_t)qword_2560495B0);
    v8 = sub_23361DB68();
    v9 = sub_23361E750();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_233151000, v8, v9, "Obtained existing user identity", v10, 2u);
      MEMORY[0x234934590](v10, -1, -1);
    }

    if (result[0])
    {
      swift_unknownObjectRetain();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v11 = v27;
LABEL_23:
        swift_unknownObjectRelease();
        return v11;
      }
    }
    v13 = sub_23361DB68();
    v14 = sub_23361E768();
    if (!os_log_type_enabled(v13, v14))
    {
LABEL_22:

      v11 = 0;
      goto LABEL_23;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
LABEL_21:
    _os_log_impl(&dword_233151000, v13, v14, v16, v15, 2u);
    MEMORY[0x234934590](v15, -1, -1);
    goto LABEL_22;
  }
  if (qword_256041CA0 != -1)
    swift_once();
  v17 = sub_23361DB80();
  __swift_project_value_buffer(v17, (uint64_t)qword_2560495B0);
  v18 = sub_23361DB68();
  v19 = sub_23361E768();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v20 = 67109120;
    LODWORD(v27) = v6;
    sub_23361EBC4();
    _os_log_impl(&dword_233151000, v18, v19, "Keychain error: %d", v20, 8u);
    MEMORY[0x234934590](v20, -1, -1);
  }

  sub_23361E150();
  v11 = v21;
  v22 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v23 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, v6, 0, v25);

  swift_willThrow();
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_2331D48C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65644972657375 && a2 == 0xEE00726569666974;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461746F72 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_2331D49DC()
{
  const __CFDictionary *v0;
  OSStatus v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;

  type metadata accessor for CFString(0);
  sub_233167C58((unint64_t *)&qword_2560420A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_233624474);
  v0 = (const __CFDictionary *)sub_23361E054();
  v1 = SecItemDelete(v0);

  if (v1 == -25300)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v7 = sub_23361DB80();
    __swift_project_value_buffer(v7, (uint64_t)qword_2560495B0);
    v3 = sub_23361DB68();
    v4 = sub_23361E750();
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_12;
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    v6 = "User identity not found in keychain";
    goto LABEL_11;
  }
  if (!v1)
  {
    if (qword_256041CA0 != -1)
      swift_once();
    v2 = sub_23361DB80();
    __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
    v3 = sub_23361DB68();
    v4 = sub_23361E750();
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_12;
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    v6 = "Deleted user identity from keychain";
LABEL_11:
    _os_log_impl(&dword_233151000, v3, v4, v6, v5, 2u);
    MEMORY[0x234934590](v5, -1, -1);
LABEL_12:

    return;
  }
  if (qword_256041CA0 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
  v9 = sub_23361DB68();
  v10 = sub_23361E768();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 67109120;
    sub_23361EBC4();
    _os_log_impl(&dword_233151000, v9, v10, "Failed to delete user identity with status: %d", v11, 8u);
    MEMORY[0x234934590](v11, -1, -1);
  }

  sub_23361E150();
  v12 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v13 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_initWithDomain_code_userInfo_, v13, v1, 0);

  swift_willThrow();
}

uint64_t dispatch thunk of BankConnectUserIdentifierProviding.userIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BankConnectUserIdentifierProviding.rateLimitUserIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BankConnectUserIdentifierProviding.mapsUserIdentifier(now:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BankConnectUserIdentifierProviding.deleteSyncedUserIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

_QWORD *sub_2331D4D44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BankConnectMapsUserIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for BankConnectMapsUserIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectMapsUserIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectMapsUserIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectMapsUserIdentifier()
{
  return &type metadata for BankConnectMapsUserIdentifier;
}

uint64_t sub_2331D4EA0()
{
  return type metadata accessor for BankConnectUserIdentifierProvider();
}

uint64_t type metadata accessor for BankConnectUserIdentifierProvider()
{
  uint64_t result;

  result = qword_254244ED8;
  if (!qword_254244ED8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2331D4EE4()
{
  unint64_t v0;

  sub_2331D4F84(319);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for BankConnectUserIdentifierProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectUserIdentifierProvider.__allocating_init(userDefaults:keychainAccessGroup:keychainServiceName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_2331D4F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_254244E08)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_254247DA0);
    v5 = type metadata accessor for FinanceKitUserDefault(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_254244E08);
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectMapsUserIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2331D5028 + 4 * byte_233629CE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2331D505C + 4 * byte_233629CE0[v4]))();
}

uint64_t sub_2331D505C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331D5064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331D506CLL);
  return result;
}

uint64_t sub_2331D5078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331D5080);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2331D5084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331D508C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectMapsUserIdentifier.CodingKeys()
{
  return &type metadata for BankConnectMapsUserIdentifier.CodingKeys;
}

unint64_t sub_2331D50AC()
{
  unint64_t result;

  result = qword_256044210;
  if (!qword_256044210)
  {
    result = MEMORY[0x234934494](&unk_233629EFC, &type metadata for BankConnectMapsUserIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044210);
  }
  return result;
}

unint64_t sub_2331D50F4()
{
  unint64_t result;

  result = qword_256044218;
  if (!qword_256044218)
  {
    result = MEMORY[0x234934494](&unk_233629E6C, &type metadata for BankConnectMapsUserIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044218);
  }
  return result;
}

unint64_t sub_2331D513C()
{
  unint64_t result;

  result = qword_256044220;
  if (!qword_256044220)
  {
    result = MEMORY[0x234934494](&unk_233629E94, &type metadata for BankConnectMapsUserIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044220);
  }
  return result;
}

unint64_t sub_2331D5180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256044240;
  if (!qword_256044240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044238);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256044240);
  }
  return result;
}

uint64_t sub_2331D51CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_23361DD84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2331D5368(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2331D53B0((uint64_t)v4);
    archive_entry_set_pathname_utf8();
    return sub_2331D53B0(a1);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_23361DCB8();
    sub_2331D53B0(a1);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_2331D5308()
{
  return archive_entry_set_pathname_utf8();
}

uint64_t sub_2331D5338()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArchiveEntry()
{
  return objc_opt_self();
}

uint64_t sub_2331D5368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331D53B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044348);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2331D53F0()
{
  return archive_entry_set_pathname_utf8();
}

uint64_t BankConnectService.reevaluateBankConnectEligibility()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = type metadata accessor for BankConnectService.Message();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331D5478()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_256044358 + dword_256044358);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2331D54EC;
  return v3(*(_QWORD *)(v0 + 32));
}

uint64_t sub_2331D54EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331D5574()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331D55A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  v2[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043030);
  v2[22] = swift_task_alloc();
  v3 = sub_23361DBF8();
  v2[23] = v3;
  v2[24] = *(_QWORD *)(v3 - 8);
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331D5630()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v0[2] = v0;
  v0[3] = sub_2331D568C;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331D568C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 208) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331D571C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 208);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 160) + *(_QWORD *)(**(_QWORD **)(v0 + 160) + 120), *(_QWORD *)(v0 + 176), &qword_256043030);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 184);
    sub_233168608(*(_QWORD *)(v0 + 176), &qword_256043030);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331D58E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v0[10] = v0;
  v0[11] = sub_2331D593C;
  v2 = swift_continuation_init();
  sub_2331A0CB0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331D593C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 216) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331D59A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  v2[21] = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  v2[22] = swift_task_alloc();
  v3 = sub_23361DBF8();
  v2[23] = v3;
  v2[24] = *(_QWORD *)(v3 - 8);
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2331D5A30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v0[2] = v0;
  v0[3] = sub_2331D5A8C;
  v2 = swift_continuation_init();
  sub_2331A0F2C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331D5A8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 208) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2331D5B1C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 208);
  *(_QWORD *)(v0 + 144) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (!swift_dynamicCast())
    goto LABEL_9;
  sub_2331686A0(*(_QWORD *)(v0 + 160) + *(_QWORD *)(**(_QWORD **)(v0 + 160) + 120), *(_QWORD *)(v0 + 176), qword_254246690);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 184);
    sub_233168608(*(_QWORD *)(v0 + 176), qword_254246690);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_9:

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_254246F38 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_254246F20);
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_233151000, v4, v5, "XPC async call failed, retrying", v6, 2u);
    MEMORY[0x234934590](v6, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2331D5CE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v0[10] = v0;
  v0[11] = sub_2331D5D3C;
  v2 = swift_continuation_init();
  sub_2331A0F2C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_2331D5D3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 216) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_2331D5DA8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331D5E00()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331D5E64()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = type metadata accessor for BankConnectService.Message();
  v2 = swift_task_alloc();
  v3 = *v0;
  v1[3] = v2;
  v1[4] = v3;
  return swift_task_switch();
}

uint64_t sub_2331D5EC0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_256044358 + dword_256044358);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2331D5F34;
  return v3(*(_QWORD *)(v0 + 24));
}

uint64_t sub_2331D5F34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_2331A0DF4(v2);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2331D5FC0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of BankConnectDiscoveryCardReevaluating.reevaluateBankConnectEligibility()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  return v7(a1, a2);
}

uint64_t sub_2331D6068()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v1 = *(_QWORD *)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 56);
  v4 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v5 = v2;
  v6 = sub_2331D6DB0(v2, v3, v4, v1);

  return v6;
}

void FinanceStore.accountHistory(since:isMonitoring:)(void **a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;

  v6 = *a1;
  static DeviceInfo.deviceType.getter(&v10);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 16);
    a3[3] = (uint64_t)&_s30AccountHistoryIteratorProviderVN;
    a3[4] = sub_2331D6A40();
    v8 = swift_allocObject();
    *a3 = v8;
    *(_QWORD *)(v8 + 56) = type metadata accessor for FinanceStore();
    *(_QWORD *)(v8 + 64) = &off_250487D20;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 16) = v7;
    *(_BYTE *)(v8 + 72) = a2 & 1;
    v9 = v6;
    swift_retain();
    swift_retain();
  }
}

uint64_t sub_2331D6188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2331D61A4()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v3;
  char v4[9];

  v4[0] = 2;
  if ((FinanceStore.isDataRestricted(for:)(v4) & 1) != 0)
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    *v3 = v0;
    v3[1] = sub_2331D625C;
    return sub_23329F1DC(*(_QWORD *)(v0 + 32));
  }
}

uint64_t sub_2331D625C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_2331D62D8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2331D62F0(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v1;
  v2[1] = sub_2331D6358;
  return v4(v1 + 16);
}

uint64_t sub_2331D6358()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2331D63BC(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v1;
  v2[1] = sub_2331D6424;
  return v4(v1 + 16);
}

uint64_t sub_2331D6424()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2331D6488()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2331D6494()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  char v4;
  _BYTE *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  char v13;
  void *v14;
  char *v15;
  char v17[9];

  v1 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 24) = v1;
  v2 = (id *)(v0 + 24);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
  {

    v4 = *(_BYTE *)(v0 + 48);
    sub_23316853C();
    swift_allocError();
    *v5 = v4;
    swift_willThrow();

  }
  else
  {

    v6 = (void *)sub_23361D1A8();
    v7 = objc_msgSend(v6, sel_domain);
    v8 = sub_23361E150();
    v10 = v9;

    if (v8 == 0xD000000000000014 && v10 == 0x800000023366C020)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_23361F224();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_willThrow();

        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    v12 = v6;
    sub_233500D48(v12, v17);
    v13 = v17[0];
    v14 = *(void **)(v0 + 40);
    if (v17[0] == 7)
    {
      swift_willThrow();

    }
    else
    {
      sub_23316853C();
      swift_allocError();
      *v15 = v13;
      swift_willThrow();

    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FinanceStore.accounts(query:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_2331D6684()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;
  void (*v3)(int *);
  char v4;

  static DeviceInfo.deviceType.getter(&v4);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v1 = (int8x16_t *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v1;
    v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    v3 = (void (*)(int *))((char *)&dword_256044398 + dword_256044398);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_2331D671C;
    v3((int *)&unk_256044390);
  }
}

uint64_t sub_2331D671C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2331D67A4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if ((swift_dynamicCast() & 1) != 0 && *(_BYTE *)(v0 + 64) == 4)
    return sub_23361EF24();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FinanceStore.privateAccounts(query:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 1);
  *(_BYTE *)(v2 + 57) = *((_BYTE *)a1 + 24);
  *(_QWORD *)(v2 + 96) = a1[4];
  *(_BYTE *)(v2 + 58) = *((_BYTE *)a1 + 40);
  return swift_task_switch();
}

void sub_2331D68D0()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  char v6;
  char v7[9];

  static DeviceInfo.deviceType.getter(&v6);
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7[0] = 2;
    if ((FinanceStore.isDataRestricted(for:)(v7) & 1) != 0)
    {
      sub_23316853C();
      swift_allocError();
      *v1 = 2;
      swift_willThrow();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v2 = *(_BYTE *)(v0 + 58);
      v3 = *(_QWORD *)(v0 + 96);
      v4 = *(_BYTE *)(v0 + 57);
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
      *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 80);
      *(_BYTE *)(v0 + 40) = v4;
      *(_QWORD *)(v0 + 48) = v3;
      *(_BYTE *)(v0 + 56) = v2;
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v5;
      *v5 = v0;
      v5[1] = sub_2331D69C0;
      sub_23329F878((_OWORD *)(v0 + 16));
    }
  }
}

uint64_t sub_2331D69C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 112) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2331D6A34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2331D6A40()
{
  unint64_t result;

  result = qword_256044378;
  if (!qword_256044378)
  {
    result = MEMORY[0x234934494](&unk_233629FF0, &_s30AccountHistoryIteratorProviderVN);
    atomic_store(result, (unint64_t *)&qword_256044378);
  }
  return result;
}

uint64_t sub_2331D6A84()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_2331D6AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_2331676FC;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t _s30AccountHistoryIteratorProviderVwxx(uint64_t a1)
{
  swift_release();

  return __swift_destroy_boxed_opaque_existential_0(a1 + 16);
}

uint64_t _s30AccountHistoryIteratorProviderVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v9 = v4;
  v8(a1 + 16, v5, v7);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s30AccountHistoryIteratorProviderVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s30AccountHistoryIteratorProviderVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s30AccountHistoryIteratorProviderVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s30AccountHistoryIteratorProviderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s30AccountHistoryIteratorProviderVMa()
{
  return &_s30AccountHistoryIteratorProviderVN;
}

unint64_t sub_2331D6D68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560443A8;
  if (!qword_2560443A8)
  {
    v1 = type metadata accessor for Account(255);
    result = MEMORY[0x234934494](&protocol conformance descriptor for Account, v1);
    atomic_store(result, (unint64_t *)&qword_2560443A8);
  }
  return result;
}

uint64_t sub_2331D6DB0(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char **v13;
  os_unfair_lock_s *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  _BYTE v26[24];
  uint64_t v27;
  _QWORD v28[5];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[3] = type metadata accessor for FinanceStore();
  v28[4] = &off_250487D20;
  v28[0] = a3;
  v11 = sub_23361D6A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_233177068((uint64_t)v28, (uint64_t)v26);
  v12 = *(_QWORD *)(a4 + 16);
  v13 = (char **)(v12 + 16);
  v14 = (os_unfair_lock_s *)(v12 + 24);
  v15 = a1;
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_2332A14D8(v13, &v25);
  os_unfair_lock_unlock(v14);
  v16 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560443D0);
  v17 = swift_allocObject();
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = sub_2331D6F7C((unint64_t)v10, (unint64_t)a1, a2, *v20, 0, 0, (uint64_t)v16, v17);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  return v22;
}

uint64_t sub_2331D6F7C(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)@<X0>(void *@<X0>, uint64_t@<X8>);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  os_activity_t v49;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v52 = a6;
  v54 = a5;
  LOBYTE(v11) = a3;
  v14 = sub_23361E900();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FinanceStore();
  v63 = &off_250487D20;
  *(_BYTE *)(a8 + 16) = 0;
  *(_QWORD *)(a8 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + qword_2560CD360) = 0;
  v62 = v17;
  v61[0] = a4;
  v18 = (char *)qword_2560CD368;
  *(_QWORD *)(a8 + qword_2560CD368) = 0;
  v19 = a8 + qword_2560CD3A0;
  v20 = qword_256041CB0;
  swift_retain();
  if (v20 != -1)
LABEL_25:
    swift_once();
  v21 = sub_23361DB80();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_2560495E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v22, v21);
  v53 = a1;
  sub_2331D7514(a1, a8 + qword_2560CD380);
  *(_BYTE *)(a8 + 32) = v11 & 1;
  *(_QWORD *)(a8 + qword_2560CD358) = a7;
  v23 = (uint64_t (**)@<X0>(void *@<X0>, uint64_t@<X8>))(a8 + qword_2560CD390);
  *v23 = sub_2331D755C;
  v23[1] = 0;
  v24 = *(void **)&v18[a8];
  *(_QWORD *)&v18[a8] = a2;
  swift_retain();

  v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v25;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v26 = swift_allocObject();
  sub_23318B020(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v27 = (_QWORD *)(a8 + qword_2560CD370);
  *v27 = &unk_2560443D8;
  v27[1] = v26;
  v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v28;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v29 = swift_allocObject();
  sub_23318B020(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v30 = (_QWORD *)(a8 + qword_2560CD378);
  *v30 = &unk_256048730;
  v30[1] = v29;
  *(_QWORD *)(a8 + qword_2560CD388) = v54;
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_23361E90C();

  sub_23361E8E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_2560CD348, v16, v56);
  v32 = objc_msgSend(*(id *)(a7 + 16), sel_persistentStoreCoordinator);
  v33 = objc_msgSend(v32, sel_persistentStores);

  sub_2331D767C();
  a1 = sub_23361E3F0();

  if (!(a1 >> 62))
  {
    a7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a7)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    v41 = 0;
    v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a7 = sub_23361EF30();
  if (!a7)
    goto LABEL_15;
LABEL_4:
  a2 = a1 & 0xC000000000000001;
  v11 = 4;
  while (1)
  {
    v19 = v11 - 4;
    if (a2)
      v34 = (char *)MEMORY[0x234933120](v11 - 4, a1);
    else
      v34 = (char *)*(id *)(a1 + 8 * v11);
    v18 = v34;
    v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v35 = objc_msgSend(v34, sel_configurationName);
    v16 = (char *)sub_23361E150();
    v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      break;

    ++v11;
    if (v17 == a7)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  v40 = objc_msgSend(v18, sel_identifier);

  if (!v40)
    goto LABEL_20;
  v41 = sub_23361E150();
  v43 = v42;

LABEL_21:
  v44 = v52;
  v45 = v53;
  v46 = (uint64_t *)(a8 + qword_2560CD350);
  *v46 = v41;
  v46[1] = v43;
  *(_QWORD *)(a8 + qword_2560CD398) = v44;
  v47 = qword_254246ED0;
  v48 = v44;
  if (v47 != -1)
    swift_once();
  v49 = _os_activity_create(&dword_233151000, "FinancialDataAsyncIterator", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_2331D76B8(v45);
  *(_QWORD *)(a8 + qword_2560CD3A8) = v49;
  return a8;
}

uint64_t sub_2331D7514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331D755C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Account.init(_:)(a1, a2);
}

uint64_t sub_2331D758C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_2331D7608;
  return sub_2333A5E98(a1, a2, a3, a4, v4 + 16);
}

uint64_t sub_2331D7608(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2331D7658()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_2331D767C()
{
  unint64_t result;

  result = qword_2542482A0;
  if (!qword_2542482A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542482A0);
  }
  return result;
}

uint64_t sub_2331D76B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ArchivingError.errorDescription.getter()
{
  uint64_t v1;

  v1 = sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_2331D778C()
{
  unint64_t result;

  result = qword_256044400;
  if (!qword_256044400)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ArchivingError, &type metadata for ArchivingError);
    atomic_store(result, (unint64_t *)&qword_256044400);
  }
  return result;
}

uint64_t destroy for ArchivingError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s10FinanceKit14ArchivingErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArchivingError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArchivingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArchivingError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArchivingError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchivingError()
{
  return &type metadata for ArchivingError;
}

uint64_t ArchiveReadingError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[1];
  if ((v0[3] & 1) == 0)
    v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2331D797C()
{
  unint64_t result;

  result = qword_256044408;
  if (!qword_256044408)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ArchiveReadingError, &type metadata for ArchiveReadingError);
    atomic_store(result, (unint64_t *)&qword_256044408);
  }
  return result;
}

uint64_t sub_2331D79C0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[1];
  if ((v0[3] & 1) == 0)
    v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2331D7A0C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if ((a4 & 1) != 0)
    v4 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ArchiveReadingError(uint64_t a1)
{
  return sub_2331D7A4C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_2331D7A4C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArchiveReadingError(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2331D7A0C(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ArchiveReadingError(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2331D7A0C(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_2331D7A4C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ArchiveReadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_2331D7A4C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArchiveReadingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArchiveReadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_2331D7C30(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_2331D7C38(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArchiveReadingError()
{
  return &type metadata for ArchiveReadingError;
}

ValueMetadata *type metadata accessor for ArchiveReadingError.Context()
{
  return &type metadata for ArchiveReadingError.Context;
}

uint64_t sub_2331D7C64()
{
  archive_read_free();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArchiveReaderBase()
{
  return objc_opt_self();
}

uint64_t sub_2331D7CA8()
{
  int next_header;
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v28 = 0;
  next_header = archive_read_next_header();
  if (next_header == 1)
    return 0;
  if (!next_header)
    goto LABEL_9;
  if (next_header != -20)
  {
    sub_2331D778C();
    v11 = swift_allocError();
    v13 = v12;
    v14 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v15 = sub_23361E288();
      *(_DWORD *)v13 = v14;
      *(_QWORD *)(v13 + 8) = v15;
      *(_QWORD *)(v13 + 16) = v16;
      sub_2331D797C();
      swift_allocError();
      *(_QWORD *)v17 = v11;
      v18 = 0xD000000000000021;
      v19 = "Failed to parse next entry header";
LABEL_17:
      *(_QWORD *)(v17 + 8) = v18;
      *(_QWORD *)(v17 + 16) = (unint64_t)(v19 - 32) | 0x8000000000000000;
      *(_BYTE *)(v17 + 24) = 1;
      return swift_willThrow();
    }
    goto LABEL_19;
  }
  archive_errno();
  result = archive_error_string();
  if (!result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_23361E288();
  v26 = sub_23361F1D0();
  v27 = v2;
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease_n();
  v4 = v26;
  v3 = v27;
  if (qword_256041C38 != -1)
    swift_once();
  v5 = sub_23361DB80();
  __swift_project_value_buffer(v5, (uint64_t)qword_256049478);
  swift_bridgeObjectRetain();
  v6 = sub_23361DB68();
  v7 = sub_23361E768();
  if (!os_log_type_enabled(v6, v7))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v8 = (uint8_t *)swift_slowAlloc();
  v9 = swift_slowAlloc();
  v26 = v9;
  *(_DWORD *)v8 = 136315138;
  swift_bridgeObjectRetain();
  sub_233164DCC(v4, v3, &v26);
  sub_23361EBC4();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_233151000, v6, v7, "Read the header for the next entry with a warning: %s", v8, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x234934590](v9, -1, -1);
  MEMORY[0x234934590](v8, -1, -1);

LABEL_9:
  v10 = v28;
  if (v28)
  {
    type metadata accessor for ArchiveEntry();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v10;
    return result;
  }
LABEL_15:
  sub_2331D778C();
  v20 = swift_allocError();
  v22 = v21;
  v23 = archive_errno();
  result = archive_error_string();
  if (result)
  {
    v18 = 0xD000000000000012;
    v24 = sub_23361E288();
    *(_DWORD *)v22 = v23;
    *(_QWORD *)(v22 + 8) = v24;
    *(_QWORD *)(v22 + 16) = v25;
    sub_2331D797C();
    swift_allocError();
    *(_QWORD *)v17 = v20;
    v19 = "Next entry is NULL";
    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_2331D8074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  int support_filter_compress;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v1 = archive_read_new();
  if (!v1)
  {
    sub_2331D797C();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000017;
    *(_QWORD *)(v13 + 8) = 0x800000023366C150;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = 0;
    swift_willThrow();
    goto LABEL_7;
  }
  v2 = v1;
  if (archive_read_support_format_zip())
  {
    sub_2331D778C();
    v3 = swift_allocError();
    v5 = v4;
    v6 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v8 = sub_23361E288();
      *(_DWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v8;
      *(_QWORD *)(v5 + 16) = v9;
      sub_2331D797C();
      swift_allocError();
      v11 = 0xD00000000000001BLL;
      v12 = "Failed to enable ZIP format";
LABEL_5:
      *(_QWORD *)v10 = v3;
      *(_QWORD *)(v10 + 8) = v11;
      *(_QWORD *)(v10 + 16) = (unint64_t)(v12 - 32) | 0x8000000000000000;
      *(_BYTE *)(v10 + 24) = 1;
      swift_willThrow();
      archive_read_free();
LABEL_7:
      swift_deallocPartialClassInstance();
      return v0;
    }
    __break(1u);
  }
  else
  {
    support_filter_compress = archive_read_support_filter_compress();
    if (support_filter_compress == -20 || !support_filter_compress)
    {
      *(_QWORD *)(v0 + 16) = v2;
      return v0;
    }
    sub_2331D778C();
    v3 = swift_allocError();
    v16 = v15;
    v17 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v18 = sub_23361E288();
      *(_DWORD *)v16 = v17;
      *(_QWORD *)(v16 + 8) = v18;
      *(_QWORD *)(v16 + 16) = v19;
      sub_2331D797C();
      swift_allocError();
      v11 = 0xD00000000000001CLL;
      v12 = "Failed to enable all filters";
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2331D826C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = archive_read_open_memory();
  if ((_DWORD)result)
  {
    sub_2331D778C();
    v1 = swift_allocError();
    v3 = v2;
    v4 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v5 = sub_23361E288();
      *(_DWORD *)v3 = v4;
      *(_QWORD *)(v3 + 8) = v5;
      *(_QWORD *)(v3 + 16) = v6;
      sub_2331D797C();
      swift_allocError();
      *(_QWORD *)v7 = v1;
      *(_QWORD *)(v7 + 8) = 0xD000000000000020;
      *(_QWORD *)(v7 + 16) = 0x800000023366C120;
      *(_BYTE *)(v7 + 24) = 1;
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for ArchiveMemoryReader()
{
  return objc_opt_self();
}

uint64_t sub_2331D8378()
{
  uint64_t v0;
  uint64_t disk_new;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  disk_new = archive_read_disk_new();
  if (!disk_new)
  {
    sub_2331D797C();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000017;
    *(_QWORD *)(v13 + 8) = 0x800000023366C150;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = 0;
    swift_willThrow();
LABEL_10:
    swift_deallocPartialClassInstance();
    return v0;
  }
  v2 = disk_new;
  if (archive_read_disk_set_standard_lookup())
  {
    sub_2331D778C();
    v3 = swift_allocError();
    v5 = v4;
    v6 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v8 = sub_23361E288();
      *(_DWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v8;
      *(_QWORD *)(v5 + 16) = v9;
      sub_2331D797C();
      swift_allocError();
      v11 = 0xD000000000000025;
      v12 = "Unable to set reader lookup functions";
LABEL_9:
      *(_QWORD *)v10 = v3;
      *(_QWORD *)(v10 + 8) = v11;
      *(_QWORD *)(v10 + 16) = (unint64_t)(v12 - 32) | 0x8000000000000000;
      *(_BYTE *)(v10 + 24) = 1;
      swift_willThrow();
      archive_read_free();
      goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
    if (!archive_read_disk_set_symlink_physical())
    {
      *(_QWORD *)(v0 + 16) = v2;
      return v0;
    }
    sub_2331D778C();
    v3 = swift_allocError();
    v15 = v14;
    v16 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v17 = sub_23361E288();
      *(_DWORD *)v15 = v16;
      *(_QWORD *)(v15 + 8) = v17;
      *(_QWORD *)(v15 + 16) = v18;
      sub_2331D797C();
      swift_allocError();
      v11 = 0xD000000000000021;
      v12 = "Unable to set reader symlink mode";
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2331D8568()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  result = sub_23361DCB8();
  if (v8)
  {
    sub_2331D778C();
    v1 = swift_allocError();
    v3 = v2;
    v4 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v5 = sub_23361E288();
      *(_DWORD *)v3 = v4;
      *(_QWORD *)(v3 + 8) = v5;
      *(_QWORD *)(v3 + 16) = v6;
      sub_2331D797C();
      swift_allocError();
      *(_QWORD *)v7 = v1;
      *(_QWORD *)(v7 + 8) = 0xD000000000000023;
      *(_QWORD *)(v7 + 16) = 0x800000023366C1E0;
      *(_BYTE *)(v7 + 24) = 1;
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2331D8668()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = archive_read_close();
  if ((_DWORD)result)
  {
    sub_2331D778C();
    v1 = swift_allocError();
    v3 = v2;
    v4 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v5 = sub_23361E288();
      *(_DWORD *)v3 = v4;
      *(_QWORD *)(v3 + 8) = v5;
      *(_QWORD *)(v3 + 16) = v6;
      sub_2331D797C();
      swift_allocError();
      *(_QWORD *)v7 = v1;
      *(_QWORD *)(v7 + 8) = 0xD000000000000021;
      *(_QWORD *)(v7 + 16) = 0x800000023366C1B0;
      *(_BYTE *)(v7 + 24) = 1;
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for ArchiveDiskReader()
{
  return objc_opt_self();
}

uint64_t sub_2331D875C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = archive_read_disk_open();
  *a1 = result;
  return result;
}

uint64_t sub_2331D8790()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  __swift_allocate_value_buffer(v3, qword_2560CD2B0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2560CD2B0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  return sub_233168580((uint64_t)v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t TransactionGroupUnit.key.getter()
{
  uint64_t v0;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return sub_23361F1D0();
  v2 = sub_23361F1D0();
  sub_23361E27C();
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t TransactionGroupUnit.year.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TransactionGroupUnit.month.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
    return 0;
  else
    return *(_QWORD *)(v0 + 8);
}

uint64_t sub_2331D8930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (v2 < -32768)
    {
      __break(1u);
    }
    else if (v2 < 0x8000)
    {
      MEMORY[0x24BDAC7A8](a1);
      type metadata accessor for ManagedInternalTransaction();
      return sub_23361D8D4();
    }
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v1 + 8);
    if (qword_256041BA0 == -1)
      goto LABEL_6;
  }
  swift_once();
LABEL_6:
  v4 = type metadata accessor for ManagedInternalTransaction.MonthYearFormatter();
  result = __swift_project_value_buffer(v4, (uint64_t)qword_2560CD2B0);
  if ((unsigned __int128)(v2 * (__int128)100) >> 64 == (100 * v2) >> 63)
  {
    if (!__OFADD__(100 * v2, v1))
    {
      v5 = sub_23361F1D0();
      MEMORY[0x24BDAC7A8](v5);
      type metadata accessor for ManagedInternalTransaction();
      sub_23361D8D4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2331D8AA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = a1;
  v16 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044968);
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044890);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044970);
  v17 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331B1A14(&qword_2560448A0, &qword_256044890, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v19 = v15;
  v20 = v16;
  sub_23361D178();
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256044978);
  a3[4] = sub_2331DE57C();
  __swift_allocate_boxed_opaque_existential_0(a3);
  sub_2331B1A14(&qword_256044998, &qword_256044970, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14((unint64_t *)&unk_2560449A0, &qword_256044968, MEMORY[0x24BDCD130]);
  sub_23361CF44();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v11);
}

void __swiftcall TransactionGroupUnit.unifiedTransactionPredicate()(NSPredicate *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560446B0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = *v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233626360;
  *(_QWORD *)(v6 + 32) = _s10FinanceKit26ManagedInternalTransactionC33predicateForShareableTransactionsSo11NSPredicateCyFZ_0();
  v7 = sub_233168668(0, (unint64_t *)&qword_254247FB0);
  LOBYTE(v10) = v5;
  sub_2331D8930(v7);
  type metadata accessor for ManagedInternalTransaction();
  v8 = (id)sub_23361E6C0();
  if (!v8)
    v8 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 0);
  *(_QWORD *)(v6 + 40) = v8;
  sub_23361E408();
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v9, v6, v3, v4, v10);

}

uint64_t sub_2331D8E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_23361D748();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D868();
  __swift_allocate_value_buffer(v4, qword_256044620);
  __swift_project_value_buffer(v4, (uint64_t)qword_256044620);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCEF50], v0);
  sub_23361D754();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2331D8F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_23361D8A4();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23361D868();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_23361D73C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361D508();
  __swift_allocate_value_buffer(v10, qword_256044638);
  __swift_project_value_buffer(v10, (uint64_t)qword_256044638);
  v11 = sub_23361D43C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  v12 = sub_23361D424();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_23361D1F0();
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  return sub_23361D454();
}

uint64_t TransactionGroupUnit.monthAndYearDisplayText.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;

  v1 = sub_23361D49C();
  v58 = *(_QWORD *)(v1 - 8);
  v59 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v56 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D4C0();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23361D508();
  v57 = *(_QWORD *)(v53 - 8);
  v5 = MEMORY[0x24BDAC7A8](v53);
  v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v48 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v61 = (char *)&v48 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v63 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F10);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F08);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23361CD40();
  v54 = *(_QWORD *)(v22 - 8);
  v55 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *v0;
  v25 = *((_BYTE *)v0 + 16);
  if (qword_256041BA8 != -1)
    swift_once();
  v26 = sub_23361D868();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_256044620);
  v28 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v21, v27, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v26);
  v29 = sub_23361D8A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v18, 1, 1, v29);
  sub_23361CD34();
  v30 = v24;
  sub_23361CCB0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v32 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v63, v12, v13);
    v33 = v61;
    v34 = v57;
    v35 = v53;
    if (qword_256041BB0 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v35, (uint64_t)qword_256044638);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v36, v35);
    v37 = v30;
    if ((v25 & 1) != 0)
    {
      v38 = v56;
      sub_23361D490();
      v39 = v60;
      sub_23361D460();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
      sub_233167C58((unint64_t *)&qword_2560446C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
      v40 = v63;
      sub_23361D61C();
      v41 = *(void (**)(char *, uint64_t))(v34 + 8);
      v41(v39, v35);
      v41(v33, v35);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v13);
    }
    else
    {
      v42 = v49;
      sub_23361D4B4();
      v43 = v50;
      sub_23361D46C();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v52);
      v44 = v56;
      sub_23361D490();
      v45 = v60;
      sub_23361D460();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v59);
      v46 = *(void (**)(char *, uint64_t))(v34 + 8);
      v46(v43, v35);
      sub_233167C58((unint64_t *)&qword_2560446C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
      v47 = v63;
      sub_23361D61C();
      v46(v45, v35);
      v46(v33, v35);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v47, v13);
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v55);
    return v64;
  }
  return result;
}

uint64_t TransactionGroupUnit.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    sub_23361F35C();
  sub_23361F35C();
  return sub_23361F35C();
}

uint64_t static TransactionGroupUnit.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;

  v2 = *a1;
  v3 = *a2;
  if ((a1[2] & 1) != 0)
  {
    if (v2 == v3)
      return *((unsigned __int8 *)a2 + 16);
    else
      return 0;
  }
  else
  {
    v5 = (v2 == v3) & ~*((unsigned __int8 *)a2 + 16);
    if (a1[1] == a2[1])
      return v5;
    else
      return 0;
  }
}

uint64_t TransactionGroupUnit.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_23361F350();
  if ((v1 & 1) == 0)
    sub_23361F35C();
  sub_23361F35C();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2331D9800()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_23361F350();
  if ((v1 & 1) == 0)
    sub_23361F35C();
  sub_23361F35C();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2331D9878()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    sub_23361F35C();
  sub_23361F35C();
  return sub_23361F35C();
}

uint64_t sub_2331D98D4()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_23361F350();
  if ((v1 & 1) == 0)
    sub_23361F35C();
  sub_23361F35C();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_2331D9948(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;

  v2 = *a1;
  v3 = *a2;
  if ((a1[2] & 1) != 0)
  {
    if (v2 == v3)
      return *((unsigned __int8 *)a2 + 16);
    else
      return 0;
  }
  else
  {
    v5 = (v2 == v3) & ~*((unsigned __int8 *)a2 + 16);
    if (a1[1] == a2[1])
      return v5;
    else
      return 0;
  }
}

uint64_t (*sub_2331D9988())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2331D99C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331D9A68()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  swift_bridgeObjectRetain();
  sub_23361D934();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2331D9B20()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331D9BBC()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D934();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2331D9C68(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void (*sub_2331D9CCC(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC10FinanceKit35GroupedTransactionsViewDataProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23361D958();
  swift_release();
  v4[7] = sub_2331D9988();
  return sub_2331D9DB4;
}

void sub_2331D9DB4(_QWORD *a1)
{
  sub_2331DA630(a1);
}

uint64_t (*sub_2331D9DC0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2331D9DFC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331D9EA0()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  swift_bridgeObjectRetain();
  sub_23361D934();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2331D9F58()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331D9FF4()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D934();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2331DA0A0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void (*sub_2331DA104(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC10FinanceKit35GroupedTransactionsViewDataProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23361D958();
  swift_release();
  v4[7] = sub_2331D9DC0();
  return sub_2331DA1EC;
}

void sub_2331DA1EC(_QWORD *a1)
{
  sub_2331DA630(a1);
}

uint64_t (*sub_2331DA1F8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2331DA234@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331DA2D8()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  swift_bridgeObjectRetain();
  sub_23361D934();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2331DA390()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2331DA42C()
{
  swift_getKeyPath();
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D934();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2331DA4D8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 48) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void (*sub_2331DA53C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC10FinanceKit35GroupedTransactionsViewDataProvider___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  sub_23361D940();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23361D958();
  swift_release();
  v4[7] = sub_2331DA1F8();
  return sub_2331DA624;
}

void sub_2331DA624(_QWORD *a1)
{
  sub_2331DA630(a1);
}

void sub_2331DA630(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_23361D94C();
  swift_release();
  free(v1);
}

uint64_t GroupedTransactionsViewDataProvider.__allocating_init(context:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  GroupedTransactionsViewDataProvider.init(context:)(a1);
  return v2;
}

_QWORD *GroupedTransactionsViewDataProvider.init(context:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v3 = MEMORY[0x24BEE4AF8];
  v1[4] = MEMORY[0x24BEE4AF8];
  v1[5] = v3;
  v1[6] = v3;
  v1[7] = 20;
  sub_23361D964();
  v1[2] = a1;
  type metadata accessor for TransactionChangesObserver();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + 16) = a1;
  v1[3] = v4;
  v5 = a1;
  return v1;
}

void sub_2331DA760()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 32) = &off_250470F68;
  swift_unknownObjectWeakAssign();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v1, sel_contextDidMergeChangesObjectIDsNotificationWithNotification_, *MEMORY[0x24BDBB450], *(_QWORD *)(v1 + 16));

  sub_2331DA814();
}

void sub_2331DA814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  unsigned int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  id v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56[2];

  v56[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D850();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23361D868();
  v7 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23361D634();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v52 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v0;
  v15 = *(void **)(v0 + 16);
  v16 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v56[0] = 0;
  v17 = objc_msgSend(v15, sel_setQueryGenerationFromToken_error_, v16, v56);

  if (v17)
  {
    v18 = v56[0];
    v19 = sub_2331DCF88((uint64_t)v15);
    v20 = *(_QWORD *)(v19 + 16);
    v49 = v19;
    if (v20)
    {
      v21 = type metadata accessor for InternalTransaction(0);
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
      v23 = v19 + *(int *)(v21 + 76) + ((v22 + 32) & ~v22);
      v25 = v53;
      v24 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v12, v23, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v12, 0, 1, v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v24) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v12, v54);
LABEL_8:
        sub_23361D7D8();
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCF240], v3);
        v28 = sub_23361D85C();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v51);
        v29 = sub_2331DD754(v28);
        v30 = sub_2331DE260(v28);
        v31 = v49;
        v41 = v30;
        v42 = sub_23361E534();
        v43 = (uint64_t)v50;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v50, 1, 1, v42);
        sub_23361E4F8();
        v44 = v31;
        v45 = v55;
        swift_retain();
        v46 = sub_23361E4EC();
        v47 = (_QWORD *)swift_allocObject();
        v48 = MEMORY[0x24BEE6930];
        v47[2] = v46;
        v47[3] = v48;
        v47[4] = v45;
        v47[5] = v44;
        v47[6] = v29;
        v47[7] = v41;
        sub_2333B205C(v43, (uint64_t)&unk_2560448E8, (uint64_t)v47);
        swift_release();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
        sub_2331DADF4(v45);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v12, 1, 1, v54);
    }
    sub_23361D5F8();
    sub_233168608((uint64_t)v12, (uint64_t *)&unk_254247DA0);
    goto LABEL_8;
  }
  v26 = v56[0];
  v27 = (void *)sub_23361D1B4();

  swift_willThrow();
  if (qword_256041CA0 != -1)
    swift_once();
  v32 = sub_23361DB80();
  __swift_project_value_buffer(v32, (uint64_t)qword_2560495B0);
  v33 = v27;
  v34 = v27;
  v35 = sub_23361DB68();
  v36 = sub_23361E768();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v37 = 138412290;
    v39 = v27;
    v40 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v56[0] = v40;
    sub_23361EBC4();
    *v38 = v40;

    _os_log_impl(&dword_233151000, v35, v36, "Failed to fetch latest transactions: %@.", v37, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v38, -1, -1);
    MEMORY[0x234934590](v37, -1, -1);

  }
  else
  {

  }
}

void sub_2331DADF4(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(a1 + 16);
  v14[0] = 0;
  if (objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, 0, v14))
  {
    v2 = v14[0];
  }
  else
  {
    v3 = v14[0];
    v4 = (void *)sub_23361D1B4();

    swift_willThrow();
    if (qword_256041CA0 != -1)
      swift_once();
    v5 = sub_23361DB80();
    __swift_project_value_buffer(v5, (uint64_t)qword_2560495B0);
    v6 = v4;
    v7 = v4;
    v8 = sub_23361DB68();
    v9 = sub_23361E768();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v4;
      v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v14[0] = v13;
      sub_23361EBC4();
      *v11 = v13;

      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v11, -1, -1);
      MEMORY[0x234934590](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_2331DB050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  sub_23361E4F8();
  v7[7] = sub_23361E4EC();
  sub_23361E474();
  return swift_task_switch();
}

uint64_t sub_2331DB0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  sub_233167C58((unint64_t *)&unk_2560446D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupedTransactionsViewDataProvider, (uint64_t)&protocol conformance descriptor for GroupedTransactionsViewDataProvider);
  swift_bridgeObjectRetain();
  sub_23361D934();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v7;
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRetain();
  sub_23361D934();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_getKeyPath();
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v8;
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRetain();
  sub_23361D934();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GroupedTransactionsViewDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC10FinanceKit35GroupedTransactionsViewDataProvider___observationRegistrar;
  v2 = sub_23361D970();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t GroupedTransactionsViewDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC10FinanceKit35GroupedTransactionsViewDataProvider___observationRegistrar;
  v2 = sub_23361D970();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t static ManagedInternalTransaction.enableAllAccountsForPublicAPI.getter()
{
  char v0;
  _BYTE v2[80];

  if (qword_256041BB8 != -1)
    swift_once();
  swift_beginAccess();
  sub_2331DDF7C((uint64_t)&qword_256044650, (uint64_t)v2);
  v0 = sub_2331704B8();
  sub_233168608((uint64_t)v2, &qword_254244F28);
  return v0 & 1;
}

uint64_t static ManagedInternalTransaction.enableAllAccountsForPublicAPI.setter(char a1)
{
  if (qword_256041BB8 != -1)
    swift_once();
  swift_beginAccess();
  sub_233170D24(a1 & 1);
  return swift_endAccess();
}

uint64_t (*static ManagedInternalTransaction.enableAllAccountsForPublicAPI.modify(uint64_t a1))(uint64_t a1)
{
  if (qword_256041BB8 != -1)
    swift_once();
  swift_beginAccess();
  *(_BYTE *)(a1 + 24) = sub_2331704B8() & 1;
  return sub_2331DB508;
}

uint64_t sub_2331DB508(uint64_t a1)
{
  sub_233170D24(*(_BYTE *)(a1 + 24));
  return swift_endAccess();
}

id sub_2331DB540()
{
  id v1;

  if (qword_254246F70 != -1)
    swift_once();
  v1 = (id)qword_254246F68;
  qword_256044680 = sub_233168668(0, (unint64_t *)&qword_254247660);
  unk_256044688 = &protocol witness table for NSUserDefaults;
  qword_256044668 = (uint64_t)v1;
  word_256044660 = 256;
  qword_256044650 = 0xD00000000000001DLL;
  *(_QWORD *)algn_256044658 = 0x800000023366A750;
  qword_256044690 = (uint64_t)&type metadata for DeviceInfo;
  unk_256044698 = &protocol witness table for DeviceInfo;
  return v1;
}

uint64_t sub_2331DB5F8@<X0>(_QWORD *a1@<X0>, __int16 a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  __int16 v57;
  __int16 v58;

  v52 = a3;
  v55 = a4;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449B0);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v44 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449B8);
  v53 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v45 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A48);
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v46 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044888);
  v10 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  v42 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044890);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044898);
  v40 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560448A8);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v43 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[1] = *a1;
  sub_2331B1A14(&qword_2560448A0, &qword_256044890, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v16, v13);
  v58 = a2;
  sub_23361D178();
  sub_2331B1A14(&qword_2560448D0, &qword_256044898, MEMORY[0x24BDCD1C0]);
  v39[2] = sub_2331B1A14(&qword_2560448D8, &qword_256044888, MEMORY[0x24BDCD130]);
  v22 = v41;
  sub_23361CF44();
  v23 = *(void (**)(char *, uint64_t))(v42 + 8);
  v23(v12, v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v17);
  sub_23361D184();
  swift_getKeyPath();
  v24 = v44;
  sub_23361CF68();
  swift_release();
  v21(v16, v13);
  swift_getKeyPath();
  v25 = MEMORY[0x24BDCD1C0];
  sub_2331B1A14(&qword_2560449D8, &qword_2560449B0, MEMORY[0x24BDCD1C0]);
  v26 = v45;
  v27 = v24;
  v28 = v48;
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v28);
  v57 = v52;
  sub_23361D178();
  sub_2331B1A14(&qword_2560449E8, &qword_2560449B8, v25);
  v29 = v46;
  v30 = v51;
  sub_23361CF44();
  v23(v12, v22);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A50);
  v32 = v55;
  v55[3] = v31;
  v32[4] = sub_2331DE6DC(&qword_256044A58, &qword_256044A50, (uint64_t (*)(void))sub_2331DE928);
  __swift_allocate_boxed_opaque_existential_0(v32);
  v33 = MEMORY[0x24BDCD0F0];
  sub_2331B1A14(&qword_256044A38, &qword_2560448A8, MEMORY[0x24BDCD0F0]);
  sub_2331B1A14(&qword_256044A68, &qword_256044A48, v33);
  v34 = v43;
  v35 = v29;
  v36 = v47;
  v37 = v54;
  sub_23361CFD4();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v34, v36);
}

uint64_t sub_2331DBB54@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  __int16 v69;

  v53 = a3;
  v50 = a2;
  v67 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449B0);
  v6 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  v60 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449B8);
  v9 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  v64 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449C0);
  v12 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  v62 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449C8);
  v15 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  v66 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044888);
  v49 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044890);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044898);
  v48 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560448A8);
  v28 = *(_QWORD *)(v27 - 8);
  v57 = v27;
  v58 = v28;
  MEMORY[0x24BDAC7A8](v27);
  v51 = (char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *a1;
  sub_2331B1A14(&qword_2560448A0, &qword_256044890, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  v30 = *(void (**)(char *, uint64_t))(v21 + 8);
  v30(v23, v20);
  v69 = v50;
  sub_23361D178();
  sub_2331B1A14(&qword_2560448D0, &qword_256044898, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14(&qword_2560448D8, &qword_256044888, MEMORY[0x24BDCD130]);
  sub_23361CF44();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v17);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v24);
  v68 = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560449D0);
  v31 = v52;
  sub_23361D178();
  sub_23361D184();
  swift_getKeyPath();
  v32 = v54;
  sub_23361CF68();
  swift_release();
  v30(v23, v20);
  swift_getKeyPath();
  v33 = MEMORY[0x24BDCD1C0];
  sub_2331B1A14(&qword_2560449D8, &qword_2560449B0, MEMORY[0x24BDCD1C0]);
  v34 = v55;
  v35 = v59;
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v35);
  sub_2331B1A14(&qword_2560449E0, &qword_2560449C0, MEMORY[0x24BDCD130]);
  sub_2331B1A14(&qword_2560449E8, &qword_2560449B8, v33);
  sub_2331B1A14(&qword_2560449F0, &qword_2560449D0, MEMORY[0x24BEE12C8]);
  v36 = v56;
  v37 = v34;
  v38 = v61;
  v39 = v63;
  sub_23361CF80();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v38);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449F8);
  v41 = v67;
  v67[3] = v40;
  v41[4] = sub_2331DE6DC(&qword_256044A00, &qword_2560449F8, (uint64_t (*)(void))sub_2331DE748);
  __swift_allocate_boxed_opaque_existential_0(v41);
  sub_2331B1A14(&qword_256044A38, &qword_2560448A8, MEMORY[0x24BDCD0F0]);
  sub_2331B1A14(&qword_256044A40, &qword_2560449C8, MEMORY[0x24BDCCEF8]);
  v42 = v51;
  v43 = v36;
  v44 = v57;
  v45 = v65;
  sub_23361CFD4();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v42, v44);
}

uint64_t sub_2331DC14C()
{
  uint64_t v0;
  id v1;
  uint64_t result;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 3);
  *(_QWORD *)(v0 + 56) = sub_233168668(0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v0 + 64) = sub_2331A85D0();
  *(_QWORD *)(v0 + 32) = v1;
  result = sub_23361E6B4();
  qword_2560446A0 = result;
  return result;
}

uint64_t sub_2331DC220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = MEMORY[0x24BEE3F78];
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE3F30];
  *(_QWORD *)(v0 + 64) = v1;
  *(_WORD *)(v0 + 32) = 4;
  result = sub_23361E6B4();
  qword_2560446A8 = result;
  return result;
}

uint64_t sub_2331DC2BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v25 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A70);
  v2 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  v27 = v2;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044890);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560449B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A78);
  v14 = *(_QWORD *)(v13 - 8);
  v23 = v13;
  v24 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331B1A14(&qword_2560448A0, &qword_256044890, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_getKeyPath();
  v17 = MEMORY[0x24BDCD1C0];
  sub_2331B1A14(&qword_2560449D8, &qword_2560449B0, MEMORY[0x24BDCD1C0]);
  sub_23361CF68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v28 = 1;
  sub_23361D178();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044A80);
  v19 = v25;
  v25[3] = v18;
  v19[4] = sub_2331DE9D8();
  __swift_allocate_boxed_opaque_existential_0(v19);
  sub_2331B1A14(&qword_256044AA0, &qword_256044A78, v17);
  sub_2331B1A14(&qword_256044AA8, &qword_256044A70, MEMORY[0x24BDCD130]);
  v20 = v23;
  v21 = v26;
  sub_23361CF44();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v20);
}

uint64_t sub_2331DC5A4@<X0>(int a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[4];
  int v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;

  v15 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044888);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044890);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044898);
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2331B1A14(&qword_2560448A0, &qword_256044890, MEMORY[0x24BDCD230]);
  sub_23361D184();
  swift_getKeyPath();
  sub_23361CF68();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v15;
  sub_23361D178();
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2560448A8);
  a2[4] = sub_2331DE1B0();
  __swift_allocate_boxed_opaque_existential_0(a2);
  sub_2331B1A14(&qword_2560448D0, &qword_256044898, MEMORY[0x24BDCD1C0]);
  sub_2331B1A14(&qword_2560448D8, &qword_256044888, MEMORY[0x24BDCD130]);
  sub_23361CF44();
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v5, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v12, v10);
}

id static ManagedInternalTransaction.containsSharableTransactionsFetchRequest()()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;

  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_23361E150();

  v1 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v2 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  v4 = _s10FinanceKit26ManagedInternalTransactionC33predicateForShareableTransactionsSo11NSPredicateCyFZ_0();
  objc_msgSend(v3, sel_setPredicate_, v4);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v5 + 32) = sub_23361E7EC();
  sub_23361E408();
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSortDescriptors_, v6);

  objc_msgSend(v3, sel_setFetchLimit_, 1);
  objc_msgSend(v3, sel_setResultType_, 4);
  return v3;
}

id sub_2331DC978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[16];
  __int16 v23;
  void *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560446B0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = &v22[-v6];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v22[-v8];
  v25 = 1;
  v27 = type metadata accessor for ManagedInternalTransaction();
  sub_23361D8D4();
  v23 = 2;
  v24 = &unk_250468278;
  sub_23361D8D4();
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16);
  v10(v4, v9, v0);
  v11 = sub_23361E6C0();
  if (!v11)
    goto LABEL_5;
  v12 = (void *)v11;
  v10(v4, v7, v0);
  v13 = sub_23361E6C0();
  if (!v13)
  {

LABEL_5:
    v19 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 0);
    goto LABEL_6;
  }
  v14 = (void *)v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_233626360;
  *(_QWORD *)(v15 + 32) = v12;
  *(_QWORD *)(v15 + 40) = v14;
  v26 = v15;
  sub_23361E408();
  v16 = v12;
  v17 = v14;
  v18 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v18);

LABEL_6:
  v20 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v20(v7, v0);
  v20(v9, v0);
  return v19;
}

id _s10FinanceKit26ManagedInternalTransactionC33predicateForShareableTransactionsSo11NSPredicateCyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  _QWORD v20[14];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560446B0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v20 - v5;
  v20[13] = type metadata accessor for ManagedInternalTransaction();
  sub_23361D8D4();
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = sub_23361E6C0();
  if (v7)
  {
    v8 = (void *)v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23362A1D0;
    if (qword_256041BB8 != -1)
      swift_once();
    swift_beginAccess();
    sub_2331DDF7C((uint64_t)&qword_256044650, (uint64_t)v20);
    v10 = sub_2331704B8();
    sub_233168608((uint64_t)v20, &qword_254244F28);
    if ((v10 & 1) != 0)
      v11 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
    else
      v11 = v8;
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = sub_23361E6B4();
    *(_QWORD *)(v9 + 48) = sub_2331DC978();
    if (qword_256041BC8 != -1)
      swift_once();
    v13 = (void *)qword_2560446A8;
    *(_QWORD *)(v9 + 56) = qword_2560446A8;
    v14 = qword_256041BC0;
    v15 = v13;
    if (v14 != -1)
      swift_once();
    v16 = (void *)qword_2560446A0;
    *(_QWORD *)(v9 + 64) = qword_2560446A0;
    v20[0] = v9;
    sub_23361E408();
    v17 = v16;
    v18 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v18);

  }
  else
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 0);
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v12;
}

uint64_t type metadata accessor for GroupedTransactionsViewDataProvider()
{
  uint64_t result;

  result = qword_256044718;
  if (!qword_256044718)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2331DCF30()
{
  uint64_t v0;

  return sub_2331D9C68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2331DCF50()
{
  uint64_t v0;

  return sub_2331DA0A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2331DCF70()
{
  uint64_t v0;

  return sub_2331DA4D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2331DCF88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  objc_super v25;
  uint64_t v26;

  v2 = type metadata accessor for InternalTransaction(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedInternalTransaction();
  v6 = _s10FinanceKit26ManagedInternalTransactionC33predicateForShareableTransactionsSo11NSPredicateCyFZ_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v7 + 32) = sub_23361E7EC();
  v26 = v7;
  sub_23361E408();
  v25.receiver = (id)swift_getObjCClassFromMetadata();
  v25.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v8 = objc_msgSendSuper2(&v25, sel_fetchRequest);
  v9 = (void *)sub_23361E3D8();
  objc_msgSend(v8, sel_setRelationshipKeyPathsForPrefetching_, v9);

  objc_msgSend(v8, sel_setPredicate_, v6);
  v10 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v10);

  objc_msgSend(v8, sel_setFetchLimit_, 20);
  v11 = a1;
  v12 = v24;
  v13 = sub_23361E984();
  if (v12)
  {

    return v11;
  }
  v14 = v13;
  v24 = 0;
  if (!(v13 >> 62))
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();

    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v15 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_15;
LABEL_5:
  v26 = MEMORY[0x24BEE4AF8];
  result = sub_233273B70(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v22 = v8;
    v23 = v6;
    v17 = 0;
    v11 = v26;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x234933120](v17, v14);
      else
        v18 = *(id *)(v14 + 8 * v17 + 32);
      InternalTransaction.init(_:)(v18, (uint64_t)v5);
      v26 = v11;
      v20 = *(_QWORD *)(v11 + 16);
      v19 = *(_QWORD *)(v11 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_233273B70(v19 > 1, v20 + 1, 1);
        v11 = v26;
      }
      ++v17;
      *(_QWORD *)(v11 + 16) = v20 + 1;
      sub_233168580((uint64_t)v5, v11+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v20, type metadata accessor for InternalTransaction);
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();

    return v11;
  }
  __break(1u);
  return result;
}

uint64_t _s10FinanceKit26ManagedInternalTransactionC9predicate3forSo11NSPredicateCSi_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  _QWORD v12[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560446B0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v12 - v8;
  if (a1 < -32768)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a1 >= 0x8000)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  MEMORY[0x24BDAC7A8](result);
  LOWORD(v12[-2]) = a1;
  v12[1] = type metadata accessor for ManagedInternalTransaction();
  sub_23361D8D4();
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
  v10 = (id)sub_23361E6C0();
  if (!v10)
    v10 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 0);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return (uint64_t)v11;
}

id _s10FinanceKit26ManagedInternalTransactionC26monthlyGroupedFetchRequest3forSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  type metadata accessor for ManagedInternalTransaction();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_23361E150();

  v3 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233626360;
  *(_QWORD *)(v6 + 32) = _s10FinanceKit26ManagedInternalTransactionC33predicateForShareableTransactionsSo11NSPredicateCyFZ_0();
  *(_QWORD *)(v6 + 40) = _s10FinanceKit26ManagedInternalTransactionC9predicate3forSo11NSPredicateCSi_tFZ_0(a1);
  sub_23361E408();
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  v7 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v7);

  objc_msgSend(v5, sel_setPredicate_, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  *(_QWORD *)(v9 + 56) = v10;
  strcpy((char *)(v9 + 32), "monthAndYear");
  *(_BYTE *)(v9 + 45) = 0;
  *(_WORD *)(v9 + 46) = -5120;
  v11 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setPropertiesToGroupBy_, v11);

  objc_msgSend(v5, sel_setResultType_, 2);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v12 + 32) = sub_23361E7EC();
  sub_23361E408();
  v13 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v13);

  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_233623D60;
  *(_QWORD *)(v14 + 56) = v10;
  strcpy((char *)(v14 + 32), "monthAndYear");
  *(_BYTE *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  v15 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setPropertiesToFetch_, v15);

  return v5;
}

_QWORD *sub_2331DD754(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  id Request3forSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  char v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD v41[6];

  Request3forSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0 = _s10FinanceKit26ManagedInternalTransactionC26monthlyGroupedFetchRequest3forSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0(a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256044950);
  v4 = sub_23361E984();
  if (v1)
  {

    return v2;
  }
  v5 = sub_2331D073C(v4);
  swift_bridgeObjectRelease();
  if (v5)
    v6 = v5;
  else
    v6 = MEMORY[0x24BEE4AF8];
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();

    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v38 = Request3forSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0;
  v8 = v6 + 32;
  swift_bridgeObjectRetain();
  v9 = 0;
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v41[5] = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    v10 = *(_QWORD *)(v8 + 8 * v9);
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_9;
    swift_bridgeObjectRetain();
    v11 = sub_2331E3D18(0x646E4168746E6F6DLL, 0xEC00000072616559);
    if ((v12 & 1) == 0)
      goto LABEL_8;
    sub_233168350(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)v41);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_8;
    result = (_QWORD *)v39;
    v14 = HIBYTE(v40) & 0xF;
    v15 = v39 & 0xFFFFFFFFFFFFLL;
    if ((v40 & 0x2000000000000000) != 0)
      v16 = HIBYTE(v40) & 0xF;
    else
      v16 = v39 & 0xFFFFFFFFFFFFLL;
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    if ((v40 & 0x1000000000000000) == 0)
      break;
    v18 = (uint64_t)sub_233490318(v39, v40, 10);
    v37 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
LABEL_57:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_2334A4E14(0, v2[2] + 1, 1, v2);
      v31 = v2[2];
      v30 = v2[3];
      if (v31 >= v30 >> 1)
        v2 = sub_2334A4E14((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
      v2[2] = v31 + 1;
      v32 = &v2[3 * v31];
      v32[4] = v18 / 100;
      v32[5] = v18 % 100;
      *((_BYTE *)v32 + 48) = 0;
    }
LABEL_9:
    if (++v9 == v7)
    {

      swift_bridgeObjectRelease_n();
      return v2;
    }
  }
  if ((v40 & 0x2000000000000000) == 0)
  {
    if ((v39 & 0x1000000000000000) != 0)
      v17 = (unsigned __int8 *)((v40 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v17 = (unsigned __int8 *)sub_23361EE34();
    v18 = (uint64_t)sub_2334902F0(v17, v15, 10);
    v20 = v19 & 1;
LABEL_56:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      goto LABEL_57;
    goto LABEL_9;
  }
  v41[0] = v39;
  v41[1] = v40 & 0xFFFFFFFFFFFFFFLL;
  if (v39 == 43)
  {
    if (!v14)
      goto LABEL_77;
    if (v14 == 1 || (BYTE1(v39) - 48) > 9u)
      goto LABEL_43;
    v18 = (BYTE1(v39) - 48);
    if (v14 != 2)
    {
      if ((BYTE2(v39) - 48) > 9u)
        goto LABEL_43;
      v18 = 10 * (BYTE1(v39) - 48) + (BYTE2(v39) - 48);
      v21 = v14 - 3;
      if (v21)
      {
        v22 = (unsigned __int8 *)v41 + 3;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_43;
          v24 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
            goto LABEL_43;
          v18 = v24 + v23;
          if (__OFADD__(v24, v23))
            goto LABEL_43;
          v20 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_56;
        }
      }
    }
LABEL_55:
    v20 = 0;
    goto LABEL_56;
  }
  if (v39 != 45)
  {
    if (!v14 || (v39 - 48) > 9u)
      goto LABEL_43;
    v18 = (v39 - 48);
    if (v14 != 1)
    {
      if ((BYTE1(v39) - 48) > 9u)
        goto LABEL_43;
      v18 = 10 * (v39 - 48) + (BYTE1(v39) - 48);
      v25 = v14 - 2;
      if (v25)
      {
        v26 = (unsigned __int8 *)v41 + 2;
        while (1)
        {
          v27 = *v26 - 48;
          if (v27 > 9)
            goto LABEL_43;
          v28 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
            goto LABEL_43;
          v18 = v28 + v27;
          if (__OFADD__(v28, v27))
            goto LABEL_43;
          v20 = 0;
          ++v26;
          if (!--v25)
            goto LABEL_56;
        }
      }
    }
    goto LABEL_55;
  }
  if (v14)
  {
    if (v14 != 1 && (BYTE1(v39) - 48) <= 9u)
    {
      if (v14 == 2)
      {
        v20 = 0;
        v18 = -(uint64_t)(BYTE1(v39) - 48);
        goto LABEL_56;
      }
      if ((BYTE2(v39) - 48) <= 9u)
      {
        v18 = -10 * (BYTE1(v39) - 48) - (BYTE2(v39) - 48);
        v29 = v14 - 3;
        if (!v29)
          goto LABEL_55;
        v33 = (unsigned __int8 *)v41 + 3;
        while (1)
        {
          v34 = *v33 - 48;
          if (v34 > 9)
            break;
          v35 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
            break;
          v18 = v35 - v34;
          if (__OFSUB__(v35, v34))
            break;
          v20 = 0;
          ++v33;
          if (!--v29)
            goto LABEL_56;
        }
      }
    }
LABEL_43:
    v18 = 0;
    v20 = 1;
    goto LABEL_56;
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

id _s10FinanceKit26ManagedInternalTransactionC25yearlyGroupedFetchRequest9excludingSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;

  type metadata accessor for ManagedInternalTransaction();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_23361E150();

  v3 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  v6 = (void *)_s10FinanceKit26ManagedInternalTransactionC9predicate3forSo11NSPredicateCSi_tFZ_0(a1);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_notPredicateWithSubpredicate_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233626360;
  *(_QWORD *)(v9 + 32) = _s10FinanceKit26ManagedInternalTransactionC33predicateForShareableTransactionsSo11NSPredicateCyFZ_0();
  *(_QWORD *)(v9 + 40) = v8;
  sub_23361E408();
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  v10 = v8;
  v11 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v7, sel_andPredicateWithSubpredicates_, v11);

  objc_msgSend(v5, sel_setPredicate_, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v13 + 16) = xmmword_233623D60;
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 32) = 1918985593;
  *(_QWORD *)(v13 + 40) = 0xE400000000000000;
  v15 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setPropertiesToGroupBy_, v15);

  objc_msgSend(v5, sel_setResultType_, 2);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v16 + 32) = sub_23361E7EC();
  sub_23361E408();
  v17 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v17);

  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_233623D60;
  *(_QWORD *)(v18 + 56) = v14;
  *(_QWORD *)(v18 + 32) = 1918985593;
  *(_QWORD *)(v18 + 40) = 0xE400000000000000;
  v19 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setPropertiesToFetch_, v19);

  return v5;
}

uint64_t sub_2331DDF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254244F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *keypath_get_selector_objectID()
{
  return sel_objectID;
}

id sub_2331DDFD0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_objectID);
  *a2 = result;
  return result;
}

unint64_t sub_2331DE00C()
{
  unint64_t result;

  result = qword_2560446E8;
  if (!qword_2560446E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionGroupUnit, &type metadata for TransactionGroupUnit);
    atomic_store(result, (unint64_t *)&qword_2560446E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionGroupUnit()
{
  return &type metadata for TransactionGroupUnit;
}

uint64_t sub_2331DE060()
{
  return type metadata accessor for GroupedTransactionsViewDataProvider();
}

uint64_t sub_2331DE068()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D970();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for GroupedTransactionsViewDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.recentTransactions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.recentTransactions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.recentTransactions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.monthlyTransactionsGroups.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.monthlyTransactionsGroups.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.monthlyTransactionsGroups.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.yearlyTransactionsGroups.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.yearlyTransactionsGroups.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.yearlyTransactionsGroups.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of GroupedTransactionsViewDataProvider.performFetchAndStartObservingNotifications()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

char *keypath_get_selector_year()
{
  return sel_year;
}

unint64_t sub_2331DE1B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2560448B0;
  if (!qword_2560448B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560448A8);
    v2[0] = sub_2331DE618(&qword_2560448B8, &qword_256044898);
    v2[1] = sub_2331DEA74(&qword_2560448C8, &qword_256044888, MEMORY[0x24BEE3F50], MEMORY[0x24BEE3F38]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2560448B0);
  }
  return result;
}

char *keypath_get_selector_monthAndYear()
{
  return sel_monthAndYear;
}

_QWORD *sub_2331DE260(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  id Request9excludingSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _BYTE v16[32];
  uint64_t v17;

  Request9excludingSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0 = _s10FinanceKit26ManagedInternalTransactionC25yearlyGroupedFetchRequest9excludingSo07NSFetchI0CySo0kI6Result_pGSi_tFZ_0(a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256044950);
  v4 = sub_23361E984();
  if (v1)
  {

  }
  else
  {
    v5 = sub_2331D073C(v4);
    swift_bridgeObjectRelease();
    if (!v5)
      v5 = MEMORY[0x24BEE4AF8];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = 0;
      v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v8 = *(_QWORD *)(v5 + 8 * v7 + 32);
        if (*(_QWORD *)(v8 + 16))
        {
          swift_bridgeObjectRetain();
          v9 = sub_2331E3D18(1918985593, 0xE400000000000000);
          if ((v10 & 1) != 0
            && (sub_233168350(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)v16), (swift_dynamicCast() & 1) != 0))
          {
            v11 = v17;
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v2 = sub_2334A4E14(0, v2[2] + 1, 1, v2);
            v13 = v2[2];
            v12 = v2[3];
            if (v13 >= v12 >> 1)
              v2 = sub_2334A4E14((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
            v2[2] = v13 + 1;
            v14 = &v2[3 * v13];
            v14[4] = v11;
            v14[5] = 0;
            *((_BYTE *)v14 + 48) = 1;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        ++v7;
      }
      while (v6 != v7);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();

      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
  }
  return v2;
}

uint64_t sub_2331DE464()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2331DE4A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2331676FC;
  return sub_2331DB050(a1, v4, v5, v6, v7, v9, v8);
}

char *keypath_get_selector_publicTransactionObject()
{
  return sel_publicTransactionObject;
}

char *keypath_get_selector_transactionDate()
{
  return sel_transactionDate;
}

uint64_t sub_2331DE55C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2331DC5A4(*(unsigned __int16 *)(v1 + 16), a1);
}

uint64_t sub_2331DE574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2331D8AA0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_2331DE57C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256044980;
  if (!qword_256044980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044978);
    v2[0] = sub_2331DE618(&qword_256044988, &qword_256044970);
    v2[1] = sub_2331DEA74(&qword_256044990, &qword_256044968, MEMORY[0x24BEE0D38], MEMORY[0x24BEE0D08]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256044980);
  }
  return result;
}

uint64_t sub_2331DE618(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v5 = sub_2331B1A14(&qword_2560448C0, &qword_256044890, MEMORY[0x24BDCD228]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD1B8], v4, &v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2331DE688@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2331DB5F8(a1, *(_WORD *)(v2 + 16), *(unsigned __int16 *)(v2 + 18), a2);
}

uint64_t sub_2331DE694@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2331DBB54(a1, *(unsigned __int16 *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

char *keypath_get_selector_sourceValue()
{
  return sel_sourceValue;
}

char *keypath_get_selector_accountObject()
{
  return sel_accountObject;
}

char *keypath_get_selector_originTypeValue()
{
  return sel_originTypeValue;
}

uint64_t sub_2331DE6DC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_2331DE1B0();
    v7[1] = a3();
    result = MEMORY[0x234934494](MEMORY[0x24BDCCDB0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2331DE748()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256044A08;
  if (!qword_256044A08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560449C8);
    v2[0] = sub_2331DE7C4();
    v2[1] = sub_2331DE8C0(&qword_256044A28, &qword_2560449B8);
    result = MEMORY[0x234934494](MEMORY[0x24BDCCEF0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256044A08);
  }
  return result;
}

unint64_t sub_2331DE7C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256044A10;
  if (!qword_256044A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560449C0);
    v2[0] = sub_2331DE860(&qword_256044A18, MEMORY[0x24BEE3F50], MEMORY[0x24BEE12D0]);
    v2[1] = sub_2331DE860(&qword_256044A20, MEMORY[0x24BEE3F38], MEMORY[0x24BEE12A0]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256044A10);
  }
  return result;
}

uint64_t sub_2331DE860(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2560449D0);
    v8 = a2;
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2331DE8C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v5 = sub_2331DE618(&qword_256044A30, &qword_2560449B0);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD1B8], v4, &v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2331DE928()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256044A60;
  if (!qword_256044A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044A48);
    v2[0] = sub_2331DE8C0(&qword_256044A28, &qword_2560449B8);
    v2[1] = sub_2331DEA74(&qword_2560448C8, &qword_256044888, MEMORY[0x24BEE3F50], MEMORY[0x24BEE3F38]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256044A60);
  }
  return result;
}

char *keypath_get_selector_thirdPartyShareable()
{
  return sel_thirdPartyShareable;
}

unint64_t sub_2331DE9D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256044A88;
  if (!qword_256044A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044A80);
    v2[0] = sub_2331DE8C0(&qword_256044A90, &qword_256044A78);
    v2[1] = sub_2331DEA74((unint64_t *)&qword_256044A98, &qword_256044A70, MEMORY[0x24BEE1348], MEMORY[0x24BEE1330]);
    result = MEMORY[0x234934494](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256044A88);
  }
  return result;
}

uint64_t sub_2331DEA74(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x234934494](MEMORY[0x24BDCD128], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2331DEAD8()
{
  return sub_2331DCF30();
}

uint64_t sub_2331DEAEC()
{
  return sub_2331DCF50();
}

uint64_t sub_2331DEB00()
{
  return sub_2331DCF70();
}

uint64_t ArchiveWritingError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[1];
  if ((v0[3] & 1) == 0)
    v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2331DEB68()
{
  unint64_t result;

  result = qword_256044AB0;
  if (!qword_256044AB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ArchiveWritingError, &type metadata for ArchiveWritingError);
    atomic_store(result, (unint64_t *)&qword_256044AB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchiveWritingError()
{
  return &type metadata for ArchiveWritingError;
}

ValueMetadata *type metadata accessor for ArchiveWritingError.Context()
{
  return &type metadata for ArchiveWritingError.Context;
}

uint64_t sub_2331DEBCC()
{
  archive_write_free();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArchiveWriterBase()
{
  return objc_opt_self();
}

uint64_t sub_2331DEC10()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = archive_write_header();
  if ((_DWORD)result)
  {
    sub_2331D778C();
    v1 = swift_allocError();
    v3 = v2;
    v4 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v5 = sub_23361E288();
      *(_DWORD *)v3 = v4;
      *(_QWORD *)(v3 + 8) = v5;
      *(_QWORD *)(v3 + 16) = v6;
      sub_2331DEB68();
      swift_allocError();
      *(_QWORD *)v7 = v1;
      *(_QWORD *)(v7 + 8) = 0xD00000000000001CLL;
      *(_QWORD *)(v7 + 16) = 0x800000023366C4B0;
      *(_BYTE *)(v7 + 24) = 1;
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2331DECE8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = archive_write_finish_entry();
  if ((_DWORD)result)
  {
    sub_2331D778C();
    v1 = swift_allocError();
    v3 = v2;
    v4 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v5 = sub_23361E288();
      *(_DWORD *)v3 = v4;
      *(_QWORD *)(v3 + 8) = v5;
      *(_QWORD *)(v3 + 16) = v6;
      sub_2331DEB68();
      swift_allocError();
      *(_QWORD *)v7 = v1;
      *(_QWORD *)(v7 + 8) = 0xD000000000000016;
      *(_QWORD *)(v7 + 16) = 0x800000023366C490;
      *(_BYTE *)(v7 + 24) = 1;
      return swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2331DEDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v1 = archive_write_disk_new();
  if (!v1)
  {
    sub_2331DEB68();
    swift_allocError();
    *(_QWORD *)v13 = 0xD00000000000001CLL;
    *(_QWORD *)(v13 + 8) = 0x800000023366C4D0;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = 0;
    swift_willThrow();
LABEL_10:
    swift_deallocPartialClassInstance();
    return v0;
  }
  v2 = v1;
  if (archive_write_disk_set_options())
  {
    sub_2331D778C();
    v3 = swift_allocError();
    v5 = v4;
    v6 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v8 = sub_23361E288();
      *(_DWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v8;
      *(_QWORD *)(v5 + 16) = v9;
      sub_2331DEB68();
      swift_allocError();
      v11 = 0xD000000000000024;
      v12 = "Failed to set disk options on writer";
LABEL_9:
      *(_QWORD *)v10 = v3;
      *(_QWORD *)(v10 + 8) = v11;
      *(_QWORD *)(v10 + 16) = (unint64_t)(v12 - 32) | 0x8000000000000000;
      *(_BYTE *)(v10 + 24) = 1;
      swift_willThrow();
      archive_write_free();
      goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
    if (!archive_write_disk_set_standard_lookup())
    {
      *(_QWORD *)(v0 + 16) = v2;
      return v0;
    }
    sub_2331D778C();
    v3 = swift_allocError();
    v15 = v14;
    v16 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v17 = sub_23361E288();
      *(_DWORD *)v15 = v16;
      *(_QWORD *)(v15 + 8) = v17;
      *(_QWORD *)(v15 + 16) = v18;
      sub_2331DEB68();
      swift_allocError();
      v11 = 0xD000000000000027;
      v12 = "Failed to set standard lookup functions";
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ArchiveDiskWriter()
{
  return objc_opt_self();
}

uint64_t sub_2331DEFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = archive_write_new();
  if (!v1)
  {
    sub_2331DEB68();
    swift_allocError();
    *(_QWORD *)v13 = 0xD00000000000001FLL;
    *(_QWORD *)(v13 + 8) = 0x800000023366C550;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = 0;
    swift_willThrow();
LABEL_13:
    swift_deallocPartialClassInstance();
    return v0;
  }
  v2 = v1;
  if (archive_write_set_format_zip())
  {
    sub_2331D778C();
    v3 = swift_allocError();
    v5 = v4;
    v6 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v8 = sub_23361E288();
      *(_DWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v8;
      *(_QWORD *)(v5 + 16) = v9;
      sub_2331DEB68();
      swift_allocError();
      v11 = 0xD000000000000023;
      v12 = "Failed to set archive format to zip";
LABEL_12:
      *(_QWORD *)v10 = v3;
      *(_QWORD *)(v10 + 8) = v11;
      *(_QWORD *)(v10 + 16) = (unint64_t)(v12 - 32) | 0x8000000000000000;
      *(_BYTE *)(v10 + 24) = 1;
      swift_willThrow();
      archive_write_free();
      goto LABEL_13;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (archive_write_set_format_option())
  {
    sub_2331D778C();
    v3 = swift_allocError();
    v15 = v14;
    v16 = archive_errno();
    result = archive_error_string();
    if (result)
    {
      v17 = sub_23361E288();
      *(_DWORD *)v15 = v16;
      *(_QWORD *)(v15 + 8) = v17;
      *(_QWORD *)(v15 + 16) = v18;
      sub_2331DEB68();
      swift_allocError();
      v11 = 0xD000000000000030;
      v12 = "Failed to set archive compression format options";
      goto LABEL_12;
    }
    goto LABEL_17;
  }
  if (!archive_write_open_fd())
  {
    *(_QWORD *)(v0 + 16) = v2;
    return v0;
  }
  sub_2331D778C();
  v3 = swift_allocError();
  v20 = v19;
  v21 = archive_errno();
  result = archive_error_string();
  if (result)
  {
    v22 = sub_23361E288();
    *(_DWORD *)v20 = v21;
    *(_QWORD *)(v20 + 8) = v22;
    *(_QWORD *)(v20 + 16) = v23;
    sub_2331DEB68();
    swift_allocError();
    v11 = 0xD00000000000001ELL;
    v12 = "Failed to open file descriptor";
    goto LABEL_12;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ArchiveMemoryWriter()
{
  return objc_opt_self();
}

BOOL static BarcodeFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BarcodeFormat.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_2331DF2D0()
{
  sub_2331DF930();
  return sub_23361F428();
}

uint64_t sub_2331DF2F8()
{
  sub_2331DF930();
  return sub_23361F434();
}

uint64_t sub_2331DF320()
{
  sub_2331DF8EC();
  return sub_23361F428();
}

uint64_t sub_2331DF348()
{
  sub_2331DF8EC();
  return sub_23361F434();
}

uint64_t sub_2331DF370()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2331DF39C + 4 * byte_23362A6A0[*v0]))(0x6365747A61, 0xE500000000000000);
}

uint64_t sub_2331DF39C()
{
  return 0x38323165646F63;
}

uint64_t sub_2331DF3B4()
{
  return 0x373134666470;
}

uint64_t sub_2331DF3C8()
{
  return 0x65646F437271;
}

uint64_t sub_2331DF3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331E104C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331DF400()
{
  sub_2331DF820();
  return sub_23361F428();
}

uint64_t sub_2331DF428()
{
  sub_2331DF820();
  return sub_23361F434();
}

uint64_t sub_2331DF450()
{
  sub_2331DF8A8();
  return sub_23361F428();
}

uint64_t sub_2331DF478()
{
  sub_2331DF8A8();
  return sub_23361F434();
}

uint64_t sub_2331DF4A0()
{
  sub_2331DF864();
  return sub_23361F428();
}

uint64_t sub_2331DF4C8()
{
  sub_2331DF864();
  return sub_23361F434();
}

uint64_t BarcodeFormat.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

void BarcodeFormat.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044CF0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044CF8);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D00);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D08);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D10);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331DF820();
  sub_23361F410();
  __asm { BR              X9 }
}

uint64_t sub_2331DF6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_2331DF930();
  sub_23361F0C8();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

unint64_t sub_2331DF820()
{
  unint64_t result;

  result = qword_256044D18;
  if (!qword_256044D18)
  {
    result = MEMORY[0x234934494](&unk_23362ACE4, &type metadata for BarcodeFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D18);
  }
  return result;
}

unint64_t sub_2331DF864()
{
  unint64_t result;

  result = qword_256044D20;
  if (!qword_256044D20)
  {
    result = MEMORY[0x234934494](&unk_23362AC94, &type metadata for BarcodeFormat.QrCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D20);
  }
  return result;
}

unint64_t sub_2331DF8A8()
{
  unint64_t result;

  result = qword_256044D28;
  if (!qword_256044D28)
  {
    result = MEMORY[0x234934494](&unk_23362AC44, &type metadata for BarcodeFormat.Pdf417CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D28);
  }
  return result;
}

unint64_t sub_2331DF8EC()
{
  unint64_t result;

  result = qword_256044D30;
  if (!qword_256044D30)
  {
    result = MEMORY[0x234934494](&unk_23362ABF4, &type metadata for BarcodeFormat.Code128CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D30);
  }
  return result;
}

unint64_t sub_2331DF930()
{
  unint64_t result;

  result = qword_256044D38;
  if (!qword_256044D38)
  {
    result = MEMORY[0x234934494](&unk_23362ABA4, &type metadata for BarcodeFormat.AztecCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D38);
  }
  return result;
}

uint64_t BarcodeFormat.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D40);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D48);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D50);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D58);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D60);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2331DF820();
  v15 = v28;
  sub_23361F3EC();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23361F098();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23361EE10();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v19 = &type metadata for BarcodeFormat;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_2331DFDF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BarcodeFormat.init(from:)(a1, a2);
}

void sub_2331DFE0C(_QWORD *a1)
{
  BarcodeFormat.encode(to:)(a1);
}

uint64_t Barcode.altText.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Barcode.format.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t Barcode.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Barcode.messageEncoding.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall Barcode.init(altText:format:message:messageEncoding:)(FinanceKit::Barcode *__return_ptr retstr, Swift::String_optional altText, FinanceKit::BarcodeFormat format, Swift::String message, Swift::String messageEncoding)
{
  FinanceKit::BarcodeFormat v5;

  v5 = *(_BYTE *)format;
  retstr->altText = altText;
  retstr->format = v5;
  retstr->message = message;
  retstr->messageEncoding = messageEncoding;
}

uint64_t sub_2331DFECC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2331DFEFC + 4 * byte_23362A6AC[*v0]))(0x74786554746C61, 0xE700000000000000);
}

uint64_t sub_2331DFEFC()
{
  return 0x74616D726F66;
}

uint64_t sub_2331DFF10()
{
  return 0x6567617373656DLL;
}

uint64_t sub_2331DFF24()
{
  return 0x456567617373656DLL;
}

uint64_t sub_2331DFF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2331E11EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2331DFF6C()
{
  sub_2331E080C();
  return sub_23361F428();
}

uint64_t sub_2331DFF94()
{
  sub_2331E080C();
  return sub_23361F434();
}

uint64_t Barcode.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned __int8 *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v11[2] = *(_QWORD *)(v1 + 32);
  v11[3] = v7;
  v8 = *(_QWORD *)(v1 + 40);
  v11[0] = *(_QWORD *)(v1 + 48);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331E080C();
  sub_23361F410();
  v18 = 0;
  v9 = v13;
  sub_23361F0E0();
  if (!v9)
  {
    v17 = v12;
    v16 = 1;
    sub_2331E0850();
    sub_23361F17C();
    v15 = 2;
    sub_23361F140();
    v14 = 3;
    sub_23361F140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Barcode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  char v26;
  unsigned __int8 v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044D80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331E080C();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v28 = 0;
  v9 = sub_23361EFCC();
  v11 = v10;
  v26 = 1;
  sub_2331E0894();
  swift_bridgeObjectRetain();
  sub_23361F068();
  v23 = v27;
  v25 = 2;
  v21 = sub_23361F02C();
  v22 = v13;
  v24 = 3;
  swift_bridgeObjectRetain();
  v14 = sub_23361F02C();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18 = v14;
  v17(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v23;
  v19 = v22;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2331E03FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Barcode.init(from:)(a1, a2);
}

uint64_t sub_2331E0410(_QWORD *a1)
{
  return Barcode.encode(to:)(a1);
}

uint64_t Barcode.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __CFString *v4;
  CFStringEncoding v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_23361E1B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (__CFString *)sub_23361E12C();
  v5 = CFStringConvertIANACharSetNameToEncoding(v4);

  if (v5 == -1)
    return 0;
  CFStringConvertEncodingToNSStringEncoding(v5);
  sub_23361E1A4();
  v6 = sub_23361E15C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

FinanceKit::BarcodeFormat __swiftcall BarcodeFormat.init(_:)(FinanceKit::BarcodeFormat result)
{
  _BYTE *v1;

  *v1 = 0x1000203u >> (8 * *(_BYTE *)result);
  return result;
}

uint64_t Barcode.init(_:bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  _QWORD *v15;
  uint64_t v16;
  Swift::String v17;
  void *object;
  uint64_t result;
  uint64_t v20;
  int v21;
  uint64_t v22;

  countAndFlagsBits = *(_QWORD *)a1;
  LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  if (*(_QWORD *)(a1 + 8))
  {
    v20 = (uint64_t)&v20;
    MEMORY[0x24BDAC7A8](a1);
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock);
    v11 = v9 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v21 = v4;
    v4 = v6;
    v12 = (_QWORD *)(v10 + 16);
    v22 = v8;
    v13 = v7;
    v14 = (os_unfair_lock_s *)(v10 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v14);
    v15 = sub_23319A358(v12, v11, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD))sub_2331E08D8);
    os_unfair_lock_unlock(v14);
    swift_bridgeObjectRelease();
    v16 = sub_23361D6B8();
    v17 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v16);
    countAndFlagsBits = v17._countAndFlagsBits;
    object = v17._object;

    v6 = v4;
    LOBYTE(v4) = v21;
    swift_release();
    v7 = v13;
    v8 = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    object = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = countAndFlagsBits;
  *(_QWORD *)(a2 + 8) = object;
  *(_BYTE *)(a2 + 16) = 0x1000203u >> (8 * v4);
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  return result;
}

_QWORD *sub_2331E06B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;

  result = sub_23319A358(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t _s10FinanceKit7BarcodeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  char v17;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(unsigned __int8 *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  if (!v3)
  {
    result = 0;
    if (v9)
      return result;
    goto LABEL_10;
  }
  if (!v9)
    return 0;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || v3 != v9)
  {
    v16 = sub_23361F224();
    result = 0;
    if ((v16 & 1) == 0)
      return result;
LABEL_10:
    if (v4 != v10)
      return result;
    goto LABEL_11;
  }
  if (v4 != v10)
    return 0;
LABEL_11:
  if (v5 == v11 && v6 == v12 || (v17 = sub_23361F224(), result = 0, (v17 & 1) != 0))
  {
    if (v7 == v13 && v8 == v14)
      return 1;
    else
      return sub_23361F224();
  }
  return result;
}

unint64_t sub_2331E080C()
{
  unint64_t result;

  result = qword_256044D70;
  if (!qword_256044D70)
  {
    result = MEMORY[0x234934494](&unk_23362AB54, &type metadata for Barcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D70);
  }
  return result;
}

unint64_t sub_2331E0850()
{
  unint64_t result;

  result = qword_256044D78;
  if (!qword_256044D78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BarcodeFormat, &type metadata for BarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256044D78);
  }
  return result;
}

unint64_t sub_2331E0894()
{
  unint64_t result;

  result = qword_256044D88;
  if (!qword_256044D88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BarcodeFormat, &type metadata for BarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256044D88);
  }
  return result;
}

void sub_2331E08D8(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  sub_2333E8B78(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_2331E08F8()
{
  unint64_t result;

  result = qword_256044D90;
  if (!qword_256044D90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BarcodeFormat, &type metadata for BarcodeFormat);
    atomic_store(result, (unint64_t *)&qword_256044D90);
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeFormat()
{
  return &type metadata for BarcodeFormat;
}

uint64_t initializeWithCopy for Barcode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Barcode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Barcode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Barcode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Barcode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Barcode()
{
  return &type metadata for Barcode;
}

ValueMetadata *type metadata accessor for Barcode.CodingKeys()
{
  return &type metadata for Barcode.CodingKeys;
}

uint64_t _s10FinanceKit13BarcodeFormatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2331E0B9C + 4 * byte_23362A6B5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2331E0BD0 + 4 * byte_23362A6B0[v4]))();
}

uint64_t sub_2331E0BD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331E0BD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331E0BE0);
  return result;
}

uint64_t sub_2331E0BEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331E0BF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2331E0BF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331E0C00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BarcodeFormat.CodingKeys()
{
  return &type metadata for BarcodeFormat.CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeFormat.AztecCodingKeys()
{
  return &type metadata for BarcodeFormat.AztecCodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeFormat.Code128CodingKeys()
{
  return &type metadata for BarcodeFormat.Code128CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeFormat.Pdf417CodingKeys()
{
  return &type metadata for BarcodeFormat.Pdf417CodingKeys;
}

ValueMetadata *type metadata accessor for BarcodeFormat.QrCodeCodingKeys()
{
  return &type metadata for BarcodeFormat.QrCodeCodingKeys;
}

unint64_t sub_2331E0C60()
{
  unint64_t result;

  result = qword_256044D98;
  if (!qword_256044D98)
  {
    result = MEMORY[0x234934494](&unk_23362AA74, &type metadata for BarcodeFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044D98);
  }
  return result;
}

unint64_t sub_2331E0CA8()
{
  unint64_t result;

  result = qword_256044DA0;
  if (!qword_256044DA0)
  {
    result = MEMORY[0x234934494](&unk_23362AB2C, &type metadata for Barcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DA0);
  }
  return result;
}

unint64_t sub_2331E0CF0()
{
  unint64_t result;

  result = qword_256044DA8;
  if (!qword_256044DA8)
  {
    result = MEMORY[0x234934494](&unk_23362AA9C, &type metadata for Barcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DA8);
  }
  return result;
}

unint64_t sub_2331E0D38()
{
  unint64_t result;

  result = qword_256044DB0;
  if (!qword_256044DB0)
  {
    result = MEMORY[0x234934494](&unk_23362AAC4, &type metadata for Barcode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DB0);
  }
  return result;
}

unint64_t sub_2331E0D80()
{
  unint64_t result;

  result = qword_256044DB8;
  if (!qword_256044DB8)
  {
    result = MEMORY[0x234934494](&unk_23362A994, &type metadata for BarcodeFormat.AztecCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DB8);
  }
  return result;
}

unint64_t sub_2331E0DC8()
{
  unint64_t result;

  result = qword_256044DC0;
  if (!qword_256044DC0)
  {
    result = MEMORY[0x234934494](&unk_23362A9BC, &type metadata for BarcodeFormat.AztecCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DC0);
  }
  return result;
}

unint64_t sub_2331E0E10()
{
  unint64_t result;

  result = qword_256044DC8;
  if (!qword_256044DC8)
  {
    result = MEMORY[0x234934494](&unk_23362A944, &type metadata for BarcodeFormat.Code128CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DC8);
  }
  return result;
}

unint64_t sub_2331E0E58()
{
  unint64_t result;

  result = qword_256044DD0;
  if (!qword_256044DD0)
  {
    result = MEMORY[0x234934494](&unk_23362A96C, &type metadata for BarcodeFormat.Code128CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DD0);
  }
  return result;
}

unint64_t sub_2331E0EA0()
{
  unint64_t result;

  result = qword_256044DD8;
  if (!qword_256044DD8)
  {
    result = MEMORY[0x234934494](&unk_23362A8F4, &type metadata for BarcodeFormat.Pdf417CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DD8);
  }
  return result;
}

unint64_t sub_2331E0EE8()
{
  unint64_t result;

  result = qword_256044DE0;
  if (!qword_256044DE0)
  {
    result = MEMORY[0x234934494](&unk_23362A91C, &type metadata for BarcodeFormat.Pdf417CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DE0);
  }
  return result;
}

unint64_t sub_2331E0F30()
{
  unint64_t result;

  result = qword_256044DE8;
  if (!qword_256044DE8)
  {
    result = MEMORY[0x234934494](&unk_23362A8A4, &type metadata for BarcodeFormat.QrCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DE8);
  }
  return result;
}

unint64_t sub_2331E0F78()
{
  unint64_t result;

  result = qword_256044DF0;
  if (!qword_256044DF0)
  {
    result = MEMORY[0x234934494](&unk_23362A8CC, &type metadata for BarcodeFormat.QrCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DF0);
  }
  return result;
}

unint64_t sub_2331E0FC0()
{
  unint64_t result;

  result = qword_256044DF8;
  if (!qword_256044DF8)
  {
    result = MEMORY[0x234934494](&unk_23362A9E4, &type metadata for BarcodeFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044DF8);
  }
  return result;
}

unint64_t sub_2331E1008()
{
  unint64_t result;

  result = qword_256044E00;
  if (!qword_256044E00)
  {
    result = MEMORY[0x234934494](&unk_23362AA0C, &type metadata for BarcodeFormat.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256044E00);
  }
  return result;
}

uint64_t sub_2331E104C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6365747A61 && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x38323165646F63 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x373134666470 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F437271 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2331E11EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74786554746C61 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616D726F66 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x456567617373656DLL && a2 == 0xEF676E69646F636ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id sub_2331E13C0()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  if (qword_254245080 != -1)
    swift_once();
  v0 = *((_QWORD *)off_254245078 + 2);
  v1 = (objc_class *)type metadata accessor for BankConnectPushNotificationHandler();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC10FinanceKit34BankConnectPushNotificationHandler_store] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_2331E14D8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  os_activity_scope_state_s state;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v3 = _os_activity_create(&dword_233151000, "bankConnect/notificationHandler", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v3, &state);
  sub_2331E15A8(v1, a1);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

void sub_2331E15A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (qword_256041CA0 != -1)
    swift_once();
  v3 = sub_23361DB80();
  __swift_project_value_buffer(v3, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v4 = sub_23361DB68();
  v5 = sub_23361E780();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    v8 = sub_23361E078();
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_233164DCC(v8, v10, &v11);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v4, v5, "Received a push notification with payload %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v7, -1, -1);
    MEMORY[0x234934590](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_2331E18C4(a2);
  sub_2331E21A4();
}

uint64_t sub_2331E18C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v2 = v1;
  v23[0] = 0x746E657665;
  v23[1] = 0xE500000000000000;
  sub_23361ED50();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_2331E3EC4((uint64_t)&v24), (v5 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_23316831C((uint64_t)&v24);
  if (!*((_QWORD *)&v26 + 1))
  {
    sub_23319F5C0((uint64_t)&v25);
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044E38);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v25 = 0u;
    v26 = 0u;
LABEL_12:
    sub_23319F5C0((uint64_t)&v25);
LABEL_13:
    if (qword_256041CA0 != -1)
      swift_once();
    v9 = sub_23361DB80();
    __swift_project_value_buffer(v9, (uint64_t)qword_2560495B0);
    v10 = sub_23361DB68();
    v11 = sub_23361E768();
    if (!os_log_type_enabled(v10, v11))
      goto LABEL_18;
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = "Push notification's payload is not valid. The event type is missed";
    goto LABEL_17;
  }
  v6 = v23[0];
  strcpy((char *)v23, "eventType");
  WORD1(v23[1]) = 0;
  HIDWORD(v23[1]) = -385875968;
  sub_23361ED50();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_2331E3EC4((uint64_t)&v24), (v8 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23316831C((uint64_t)&v24);
  if (!*((_QWORD *)&v26 + 1))
    goto LABEL_12;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  RawBankConnectData.NotificationEventType.init(rawValue:)((char *)&v24);
  if (v24 != 3)
    goto LABEL_19;
  if (qword_256041CA0 != -1)
    swift_once();
  v22 = sub_23361DB80();
  __swift_project_value_buffer(v22, (uint64_t)qword_2560495B0);
  v10 = sub_23361DB68();
  v11 = sub_23361E768();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = "Push notification's payload is not valid. The event type is not supported.";
LABEL_17:
    _os_log_impl(&dword_233151000, v10, v11, v13, v12, 2u);
    MEMORY[0x234934590](v12, -1, -1);
  }
LABEL_18:

LABEL_19:
  strcpy((char *)v23, "subscriptionId");
  HIBYTE(v23[1]) = -18;
  sub_23361ED50();
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_2331E3EC4((uint64_t)&v24), (v15 & 1) != 0))
  {
    sub_233168350(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v25);
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_23316831C((uint64_t)&v24);
  if (*((_QWORD *)&v26 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_32;
  }
  else
  {
    sub_23319F5C0((uint64_t)&v25);
  }
  if (qword_256041CA0 != -1)
    swift_once();
  v16 = sub_23361DB80();
  __swift_project_value_buffer(v16, (uint64_t)qword_2560495B0);
  v17 = sub_23361DB68();
  v18 = sub_23361E768();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_233151000, v17, v18, "Push notification's payload is not valid. subscriptionId is missed.", v19, 2u);
    MEMORY[0x234934590](v19, -1, -1);
  }

LABEL_32:
  v20 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit34BankConnectPushNotificationHandler_store) + 16), sel_newBackgroundContext);
  MEMORY[0x24BDAC7A8](v20);
  sub_23361E960();

  return swift_bridgeObjectRelease();
}

void sub_2331E1F9C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    type metadata accessor for ManagedConsentNotificationSubscription();
    swift_bridgeObjectRetain();
    v7 = static ManagedConsentNotificationSubscription.existingSubscription(withSubscriptionID:in:)(a1, a2, a3);
    if (v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = (void *)v7;
      if (v7)
      {
        swift_bridgeObjectRelease();

      }
      else
      {
        if (qword_256041CA0 != -1)
          swift_once();
        v9 = sub_23361DB80();
        __swift_project_value_buffer(v9, (uint64_t)qword_2560495B0);
        swift_bridgeObjectRetain();
        v10 = sub_23361DB68();
        v11 = sub_23361E768();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = swift_slowAlloc();
          v14 = v13;
          *(_DWORD *)v12 = 136315138;
          swift_bridgeObjectRetain();
          sub_233164DCC(a1, a2, &v14);
          sub_23361EBC4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_233151000, v10, v11, "Push notification's payload is not valid.\nSubscription with subscriptionId %s doesn't exist.", v12, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x234934590](v13, -1, -1);
          MEMORY[0x234934590](v12, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
    }
  }
}

void sub_2331E21A4()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit34BankConnectPushNotificationHandler_store) + 16), sel_newBackgroundContext);
  sub_23361E960();

}

void sub_2331E23B8(char **a1)
{
  uint64_t v1;
  char **v3;
  uint64_t v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  char **v20;
  char **v21;
  id v22;
  objc_super v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedConsentNotificationSubscription();
  v23.receiver = (id)swift_getObjCClassFromMetadata();
  v23.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit38ManagedConsentNotificationSubscription;
  v3 = (char **)objc_msgSendSuper2(&v23, sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233626360;
  sub_2331E28A0();
  *(_QWORD *)(v4 + 32) = sub_23361E6B4();
  *(_QWORD *)(v4 + 40) = sub_23361E6B4();
  v22 = (id)v4;
  sub_23361E408();
  v5 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v5);

  objc_msgSend(v3, sel_setPredicate_, v6);
  v7 = sub_23361E984();
  if (v1)
    goto LABEL_2;
  v8 = v7;
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    if (qword_256041CA0 == -1)
    {
LABEL_18:
      v16 = sub_23361DB80();
      __swift_project_value_buffer(v16, (uint64_t)qword_2560495B0);
      v17 = sub_23361DB68();
      v18 = sub_23361E768();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_233151000, v17, v18, "Failed to handle push notification. There are no active subscriptions.", v19, 2u);
        MEMORY[0x234934590](v19, -1, -1);
      }

      goto LABEL_2;
    }
LABEL_22:
    swift_once();
    goto LABEL_18;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  v9 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_17;
LABEL_5:
  v20 = a1;
  v21 = v3;
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  v10 = 0;
  v3 = &selRef__initWithImage_;
  a1 = &selRef__initWithImage_;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      v11 = (id)MEMORY[0x234933120](v10, v8);
    else
      v11 = *(id *)(v8 + 8 * v10 + 32);
    v12 = v11;
    v13 = (char *)objc_msgSend(v11, sel_updateSequenceNumber);
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    ++v10;
    objc_msgSend(v12, sel_setUpdateSequenceNumber_, v13 + 1);
    objc_msgSend(v12, sel_setRequestAttemptCount_, 0);
    objc_msgSend(v12, sel_setLastRequestAttemptDate_, 0);

  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  v22 = 0;
  if ((objc_msgSend(v20, sel_save_, &v22) & 1) != 0)
  {
    v14 = v22;

    return;
  }
  v15 = v22;
  sub_23361D1B4();

  swift_willThrow();
  v3 = v21;
LABEL_2:

}

id BankConnectPushNotificationHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BankConnectPushNotificationHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BankConnectPushNotificationHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectPushNotificationHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BankConnectPushNotificationHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectPushNotificationHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static BankConnectPushNotificationHandler.makeHandler()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of BankConnectPushNotificationHandler.handlePushNotification(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

void sub_2331E2888()
{
  uint64_t v0;

  sub_2331E23B8(*(char ***)(v0 + 16));
}

unint64_t sub_2331E28A0()
{
  unint64_t result;

  result = qword_254247FB0;
  if (!qword_254247FB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254247FB0);
  }
  return result;
}

void sub_2331E28DC()
{
  uint64_t v0;

  sub_2331E1F9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

Swift::String __swiftcall FKLocalizedString(for:table:)(Swift::String a1, FinanceKit::LocalizedStringTable table)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String result;

  if (qword_2542450A8 != -1)
    swift_once();
  v2 = (void *)qword_2542450A0;
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E12C();
  v5 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, v4, v5);

  v7 = sub_23361E150();
  v9 = v8;

  v10 = v7;
  v11 = v9;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

uint64_t FKLocalizedString(for:table:_:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  sub_23361E150();
  v5 = sub_23361E180();
  swift_bridgeObjectRelease();
  return v5;
}

NSBundle __swiftcall NSBundle.init(identifier:)(FinanceKit::BundleIdentifier identifier)
{
  void *ObjCClassFromMetadata;
  void *v2;
  id v3;
  NSBundle result;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v2 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(ObjCClassFromMetadata, sel_bundleWithIdentifier_, v2);

  if (v3)
    return (NSBundle)v3;
  __break(1u);
  return result;
}

void NSBundle.identifier.getter(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(v1, sel_bundleIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
}

void sub_2331E2C78()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_23361E12C();
  v2 = objc_msgSend(v0, sel_bundleWithIdentifier_, v1);

  if (v2)
    qword_2542450A0 = (uint64_t)v2;
  else
    __break(1u);
}

id static NSBundle.financeKit.getter()
{
  if (qword_2542450A8 != -1)
    swift_once();
  return (id)qword_2542450A0;
}

Swift::Bool __swiftcall NSBundle.hasResource(_:withExtension:localization:)(Swift::String _, Swift::String withExtension, Swift::String localization)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  Swift::Bool v14;
  id v16[2];

  v3 = sub_23361D340();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_23361E12C();
  v11 = (void *)sub_23361E12C();
  v12 = (void *)sub_23361E12C();
  v13 = objc_msgSend(v16[1], sel_URLForResource_withExtension_subdirectory_localization_, v10, v11, 0, v12);

  if (v13)
  {
    sub_23361D2D4();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
    v14 = 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
      goto LABEL_6;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
  }
  v14 = 0;
LABEL_6:
  sub_2331A046C((uint64_t)v9);
  return v14;
}

uint64_t NSBundle.localizations(forTable:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v5 = objc_msgSend(v2, sel_localizations);
  v6 = sub_23361E3F0();

  v7 = v2;
  swift_bridgeObjectRetain();
  v8 = sub_2331E30AC(v6, v7, a1, a2);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v8;
}

unint64_t LocalizedStringTable.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 == 1)
    v1 = 0xD000000000000016;
  if (*v0)
    return v1;
  else
    return 0xD000000000000017;
}

FinanceKit::LocalizedStringTable_optional __swiftcall LocalizedStringTable.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FinanceKit::LocalizedStringTable_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23361EF9C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2331E3058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_233226EC8(*a1, *a2);
}

uint64_t sub_2331E3064()
{
  return sub_23353D47C();
}

uint64_t sub_2331E306C()
{
  return sub_23353E56C();
}

uint64_t sub_2331E3074()
{
  return sub_23353F174();
}

FinanceKit::LocalizedStringTable_optional sub_2331E307C(Swift::String *a1)
{
  return LocalizedStringTable.init(rawValue:)(*a1);
}

unint64_t sub_2331E3088@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = LocalizedStringTable.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2331E30AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a3;
  v52 = a4;
  v50 = a2;
  v5 = sub_23361D340();
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v40 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v14 = 0;
  v15 = a1 + 40;
  v44 = -(uint64_t)v13;
  v16 = MEMORY[0x24BEE4AF8];
  v43 = v10;
  v40 = a1 + 40;
  v41 = v13;
  do
  {
    v42 = v16;
    if (v14 <= v13)
      v17 = v13;
    else
      v17 = v14;
    v46 = -(uint64_t)v17;
    for (i = (uint64_t *)(v15 + 16 * v14++); ; i += 2)
    {
      if (v46 + v14 == 1)
      {
        __break(1u);
        return result;
      }
      v21 = *(i - 1);
      v20 = *i;
      swift_bridgeObjectRetain();
      v22 = (void *)sub_23361E12C();
      v23 = (void *)sub_23361E12C();
      v49 = v21;
      v24 = (void *)sub_23361E12C();
      v25 = objc_msgSend(v50, sel_URLForResource_withExtension_subdirectory_localization_, v22, v23, 0, v24);

      if (v25)
      {
        v26 = v47;
        sub_23361D2D4();

        v27 = v48;
        v28 = (uint64_t)v45;
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v26, v5);
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
        v29(v28, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v5) != 1)
        {
          v36 = v28;
          goto LABEL_17;
        }
      }
      else
      {
        v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
        v28 = (uint64_t)v45;
        v29((uint64_t)v45, 1, 1, v5);
      }
      sub_2331A046C(v28);
      v30 = (void *)sub_23361E12C();
      v31 = (void *)sub_23361E12C();
      v32 = (void *)sub_23361E12C();
      v33 = objc_msgSend(v50, sel_URLForResource_withExtension_subdirectory_localization_, v30, v31, 0, v32);

      if (v33)
        break;
      v19 = (uint64_t)v43;
      v29((uint64_t)v43, 1, 1, v5);
LABEL_8:
      sub_2331A046C(v19);
      result = swift_bridgeObjectRelease();
      ++v14;
      if (v44 + v14 == 1)
        return v42;
    }
    v34 = v47;
    sub_23361D2D4();

    v35 = v48;
    v19 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v43, v34, v5);
    v29(v19, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v19, 1, v5) == 1)
      goto LABEL_8;
    v36 = v19;
LABEL_17:
    sub_2331A046C(v36);
    v16 = v42;
    result = swift_isUniquelyReferenced_nonNull_native();
    v53 = v16;
    v15 = v40;
    v13 = v41;
    if ((result & 1) == 0)
    {
      result = sub_23327399C(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v16 = v53;
    }
    v38 = *(_QWORD *)(v16 + 16);
    v37 = *(_QWORD *)(v16 + 24);
    if (v38 >= v37 >> 1)
    {
      result = sub_23327399C(v37 > 1, v38 + 1, 1);
      v16 = v53;
    }
    *(_QWORD *)(v16 + 16) = v38 + 1;
    v39 = v16 + 16 * v38;
    *(_QWORD *)(v39 + 32) = v49;
    *(_QWORD *)(v39 + 40) = v20;
  }
  while (v44 + v14);
  return v16;
}

unint64_t sub_2331E34D0()
{
  unint64_t result;

  result = qword_256044E40;
  if (!qword_256044E40)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for LocalizedStringTable, &type metadata for LocalizedStringTable);
    atomic_store(result, (unint64_t *)&qword_256044E40);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocalizedStringTable(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2331E3560 + 4 * byte_23362AD85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2331E3594 + 4 * byte_23362AD80[v4]))();
}

uint64_t sub_2331E3594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331E359C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331E35A4);
  return result;
}

uint64_t sub_2331E35B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331E35B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2331E35BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331E35C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringTable()
{
  return &type metadata for LocalizedStringTable;
}

void static BundleIdentifier.financeKit.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000023366C020;
}

uint64_t BundleIdentifier.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FinanceKit::BundleIdentifier __swiftcall BundleIdentifier.init(rawValue:)(FinanceKit::BundleIdentifier rawValue)
{
  FinanceKit::BundleIdentifier *v1;

  *v1 = rawValue;
  return rawValue;
}

void static BundleIdentifier.financed.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000023366C720;
}

void static BundleIdentifier.passbookWidgets.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000022;
  a1[1] = 0x800000023366C740;
}

void static BundleIdentifier.passKitCore.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x800000023366C770;
}

void static BundleIdentifier.nanoPassbook.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x800000023366C790;
}

void static BundleIdentifier.networkAttributionBundle.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000023366ABC0;
}

ValueMetadata *type metadata accessor for BundleIdentifier()
{
  return &type metadata for BundleIdentifier;
}

uint64_t ContentPackageReader.fileUrl(possibleNames:ext:bundle:localization:preferUnlocalized:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v51 = a6;
  v49 = a5;
  v55 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v53 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v49 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)&v49 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v49 - v21;
  swift_bridgeObjectRetain();
  v23 = a4;
  v54 = a1;
  v50 = a2;
  v24 = sub_2331E5040(a1, v23, a2, (uint64_t)a3);

  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  v26 = sub_23361D340();
  v27 = *(_QWORD *)(v26 - 8);
  if (v25)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v22, v24 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), v26);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v22, v28, 1, v26);
  swift_bridgeObjectRelease();
  if ((a7 & 1) == 0)
  {
    sub_233199624((uint64_t)v22, (uint64_t)v18);
    v29 = sub_23361D340();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (v31(v18, 1, v29) == 1)
    {
      v32 = v51;
      swift_bridgeObjectRetain();
      v33 = v23;
      swift_bridgeObjectRetain();
      v34 = sub_2331E530C(v54, v49, v32, v33, v50, a3);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v35 = (uint64_t)v52;
      if (*(_QWORD *)(v34 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v52, v34 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)), v29);
        v36 = 0;
      }
      else
      {
        v36 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v35, v36, 1, v29);
      swift_bridgeObjectRelease();
      sub_2331A046C((uint64_t)v22);
      sub_2331A046C((uint64_t)v18);
    }
    else
    {
      sub_2331A046C((uint64_t)v22);
      v35 = (uint64_t)v52;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v52, v18, v29);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v35, 0, 1, v29);
    }
    sub_2331A04AC(v35, (uint64_t)v22);
    v37 = v53;
    sub_233199624((uint64_t)v22, v53);
    v38 = v31((char *)v37, 1, v29);
    sub_2331A046C(v37);
    if (v38 == 1)
    {
      if (qword_254246760 != -1)
        swift_once();
      v39 = sub_23361DB80();
      __swift_project_value_buffer(v39, (uint64_t)qword_254246748);
      swift_bridgeObjectRetain_n();
      v40 = sub_23361DB68();
      v41 = sub_23361E768();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v57 = v43;
        *(_DWORD *)v42 = 136315138;
        v44 = swift_bridgeObjectRetain();
        v45 = MEMORY[0x234932760](v44, MEMORY[0x24BEE0D00]);
        v47 = v46;
        swift_bridgeObjectRelease();
        v56 = sub_233164DCC(v45, v47, &v57);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v40, v41, "Could not find file with name in %s in bundle", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v43, -1, -1);
        MEMORY[0x234934590](v42, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  return sub_2331A04AC((uint64_t)v22, v55);
}

uint64_t LocalizedURLMap.url(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  v8 = type metadata accessor for LocalizedURLMap();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2331E5720(v4, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v10;
    if (*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_2331E3D18(a1, a2);
      if ((v13 & 1) != 0)
      {
        v14 = v12;
        v15 = *(_QWORD *)(v11 + 56);
        v16 = sub_23361D340();
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(a3, v15 + *(_QWORD *)(v17 + 72) * v14, v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a3, 0, 1, v16);
      }
      else
      {
        v22 = sub_23361D340();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = sub_23361D340();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_23361D340();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v19 + 32))(a3, v10, v18);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a3, 0, 1, v18);
  }
}

unint64_t sub_2331E3D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23361F350();
  sub_23361E0A8();
  v4 = sub_23361F3A4();
  return sub_2331E43E0(a1, a2, v4);
}

unint64_t sub_2331E3D7C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_23361D6A0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_233167C58(&qword_25604DB90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v3 = sub_23361E084();
  return sub_2331E4A0C(a1, v3, v2, &qword_2560568E0, MEMORY[0x24BDCEA98]);
}

unint64_t sub_2331E3E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  v8 = sub_23361F3A4();
  return sub_2331E44C0(a1, a2, a3, a4, v8);
}

unint64_t sub_2331E3EC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23361ED38();
  return sub_2331E45BC(a1, v2);
}

unint64_t sub_2331E3EF4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;
  _BYTE v8[72];

  sub_23361F350();
  sub_23361F35C();
  if (a3 > 1u)
    sub_233243554((uint64_t)v8, a1);
  else
    sub_23361E0A8();
  v6 = sub_23361F3A4();
  return sub_2331E4680(a1, a2, a3, v6);
}

unint64_t sub_2331E3FA8(uint64_t a1)
{
  uint64_t v2;

  sub_23361EC3C();
  v2 = sub_23361E084();
  return sub_2331E4944(a1, v2);
}

unint64_t sub_2331E4014(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_23361CEE4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCCD18];
  sub_233167C58(&qword_256044EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCD18], MEMORY[0x24BDCCD28]);
  v3 = sub_23361E084();
  return sub_2331E4A0C(a1, v3, v2, &qword_256044EF8, MEMORY[0x24BDCCD30]);
}

unint64_t sub_2331E40AC(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_23361F350();
  sub_23361F35C();
  v2 = sub_23361F3A4();
  return sub_2331E4B3C(v1, v2);
}

unint64_t sub_2331E4108(uint64_t a1)
{
  uint64_t v2;

  sub_23361E150();
  sub_23361F350();
  sub_23361E0A8();
  v2 = sub_23361F3A4();
  swift_bridgeObjectRelease();
  return sub_2331E4BF8(a1, v2);
}

unint64_t sub_2331E4188(uint64_t a1)
{
  uint64_t v2;

  sub_23361E150();
  sub_23361F350();
  sub_23361E0A8();
  v2 = sub_23361F3A4();
  swift_bridgeObjectRelease();
  return sub_2331E4BF8(a1, v2);
}

unint64_t sub_2331E4214(__n128 a1, __n128 a2)
{
  uint64_t v2;

  sub_23361F350();
  sub_23327FE6C();
  v2 = sub_23361F3A4();
  return sub_2331E4D6C(v2, a1, a2);
}

unint64_t sub_2331E4260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_23361F350();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  sub_23361F380();
  v8 = sub_23361F3A4();
  return sub_2331E4E40(a1, a2, a3, a4, v8);
}

unint64_t sub_2331E434C(uint64_t a1)
{
  uint64_t v2;

  sub_23361F350();
  type metadata accessor for CFString(0);
  sub_233167C58(&qword_256042DD8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2336242E4);
  sub_23361D9A0();
  v2 = sub_23361F3A4();
  return sub_2331E4F00(a1, v2);
}

unint64_t sub_2331E43E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23361F224() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23361F224() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2331E44C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_23361F224() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_23361F224() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_2331E45BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_2331961F8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2349330A8](v9, a1);
      sub_23316831C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2331E4680(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v22;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v22 = ~v5;
    while (1)
    {
      v10 = *(_QWORD *)(v4 + 48) + 24 * v6;
      v12 = *(_QWORD *)v10;
      v11 = *(_QWORD *)(v10 + 8);
      v13 = *(unsigned __int8 *)(v10 + 16);
      if (!*(_BYTE *)(v10 + 16))
        break;
      if (v13 != 1)
      {
        if (a3 != 2)
        {
LABEL_4:
          sub_2331E58D8(v12, v11, v13);
          sub_2331E58D8(a1, a2, a3);
          sub_2331E58F8(v12, v11, v13);
          sub_2331E58F8(a1, a2, a3);
          goto LABEL_5;
        }
        sub_2331E58D8(v12, v11, 2u);
        sub_2331E58D8(v12, v11, 2u);
        sub_2331E58D8(a1, a2, 2u);
        v16 = sub_2333E36C8(v12, a1);
        sub_2331E58F8(v12, v11, 2u);
        sub_2331E58F8(a1, a2, 2u);
        v17 = v12;
        v18 = v11;
        v19 = 2;
        goto LABEL_22;
      }
      if (a3 != 1)
        goto LABEL_4;
      if (v12 == a1 && v11 == a2)
        goto LABEL_25;
      v15 = sub_23361F224();
      sub_2331E58D8(v12, v11, 1u);
      sub_2331E58D8(a1, a2, 1u);
      sub_2331E58F8(v12, v11, 1u);
      sub_2331E58F8(a1, a2, 1u);
      if ((v15 & 1) != 0)
        return v6;
LABEL_5:
      v6 = (v6 + 1) & v22;
      if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return v6;
    }
    if (a3)
      goto LABEL_4;
    if (v12 == a1 && v11 == a2)
    {
LABEL_25:
      sub_2331E58D8(a1, a2, v13);
      sub_2331E58D8(a1, a2, v13);
      sub_2331E58F8(a1, a2, v13);
      sub_2331E58F8(a1, a2, v13);
      return v6;
    }
    v16 = sub_23361F224();
    sub_2331E58D8(v12, v11, 0);
    sub_2331E58D8(a1, a2, 0);
    sub_2331E58F8(v12, v11, 0);
    v17 = a1;
    v18 = a2;
    v19 = 0;
LABEL_22:
    sub_2331E58F8(v17, v18, v19);
    if ((v16 & 1) != 0)
      return v6;
    goto LABEL_5;
  }
  return v6;
}

unint64_t sub_2331E4944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_23361EC3C();
    do
    {
      if ((sub_23361E108() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2331E4A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_233167C58(v21, v20, v22);
      v17 = sub_23361E108();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_2331E4B3C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2331E4BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23361E150();
    v8 = v7;
    if (v6 == sub_23361E150() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23361E150();
          v15 = v14;
          if (v13 == sub_23361E150() && v15 == v16)
            break;
          v18 = sub_23361F224();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2331E4D6C(uint64_t a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  BOOL v12;
  uint64_t v13;
  double v14;
  double v15;
  _OWORD v16[2];
  _OWORD v17[2];

  v4 = -1 << *(_BYTE *)(v3 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v3 + 48);
    do
    {
      v8 = 0;
      v9 = (__int128 *)(v7 + 32 * result);
      v11 = *v9;
      v10 = v9[1];
      while (1)
      {
        v17[0] = v11;
        v17[1] = v10;
        v13 = 8 * (v8 & 3);
        v14 = *(double *)((char *)v17 + v13);
        v16[0] = a2;
        v16[1] = a3;
        v15 = *(double *)((char *)v16 + v13);
        v12 = v14 == v15;
        if (v8 == 3)
          break;
        while (1)
        {
          ++v8;
          if (v12)
            break;
          if (v8 == 3)
            goto LABEL_4;
          v12 = 0;
        }
      }
      if (v14 == v15)
        break;
LABEL_4:
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2331E4E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t result;
  int32x4_t v9;
  int32x4_t v10;

  v7 = -1 << *(_BYTE *)(v5 + 32);
  result = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v9.i64[0] = a3;
    v9.i64[1] = a4;
    v10.i64[0] = a1;
    v10.i64[1] = a2;
    do
    {
      if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(*(_QWORD *)(v5 + 48) + 32 * result), v10), (int16x8_t)vceqq_s32(*(int32x4_t *)(*(_QWORD *)(v5 + 48) + 32 * result + 16), v9))), 7uLL))) & 1) != 0)break;
      result = (result + 1) & ~v7;
    }
    while (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2331E4F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_233167C58(&qword_256042DD8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2336242E4);
    v7 = v6;
    v8 = sub_23361D994();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_23361D994();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_2331E5040(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  int v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v31[3];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  unint64_t v37;

  v5 = v4;
  v33 = a3;
  v36 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v32 = (char *)v31 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  v31[2] = v5;
  swift_bridgeObjectRetain();
  v31[1] = v11;
  v18 = v11 + 40;
  v37 = MEMORY[0x24BEE4AF8];
  v34 = a4;
  do
  {
    swift_bridgeObjectRetain();
    v19 = (void *)sub_23361E12C();
    if (a4)
      v20 = (void *)sub_23361E12C();
    else
      v20 = 0;
    v21 = objc_msgSend(v36, sel_URLForResource_withExtension_subdirectory_localization_, v19, v20, 0, 0);

    if (v21)
    {
      sub_23361D2D4();

      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, v22, 1, v12);
    swift_bridgeObjectRelease();
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12);
    a4 = v34;
    if (v23 == 1)
    {
      sub_2331A046C((uint64_t)v10);
    }
    else
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v25 = v32;
      v24(v32, v10, v12);
      v24(v35, v25, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v26 = v37;
      else
        v26 = sub_2334A4CD0(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
      v28 = *(_QWORD *)(v26 + 16);
      v27 = *(_QWORD *)(v26 + 24);
      if (v28 >= v27 >> 1)
        v26 = sub_2334A4CD0(v27 > 1, v28 + 1, 1, v26);
      *(_QWORD *)(v26 + 16) = v28 + 1;
      v29 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v37 = v26;
      v24((char *)(v26 + v29 + *(_QWORD *)(v13 + 72) * v28), v35, v12);
    }
    v18 += 16;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v37;
}

unint64_t sub_2331E530C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v40[2];
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  id v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;

  v44 = a5;
  v45 = a2;
  v48 = a4;
  v50 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v40 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)v40 - v15;
  v16 = sub_23361D340();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v49 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v42 = (char *)v40 - v20;
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
    return MEMORY[0x24BEE4AF8];
  v40[1] = v6;
  swift_bridgeObjectRetain();
  v40[0] = a1;
  v22 = a1 + 40;
  v23 = MEMORY[0x24BEE4AF8];
  v46 = a6;
  v43 = v14;
  do
  {
    v51 = v23;
    swift_bridgeObjectRetain();
    v24 = (void *)sub_23361E12C();
    if (v50)
    {
      if (a6)
        a6 = (void *)sub_23361E12C();
      v25 = (void *)sub_23361E12C();
      v26 = objc_msgSend(v48, sel_URLForResource_withExtension_subdirectory_localization_, v24, a6, 0, v25);

      if (v26)
      {
        v27 = (uint64_t)v43;
        sub_23361D2D4();

        v28 = 0;
        a6 = v46;
      }
      else
      {
        v28 = 1;
        a6 = v46;
        v27 = (uint64_t)v43;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v27, v28, 1, v16);
      v33 = v27;
      v34 = (uint64_t)v47;
    }
    else
    {
      if (a6)
        a6 = (void *)sub_23361E12C();
      v29 = objc_msgSend(v48, sel_URLForResource_withExtension_, v24, a6, v40[0]);

      if (v29)
      {
        v30 = v41;
        sub_23361D2D4();

        v31 = v30;
        v32 = 0;
        a6 = v46;
      }
      else
      {
        v32 = 1;
        a6 = v46;
        v31 = v41;
      }
      v34 = (uint64_t)v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v31, v32, 1, v16);
      v33 = (uint64_t)v31;
    }
    sub_2331A04AC(v33, v34);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v34, 1, v16) == 1)
    {
      sub_2331A046C(v34);
      v23 = v51;
    }
    else
    {
      v35 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
      v36 = v42;
      v35(v42, v34, v16);
      v35(v49, (uint64_t)v36, v16);
      v23 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_2334A4CD0(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
      v38 = *(_QWORD *)(v23 + 16);
      v37 = *(_QWORD *)(v23 + 24);
      if (v38 >= v37 >> 1)
        v23 = sub_2334A4CD0(v37 > 1, v38 + 1, 1, v23);
      *(_QWORD *)(v23 + 16) = v38 + 1;
      v35((char *)(v23+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v38), (uint64_t)v49, v16);
    }
    v22 += 16;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t type metadata accessor for LocalizedURLMap()
{
  uint64_t result;

  result = qword_256044EB8;
  if (!qword_256044EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2331E5720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocalizedURLMap();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *assignWithCopy for LocalizedURLMap(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_2331E5804((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = sub_23361D340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2331E5804(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocalizedURLMap();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for LocalizedURLMap(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2331E5804((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23361D340();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2331E58D8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_2331E58F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

CFMutableDataRef CGImageRef.pngData.getter()
{
  CGImage *v0;
  CGImage *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  CFMutableDataRef result;
  __CFData *v7;
  __CFString *v8;
  CGImageDestination *v9;
  __CFData *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_23361DACC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = CFDataCreateMutable(0, 0);
  if (result)
  {
    v7 = result;
    sub_23361DA9C();
    sub_23361DA78();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v8 = (__CFString *)sub_23361E12C();
    swift_bridgeObjectRelease();
    v9 = CGImageDestinationCreateWithData(v7, v8, 1uLL, 0);

    if (v9)
    {
      CGImageDestinationAddImage(v9, v1, 0);
      if (CGImageDestinationFinalize(v9))
      {
        v10 = v7;
        v11 = sub_23361D3C4();

        return (CFMutableDataRef)v11;
      }

    }
    else
    {

    }
    return 0;
  }
  __break(1u);
  return result;
}

CFDictionaryRef sub_2331E5A64(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  CGImageSource *v9;
  uint64_t v10;
  const __CFDictionary *v11;
  CFDictionaryRef v12;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256044F00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v5 = (void *)*MEMORY[0x24BDD97D0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD97D0];
  *(_BYTE *)(inited + 40) = 0;
  v6 = v5;
  v7 = sub_23315FC10(inited);
  v8 = sub_233194FB8(v7);
  swift_bridgeObjectRelease();
  v9 = (CGImageSource *)createOrderImageSourceWithData(_:_:)(a1, a2, v8);
  swift_bridgeObjectRelease();
  if (!v9)
    return 0;
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 32) = v6;
  *(_BYTE *)(v10 + 40) = 0;
  v6;
  sub_23315FC10(v10);
  type metadata accessor for CFString(0);
  sub_2331E5ECC();
  v11 = (const __CFDictionary *)sub_23361E054();
  swift_bridgeObjectRelease();
  v12 = CGImageSourceCopyPropertiesAtIndex(v9, 0, v11);

  if (v12)
  {
    v14 = 0;
    sub_23361E060();

    v12 = 0;
  }

  return v12;
}

unint64_t sub_2331E5ECC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2560420A0;
  if (!qword_2560420A0)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x234934494](&unk_233624474, v1);
    atomic_store(result, (unint64_t *)&qword_2560420A0);
  }
  return result;
}

uint64_t AccountQuery.init(sortDescriptors:predicate:limit:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;

  v28 = a6;
  v27 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - v20;
  *a7 = a1;
  v22 = (int *)type metadata accessor for AccountQuery();
  sub_2331E612C(a2, (uint64_t)a7 + v22[5]);
  sub_2331E612C(a2, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2331E6174(a2);
    result = sub_2331E6174((uint64_t)v14);
    v24 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    sub_2331E28A0();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    v24 = sub_2331E61B4((uint64_t)v19);
    sub_2331E6174(a2);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  *(_QWORD *)((char *)a7 + v22[8]) = v24;
  v25 = (char *)a7 + v22[6];
  *(_QWORD *)v25 = a3;
  v25[8] = a4 & 1;
  v26 = (char *)a7 + v22[7];
  *(_QWORD *)v26 = v27;
  v26[8] = v28 & 1;
  return result;
}

uint64_t type metadata accessor for AccountQuery()
{
  uint64_t result;

  result = qword_256044F70;
  if (!qword_256044F70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2331E612C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2331E6174(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2331E61B4(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t inited;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[14];

  v37 = a1;
  v41 = sub_23361CEE4();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FE8);
  v43 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50[13] = v4;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  sub_23361D8BC();
  v39 = _s10FinanceKit14ManagedAccountC14mappedKeyPathsSDys03AnyF4PathCSSGvgZ_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044FF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  v6 = (void *)sub_23361E12C();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_expressionForKeyPath_, v6);

  v50[0] = 1;
  v9 = objc_msgSend(v7, sel_expressionForConstantValue_, sub_23361F290());
  swift_unknownObjectRelease();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14B8]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v8, v9, 0, 4, 0);

  *(_QWORD *)(inited + 40) = v10;
  v11 = v4;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  v12 = (void *)sub_23361E12C();
  v13 = objc_msgSend(v7, sel_expressionForKeyPath_, v12);

  v50[0] = 0;
  v14 = objc_msgSend(v7, sel_expressionForConstantValue_, sub_23361F290());
  swift_unknownObjectRelease();
  v15 = objc_allocWithZone(MEMORY[0x24BDD14B8]);
  v16 = v36;
  v17 = objc_msgSend(v15, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v13, v14, 0, 4, 0);

  *(_QWORD *)(inited + 56) = v17;
  v18 = sub_23315FE20(inited);
  v42 = v11;
  sub_23361D160();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044FD0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560421D8);
  v20 = *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_233623D60;
  v23 = v22 + v21;
  v24 = v37;
  v25 = (_QWORD *)(v23 + *(int *)(v19 + 48));
  v26 = v40;
  v27 = v41;
  (*(void (**)(void))(v40 + 16))();
  *v25 = objc_msgSend(v7, sel_expressionForEvaluatedObject);
  v25[1] = 0;
  v25[2] = 0;
  v25[3] = 0;
  v28 = sub_23315FF28(v22);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v30 = v38;
  v29(v2, v27);
  v50[0] = 1;
  v50[1] = v28;
  v50[2] = v39;
  v50[3] = v18;
  v50[4] = 0;
  sub_23361D8B0();
  v31 = v48;
  v32 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  sub_233211E98(v50, v31, *(_QWORD *)(v32 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v24, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  v33 = v44;
  v45 = swift_dynamicCastUnknownClassUnconditional();
  sub_233219AA0((uint64_t)&v45, v33, (uint64_t)&v46);
  v34 = v46;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v16);
  return v34;
}

uint64_t sub_2331E66EC(uint64_t a1)
{
  return sub_2331E6724(a1, &qword_256044FD8, &qword_256044FE0, (uint64_t (*)(uint64_t))_s10FinanceKit21ManagedAccountBalanceC14mappedKeyPathsSDys03AnyG4PathCSSGvgZ_0);
}

uint64_t sub_2331E6708(uint64_t a1)
{
  return sub_2331E6724(a1, &qword_256044FC0, &qword_256044FC8, (uint64_t (*)(uint64_t))_s10FinanceKit18ManagedTransactionC14mappedKeyPathsSDys03AnyF4PathCSSGvgZ_0);
}

uint64_t sub_2331E6724(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[7];

  v8 = sub_23361CEE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[5] = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v16 = sub_23361D8BC();
  v17 = a4(v16);
  v30 = v12;
  sub_23361D160();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256044FD0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560421D8);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_233623D60;
  v22 = (_QWORD *)(v21 + v20 + *(int *)(v18 + 48));
  (*(void (**)(void))(v9 + 16))();
  *v22 = objc_msgSend((id)objc_opt_self(), sel_expressionForEvaluatedObject);
  v22[1] = 0;
  v22[2] = 0;
  v22[3] = 0;
  v23 = sub_23315FF28(v21);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v37[0] = 1;
  v37[1] = v23;
  v37[3] = 0;
  v37[4] = 0;
  v37[2] = v17;
  sub_23361D8B0();
  v25 = v35;
  v24 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  sub_233211E98(v37, v25, *(_QWORD *)(v24 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  v26 = v31;
  v32 = swift_dynamicCastUnknownClassUnconditional();
  sub_233219AA0((uint64_t)&v32, v26, (uint64_t)&v33);
  v27 = v33;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
  return v27;
}

uint64_t PrivateAccountQuery.init(sortDescriptors:predicate:limit:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4 & 1;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6 & 1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountQuery(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[8];
    v21 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
    v22 = v21;
  }
  return a1;
}

void destroy for AccountQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

_QWORD *initializeWithCopy for AccountQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  swift_bridgeObjectRetain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[8];
  v19 = *(void **)((char *)a2 + v18);
  *(_QWORD *)((char *)a1 + v18) = v19;
  v20 = v19;
  return a1;
}

_QWORD *assignWithCopy for AccountQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  v23 = a3[8];
  v24 = *(void **)((char *)a1 + v23);
  v25 = *(void **)((char *)a2 + v23);
  *(_QWORD *)((char *)a1 + v23) = v25;
  v26 = v25;

  return a1;
}

_QWORD *initializeWithTake for AccountQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for AccountQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void *v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F10);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = a3[8];
  v22 = *(void **)((char *)a1 + v21);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);

  return a1;
}

uint64_t getEnumTagSinglePayload for AccountQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2331E7114(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AccountQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2331E71A0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044F08);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2331E7218()
{
  unint64_t v0;

  sub_2331E72A4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2331E72A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256044F80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256044F10);
    v0 = sub_23361EBAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256044F80);
  }
}

void destroy for PrivateAccountQuery(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for PrivateAccountQuery(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for PrivateAccountQuery(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PrivateAccountQuery(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateAccountQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivateAccountQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateAccountQuery()
{
  return &type metadata for PrivateAccountQuery;
}

CGPath *sub_2331E7508(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGPath *Mutable;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetHeight(v10);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetWidth(v11);
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  CGRectGetHeight(v12);
  Mutable = CGPathCreateMutable();
  sub_23361E7C8();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7D4();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7D4();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7D4();
  sub_23361E7E0();
  sub_23361E7E0();
  sub_23361E7E0();
  CGPathCloseSubpath(Mutable);
  return Mutable;
}

uint64_t InternalInstitutionQuery.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t InternalInstitutionQuery.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*InternalInstitutionQuery.limit.modify())()
{
  return nullsub_1;
}

void *InternalInstitutionQuery.predicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void InternalInstitutionQuery.predicate.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*InternalInstitutionQuery.predicate.modify())()
{
  return nullsub_1;
}

uint64_t InternalInstitutionQuery.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InternalInstitutionQuery.sortDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*InternalInstitutionQuery.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t InternalInstitutionQuery.init(limit:predicate:sortDescriptors:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_2331E79FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2331E837C();
  *a1 = result;
  return result;
}

uint64_t sub_2331E7A28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2331E837C();
  *a1 = result;
  return result;
}

uint64_t sub_2331E7A4C()
{
  sub_2331E8184();
  return sub_23361F428();
}

uint64_t sub_2331E7A74()
{
  sub_2331E8184();
  return sub_23361F434();
}

void InternalInstitutionQuery.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044FF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331E8184();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
  else
  {
    LOBYTE(v28) = 0;
    v9 = sub_23361EFF0();
    v11 = v10;
    v27 = v9;
    LOBYTE(v28) = 1;
    v12 = sub_23361F0A4();
    if ((v12 & 1) != 0)
    {
      v30 = 1;
      sub_2331A6B08();
      sub_23361F068();
      v26 = a2;
      v13 = v28;
      v14 = v29;
      sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_254247FB0);
      v25 = v14;
      v21 = (void *)sub_23361E81C();
      sub_23316BEA4(v13, v25);
    }
    else
    {
      v26 = a2;
      v21 = 0;
    }
    LOBYTE(v28) = 2;
    if ((sub_23361F0A4() & 1) != 0)
    {
      v30 = 2;
      sub_2331A6B08();
      sub_23361F068();
      v18 = v28;
      v19 = v29;
      v25 = sub_233168668(0, &qword_2560430A0);
      sub_233168668(0, (unint64_t *)&qword_2560446E0);
      v23 = v18;
      v24 = v19;
      v20 = sub_23361E834();
      if (v20)
        v15 = v20;
      else
        v15 = MEMORY[0x24BEE4AF8];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_23316BEA4(v23, v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v15 = 0;
    }
    v16 = v26;
    *v26 = v27;
    *((_BYTE *)v16 + 8) = v11 & 1;
    v16[2] = (uint64_t)v21;
    v16[3] = v15;
    swift_bridgeObjectRetain();
    v17 = v21;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

uint64_t InternalInstitutionQuery.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  id v37;
  unint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045008);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)v1;
  v8 = *(_BYTE *)(v1 + 8);
  v9 = *(void **)(v1 + 16);
  v33 = *(_QWORD *)(v1 + 24);
  v34 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2331E8184();
  sub_23361F410();
  v37 = v7;
  LOBYTE(v38) = v8;
  v10 = v6;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560430B0);
  sub_2331A6B4C();
  v11 = v35;
  sub_23361F17C();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v4;
  v15 = v33;
  v14 = v34;
  if (v34)
  {
    v16 = (void *)objc_opt_self();
    v37 = 0;
    v17 = v14;
    v18 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v17, 1, &v37);
    v19 = v37;
    if (!v18)
    {
      v23 = v19;
      sub_23361D1B4();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
    }
    v20 = (void *)sub_23361D3C4();
    v22 = v21;

    v37 = v20;
    v38 = v22;
    v36 = 1;
    sub_2331A6BA8();
    sub_23361F17C();

    sub_23316BEA4((uint64_t)v20, v22);
  }
  if (v15)
  {
    v24 = (void *)objc_opt_self();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v25 = (void *)sub_23361E3D8();
    v37 = 0;
    v26 = objc_msgSend(v24, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v25, 1, &v37);

    v27 = v37;
    if (v26)
    {
      v28 = (void *)sub_23361D3C4();
      v30 = v29;

      v37 = v28;
      v38 = v30;
      v36 = 2;
      sub_2331A6BA8();
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v3);
      return sub_23316BEA4((uint64_t)v28, v30);
    }
    v31 = v27;
    sub_23361D1B4();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v3);
}

void sub_2331E815C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  InternalInstitutionQuery.init(from:)(a1, a2);
}

uint64_t sub_2331E8170(_QWORD *a1)
{
  return InternalInstitutionQuery.encode(to:)(a1);
}

unint64_t sub_2331E8184()
{
  unint64_t result;

  result = qword_256045000;
  if (!qword_256045000)
  {
    result = MEMORY[0x234934494](&unk_23362B1C4, &type metadata for InternalInstitutionQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045000);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalInstitutionQuery()
{
  return &type metadata for InternalInstitutionQuery;
}

uint64_t storeEnumTagSinglePayload for InternalInstitutionQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2331E8224 + 4 * byte_23362B015[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2331E8258 + 4 * byte_23362B010[v4]))();
}

uint64_t sub_2331E8258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331E8260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2331E8268);
  return result;
}

uint64_t sub_2331E8274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2331E827CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2331E8280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2331E8288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalInstitutionQuery.CodingKeys()
{
  return &type metadata for InternalInstitutionQuery.CodingKeys;
}

unint64_t sub_2331E82A8()
{
  unint64_t result;

  result = qword_256045028;
  if (!qword_256045028)
  {
    result = MEMORY[0x234934494](&unk_23362B19C, &type metadata for InternalInstitutionQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045028);
  }
  return result;
}

unint64_t sub_2331E82F0()
{
  unint64_t result;

  result = qword_256045030;
  if (!qword_256045030)
  {
    result = MEMORY[0x234934494](&unk_23362B0D4, &type metadata for InternalInstitutionQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045030);
  }
  return result;
}

unint64_t sub_2331E8338()
{
  unint64_t result;

  result = qword_256045038;
  if (!qword_256045038)
  {
    result = MEMORY[0x234934494](&unk_23362B0FC, &type metadata for InternalInstitutionQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256045038);
  }
  return result;
}

uint64_t sub_2331E837C()
{
  unint64_t v0;

  v0 = sub_23361EF9C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t static ManagedInstitutionMatchingResponseError.== infix(_:_:)()
{
  return 1;
}

uint64_t ManagedInstitutionMatchingResponseError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t ManagedInstitutionMatchingResponseError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

void sub_2331E8430(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_expiration);
  sub_23361D5EC();

}

void sub_2331E847C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_passSerial);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_2331E84D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_institutionsResponseData);
  v4 = sub_23361D3C4();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

char *ManagedInstitutionMatchingResponse.__allocating_init(passSerial:institutionsResponseWithExpiration:context:)(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4)
{
  objc_class *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045040);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration(0);
  sub_23319F164((uint64_t)a3 + *(int *)(v16 + 20), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17 = objc_msgSend(objc_allocWithZone(v4), sel_initWithContext_, a4);
    v39 = a4;
    v40 = v15;
    v18 = a3;
    v19 = *a3;
    swift_bridgeObjectRetain();
    v11 = (char *)v17;
    v20 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setPassSerial_, v20);

    sub_23361CB00();
    swift_allocObject();
    sub_23361CAF4();
    v43 = v19;
    sub_2331E8968();
    v21 = v42;
    v22 = sub_23361CAE8();
    if (v21)
    {

      swift_release();
      sub_233168500((uint64_t)a3, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v12);

      swift_bridgeObjectRelease();
      return v11;
    }
    v25 = v22;
    v26 = v23;
    v42 = (uint64_t)v18;
    swift_release();
    v27 = (void *)sub_23361D3AC();
    sub_23316BEA4(v25, v26);
    objc_msgSend(v11, sel_setInstitutionsResponseData_, v27);

    v28 = v40;
    v29 = (void *)sub_23361D5B0();
    objc_msgSend(v11, sel_setExpiration_, v29);

    if (v19)
    {
      v30 = *(_QWORD *)(v19 + 16);
      v31 = type metadata accessor for RawBankConnectData.Institution(0);
      v32 = *(_QWORD *)(v31 - 8);
      if (v30)
      {
        v33 = v41;
        sub_2331E89AC(v19 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)), v41);
        v34 = 0;
      }
      else
      {
        v34 = 1;
        v33 = v41;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, v34, 1, v31);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v31) != 1)
      {
        v36 = *(_BYTE *)(v33 + *(int *)(v31 + 44));
        sub_233168500(v33, type metadata accessor for RawBankConnectData.Institution);
        v35 = v36 & 1;
        goto LABEL_14;
      }
      sub_233168608(v33, &qword_256045040);
    }
    v35 = 0;
LABEL_14:
    v37 = v42;
    v38 = v39;
    objc_msgSend(v11, sel_setLinkable_, v35);

    sub_233168500(v37, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);

    return v11;
  }
  swift_bridgeObjectRelease();
  sub_233168608((uint64_t)v11, (uint64_t *)&unk_254247DA0);
  sub_2331E8924();
  swift_allocError();
  swift_willThrow();

  sub_233168500((uint64_t)a3, type metadata accessor for RawBankConnectData.InstitutionsResponseWithExpiration);
  return v11;
}

unint64_t sub_2331E8924()
{
  unint64_t result;

  result = qword_256045048;
  if (!qword_256045048)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for ManagedInstitutionMatchingResponseError, &type metadata for ManagedInstitutionMatchingResponseError);
    atomic_store(result, (unint64_t *)&qword_256045048);
  }
  return result;
}

unint64_t sub_2331E8968()
{
  unint64_t result;

  result = qword_256045050;
  if (!qword_256045050)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InstitutionsResponse, &type metadata for RawBankConnectData.InstitutionsResponse);
    atomic_store(result, (unint64_t *)&qword_256045050);
  }
  return result;
}

uint64_t sub_2331E89AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawBankConnectData.Institution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id ManagedInstitutionMatchingResponse.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInstitutionMatchingResponse.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInstitutionMatchingResponse.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ManagedInstitutionMatchingResponse.institutionsResponse.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  v1 = objc_msgSend(v0, sel_institutionsResponseData);
  v2 = sub_23361D3C4();
  v4 = v3;

  sub_2331E8BF4();
  sub_23361CA58();
  sub_23316BEA4(v2, v4);
  return swift_release();
}

unint64_t sub_2331E8BF4()
{
  unint64_t result;

  result = qword_256045058;
  if (!qword_256045058)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.InstitutionsResponse, &type metadata for RawBankConnectData.InstitutionsResponse);
    atomic_store(result, (unint64_t *)&qword_256045058);
  }
  return result;
}

id static ManagedInstitutionMatchingResponse.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit34ManagedInstitutionMatchingResponse;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

uint64_t static ManagedInstitutionMatchingResponse.predicateForResponses(expiredOnOrBefore:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D5B0();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_254246F78);
  *(_QWORD *)(v0 + 64) = sub_2331E8D34();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

unint64_t sub_2331E8D34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254246F80;
  if (!qword_254246F80)
  {
    v1 = sub_233168668(255, &qword_254246F78);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_254246F80);
  }
  return result;
}

uint64_t static ManagedInstitutionMatchingResponse.predicate(passSerial:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return sub_23361E6B4();
}

uint64_t static ManagedInstitutionMatchingResponse.predicate(passSerial:expiration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D50;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_2331683F0();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23361D5B0();
  *(_QWORD *)(v4 + 96) = sub_233168668(0, &qword_254246F78);
  *(_QWORD *)(v4 + 104) = sub_2331E8D34();
  *(_QWORD *)(v4 + 72) = v5;
  return sub_23361E6B4();
}

unint64_t static ManagedInstitutionMatchingResponse.existingResponse(passSerial:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit34ManagedInstitutionMatchingResponse;
  v7 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInstitutionMatchingResponse.danglingResponses(for:in:)(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  v9.receiver = (id)swift_getObjCClassFromMetadata();
  v9.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit34ManagedInstitutionMatchingResponse;
  v2 = objc_msgSendSuper2(&v9, sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(v4 + 64) = sub_233190AD0();
  *(_QWORD *)(v4 + 32) = a1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v3 + 32) = sub_23361E6B4();
  sub_23361E408();
  v5 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v5);

  objc_msgSend(v2, sel_setPredicate_, v6);
  v7 = sub_23361E984();

  return v7;
}

uint64_t static ManagedInstitutionMatchingResponse.notExpiredResponses(for:now:in:)(uint64_t a1)
{
  return sub_2331E9AD4(a1);
}

uint64_t static ManagedInstitutionMatchingResponse.notExpiredResponses(now:in:)()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  objc_super v6;

  v6.receiver = (id)swift_getObjCClassFromMetadata();
  v6.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit34ManagedInstitutionMatchingResponse;
  v0 = objc_msgSendSuper2(&v6, sel_fetchRequest);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_233623D60;
  v2 = sub_23361D5B0();
  *(_QWORD *)(v1 + 56) = sub_233168668(0, &qword_254246F78);
  *(_QWORD *)(v1 + 64) = sub_2331E8D34();
  *(_QWORD *)(v1 + 32) = v2;
  v3 = (void *)sub_23361E6B4();
  objc_msgSend(v0, sel_setPredicate_, v3);

  v4 = sub_23361E984();
  return v4;
}

uint64_t ManagedInstitutionMatchingResponse.description.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD v25[2];

  v1 = v0;
  v2 = sub_23361D634();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045040);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawBankConnectData.Institution(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  strcpy((char *)v25, "pass serial:\t");
  HIWORD(v25[1]) = -4864;
  v12 = objc_msgSend(v0, sel_passSerial);
  sub_23361E150();

  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361CA70();
  swift_allocObject();
  sub_23361CA64();
  v13 = objc_msgSend(v1, sel_institutionsResponseData);
  v14 = sub_23361D3C4();
  v16 = v15;

  sub_2331E8BF4();
  sub_23361CA58();
  sub_23316BEA4(v14, v16);
  swift_release();
  if (!v24[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_7:
    sub_233168608((uint64_t)v7, &qword_256045040);
    sub_23361E27C();
    goto LABEL_11;
  }
  if (*(_QWORD *)(v24[0] + 16))
  {
    sub_2331E89AC(v24[0] + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v7);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v17, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_7;
  sub_2331E9D74((uint64_t)v7, (uint64_t)v11);
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  sub_23361ED98();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "Institution:\t");
  HIWORD(v24[1]) = -4864;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  if (v11[*(int *)(v8 + 44)] != 2)
  {
    strcpy((char *)v24, "linkable:\t");
    BYTE3(v24[1]) = 0;
    HIDWORD(v24[1]) = -369098752;
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    sub_23361E27C();
    swift_bridgeObjectRelease();
  }
  sub_233168500((uint64_t)v11, type metadata accessor for RawBankConnectData.Institution);
LABEL_11:
  strcpy((char *)v24, "expiration:\t");
  BYTE5(v24[1]) = 0;
  HIWORD(v24[1]) = -5120;
  v18 = objc_msgSend(v1, sel_expiration);
  sub_23361D5EC();

  sub_2331E9D2C();
  v19 = v23;
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v19);
  sub_23361E27C();
  swift_bridgeObjectRelease();
  return v25[0];
}

uint64_t sub_2331E9AD4(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  objc_super v11;
  uint64_t v12;

  type metadata accessor for ManagedInstitutionMatchingResponse();
  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit34ManagedInstitutionMatchingResponse;
  v2 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(v4 + 64) = sub_233190AD0();
  *(_QWORD *)(v4 + 32) = a1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v3 + 32) = sub_23361E6B4();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233623D60;
  v6 = sub_23361D5B0();
  *(_QWORD *)(v5 + 56) = sub_233168668(0, &qword_254246F78);
  *(_QWORD *)(v5 + 64) = sub_2331E8D34();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v3 + 40) = sub_23361E6B4();
  v12 = v3;
  sub_23361E408();
  v7 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v7);

  objc_msgSend(v2, sel_setPredicate_, v8);
  v9 = sub_23361E984();

  return v9;
}

