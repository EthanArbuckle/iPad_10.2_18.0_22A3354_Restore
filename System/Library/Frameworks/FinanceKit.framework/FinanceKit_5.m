void _s10FinanceKit21CoreAnalyticsProviderC9sendEventyyAA0dG0_pF_0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD aBlock[6];
  __int128 v8[2];

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v4 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  sub_233177068((uint64_t)a1, (uint64_t)v8);
  v5 = swift_allocObject();
  sub_23318B020(v8, v5 + 16);
  aBlock[4] = sub_233405A4C;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233405718;
  aBlock[3] = &block_descriptor_7;
  v6 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);

}

uint64_t _s10FinanceKit21CoreAnalyticsProviderC10sendEventsyySayAA0D5Event_pGF_0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[6];
  __int128 v10[2];

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = (_QWORD *)(result + 32);
    swift_bridgeObjectRetain();
    v3 = MEMORY[0x24BDAC760];
    do
    {
      v4 = v2[3];
      v5 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v4);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      v6 = (void *)sub_23361E12C();
      swift_bridgeObjectRelease();
      sub_233177068((uint64_t)v2, (uint64_t)v10);
      v7 = swift_allocObject();
      sub_23318B020(v10, v7 + 16);
      aBlock[4] = sub_233405A4C;
      aBlock[5] = v7;
      aBlock[0] = v3;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_233405718;
      aBlock[3] = &block_descriptor_12;
      v8 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v8);

      v2 += 5;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t dispatch thunk of CoreAnalyticsProviding.sendEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CoreAnalyticsProviding.sendEvents(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for CoreAnalyticsProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreAnalyticsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreAnalyticsProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_233405A28()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_233405A58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t BankConnectPassKitTransactionsDataSource.__allocating_init(paymentService:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t BankConnectPassKitTransactionsDataSource.init(paymentService:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t BankConnectPassKitTransactionsDataSource.transactions(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_233405AFC()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (void *)v0[16];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED98]), sel_init);
  v0[18] = v2;
  v3 = objc_msgSend(v1, sel_deviceTransactionSourceIdentifiers);
  if (v3)
  {
    sub_23361E5DC();

    v3 = (id)sub_23361E5B8();
    swift_bridgeObjectRelease();
  }
  v4 = v0[17];
  objc_msgSend(v2, sel_setTransactionSourceIdentifiers_, v3);

  v5 = *(void **)(v4 + 16);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_233405C4C;
  v6 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v7 = v0 + 10;
  v7[1] = 0x40000000;
  v7[2] = sub_233405CE0;
  v7[3] = &block_descriptor_13;
  v7[4] = v6;
  objc_msgSend(v5, sel_transactionsForRequest_completion_, v2, v7);
  return swift_continuation_await();
}

uint64_t sub_233405C4C()
{
  return swift_task_switch();
}

uint64_t sub_233405C98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);

  if (v2)
    v3 = v2;
  else
    v3 = MEMORY[0x24BEE4AF8];
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_233405CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    sub_233405EDC();
    v3 = sub_23361E3F0();
  }
  else
  {
    v3 = 0;
  }
  v5 = v3;
  sub_233405E94((uint64_t)&v5, *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t BankConnectPassKitTransactionsDataSource.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BankConnectPassKitTransactionsDataSource.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_233405D84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318B35C;
  v5[16] = a1;
  v5[17] = v4;
  return swift_task_switch();
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsDataSourceProtocol.transactions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2332913DC;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for BankConnectPassKitTransactionsDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectPassKitTransactionsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsDataSource.__allocating_init(paymentService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_233405E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604E8C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_233405EDC()
{
  unint64_t result;

  result = qword_25604E8C8;
  if (!qword_25604E8C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25604E8C8);
  }
  return result;
}

uint64_t ImageProcessingService.__allocating_init()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v1 = (void *)sub_23361E12C();
  v2 = objc_msgSend(v0, sel_initWithServiceName_, v1);

  type metadata accessor for XPCEntitlementChecker();
  v3 = swift_allocObject();
  v4 = sub_233166A64(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542468A0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v3 + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256049C90);
  v6 = swift_allocObject();
  v7 = sub_2332FDC8C(v2, v3, v6);

  type metadata accessor for ImageProcessingService();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  objc_msgSend(*(id *)(v7 + 16), sel_resume);
  return v8;
}

uint64_t ImageProcessingService.__allocating_init(connection:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  objc_msgSend(*(id *)(a1 + 16), sel_resume);
  return v2;
}

uint64_t ImageProcessingService.init(connection:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  objc_msgSend(*(id *)(a1 + 16), sel_resume);
  return v1;
}

uint64_t ImageProcessingService.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ImageProcessingService.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

CGColorRef ImageProcessingService.backgroundColor(forImageWithData:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  BOOL v7;
  CGColorRef v8;

  sub_2331D1374(a1, a2);
  v5 = swift_retain();
  v6 = (void *)sub_2332D97B4(v5, a1, a2);
  sub_23316BEA4(a1, a2);
  swift_release();
  if (v2)
    v7 = 1;
  else
    v7 = v6 == 0;
  if (v7)
    return 0;
  v8 = sub_23326BA3C();

  return v8;
}

uint64_t ImageProcessingService.renderThumbnail(with:size:scale:options:)(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __int128 v15;
  double v16;
  double v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *((_BYTE *)a2 + 9);
  v9 = *((_BYTE *)a2 + 10);
  v10 = a2[2];
  v11 = *((_BYTE *)a2 + 24);
  *(_QWORD *)&v15 = a1;
  *((double *)&v15 + 1) = a3;
  v16 = a4;
  v17 = a5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v23 = v11;
  swift_bridgeObjectRetain();
  v12 = swift_retain();
  sub_2332D8B38(v12, &v15, &v14);
  result = swift_release();
  if (!v5)
    return v14;
  return result;
}

uint64_t sub_233406204(void **a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  void *v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  _QWORD v19[6];
  objc_super v20;

  v7 = *a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (objc_class *)type metadata accessor for ThumbnailConfiguration.XPC();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = &v10[OBJC_IVAR___XPCThumbnailConfiguration_value];
  v12 = *(_OWORD *)((char *)a4 + 41);
  v14 = a4[1];
  v13 = a4[2];
  *(_OWORD *)v11 = *a4;
  *((_OWORD *)v11 + 1) = v14;
  *((_OWORD *)v11 + 2) = v13;
  *(_OWORD *)(v11 + 41) = v12;
  sub_2334065C0((uint64_t)a4);
  v20.receiver = v10;
  v20.super_class = v9;
  v15 = objc_msgSendSuper2(&v20, sel_init);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_23340658C;
  *(_QWORD *)(v16 + 24) = v8;
  v19[4] = sub_2331683B0;
  v19[5] = v16;
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 1107296256;
  v19[2] = sub_233406398;
  v19[3] = &block_descriptor_14;
  v17 = _Block_copy(v19);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_renderThumbnailUsing_completion_, v15, v17);

  _Block_release(v17);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_233406398(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = (uint64_t)a2;
  v5 = *(void (**)(uint64_t, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    v6 = a2;
    v4 = sub_23361D3C4();
    v8 = v7;

  }
  else
  {
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  return sub_2331B04E8(v4, v8);
}

CGColorRef sub_233406418(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  BOOL v7;
  CGColorRef v8;

  sub_2331D1374(a1, a2);
  v5 = swift_retain();
  v6 = (void *)sub_2332D97B4(v5, a1, a2);
  sub_23316BEA4(a1, a2);
  swift_release();
  if (v2)
    v7 = 1;
  else
    v7 = v6 == 0;
  if (v7)
    return 0;
  v8 = sub_23326BA3C();

  return v8;
}

uint64_t sub_2334064B4(uint64_t a1, uint64_t *a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __int128 v15;
  double v16;
  double v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *((_BYTE *)a2 + 9);
  v9 = *((_BYTE *)a2 + 10);
  v10 = a2[2];
  v11 = *((_BYTE *)a2 + 24);
  *(_QWORD *)&v15 = a1;
  *((double *)&v15 + 1) = a3;
  v16 = a4;
  v17 = a5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v23 = v11;
  swift_bridgeObjectRetain();
  v12 = swift_retain();
  sub_2332D8B38(v12, &v15, &v14);
  result = swift_release();
  if (!v5)
    return v14;
  return result;
}

uint64_t type metadata accessor for ImageProcessingService()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImageProcessingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImageProcessingService.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23340657C()
{
  return swift_deallocObject();
}

uint64_t sub_23340658C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t);
  _QWORD v6[2];

  v4 = *(uint64_t (**)(_QWORD *, uint64_t))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  return v4(v6, a3);
}

uint64_t sub_2334065C0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2334065E8()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t ManagedMapsMerchantImporter.__allocating_init()()
{
  return swift_allocObject();
}

id ManagedMapsMerchantImporter.addOrUpdateMerchant(_:in:)(uint64_t *a1, void *a2)
{
  return sub_233406644(a1, a2);
}

uint64_t ManagedMapsMerchantImporter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedMapsMerchantImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedMapsMerchantImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_233406644(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v5 = type metadata accessor for MapsMerchant();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  v11 = (id)type metadata accessor for ManagedMapsMerchant();
  v12 = (void *)static ManagedMapsMerchant.merchant(withMUID:in:)(*a1, (uint64_t)a2);
  if (!v2)
  {
    if (v12)
    {
      v11 = v12;
      sub_2335DDFE0((uint64_t)a1, v11);
      sub_23330C298((uint64_t)a1);

    }
    else
    {
      sub_2331EB3A0((uint64_t)a1, (uint64_t)v10);
      v13 = objc_allocWithZone((Class)v11);
      sub_2331EB3A0((uint64_t)v10, (uint64_t)v8);
      v11 = sub_23330CA6C(v8, a2, v13);
      sub_23330C298((uint64_t)v10);

      sub_2331EB3E4((uint64_t)v10);
    }
  }
  return v11;
}

uint64_t type metadata accessor for ManagedMapsMerchantImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedMapsMerchantImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedMapsMerchantImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_2334067AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v3 = type metadata accessor for RawOrderFulfillment();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v16[1] = v1;
    v17 = MEMORY[0x24BEE4AF8];
    sub_233273E68(0, v7, 0);
    v8 = v17;
    v9 = (unint64_t *)(a1 + 32);
    do
    {
      v11 = *v9++;
      v10 = v11;
      if ((v11 & 0x8000000000000000) != 0)
      {
        v12 = (id)(v10 & 0x7FFFFFFFFFFFFFFFLL);
        ManagedOrderPickupFulfillment.rawOrderPickupFulfillment.getter((uint64_t)v6);
      }
      else
      {
        v12 = (id)v10;
        ManagedOrderShippingFulfillment.rawOrderShippingFulfillment.getter((uint64_t)v6);
      }
      swift_storeEnumTagMultiPayload();

      v17 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_233273E68(v13 > 1, v14 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      sub_233168580((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_233406920(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for RawOrderReturn();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    if (!v8)
      return v9;
    v18 = MEMORY[0x24BEE4AF8];
    result = sub_233273E3C(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v11 = 0;
    v9 = v18;
    v16 = v2;
    v17 = a1 & 0xC000000000000001;
    v12 = a1;
    while (v8 != v11)
    {
      if (v17)
        v13 = (id)MEMORY[0x234933120](v11, a1);
      else
        v13 = *(id *)(a1 + 8 * v11 + 32);
      v14 = v13;
      ManagedOrderReturn.rawOrderReturn.getter((uint64_t)v7);

      v18 = v9;
      v2 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_233273E3C(v15 > 1, v2 + 1, 1);
        v9 = v18;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v2 + 1;
      sub_233168580((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v2, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      a1 = v12;
      if (v8 == v11)
        return v9;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_233406AD8(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  id v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  __int16 v32;
  __int16 v33[7];
  unsigned __int8 v34;

  if (a1)
  {
    ManagedECommerceOrderContent.status.getter(v33);
    if (LOBYTE(v33[0]) == 1)
      v6 = 1;
    else
      v6 = 2;
    if (LOBYTE(v33[0]))
      v7 = v6;
    else
      v7 = 0;
  }
  else
  {
    v7 = 3;
  }
  ManagedECommerceOrderContent.status.getter(&v34);
  sub_23339C15C(v7, v34, v33);
  v8 = (unsigned __int16)v33[0];
  if (a1)
  {
    v9 = a1;
    v10 = ManagedECommerceOrderContent.shippingFulfillments.getter();
    v11 = (_QWORD *)sub_2331A6FB8(v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)v33 = v11;
    v12 = ManagedECommerceOrderContent.pickupFulfillments.getter();
    v13 = sub_2331A70F4(v12);
    swift_bridgeObjectRelease();
    sub_2331896C8(v13);
    sub_2331A8628((_QWORD **)v33);

    v14 = sub_2334067AC(*(uint64_t *)v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v16 = (_QWORD *)sub_2331A6FB8(v15);
  swift_bridgeObjectRelease();
  *(_QWORD *)v33 = v16;
  v17 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v18 = sub_2331A70F4(v17);
  swift_bridgeObjectRelease();
  sub_2331896C8(v18);
  sub_2331A8628((_QWORD **)v33);
  v19 = sub_2334067AC(*(uint64_t *)v33);
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_23322D5F4(v14, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = 0;
      v14 = 1;
    }
  }
  HIDWORD(v31) = v8;
  if (a1)
  {
    v21 = a1;
    v22 = ManagedECommerceOrderContent.returns.getter();

    v23 = sub_233406920(v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = ManagedECommerceOrderContent.returns.getter();
  v25 = sub_233406920(v24);
  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_23322D5E0(v23, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = 0;
      v23 = 1;
    }
  }
  if (a1)
  {
    v27 = objc_msgSend(a1, sel_payment);
    if (v27)
    {
      v28 = v27;
      ManagedOrderPayment.status.getter((char *)v33);

      __asm { BR              X10 }
    }
  }
  LODWORD(v31) = 6;
  v29 = objc_msgSend(a2, sel_payment, v31);
  if (v29)
  {
    v30 = v29;
    ManagedOrderPayment.status.getter((char *)v33);

    __asm { BR              X10 }
  }

  *(_WORD *)a3 = v32;
  *(_QWORD *)(a3 + 8) = v14;
  *(_QWORD *)(a3 + 16) = v19;
  *(_QWORD *)(a3 + 24) = v23;
  *(_QWORD *)(a3 + 32) = v25;
  *(_WORD *)(a3 + 40) = 7;
}

void sub_233406E94()
{
  JUMPOUT(0x233406E18);
}

void sub_233406EA0()
{
  JUMPOUT(0x233406E18);
}

void sub_233406EAC()
{
  JUMPOUT(0x233406E18);
}

void sub_233406EB8()
{
  JUMPOUT(0x233406E18);
}

void sub_233406EC4()
{
  JUMPOUT(0x233406DC0);
}

void sub_233406ED4()
{
  JUMPOUT(0x233406DC0);
}

void sub_233406EE4()
{
  JUMPOUT(0x233406DC0);
}

void sub_233406EF4()
{
  JUMPOUT(0x233406DC0);
}

void OrderChanges.status.getter(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

uint64_t OrderChanges.fulfillments.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_233321AD0(v2);
}

uint64_t OrderChanges.returns.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_233321AD0(v2);
}

void OrderChanges.paymentStatus.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 40);
}

uint64_t destroy for OrderChanges(uint64_t a1)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + 24);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OrderChanges(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 == 1)
  {
    *v4 = *(_OWORD *)(a2 + 8);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 24);
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for OrderChanges(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (v5 == 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 1)
  {
    sub_233168608((uint64_t)v4, &qword_25604A488);
LABEL_6:
    *v4 = *v7;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    if (v8 != 1)
    {
      *(_QWORD *)(a1 + 24) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_233168608(a1 + 24, &qword_25604A490);
    goto LABEL_13;
  }
  if (v8 == 1)
  {
LABEL_13:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_15:
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OrderChanges(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  if (v5 == 1)
  {
    sub_233168608((uint64_t)v4, &qword_25604A488);
LABEL_4:
    *v4 = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_233168608(a1 + 24, &qword_25604A490);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_11:
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderChanges(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for OrderChanges(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderChanges()
{
  return &type metadata for OrderChanges;
}

uint64_t sub_2334073A0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6E65736E6F636572;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x746E65736E6F63;
}

uint64_t sub_233407404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233408F18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233407428()
{
  sub_233407A5C();
  return sub_23361F428();
}

uint64_t sub_233407450()
{
  sub_233407A5C();
  return sub_23361F434();
}

uint64_t sub_233407478()
{
  sub_233407B28();
  return sub_23361F428();
}

uint64_t sub_2334074A0()
{
  sub_233407B28();
  return sub_23361F434();
}

unint64_t sub_2334074C8()
{
  return 0xD000000000000013;
}

uint64_t sub_2334074E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233409074(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23340750C()
{
  sub_233407AA0();
  return sub_23361F428();
}

uint64_t sub_233407534()
{
  sub_233407AA0();
  return sub_23361F434();
}

unint64_t sub_23340755C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_233407578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334090F8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2334075A0()
{
  sub_233407AE4();
  return sub_23361F428();
}

uint64_t sub_2334075C8()
{
  sub_233407AE4();
  return sub_23361F434();
}

uint64_t BankConnectAuthorizationConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA08);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA10);
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D6A0();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - v8;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA18);
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BankConnectAuthorizationConfiguration();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA20);
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233407A5C();
  sub_23361F410();
  sub_2331684BC(v44, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v48 = 0;
      sub_233407B28();
      v32 = v46;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v32);
    }
    v20 = v42;
    v21 = v36;
    v22 = v15;
    v23 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v36, v22, v43);
    v50 = 2;
    sub_233407AA0();
    v24 = v39;
    v25 = v46;
    sub_23361F0C8();
    sub_233408110(&qword_25604D960, MEMORY[0x24BDCEA70]);
    v26 = v41;
    v27 = v47;
    sub_23361F17C();
    if (!v27)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v26);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v25);
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v26);
    v9 = v21;
  }
  else
  {
    v28 = v35;
    v20 = v42;
    v29 = v15;
    v23 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v9, v29, v43);
    v49 = 1;
    sub_233407AE4();
    v30 = v37;
    v25 = v46;
    sub_23361F0C8();
    sub_233408110(&qword_25604D960, MEMORY[0x24BDCEA70]);
    v31 = v38;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v31);
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v25);
}

uint64_t type metadata accessor for BankConnectAuthorizationConfiguration()
{
  uint64_t result;

  result = qword_25604EAF0;
  if (!qword_25604EAF0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_233407A5C()
{
  unint64_t result;

  result = qword_25604EA28;
  if (!qword_25604EA28)
  {
    result = MEMORY[0x234934494](&unk_233646AB4, &type metadata for BankConnectAuthorizationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EA28);
  }
  return result;
}

unint64_t sub_233407AA0()
{
  unint64_t result;

  result = qword_25604EA30;
  if (!qword_25604EA30)
  {
    result = MEMORY[0x234934494](&unk_233646A64, &type metadata for BankConnectAuthorizationConfiguration.MismatchedAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EA30);
  }
  return result;
}

unint64_t sub_233407AE4()
{
  unint64_t result;

  result = qword_25604EA38;
  if (!qword_25604EA38)
  {
    result = MEMORY[0x234934494](&unk_233646A14, &type metadata for BankConnectAuthorizationConfiguration.ReconsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EA38);
  }
  return result;
}

unint64_t sub_233407B28()
{
  unint64_t result;

  result = qword_25604EA40;
  if (!qword_25604EA40)
  {
    result = MEMORY[0x234934494](&unk_2336469C4, &type metadata for BankConnectAuthorizationConfiguration.ConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EA40);
  }
  return result;
}

uint64_t BankConnectAuthorizationConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA48);
  v4 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v58 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA50);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA58);
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EA60);
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BankConnectAuthorizationConfiguration();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v49 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - v19;
  v21 = a1[3];
  v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_233407A5C();
  v22 = v11;
  v23 = v66;
  sub_23361F3EC();
  if (v23)
    goto LABEL_9;
  v25 = v61;
  v24 = v62;
  v50 = v15;
  v51 = v18;
  v52 = v20;
  v66 = v12;
  v27 = v63;
  v26 = v64;
  v28 = v22;
  v29 = sub_23361F098();
  if (*(_QWORD *)(v29 + 16) != 1)
  {
    v37 = v27;
    v38 = sub_23361EE10();
    swift_allocError();
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v40 = v66;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, *MEMORY[0x24BEE26D0], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v37);
LABEL_9:
    v34 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_0(v34);
  }
  v30 = v22;
  v31 = v25;
  if (*(_BYTE *)(v29 + 32))
  {
    if (*(_BYTE *)(v29 + 32) == 1)
    {
      v68 = 1;
      sub_233407AE4();
      v32 = v60;
      sub_23361EFA8();
      sub_23361D6A0();
      sub_233408110(&qword_256042350, MEMORY[0x24BDCEAA8]);
      v33 = v56;
      sub_23361F068();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v27);
      v34 = (uint64_t)v65;
      v35 = (uint64_t)v51;
      swift_storeEnumTagMultiPayload();
      v36 = v35;
    }
    else
    {
      v69 = 2;
      sub_233407AA0();
      v41 = v26;
      v42 = v28;
      sub_23361EFA8();
      sub_23361D6A0();
      sub_233408110(&qword_256042350, MEMORY[0x24BDCEAA8]);
      v45 = (uint64_t)v50;
      v46 = v41;
      v47 = v27;
      v48 = v57;
      sub_23361F068();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v42, v47);
      v34 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      v36 = v45;
    }
    v44 = (uint64_t)v52;
    sub_233168580(v36, (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
  }
  else
  {
    v67 = 0;
    sub_233407B28();
    sub_23361EFA8();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v54);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v27);
    v44 = (uint64_t)v52;
    swift_storeEnumTagMultiPayload();
    v34 = (uint64_t)v65;
  }
  sub_233168580(v44, v59, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
  return __swift_destroy_boxed_opaque_existential_0(v34);
}

uint64_t sub_233408110(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23361D6A0();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233408150@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankConnectAuthorizationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_233408164(_QWORD *a1)
{
  return BankConnectAuthorizationConfiguration.encode(to:)(a1);
}

uint64_t BankConnectService.initiateConnectionAuthorization(for:fpanID:authorizationConfiguration:authorizationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v7 + 168) = a6;
  *(_QWORD *)(v7 + 112) = a5;
  *(_QWORD *)(v7 + 120) = v6;
  *(_QWORD *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 104) = a4;
  *(_QWORD *)(v7 + 80) = a1;
  *(_QWORD *)(v7 + 88) = a2;
  type metadata accessor for BankConnectAuthorizationSession();
  *(_QWORD *)(v7 + 128) = swift_task_alloc();
  *(_QWORD *)(v7 + 136) = type metadata accessor for BankConnectService.Message();
  *(_QWORD *)(v7 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233408200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_WORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25604EA70);
  v8 = (_QWORD *)(v1 + v7[12]);
  v9 = v1 + v7[16];
  v10 = v7[20];
  sub_2331684BC(v6, v1, type metadata accessor for Institution);
  *v8 = v5;
  v8[1] = v4;
  sub_2331684BC(v2, v9, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
  *(_WORD *)(v1 + v10) = v3;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2334082DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[19];
  v0[7] = v0[16];
  v0[2] = v0;
  v0[3] = sub_233408340;
  v2 = swift_continuation_init();
  sub_233298A9C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_233408340()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 160) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 144);
    sub_233168580(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 80), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationSession);
    sub_233168500(v4, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2334083F8()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectService.Message);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23340844C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_2331676FC;
  return BankConnectService.initiateConnectionAuthorization(for:fpanID:authorizationConfiguration:authorizationSource:)(a1, a2, a3, a4, a5, a6);
}

uint64_t *initializeBufferWithCopyOfBuffer for BankConnectAuthorizationConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BankConnectAuthorizationConfiguration(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_23361D6A0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for BankConnectAuthorizationConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for BankConnectAuthorizationConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23361D6A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for BankConnectAuthorizationConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23361D6A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for BankConnectAuthorizationConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23361D6A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_233408958()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D6A0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of BankConnectConnectionAuthorizationInitiating.initiateConnectionAuthorization(for:fpanID:authorizationConfiguration:authorizationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 8) + *(_QWORD *)(a8 + 8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_2331676FC;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t storeEnumTagSinglePayload for BankConnectAuthorizationConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233408AC0 + 4 * byte_2336465F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233408AF4 + 4 * asc_2336465F0[v4]))();
}

uint64_t sub_233408AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233408AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233408B04);
  return result;
}

uint64_t sub_233408B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233408B18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233408B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233408B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationConfiguration.CodingKeys()
{
  return &type metadata for BankConnectAuthorizationConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationConfiguration.ConsentCodingKeys()
{
  return &type metadata for BankConnectAuthorizationConfiguration.ConsentCodingKeys;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationConfiguration.ReconsentCodingKeys()
{
  return &type metadata for BankConnectAuthorizationConfiguration.ReconsentCodingKeys;
}

uint64_t _s10FinanceKit37BankConnectAuthorizationConfigurationO19ReconsentCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233408BA4 + 4 * byte_2336465FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233408BC4 + 4 * byte_2336465FF[v4]))();
}

_BYTE *sub_233408BA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233408BC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233408BCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233408BD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233408BDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233408BE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectAuthorizationConfiguration.MismatchedAccountCodingKeys()
{
  return &type metadata for BankConnectAuthorizationConfiguration.MismatchedAccountCodingKeys;
}

unint64_t sub_233408C04()
{
  unint64_t result;

  result = qword_25604EB30;
  if (!qword_25604EB30)
  {
    result = MEMORY[0x234934494](&unk_2336467DC, &type metadata for BankConnectAuthorizationConfiguration.MismatchedAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB30);
  }
  return result;
}

unint64_t sub_233408C4C()
{
  unint64_t result;

  result = qword_25604EB38;
  if (!qword_25604EB38)
  {
    result = MEMORY[0x234934494](&unk_233646894, &type metadata for BankConnectAuthorizationConfiguration.ReconsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB38);
  }
  return result;
}

unint64_t sub_233408C94()
{
  unint64_t result;

  result = qword_25604EB40;
  if (!qword_25604EB40)
  {
    result = MEMORY[0x234934494](&unk_23364699C, &type metadata for BankConnectAuthorizationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB40);
  }
  return result;
}

unint64_t sub_233408CDC()
{
  unint64_t result;

  result = qword_25604EB48;
  if (!qword_25604EB48)
  {
    result = MEMORY[0x234934494](&unk_2336468BC, &type metadata for BankConnectAuthorizationConfiguration.ConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB48);
  }
  return result;
}

unint64_t sub_233408D24()
{
  unint64_t result;

  result = qword_25604EB50;
  if (!qword_25604EB50)
  {
    result = MEMORY[0x234934494](&unk_2336468E4, &type metadata for BankConnectAuthorizationConfiguration.ConsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB50);
  }
  return result;
}

unint64_t sub_233408D6C()
{
  unint64_t result;

  result = qword_25604EB58;
  if (!qword_25604EB58)
  {
    result = MEMORY[0x234934494](&unk_233646804, &type metadata for BankConnectAuthorizationConfiguration.ReconsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB58);
  }
  return result;
}

unint64_t sub_233408DB4()
{
  unint64_t result;

  result = qword_25604EB60;
  if (!qword_25604EB60)
  {
    result = MEMORY[0x234934494](&unk_23364682C, &type metadata for BankConnectAuthorizationConfiguration.ReconsentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB60);
  }
  return result;
}

unint64_t sub_233408DFC()
{
  unint64_t result;

  result = qword_25604EB68;
  if (!qword_25604EB68)
  {
    result = MEMORY[0x234934494](&unk_23364674C, &type metadata for BankConnectAuthorizationConfiguration.MismatchedAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB68);
  }
  return result;
}

unint64_t sub_233408E44()
{
  unint64_t result;

  result = qword_25604EB70;
  if (!qword_25604EB70)
  {
    result = MEMORY[0x234934494](&unk_233646774, &type metadata for BankConnectAuthorizationConfiguration.MismatchedAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB70);
  }
  return result;
}

unint64_t sub_233408E8C()
{
  unint64_t result;

  result = qword_25604EB78;
  if (!qword_25604EB78)
  {
    result = MEMORY[0x234934494](&unk_23364690C, &type metadata for BankConnectAuthorizationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB78);
  }
  return result;
}

unint64_t sub_233408ED4()
{
  unint64_t result;

  result = qword_25604EB80;
  if (!qword_25604EB80)
  {
    result = MEMORY[0x234934494](&unk_233646934, &type metadata for BankConnectAuthorizationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EB80);
  }
  return result;
}

uint64_t sub_233408F18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65736E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65736E6F636572 && a2 == 0xE900000000000074 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002336769A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_233409074(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000233670A70)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23361F224();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2334090F8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000002336769C0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23361F224();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t Order.Customer.init(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v10 = a1[6];
  v9 = a1[7];
  v11 = a1[8];
  v13 = a1[9];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v6;
  a2[3] = v5;
  a2[4] = v8;
  a2[5] = v7;
  a2[6] = v10;
  a2[7] = v9;
  a2[8] = v11;
  a2[9] = v13;
  return result;
}

uint64_t Order.Customer.familyName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Customer.familyName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Order.Customer.familyName.modify())()
{
  return nullsub_1;
}

uint64_t Order.Customer.givenName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Customer.givenName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Order.Customer.givenName.modify())()
{
  return nullsub_1;
}

uint64_t Order.Customer.organizationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Customer.organizationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Order.Customer.organizationName.modify())()
{
  return nullsub_1;
}

uint64_t Order.Customer.emailAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Customer.emailAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*Order.Customer.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t Order.Customer.phoneNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.Customer.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*Order.Customer.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t sub_233409478()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334094AC + 4 * byte_233646B04[*v0]))(0x614E796C696D6166, 0xEA0000000000656DLL);
}

uint64_t sub_2334094AC()
{
  return 0x6D614E6E65766967;
}

unint64_t sub_2334094C8()
{
  return 0xD000000000000010;
}

uint64_t sub_2334094E4()
{
  return 0x6464416C69616D65;
}

uint64_t sub_233409504()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_233409524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23340A2DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233409548()
{
  sub_233409EE8();
  return sub_23361F428();
}

uint64_t sub_233409570()
{
  sub_233409EE8();
  return sub_23361F434();
}

uint64_t Order.Customer.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EB88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233409EE8();
  sub_23361F410();
  v18 = 0;
  v11 = v13[9];
  sub_23361F0E0();
  if (!v11)
  {
    v17 = 1;
    sub_23361F0E0();
    v16 = 2;
    sub_23361F0E0();
    v15 = 3;
    sub_23361F0E0();
    v14 = 4;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.Customer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EB98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233409EE8();
  sub_23361F3EC();
  if (!v2)
  {
    v40 = 0;
    v10 = sub_23361EFCC();
    v12 = v11;
    v39 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_23361EFCC();
    v15 = v14;
    v33 = v13;
    v34 = v10;
    v38 = 2;
    swift_bridgeObjectRetain();
    v35 = v15;
    v16 = sub_23361EFCC();
    v18 = v17;
    v31 = v16;
    v32 = a2;
    v37 = 3;
    swift_bridgeObjectRetain();
    v19 = sub_23361EFCC();
    v21 = v20;
    v30 = v19;
    v36 = 4;
    swift_bridgeObjectRetain();
    v22 = sub_23361EFCC();
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = v32;
    v27 = v35;
    *v32 = v34;
    v26[1] = v12;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v31;
    v26[5] = v18;
    v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233409AD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Order.Customer.init(from:)(a1, a2);
}

uint64_t sub_233409AE4(_QWORD *a1)
{
  return Order.Customer.encode(to:)(a1);
}

uint64_t Order.Customer.formattedName.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045B50);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361CE60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  if (v0[3] | v0[1])
  {
    v9 = (void *)objc_opt_self();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361CE3C();
    v10 = (void *)sub_23361CE48();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v11 = objc_msgSend(v9, sel_localizedStringFromPersonNameComponents_style_options_, v10, 0, 0);

    v8 = sub_23361E150();
  }
  return v8;
}

uint64_t _s10FinanceKit5OrderV8CustomerV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v10 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v12 = a2[1];
  v13 = a2[2];
  v15 = a2[3];
  v14 = a2[4];
  v17 = a2[5];
  v16 = a2[6];
  v18 = a2[7];
  v19 = a2[8];
  v20 = a2[9];
  if (!v3)
  {
    if (v12)
      return 0;
    goto LABEL_8;
  }
  if (!v12)
    return 0;
  if (*a1 == *a2 && v3 == v12)
    goto LABEL_8;
  v49 = a1[7];
  v51 = a2[7];
  v47 = a2[8];
  v48 = a1[6];
  v45 = a1[9];
  v46 = a2[9];
  v21 = a1[8];
  v22 = a2[6];
  v23 = a1[4];
  v24 = a1[5];
  v25 = a2[5];
  v26 = a2[4];
  v27 = a2[2];
  v28 = sub_23361F224();
  v13 = v27;
  v14 = v26;
  v17 = v25;
  v7 = v24;
  v5 = v23;
  v16 = v22;
  v9 = v21;
  v11 = v45;
  v20 = v46;
  v19 = v47;
  v8 = v48;
  v10 = v49;
  v18 = v51;
  v29 = v28;
  result = 0;
  if ((v29 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v15)
        return 0;
      if (v4 != v13 || v6 != v15)
      {
        v50 = v9;
        v52 = v17;
        v31 = v16;
        v32 = v5;
        v33 = v7;
        v34 = v14;
        v35 = sub_23361F224();
        v14 = v34;
        v9 = v50;
        v17 = v52;
        v7 = v33;
        v5 = v32;
        v16 = v31;
        v36 = v35;
        result = 0;
        if ((v36 & 1) == 0)
          return result;
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v7)
    {
      if (!v17)
        return 0;
      if (v5 != v14 || v7 != v17)
      {
        v37 = v18;
        v38 = v9;
        v39 = v16;
        v40 = sub_23361F224();
        v16 = v39;
        v9 = v38;
        v18 = v37;
        v41 = v40;
        result = 0;
        if ((v41 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v10)
    {
      if (!v18)
        return 0;
      if (v8 != v16 || v10 != v18)
      {
        v42 = v9;
        v43 = sub_23361F224();
        v9 = v42;
        v44 = v43;
        result = 0;
        if ((v44 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v11)
    {
      if (v20 && (v9 == v19 && v11 == v20 || (sub_23361F224() & 1) != 0))
        return 1;
    }
    else if (!v20)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_233409EE8()
{
  unint64_t result;

  result = qword_25604EB90;
  if (!qword_25604EB90)
  {
    result = MEMORY[0x234934494](&unk_233646C70, &_s8CustomerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EB90);
  }
  return result;
}

uint64_t destroy for RawOrderCustomer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RawOrderCustomer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RawOrderCustomer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for RawOrderCustomer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Order.Customer()
{
  return &type metadata for Order.Customer;
}

uint64_t _s8CustomerV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23340A184 + 4 * byte_233646B0E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23340A1B8 + 4 * byte_233646B09[v4]))();
}

uint64_t sub_23340A1B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23340A1C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23340A1C8);
  return result;
}

uint64_t sub_23340A1D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23340A1DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23340A1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23340A1E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8CustomerV10CodingKeysOMa()
{
  return &_s8CustomerV10CodingKeysON;
}

unint64_t sub_23340A208()
{
  unint64_t result;

  result = qword_25604EBA0;
  if (!qword_25604EBA0)
  {
    result = MEMORY[0x234934494](&unk_233646C48, &_s8CustomerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBA0);
  }
  return result;
}

unint64_t sub_23340A250()
{
  unint64_t result;

  result = qword_25604EBA8;
  if (!qword_25604EBA8)
  {
    result = MEMORY[0x234934494](&unk_233646BB8, &_s8CustomerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBA8);
  }
  return result;
}

unint64_t sub_23340A298()
{
  unint64_t result;

  result = qword_25604EBB0;
  if (!qword_25604EBB0)
  {
    result = MEMORY[0x234934494](&unk_233646BE0, &_s8CustomerV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBB0);
  }
  return result;
}

uint64_t sub_23340A2DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233672EC0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t OrderError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_23340A568()
{
  unint64_t result;

  result = qword_25604EBB8;
  if (!qword_25604EBB8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderError, &type metadata for OrderError);
    atomic_store(result, (unint64_t *)&qword_25604EBB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderError()
{
  return &type metadata for OrderError;
}

BOOL static BankConnectOfflineLab.Permission.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BankConnectOfflineLab.Permission.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_23340A5F8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465696E6564;
  if (*v0 != 1)
    v1 = 1701736302;
  if (*v0)
    return v1;
  else
    return 0x6465746E617267;
}

uint64_t sub_23340A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23340B3B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23340A66C()
{
  sub_23340AA10();
  return sub_23361F428();
}

uint64_t sub_23340A694()
{
  sub_23340AA10();
  return sub_23361F434();
}

uint64_t sub_23340A6BC()
{
  sub_23340AA98();
  return sub_23361F428();
}

uint64_t sub_23340A6E4()
{
  sub_23340AA98();
  return sub_23361F434();
}

uint64_t sub_23340A70C()
{
  sub_23340AADC();
  return sub_23361F428();
}

uint64_t sub_23340A734()
{
  sub_23340AADC();
  return sub_23361F434();
}

uint64_t sub_23340A75C()
{
  sub_23340AA54();
  return sub_23361F428();
}

uint64_t sub_23340A784()
{
  sub_23340AA54();
  return sub_23361F434();
}

uint64_t BankConnectOfflineLab.Permission.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EBC0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EBC8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EBD0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EBD8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23340AA10();
  sub_23361F410();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23340AA98();
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23340AA54();
      v16 = v21;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23340AADC();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23340AA10()
{
  unint64_t result;

  result = qword_25604EBE0;
  if (!qword_25604EBE0)
  {
    result = MEMORY[0x234934494](&unk_233647128, &_s10PermissionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBE0);
  }
  return result;
}

unint64_t sub_23340AA54()
{
  unint64_t result;

  result = qword_25604EBE8;
  if (!qword_25604EBE8)
  {
    result = MEMORY[0x234934494](&unk_2336470D8, &_s10PermissionO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBE8);
  }
  return result;
}

unint64_t sub_23340AA98()
{
  unint64_t result;

  result = qword_25604EBF0;
  if (!qword_25604EBF0)
  {
    result = MEMORY[0x234934494](&unk_233647088, &_s10PermissionO16DeniedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBF0);
  }
  return result;
}

unint64_t sub_23340AADC()
{
  unint64_t result;

  result = qword_25604EBF8;
  if (!qword_25604EBF8)
  {
    result = MEMORY[0x234934494](&unk_233647038, &_s10PermissionO17GrantedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EBF8);
  }
  return result;
}

uint64_t BankConnectOfflineLab.Permission.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t BankConnectOfflineLab.Permission.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC00);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC08);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC10);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC18);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23340AA10();
  v13 = v41;
  sub_23361F3EC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23361F098();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23361EE10();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v25 = &type metadata for BankConnectOfflineLab.Permission;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23340AA98();
      v20 = v9;
      sub_23361EFA8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23340AA54();
      v28 = v15;
      sub_23361EFA8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23340AADC();
    sub_23361EFA8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

unint64_t sub_23340AFAC()
{
  unint64_t result;

  result = qword_25604EC20;
  if (!qword_25604EC20)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectOfflineLab.Permission, &type metadata for BankConnectOfflineLab.Permission);
    atomic_store(result, (unint64_t *)&qword_25604EC20);
  }
  return result;
}

uint64_t sub_23340AFF0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BankConnectOfflineLab.Permission.init(from:)(a1, a2);
}

uint64_t sub_23340B004(_QWORD *a1)
{
  return BankConnectOfflineLab.Permission.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab.Permission()
{
  return &type metadata for BankConnectOfflineLab.Permission;
}

uint64_t _s10PermissionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23340B078 + 4 * byte_233646D65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23340B0AC + 4 * asc_233646D60[v4]))();
}

uint64_t sub_23340B0AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23340B0B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23340B0BCLL);
  return result;
}

uint64_t sub_23340B0C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23340B0D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23340B0D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23340B0DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10PermissionO10CodingKeysOMa()
{
  return &_s10PermissionO10CodingKeysON;
}

ValueMetadata *_s10PermissionO17GrantedCodingKeysOMa()
{
  return &_s10PermissionO17GrantedCodingKeysON;
}

ValueMetadata *_s10PermissionO16DeniedCodingKeysOMa()
{
  return &_s10PermissionO16DeniedCodingKeysON;
}

ValueMetadata *_s10PermissionO14NoneCodingKeysOMa()
{
  return &_s10PermissionO14NoneCodingKeysON;
}

unint64_t sub_23340B12C()
{
  unint64_t result;

  result = qword_25604EC28;
  if (!qword_25604EC28)
  {
    result = MEMORY[0x234934494](&unk_233647010, &_s10PermissionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC28);
  }
  return result;
}

unint64_t sub_23340B174()
{
  unint64_t result;

  result = qword_25604EC30;
  if (!qword_25604EC30)
  {
    result = MEMORY[0x234934494](&unk_233646F30, &_s10PermissionO17GrantedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC30);
  }
  return result;
}

unint64_t sub_23340B1BC()
{
  unint64_t result;

  result = qword_25604EC38;
  if (!qword_25604EC38)
  {
    result = MEMORY[0x234934494](&unk_233646F58, &_s10PermissionO17GrantedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC38);
  }
  return result;
}

unint64_t sub_23340B204()
{
  unint64_t result;

  result = qword_25604EC40;
  if (!qword_25604EC40)
  {
    result = MEMORY[0x234934494](&unk_233646EE0, &_s10PermissionO16DeniedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC40);
  }
  return result;
}

unint64_t sub_23340B24C()
{
  unint64_t result;

  result = qword_25604EC48;
  if (!qword_25604EC48)
  {
    result = MEMORY[0x234934494](&unk_233646F08, &_s10PermissionO16DeniedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC48);
  }
  return result;
}

unint64_t sub_23340B294()
{
  unint64_t result;

  result = qword_25604EC50;
  if (!qword_25604EC50)
  {
    result = MEMORY[0x234934494](&unk_233646E90, &_s10PermissionO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC50);
  }
  return result;
}

unint64_t sub_23340B2DC()
{
  unint64_t result;

  result = qword_25604EC58;
  if (!qword_25604EC58)
  {
    result = MEMORY[0x234934494](&unk_233646EB8, &_s10PermissionO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC58);
  }
  return result;
}

unint64_t sub_23340B324()
{
  unint64_t result;

  result = qword_25604EC60;
  if (!qword_25604EC60)
  {
    result = MEMORY[0x234934494](&unk_233646F80, &_s10PermissionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC60);
  }
  return result;
}

unint64_t sub_23340B36C()
{
  unint64_t result;

  result = qword_25604EC68;
  if (!qword_25604EC68)
  {
    result = MEMORY[0x234934494](&unk_233646FA8, &_s10PermissionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC68);
  }
  return result;
}

uint64_t sub_23340B3B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465746E617267 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465696E6564 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t Order.Fulfillment.init(_:bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v25;
  uint64_t v26;

  v26 = a3;
  v5 = type metadata accessor for RawOrderPickupFulfillment();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RawOrderShippingFulfillment();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v25 - v18;
  v20 = type metadata accessor for RawOrderFulfillment();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(a1, (uint64_t)v22, v23);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v22, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    sub_2331684BC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
    Order.PickupFulfillment.init(_:bundle:)((uint64_t)v8, a2, (uint64_t)v13);
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_233168500((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
  }
  else
  {
    sub_233168580((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    sub_2331684BC((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
    Order.ShippingFulfillment.init(_:bundle:)((uint64_t)v17, a2, (uint64_t)v13);
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
    sub_233168500((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
  }
  swift_storeEnumTagMultiPayload();
  return sub_233168580((uint64_t)v13, v26, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
}

uint64_t type metadata accessor for Order.Fulfillment()
{
  uint64_t result;

  result = qword_25604ED48;
  if (!qword_25604ED48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Order.Fulfillment.init(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((a1 & 0x8000000000000000) != 0)
    Order.PickupFulfillment.init(_:)((void *)(a1 & 0x7FFFFFFFFFFFFFFFLL), a2);
  else
    Order.ShippingFulfillment.init(_:)((void *)a1, a2);
  type metadata accessor for Order.Fulfillment();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23340B7D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x70756B636970;
  else
    return 0x676E697070696873;
}

uint64_t sub_23340B810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23340F144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23340B834()
{
  sub_23340CA38();
  return sub_23361F428();
}

uint64_t sub_23340B85C()
{
  sub_23340CA38();
  return sub_23361F434();
}

uint64_t sub_23340B884()
{
  sub_23340CA7C();
  return sub_23361F428();
}

uint64_t sub_23340B8AC()
{
  sub_23340CA7C();
  return sub_23361F434();
}

uint64_t sub_23340B8D4()
{
  sub_23340CAC0();
  return sub_23361F428();
}

uint64_t sub_23340B8FC()
{
  sub_23340CAC0();
  return sub_23361F434();
}

uint64_t Order.Fulfillment.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC70);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v27);
  v28 = (uint64_t)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC78);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EC80);
  v32 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23340CA38();
  sub_23361F410();
  sub_2331684BC(v33, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = v28;
    sub_233168580((uint64_t)v12, v28, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v35 = 1;
    sub_23340CA7C();
    v17 = v29;
    sub_23361F0C8();
    sub_233167C58(&qword_25604EC98, (uint64_t (*)(uint64_t))type metadata accessor for Order.PickupFulfillment, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment);
    v18 = v31;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v18);
    v19 = v16;
    v20 = type metadata accessor for Order.PickupFulfillment;
  }
  else
  {
    sub_233168580((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v34 = 0;
    sub_23340CAC0();
    sub_23361F0C8();
    sub_233167C58(&qword_25604ECA8, (uint64_t (*)(uint64_t))type metadata accessor for Order.ShippingFulfillment, (uint64_t)&protocol conformance descriptor for Order.ShippingFulfillment);
    v21 = v26;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v21);
    v19 = (uint64_t)v9;
    v20 = type metadata accessor for Order.ShippingFulfillment;
  }
  sub_233168500(v19, (uint64_t (*)(_QWORD))v20);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v13);
}

uint64_t Order.Fulfillment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;

  v36 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604ECB0);
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v43 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604ECB8);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604ECC0);
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.Fulfillment();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v18 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23340CA38();
  v19 = v45;
  sub_23361F3EC();
  if (v19)
    goto LABEL_5;
  v34 = v12;
  v35 = v15;
  v20 = v43;
  v33 = v17;
  v45 = v9;
  v21 = v6;
  v22 = v8;
  if (*(_QWORD *)(sub_23361F098() + 16) != 1)
  {
    v27 = sub_23361EE10();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v29 = v45;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
LABEL_5:
    v26 = (uint64_t)v44;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v46 = 1;
  sub_23340CA7C();
  v23 = v20;
  sub_23361EFA8();
  type metadata accessor for Order.PickupFulfillment();
  sub_233167C58(&qword_25604ECC8, (uint64_t (*)(uint64_t))type metadata accessor for Order.PickupFulfillment, (uint64_t)&protocol conformance descriptor for Order.PickupFulfillment);
  v24 = (uint64_t)v34;
  v25 = v37;
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v21);
  v26 = (uint64_t)v44;
  swift_storeEnumTagMultiPayload();
  v31 = (uint64_t)v33;
  sub_233168580(v24, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  sub_233168580(v31, v36, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_23340C164@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.Fulfillment.init(from:)(a1, a2);
}

uint64_t sub_23340C178(_QWORD *a1)
{
  return Order.Fulfillment.encode(to:)(a1);
}

uint64_t Order.Fulfillment.lineItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v12 = *v4;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for Order.PickupFulfillment;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v12 = *v7;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for Order.ShippingFulfillment;
  }
  sub_233168500(v13, (uint64_t (*)(_QWORD))v14);
  return v12;
}

uint64_t Order.Fulfillment.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v12 = *((_QWORD *)v4 + 2);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for Order.PickupFulfillment;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v12 = *((_QWORD *)v7 + 6);
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for Order.ShippingFulfillment;
  }
  sub_233168500(v13, (uint64_t (*)(_QWORD))v14);
  return v12;
}

uint64_t Order.Fulfillment.fulfillmentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v12 = *(_QWORD *)&v4[*(int *)(v2 + 56)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v4;
    v14 = type metadata accessor for Order.PickupFulfillment;
  }
  else
  {
    sub_233168580((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v12 = *(_QWORD *)&v7[*(int *)(v5 + 60)];
    swift_bridgeObjectRetain();
    v13 = (uint64_t)v7;
    v14 = type metadata accessor for Order.ShippingFulfillment;
  }
  sub_233168500(v13, (uint64_t (*)(_QWORD))v14);
  return v12;
}

uint64_t Order.Fulfillment.pickupFulfillment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v6, a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v8 = type metadata accessor for Order.PickupFulfillment();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v10 = type metadata accessor for Order.PickupFulfillment();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t Order.Fulfillment.shippingFulfillment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v8 = type metadata accessor for Order.ShippingFulfillment();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_233168580((uint64_t)v6, a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v10 = type metadata accessor for Order.ShippingFulfillment();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
}

uint64_t _s10FinanceKit5OrderV11FulfillmentO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.Fulfillment();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046330);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2331684BC(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  sub_2331684BC(a2, v20, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v20, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      v21 = _s10FinanceKit5OrderV17PickupFulfillmentV2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v6);
      sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for Order.PickupFulfillment;
LABEL_9:
      sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
      sub_233168500((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      return v21 & 1;
    }
    v24 = type metadata accessor for Order.PickupFulfillment;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580(v20, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
      v21 = _s10FinanceKit5OrderV19ShippingFulfillmentV2eeoiySbAE_AEtFZ_0((uint64_t)v15, (uint64_t)v9);
      sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for Order.ShippingFulfillment;
      goto LABEL_9;
    }
    v24 = type metadata accessor for Order.ShippingFulfillment;
    v25 = (uint64_t)v15;
  }
  sub_233168500(v25, (uint64_t (*)(_QWORD))v24);
  sub_23340F22C((uint64_t)v19);
  v21 = 0;
  return v21 & 1;
}

unint64_t sub_23340CA38()
{
  unint64_t result;

  result = qword_25604EC88;
  if (!qword_25604EC88)
  {
    result = MEMORY[0x234934494](&unk_23364752C, &_s11FulfillmentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC88);
  }
  return result;
}

unint64_t sub_23340CA7C()
{
  unint64_t result;

  result = qword_25604EC90;
  if (!qword_25604EC90)
  {
    result = MEMORY[0x234934494](&unk_2336474DC, &_s11FulfillmentO16PickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EC90);
  }
  return result;
}

unint64_t sub_23340CAC0()
{
  unint64_t result;

  result = qword_25604ECA0;
  if (!qword_25604ECA0)
  {
    result = MEMORY[0x234934494](&unk_23364748C, &_s11FulfillmentO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604ECA0);
  }
  return result;
}

uint64_t _s11FulfillmentOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  uint64_t v88;
  uint64_t v90;
  void *__dst;
  int *v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      v7 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v7;
      v8 = (void *)a2[4];
      *(_QWORD *)(a1 + 32) = v8;
      v9 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = v8;
      if (v9)
      {
        v11 = a2[6];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = v11;
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        *(_QWORD *)(a1 + 64) = a2[8];
        *(_QWORD *)(a1 + 72) = v9;
        v12 = a2[11];
        *(_QWORD *)(a1 + 80) = a2[10];
        *(_QWORD *)(a1 + 88) = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = *(_OWORD *)(a2 + 7);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        *(_OWORD *)(a1 + 56) = v24;
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
        *(_QWORD *)(a1 + 88) = a2[11];
      }
      v25 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v25;
      v26 = a2[15];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v26;
      v27 = (void *)a2[16];
      *(_QWORD *)(a1 + 128) = v27;
      v94 = type metadata accessor for Order.PickupFulfillment();
      v28 = *(int *)(v94 + 48);
      v29 = (char *)(a1 + v28);
      v30 = (char *)a2 + v28;
      v31 = type metadata accessor for Order.FulfillmentWindow(0);
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = v27;
      if (v33(v30, 1, v31))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        v36 = v94;
      }
      else
      {
        v52 = swift_getEnumCaseMultiPayload();
        v53 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v29, v30, v53);
        if (v52 == 1)
        {
          v54 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v55 = &v29[v54];
          v56 = &v30[v54];
          v57 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        }
        v36 = v94;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v64 = *(int *)(v36 + 52);
      v65 = (void *)(a1 + v64);
      v66 = (char *)a2 + v64;
      v67 = sub_23361D634();
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      v70 = *(int *)(v36 + 56);
      v71 = (_QWORD *)(a1 + v70);
      v72 = (uint64_t *)((char *)a2 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v14;
      v15 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v15;
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      v16 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v16;
      v17 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v17;
      v18 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v18;
      v19 = type metadata accessor for Order.ShippingFulfillment();
      v20 = *(int *)(v19 + 44);
      __dst = (void *)(a1 + v20);
      v92 = (int *)v19;
      v21 = (char *)a2 + v20;
      v22 = sub_23361D340();
      v90 = *(_QWORD *)(v22 - 8);
      v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v93(v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v90 + 16))(__dst, v21, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(__dst, 0, 1, v22);
      }
      v37 = v92[12];
      v38 = a1 + v37;
      v39 = (uint64_t)a2 + v37;
      v40 = *(_QWORD *)(v39 + 8);
      if (v40 == 1)
      {
        v41 = *(_OWORD *)(v39 + 16);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *(_OWORD *)(v38 + 16) = v41;
        *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
        *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
      }
      else
      {
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *(_QWORD *)(v38 + 8) = v40;
        v42 = *(_QWORD *)(v39 + 24);
        *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
        *(_QWORD *)(v38 + 24) = v42;
        v43 = *(_QWORD *)(v39 + 40);
        *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
        *(_QWORD *)(v38 + 40) = v43;
        v44 = *(void **)(v39 + 48);
        *(_QWORD *)(v38 + 48) = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = v44;
      }
      v46 = v92[13];
      v47 = (char *)(a1 + v46);
      v48 = (char *)a2 + v46;
      v49 = type metadata accessor for Order.FulfillmentWindow(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v58 = swift_getEnumCaseMultiPayload();
        v59 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v47, v48, v59);
        if (v58 == 1)
        {
          v60 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v61 = &v47[v60];
          v62 = &v48[v60];
          v63 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v74 = v92[14];
      v75 = (void *)(a1 + v74);
      v76 = (char *)a2 + v74;
      v77 = sub_23361D634();
      v78 = *(_QWORD *)(v77 - 8);
      v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      if (v79(v76, 1, v77))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
      }
      v81 = v92[15];
      v82 = (_QWORD *)(a1 + v81);
      v83 = (uint64_t *)((char *)a2 + v81);
      v84 = v83[1];
      *v82 = *v83;
      v82[1] = v84;
      v85 = v92[16];
      v86 = (void *)(a1 + v85);
      v87 = (char *)a2 + v85;
      swift_bridgeObjectRetain();
      if (v79(v87, 1, v77))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 16))(v86, v87, v77);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v86, 0, 1, v77);
      }
      *(_BYTE *)(a1 + v92[17]) = *((_BYTE *)a2 + v92[17]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s11FulfillmentOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(a1 + 72))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v3 = type metadata accessor for Order.PickupFulfillment();
    v4 = a1 + *(int *)(v3 + 48);
    v5 = type metadata accessor for Order.FulfillmentWindow(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      v6 = swift_getEnumCaseMultiPayload();
      v7 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      if (v6 == 1)
      {
        v8 = v4 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v9 = sub_23361CD40();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      }
    }
    v10 = a1 + *(int *)(v3 + 52);
    v11 = sub_23361D634();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = (int *)type metadata accessor for Order.ShippingFulfillment();
    v15 = a1 + v14[11];
    v16 = sub_23361D340();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = a1 + v14[12];
    if (*(_QWORD *)(v18 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v19 = a1 + v14[13];
    v20 = type metadata accessor for Order.FulfillmentWindow(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
    {
      v21 = swift_getEnumCaseMultiPayload();
      v22 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v19, v22);
      if (v21 == 1)
      {
        v23 = v19 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v24 = sub_23361CD40();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      }
    }
    v25 = a1 + v14[14];
    v26 = sub_23361D634();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (!v28(v25, 1, v26))
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    swift_bridgeObjectRelease();
    v29 = a1 + v14[16];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(v29, 1, v26);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
  }
  return result;
}

uint64_t _s11FulfillmentOwcp(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(const void *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v87;
  void *__dst;
  int *v89;
  unsigned int (*v90)(const void *, uint64_t, uint64_t);
  uint64_t v91;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = v6;
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v9;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v7;
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v21;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    }
    v22 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v22;
    v23 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v23;
    v24 = *(void **)(a2 + 128);
    *(_QWORD *)(a1 + 128) = v24;
    v91 = type metadata accessor for Order.PickupFulfillment();
    v25 = *(int *)(v91 + 48);
    v26 = (char *)(a1 + v25);
    v27 = (char *)(a2 + v25);
    v28 = type metadata accessor for Order.FulfillmentWindow(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31 = v24;
    if (v30(v27, 1, v28))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      v33 = v91;
    }
    else
    {
      v49 = swift_getEnumCaseMultiPayload();
      v50 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v26, v27, v50);
      v33 = v91;
      if (v49 == 1)
      {
        v51 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v52 = &v26[v51];
        v53 = &v27[v51];
        v54 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v61 = *(int *)(v33 + 52);
    v62 = (void *)(a1 + v61);
    v63 = (const void *)(a2 + v61);
    v64 = sub_23361D634();
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    v67 = *(int *)(v33 + 56);
    v68 = (_QWORD *)(a1 + v67);
    v69 = (_QWORD *)(a2 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v11;
    v12 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v12;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v13;
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    v15 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v15;
    v16 = type metadata accessor for Order.ShippingFulfillment();
    v17 = *(int *)(v16 + 44);
    __dst = (void *)(a1 + v17);
    v89 = (int *)v16;
    v18 = (const void *)(a2 + v17);
    v19 = sub_23361D340();
    v87 = *(_QWORD *)(v19 - 8);
    v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v90(v18, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v87 + 16))(__dst, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v19);
    }
    v34 = v89[12];
    v35 = a1 + v34;
    v36 = a2 + v34;
    v37 = *(_QWORD *)(v36 + 8);
    if (v37 == 1)
    {
      v38 = *(_OWORD *)(v36 + 16);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *(_OWORD *)(v35 + 16) = v38;
      *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
      *(_QWORD *)(v35 + 48) = *(_QWORD *)(v36 + 48);
    }
    else
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *(_QWORD *)(v35 + 8) = v37;
      v39 = *(_QWORD *)(v36 + 24);
      *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
      *(_QWORD *)(v35 + 24) = v39;
      v40 = *(_QWORD *)(v36 + 40);
      *(_QWORD *)(v35 + 32) = *(_QWORD *)(v36 + 32);
      *(_QWORD *)(v35 + 40) = v40;
      v41 = *(void **)(v36 + 48);
      *(_QWORD *)(v35 + 48) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42 = v41;
    }
    v43 = v89[13];
    v44 = (char *)(a1 + v43);
    v45 = (char *)(a2 + v43);
    v46 = type metadata accessor for Order.FulfillmentWindow(0);
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v55 = swift_getEnumCaseMultiPayload();
      v56 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v44, v45, v56);
      if (v55 == 1)
      {
        v57 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v58 = &v44[v57];
        v59 = &v45[v57];
        v60 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    v71 = v89[14];
    v72 = (void *)(a1 + v71);
    v73 = (const void *)(a2 + v71);
    v74 = sub_23361D634();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48);
    if (v76(v73, 1, v74))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v78 = v89[15];
    v79 = (_QWORD *)(a1 + v78);
    v80 = (_QWORD *)(a2 + v78);
    v81 = v80[1];
    *v79 = *v80;
    v79[1] = v81;
    v82 = v89[16];
    v83 = (void *)(a1 + v82);
    v84 = (const void *)(a2 + v82);
    swift_bridgeObjectRetain();
    if (v76(v84, 1, v74))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v75 + 16))(v83, v84, v74);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v83, 0, 1, v74);
    }
    *(_BYTE *)(a1 + v89[17]) = *(_BYTE *)(a2 + v89[17]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s11FulfillmentOwca(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(const void *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  uint64_t v76;
  void *__dst;
  int *v78;
  unsigned int (*v79)(const void *, uint64_t, uint64_t);
  uint64_t v80;

  if (a1 != a2)
  {
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v5 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v5;
      v6 = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = v5;
      if (v6)
      {
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v13 = *(_OWORD *)(a2 + 40);
        v14 = *(_OWORD *)(a2 + 56);
        v15 = *(_OWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 56) = v14;
        *(_OWORD *)(a1 + 72) = v15;
        *(_OWORD *)(a1 + 40) = v13;
      }
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v16 = *(void **)(a2 + 128);
      *(_QWORD *)(a1 + 128) = v16;
      v80 = type metadata accessor for Order.PickupFulfillment();
      v17 = *(int *)(v80 + 48);
      v18 = (char *)(a1 + v17);
      v19 = (char *)(a2 + v17);
      v20 = type metadata accessor for Order.FulfillmentWindow(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = v16;
      if (v22(v19, 1, v20))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v25 = v80;
      }
      else
      {
        v40 = swift_getEnumCaseMultiPayload();
        v41 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v18, v19, v41);
        if (v40 == 1)
        {
          v42 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v43 = &v18[v42];
          v44 = &v19[v42];
          v45 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        }
        v25 = v80;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v52 = *(int *)(v25 + 52);
      v53 = (void *)(a1 + v52);
      v54 = (const void *)(a2 + v52);
      v55 = sub_23361D634();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v53, v54, v55);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      v58 = *(int *)(v25 + 56);
      v59 = (_QWORD *)(a1 + v58);
      v60 = (_QWORD *)(a2 + v58);
      *v59 = *v60;
      v59[1] = v60[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v8 = type metadata accessor for Order.ShippingFulfillment();
      v9 = *(int *)(v8 + 44);
      __dst = (void *)(a1 + v9);
      v78 = (int *)v8;
      v10 = (const void *)(a2 + v9);
      v11 = sub_23361D340();
      v76 = *(_QWORD *)(v11 - 8);
      v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v79(v10, 1, v11))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v76 + 16))(__dst, v10, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v11);
      }
      v26 = v78[12];
      v27 = a1 + v26;
      v28 = (__int128 *)(a2 + v26);
      if (*((_QWORD *)v28 + 1) == 1)
      {
        v29 = *v28;
        v30 = v28[1];
        v31 = v28[2];
        *(_QWORD *)(v27 + 48) = *((_QWORD *)v28 + 6);
        *(_OWORD *)(v27 + 16) = v30;
        *(_OWORD *)(v27 + 32) = v31;
        *(_OWORD *)v27 = v29;
      }
      else
      {
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
        *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
        *(_QWORD *)(v27 + 24) = *((_QWORD *)v28 + 3);
        *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
        *(_QWORD *)(v27 + 40) = *((_QWORD *)v28 + 5);
        v32 = (void *)*((_QWORD *)v28 + 6);
        *(_QWORD *)(v27 + 48) = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v33 = v32;
      }
      v34 = v78[13];
      v35 = (char *)(a1 + v34);
      v36 = (char *)(a2 + v34);
      v37 = type metadata accessor for Order.FulfillmentWindow(0);
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v46 = swift_getEnumCaseMultiPayload();
        v47 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v35, v36, v47);
        if (v46 == 1)
        {
          v48 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v49 = &v35[v48];
          v50 = &v36[v48];
          v51 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v61 = v78[14];
      v62 = (void *)(a1 + v61);
      v63 = (const void *)(a2 + v61);
      v64 = sub_23361D634();
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48);
      if (v66(v63, 1, v64))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v68 = v78[15];
      v69 = (_QWORD *)(a1 + v68);
      v70 = (_QWORD *)(a2 + v68);
      *v69 = *v70;
      v69[1] = v70[1];
      v71 = v78[16];
      v72 = (void *)(a1 + v71);
      v73 = (const void *)(a2 + v71);
      swift_bridgeObjectRetain();
      if (v66(v73, 1, v64))
      {
        v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v72, v73, v64);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v72, 0, 1, v64);
      }
      *(_BYTE *)(a1 + v78[17]) = *(_BYTE *)(a2 + v78[17]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s11FulfillmentOwtk(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(const void *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v6 = (int *)type metadata accessor for Order.PickupFulfillment();
    v7 = v6[12];
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    v10 = type metadata accessor for Order.FulfillmentWindow(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v21 = swift_getEnumCaseMultiPayload();
      v22 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v8, v9, v22);
      if (v21 == 1)
      {
        v23 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v24 = &v8[v23];
        v25 = &v9[v23];
        v26 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v43 = v6[13];
    v44 = (void *)(a1 + v43);
    v45 = (const void *)(a2 + v43);
    v46 = sub_23361D634();
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    v14 = (int *)type metadata accessor for Order.ShippingFulfillment();
    v15 = v14[11];
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    v18 = sub_23361D340();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v27 = v14[12];
    v28 = a1 + v27;
    v29 = a2 + v27;
    v30 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v30;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
    v31 = v14[13];
    v32 = (char *)(a1 + v31);
    v33 = (char *)(a2 + v31);
    v34 = type metadata accessor for Order.FulfillmentWindow(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = swift_getEnumCaseMultiPayload();
      v38 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v32, v33, v38);
      if (v37 == 1)
      {
        v39 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v40 = &v32[v39];
        v41 = &v33[v39];
        v42 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v49 = v14[14];
    v50 = (void *)(a1 + v49);
    v51 = (const void *)(a2 + v49);
    v52 = sub_23361D634();
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48);
    if (v54(v51, 1, v52))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v50, v51, v52);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    *(_OWORD *)(a1 + v14[15]) = *(_OWORD *)(a2 + v14[15]);
    v56 = v14[16];
    v57 = (void *)(a1 + v56);
    v58 = (const void *)(a2 + v56);
    if (v54((const void *)(a2 + v56), 1, v52))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v57, v58, v52);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v52);
    }
    *(_BYTE *)(a1 + v14[17]) = *(_BYTE *)(a2 + v14[17]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s11FulfillmentOwta(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(const void *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;

  if (a1 != a2)
  {
    sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v5 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v5;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v6 = (int *)type metadata accessor for Order.PickupFulfillment();
      v7 = v6[12];
      v8 = (char *)(a1 + v7);
      v9 = (char *)(a2 + v7);
      v10 = type metadata accessor for Order.FulfillmentWindow(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v21 = swift_getEnumCaseMultiPayload();
        v22 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v8, v9, v22);
        if (v21 == 1)
        {
          v23 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v24 = &v8[v23];
          v25 = &v9[v23];
          v26 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v43 = v6[13];
      v44 = (void *)(a1 + v43);
      v45 = (const void *)(a2 + v43);
      v46 = sub_23361D634();
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v13 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v13;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      v14 = (int *)type metadata accessor for Order.ShippingFulfillment();
      v15 = v14[11];
      v16 = (void *)(a1 + v15);
      v17 = (const void *)(a2 + v15);
      v18 = sub_23361D340();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v27 = v14[12];
      v28 = a1 + v27;
      v29 = a2 + v27;
      v30 = *(_OWORD *)(v29 + 16);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *(_OWORD *)(v28 + 16) = v30;
      *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
      *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
      v31 = v14[13];
      v32 = (char *)(a1 + v31);
      v33 = (char *)(a2 + v31);
      v34 = type metadata accessor for Order.FulfillmentWindow(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v37 = swift_getEnumCaseMultiPayload();
        v38 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v32, v33, v38);
        if (v37 == 1)
        {
          v39 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v40 = &v32[v39];
          v41 = &v33[v39];
          v42 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v49 = v14[14];
      v50 = (void *)(a1 + v49);
      v51 = (const void *)(a2 + v49);
      v52 = sub_23361D634();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48);
      if (v54(v51, 1, v52))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v50, v51, v52);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      *(_OWORD *)(a1 + v14[15]) = *(_OWORD *)(a2 + v14[15]);
      v56 = v14[16];
      v57 = (void *)(a1 + v56);
      v58 = (const void *)(a2 + v56);
      if (v54((const void *)(a2 + v56), 1, v52))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v57, v58, v52);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v52);
      }
      *(_BYTE *)(a1 + v14[17]) = *(_BYTE *)(a2 + v14[17]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23340ECC0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Order.ShippingFulfillment();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Order.PickupFulfillment();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s11FulfillmentO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23340ED8C + 4 * byte_233647185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23340EDC0 + 4 * byte_233647180[v4]))();
}

uint64_t sub_23340EDC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23340EDC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23340EDD0);
  return result;
}

uint64_t sub_23340EDDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23340EDE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23340EDE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23340EDF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11FulfillmentO10CodingKeysOMa()
{
  return &_s11FulfillmentO10CodingKeysON;
}

ValueMetadata *_s11FulfillmentO18ShippingCodingKeysOMa()
{
  return &_s11FulfillmentO18ShippingCodingKeysON;
}

uint64_t _s11FulfillmentO18ShippingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23340EE60 + 4 * byte_23364718A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23340EE80 + 4 * byte_23364718F[v4]))();
}

_BYTE *sub_23340EE60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23340EE80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23340EE88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23340EE90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23340EE98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23340EEA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11FulfillmentO16PickupCodingKeysOMa()
{
  return &_s11FulfillmentO16PickupCodingKeysON;
}

unint64_t sub_23340EEC0()
{
  unint64_t result;

  result = qword_25604ED80;
  if (!qword_25604ED80)
  {
    result = MEMORY[0x234934494](&unk_2336472F4, &_s11FulfillmentO16PickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604ED80);
  }
  return result;
}

unint64_t sub_23340EF08()
{
  unint64_t result;

  result = qword_25604ED88;
  if (!qword_25604ED88)
  {
    result = MEMORY[0x234934494](&unk_2336473AC, &_s11FulfillmentO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604ED88);
  }
  return result;
}

unint64_t sub_23340EF50()
{
  unint64_t result;

  result = qword_25604ED90;
  if (!qword_25604ED90)
  {
    result = MEMORY[0x234934494](&unk_233647464, &_s11FulfillmentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604ED90);
  }
  return result;
}

unint64_t sub_23340EF98()
{
  unint64_t result;

  result = qword_25604ED98;
  if (!qword_25604ED98)
  {
    result = MEMORY[0x234934494](&unk_23364731C, &_s11FulfillmentO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604ED98);
  }
  return result;
}

unint64_t sub_23340EFE0()
{
  unint64_t result;

  result = qword_25604EDA0;
  if (!qword_25604EDA0)
  {
    result = MEMORY[0x234934494](&unk_233647344, &_s11FulfillmentO18ShippingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EDA0);
  }
  return result;
}

unint64_t sub_23340F028()
{
  unint64_t result;

  result = qword_25604EDA8;
  if (!qword_25604EDA8)
  {
    result = MEMORY[0x234934494](&unk_233647264, &_s11FulfillmentO16PickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EDA8);
  }
  return result;
}

unint64_t sub_23340F070()
{
  unint64_t result;

  result = qword_25604EDB0;
  if (!qword_25604EDB0)
  {
    result = MEMORY[0x234934494](&unk_23364728C, &_s11FulfillmentO16PickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EDB0);
  }
  return result;
}

unint64_t sub_23340F0B8()
{
  unint64_t result;

  result = qword_25604EDB8;
  if (!qword_25604EDB8)
  {
    result = MEMORY[0x234934494](&unk_2336473D4, &_s11FulfillmentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EDB8);
  }
  return result;
}

unint64_t sub_23340F100()
{
  unint64_t result;

  result = qword_25604EDC0;
  if (!qword_25604EDC0)
  {
    result = MEMORY[0x234934494](&unk_2336473FC, &_s11FulfillmentO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EDC0);
  }
  return result;
}

uint64_t sub_23340F144(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E697070696873 && a2 == 0xE800000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70756B636970 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23340F22C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256046330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FraudAssessmentError(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for FraudAssessmentError(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for FraudAssessmentError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for FraudAssessmentError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

ValueMetadata *type metadata accessor for FraudAssessmentError()
{
  return &type metadata for FraudAssessmentError;
}

uint64_t static Order.Fulfillment.DisplayStatus.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unsigned __int8 *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a1;
  v47 = a2;
  v6 = sub_23361D634();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a4;
  v11 = type metadata accessor for Order.Fulfillment.DisplayStatus(0, a3, a4, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v38 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v38 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v22 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v23 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v25 = (char *)&v38 - v24;
  v26 = (unsigned __int8 *)&v38 + *(int *)(v23 + 48) - v24;
  v45 = v12;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v27((char *)&v38 - v24, v46, v11);
  v27((char *)v26, v47, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v27(v20, (uint64_t)v25, v11);
    if (!swift_getEnumCaseMultiPayload())
    {
      v31 = *v20 == *v26;
      goto LABEL_9;
    }
LABEL_12:
    v31 = 0;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v27(v15, (uint64_t)v25, v11);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v33 = v43;
      v34 = v44;
      v35 = v40;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v43 + 32))(v40, v26, v44);
      v31 = sub_23361D5E0();
      v36 = *(void (**)(char *, uint64_t))(v33 + 8);
      v36(v35, v34);
      v36(v15, v34);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v44);
    goto LABEL_12;
  }
  v27(v18, (uint64_t)v25, v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v18, a3);
    goto LABEL_12;
  }
  v29 = v42;
  v30 = v39;
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v42 + 32))(v39, v26, a3);
  v31 = sub_23361E108();
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v30, a3);
  v32(v18, a3);
LABEL_9:
  v22 = v45;
  TupleTypeMetadata2 = v11;
LABEL_13:
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, TupleTypeMetadata2);
  return v31 & 1;
}

uint64_t type metadata accessor for Order.Fulfillment.DisplayStatus(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Order.Fulfillment.DisplayStatus);
}

void Order.Fulfillment.DisplayStatus<>.init(order:orderContent:returnStatus:)(void *a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  unsigned int v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v28;

  v26 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EDC8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a2;
  ManagedECommerceOrderContent.status.getter(&v28);
  v16 = v28;
  v17 = objc_msgSend(a1, sel_isMarkedAsComplete);
  v18 = objc_msgSend(a1, sel_isMarkedAsCompleteModificationDate);
  if (v18)
  {
    v19 = v18;
    sub_23361D5EC();

    v20 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 0, 1, v20);
  }
  else
  {
    v21 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v15, 1, 1, v21);
  }
  v22 = (uint64_t)&v9[*(int *)(v7 + 80)];
  *v9 = v16;
  v9[1] = a3;
  v9[2] = v17;
  sub_233168478((uint64_t)v15, v22, (uint64_t *)&unk_254247DA0);
  if (v17
    && (v23 = sub_23361D634(),
        v24 = *(_QWORD *)(v23 - 8),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v12, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    *v12 = a3;
    swift_storeEnumTagMultiPayload();
    sub_233168608(v22, (uint64_t *)&unk_254247DA0);
  }
  sub_233168478((uint64_t)v12, v26, &qword_256043790);

}

void Order.Fulfillment.DisplayStatus<>.init(order:orderContent:)(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedECommerceOrderContent.status.getter(&v15);
  v9 = objc_msgSend(a1, sel_isMarkedAsComplete);
  v10 = objc_msgSend(a1, sel_isMarkedAsCompleteModificationDate);
  if (v10)
  {
    v11 = v10;
    sub_23361D5EC();

    v12 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  }
  else
  {
    v13 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  }
  Order.Fulfillment.DisplayStatus<>.init(orderStatus:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)(&v15, v9, (uint64_t)v8, a3);

}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderContent:returnStatus:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EDC8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v15 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 36));
  v16 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v17 = (uint64_t)&v8[*(int *)(v6 + 80)];
  *v8 = v15;
  v8[1] = (char)a2;
  v8[2] = 0;
  sub_233168478((uint64_t)v14, v17, (uint64_t *)&unk_254247DA0);
  *v11 = (_BYTE)a2;
  swift_storeEnumTagMultiPayload();
  sub_233168608(v17, (uint64_t *)&unk_254247DA0);
  sub_233168478((uint64_t)v11, a3, &qword_256043790);
  return sub_233411DCC(a1);
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EDD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 36));
  v14 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  v15 = (uint64_t)&v6[*(int *)(v4 + 64)];
  *v6 = v13;
  v6[1] = 0;
  sub_233168478((uint64_t)v12, v15, (uint64_t *)&unk_254247DA0);
  if (v13)
  {
    if (v13 == 1)
      v16 = 1;
    else
      v16 = 2;
    *v9 = v16;
  }
  else
  {
    *v9 = 0;
  }
  swift_storeEnumTagMultiPayload();
  sub_233168608(v15, (uint64_t *)&unk_254247DA0);
  sub_233168478((uint64_t)v9, a2, &qword_2560437A0);
  return sub_233411DCC(a1);
}

uint64_t Order.Fulfillment.DisplayStatus<>.localizedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int EnumCaseMultiPayload;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(v0, (uint64_t)v3, &qword_2560437A0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (*v3)
    {
      if (*v3 == 1)
      {
        if (qword_2542450A8 == -1)
          goto LABEL_13;
      }
      else if (qword_2542450A8 == -1)
      {
LABEL_13:
        v11 = (void *)qword_2542450A0;
        v12 = (void *)sub_23361E12C();
        v13 = (void *)sub_23361E12C();
        v14 = (void *)sub_23361E12C();
        v15 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v12, v13, v14);

        v10 = sub_23361E150();
        return v10;
      }
    }
    else if (qword_2542450A8 == -1)
    {
      goto LABEL_13;
    }
    swift_once();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 2)
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v5 = (void *)qword_2542450A0;
    v6 = (void *)sub_23361E12C();
    v7 = (void *)sub_23361E12C();
    v8 = (void *)sub_23361E12C();
    v9 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, v8);

    v10 = sub_23361E150();
    sub_233168608((uint64_t)v3, &qword_2560437A0);
    return v10;
  }
  result = sub_23361F218();
  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  _BYTE v18[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2331686A0(v0, (uint64_t)v3, &qword_256043790);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (*v3)
    {
      if (*v3 == 1)
      {
        if (qword_2542450A8 == -1)
          goto LABEL_14;
      }
      else if (qword_2542450A8 == -1)
      {
LABEL_14:
        v12 = (void *)qword_2542450A0;
        v13 = (void *)sub_23361E12C();
        v14 = (void *)sub_23361E12C();
        v15 = (void *)sub_23361E12C();
        v16 = objc_msgSend(v12, sel_localizedStringForKey_value_table_, v13, v14, v15);

        v6 = sub_23361E150();
        return v6;
      }
    }
    else if (qword_2542450A8 == -1)
    {
      goto LABEL_14;
    }
    swift_once();
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v18[15] = *v3;
    Order.ReturnStatus.localizedTitle.getter();
    return v5;
  }
  else
  {
    if (qword_2542450A8 != -1)
      swift_once();
    v7 = (void *)qword_2542450A0;
    v8 = (void *)sub_23361E12C();
    v9 = (void *)sub_23361E12C();
    v10 = (void *)sub_23361E12C();
    v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

    v6 = sub_23361E150();
    sub_233168608((uint64_t)v3, &qword_256043790);
  }
  return v6;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  int EnumCaseMultiPayload;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(v1, (uint64_t)v4, &qword_256043800);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (*v4)
    {
      if (*v4 == 1)
      {
        if (qword_2542450A8 == -1)
          goto LABEL_14;
      }
      else if (qword_2542450A8 == -1)
      {
LABEL_14:
        v12 = (void *)qword_2542450A0;
        v13 = (void *)sub_23361E12C();
        v14 = (void *)sub_23361E12C();
        v15 = (void *)sub_23361E12C();
        v16 = objc_msgSend(v12, sel_localizedStringForKey_value_table_, v13, v14, v15);

        v11 = sub_23361E150();
        return v11;
      }
    }
    else if (qword_2542450A8 == -1)
    {
      goto LABEL_14;
    }
    swift_once();
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
    __asm { BR              X10 }
  if (qword_2542450A8 != -1)
    swift_once();
  v6 = (void *)qword_2542450A0;
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = (void *)sub_23361E12C();
  v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

  v11 = sub_23361E150();
  sub_233168608((uint64_t)v4, &qword_256043800);
  return v11;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  int EnumCaseMultiPayload;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331686A0(v0, (uint64_t)v3, &qword_256043810);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (*v3)
    {
      if (*v3 == 1)
      {
        if (qword_2542450A8 == -1)
          goto LABEL_14;
      }
      else if (qword_2542450A8 == -1)
      {
LABEL_14:
        v11 = (void *)qword_2542450A0;
        v12 = (void *)sub_23361E12C();
        v13 = (void *)sub_23361E12C();
        v14 = (void *)sub_23361E12C();
        v15 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v12, v13, v14);

        v10 = sub_23361E150();
        return v10;
      }
    }
    else if (qword_2542450A8 == -1)
    {
      goto LABEL_14;
    }
    swift_once();
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
    __asm { BR              X11 }
  if (qword_2542450A8 != -1)
    swift_once();
  v5 = (void *)qword_2542450A0;
  v6 = (void *)sub_23361E12C();
  v7 = (void *)sub_23361E12C();
  v8 = (void *)sub_23361E12C();
  v9 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, v8);

  v10 = sub_23361E150();
  sub_233168608((uint64_t)v3, &qword_256043810);
  return v10;
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderContent:pickupStatus:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v13 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 36));
  v12 = a2;
  v9 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  Order.Fulfillment.DisplayStatus<>.init(orderStatus:pickupStatus:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)(&v13, &v12, 0, (uint64_t)v8, a3);
  return sub_233411DCC(a1);
}

void Order.Fulfillment.DisplayStatus<>.init(order:orderContent:pickupStatus:)(void *a1@<X0>, void *a2@<X1>, unsigned __int8 a3@<W2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedECommerceOrderContent.status.getter(&v18);
  v17 = a3;
  v11 = objc_msgSend(a1, sel_isMarkedAsComplete);
  v12 = objc_msgSend(a1, sel_isMarkedAsCompleteModificationDate);
  if (v12)
  {
    v13 = v12;
    sub_23361D5EC();

    v14 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  }
  else
  {
    v15 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
  }
  Order.Fulfillment.DisplayStatus<>.init(orderStatus:pickupStatus:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)(&v18, &v17, v11, (uint64_t)v10, a4);

}

void Order.Fulfillment.DisplayStatus<>.init(order:orderContent:shippingStatus:shippingType:)(void *a1@<X0>, void *a2@<X1>, unsigned __int8 a3@<W2>, char a4@<W3>, char *a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned __int8 v20;
  unsigned __int8 v21;

  v9 = a4 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedECommerceOrderContent.status.getter(&v21);
  v20 = a3;
  v19 = v9;
  v13 = objc_msgSend(a1, sel_isMarkedAsComplete);
  v14 = objc_msgSend(a1, sel_isMarkedAsCompleteModificationDate);
  if (v14)
  {
    v15 = v14;
    sub_23361D5EC();

    v16 = sub_23361D634();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 0, 1, v16);
  }
  else
  {
    v17 = sub_23361D634();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
  }
  Order.Fulfillment.DisplayStatus<>.init(orderStatus:shippingStatus:shippingType:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)(&v21, &v20, &v19, v13, (uint64_t)v12, a5);

}

uint64_t sub_233411A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Order.Fulfillment.DisplayStatus.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void Order.Fulfillment.ShippingDisplayStatusTypeModel.shippingStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Order.Fulfillment.ShippingDisplayStatusTypeModel.shippingStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Order.Fulfillment.ShippingDisplayStatusTypeModel.shippingStatus.modify())()
{
  return nullsub_1;
}

void Order.Fulfillment.ShippingDisplayStatusTypeModel.shippingType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *Order.Fulfillment.ShippingDisplayStatusTypeModel.shippingType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*Order.Fulfillment.ShippingDisplayStatusTypeModel.shippingType.modify())()
{
  return nullsub_1;
}

_BYTE *Order.Fulfillment.ShippingDisplayStatusTypeModel.init(shippingStatus:shippingType:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  char v3;

  v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

uint64_t static Order.Fulfillment.ShippingDisplayStatusTypeModel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

uint64_t sub_233411B18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderStatus:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)@<X0>(unsigned __int8 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EDD0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = (uint64_t)&v11[*(int *)(v9 + 64)];
  *v11 = v12;
  v11[1] = a2;
  sub_233168478(a3, v13, (uint64_t *)&unk_254247DA0);
  if (v12)
  {
    if (v12 == 1)
      v14 = 1;
    else
      v14 = 2;
    *a4 = v14;
    goto LABEL_9;
  }
  if ((a2 & 1) == 0
    || (v15 = sub_23361D634(),
        v16 = *(_QWORD *)(v15 - 8),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1))
  {
    *a4 = 0;
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
    swift_storeEnumTagMultiPayload();
    return sub_233168608(v13, (uint64_t *)&unk_254247DA0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(a4, v13, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560437A0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderStatus:returnStatus:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)@<X0>(char *a1@<X0>, char *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EDC8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = *a2;
  v16 = (uint64_t)&v13[*(int *)(v11 + 80)];
  *v13 = v14;
  v13[1] = v15;
  v13[2] = a3;
  sub_233168478(a4, v16, (uint64_t *)&unk_254247DA0);
  if ((a3 & 1) != 0
    && (v17 = sub_23361D634(),
        v18 = *(_QWORD *)(v17 - 8),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(a5, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    *a5 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043790);
    swift_storeEnumTagMultiPayload();
    return sub_233168608(v16, (uint64_t *)&unk_254247DA0);
  }
}

uint64_t sub_233411DCC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RawECommerceOrderContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderStatus:pickupStatus:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EDD8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = *a2;
  sub_2331686A0(a4, (uint64_t)v15, (uint64_t *)&unk_254247DA0);
  v18 = (uint64_t)&v12[*(int *)(v10 + 80)];
  *v12 = v16;
  v12[1] = v17;
  v12[2] = a3;
  sub_2331686A0((uint64_t)v15, v18, (uint64_t *)&unk_254247DA0);
  if (v17 == 5)
  {
    sub_233168608(a4, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
    v19 = 5;
LABEL_5:
    *a5 = v19;
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    goto LABEL_16;
  }
  if (v17 == 3)
  {
    sub_233168608(a4, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
    v19 = 3;
    goto LABEL_5;
  }
  if (v16)
  {
    sub_233168608(a4, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
    if (v16 == 1)
      v20 = 1;
    else
      v20 = 2;
    *a5 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
LABEL_16:
    swift_storeEnumTagMultiPayload();
    return sub_233168608(v18, (uint64_t *)&unk_254247DA0);
  }
  if ((a3 & 1) != 0
    && (v21 = sub_23361D634(),
        v22 = *(_QWORD *)(v21 - 8),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v18, 1, v21) != 1))
  {
    sub_233168608(a4, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(a5, v18, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043800);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    switch(v17)
    {
      case 0:
        sub_233168608(a4, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
        *a5 = 0;
        goto LABEL_6;
      case 1:
        sub_233168608(a4, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
        v19 = 1;
        goto LABEL_5;
      case 2:
        sub_233168608(a4, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
        v19 = 2;
        goto LABEL_5;
      case 4:
        sub_233168608(a4, (uint64_t *)&unk_254247DA0);
        sub_233168608((uint64_t)v15, (uint64_t *)&unk_254247DA0);
        v19 = 4;
        goto LABEL_5;
      default:
        result = sub_23361F218();
        __break(1u);
        break;
    }
  }
  return result;
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderContent:shippingStatus:shippingType:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, _BYTE *a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  unsigned __int8 v15;
  unsigned __int8 v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  LOBYTE(a3) = *a3;
  v16 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for RawECommerceOrderContent(0) + 36));
  v15 = 0x706040302050100uLL >> (8 * a2);
  v14 = (char)a3;
  v11 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  Order.Fulfillment.DisplayStatus<>.init(orderStatus:shippingStatus:shippingType:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)(&v16, &v15, &v14, 0, (uint64_t)v10, a4);
  return sub_233411DCC(a1);
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(orderStatus:shippingStatus:shippingType:isMarkedAsComplete:isMarkedAsCompleteModificationDate:)@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  char *v32;

  v32 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25604EDE0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = *a2;
  v19 = *a3;
  sub_2331686A0(a5, (uint64_t)v16, (uint64_t *)&unk_254247DA0);
  v20 = (uint64_t)&v13[*(int *)(v11 + 80)];
  *v13 = v17;
  v13[1] = v18;
  v13[2] = a4;
  sub_2331686A0((uint64_t)v16, v20, (uint64_t *)&unk_254247DA0);
  switch(v18)
  {
    case 7:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v21 = 7;
LABEL_9:
      v26 = v32;
      *v32 = v21;
LABEL_10:
      v26[1] = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
      goto LABEL_20;
    case 5:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      if ((a4 & 1) == 0
        || (v22 = sub_23361D634(),
            v23 = *(_QWORD *)(v22 - 8),
            (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1))
      {
        v24 = v32;
        *v32 = 5;
        v24[1] = v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
        swift_storeEnumTagMultiPayload();
        v25 = v20;
        return sub_233168608(v25, (uint64_t *)&unk_254247DA0);
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v32, v20, v22);
      goto LABEL_24;
    case 4:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v21 = 4;
      goto LABEL_9;
  }
  if (v17)
  {
    sub_233168608(a5, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
    if (v17 == 1)
      v27 = 1;
    else
      v27 = 2;
    *v32 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
LABEL_20:
    swift_storeEnumTagMultiPayload();
    v25 = v20;
    return sub_233168608(v25, (uint64_t *)&unk_254247DA0);
  }
  if ((a4 & 1) != 0)
  {
    v28 = sub_23361D634();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v20, 1, v28) != 1)
    {
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v32, v20, v28);
LABEL_24:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
      return swift_storeEnumTagMultiPayload();
    }
  }
  switch(v18)
  {
    case 0:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v26 = v32;
      *v32 = 0;
      goto LABEL_10;
    case 1:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v21 = 1;
      goto LABEL_9;
    case 2:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v21 = 2;
      goto LABEL_9;
    case 3:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v21 = 3;
      goto LABEL_9;
    case 6:
      sub_233168608(a5, (uint64_t *)&unk_254247DA0);
      sub_233168608((uint64_t)v16, (uint64_t *)&unk_254247DA0);
      v21 = 6;
      goto LABEL_9;
    default:
      result = sub_23361F218();
      __break(1u);
      break;
  }
  return result;
}

uint64_t Order.Fulfillment.DisplayStatus<>.init(for:shippingType:)@<X0>(_BYTE *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  char v3;

  v3 = *a2;
  *a3 = *a1;
  a3[1] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256043810);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2334126CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_BYTE *sub_23341275C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v7 > v10)
    v10 = v7;
  if (v10 <= 1)
    v11 = 1;
  else
    v11 = v10;
  v12 = (*(_BYTE *)(v9 + 80) | *(_BYTE *)(v6 + 80));
  if (v12 <= 7
    && (unint64_t)(v11 + 1) <= 0x18
    && ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) == 0)
  {
    v16 = a2[v11];
    if (v16 >= 3)
    {
      if (v11 <= 3)
        v17 = v11;
      else
        v17 = 4;
      __asm { BR              X13 }
    }
    if (v16 == 2)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(a1, a2, v8);
      a1[v11] = 2;
    }
    else if (v16 == 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v11] = 1;
    }
    else
    {
      *a1 = *a2;
      a1[v11] = 0;
    }
  }
  else
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_BYTE *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  return a1;
}

uint64_t sub_2334128CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  result = sub_23361D634();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  if (v5 > v7)
    v7 = v5;
  if (v7 <= 1)
    v7 = 1;
  v8 = *(unsigned __int8 *)(a1 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X14 }
  }
  if (*(_BYTE *)(a1 + v7))
  {
    if (v8 != 1)
    {
      v4 = *(_QWORD *)(result - 8);
      v3 = result;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_BYTE *sub_2334129BC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v7 > v10)
    v10 = v7;
  if (v10 <= 1)
    v11 = 1;
  else
    v11 = v10;
  v12 = a2[v11];
  if (v12 >= 3)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  if (v12 == 2)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(a1, a2, v8);
    v14 = 2;
  }
  else if (v12 == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
    *a1 = *a2;
  }
  a1[v11] = v14;
  return a1;
}

_BYTE *sub_233412AE4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = sub_23361D634();
    v9 = v8;
    v10 = *(_QWORD *)(v8 - 8);
    v11 = *(_QWORD *)(v10 + 64);
    if (v7 > v11)
      v11 = v7;
    if (v11 <= 1)
      v12 = 1;
    else
      v12 = v11;
    v13 = a1[v12];
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (a1[v12])
    {
      v15 = v6;
      v16 = v5;
      if (v13 != 1)
      {
        v15 = *(_QWORD *)(v8 - 8);
        v16 = v8;
      }
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(a1, v16);
    }
    v17 = a2[v12];
    if (v17 >= 3)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 2)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(a1, a2, v9);
      v19 = 2;
    }
    else if (v17 == 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      v19 = 1;
    }
    else
    {
      v19 = 0;
      *a1 = *a2;
    }
    a1[v12] = v19;
  }
  return a1;
}

_BYTE *sub_233412CB8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v7 > v10)
    v10 = v7;
  if (v10 <= 1)
    v11 = 1;
  else
    v11 = v10;
  v12 = a2[v11];
  if (v12 >= 3)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  if (v12 == 2)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(a1, a2, v8);
    v14 = 2;
  }
  else if (v12 == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
    *a1 = *a2;
  }
  a1[v11] = v14;
  return a1;
}

_BYTE *sub_233412DE0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = sub_23361D634();
    v9 = v8;
    v10 = *(_QWORD *)(v8 - 8);
    v11 = *(_QWORD *)(v10 + 64);
    if (v7 > v11)
      v11 = v7;
    if (v11 <= 1)
      v12 = 1;
    else
      v12 = v11;
    v13 = a1[v12];
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (a1[v12])
    {
      v15 = v6;
      v16 = v5;
      if (v13 != 1)
      {
        v15 = *(_QWORD *)(v8 - 8);
        v16 = v8;
      }
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(a1, v16);
    }
    v17 = a2[v12];
    if (v17 >= 3)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 2)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(a1, a2, v9);
      v19 = 2;
    }
    else if (v17 == 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      v19 = 1;
    }
    else
    {
      v19 = 0;
      *a1 = *a2;
    }
    a1[v12] = v19;
  }
  return a1;
}

uint64_t sub_233412FB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  unsigned int v14;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(sub_23361D634() - 8) + 64);
  if (v5 > v6)
    v6 = v5;
  if (v6 <= 1)
    v7 = 1;
  else
    v7 = v6;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_24;
  v8 = v7 + 1;
  v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v12 = ((a2 + ~(-1 << v9) - 253) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v12 < 2)
    {
LABEL_24:
      v14 = *(unsigned __int8 *)(a1 + v7);
      if (v14 >= 3)
        return (v14 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_24;
LABEL_17:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 > 3)
      LODWORD(v8) = 4;
    __asm { BR              X11 }
  }
  return (v13 + 254);
}

void sub_2334130FC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(sub_23361D634() - 8) + 64);
  if (v7 > v8)
    v8 = v7;
  if (v8 <= 1)
    v8 = 1;
  v9 = v8 + 1;
  if (a3 < 0xFE)
  {
    v10 = 0;
  }
  else if (v9 <= 3)
  {
    v12 = ((a3 + ~(-1 << (8 * v9)) - 253) >> (8 * v9)) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v11 = a2 - 254;
  if (v9 < 4)
  {
    if ((_DWORD)v8 != -1)
    {
      v13 = v11 & ~(-1 << (8 * v9));
      bzero(a1, v9);
      if ((_DWORD)v9 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if ((_DWORD)v9 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
  }
  else
  {
    bzero(a1, v8 + 1);
    *(_DWORD *)a1 = v11;
  }
  __asm { BR              X10 }
}

uint64_t sub_2334132C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(sub_23361D634() - 8) + 64);
  if (v3 > v4)
    v4 = v3;
  if (v4 <= 1)
    v4 = 1;
  result = *(unsigned __int8 *)(a1 + v4);
  if (result >= 3)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_233413378(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  if (a2 > 2)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    v9 = *(_QWORD *)(*(_QWORD *)(sub_23361D634() - 8) + 64);
    if (v8 > v9)
      v9 = v8;
    if (v9 <= 1)
      v10 = 1;
    else
      v10 = v9;
    v11 = a2 - 3;
    if (v10 < 4)
    {
      v12 = v11 >> (8 * v10);
      v13 = v11 & ~(-1 << (8 * v10));
      a1[v10] = v12 + 3;
      bzero(a1, v10);
      if ((_DWORD)v10 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if ((_DWORD)v10 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
    else
    {
      a1[v10] = 3;
      bzero(a1, v10);
      *(_DWORD *)a1 = v11;
    }
  }
  else
  {
    v6 = sub_23361D634();
    v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    if (v7 <= *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64))
      v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
    if (v7 <= 1)
      v7 = 1;
    a1[v7] = a2;
  }
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s30ShippingDisplayStatusTypeModelVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s30ShippingDisplayStatusTypeModelVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233413574 + 4 * byte_23364763C[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2334135A8 + 4 * byte_233647637[v4]))();
}

uint64_t sub_2334135A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2334135B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2334135B8);
  return result;
}

uint64_t sub_2334135C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2334135CCLL);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_2334135D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2334135D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Order.Fulfillment.ShippingDisplayStatusTypeModel()
{
  return &type metadata for Order.Fulfillment.ShippingDisplayStatusTypeModel;
}

void AccountAction.actionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AccountAction.actionType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AccountAction.actionType.modify())()
{
  return nullsub_1;
}

uint64_t AccountAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccountAction() + 20);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AccountAction()
{
  uint64_t result;

  result = qword_25604EF08;
  if (!qword_25604EF08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AccountAction.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccountAction() + 20);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AccountAction.url.modify())(_QWORD)
{
  type metadata accessor for AccountAction();
  return nullsub_1;
}

uint64_t AccountAction.init(actionType:url:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t v5;

  *a3 = *a1;
  v4 = &a3[*(int *)(type metadata accessor for AccountAction() + 20)];
  v5 = sub_23361D340();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
}

uint64_t AccountAction.hash(into:)()
{
  sub_23361F35C();
  type metadata accessor for AccountAction();
  sub_23361D340();
  sub_233167C58(&qword_25604B4B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23361E090();
}

uint64_t static AccountAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    type metadata accessor for AccountAction();
    JUMPOUT(0x234931620);
  }
  return 0;
}

uint64_t sub_233413834()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 0x79546E6F69746361;
}

uint64_t sub_23341386C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334147E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233413890()
{
  sub_233413FF0();
  return sub_23361F428();
}

uint64_t sub_2334138B8()
{
  sub_233413FF0();
  return sub_23361F434();
}

uint64_t AccountAction.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EE68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233413FF0();
  sub_23361F410();
  v10[15] = *v3;
  v10[14] = 0;
  sub_233414034();
  sub_23361F17C();
  if (!v2)
  {
    type metadata accessor for AccountAction();
    v10[13] = 1;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AccountAction.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  type metadata accessor for AccountAction();
  sub_23361D340();
  sub_233167C58(&qword_25604B4B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t AccountAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;

  v25 = a2;
  v24 = sub_23361D340();
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EE80);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccountAction();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233413FF0();
  sub_23361F3EC();
  if (!v2)
  {
    v20 = v8;
    v21 = v5;
    v11 = v10;
    v13 = v23;
    v12 = v24;
    v14 = v25;
    v28 = 0;
    sub_233414078();
    v15 = v26;
    sub_23361F068();
    v19 = v11;
    *v11 = v29;
    v27 = 1;
    sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v15);
    v16 = v14;
    v17 = (uint64_t)v19;
    (*(void (**)(_BYTE *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v13, v12);
    sub_2334140BC(v17, v16);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233413D34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountAction.init(from:)(a1, a2);
}

uint64_t sub_233413D48(_QWORD *a1)
{
  return AccountAction.encode(to:)(a1);
}

uint64_t sub_233413D5C()
{
  sub_23361F350();
  sub_23361F35C();
  sub_23361D340();
  sub_233167C58(&qword_25604B4B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_233413DEC()
{
  sub_23361F35C();
  sub_23361D340();
  sub_233167C58(&qword_25604B4B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23361E090();
}

uint64_t sub_233413E64()
{
  sub_23361F350();
  sub_23361F35C();
  sub_23361D340();
  sub_233167C58(&qword_25604B4B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_233413EF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    JUMPOUT(0x234931620);
  return 0;
}

FinanceKit::AccountActionType_optional __swiftcall AccountActionType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (FinanceKit::AccountActionType_optional)rawValue;
}

void *static AccountActionType.allCases.getter()
{
  return &unk_25046A930;
}

uint64_t AccountActionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FinanceKit::AccountActionType_optional sub_233413F40(Swift::Int *a1)
{
  return AccountActionType.init(rawValue:)(*a1);
}

uint64_t sub_233413F48()
{
  sub_2334148D0();
  return sub_23361E39C();
}

uint64_t sub_233413FA4()
{
  sub_2334148D0();
  return sub_23361E360();
}

unint64_t sub_233413FF0()
{
  unint64_t result;

  result = qword_25604EE70;
  if (!qword_25604EE70)
  {
    result = MEMORY[0x234934494](&unk_233647A40, &type metadata for AccountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EE70);
  }
  return result;
}

unint64_t sub_233414034()
{
  unint64_t result;

  result = qword_25604EE78;
  if (!qword_25604EE78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountActionType, &type metadata for AccountActionType);
    atomic_store(result, (unint64_t *)&qword_25604EE78);
  }
  return result;
}

unint64_t sub_233414078()
{
  unint64_t result;

  result = qword_25604EE88;
  if (!qword_25604EE88)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountActionType, &type metadata for AccountActionType);
    atomic_store(result, (unint64_t *)&qword_25604EE88);
  }
  return result;
}

uint64_t sub_2334140BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233414100()
{
  return sub_233167C58(&qword_25604EE90, (uint64_t (*)(uint64_t))type metadata accessor for AccountAction, (uint64_t)&protocol conformance descriptor for AccountAction);
}

unint64_t sub_233414130()
{
  unint64_t result;

  result = qword_25604EE98;
  if (!qword_25604EE98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountActionType, &type metadata for AccountActionType);
    atomic_store(result, (unint64_t *)&qword_25604EE98);
  }
  return result;
}

unint64_t sub_233414178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25604EEA0;
  if (!qword_25604EEA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604EEA8);
    result = MEMORY[0x234934494](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25604EEA0);
  }
  return result;
}

void sub_2334141C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_25046A930;
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23361D340();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for AccountAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for AccountAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D340();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for AccountAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D340();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for AccountAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D340();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for AccountAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23361D340();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233414410(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 250)
  {
    v4 = *a1;
    if (v4 >= 6)
      return v4 - 5;
    else
      return 0;
  }
  else
  {
    v8 = sub_23361D340();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AccountAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_233414490(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 250)
  {
    *result = a2 + 5;
  }
  else
  {
    v7 = sub_23361D340();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_233414500()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2334145C0 + 4 * byte_233647715[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2334145F4 + 4 * asc_233647710[v4]))();
}

uint64_t sub_2334145F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334145FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233414604);
  return result;
}

uint64_t sub_233414610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233414618);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23341461C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233414624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountActionType()
{
  return &type metadata for AccountActionType;
}

uint64_t storeEnumTagSinglePayload for AccountAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23341468C + 4 * byte_23364771F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334146C0 + 4 * byte_23364771A[v4]))();
}

uint64_t sub_2334146C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334146C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334146D0);
  return result;
}

uint64_t sub_2334146DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334146E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334146E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334146F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountAction.CodingKeys()
{
  return &type metadata for AccountAction.CodingKeys;
}

unint64_t sub_233414710()
{
  unint64_t result;

  result = qword_25604EF40;
  if (!qword_25604EF40)
  {
    result = MEMORY[0x234934494](&unk_233647A18, &type metadata for AccountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EF40);
  }
  return result;
}

unint64_t sub_233414758()
{
  unint64_t result;

  result = qword_25604EF48;
  if (!qword_25604EF48)
  {
    result = MEMORY[0x234934494](&unk_233647988, &type metadata for AccountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EF48);
  }
  return result;
}

unint64_t sub_2334147A0()
{
  unint64_t result;

  result = qword_25604EF50;
  if (!qword_25604EF50)
  {
    result = MEMORY[0x234934494](&unk_2336479B0, &type metadata for AccountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604EF50);
  }
  return result;
}

uint64_t sub_2334147E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79546E6F69746361 && a2 == 0xEA00000000006570;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2334148D0()
{
  unint64_t result;

  result = qword_25604EF58;
  if (!qword_25604EF58)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AccountActionType, &type metadata for AccountActionType);
    atomic_store(result, (unint64_t *)&qword_25604EF58);
  }
  return result;
}

_QWORD *BankConnectPassKitTransactionsImporter.__allocating_init(coreDataStore:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  v2[2] = a1;
  type metadata accessor for ManagedTransactionImporter();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  v2[3] = v3;
  type metadata accessor for BankConnectTransactionsMatcher();
  v2[4] = swift_allocObject();
  return v2;
}

_QWORD *BankConnectPassKitTransactionsImporter.init(coreDataStore:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  type metadata accessor for ManagedTransactionImporter();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  v1[3] = v2;
  type metadata accessor for BankConnectTransactionsMatcher();
  v1[4] = swift_allocObject();
  return v1;
}

uint64_t sub_2334149D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = a3;
  v5 = *a1;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v5;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v4 + 80) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233414A50()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v1 = _os_activity_create(&dword_233151000, "bankConnect/importPassKitTransactions", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  *(_QWORD *)(v0 + 88) = v1;
  os_activity_scope_enter(v1, (os_activity_scope_state_t)(v0 + 16));
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_233414B48;
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_OWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 128) = v3;
  *(_OWORD *)(v2 + 96) = v5;
  *(_OWORD *)(v2 + 112) = v4;
  return swift_task_switch();
}

uint64_t sub_233414B48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233414BF0()
{
  uint64_t v0;

  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 16));
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233414C5C()
{
  uint64_t v0;

  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 16));
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233414CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[12] = a2;
  return swift_task_switch();
}

uint64_t sub_233414CEC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13[3];

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  *(_QWORD *)(v0 + 152) = __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  if (os_log_type_enabled(v2, v3))
  {
    v11 = *(_QWORD *)(v0 + 120);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v13[0] = v5;
    v13[1] = 0;
    v13[2] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361ED98();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = sub_233164DCC(0, 0xE000000000000000, v13);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v2, v3, "Importing PassKit transactions for %s.", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v5, -1, -1);
    MEMORY[0x234934590](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v7 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v12 = *(_OWORD *)(v0 + 104);
  v8 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 96) + 16) + 16), sel_newBackgroundContext, v11);
  *(_QWORD *)(v0 + 160) = v8;
  *(_OWORD *)(v0 + 16) = v12;
  *(_QWORD *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 40) = v6;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v9;
  *v9 = v0;
  v9[1] = sub_233415014;
  return sub_233415630((uint64_t *)(v0 + 16), (uint64_t)v8, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
}

uint64_t sub_233415014(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233415080()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  NSObject *v23;
  os_log_type_t v24;
  const char *v25;
  uint64_t v26;
  uint8_t *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 176);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v23 = sub_23361DB68();
    v24 = sub_23361E780();
    if (!os_log_type_enabled(v23, v24))
    {
LABEL_16:

      v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
    v25 = "No PassKit transactions, aborting.";
LABEL_15:
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_233151000, v23, v24, v25, v27, 2u);
    MEMORY[0x234934590](v27, -1, -1);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v26 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_13;
LABEL_3:
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v29 = *(_OWORD *)(v0 + 96);
  v31 = *(_OWORD *)(v0 + 112);
  v6 = swift_task_alloc();
  *(_OWORD *)(v6 + 16) = v29;
  *(_OWORD *)(v6 + 32) = v31;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v7[2] = sub_233417434;
  v7[3] = v6;
  v7[4] = v4;
  sub_23361E960();
  if (!v2)
  {
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 128);
    v30 = *(_OWORD *)(v0 + 96);
    v32 = *(_OWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = swift_task_alloc();
    *(_OWORD *)(v10 + 16) = v30;
    *(_OWORD *)(v10 + 32) = v32;
    *(_QWORD *)(v10 + 48) = v9;
    *(_QWORD *)(v10 + 56) = v8;
    v11 = (_QWORD *)swift_task_alloc();
    v11[2] = sub_233417420;
    v11[3] = v10;
    v11[4] = v8;
    sub_23361E960();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = sub_23361DB68();
    v24 = sub_23361E780();
    if (!os_log_type_enabled(v23, v24))
      goto LABEL_16;
    v25 = "Successfully imported PassKit transactions.";
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  v12 = v2;
  v13 = v2;
  v14 = sub_23361DB68();
  v15 = sub_23361E768();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v33 = v17;
    *(_DWORD *)v16 = 136315138;
    swift_getErrorValue();
    v18 = sub_23361F2E4();
    *(_QWORD *)(v0 + 80) = sub_233164DCC(v18, v19, &v33);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v14, v15, "Failed to import PassKit transactions: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v17, -1, -1);
    MEMORY[0x234934590](v16, -1, -1);
  }
  else
  {

  }
  v20 = *(void **)(v0 + 160);
  sub_2334173DC();
  swift_allocError();
  *v21 = v2;
  swift_willThrow();

  v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_233415468()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 184);
  v2 = v1;
  v3 = v1;
  v4 = sub_23361DB68();
  v5 = sub_23361E768();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_23361F2E4();
    *(_QWORD *)(v0 + 80) = sub_233164DCC(v8, v9, &v13);
    sub_23361EBC4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233151000, v4, v5, "Failed to import PassKit transactions: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v7, -1, -1);
    MEMORY[0x234934590](v6, -1, -1);
  }
  else
  {

  }
  v10 = *(void **)(v0 + 160);
  sub_2334173DC();
  swift_allocError();
  *v11 = v1;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233415630(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = v4;
  *(_QWORD *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 48) = a3;
  v7 = sub_23361E96C();
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v9 = *a1;
  *(_QWORD *)(v5 + 88) = v8;
  *(_QWORD *)(v5 + 96) = v9;
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v5 + 120) = a1[3];
  return swift_task_switch();
}

uint64_t sub_2334156AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = v0[14];
  v2 = v0[15];
  v4 = v0[12];
  v3 = v0[13];
  v6 = v0[10];
  v5 = v0[11];
  v7 = v0[8];
  v13 = v0[9];
  v8 = (void *)v0[5];
  v9 = (_QWORD *)swift_allocObject();
  v0[16] = v9;
  v9[2] = v7;
  v9[3] = v4;
  v9[4] = v3;
  v9[5] = v1;
  v9[6] = v2;
  v9[7] = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDBB370], v13);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v8;
  v11 = (_QWORD *)swift_task_alloc();
  v0[17] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560426A8);
  *v11 = v0;
  v11[1] = sub_2334157C0;
  return sub_23361E990();
}

uint64_t sub_2334157C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233415854()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t (*v16)(id, uint64_t, uint64_t);
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(void **)(v0 + 56);
    v4 = (void *)sub_23361E12C();
    v5 = objc_msgSend(v3, sel_passWithFPANIdentifier_, v4);
    *(_QWORD *)(v0 + 152) = v5;

    if (v5)
    {
      v6 = *(_QWORD **)(v0 + 48);
      swift_bridgeObjectRelease();
      v7 = v6[3];
      v8 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      v16 = (uint64_t (*)(id, uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v9;
      *v9 = v0;
      v9[1] = sub_233415AD0;
      return v16(v5, v7, v8);
    }
    if (qword_256041CA0 != -1)
      swift_once();
    v11 = sub_23361DB80();
    __swift_project_value_buffer(v11, (uint64_t)qword_2560495B0);
    swift_bridgeObjectRetain();
    v12 = sub_23361DB68();
    v13 = sub_23361E768();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 32) = sub_233164DCC(v2, v1, &v17);
      sub_23361EBC4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_233151000, v12, v13, "Failed to find a pass with FPAN identifier: %s.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v15, -1, -1);
      MEMORY[0x234934590](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_233415AD0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233415B2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_233415B70()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233415BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  id v26;
  uint8_t *buf;
  void *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[2];

  v33[1] = *MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInternalAccount();
  *(_QWORD *)&v30 = a2;
  *((_QWORD *)&v30 + 1) = a3;
  v31 = a4;
  v32 = a5;
  v14 = static ManagedInternalAccount.existingAccount(with:in:)(&v30);
  if (!v7)
  {
    if (v14)
    {
      v28 = (void *)v14;
      if (a7 >> 62)
        goto LABEL_20;
      v15 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (buf = (uint8_t *)a6; v15; buf = (uint8_t *)a6)
      {
        a6 = 4;
        while (1)
        {
          v17 = (a7 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x234933120](a6 - 4, a7)
              : *(id *)(a7 + 8 * a6);
          v18 = v17;
          v19 = a6 - 3;
          if (__OFADD__(a6 - 4, 1))
            break;
          v20 = objc_msgSend(v17, sel_fkPaymentTransaction);
          if (v20)
          {
            v16 = v20;
            sub_233416028(v16, v28, buf);

          }
          else
          {
            v16 = v18;
          }

          ++a6;
          if (v19 == v15)
            goto LABEL_21;
        }
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v15 = sub_23361EF30();
      }
LABEL_21:
      swift_bridgeObjectRelease();
      *(_QWORD *)&v30 = 0;
      if ((-[uint8_t save:](buf, sel_save_, &v30) & 1) != 0)
      {
        v25 = (id)v30;
      }
      else
      {
        v26 = (id)v30;
        sub_23361D1B4();

        swift_willThrow();
      }

    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v21 = sub_23361DB80();
      __swift_project_value_buffer(v21, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v22 = sub_23361DB68();
      v23 = sub_23361E768();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        *(_QWORD *)&v30 = 0;
        *(_DWORD *)v24 = 136315138;
        v33[0] = v29;
        *((_QWORD *)&v30 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23361ED98();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v30 = sub_233164DCC(v30, *((unint64_t *)&v30 + 1), v33);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v22, v23, "Failed to find an account: %s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v29, -1, -1);
        MEMORY[0x234934590](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_233416028(void *a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  void *v30;
  uint8_t *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v40;
  _QWORD v41[4];
  unsigned __int8 v42;

  type metadata accessor for ManagedInternalTransaction();
  v38 = a1;
  v5 = objc_msgSend(a1, sel_transactionId);
  v6 = sub_23361E150();
  v8 = v7;

  v9 = objc_msgSend(a2, sel_accountId);
  v10 = sub_23361E150();
  v12 = v11;

  v13 = objc_msgSend(a2, sel_institutionId);
  v14 = sub_23361E150();
  v16 = v15;

  v41[0] = v10;
  v41[1] = v12;
  v41[2] = v14;
  v41[3] = v16;
  v42 = 2;
  v17 = static ManagedInternalTransaction.existingTransaction(withTransactionID:fqai:source:in:)(v6, v8, (uint64_t)v41, &v42);
  if (v40)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (void *)v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
    {
      v19 = qword_256041CA0;
      v20 = v18;
      if (v19 != -1)
        swift_once();
      v21 = sub_23361DB80();
      __swift_project_value_buffer(v21, (uint64_t)qword_2560495B0);
      v22 = sub_23361DB68();
      v23 = sub_23361E780();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_233151000, v22, v23, "Existing transaction found, updating existing transaction.", v24, 2u);
        MEMORY[0x234934590](v24, -1, -1);
      }

      _s10FinanceKit26ManagedInternalTransactionC6update_011withPaymentE026shouldUpdateRelatedObjectsyAC_So09FKPaymentE0CSbtFZ_0(v20, v38, 1);
      v25 = objc_msgSend(v38, sel_insights);
      if (v25)
      {
        v26 = v25;
        sub_23326FDE0(v25, v20, a3);

      }
      else
      {

      }
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v27 = sub_23361DB80();
      __swift_project_value_buffer(v27, (uint64_t)qword_2560495B0);
      v28 = sub_23361DB68();
      v29 = sub_23361E780();
      v30 = a2;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_233151000, v28, v29, "No existing transaction found, inserting a new transaction.", v31, 2u);
        MEMORY[0x234934590](v31, -1, -1);
      }

      v32 = v38;
      v33 = v30;
      v34 = a3;
      v35 = ManagedInternalTransaction.__allocating_init(_:for:context:)(v32, v33, v34);
      v36 = objc_msgSend(v32, sel_insights);
      if (v36)
      {
        v37 = v36;
        sub_23326FDE0(v36, v35, v34);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_2334163E8(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v8;
  os_activity_scope_state_s state;
  uint64_t v11;

  v4 = v3;
  v11 = *MEMORY[0x24BDAC8D0];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v8 = _os_activity_create(&dword_233151000, "bankConnect/insertOrUpdatePaymentTransaction", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v8, &state);
  sub_2334164E0(v4, a1, a2, a3);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

void sub_2334164E0(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;

  if (qword_256041CA0 != -1)
    swift_once();
  v8 = sub_23361DB80();
  __swift_project_value_buffer(v8, (uint64_t)qword_2560495B0);
  v9 = a2;
  v10 = sub_23361DB68();
  v11 = sub_23361E780();
  if (os_log_type_enabled(v10, v11))
  {
    v46 = a1;
    v47 = a4;
    v48 = a3;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v51 = v13;
    *(_DWORD *)v12 = 136315394;
    v14 = objc_msgSend(v9, sel_transactionId);
    v15 = sub_23361E150();
    v17 = v16;

    sub_233164DCC(v15, v17, &v51);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v18 = objc_msgSend(v9, sel_paymentHash);
    if (v18)
    {
      v19 = v18;
      v20 = sub_23361E150();
      v22 = v21;

    }
    else
    {
      v22 = 0xE90000000000003ELL;
      v20 = 0x6E776F6E6B6E753CLL;
    }
    sub_233164DCC(v20, v22, &v51);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233151000, v10, v11, "Inserting or updating a PassKit payment transaction with ID:\n%s and payment hash: %s.", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v13, -1, -1);
    MEMORY[0x234934590](v12, -1, -1);

    a4 = v47;
    a3 = v48;
    a1 = v46;
  }
  else
  {

  }
  v23 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_newBackgroundContext);
  v45 = MEMORY[0x24BDAC7A8](v23);
  MEMORY[0x24BDAC7A8](v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604EF78);
  v24 = sub_23361E960();
  if (v50)
  {
    v25 = v50;
    v26 = v50;
    v27 = sub_23361DB68();
    v28 = sub_23361E768();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v51 = v30;
      *(_DWORD *)v29 = 136315138;
      swift_getErrorValue();
      v31 = sub_23361F2E4();
      sub_233164DCC(v31, v32, &v51);
      sub_23361EBC4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_233151000, v27, v28, "Failed to insert or update PassKit transaction: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234934590](v30, -1, -1);
      MEMORY[0x234934590](v29, -1, -1);
    }
    else
    {

    }
    sub_2334173DC();
    swift_allocError();
    *v33 = v50;
    swift_willThrow();
    goto LABEL_14;
  }
  v34 = v52;
  if (v52)
  {
    v35 = v51;
    v36 = MEMORY[0x24BDAC7A8](v24);
    MEMORY[0x24BDAC7A8](v36);
    sub_23361E960();
    sub_2332DCF70(v35, v34);
    v37 = sub_23361DB68();
    v43 = sub_23361E780();
    if (!os_log_type_enabled(v37, v43))
      goto LABEL_22;
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_233151000, v37, v43, "Successfully inserted or updated PassKit payment transaction.", v44, 2u);
    v42 = v44;
LABEL_21:
    MEMORY[0x234934590](v42, -1, -1);
LABEL_22:

LABEL_14:
    return;
  }
  v49 = a3;
  swift_bridgeObjectRetain_n();
  v37 = sub_23361DB68();
  v38 = sub_23361E780();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = a4;
    v41 = swift_slowAlloc();
    v51 = v41;
    *(_DWORD *)v39 = 136315138;
    swift_bridgeObjectRetain();
    sub_233164DCC(v49, v40, &v51);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v37, v38, "Ignoring transaction, payment pass with fpanID: %s is not linked with Bank Connect.", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v41, -1, -1);
    v42 = v39;
    goto LABEL_21;
  }

  swift_bridgeObjectRelease_n();
}

void sub_233416BD4(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, void *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInternalAccount();
  v11 = (void *)static ManagedInternalAccount.existingAccount(withExternalAccountID:in:)(a1, a2, (uint64_t)a3);
  if (!v5)
  {
    v12 = v11;
    if (v11)
    {
      sub_233416028(a4, v11, a3);
      v23[0] = 0;
      if (objc_msgSend(a3, sel_save_, v23))
      {
        v13 = v23[0];
        v14 = objc_msgSend(v12, sel_accountId);
        v15 = sub_23361E150();
        v17 = v16;

        v18 = objc_msgSend(v12, sel_institutionId);
        v19 = sub_23361E150();
        v21 = v20;

        *a5 = v15;
        a5[1] = v17;
        a5[2] = v19;
        a5[3] = v21;
      }
      else
      {
        v22 = v23[0];
        sub_23361D1B4();

        swift_willThrow();
      }
    }
    else
    {
      *(_OWORD *)a5 = 0u;
      *((_OWORD *)a5 + 1) = 0u;
    }
  }
}

void sub_233416D68(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v6;
  id v8;
  id v9;
  id v10[5];

  v10[4] = *(id *)MEMORY[0x24BDAC8D0];
  v10[0] = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  sub_2335374D4((uint64_t *)v10, a6);
  if (!v6)
  {
    v10[0] = 0;
    if (objc_msgSend(a6, sel_save_, v10))
    {
      v8 = v10[0];
    }
    else
    {
      v9 = v10[0];
      sub_23361D1B4();

      swift_willThrow();
    }
  }
}

uint64_t BankConnectPassKitTransactionsImporter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t BankConnectPassKitTransactionsImporter.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void **assignWithCopy for BankConnectPassKitTransactionsImporterError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for BankConnectPassKitTransactionsImporterError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for BankConnectPassKitTransactionsImporterError()
{
  return &type metadata for BankConnectPassKitTransactionsImporterError;
}

uint64_t type metadata accessor for BankConnectPassKitTransactionsImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectPassKitTransactionsImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsImporter.__allocating_init(coreDataStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsImporter.importPassKitTransactions(fqaid:passKitTransactionsDataSource:passLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 120)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 120));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_2331676FC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsImporter.insertOrUpdatePaymentTransaction(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void sub_233416FCC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  type metadata accessor for ManagedInternalAccount();
  *(_QWORD *)&v27 = a1;
  *((_QWORD *)&v27 + 1) = a2;
  v28 = a3;
  v29 = a4;
  v11 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v27);
  if (!v5)
  {
    v12 = v11;
    if (v11)
    {
      v13 = objc_msgSend(v11, sel_externalAccountId);
      if (v13)
      {
        v14 = v13;
        v15 = sub_23361E150();
        v17 = v16;

        *a5 = v15;
        a5[1] = v17;
        return;
      }
      if (qword_256041CA0 != -1)
        swift_once();
      v22 = sub_23361DB80();
      __swift_project_value_buffer(v22, (uint64_t)qword_2560495B0);
      v23 = sub_23361DB68();
      v24 = sub_23361E780();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_233151000, v23, v24, "Account is not connected to a pass, no transactions to import.", v25, 2u);
        MEMORY[0x234934590](v25, -1, -1);
      }

    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v18 = sub_23361DB80();
      __swift_project_value_buffer(v18, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v19 = sub_23361DB68();
      v20 = sub_23361E768();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        *(_DWORD *)v21 = 136315138;
        v30 = v26;
        *(_QWORD *)&v27 = 0;
        *((_QWORD *)&v27 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23361ED98();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRetain();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        sub_23361E27C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v27 = sub_233164DCC(v27, *((unint64_t *)&v27 + 1), &v30);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_233151000, v19, v20, "Failed to find an account for %s.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v26, -1, -1);
        MEMORY[0x234934590](v21, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    *a5 = 0;
    a5[1] = 0;
  }
}

void sub_2334173BC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_233416BD4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), a1);
}

unint64_t sub_2334173DC()
{
  unint64_t result;

  result = qword_25604EF80;
  if (!qword_25604EF80)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectPassKitTransactionsImporterError, &type metadata for BankConnectPassKitTransactionsImporterError);
    atomic_store(result, &qword_25604EF80);
  }
  return result;
}

void sub_233417420()
{
  sub_233417458();
}

void sub_233417434()
{
  uint64_t v0;

  sub_233415BA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_233417458()
{
  uint64_t v0;

  sub_233416D68(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_233417478()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_2334174B4(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  sub_233416FCC(v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t Order.FulfillmentWindow.isSingleDateWindow(calendar:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v1 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  sub_2331684BC(v0, (uint64_t)v6, type metadata accessor for Order.FulfillmentWindow);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v6, (uint64_t)v3, type metadata accessor for TimeWindow);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v3, v7);
    sub_233168500((uint64_t)v3, type metadata accessor for TimeWindow);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  }
  Order.FulfillmentWindow.endDate.getter((uint64_t)v11);
  v14 = sub_23361D820();
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v15(v13, v7);
  return v14 & 1;
}

uint64_t Order.FulfillmentWindow.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v28 = a1;
  v3 = sub_23361D748();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D868();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = v28;
    sub_233168580((uint64_t)v18, (uint64_t)v15, type metadata accessor for TimeWindow);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCEF50], v3);
    sub_23361D754();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_23361D808();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
    v21 = sub_23361D634();
    v22 = *(_QWORD *)(v21 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v20, v12, v21);
      return sub_233168500((uint64_t)v15, type metadata accessor for TimeWindow);
    }
  }
  else
  {
    v24 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v28, v18, v24);
  }
  return result;
}

uint64_t Order.FulfillmentWindow.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v9, (uint64_t)v6, type metadata accessor for TimeWindow);
    v11 = sub_23361D634();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, v6, v11);
    return sub_233168500((uint64_t)v6, type metadata accessor for TimeWindow);
  }
  else
  {
    v13 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, v9, v13);
  }
}

uint64_t type metadata accessor for Order.FulfillmentWindow(uint64_t a1)
{
  return sub_233177414(a1, qword_254247260);
}

uint64_t Order.FulfillmentWindow.duration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v2, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v9, (uint64_t)v6, type metadata accessor for TimeWindow);
    sub_2331684BC((uint64_t)&v6[*(int *)(v4 + 20)], a1, (uint64_t (*)(_QWORD))type metadata accessor for Duration);
    sub_233168500((uint64_t)v6, type metadata accessor for TimeWindow);
    v11 = type metadata accessor for Duration();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  else
  {
    v13 = type metadata accessor for Duration();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
    return sub_233168500((uint64_t)v9, type metadata accessor for Order.FulfillmentWindow);
  }
}

uint64_t sub_233417BB8()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E6957656D6974;
  else
    return 1702125924;
}

uint64_t sub_233417BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23341A620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233417C14()
{
  sub_233419760();
  return sub_23361F428();
}

uint64_t sub_233417C3C()
{
  sub_233419760();
  return sub_23361F434();
}

uint64_t sub_233417C64()
{
  sub_2334197E8();
  return sub_23361F428();
}

uint64_t sub_233417C8C()
{
  sub_2334197E8();
  return sub_23361F434();
}

uint64_t sub_233417CB4()
{
  sub_2334197A4();
  return sub_23361F428();
}

uint64_t sub_233417CDC()
{
  sub_2334197A4();
  return sub_23361F434();
}

uint64_t Order.FulfillmentWindow.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EF90);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EF98);
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23361D634();
  v31 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EFA0);
  v12 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233419760();
  sub_23361F410();
  sub_2331684BC(v30, (uint64_t)v11, type metadata accessor for Order.FulfillmentWindow);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = v26;
    sub_233168580((uint64_t)v11, v26, type metadata accessor for TimeWindow);
    v34 = 1;
    sub_2334197A4();
    v16 = v27;
    v17 = v32;
    sub_23361F0C8();
    sub_233167C58(&qword_254245160, type metadata accessor for TimeWindow, (uint64_t)&protocol conformance descriptor for TimeWindow);
    v18 = v29;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v18);
    sub_233168500(v15, type metadata accessor for TimeWindow);
  }
  else
  {
    v20 = v24;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v8, v11, v24);
    v33 = 0;
    sub_2334197E8();
    v17 = v32;
    sub_23361F0C8();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v21 = v25;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v17);
}

uint64_t Order.FulfillmentWindow.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;

  v36 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EFC0);
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v43 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EFC8);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EFD0);
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.FulfillmentWindow(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v18 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_233419760();
  v19 = v45;
  sub_23361F3EC();
  if (v19)
    goto LABEL_5;
  v34 = v12;
  v35 = v15;
  v20 = v43;
  v33 = v17;
  v45 = v9;
  v21 = v6;
  v22 = v8;
  if (*(_QWORD *)(sub_23361F098() + 16) != 1)
  {
    v27 = sub_23361EE10();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v29 = v45;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
LABEL_5:
    v26 = (uint64_t)v44;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v46 = 1;
  sub_2334197A4();
  v23 = v20;
  sub_23361EFA8();
  type metadata accessor for TimeWindow(0);
  sub_233167C58(&qword_254244E20, type metadata accessor for TimeWindow, (uint64_t)&protocol conformance descriptor for TimeWindow);
  v24 = (uint64_t)v34;
  v25 = v37;
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v21);
  v26 = (uint64_t)v44;
  swift_storeEnumTagMultiPayload();
  v31 = (uint64_t)v33;
  sub_233168580(v24, (uint64_t)v33, type metadata accessor for Order.FulfillmentWindow);
  sub_233168580(v31, v36, type metadata accessor for Order.FulfillmentWindow);
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_233418578@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.FulfillmentWindow.init(from:)(a1, a2);
}

uint64_t sub_23341858C(_QWORD *a1)
{
  return Order.FulfillmentWindow.encode(to:)(a1);
}

uint64_t Order.FulfillmentWindow.Formatter.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t Order.FulfillmentWindow.Formatter.configuration.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2331C7090(a1, v1);
}

uint64_t (*Order.FulfillmentWindow.Formatter.configuration.modify())()
{
  return nullsub_1;
}

uint64_t Order.FulfillmentWindow.Formatter.style.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t Order.FulfillmentWindow.Formatter.style.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*Order.FulfillmentWindow.Formatter.style.modify())(_QWORD)
{
  type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  return nullsub_1;
}

uint64_t Order.FulfillmentWindow.Formatter.showDateForSingleDayWindow.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Order.FulfillmentWindow.Formatter(0) + 24));
}

uint64_t Order.FulfillmentWindow.Formatter.showDateForSingleDayWindow.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Order.FulfillmentWindow.Formatter.showDateForSingleDayWindow.modify())(_QWORD)
{
  type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  return nullsub_1;
}

uint64_t Order.FulfillmentWindow.Formatter.init(configuration:style:showDateForSingleDayWindow:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t result;

  v6 = *a2;
  sub_233168580(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  result = type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = v6;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t Order.FulfillmentWindow.Formatter.format(_:now:)(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);

  v25 = a1;
  v26 = a2;
  v24 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v24);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimeWindow.Formatter(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v25, (uint64_t)v17, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v17, (uint64_t)v14, type metadata accessor for TimeWindow);
    sub_2331684BC(v2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v19 = type metadata accessor for Order.FulfillmentWindow.Formatter(0);
    v20 = *(_BYTE *)(v2 + *(int *)(v19 + 24));
    v11[*(int *)(v9 + 20)] = *(_BYTE *)(v2 + *(int *)(v19 + 20));
    v11[*(int *)(v9 + 24)] = v20;
    v21 = TimeWindow.Formatter.format(_:now:)((uint64_t)v14, v26);
    sub_233168500((uint64_t)v11, type metadata accessor for TimeWindow.Formatter);
    sub_233168500((uint64_t)v14, type metadata accessor for TimeWindow);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v17, v5);
    sub_2331684BC(v2, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    v4[*(int *)(v24 + 20)] = *(_BYTE *)(v2
                                      + *(int *)(type metadata accessor for Order.FulfillmentWindow.Formatter(0) + 20));
    v21 = SingleDateFormatter.format(_:now:)((uint64_t)v8, (uint64_t)v26);
    sub_233168500((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v21;
}

uint64_t Order.FulfillmentWindow.Formatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  sub_23361F35C();
  return sub_23361F368();
}

uint64_t sub_233418AD4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 0xD00000000000001ALL;
  if (*v0)
    return v1;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_233418B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23341A70C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233418B60()
{
  sub_2334198E8();
  return sub_23361F428();
}

uint64_t sub_233418B88()
{
  sub_2334198E8();
  return sub_23361F434();
}

uint64_t Order.FulfillmentWindow.Formatter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EFD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334198E8();
  sub_23361F410();
  v10[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for Order.FulfillmentWindow.Formatter(0) + 20));
    v10[13] = 1;
    sub_2332F83C8();
    sub_23361F17C();
    v10[12] = 2;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Order.FulfillmentWindow.Formatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  sub_23361F35C();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t Order.FulfillmentWindow.Formatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v17 = a2;
  v18 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604EFE8);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.FulfillmentWindow.Formatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334198E8();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11 = v5;
  v12 = (uint64_t)v10;
  v24 = 0;
  sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v13 = (uint64_t)v19;
  v14 = v20;
  sub_23361F068();
  sub_233168580(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v22 = 1;
  sub_2332F840C();
  sub_23361F068();
  *(_BYTE *)(v12 + *(int *)(v8 + 20)) = v23;
  v21 = 2;
  v15 = sub_23361F038();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v14);
  *(_BYTE *)(v12 + *(int *)(v8 + 24)) = v15 & 1;
  sub_2331684BC(v12, v17, type metadata accessor for Order.FulfillmentWindow.Formatter);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v12, type metadata accessor for Order.FulfillmentWindow.Formatter);
}

uint64_t sub_233419128@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = Order.FulfillmentWindow.Formatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23341914C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (void (*)(char *, uint64_t))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23361D5F8();
  v8 = Order.FulfillmentWindow.Formatter.format(_:now:)(a1, v7);
  v10 = v9;
  result = (*(uint64_t (**)(_QWORD, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_2334191E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.FulfillmentWindow.Formatter.init(from:)(a1, a2);
}

uint64_t sub_2334191FC(_QWORD *a1)
{
  return Order.FulfillmentWindow.Formatter.encode(to:)(a1);
}

uint64_t sub_233419214()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F35C();
  return sub_23361F368();
}

uint64_t sub_233419328()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F35C();
  sub_23361F368();
  return sub_23361F3A4();
}

uint64_t _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v25 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v25);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.FulfillmentWindow(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F110);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_2331684BC(v26, (uint64_t)v17, type metadata accessor for Order.FulfillmentWindow);
  sub_2331684BC(v27, v18, type metadata accessor for Order.FulfillmentWindow);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2331684BC((uint64_t)v17, (uint64_t)v13, type metadata accessor for Order.FulfillmentWindow);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v21 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      v20 = sub_23361D5E0();
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v21);
      v22(v13, v21);
      sub_233168500((uint64_t)v17, type metadata accessor for Order.FulfillmentWindow);
      return v20 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_9;
  }
  v19 = v25;
  sub_2331684BC((uint64_t)v17, (uint64_t)v11, type metadata accessor for Order.FulfillmentWindow);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_233168500((uint64_t)v11, type metadata accessor for TimeWindow);
LABEL_9:
    sub_23341A878((uint64_t)v17);
LABEL_12:
    v20 = 0;
    return v20 & 1;
  }
  sub_233168580(v18, (uint64_t)v3, type metadata accessor for TimeWindow);
  if ((sub_23361D5E0() & 1) == 0 || (MEMORY[0x234930FF0](&v11[*(int *)(v19 + 20)], &v3[*(int *)(v19 + 20)]) & 1) == 0)
  {
    sub_233168500((uint64_t)v3, type metadata accessor for TimeWindow);
    sub_233168500((uint64_t)v11, type metadata accessor for TimeWindow);
    sub_233168500((uint64_t)v17, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_12;
  }
  sub_233168500((uint64_t)v3, type metadata accessor for TimeWindow);
  sub_233168500((uint64_t)v11, type metadata accessor for TimeWindow);
  sub_233168500((uint64_t)v17, type metadata accessor for Order.FulfillmentWindow);
  v20 = 1;
  return v20 & 1;
}

unint64_t sub_233419760()
{
  unint64_t result;

  result = qword_25604EFA8;
  if (!qword_25604EFA8)
  {
    result = MEMORY[0x234934494](&unk_233648188, &_s17FulfillmentWindowO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EFA8);
  }
  return result;
}

unint64_t sub_2334197A4()
{
  unint64_t result;

  result = qword_25604EFB0;
  if (!qword_25604EFB0)
  {
    result = MEMORY[0x234934494](&unk_233648138, &_s17FulfillmentWindowO20TimeWindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EFB0);
  }
  return result;
}

unint64_t sub_2334197E8()
{
  unint64_t result;

  result = qword_25604EFB8;
  if (!qword_25604EFB8)
  {
    result = MEMORY[0x234934494](&unk_2336480E8, &_s17FulfillmentWindowO14DateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EFB8);
  }
  return result;
}

uint64_t type metadata accessor for Order.FulfillmentWindow.Formatter(uint64_t a1)
{
  return sub_233177414(a1, qword_25604F070);
}

uint64_t _s10FinanceKit5OrderV17FulfillmentWindowO9FormatterV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (v5 = type metadata accessor for Order.FulfillmentWindow.Formatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    v6 = *(_BYTE *)(a1 + *(int *)(v5 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

unint64_t sub_2334198E8()
{
  unint64_t result;

  result = qword_25604EFE0;
  if (!qword_25604EFE0)
  {
    result = MEMORY[0x234934494](&unk_233648098, &_s17FulfillmentWindowO9FormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604EFE0);
  }
  return result;
}

uint64_t sub_23341992C(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_25604EFF0, type metadata accessor for Order.FulfillmentWindow.Formatter, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow.Formatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_233419968()
{
  return sub_233167C58(&qword_25604EFF8, type metadata accessor for Order.FulfillmentWindow.Formatter, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow.Formatter);
}

uint64_t sub_233419994()
{
  return sub_233167C58(&qword_25604F000, type metadata accessor for Order.FulfillmentWindow.Formatter, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow.Formatter);
}

uint64_t sub_2334199C0()
{
  return sub_233167C58(&qword_25604F008, type metadata accessor for Order.FulfillmentWindow.Formatter, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow.Formatter);
}

uint64_t sub_2334199EC()
{
  return sub_233167C58(&qword_25604F010, type metadata accessor for Order.FulfillmentWindow.Formatter, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow.Formatter);
}

uint64_t *_s17FulfillmentWindowOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23361D634();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s17FulfillmentWindowOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23361D634();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
    v6 = sub_23361CD40();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

uint64_t _s17FulfillmentWindowOwcp(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23361CD40();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s17FulfillmentWindowOwca(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Order.FulfillmentWindow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s17FulfillmentWindowOwtk(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23361CD40();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s17FulfillmentWindowOwta(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Order.FulfillmentWindow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v6 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_233419E7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TimeWindow(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s17FulfillmentWindowO9FormatterVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233419F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for FormatterConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t _s17FulfillmentWindowO9FormatterVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233419F8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatterConfiguration();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_23341A004()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s17FulfillmentWindowO9FormatterV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23341A0C4 + 4 * byte_233647B65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23341A0F8 + 4 * byte_233647B60[v4]))();
}

uint64_t sub_23341A0F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341A100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23341A108);
  return result;
}

uint64_t sub_23341A114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23341A11CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23341A120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341A128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17FulfillmentWindowO9FormatterV10CodingKeysOMa()
{
  return &_s17FulfillmentWindowO9FormatterV10CodingKeysON;
}

uint64_t _s17FulfillmentWindowO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23341A190 + 4 * byte_233647B6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23341A1C4 + 4 * byte_233647B6A[v4]))();
}

uint64_t sub_23341A1C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341A1CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23341A1D4);
  return result;
}

uint64_t sub_23341A1E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23341A1E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23341A1EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341A1F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17FulfillmentWindowO10CodingKeysOMa()
{
  return &_s17FulfillmentWindowO10CodingKeysON;
}

ValueMetadata *_s17FulfillmentWindowO14DateCodingKeysOMa()
{
  return &_s17FulfillmentWindowO14DateCodingKeysON;
}

uint64_t _s17FulfillmentWindowO14DateCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23341A264 + 4 * byte_233647B74[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23341A284 + 4 * byte_233647B79[v4]))();
}

_BYTE *sub_23341A264(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23341A284(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23341A28C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23341A294(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23341A29C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23341A2A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s17FulfillmentWindowO20TimeWindowCodingKeysOMa()
{
  return &_s17FulfillmentWindowO20TimeWindowCodingKeysON;
}

unint64_t sub_23341A2C4()
{
  unint64_t result;

  result = qword_25604F0B0;
  if (!qword_25604F0B0)
  {
    result = MEMORY[0x234934494](&unk_233647E48, &_s17FulfillmentWindowO20TimeWindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0B0);
  }
  return result;
}

unint64_t sub_23341A30C()
{
  unint64_t result;

  result = qword_25604F0B8;
  if (!qword_25604F0B8)
  {
    result = MEMORY[0x234934494](&unk_233647F00, &_s17FulfillmentWindowO14DateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0B8);
  }
  return result;
}

unint64_t sub_23341A354()
{
  unint64_t result;

  result = qword_25604F0C0;
  if (!qword_25604F0C0)
  {
    result = MEMORY[0x234934494](&unk_233647FB8, &_s17FulfillmentWindowO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0C0);
  }
  return result;
}

unint64_t sub_23341A39C()
{
  unint64_t result;

  result = qword_25604F0C8;
  if (!qword_25604F0C8)
  {
    result = MEMORY[0x234934494](&unk_233648070, &_s17FulfillmentWindowO9FormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0C8);
  }
  return result;
}

unint64_t sub_23341A3E4()
{
  unint64_t result;

  result = qword_25604F0D0;
  if (!qword_25604F0D0)
  {
    result = MEMORY[0x234934494](&unk_233647FE0, &_s17FulfillmentWindowO9FormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0D0);
  }
  return result;
}

unint64_t sub_23341A42C()
{
  unint64_t result;

  result = qword_25604F0D8;
  if (!qword_25604F0D8)
  {
    result = MEMORY[0x234934494](&unk_233648008, &_s17FulfillmentWindowO9FormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0D8);
  }
  return result;
}

unint64_t sub_23341A474()
{
  unint64_t result;

  result = qword_25604F0E0;
  if (!qword_25604F0E0)
  {
    result = MEMORY[0x234934494](&unk_233647E70, &_s17FulfillmentWindowO14DateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0E0);
  }
  return result;
}

unint64_t sub_23341A4BC()
{
  unint64_t result;

  result = qword_25604F0E8;
  if (!qword_25604F0E8)
  {
    result = MEMORY[0x234934494](&unk_233647E98, &_s17FulfillmentWindowO14DateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0E8);
  }
  return result;
}

unint64_t sub_23341A504()
{
  unint64_t result;

  result = qword_25604F0F0;
  if (!qword_25604F0F0)
  {
    result = MEMORY[0x234934494](&unk_233647DB8, &_s17FulfillmentWindowO20TimeWindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0F0);
  }
  return result;
}

unint64_t sub_23341A54C()
{
  unint64_t result;

  result = qword_25604F0F8;
  if (!qword_25604F0F8)
  {
    result = MEMORY[0x234934494](&unk_233647DE0, &_s17FulfillmentWindowO20TimeWindowCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F0F8);
  }
  return result;
}

unint64_t sub_23341A594()
{
  unint64_t result;

  result = qword_25604F100;
  if (!qword_25604F100)
  {
    result = MEMORY[0x234934494](&unk_233647F28, &_s17FulfillmentWindowO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F100);
  }
  return result;
}

unint64_t sub_23341A5DC()
{
  unint64_t result;

  result = qword_25604F108;
  if (!qword_25604F108)
  {
    result = MEMORY[0x234934494](&unk_233647F50, &_s17FulfillmentWindowO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F108);
  }
  return result;
}

uint64_t sub_23341A620(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E6957656D6974 && a2 == 0xEA0000000000776FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23341A70C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000233676D30)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23341A878(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t FraudAssessmentType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000015;
}

BOOL static FraudAssessmentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FraudAssessmentType.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t FraudAssessmentType.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

unint64_t sub_23341A980()
{
  unint64_t result;

  result = qword_25604F118;
  if (!qword_25604F118)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FraudAssessmentType, &type metadata for FraudAssessmentType);
    atomic_store(result, (unint64_t *)&qword_25604F118);
  }
  return result;
}

unint64_t sub_23341A9C4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000015;
}

uint64_t storeEnumTagSinglePayload for FraudAssessmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23341AA50 + 4 * byte_2336481E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23341AA84 + 4 * byte_2336481E0[v4]))();
}

uint64_t sub_23341AA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341AA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23341AA94);
  return result;
}

uint64_t sub_23341AAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23341AAA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23341AAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341AAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FraudAssessmentType()
{
  return &type metadata for FraudAssessmentType;
}

BOOL static SingleDateFormatter.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SingleDateFormatter.init(configuration:style:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = *a2;
  sub_233168580(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  result = type metadata accessor for SingleDateFormatter();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t type metadata accessor for SingleDateFormatter()
{
  uint64_t result;

  result = qword_25604F208;
  if (!qword_25604F208)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SingleDateFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t (*v66)();
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v3 = v2;
  v128 = a2;
  v131 = a1;
  v103 = type metadata accessor for FullDateFormatter();
  v4 = MEMORY[0x24BDAC7A8](v103);
  v101 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v105 = (uint64_t)&v93 - v6;
  v108 = sub_23361D4E4();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23361D8A4();
  v100 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v104 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v9);
  v98 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v11);
  v95 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v13);
  v121 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23361D508();
  v96 = *(_QWORD *)(v99 - 8);
  v15 = MEMORY[0x24BDAC7A8](v99);
  v94 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v93 - v17;
  v18 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v18);
  v120 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23361D55C();
  MEMORY[0x24BDAC7A8](v20);
  v113 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23361D868();
  v116 = *(_QWORD *)(v22 - 8);
  v117 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v119 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23361D73C();
  v114 = *(_QWORD *)(v24 - 8);
  v115 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v118 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23361D580();
  MEMORY[0x24BDAC7A8](v26);
  v109 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23361D5A4();
  v111 = *(_QWORD *)(v28 - 8);
  v112 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v110 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23361CD40();
  v126 = *(_QWORD *)(v30 - 8);
  v127 = v30;
  MEMORY[0x24BDAC7A8](v30);
  v125 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for RelativeDayFormatter();
  MEMORY[0x24BDAC7A8](v32);
  v129 = (uint64_t)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23361D634();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v123 = (uint64_t)&v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v122 = (uint64_t)&v93 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v93 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v93 - v43;
  v93 = type metadata accessor for SingleDateFormatter();
  v45 = MEMORY[0x24BDAC7A8](v93);
  v47 = (char *)&v93 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v93 - v48;
  v50 = v13;
  v51 = *(int *)(v13 + 20);
  v52 = v131;
  v124 = v2 + v51;
  v53 = sub_23361D7B4();
  v130 = v3;
  sub_2331684BC(v3, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v54(v44, v52, v34);
  if ((v53 & 1) != 0)
    v55 = 1;
  else
    v55 = sub_23361D76C();
  v56 = *(void (**)(char *, uint64_t))(v35 + 8);
  v56(v44, v34);
  sub_233168500((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  v57 = v130;
  sub_2331684BC(v130, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  v54(v42, v131, v34);
  if ((v55 & 1) != 0)
  {
    v56(v42, v34);
    sub_233168500((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
LABEL_7:
    v60 = v129;
    v61 = sub_2331684BC(v57, v129, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    MEMORY[0x24BDAC7A8](v61);
    *(&v93 - 2) = v60;
    v62 = sub_2333DF100(v60, (void (*)(void))sub_2333DF0F8);
    v63 = (void *)sub_23361D5B0();
    v64 = objc_msgSend(v62, sel_stringFromDate_, v63);

    v65 = sub_23361E150();
    v66 = type metadata accessor for RelativeDayFormatter;
    v67 = v60;
    goto LABEL_8;
  }
  v58 = v50;
  v59 = sub_23361D7A8();
  v56(v42, v34);
  sub_233168500((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  if ((v59 & 1) != 0)
    goto LABEL_7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
  v69 = sub_23361D850();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_233623D60;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v70 + 104))(v72 + v71, *MEMORY[0x24BDCF220], v69);
  sub_2333EF4B0(v72);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v73 = v122;
  v74 = v128;
  Date.noon.getter(v122);
  v75 = v123;
  Date.noon.getter(v123);
  v77 = v124;
  v76 = v125;
  sub_23361D784();
  swift_bridgeObjectRelease();
  v56((char *)v75, v34);
  v56((char *)v73, v34);
  v78 = sub_23361CC98();
  LOBYTE(v72) = v79;
  result = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v76, v127);
  if ((v72 & 1) == 0)
  {
    v80 = v130;
    v81 = v121;
    if ((unint64_t)(v78 + 1) >= 0xFFFFFFFFFFFFFFF3)
    {
      sub_23361D574();
      (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v118, v80, v115);
      (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v119, v77, v117);
      sub_23361D550();
      sub_23361D1FC();
      v85 = v110;
      sub_23361D58C();
      v65 = sub_23361D598();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v85, v112);
      return v65;
    }
    sub_2331684BC(v130, v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    if ((unint64_t)(v78 - 7) >= 0xFFFFFFFFFFFFFFFBLL)
    {
      v86 = sub_23361D43C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v95, 1, 1, v86);
      v87 = sub_23361D424();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v98, 1, 1, v87);
      (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v118, v81, v115);
      (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v119, v81 + *(int *)(v58 + 20), v117);
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v104, v81 + *(int *)(v58 + 24), v102);
      sub_23361D1FC();
      v88 = v94;
      sub_23361D454();
      sub_233168500(v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
      v89 = v106;
      sub_23361D4D8();
      v90 = v97;
      sub_23361D4FC();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v89, v108);
      v91 = *(void (**)(char *, uint64_t))(v96 + 8);
      v92 = v99;
      v91(v88, v99);
      v65 = sub_23361D4F0();
      v91(v90, v92);
      return v65;
    }
    v82 = *(_BYTE *)(v80 + *(int *)(v93 + 20));
    v83 = (uint64_t)v101;
    sub_23361D6D0();
    sub_23361D7D8();
    sub_23361D88C();
    sub_2331C7090(v81, v83);
    *(_BYTE *)(v83 + *(int *)(v103 + 20)) = v82;
    v84 = v105;
    sub_233168580(v83, v105, (uint64_t (*)(_QWORD))type metadata accessor for FullDateFormatter);
    v65 = FullDateFormatter.format(_:now:)(v131, v74);
    v67 = v84;
    v66 = type metadata accessor for FullDateFormatter;
LABEL_8:
    sub_233168500(v67, (uint64_t (*)(_QWORD))v66);
    return v65;
  }
  __break(1u);
  return result;
}

uint64_t SingleDateFormatter.Style.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_23341B6B0()
{
  _BYTE *v0;

  if (*v0)
    return 1701079415;
  else
    return 0x74726F6873;
}

uint64_t sub_23341B6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23341CDB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23341B704()
{
  sub_23341C614();
  return sub_23361F428();
}

uint64_t sub_23341B72C()
{
  sub_23341C614();
  return sub_23361F434();
}

uint64_t sub_23341B754()
{
  sub_23341C69C();
  return sub_23361F428();
}

uint64_t sub_23341B77C()
{
  sub_23341C69C();
  return sub_23361F434();
}

uint64_t sub_23341B7A4()
{
  sub_23341C658();
  return sub_23361F428();
}

uint64_t sub_23341B7CC()
{
  sub_23341C658();
  return sub_23361F434();
}

uint64_t SingleDateFormatter.Style.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F120);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F128);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F130);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23341C614();
  sub_23361F410();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23341C658();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23341C69C();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t SingleDateFormatter.Style.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t SingleDateFormatter.Style.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F150);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F158);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F160);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23341C614();
  v11 = v33;
  sub_23361F3EC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23361F098();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23361EE10();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v21 = &type metadata for SingleDateFormatter.Style;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23341C658();
    sub_23361EFA8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23341C69C();
    v22 = v6;
    sub_23361EFA8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23341BD64@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SingleDateFormatter.Style.init(from:)(a1, a2);
}

uint64_t sub_23341BD78(_QWORD *a1)
{
  return SingleDateFormatter.Style.encode(to:)(a1);
}

uint64_t SingleDateFormatter.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331684BC(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t SingleDateFormatter.configuration.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2331C7090(a1, v1);
}

uint64_t (*SingleDateFormatter.configuration.modify())()
{
  return nullsub_1;
}

uint64_t SingleDateFormatter.style.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SingleDateFormatter();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t SingleDateFormatter.style.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for SingleDateFormatter();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*SingleDateFormatter.style.modify())(_QWORD)
{
  type metadata accessor for SingleDateFormatter();
  return nullsub_1;
}

uint64_t SingleDateFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for SingleDateFormatter();
  return sub_23361F35C();
}

uint64_t static SingleDateFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
  {
    v5 = type metadata accessor for SingleDateFormatter();
    v6 = *(_BYTE *)(a1 + *(int *)(v5 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v5 + 20)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_23341BFEC()
{
  sub_23341C6E0();
  return sub_23361F428();
}

uint64_t sub_23341C014()
{
  sub_23341C6E0();
  return sub_23361F434();
}

uint64_t SingleDateFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F168);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23341C6E0();
  sub_23361F410();
  v10[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for SingleDateFormatter() + 20));
    v10[13] = 1;
    sub_2332F83C8();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SingleDateFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for SingleDateFormatter();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t SingleDateFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v18 = a2;
  v19 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F178);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23341C6E0();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v17 = v8;
  v11 = (uint64_t)v10;
  v24 = 0;
  sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  v12 = (uint64_t)v20;
  v13 = v21;
  sub_23361F068();
  sub_233168580(v12, v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v22 = 1;
  sub_2332F840C();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  v14 = v18;
  *(_BYTE *)(v11 + *(int *)(v17 + 20)) = v23;
  sub_2331684BC(v11, v14, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_233168500(v11, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
}

uint64_t sub_23341C52C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = SingleDateFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23341C550@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = SingleDateFormatter.format(_:now:)(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_23341C5EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleDateFormatter.init(from:)(a1, a2);
}

uint64_t sub_23341C600(_QWORD *a1)
{
  return SingleDateFormatter.encode(to:)(a1);
}

unint64_t sub_23341C614()
{
  unint64_t result;

  result = qword_25604F138;
  if (!qword_25604F138)
  {
    result = MEMORY[0x234934494](&unk_23364881C, &type metadata for SingleDateFormatter.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F138);
  }
  return result;
}

unint64_t sub_23341C658()
{
  unint64_t result;

  result = qword_25604F140;
  if (!qword_25604F140)
  {
    result = MEMORY[0x234934494](&unk_2336487CC, &type metadata for SingleDateFormatter.Style.WideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F140);
  }
  return result;
}

unint64_t sub_23341C69C()
{
  unint64_t result;

  result = qword_25604F148;
  if (!qword_25604F148)
  {
    result = MEMORY[0x234934494](&unk_23364877C, &type metadata for SingleDateFormatter.Style.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F148);
  }
  return result;
}

unint64_t sub_23341C6E0()
{
  unint64_t result;

  result = qword_25604F170;
  if (!qword_25604F170)
  {
    result = MEMORY[0x234934494](&unk_23364872C, &type metadata for SingleDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F170);
  }
  return result;
}

unint64_t sub_23341C728()
{
  unint64_t result;

  result = qword_25604F180;
  if (!qword_25604F180)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for SingleDateFormatter.Style, &type metadata for SingleDateFormatter.Style);
    atomic_store(result, (unint64_t *)&qword_25604F180);
  }
  return result;
}

uint64_t sub_23341C76C(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_25604F188, (uint64_t (*)(uint64_t))type metadata accessor for SingleDateFormatter, (uint64_t)&protocol conformance descriptor for SingleDateFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23341C7A8()
{
  return sub_233167C58(&qword_25604F190, (uint64_t (*)(uint64_t))type metadata accessor for SingleDateFormatter, (uint64_t)&protocol conformance descriptor for SingleDateFormatter);
}

uint64_t sub_23341C7D4()
{
  return sub_233167C58(&qword_25604F198, (uint64_t (*)(uint64_t))type metadata accessor for SingleDateFormatter, (uint64_t)&protocol conformance descriptor for SingleDateFormatter);
}

uint64_t sub_23341C800()
{
  return sub_233167C58(&qword_25604F1A0, (uint64_t (*)(uint64_t))type metadata accessor for SingleDateFormatter, (uint64_t)&protocol conformance descriptor for SingleDateFormatter);
}

uint64_t sub_23341C82C()
{
  return sub_233167C58(&qword_25604F1A8, (uint64_t (*)(uint64_t))type metadata accessor for SingleDateFormatter, (uint64_t)&protocol conformance descriptor for SingleDateFormatter);
}

uint64_t getEnumTagSinglePayload for SingleDateFormatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23341C864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for FormatterConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SingleDateFormatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23341C8E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatterConfiguration();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_23341C960()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleDateFormatter.Style()
{
  return &type metadata for SingleDateFormatter.Style;
}

ValueMetadata *type metadata accessor for SingleDateFormatter.CodingKeys()
{
  return &type metadata for SingleDateFormatter.CodingKeys;
}

uint64_t _s10FinanceKit19SingleDateFormatterV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23341CA40 + 4 * byte_2336482A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23341CA74 + 4 * byte_2336482A0[v4]))();
}

uint64_t sub_23341CA74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341CA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23341CA84);
  return result;
}

uint64_t sub_23341CA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23341CA98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23341CA9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341CAA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SingleDateFormatter.Style.CodingKeys()
{
  return &type metadata for SingleDateFormatter.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for SingleDateFormatter.Style.ShortCodingKeys()
{
  return &type metadata for SingleDateFormatter.Style.ShortCodingKeys;
}

ValueMetadata *type metadata accessor for SingleDateFormatter.Style.WideCodingKeys()
{
  return &type metadata for SingleDateFormatter.Style.WideCodingKeys;
}

unint64_t sub_23341CAE4()
{
  unint64_t result;

  result = qword_25604F240;
  if (!qword_25604F240)
  {
    result = MEMORY[0x234934494](&unk_23364864C, &type metadata for SingleDateFormatter.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F240);
  }
  return result;
}

unint64_t sub_23341CB2C()
{
  unint64_t result;

  result = qword_25604F248;
  if (!qword_25604F248)
  {
    result = MEMORY[0x234934494](&unk_233648704, &type metadata for SingleDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F248);
  }
  return result;
}

unint64_t sub_23341CB74()
{
  unint64_t result;

  result = qword_25604F250;
  if (!qword_25604F250)
  {
    result = MEMORY[0x234934494](&unk_233648674, &type metadata for SingleDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F250);
  }
  return result;
}

unint64_t sub_23341CBBC()
{
  unint64_t result;

  result = qword_25604F258;
  if (!qword_25604F258)
  {
    result = MEMORY[0x234934494](&unk_23364869C, &type metadata for SingleDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F258);
  }
  return result;
}

unint64_t sub_23341CC04()
{
  unint64_t result;

  result = qword_25604F260;
  if (!qword_25604F260)
  {
    result = MEMORY[0x234934494](&unk_23364856C, &type metadata for SingleDateFormatter.Style.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F260);
  }
  return result;
}

unint64_t sub_23341CC4C()
{
  unint64_t result;

  result = qword_25604F268;
  if (!qword_25604F268)
  {
    result = MEMORY[0x234934494](&unk_233648594, &type metadata for SingleDateFormatter.Style.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F268);
  }
  return result;
}

unint64_t sub_23341CC94()
{
  unint64_t result;

  result = qword_25604F270;
  if (!qword_25604F270)
  {
    result = MEMORY[0x234934494](&unk_23364851C, &type metadata for SingleDateFormatter.Style.WideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F270);
  }
  return result;
}

unint64_t sub_23341CCDC()
{
  unint64_t result;

  result = qword_25604F278;
  if (!qword_25604F278)
  {
    result = MEMORY[0x234934494](&unk_233648544, &type metadata for SingleDateFormatter.Style.WideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F278);
  }
  return result;
}

unint64_t sub_23341CD24()
{
  unint64_t result;

  result = qword_25604F280;
  if (!qword_25604F280)
  {
    result = MEMORY[0x234934494](&unk_2336485BC, &type metadata for SingleDateFormatter.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F280);
  }
  return result;
}

unint64_t sub_23341CD6C()
{
  unint64_t result;

  result = qword_25604F288;
  if (!qword_25604F288)
  {
    result = MEMORY[0x234934494](&unk_2336485E4, &type metadata for SingleDateFormatter.Style.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F288);
  }
  return result;
}

uint64_t sub_23341CDB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74726F6873 && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701079415 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t InternalConsentAsyncSequence.makeAsyncIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v19[24];
  uint64_t v20;
  _BYTE v21[40];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)(v1 + 16);
  v7 = *(_BYTE *)(v1 + 24);
  sub_233177068(v1 + 32, (uint64_t)v21);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = sub_23361D6A0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  sub_233177068((uint64_t)v21, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256045A38);
  v10 = swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)&v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  v15 = *v13;
  v16 = v6;
  swift_retain();
  v17 = sub_23341D248((unint64_t)v5, (unint64_t)v6, v7, v15, 0, 0, v8, v10);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  *a1 = v17;
  return result;
}

uint64_t InternalConsentAsyncSequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2560486E0 + dword_2560486E0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return v5(a1);
}

uint64_t sub_23341D078(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2560486E0 + dword_2560486E0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23318C26C;
  return v5(a1);
}

uint64_t sub_23341D0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = v4;
  v5[5] = a4;
  v5[3] = a1;
  if (a2)
  {
    swift_getObjectType();
    v6 = sub_23361E474();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v5[6] = v6;
  v5[7] = v8;
  return swift_task_switch();
}

uint64_t sub_23341D15C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((char *)&dword_2560486E0 + dword_2560486E0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_2332B6674;
  return v3(*(_QWORD *)(v0 + 24));
}

uint64_t InternalConsentAsyncSequence.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_release();
  return v0;
}

uint64_t InternalConsentAsyncSequence.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23341D224@<X0>(uint64_t *a1@<X8>)
{
  InternalConsentAsyncSequence.makeAsyncIterator()(a1);
  return swift_release();
}

uint64_t sub_23341D248(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(void *@<X0>, uint64_t@<X8>);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  os_activity_t v49;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v52 = a6;
  v54 = a5;
  LOBYTE(v11) = a3;
  v14 = sub_23361E900();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FinanceStore();
  v63 = &off_250487D20;
  *(_BYTE *)(a8 + 16) = 0;
  *(_QWORD *)(a8 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + qword_2560CD360) = 0;
  v62 = v17;
  v61[0] = a4;
  v18 = (char *)qword_2560CD368;
  *(_QWORD *)(a8 + qword_2560CD368) = 0;
  v19 = a8 + qword_2560CD3A0;
  v20 = qword_256041CB0;
  swift_retain();
  if (v20 != -1)
LABEL_25:
    swift_once();
  v21 = sub_23361DB80();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_2560495E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v22, v21);
  v53 = a1;
  sub_2331D7514(a1, a8 + qword_2560CD380);
  *(_BYTE *)(a8 + 32) = v11 & 1;
  *(_QWORD *)(a8 + qword_2560CD358) = a7;
  v23 = (void (**)(void *@<X0>, uint64_t@<X8>))(a8 + qword_2560CD390);
  *v23 = sub_23341D864;
  v23[1] = 0;
  v24 = *(void **)&v18[a8];
  *(_QWORD *)&v18[a8] = a2;
  swift_retain();

  v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v25;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v26 = swift_allocObject();
  sub_23318B020(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v27 = (_QWORD *)(a8 + qword_2560CD370);
  *v27 = &unk_2560443D8;
  v27[1] = v26;
  v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v28;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v29 = swift_allocObject();
  sub_23318B020(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v30 = (_QWORD *)(a8 + qword_2560CD378);
  *v30 = &unk_256048730;
  v30[1] = v29;
  *(_QWORD *)(a8 + qword_2560CD388) = v54;
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_23361E90C();

  sub_23361E8E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_2560CD348, v16, v56);
  v32 = objc_msgSend(*(id *)(a7 + 16), sel_persistentStoreCoordinator);
  v33 = objc_msgSend(v32, sel_persistentStores);

  sub_2331D767C();
  a1 = sub_23361E3F0();

  if (!(a1 >> 62))
  {
    a7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a7)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    v41 = 0;
    v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a7 = sub_23361EF30();
  if (!a7)
    goto LABEL_15;
LABEL_4:
  a2 = a1 & 0xC000000000000001;
  v11 = 4;
  while (1)
  {
    v19 = v11 - 4;
    if (a2)
      v34 = (char *)MEMORY[0x234933120](v11 - 4, a1);
    else
      v34 = (char *)*(id *)(a1 + 8 * v11);
    v18 = v34;
    v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v35 = objc_msgSend(v34, sel_configurationName);
    v16 = (char *)sub_23361E150();
    v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      break;

    ++v11;
    if (v17 == a7)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  v40 = objc_msgSend(v18, sel_identifier);

  if (!v40)
    goto LABEL_20;
  v41 = sub_23361E150();
  v43 = v42;

LABEL_21:
  v44 = v52;
  v45 = v53;
  v46 = (uint64_t *)(a8 + qword_2560CD350);
  *v46 = v41;
  v46[1] = v43;
  *(_QWORD *)(a8 + qword_2560CD398) = v44;
  v47 = qword_254246ED0;
  v48 = v44;
  if (v47 != -1)
    swift_once();
  v49 = _os_activity_create(&dword_233151000, "FinancialDataAsyncIterator", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_2331D76B8(v45);
  *(_QWORD *)(a8 + qword_2560CD3A8) = v49;
  return a8;
}

unint64_t sub_23341D7E4()
{
  unint64_t result;

  result = qword_25604F2A8;
  if (!qword_25604F2A8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for InternalConsentAsyncSequence.Iterator, &type metadata for InternalConsentAsyncSequence.Iterator);
    atomic_store(result, (unint64_t *)&qword_25604F2A8);
  }
  return result;
}

uint64_t type metadata accessor for InternalConsentAsyncSequence()
{
  return objc_opt_self();
}

uint64_t method lookup function for InternalConsentAsyncSequence()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for InternalConsentAsyncSequence.Iterator()
{
  return &type metadata for InternalConsentAsyncSequence.Iterator;
}

void sub_23341D864(void *a1@<X0>, uint64_t a2@<X8>)
{
  BankConnectConsent.init(_:)(a1, a2);
}

uint64_t sub_23341D894()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

double Order.LineItem.init(_:bundle:)@<D0>(__int128 *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  void *object;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  double result;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[32];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v3 = a1[1];
  v33 = *a1;
  v34 = v3;
  v4 = a1[5];
  *(_OWORD *)&v36[16] = a1[4];
  v37 = v4;
  v5 = a1[7];
  v38 = a1[6];
  v39 = v5;
  v6 = a1[3];
  v35 = a1[2];
  *(_OWORD *)v36 = v6;
  v25 = v33;
  swift_bridgeObjectRetain_n();
  if ((_QWORD)v35)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)OrderBundle.localizedString(forKey:)();
    swift_bridgeObjectRelease();
    v8 = sub_23361D6B8();
    v9 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v8);
    *((_QWORD *)&v24 + 1) = v9._countAndFlagsBits;
    object = v9._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    object = 0;
    *((_QWORD *)&v24 + 1) = *((_QWORD *)&v34 + 1);
  }
  *(_QWORD *)&v24 = v34;
  swift_bridgeObjectRetain();
  v11 = (void *)OrderBundle.localizedString(forKey:)();
  v12 = sub_23361D6B8();
  v13 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v12);

  swift_release();
  swift_bridgeObjectRelease();
  v23 = *(_OWORD *)&v36[8];
  v14 = *(_QWORD *)&v36[24];
  v15 = v37;
  v16 = v38;
  v17 = v39;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_23328C168((uint64_t)&v33);
  v26 = v25;
  v27 = v24;
  *(_QWORD *)&v28 = object;
  *((_QWORD *)&v28 + 1) = v13._countAndFlagsBits;
  *(_QWORD *)v29 = v13._object;
  *(_OWORD *)&v29[8] = v23;
  *(_QWORD *)&v29[24] = v14;
  v30 = v15;
  v31 = v16;
  v32 = v17;
  sub_23328C0F4((uint64_t)&v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23328C168((uint64_t)&v26);
  v18 = v30;
  a2[4] = *(_OWORD *)&v29[16];
  a2[5] = v18;
  v19 = v32;
  a2[6] = v31;
  a2[7] = v19;
  v20 = v27;
  *a2 = v26;
  a2[1] = v20;
  result = *(double *)&v28;
  v22 = *(_OWORD *)v29;
  a2[2] = v28;
  a2[3] = v22;
  return result;
}

double Order.LineItem.init(_:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  id v14;
  uint64_t v15;
  Swift::String v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  double result;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t countAndFlagsBits;
  uint64_t v42;
  id v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[32];
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v4 = objc_msgSend(a1, sel_image);
  if (v4)
  {
    v5 = v4;
    v42 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v42 = 0;
    v7 = 0;
  }
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(a1, sel_quantity);
  v9 = objc_msgSend(a1, sel_subtitle);
  v43 = v8;
  v44 = v7;
  if (v9)
  {
    v10 = v9;
    v11 = sub_23361D6B8();
    v12 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v11);
    countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(a1, sel_title);
  v15 = sub_23361D6B8();
  v16 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v15);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v17 = objc_msgSend(a1, sel_priceAmount);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(a1, sel_priceCurrency);
    if (v19)
    {
      v20 = v19;
      v40 = sub_23361E150();
      v22 = v21;

      objc_msgSend(v18, sel_decimalValue);
      v38 = v46;
      v39 = v45;

      goto LABEL_12;
    }

  }
  v39 = 0uLL;
  v38 = 0;
  v40 = 0;
  v22 = 0;
LABEL_12:
  swift_bridgeObjectRetain();
  v23 = objc_msgSend(a1, sel_sku);
  if (v23)
  {
    v24 = v23;
    v25 = sub_23361E150();
    v27 = v26;

  }
  else
  {
    v25 = 0;
    v27 = 0;
  }
  swift_bridgeObjectRetain();
  v28 = objc_msgSend(a1, sel_gtin);
  if (v28)
  {
    v29 = v28;
    v30 = sub_23361E150();
    v32 = v31;

  }
  else
  {

    v30 = 0;
    v32 = 0;
  }
  *(_QWORD *)&v45 = v42;
  *((_QWORD *)&v45 + 1) = v44;
  *(_QWORD *)&v46 = v43;
  *((_QWORD *)&v46 + 1) = countAndFlagsBits;
  *(_QWORD *)&v47 = object;
  *((_QWORD *)&v47 + 1) = v16._countAndFlagsBits;
  *(_QWORD *)v48 = v16._object;
  *(_OWORD *)&v48[8] = v39;
  *(_QWORD *)&v48[24] = v38;
  *(_QWORD *)&v49 = v40;
  *((_QWORD *)&v49 + 1) = v22;
  *(_QWORD *)&v50 = v25;
  *((_QWORD *)&v50 + 1) = v27;
  *(_QWORD *)&v51 = v30;
  *((_QWORD *)&v51 + 1) = v32;
  sub_23328C0F4((uint64_t)&v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23328C168((uint64_t)&v45);
  v33 = v49;
  a2[4] = *(_OWORD *)&v48[16];
  a2[5] = v33;
  v34 = v51;
  a2[6] = v50;
  a2[7] = v34;
  v35 = v46;
  *a2 = v45;
  a2[1] = v35;
  result = *(double *)&v47;
  v37 = *(_OWORD *)v48;
  a2[2] = v47;
  a2[3] = v37;
  return result;
}

uint64_t Order.LineItem.image.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.LineItem.image.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Order.LineItem.image.modify())()
{
  return nullsub_1;
}

uint64_t Order.LineItem.quantity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t Order.LineItem.quantity.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*Order.LineItem.quantity.modify())()
{
  return nullsub_1;
}

uint64_t Order.LineItem.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.LineItem.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Order.LineItem.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t Order.LineItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.LineItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Order.LineItem.title.modify())()
{
  return nullsub_1;
}

uint64_t Order.LineItem.price.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 Order.LineItem.price.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;

  v4 = (__n128)a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 56) = v5;
  result = v4;
  *(__n128 *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 88) = v2;
  return result;
}

uint64_t (*Order.LineItem.price.modify())()
{
  return nullsub_1;
}

uint64_t Order.LineItem.sku.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.LineItem.sku.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*Order.LineItem.sku.modify())()
{
  return nullsub_1;
}

uint64_t Order.LineItem.gtin.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.LineItem.gtin.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*Order.LineItem.gtin.modify())()
{
  return nullsub_1;
}

uint64_t sub_23341E098()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23341E0C4
                                                            + 4 * asc_233648980[*v0]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_23341E0C4()
{
  return 0x797469746E617571;
}

uint64_t sub_23341E0DC()
{
  return 0x656C746974627573;
}

uint64_t sub_23341E0F4()
{
  return 0x656C746974;
}

uint64_t sub_23341E104()
{
  return 0x6563697270;
}

uint64_t sub_23341E114()
{
  return 7695219;
}

uint64_t sub_23341E124()
{
  return 1852404839;
}

uint64_t sub_23341E134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23341F384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23341E158()
{
  sub_23341EE20();
  return sub_23361F428();
}

uint64_t sub_23341E180()
{
  sub_23341EE20();
  return sub_23361F434();
}

uint64_t Order.LineItem.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F368);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v25 = v1[3];
  v26 = v7;
  v8 = v1[4];
  v23 = v1[5];
  v24 = v8;
  v9 = v1[6];
  v10 = v1[8];
  v17 = v1[7];
  v18 = v10;
  v11 = v1[10];
  v19 = v1[9];
  v20 = v11;
  v21 = v1[11];
  v22 = v9;
  v12 = v1[13];
  v16[3] = v1[12];
  v16[4] = v12;
  v13 = v1[14];
  v16[1] = v1[15];
  v16[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23341EE20();
  sub_23361F410();
  LOBYTE(v28) = 0;
  v14 = v27;
  sub_23361F0E0();
  if (!v14)
  {
    LOBYTE(v28) = 1;
    sub_23361F164();
    LOBYTE(v28) = 2;
    sub_23361F0E0();
    LOBYTE(v28) = 3;
    sub_23361F140();
    v28 = v17;
    v29 = v18;
    v30 = v19;
    v31 = v20;
    v32 = v21;
    v33 = 4;
    sub_23317231C();
    sub_23361F110();
    LOBYTE(v28) = 5;
    sub_23361F0E0();
    LOBYTE(v28) = 6;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Order.LineItem.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F378);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_23341EE20();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v48 = v6;
    LOBYTE(v58) = 0;
    v10 = sub_23361EFCC();
    v12 = v11;
    LOBYTE(v58) = 1;
    swift_bridgeObjectRetain();
    v13 = sub_23361F050();
    v46 = v12;
    LOBYTE(v58) = 2;
    v14 = sub_23361EFCC();
    v16 = v15;
    v45 = v14;
    LOBYTE(v58) = 3;
    swift_bridgeObjectRetain();
    v42 = sub_23361F02C();
    v43 = v10;
    v44 = v16;
    LOBYTE(v50) = 4;
    v18 = v17;
    sub_233172558();
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    v47 = v18;
    v40 = v59;
    v41 = v58;
    v19 = v62;
    v38 = v61;
    v39 = v60;
    LOBYTE(v58) = 5;
    swift_bridgeObjectRetain();
    v20 = sub_23361EFCC();
    v22 = v21;
    v37 = v20;
    v74 = 6;
    swift_bridgeObjectRetain();
    v23 = sub_23361EFCC();
    v24 = *(void (**)(char *, uint64_t))(v48 + 8);
    v48 = v23;
    v36 = v25;
    v24(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = v44;
    v27 = v46;
    *(_QWORD *)&v50 = v43;
    *((_QWORD *)&v50 + 1) = v46;
    *(_QWORD *)&v51 = v13;
    *((_QWORD *)&v51 + 1) = v45;
    *(_QWORD *)&v52 = v44;
    *((_QWORD *)&v52 + 1) = v42;
    *(_QWORD *)&v53 = v47;
    *((_QWORD *)&v53 + 1) = v41;
    *(_QWORD *)&v54 = v40;
    *((_QWORD *)&v54 + 1) = v39;
    *(_QWORD *)&v55 = v38;
    *((_QWORD *)&v55 + 1) = v19;
    v28 = v19;
    v29 = v36;
    *(_QWORD *)&v56 = v37;
    *((_QWORD *)&v56 + 1) = v22;
    *(_QWORD *)&v57 = v48;
    *((_QWORD *)&v57 + 1) = v36;
    sub_23328C0F4((uint64_t)&v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v55;
    a2[4] = v54;
    a2[5] = v30;
    v31 = v57;
    a2[6] = v56;
    a2[7] = v31;
    v32 = v51;
    *a2 = v50;
    a2[1] = v32;
    v33 = v53;
    a2[2] = v52;
    a2[3] = v33;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
    v58 = v43;
    v59 = v27;
    v60 = v13;
    v61 = v45;
    v62 = v26;
    v63 = v42;
    v64 = v47;
    v65 = v41;
    v66 = v40;
    v67 = v39;
    v68 = v38;
    v69 = v28;
    v70 = v37;
    v71 = v22;
    v72 = v48;
    v73 = v29;
    return sub_23328C168((uint64_t)&v58);
  }
}

uint64_t sub_23341E9AC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return Order.LineItem.init(from:)(a1, a2);
}

uint64_t sub_23341E9C0(_QWORD *a1)
{
  return Order.LineItem.encode(to:)(a1);
}

BOOL _s10FinanceKit5OrderV8LineItemV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  v10 = a1[8];
  v11 = a1[10];
  v97 = a1[9];
  v13 = a1[11];
  v12 = a1[12];
  v15 = a1[13];
  v14 = a1[14];
  v16 = a1[15];
  v17 = a2[1];
  v18 = a2[2];
  v19 = a2[3];
  v20 = a2[4];
  v22 = a2[5];
  v21 = a2[6];
  v96 = a2[7];
  v95 = a2[8];
  v23 = a2[10];
  v94 = a2[9];
  v24 = a2[11];
  v25 = a2[12];
  v27 = a2[13];
  v26 = a2[14];
  v28 = a2[15];
  if (v3)
  {
    if (!v17)
      return 0;
    if (*a1 == *a2 && v3 == v17)
    {
      if (v4 != v18)
        return 0;
    }
    else
    {
      v85 = a2[10];
      v67 = a1[7];
      v68 = a1[10];
      v88 = a2[11];
      v91 = a1[14];
      v76 = a1[11];
      v78 = a1[12];
      v70 = a2[12];
      v72 = a1[13];
      v80 = a2[15];
      v82 = a2[13];
      v74 = a2[14];
      v69 = a1[15];
      v30 = sub_23361F224();
      result = 0;
      if ((v30 & 1) == 0)
        return result;
      v24 = v88;
      v14 = v91;
      v16 = v69;
      v25 = v70;
      v12 = v78;
      v28 = v80;
      v15 = v72;
      v26 = v74;
      v27 = v82;
      v13 = v76;
      v9 = v67;
      v11 = v68;
      v23 = v85;
      if (v4 != v18)
        return result;
    }
  }
  else
  {
    result = 0;
    if (v17 || v4 != v18)
      return result;
  }
  if (!v6)
  {
    if (v20)
      return 0;
    goto LABEL_19;
  }
  if (!v20)
    return 0;
  if (v5 == v19 && v6 == v20)
    goto LABEL_19;
  v89 = v24;
  v92 = v14;
  v31 = v16;
  v79 = v12;
  v81 = v28;
  v32 = v26;
  v33 = v15;
  v83 = v27;
  v34 = v25;
  v77 = v13;
  v35 = v11;
  v86 = v23;
  v36 = v9;
  v37 = sub_23361F224();
  v23 = v86;
  v9 = v36;
  v11 = v35;
  v24 = v89;
  v14 = v92;
  v13 = v77;
  v12 = v79;
  v25 = v34;
  v28 = v81;
  v27 = v83;
  v15 = v33;
  v26 = v32;
  v16 = v31;
  v38 = v37;
  result = 0;
  if ((v38 & 1) != 0)
  {
LABEL_19:
    if (v7 != v22 || v8 != v21)
    {
      v90 = v24;
      v93 = v14;
      v39 = v16;
      v40 = v28;
      v41 = v26;
      v42 = v12;
      v43 = v15;
      v44 = v27;
      v45 = v25;
      v46 = v13;
      v47 = v11;
      v87 = v23;
      v48 = v9;
      v49 = sub_23361F224();
      v23 = v87;
      v9 = v48;
      v11 = v47;
      v24 = v90;
      v14 = v93;
      v13 = v46;
      v25 = v45;
      v27 = v44;
      v15 = v43;
      v12 = v42;
      v26 = v41;
      v28 = v40;
      v16 = v39;
      v50 = v49;
      result = 0;
      if ((v50 & 1) == 0)
        return result;
    }
    if (v13)
    {
      if (v24)
      {
        v51 = v23;
        v52 = v11;
        v71 = v25;
        v73 = v15;
        v84 = v27;
        v53 = v12;
        v75 = v26;
        v54 = v28;
        v55 = v16;
        v56 = v14;
        v57 = v13;
        v58 = v24;
        v59 = v9;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if ((MEMORY[0x234932E38](v59, v10, v97, v96, v95, v94) & 1) != 0)
        {
          if (v52 == v51 && v57 == v58)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            v14 = v56;
            v16 = v55;
            v28 = v54;
            v15 = v73;
            v26 = v75;
            v12 = v53;
            v27 = v84;
            v25 = v71;
          }
          else
          {
            v60 = sub_23361F224();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            result = 0;
            v14 = v56;
            v16 = v55;
            v28 = v54;
            v15 = v73;
            v26 = v75;
            v12 = v53;
            v27 = v84;
            v25 = v71;
            if ((v60 & 1) == 0)
              return result;
          }
          goto LABEL_36;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
    }
    else if (!v24)
    {
LABEL_36:
      if (v15)
      {
        if (!v27)
          return 0;
        if (v12 != v25 || v15 != v27)
        {
          v61 = v14;
          v62 = v16;
          v63 = v28;
          v64 = v26;
          v65 = sub_23361F224();
          v26 = v64;
          v28 = v63;
          v16 = v62;
          v14 = v61;
          v66 = v65;
          result = 0;
          if ((v66 & 1) == 0)
            return result;
        }
      }
      else if (v27)
      {
        return 0;
      }
      if (v16)
        return v28 && (v14 == v26 && v16 == v28 || (sub_23361F224() & 1) != 0);
      return !v28;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_23341EE20()
{
  unint64_t result;

  result = qword_25604F370;
  if (!qword_25604F370)
  {
    result = MEMORY[0x234934494](&unk_233648AF4, &_s8LineItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F370);
  }
  return result;
}

uint64_t _s8LineItemVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s8LineItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8LineItemVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  *(_WORD *)(a1 + 62) = *(_WORD *)(a2 + 62);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_WORD *)(a1 + 66) = *(_WORD *)(a2 + 66);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(_WORD *)(a1 + 70) = *(_WORD *)(a2 + 70);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_WORD *)(a1 + 74) = *(_WORD *)(a2 + 74);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8LineItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8LineItemVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8LineItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Order.LineItem()
{
  return &type metadata for Order.LineItem;
}

uint64_t _s8LineItemV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23341F22C + 4 * byte_23364898C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23341F260 + 4 * byte_233648987[v4]))();
}

uint64_t sub_23341F260(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341F268(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23341F270);
  return result;
}

uint64_t sub_23341F27C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23341F284);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23341F288(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23341F290(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8LineItemV10CodingKeysOMa()
{
  return &_s8LineItemV10CodingKeysON;
}

unint64_t sub_23341F2B0()
{
  unint64_t result;

  result = qword_25604F380;
  if (!qword_25604F380)
  {
    result = MEMORY[0x234934494](&unk_233648ACC, &_s8LineItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F380);
  }
  return result;
}

unint64_t sub_23341F2F8()
{
  unint64_t result;

  result = qword_25604F388;
  if (!qword_25604F388)
  {
    result = MEMORY[0x234934494](&unk_233648A3C, &_s8LineItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F388);
  }
  return result;
}

unint64_t sub_23341F340()
{
  unint64_t result;

  result = qword_25604F390;
  if (!qword_25604F390)
  {
    result = MEMORY[0x234934494](&unk_233648A64, &_s8LineItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F390);
  }
  return result;
}

uint64_t sub_23341F384(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469746E617571 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7695219 && a2 == 0xE300000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1852404839 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

id sub_23341F630()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + qword_25604F3A0);
  if (result)
    return objc_msgSend(result, sel_endpoint);
  __break(1u);
  return result;
}

id FinanceXPCListener.__allocating_init(listener:entitlementChecker:connectionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = sub_23341FA64(a1, a2, a3, a4);

  swift_release();
  return v5;
}

id FinanceXPCListener.init(listener:entitlementChecker:connectionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = sub_23341F95C(a1, a2, a3, a4);

  swift_release();
  return v5;
}

uint64_t sub_23341F6E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_23341FAC4(a2, (uint64_t)a2, a3, a4);
}

uint64_t sub_23341F6EC(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v12 = sub_23341FAC4(v7, v9, v10, v11);

  return v12 & 1;
}

id FinanceXPCListener.__deallocating_deinit()
{
  _QWORD *v0;
  id result;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  objc_super v5;

  result = *(id *)((char *)v0 + qword_25604F3A0);
  if (result)
  {
    v2 = *MEMORY[0x24BEE4EA0] & *v0;
    objc_msgSend(result, sel_invalidate);
    v4 = (objc_class *)type metadata accessor for FinanceXPCListener(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v3);
    v5.receiver = v0;
    v5.super_class = v4;
    return objc_msgSendSuper2(&v5, sel_dealloc);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23341F7BC(void *a1)
{
  id v1;

  v1 = a1;
  return FinanceXPCListener.__deallocating_deinit();
}

uint64_t sub_23341F7E0(uint64_t a1)
{

  __swift_destroy_boxed_opaque_existential_0(a1 + qword_25604F3A8);
  return swift_release();
}

id FinanceXPCListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FinanceXPCListener.init()()
{
  sub_23341FBAC();
}

void sub_23341F868()
{
  sub_23341FBAC();
}

id sub_23341F884()
{
  return sub_23341F630();
}

id static FinanceXPCListener.anonymous(connectionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v7;
  id v8;
  uint64_t v10[5];

  type metadata accessor for FinanceXPCListener(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_anonymousListener);
  sub_23323FAE8(v10);
  swift_retain();
  v8 = sub_23341FA64(v7, (uint64_t)v10, a1, a2);

  swift_release();
  return v8;
}

id sub_23341F95C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  objc_class *v15;
  id v16;
  objc_super v18;

  v9 = *MEMORY[0x24BEE4EA0] & *v4;
  *(_QWORD *)((char *)v4 + qword_25604F3A0) = a1;
  v10 = (uint64_t)v4 + qword_25604F3A8;
  v11 = v4;
  v12 = a1;
  sub_233177068(a2, v10);
  v13 = (_QWORD *)((char *)v11 + qword_25604F3B0);
  *v13 = a3;
  v13[1] = a4;
  swift_retain();

  v15 = (objc_class *)type metadata accessor for FinanceXPCListener(0, *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), v14);
  v18.receiver = v11;
  v18.super_class = v15;
  v16 = objc_msgSendSuper2(&v18, sel_init);
  objc_msgSend(v12, sel_setDelegate_, v16);
  objc_msgSend(v12, sel_resume);

  __swift_destroy_boxed_opaque_existential_0(a2);
  return v16;
}

id sub_23341FA64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;

  v9 = objc_allocWithZone((Class)type metadata accessor for FinanceXPCListener(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_23341F95C(a1, a2, a3, a4);
}

uint64_t sub_23341FAC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  _BYTE v10[40];

  type metadata accessor for ServiceToClientXPCConnection(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  sub_233177068((uint64_t)v4 + qword_25604F3A8, (uint64_t)v10);
  v6 = a1;
  v7 = sub_2332D9D08(v6, (uint64_t)v10);

  v8 = *(void (**)(uint64_t))((char *)v4 + qword_25604F3B0);
  swift_retain();
  v8(v7);
  swift_release();
  swift_release();
  return 1;
}

uint64_t type metadata accessor for FinanceXPCListener(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceXPCListener);
}

void sub_23341FBAC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23341FBD8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FinanceXPCListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FinanceXPCListener.endpoint.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of FinanceXPCListener.__allocating_init(listener:entitlementChecker:connectionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FinanceXPCListener.listener(_:shouldAcceptNewConnection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of XPCEndpointProviding.endpoint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void MapsMerchant.postalAddress.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MapsMerchant() + 76);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t type metadata accessor for MapsMerchant()
{
  uint64_t result;

  result = qword_25604F4A0;
  if (!qword_25604F4A0)
    return swift_getSingletonMetadata();
  return result;
}

void *MapsMerchant.postalAddress.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for MapsMerchant() + 76));
  v2 = v1;
  return v1;
}

uint64_t MapsMerchant.init(muid:resultProviderIdentifier:name:phoneNumber:url:heroImageURL:heroImageAttributionName:walletCategory:mapsCategoryIdentifier:encodedStylingInfo:businessChatURL:lastProcessedDate:locationLatitude:locationLongitude:postalAddress:hasBrand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __int16 *a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24)
{
  int *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v50;
  __int16 v51;

  v50 = *((_BYTE *)a12 + 2);
  v51 = *a12;
  v26 = (int *)type metadata accessor for MapsMerchant();
  v27 = a9 + v26[8];
  v44 = v27;
  v28 = sub_23361D340();
  v29 = *(void (**)(void))(*(_QWORD *)(v28 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v27, 1, 1, v28);
  v42 = a9 + v26[9];
  v29();
  v30 = (_QWORD *)(a9 + v26[10]);
  *v30 = 0;
  v30[1] = 0;
  v31 = a9 + v26[11];
  *(_WORD *)v31 = 0;
  *(_BYTE *)(v31 + 2) = 1;
  v32 = (_QWORD *)(a9 + v26[12]);
  *v32 = 0;
  v32[1] = 0;
  v33 = a9 + v26[13];
  *(_OWORD *)v33 = xmmword_23362B360;
  v45 = a9 + v26[14];
  v29();
  v34 = a9 + v26[15];
  v43 = v34;
  v35 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = a9 + v26[17];
  *(_QWORD *)v36 = 0;
  *(_BYTE *)(v36 + 8) = 1;
  v37 = a9 + v26[18];
  *(_QWORD *)v37 = 0;
  *(_BYTE *)(v37 + 8) = 1;
  v38 = v26[19];
  *(_QWORD *)(a9 + v38) = 0;
  *(_QWORD *)a9 = a1;
  *(_DWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 12) = BYTE4(a2) & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  sub_2332C489C(a7, v44, &qword_254248700);
  sub_2332C489C(a8, v42, &qword_254248700);
  swift_bridgeObjectRelease();
  *v30 = a10;
  v30[1] = a11;
  *(_WORD *)v31 = v51;
  *(_BYTE *)(v31 + 2) = v50;
  swift_bridgeObjectRelease();
  *v32 = a13;
  v32[1] = a14;
  v39 = *(_QWORD *)v33;
  v40 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v33 = a15;
  *(_QWORD *)(v33 + 8) = a16;
  sub_2331D4424(a15, a16);
  sub_2331B04E8(v39, v40);
  sub_2332C489C(a17, v45, &qword_254248700);
  sub_2332C489C(a18, v43, (uint64_t *)&unk_254247DA0);
  *(_QWORD *)v36 = a19;
  *(_BYTE *)(v36 + 8) = a20 & 1;
  *(_QWORD *)v37 = a21;
  *(_BYTE *)(v37 + 8) = a22 & 1;
  *(_BYTE *)(a9 + v26[16]) = a24;

  sub_2331B04E8(a15, a16);
  *(_QWORD *)(a9 + v38) = a23;
  sub_233168608(a18, (uint64_t *)&unk_254247DA0);
  sub_233168608(a17, &qword_254248700);
  sub_233168608(a8, &qword_254248700);
  return sub_233168608(a7, &qword_254248700);
}

uint64_t MapsMerchant.muid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MapsMerchant.muid.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MapsMerchant.muid.modify())()
{
  return nullsub_1;
}

unint64_t MapsMerchant.resultProviderIdentifier.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t MapsMerchant.resultProviderIdentifier.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MapsMerchant.resultProviderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MapsMerchant.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsMerchant.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MapsMerchant.name.modify())()
{
  return nullsub_1;
}

uint64_t MapsMerchant.phoneNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsMerchant.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MapsMerchant.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t MapsMerchant.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_2331686A0(v1 + *(int *)(v3 + 32), a1, &qword_254248700);
}

uint64_t MapsMerchant.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 32), &qword_254248700);
}

uint64_t (*MapsMerchant.url.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.heroImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_2331686A0(v1 + *(int *)(v3 + 36), a1, &qword_254248700);
}

uint64_t MapsMerchant.heroImageURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 36), &qword_254248700);
}

uint64_t (*MapsMerchant.heroImageURL.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.heroImageAttributionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsMerchant() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsMerchant.heroImageAttributionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MapsMerchant() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsMerchant.heroImageAttributionName.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.walletCategory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int16 *v4;
  __int16 v5;

  result = type metadata accessor for MapsMerchant();
  v4 = (__int16 *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 2);
  *(_WORD *)a1 = v5;
  *(_BYTE *)(a1 + 2) = (_BYTE)v4;
  return result;
}

uint64_t MapsMerchant.walletCategory.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 2);
  result = type metadata accessor for MapsMerchant();
  v5 = v1 + *(int *)(result + 44);
  *(_WORD *)v5 = v2;
  *(_BYTE *)(v5 + 2) = v3;
  return result;
}

uint64_t (*MapsMerchant.walletCategory.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.mapsCategoryIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsMerchant() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsMerchant.mapsCategoryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MapsMerchant() + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsMerchant.mapsCategoryIdentifier.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.encodedStylingInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MapsMerchant() + 52);
  v2 = *(_QWORD *)v1;
  sub_2331D4424(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MapsMerchant.encodedStylingInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for MapsMerchant() + 52);
  result = sub_2331B04E8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*MapsMerchant.encodedStylingInfo.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.businessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_2331686A0(v1 + *(int *)(v3 + 56), a1, &qword_254248700);
}

uint64_t MapsMerchant.businessChatURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 56), &qword_254248700);
}

uint64_t (*MapsMerchant.businessChatURL.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.lastProcessedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_2331686A0(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t MapsMerchant.lastProcessedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsMerchant();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 60), (uint64_t *)&unk_254247DA0);
}

uint64_t (*MapsMerchant.lastProcessedDate.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.hasBrand.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MapsMerchant() + 64));
}

uint64_t MapsMerchant.hasBrand.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MapsMerchant();
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*MapsMerchant.hasBrand.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.locationLatitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsMerchant() + 68));
}

uint64_t MapsMerchant.locationLatitude.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MapsMerchant();
  v6 = v2 + *(int *)(result + 68);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MapsMerchant.locationLatitude.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

uint64_t MapsMerchant.locationLongitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsMerchant() + 72));
}

uint64_t MapsMerchant.locationLongitude.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MapsMerchant();
  v6 = v2 + *(int *)(result + 72);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MapsMerchant.locationLongitude.modify())(_QWORD)
{
  type metadata accessor for MapsMerchant();
  return nullsub_1;
}

void sub_233420874(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for MapsMerchant() + 76);
  v5 = *(void **)(a2 + v4);
  v6 = v3;

  *(_QWORD *)(a2 + v4) = v3;
}

void (*MapsMerchant.postalAddress.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for MapsMerchant() + 76);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(void **)(v1 + v3);
  *(_QWORD *)a1 = v4;
  v5 = v4;
  return sub_233420904;
}

void sub_233420904(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(int *)(a1 + 16);
  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v5 = *(void **)(v4 + v2);
    v6 = v3;

    *(_QWORD *)(v4 + v2) = v3;
  }
  else
  {

    *(_QWORD *)(v4 + v2) = v3;
  }
}

uint64_t sub_233420974(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334209A0 + 4 * byte_233648BE8[a1]))(1684632941, 0xE400000000000000);
}

unint64_t sub_2334209A0()
{
  return 0xD000000000000018;
}

uint64_t sub_233420B1C()
{
  unsigned __int8 *v0;

  return sub_233420974(*v0);
}

uint64_t sub_233420B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334242D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_233420B48(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_233420B54()
{
  sub_23342295C();
  return sub_23361F428();
}

uint64_t sub_233420B7C()
{
  sub_23342295C();
  return sub_23361F434();
}

uint64_t MapsMerchant.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  int *v10;
  __int16 *v11;
  __int16 v12;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342295C();
  sub_23361F410();
  LOBYTE(v14) = 0;
  sub_23361F1A0();
  if (!v2)
  {
    v9 = *(_BYTE *)(v3 + 12);
    LOBYTE(v14) = 1;
    v15 = v9;
    sub_23361F128();
    LOBYTE(v14) = 2;
    sub_23361F0E0();
    LOBYTE(v14) = 3;
    sub_23361F0E0();
    v10 = (int *)type metadata accessor for MapsMerchant();
    LOBYTE(v14) = 4;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    LOBYTE(v14) = 5;
    sub_23361F110();
    LOBYTE(v14) = 6;
    sub_23361F0E0();
    v11 = (__int16 *)(v3 + v10[11]);
    v12 = *v11;
    LOBYTE(v11) = *((_BYTE *)v11 + 2);
    LOWORD(v14) = v12;
    BYTE2(v14) = (_BYTE)v11;
    v15 = 7;
    sub_2333FECAC();
    sub_23361F110();
    LOBYTE(v14) = 8;
    sub_23361F0E0();
    v14 = *(_OWORD *)(v3 + v10[13]);
    v15 = 9;
    sub_2331A6BA8();
    sub_23361F110();
    LOBYTE(v14) = 10;
    sub_23361F110();
    LOBYTE(v14) = 11;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    LOBYTE(v14) = 12;
    sub_23361F14C();
    LOBYTE(v14) = 13;
    sub_23361F0F8();
    LOBYTE(v14) = 14;
    sub_23361F0F8();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + v10[19]);
    v15 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F428);
    sub_2334229A0(&qword_25604F430, (uint64_t)&protocol conformance descriptor for CodableWrapper<A>);
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void MapsMerchant.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(void);
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  char v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t *v68;
  uint64_t *v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t *v87;
  char *v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;

  v90 = a1;
  v72 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v2);
  v73 = (uint64_t)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v74 = (uint64_t)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v75 = (uint64_t)v67 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)v67 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F438);
  v77 = *(_QWORD *)(v10 - 8);
  v78 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v89 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for MapsMerchant();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_DWORD *)v15 + 2) = 0;
  v15[12] = 1;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  v16 = &v15[*(int *)(v13 + 32)];
  v17 = sub_23361D340();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  v86 = (uint64_t)v16;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v16, 1, 1, v17);
  v85 = &v15[v12[9]];
  v18();
  v19 = &v15[v12[10]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v88 = v19;
  v20 = &v15[v12[11]];
  *(_WORD *)v20 = 0;
  v20[2] = 1;
  v21 = &v15[v12[12]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v84 = v21;
  v22 = &v15[v12[13]];
  *(_OWORD *)v22 = xmmword_23362B360;
  v82 = &v15[v12[14]];
  v83 = v22;
  v18();
  v23 = (uint64_t)&v15[v12[15]];
  v24 = sub_23361D634();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v81 = v23;
  v25(v23, 1, 1, v24);
  v26 = &v15[v12[17]];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  v27 = &v15[v12[18]];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v79 = v12[19];
  v87 = (uint64_t *)v15;
  *(_QWORD *)&v15[v79] = 0;
  __swift_project_boxed_opaque_existential_1(v90, v90[3]);
  sub_23342295C();
  v28 = v80;
  sub_23361F3EC();
  if (v28)
  {
    v29 = (uint64_t)v85;
    v30 = v86;
    v34 = v79;
    v35 = v87;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608(v30, &qword_254248700);
    sub_233168608(v29, &qword_254248700);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2331B04E8(*(_QWORD *)v83, *((_QWORD *)v83 + 1));
    sub_233168608((uint64_t)v82, &qword_254248700);
    sub_233168608(v81, (uint64_t *)&unk_254247DA0);

  }
  else
  {
    v70 = v12;
    v80 = v20;
    v71 = v24;
    v69 = (uint64_t *)v26;
    v68 = (uint64_t *)v27;
    LOBYTE(v91) = 0;
    v31 = sub_23361F08C();
    v32 = (uint64_t)v85;
    v33 = v86;
    v36 = v87;
    *v87 = v31;
    LOBYTE(v91) = 1;
    v37 = sub_23361F014();
    *((_DWORD *)v36 + 2) = v37;
    *((_BYTE *)v36 + 12) = BYTE4(v37) & 1;
    LOBYTE(v91) = 2;
    v36[2] = sub_23361EFCC();
    v36[3] = v38;
    LOBYTE(v91) = 3;
    v36[4] = sub_23361EFCC();
    v36[5] = v39;
    LOBYTE(v91) = 4;
    v40 = sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    v41 = (uint64_t)v76;
    v67[1] = v40;
    sub_23361EFFC();
    sub_233170B8C(v41, v33, &qword_254248700);
    LOBYTE(v91) = 5;
    sub_23361EFFC();
    sub_233170B8C(v75, v32, &qword_254248700);
    LOBYTE(v91) = 6;
    v42 = sub_23361EFCC();
    v76 = v43;
    v44 = v42;
    v45 = v88;
    swift_bridgeObjectRelease();
    v46 = v76;
    *v45 = v44;
    v45[1] = v46;
    v93 = 7;
    sub_2333FECF0();
    sub_23361EFFC();
    v47 = BYTE2(v91);
    v48 = v80;
    *(_WORD *)v80 = v91;
    v48[2] = v47;
    LOBYTE(v91) = 8;
    v49 = sub_23361EFCC();
    v51 = v50;
    v52 = (uint64_t *)v84;
    swift_bridgeObjectRelease();
    *v52 = v49;
    v52[1] = v51;
    v93 = 9;
    sub_2331A6B08();
    sub_23361EFFC();
    v53 = v91;
    v54 = v92;
    v55 = v83;
    sub_2331B04E8(*(_QWORD *)v83, *((_QWORD *)v83 + 1));
    *(_QWORD *)v55 = v53;
    *((_QWORD *)v55 + 1) = v54;
    LOBYTE(v91) = 10;
    sub_23361EFFC();
    sub_233170B8C(v74, (uint64_t)v82, &qword_254248700);
    LOBYTE(v91) = 11;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361EFFC();
    sub_233170B8C(v73, v81, (uint64_t *)&unk_254247DA0);
    LOBYTE(v91) = 12;
    *((_BYTE *)v87 + v70[16]) = sub_23361F038() & 1;
    LOBYTE(v91) = 13;
    v56 = sub_23361EFE4();
    v57 = v69;
    *v69 = v56;
    *((_BYTE *)v57 + 8) = v58 & 1;
    LOBYTE(v91) = 14;
    v59 = sub_23361EFE4();
    v60 = v68;
    *v68 = v59;
    *((_BYTE *)v60 + 8) = v61 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F428);
    v93 = 15;
    sub_2334229A0(&qword_25604F440, (uint64_t)&protocol conformance descriptor for CodableWrapper<A>);
    v62 = v78;
    v63 = v89;
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v63, v62);
    v64 = v91;
    v65 = v79;
    v66 = (uint64_t)v87;

    *(_QWORD *)(v66 + v65) = v64;
    sub_2331EB3A0(v66, v72);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v90);
    sub_2331EB3E4(v66);
  }
}

uint64_t sub_2334218D8()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_2334218E0()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t sub_233421900()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23342192C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_233421958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2331686A0(v2 + *(int *)(a1 + 32), a2, &qword_254248700);
}

uint64_t sub_233421980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2331686A0(v2 + *(int *)(a1 + 36), a2, &qword_254248700);
}

uint64_t sub_2334219A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2334219DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 *v3;
  __int16 v4;

  v3 = (__int16 *)(v2 + *(int *)(result + 44));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 2);
  *(_WORD *)a2 = v4;
  *(_BYTE *)(a2 + 2) = (_BYTE)v3;
  return result;
}

uint64_t sub_2334219F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_233421A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 52);
  v3 = *(_QWORD *)v2;
  sub_2331D4424(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return v3;
}

uint64_t sub_233421A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2331686A0(v2 + *(int *)(a1 + 56), a2, &qword_254248700);
}

uint64_t sub_233421A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2331686A0(v2 + *(int *)(a1 + 60), a2, (uint64_t *)&unk_254247DA0);
}

void sub_233421AB8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MapsMerchant.init(from:)(a1, a2);
}

uint64_t sub_233421ACC(_QWORD *a1)
{
  return MapsMerchant.encode(to:)(a1);
}

uint64_t _s10FinanceKit12MapsMerchantV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  _BYTE *v59;
  int v60;
  void (*v61)(_BYTE *, uint64_t);
  int *v62;
  _BYTE *v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  _BYTE *v67;
  char v68;
  uint64_t v69;
  char v70;
  void (*v71)(_BYTE *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  unsigned __int16 *v82;
  char v83;
  unsigned __int16 *v84;
  int v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  _BYTE *v112;
  char v113;
  void (*v114)(_BYTE *, uint64_t);
  int *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  uint64_t v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  char v127;
  void (*v128)(_BYTE *, uint64_t);
  uint64_t v129;
  double *v130;
  char v131;
  double *v132;
  int v133;
  uint64_t v134;
  double *v135;
  char v136;
  double *v137;
  int v138;
  uint64_t v139;
  void *v140;
  void *v141;
  id v142;
  id v143;
  char v144;
  _BYTE v145[12];
  int v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  _BYTE *v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;

  v4 = sub_23361D634();
  v158 = *(_QWORD *)(v4 - 8);
  v159 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v155 = &v145[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v157);
  v162 = &v145[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v156 = &v145[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v160 = &v145[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v161 = &v145[-v12];
  v167 = sub_23361D340();
  v13 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v164 = &v145[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  v15 = MEMORY[0x24BDAC7A8](v166);
  v163 = &v145[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v165 = &v145[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v145[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = &v145[-v26];
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = &v145[-v29];
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = &v145[-v32];
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = &v145[-v35];
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = &v145[-v38];
  MEMORY[0x24BDAC7A8](v37);
  v44 = &v145[-v43];
  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v45 = *(_BYTE *)(a2 + 12);
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8))
      v45 = 1;
    if ((v45 & 1) != 0)
      return 0;
  }
  v46 = *(_QWORD *)(a1 + 24);
  v47 = *(_QWORD *)(a2 + 24);
  if (!v46)
  {
    v152 = v42;
    v153 = v41;
    v151 = v40;
    v154 = v13;
    v48 = a1;
    if (v47)
      return 0;
    goto LABEL_15;
  }
  if (!v47)
    return 0;
  v152 = v42;
  v153 = v41;
  v151 = v40;
  v154 = v13;
  v48 = a1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v46 == v47
    || (v49 = sub_23361F224(), result = 0, (v49 & 1) != 0))
  {
LABEL_15:
    v51 = *(_QWORD *)(v48 + 40);
    v52 = *(_QWORD *)(a2 + 40);
    if (v51)
    {
      if (!v52)
        return 0;
      v150 = v48;
      if (*(_QWORD *)(v48 + 32) != *(_QWORD *)(a2 + 32) || v51 != v52)
      {
        v53 = sub_23361F224();
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
    }
    else
    {
      v150 = v48;
      if (v52)
        return 0;
    }
    v54 = type metadata accessor for MapsMerchant();
    sub_2331686A0(v150 + *(int *)(v54 + 32), (uint64_t)v44, &qword_254248700);
    v148 = (int *)v54;
    v149 = a2;
    sub_2331686A0(a2 + *(int *)(v54 + 32), (uint64_t)v39, &qword_254248700);
    v55 = (uint64_t)&v20[*(int *)(v166 + 48)];
    sub_2331686A0((uint64_t)v44, (uint64_t)v20, &qword_254248700);
    v56 = v55;
    sub_2331686A0((uint64_t)v39, v55, &qword_254248700);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
    v58 = v167;
    if (v57((uint64_t)v20, 1, v167) == 1)
    {
      sub_233168608((uint64_t)v39, &qword_254248700);
      sub_233168608((uint64_t)v44, &qword_254248700);
      if (v57(v56, 1, v58) == 1)
      {
        v147 = v57;
        sub_233168608((uint64_t)v20, &qword_254248700);
        goto LABEL_29;
      }
    }
    else
    {
      sub_2331686A0((uint64_t)v20, (uint64_t)v36, &qword_254248700);
      if (v57(v56, 1, v58) != 1)
      {
        v147 = v57;
        v59 = v164;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v154 + 32))(v164, v56, v58);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v60 = sub_23361E108();
        v58 = v167;
        v146 = v60;
        v61 = *(void (**)(_BYTE *, uint64_t))(v154 + 8);
        v61(v59, v167);
        sub_233168608((uint64_t)v39, &qword_254248700);
        sub_233168608((uint64_t)v44, &qword_254248700);
        v61(v36, v58);
        sub_233168608((uint64_t)v20, &qword_254248700);
        if ((v146 & 1) == 0)
          return 0;
LABEL_29:
        v62 = v148;
        sub_2331686A0(v150 + v148[9], (uint64_t)v33, &qword_254248700);
        sub_2331686A0(v149 + v62[9], (uint64_t)v30, &qword_254248700);
        v63 = v165;
        v64 = (uint64_t)&v165[*(int *)(v166 + 48)];
        sub_2331686A0((uint64_t)v33, (uint64_t)v165, &qword_254248700);
        sub_2331686A0((uint64_t)v30, v64, &qword_254248700);
        v65 = v147;
        if (v147((uint64_t)v63, 1, v58) == 1)
        {
          sub_233168608((uint64_t)v30, &qword_254248700);
          sub_233168608((uint64_t)v33, &qword_254248700);
          if (v65(v64, 1, v58) == 1)
          {
            sub_233168608((uint64_t)v63, &qword_254248700);
            goto LABEL_36;
          }
        }
        else
        {
          sub_2331686A0((uint64_t)v63, (uint64_t)v27, &qword_254248700);
          if (v65(v64, 1, v58) != 1)
          {
            v66 = v154;
            v67 = v164;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v154 + 32))(v164, v64, v58);
            sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
            v68 = sub_23361E108();
            v69 = v167;
            v70 = v68;
            v71 = *(void (**)(_BYTE *, uint64_t))(v66 + 8);
            v71(v67, v167);
            sub_233168608((uint64_t)v30, &qword_254248700);
            sub_233168608((uint64_t)v33, &qword_254248700);
            v71(v27, v69);
            sub_233168608((uint64_t)v63, &qword_254248700);
            if ((v70 & 1) == 0)
              return 0;
LABEL_36:
            v72 = v62[10];
            v73 = v149;
            v74 = (_QWORD *)(v150 + v72);
            v75 = *(_QWORD *)(v150 + v72 + 8);
            v76 = (_QWORD *)(v149 + v72);
            v77 = v76[1];
            if (v75)
            {
              if (!v77)
                return 0;
              v78 = v154;
              if (*v74 != *v76 || v75 != v77)
              {
                v79 = sub_23361F224();
                v73 = v149;
                v80 = v79;
                result = 0;
                if ((v80 & 1) == 0)
                  return result;
              }
            }
            else
            {
              v78 = v154;
              if (v77)
                return 0;
            }
            v81 = v62[11];
            v82 = (unsigned __int16 *)(v150 + v81);
            v83 = *(_BYTE *)(v150 + v81 + 2);
            v84 = (unsigned __int16 *)(v73 + v81);
            v85 = *(unsigned __int8 *)(v73 + v81 + 2);
            if ((v83 & 1) != 0)
            {
              if (!v85)
                return 0;
            }
            else
            {
              if (*v82 != *v84)
                LOBYTE(v85) = 1;
              if ((v85 & 1) != 0)
                return 0;
            }
            v86 = v62[12];
            v87 = (_QWORD *)(v150 + v86);
            v88 = *(_QWORD *)(v150 + v86 + 8);
            v89 = (_QWORD *)(v73 + v86);
            v90 = v89[1];
            if (v88)
            {
              if (!v90)
                return 0;
              if (*v87 != *v89 || v88 != v90)
              {
                v91 = sub_23361F224();
                v73 = v149;
                v92 = v91;
                result = 0;
                if ((v92 & 1) == 0)
                  return result;
              }
            }
            else if (v90)
            {
              return 0;
            }
            v93 = v62[13];
            v94 = v150 + v93;
            v95 = *(_QWORD *)(v150 + v93);
            v96 = *(_QWORD *)(v150 + v93 + 8);
            v97 = (uint64_t *)(v73 + v93);
            v98 = *v97;
            v99 = v97[1];
            if (v96 >> 60 == 15)
            {
              v100 = v167;
              if (v99 >> 60 == 15)
                goto LABEL_62;
            }
            else
            {
              v100 = v167;
              if (v99 >> 60 != 15)
              {
                sub_2331D4424(*(_QWORD *)v94, *(_QWORD *)(v94 + 8));
                sub_2331D4424(v98, v99);
                sub_2334C71D4(v95, v96);
                v102 = v101;
                sub_2331B04E8(v98, v99);
                sub_2331B04E8(v95, v96);
                if ((v102 & 1) == 0)
                  return 0;
LABEL_62:
                v103 = v153;
                sub_2331686A0(v150 + v62[14], v153, &qword_254248700);
                v104 = v149 + v62[14];
                v105 = v152;
                sub_2331686A0(v104, v152, &qword_254248700);
                v106 = v163;
                v107 = (uint64_t)&v163[*(int *)(v166 + 48)];
                v108 = v103;
                sub_2331686A0(v103, (uint64_t)v163, &qword_254248700);
                v109 = v105;
                sub_2331686A0(v105, v107, &qword_254248700);
                v110 = v147;
                if (v147((uint64_t)v106, 1, v100) == 1)
                {
                  sub_233168608(v109, &qword_254248700);
                  sub_233168608(v103, &qword_254248700);
                  if (v110(v107, 1, v100) == 1)
                  {
                    sub_233168608((uint64_t)v106, &qword_254248700);
                    goto LABEL_69;
                  }
                }
                else
                {
                  v111 = v151;
                  sub_2331686A0((uint64_t)v106, v151, &qword_254248700);
                  if (v110(v107, 1, v100) != 1)
                  {
                    v112 = v164;
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v78 + 32))(v164, v107, v100);
                    sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
                    v113 = sub_23361E108();
                    v114 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
                    v114(v112, v100);
                    sub_233168608(v109, &qword_254248700);
                    sub_233168608(v108, &qword_254248700);
                    v114((_BYTE *)v111, v100);
                    sub_233168608((uint64_t)v106, &qword_254248700);
                    if ((v113 & 1) == 0)
                      return 0;
LABEL_69:
                    v115 = v148;
                    v116 = v161;
                    sub_2331686A0(v150 + v148[15], (uint64_t)v161, (uint64_t *)&unk_254247DA0);
                    v117 = v160;
                    sub_2331686A0(v149 + v115[15], (uint64_t)v160, (uint64_t *)&unk_254247DA0);
                    v118 = v162;
                    v119 = (uint64_t)&v162[*(int *)(v157 + 48)];
                    sub_2331686A0((uint64_t)v116, (uint64_t)v162, (uint64_t *)&unk_254247DA0);
                    sub_2331686A0((uint64_t)v117, v119, (uint64_t *)&unk_254247DA0);
                    v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48);
                    v121 = v118;
                    v122 = v159;
                    if (v120((uint64_t)v121, 1, v159) == 1)
                    {
                      sub_233168608((uint64_t)v160, (uint64_t *)&unk_254247DA0);
                      sub_233168608((uint64_t)v161, (uint64_t *)&unk_254247DA0);
                      if (v120(v119, 1, v122) == 1)
                      {
                        sub_233168608((uint64_t)v162, (uint64_t *)&unk_254247DA0);
LABEL_76:
                        if (*(unsigned __int8 *)(v150 + v148[16]) == *(unsigned __int8 *)(v149 + v148[16]))
                        {
                          v129 = v148[17];
                          v130 = (double *)(v150 + v129);
                          v131 = *(_BYTE *)(v150 + v129 + 8);
                          v132 = (double *)(v149 + v129);
                          v133 = *(unsigned __int8 *)(v149 + v129 + 8);
                          if ((v131 & 1) != 0)
                          {
                            if (!v133)
                              return 0;
                          }
                          else
                          {
                            if (*v130 != *v132)
                              LOBYTE(v133) = 1;
                            if ((v133 & 1) != 0)
                              return 0;
                          }
                          v134 = v148[18];
                          v135 = (double *)(v150 + v134);
                          v136 = *(_BYTE *)(v150 + v134 + 8);
                          v137 = (double *)(v149 + v134);
                          v138 = *(unsigned __int8 *)(v149 + v134 + 8);
                          if ((v136 & 1) != 0)
                          {
                            if (!v138)
                              return 0;
                          }
                          else
                          {
                            if (*v135 != *v137)
                              LOBYTE(v138) = 1;
                            if ((v138 & 1) != 0)
                              return 0;
                          }
                          v139 = v148[19];
                          v140 = *(void **)(v150 + v139);
                          v141 = *(void **)(v149 + v139);
                          if (v140)
                          {
                            if (!v141)
                              return 0;
                            sub_23331CE10();
                            v142 = v140;
                            v143 = v141;
                            v144 = sub_23361EA14();

                            if ((v144 & 1) == 0)
                              return 0;
                          }
                          else if (v141)
                          {
                            return 0;
                          }
                          return 1;
                        }
                        return 0;
                      }
                    }
                    else
                    {
                      sub_2331686A0((uint64_t)v162, (uint64_t)v156, (uint64_t *)&unk_254247DA0);
                      if (v120(v119, 1, v122) != 1)
                      {
                        v123 = v158;
                        v124 = v159;
                        v125 = v155;
                        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v158 + 32))(v155, v119, v159);
                        sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                        v126 = v156;
                        v127 = sub_23361E108();
                        v128 = *(void (**)(_BYTE *, uint64_t))(v123 + 8);
                        v128(v125, v124);
                        sub_233168608((uint64_t)v160, (uint64_t *)&unk_254247DA0);
                        sub_233168608((uint64_t)v161, (uint64_t *)&unk_254247DA0);
                        v128(v126, v124);
                        sub_233168608((uint64_t)v162, (uint64_t *)&unk_254247DA0);
                        if ((v127 & 1) == 0)
                          return 0;
                        goto LABEL_76;
                      }
                      sub_233168608((uint64_t)v160, (uint64_t *)&unk_254247DA0);
                      sub_233168608((uint64_t)v161, (uint64_t *)&unk_254247DA0);
                      (*(void (**)(_BYTE *, uint64_t))(v158 + 8))(v156, v159);
                    }
                    sub_233168608((uint64_t)v162, &qword_256042DA0);
                    return 0;
                  }
                  sub_233168608(v109, &qword_254248700);
                  sub_233168608(v103, &qword_254248700);
                  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v111, v100);
                }
                sub_233168608((uint64_t)v106, &qword_256045948);
                return 0;
              }
            }
            sub_2331D4424(*(_QWORD *)v94, *(_QWORD *)(v94 + 8));
            sub_2331D4424(v98, v99);
            sub_2331B04E8(v95, v96);
            sub_2331B04E8(v98, v99);
            return 0;
          }
          sub_233168608((uint64_t)v30, &qword_254248700);
          sub_233168608((uint64_t)v33, &qword_254248700);
          (*(void (**)(_BYTE *, uint64_t))(v154 + 8))(v27, v58);
        }
        sub_233168608((uint64_t)v63, &qword_256045948);
        return 0;
      }
      sub_233168608((uint64_t)v39, &qword_254248700);
      sub_233168608((uint64_t)v44, &qword_254248700);
      (*(void (**)(_BYTE *, uint64_t))(v154 + 8))(v36, v58);
    }
    sub_233168608((uint64_t)v20, &qword_256045948);
    return 0;
  }
  return result;
}

unint64_t sub_23342295C()
{
  unint64_t result;

  result = qword_25604F420;
  if (!qword_25604F420)
  {
    result = MEMORY[0x234934494](&unk_233648E74, &type metadata for MapsMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F420);
  }
  return result;
}

uint64_t sub_2334229A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604F428);
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_2334229E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for MapsMerchant() + 76));
  *a2 = v3;
  return v3;
}

_QWORD *initializeBufferWithCopyOfBuffer for MapsMerchant(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void *v54;
  id v55;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    v9 = a3[8];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[9];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    if (v14((char *)a2 + v17, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    v21 = a3[10];
    v22 = a3[11];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)v4 + v22;
    v27 = (uint64_t)a2 + v22;
    v26[2] = *(_BYTE *)(v27 + 2);
    *(_WORD *)v26 = *(_WORD *)v27;
    v28 = a3[12];
    v29 = a3[13];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (char *)v4 + v29;
    v34 = (uint64_t *)((char *)a2 + v29);
    v35 = *(uint64_t *)((char *)a2 + v29 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    else
    {
      v36 = *v34;
      sub_2331D1374(*v34, v35);
      *(_QWORD *)v33 = v36;
      *((_QWORD *)v33 + 1) = v35;
    }
    v37 = a3[14];
    v38 = (char *)v4 + v37;
    v39 = (char *)a2 + v37;
    if (v14((char *)a2 + v37, 1, v12))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
    }
    v41 = a3[15];
    v42 = (char *)v4 + v41;
    v43 = (char *)a2 + v41;
    v44 = sub_23361D634();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = a3[17];
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    v48 = (char *)v4 + v47;
    v49 = (uint64_t)a2 + v47;
    *(_QWORD *)v48 = *(_QWORD *)v49;
    v48[8] = *(_BYTE *)(v49 + 8);
    v50 = a3[18];
    v51 = a3[19];
    v52 = (char *)v4 + v50;
    v53 = (uint64_t)a2 + v50;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v52[8] = *(_BYTE *)(v53 + 8);
    v54 = *(void **)((char *)a2 + v51);
    *(_QWORD *)((char *)v4 + v51) = v54;
    v55 = v54;
  }
  return v4;
}

void destroy for MapsMerchant(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[9];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[13]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_23316BEA4(*v9, v10);
  v11 = a1 + a2[14];
  if (!v7(v11, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  v12 = a1 + a2[15];
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);

}

uint64_t initializeWithCopy for MapsMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[9];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[10];
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 2) = *(_BYTE *)(v25 + 2);
  *(_WORD *)v24 = *(_WORD *)v25;
  v26 = a3[12];
  v27 = a3[13];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = (uint64_t *)(a2 + v27);
  v33 = *(_QWORD *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 >> 60 == 15)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  else
  {
    v34 = *v32;
    sub_2331D1374(*v32, v33);
    *(_QWORD *)v31 = v34;
    *(_QWORD *)(v31 + 8) = v33;
  }
  v35 = a3[14];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  if (v13((const void *)(a2 + v35), 1, v11))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v36, v37, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v36, 0, 1, v11);
  }
  v39 = a3[15];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = sub_23361D634();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  v48 = a3[18];
  v49 = a3[19];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
  v52 = *(void **)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v52;
  v53 = v52;
  return a1;
}

uint64_t assignWithCopy for MapsMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int16 *v27;
  __int16 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = (__int16 *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 2) = *((_BYTE *)v27 + 2);
  *(_WORD *)v26 = v28;
  v29 = a3[12];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[13];
  v33 = (uint64_t *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v35 = *(_QWORD *)(a2 + v32 + 8);
  if (*(_QWORD *)(a1 + v32 + 8) >> 60 == 15)
  {
    if (v35 >> 60 != 15)
    {
      v36 = *v34;
      sub_2331D1374(v36, v35);
      *v33 = v36;
      v33[1] = v35;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v35 >> 60 == 15)
  {
    sub_2331EC9CC((uint64_t)v33);
LABEL_18:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_20;
  }
  v37 = *v34;
  sub_2331D1374(v37, v35);
  v38 = *v33;
  v39 = v33[1];
  *v33 = v37;
  v33[1] = v35;
  sub_23316BEA4(v38, v39);
LABEL_20:
  v40 = a3[14];
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  v43 = v12((void *)(a1 + v40), 1, v10);
  v44 = v12(v42, 1, v10);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v41, v10);
LABEL_25:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v41, v42, v10);
LABEL_26:
  v46 = a3[15];
  v47 = (void *)(a1 + v46);
  v48 = (void *)(a2 + v46);
  v49 = sub_23361D634();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
    goto LABEL_31;
  }
  if (v53)
  {
LABEL_31:
    v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
LABEL_32:
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = (uint64_t *)(a2 + v55);
  v58 = *v57;
  *(_BYTE *)(v56 + 8) = *((_BYTE *)v57 + 8);
  *(_QWORD *)v56 = v58;
  v59 = a3[18];
  v60 = a1 + v59;
  v61 = (uint64_t *)(a2 + v59);
  v62 = *v61;
  *(_BYTE *)(v60 + 8) = *((_BYTE *)v61 + 8);
  *(_QWORD *)v60 = v62;
  v63 = a3[19];
  v64 = *(void **)(a1 + v63);
  v65 = *(void **)(a2 + v63);
  *(_QWORD *)(a1 + v63) = v65;
  v66 = v65;

  return a1;
}

uint64_t initializeWithTake for MapsMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[9];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_WORD *)v19 = *(_WORD *)v20;
  *(_BYTE *)(v19 + 2) = *(_BYTE *)(v20 + 2);
  v21 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v22 = a3[14];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  if (v12((const void *)(a2 + v22), 1, v10))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v23, v24, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  v26 = a3[15];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_23361D634();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  v35 = a3[18];
  v36 = a3[19];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  return a1;
}

uint64_t assignWithTake for MapsMerchant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[9];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = v13((void *)(a1 + v17), 1, v11);
  v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = a3[12];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_WORD *)v30 = *(_WORD *)v31;
  *(_BYTE *)(v30 + 2) = *(_BYTE *)(v31 + 2);
  v32 = (_QWORD *)(a1 + v29);
  v33 = (uint64_t *)(a2 + v29);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a1 + v36 + 8);
  if (v39 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)v37 = *(_OWORD *)v38;
    goto LABEL_18;
  }
  v40 = *(_QWORD *)(v38 + 8);
  if (v40 >> 60 == 15)
  {
    sub_2331EC9CC(v37);
    goto LABEL_16;
  }
  v41 = *(_QWORD *)v37;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(v37 + 8) = v40;
  sub_23316BEA4(v41, v39);
LABEL_18:
  v42 = a3[14];
  v43 = (void *)(a1 + v42);
  v44 = (void *)(a2 + v42);
  v45 = v13((void *)(a1 + v42), 1, v11);
  v46 = v13(v44, 1, v11);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v43, v44, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v43, 0, 1, v11);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v43, v11);
LABEL_23:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v43, v44, v11);
LABEL_24:
  v48 = a3[15];
  v49 = (void *)(a1 + v48);
  v50 = (void *)(a2 + v48);
  v51 = sub_23361D634();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 1, v51);
  v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v49, v50, v51);
      goto LABEL_30;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
    goto LABEL_29;
  }
  if (v55)
  {
LABEL_29:
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v49, v50, v51);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_30:
  v57 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v58 = a1 + v57;
  v59 = a2 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  v60 = a3[18];
  v61 = a3[19];
  v62 = a1 + v60;
  v63 = a2 + v60;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_BYTE *)(v62 + 8) = *(_BYTE *)(v63 + 8);
  v64 = *(void **)(a1 + v61);
  *(_QWORD *)(a1 + v61) = *(_QWORD *)(a2 + v61);

  return a1;
}

uint64_t getEnumTagSinglePayload for MapsMerchant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233423E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 32);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MapsMerchant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233423EFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_233423FA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s11TransactionV15TransactionTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MapsMerchant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_233424180 + 4 * byte_233648BFD[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_2334241B4 + 4 * byte_233648BF8[v4]))();
}

uint64_t sub_2334241B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334241BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334241C4);
  return result;
}

uint64_t sub_2334241D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334241D8);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_2334241DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334241E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsMerchant.CodingKeys()
{
  return &type metadata for MapsMerchant.CodingKeys;
}

unint64_t sub_233424204()
{
  unint64_t result;

  result = qword_25604F510;
  if (!qword_25604F510)
  {
    result = MEMORY[0x234934494](&unk_233648E4C, &type metadata for MapsMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F510);
  }
  return result;
}

unint64_t sub_23342424C()
{
  unint64_t result;

  result = qword_25604F518;
  if (!qword_25604F518)
  {
    result = MEMORY[0x234934494](&unk_233648DBC, &type metadata for MapsMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F518);
  }
  return result;
}

unint64_t sub_233424294()
{
  unint64_t result;

  result = qword_25604F520;
  if (!qword_25604F520)
  {
    result = MEMORY[0x234934494](&unk_233648DE4, &type metadata for MapsMerchant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F520);
  }
  return result;
}

uint64_t sub_2334242D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632941 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233676DE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x67616D496F726568 && a2 == 0xEC0000004C525565 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233673D80 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x614374656C6C6177 && a2 == 0xEE0079726F676574 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233673DC0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233673DE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7373656E69737562 && a2 == 0xEF4C525574616843 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233673E00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x646E617242736168 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233676E00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233676E20 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233676E40)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_233424924(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v15 = MEMORY[0x24BEE4AF8];
    result = sub_23327399C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x234933120](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_value);
      v9 = sub_23361E150();
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_23327399C(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

double OrderPayment.init(_:bundle:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  int v15;
  char v16;
  uint64_t v17;

  v15 = *((_DWORD *)a1 + 2);
  v16 = *a1;
  v6 = *((_QWORD *)a1 + 5);
  v17 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v9 = swift_bridgeObjectRetain();
  sub_23342698C(v9, a2);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_233426C78(v12, a2);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  *(_BYTE *)a3 = v16;
  *(_DWORD *)(a3 + 8) = v15;
  *(_QWORD *)(a3 + 12) = *(_QWORD *)(a1 + 12);
  result = *(double *)(a1 + 20);
  *(double *)(a3 + 20) = result;
  *(_QWORD *)(a3 + 32) = v17;
  *(_QWORD *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v11;
  *(_QWORD *)(a3 + 56) = v7;
  *(_QWORD *)(a3 + 64) = v8;
  *(_QWORD *)(a3 + 72) = v13;
  return result;
}

uint64_t OrderPayment.init(_:)@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  id v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  int v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  _BYTE *v63;
  id v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  char v71[32];

  v4 = type metadata accessor for Order.PaymentTransaction();
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ManagedOrderPayment.status.getter(v71);
  v7 = v71[0];
  v8 = objc_msgSend(a1, sel_totalAmount);
  objc_msgSend(v8, sel_decimalValue);
  v9 = *(_DWORD *)v71;
  v10 = *(_QWORD *)&v71[4];
  v11 = *(_QWORD *)&v71[12];

  v12 = objc_msgSend(a1, sel_totalCurrencyCode);
  v13 = sub_23361E150();
  v15 = v14;

  swift_bridgeObjectRetain();
  v64 = a1;
  v16 = ManagedOrderPayment.summaryItems.getter();
  if (v16 >> 62)
    v17 = sub_23361EF30();
  else
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  v63 = a2;
  v61 = v9;
  v62 = v7;
  v59 = v13;
  v60 = v15;
  if (v17)
  {
    v70 = MEMORY[0x24BEE4AF8];
    result = sub_233274154(0, v17 & ~(v17 >> 63), 0);
    if ((v17 & 0x8000000000000000) == 0)
    {
      v58 = v6;
      v19 = 0;
      v20 = v70;
      v65 = v16 & 0xC000000000000001;
      v66 = v17;
      v67 = v16;
      while (1)
      {
        if (v65)
          v21 = (id)MEMORY[0x234933120](v19, v16);
        else
          v21 = *(id *)(v16 + 8 * v19 + 32);
        v22 = v21;
        v23 = (char *)objc_msgSend(v21, sel_label, v58);
        v24 = (_QWORD *)sub_23361D6B8();
        v25 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FinanceKit15LocalizedString_localizedStrings];
        if (!*(_QWORD *)(v25 + 16))
          goto LABEL_15;
        v26 = (_QWORD *)sub_2332DA944(v24);
        if (!v26[2])
          break;
        v28 = v26[4];
        v27 = v26[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v25 + 16))
          break;
        v29 = sub_2331E3D18(v28, v27);
        if ((v30 & 1) == 0)
          break;
        v31 = (uint64_t *)(*(_QWORD *)(v25 + 56) + 16 * v29);
        v33 = *v31;
        v32 = v31[1];
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        v34 = objc_msgSend(v22, sel_valueAmount);
        objc_msgSend(v34, sel_decimalValue);
        v35 = *(_DWORD *)v71;
        v69 = *(_OWORD *)&v71[4];

        v36 = objc_msgSend(v22, sel_valueCurrencyCode);
        v37 = sub_23361E150();
        v39 = v38;

        v70 = v20;
        v41 = *(_QWORD *)(v20 + 16);
        v40 = *(_QWORD *)(v20 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_233274154(v40 > 1, v41 + 1, 1);
          v20 = v70;
        }
        ++v19;
        *(_QWORD *)(v20 + 16) = v41 + 1;
        v42 = v20 + 56 * v41;
        *(_QWORD *)(v42 + 32) = v33;
        *(_QWORD *)(v42 + 40) = v32;
        *(_DWORD *)(v42 + 48) = v35;
        *(_OWORD *)(v42 + 52) = v69;
        *(_QWORD *)(v42 + 72) = v37;
        *(_QWORD *)(v42 + 80) = v39;
        v16 = v67;
        if (v66 == v19)
        {
          swift_bridgeObjectRelease();
          v6 = v58;
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      v33 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key];
      v32 = *(_QWORD *)&v23[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key + 8];
      swift_bridgeObjectRetain();

      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x24BEE4AF8];
LABEL_21:
  swift_bridgeObjectRetain();
  v43 = objc_msgSend(v64, sel_paymentMethods);
  if (v43)
  {
    v44 = v43;
    v45 = sub_23361E3F0();

  }
  else
  {
    v45 = 0;
  }
  swift_bridgeObjectRetain();
  v46 = ManagedOrderPayment.applePayTransactionIdentifiers.getter();
  v47 = sub_233424924(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v48 = ManagedOrderPayment.transactions.getter();
  if (!(v48 >> 62))
  {
    v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v49)
      goto LABEL_26;
LABEL_37:
    swift_bridgeObjectRelease();

    v51 = MEMORY[0x24BEE4AF8];
LABEL_38:
    v56 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 = v63;
    *v63 = v62;
    *((_DWORD *)v57 + 2) = v61;
    *(_QWORD *)(v57 + 12) = v10;
    *(_QWORD *)(v57 + 20) = v11;
    *((_QWORD *)v57 + 4) = v59;
    *((_QWORD *)v57 + 5) = v56;
    *((_QWORD *)v57 + 6) = v20;
    *((_QWORD *)v57 + 7) = v45;
    *((_QWORD *)v57 + 8) = v47;
    *((_QWORD *)v57 + 9) = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v49 = sub_23361EF30();
  if (!v49)
    goto LABEL_37;
LABEL_26:
  *(_QWORD *)v71 = MEMORY[0x24BEE4AF8];
  result = sub_233274128(0, v49 & ~(v49 >> 63), 0);
  if ((v49 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)&v69 = v47;
    v50 = 0;
    v51 = *(_QWORD *)v71;
    do
    {
      if ((v48 & 0xC000000000000001) != 0)
        v52 = (id)MEMORY[0x234933120](v50, v48);
      else
        v52 = *(id *)(v48 + 8 * v50 + 32);
      Order.PaymentTransaction.init(_:)(v52, (uint64_t)v6);
      *(_QWORD *)v71 = v51;
      v53 = (uint64_t)v6;
      v55 = *(_QWORD *)(v51 + 16);
      v54 = *(_QWORD *)(v51 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_233274128(v54 > 1, v55 + 1, 1);
        v51 = *(_QWORD *)v71;
      }
      ++v50;
      *(_QWORD *)(v51 + 16) = v55 + 1;
      sub_233426E10(v53, v51+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v55);
      v6 = (char *)v53;
    }
    while (v49 != v50);
    swift_bridgeObjectRelease();

    v47 = v69;
    goto LABEL_38;
  }
LABEL_40:
  __break(1u);
  return result;
}

void OrderPayment.status.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *OrderPayment.status.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*OrderPayment.status.modify())()
{
  return nullsub_1;
}

uint64_t OrderPayment.total.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v1 + 12);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 OrderPayment.total.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 8) = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 12) = result;
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*OrderPayment.total.modify())()
{
  return nullsub_1;
}

uint64_t OrderPayment.summaryItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderPayment.summaryItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*OrderPayment.summaryItems.modify())()
{
  return nullsub_1;
}

uint64_t OrderPayment.paymentMethods.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderPayment.applePayTransactionIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderPayment.transactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2334252DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233425308 + 4 * byte_233648ED0[*v0]))(0x737574617473, 0xE600000000000000);
}

uint64_t sub_233425308()
{
  return 0x6C61746F74;
}

uint64_t sub_23342531C()
{
  return 0x497972616D6D7573;
}

uint64_t sub_23342533C()
{
  return 0x4D746E656D796170;
}

unint64_t sub_233425360()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_23342537C()
{
  return 0x746361736E617274;
}

uint64_t sub_23342539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23342791C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334253C0()
{
  sub_233426E54();
  return sub_23361F428();
}

uint64_t sub_2334253E8()
{
  sub_233426E54();
  return sub_23361F434();
}

uint64_t OrderPayment.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _QWORD v23[5];
  int v24;
  char v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F528);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v24 = *((_DWORD *)v1 + 2);
  v22 = *(_OWORD *)(v1 + 12);
  v9 = *((_QWORD *)v1 + 4);
  v20 = *((_QWORD *)v1 + 5);
  v21 = v9;
  v10 = *((_QWORD *)v1 + 6);
  v18 = *((_QWORD *)v1 + 7);
  v19 = v10;
  v11 = *((_QWORD *)v1 + 8);
  v16 = *((_QWORD *)v1 + 9);
  v17 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233426E54();
  sub_23361F410();
  LOBYTE(v23[0]) = v8;
  v25 = 0;
  sub_233426E98();
  sub_23361F110();
  if (!v2)
  {
    v13 = v18;
    v14 = v19;
    v15 = v17;
    LODWORD(v23[0]) = v24;
    *(_OWORD *)((char *)v23 + 4) = v22;
    v23[3] = v21;
    v23[4] = v20;
    v25 = 1;
    sub_23317231C();
    sub_23361F17C();
    v23[0] = v14;
    v25 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F540);
    sub_233426FE0(&qword_25604F548, (uint64_t (*)(void))sub_233426EDC, MEMORY[0x24BEE12A0]);
    sub_23361F110();
    v23[0] = v13;
    v25 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23361F110();
    v23[0] = v15;
    v25 = 4;
    sub_23361F110();
    v23[0] = v16;
    v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F558);
    sub_233426F20(&qword_25604F560, &qword_25604F568, (uint64_t)&protocol conformance descriptor for Order.PaymentTransaction, MEMORY[0x24BEE12A0]);
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OrderPayment.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  int v26;
  __int128 v27;
  _QWORD v28[5];
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F570);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233426E54();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v30 = 0;
    sub_233426F9C();
    sub_23361EFFC();
    v9 = LOBYTE(v28[0]);
    v30 = 1;
    sub_233172558();
    sub_23361F068();
    v26 = v9;
    v29 = v28[0];
    v27 = *(_OWORD *)((char *)v28 + 4);
    v11 = v28[3];
    v12 = v28[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F540);
    v30 = 2;
    sub_233426FE0(&qword_25604F580, (uint64_t (*)(void))sub_233427048, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    v23 = v11;
    v24 = a2;
    v25 = v12;
    v13 = v28[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v30 = 3;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    v22 = v13;
    v14 = v28[0];
    v30 = 4;
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    v21 = v14;
    v15 = v28[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F558);
    v30 = 5;
    sub_233426F20(&qword_25604F590, &qword_25604F598, (uint64_t)&protocol conformance descriptor for Order.PaymentTransaction, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    v16 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v17 = v28[0];
    swift_bridgeObjectRetain();
    v18 = v24;
    *v24 = v26;
    *((_DWORD *)v18 + 2) = v29;
    *(_OWORD *)(v18 + 12) = v27;
    v19 = v22;
    *((_QWORD *)v18 + 4) = v23;
    *((_QWORD *)v18 + 5) = v16;
    v20 = v21;
    *((_QWORD *)v18 + 6) = v19;
    *((_QWORD *)v18 + 7) = v20;
    *((_QWORD *)v18 + 8) = v15;
    *((_QWORD *)v18 + 9) = v17;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_233425BCC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OrderPayment.init(from:)(a1, a2);
}

uint64_t sub_233425BE0(_QWORD *a1)
{
  return OrderPayment.encode(to:)(a1);
}

uint64_t OrderPaymentSummaryItem.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderPaymentSummaryItem.label.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderPaymentSummaryItem.label.modify())()
{
  return nullsub_1;
}

uint64_t OrderPaymentSummaryItem.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  v2 = *(_QWORD *)(v1 + 48);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(v1 + 20);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  return swift_bridgeObjectRetain();
}

__n128 OrderPaymentSummaryItem.value.setter(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 20) = result;
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = v5;
  return result;
}

uint64_t (*OrderPaymentSummaryItem.value.modify())()
{
  return nullsub_1;
}

uint64_t OrderPaymentSummaryItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233425D74()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_233425DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233427BD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233425DC4()
{
  sub_2334270CC();
  return sub_23361F428();
}

uint64_t sub_233425DEC()
{
  sub_2334270CC();
  return sub_23361F434();
}

uint64_t OrderPaymentSummaryItem.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233425EC4()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_233425F74()
{
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233426008()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23361EAEC();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t OrderPaymentSummaryItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F5A0);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_DWORD *)(v1 + 16);
  v11 = *(_OWORD *)(v1 + 20);
  v7 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334270CC();
  sub_23361F410();
  LOBYTE(v13) = 0;
  sub_23361F140();
  if (!v2)
  {
    v13 = v17;
    v14 = v11;
    v15 = v10;
    v16 = v9;
    v18 = 1;
    sub_23317231C();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t OrderPaymentSummaryItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F5B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334270CC();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v18) = 0;
  v9 = sub_23361F02C();
  v11 = v10;
  v22 = 1;
  sub_233172558();
  swift_bridgeObjectRetain();
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v18;
  v13 = v20;
  v14 = v21;
  v15 = v19;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 20) = v15;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334263F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderPaymentSummaryItem.init(from:)(a1, a2);
}

uint64_t sub_233426408(_QWORD *a1)
{
  return OrderPaymentSummaryItem.encode(to:)(a1);
}

FinanceKit::OrderPaymentStatus __swiftcall OrderPaymentStatus.init(_:)(FinanceKit::OrderPaymentStatus result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

__n128 OrderPaymentSummaryItem.init(_:bundle:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  __n128 result;
  uint64_t v10;

  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v6 = (void *)OrderBundle.localizedString(forKey:)();
  v7 = sub_23361D6B8();
  v8 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v7);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(Swift::String *)a2 = v8;
  *(_DWORD *)(a2 + 16) = v4;
  result = *(__n128 *)(a1 + 20);
  *(__n128 *)(a2 + 20) = result;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v10;
  return result;
}

__n128 OrderPaymentSummaryItem.init(_:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  Swift::String v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;
  __n128 v14;
  int v15;
  __n128 v16;

  v4 = objc_msgSend(a1, sel_label);
  v5 = sub_23361D6B8();
  v6 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v5);

  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_valueAmount);
  objc_msgSend(v7, sel_decimalValue);
  v8 = v15;
  v14 = v16;

  v9 = objc_msgSend(a1, sel_valueCurrencyCode);
  v10 = sub_23361E150();
  v12 = v11;

  *(Swift::String *)a2 = v6;
  *(_DWORD *)(a2 + 16) = v8;
  result = v14;
  *(__n128 *)(a2 + 20) = v14;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v12;
  return result;
}

BOOL _s10FinanceKit12OrderPaymentV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL8 result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v2 = *a1;
  v3 = *((unsigned int *)a1 + 2);
  v4 = *((unsigned __int16 *)a1 + 6);
  v5 = *((unsigned __int16 *)a1 + 7);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((unsigned int *)a1 + 6);
  v8 = *((_QWORD *)a1 + 4);
  v9 = *((_QWORD *)a1 + 5);
  v11 = *((_QWORD *)a1 + 6);
  v10 = (_QWORD *)*((_QWORD *)a1 + 7);
  v12 = (_QWORD *)*((_QWORD *)a1 + 8);
  v13 = *((_QWORD *)a1 + 9);
  v14 = *a2;
  v15 = *((_QWORD *)a2 + 2);
  v16 = *((unsigned int *)a2 + 6);
  v17 = *((_QWORD *)a2 + 4);
  v18 = *((_QWORD *)a2 + 5);
  if (v2 == 6)
  {
    if (v14 != 6)
      return 0;
  }
  else
  {
    result = 0;
    if (v14 == 6 || v2 != v14)
      return result;
  }
  v35 = *((_QWORD *)a2 + 6);
  v36 = v11;
  v37 = (_QWORD *)*((_QWORD *)a2 + 7);
  v38 = v10;
  v39 = (_QWORD *)*((_QWORD *)a2 + 8);
  v40 = v12;
  v41 = *((_QWORD *)a2 + 9);
  v42 = v13;
  v20 = v3 | (v4 << 32) | (v5 << 48);
  v21 = *((unsigned int *)a2 + 2) | ((unint64_t)*((unsigned __int16 *)a2 + 6) << 32) | ((unint64_t)*((unsigned __int16 *)a2 + 7) << 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((MEMORY[0x234932E38](v20, v6, v7, v21, v15, v16) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v8 == v17 && v9 == v18)
  {
    swift_bridgeObjectRelease_n();
    v23 = v41;
    v22 = v42;
    v25 = v39;
    v24 = v40;
    v27 = v37;
    v26 = v38;
    v29 = v35;
    v28 = v36;
LABEL_14:
    if (v28)
    {
      if (!v29)
        return 0;
      swift_bridgeObjectRetain();
      v31 = swift_bridgeObjectRetain();
      v32 = sub_23322D5C8(v31, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
        return 0;
    }
    else if (v29)
    {
      return 0;
    }
    if (v26)
    {
      if (!v27 || (sub_23322B8BC(v26, v27) & 1) == 0)
        return 0;
    }
    else if (v27)
    {
      return 0;
    }
    if (v24)
    {
      if (!v25 || (sub_23322B8BC(v24, v25) & 1) == 0)
        return 0;
    }
    else if (v25)
    {
      return 0;
    }
    if (v22)
    {
      if (!v23)
        return 0;
      swift_bridgeObjectRetain();
      v33 = swift_bridgeObjectRetain();
      v34 = sub_23322DFA0(v33, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (v34 & 1) != 0;
    }
    return !v23;
  }
  v30 = sub_23361F224();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  v23 = v41;
  v22 = v42;
  v25 = v39;
  v24 = v40;
  v27 = v37;
  v26 = v38;
  v29 = v35;
  v28 = v36;
  if ((v30 & 1) != 0)
    goto LABEL_14;
  return result;
}

uint64_t _s10FinanceKit23OrderPaymentSummaryItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  v2 = *(unsigned int *)(a1 + 16);
  v3 = *(unsigned __int16 *)(a1 + 20);
  v4 = *(unsigned __int16 *)(a1 + 22);
  v18 = *(_QWORD *)(a1 + 24);
  v17 = *(_DWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(unsigned int *)(a2 + 16);
  v7 = *(unsigned __int16 *)(a2 + 20);
  v8 = *(unsigned __int16 *)(a2 + 22);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(unsigned int *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_23361F224(), result = 0, (v12 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((MEMORY[0x234932E38](v2 | (v3 << 32) | (v4 << 48), v18, v17, v6 | (v7 << 32) | (v8 << 48), v9, v10) & 1) != 0)
    {
      if (v16 == v15 && v5 == v11)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      v14 = sub_23361F224();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return result;
}

void sub_23342698C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  os_unfair_lock_s *v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v36 = MEMORY[0x24BEE4AF8];
    sub_233274154(0, v5, 0);
    v7 = v36;
    v30 = OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleLock;
    v31 = *(_QWORD *)(a2 + 16);
    v29 = v31 + OBJC_IVAR____TtC10FinanceKit20ContentPackageReader_bundleURL;
    v8 = a1 + 40;
    while (1)
    {
      v34 = v7;
      v33 = *(_DWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 12);
      v10 = *(_QWORD *)(v8 + 20);
      v11 = *(_QWORD *)(v8 + 40);
      v32 = *(_QWORD *)(v8 + 32);
      MEMORY[0x24BDAC7A8](v7);
      v12 = *(_QWORD *)(v31 + v30);
      v13 = (_QWORD *)(v12 + 16);
      v14 = (os_unfair_lock_s *)(v12 + 24);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      os_unfair_lock_lock(v14);
      sub_2331E06B8(v13, v29, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD))sub_2331E08D8, &v35);
      if (v3)
      {
        os_unfair_lock_unlock(v14);
        __break(1u);
        return;
      }
      os_unfair_lock_unlock(v14);
      v15 = v35;
      v16 = (_QWORD *)sub_23361D6B8();
      v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FinanceKit15LocalizedString_localizedStrings];
      if (!*(_QWORD *)(v17 + 16))
        goto LABEL_10;
      v18 = (_QWORD *)sub_2332DA944(v16);
      if (!v18[2])
        break;
      v19 = v18[4];
      v20 = v18[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v17 + 16))
        break;
      v21 = sub_2331E3D18(v19, v20);
      if ((v22 & 1) == 0)
        break;
      v23 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v21);
      v24 = *v23;
      v25 = v23[1];
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      v7 = v34;
      v36 = v34;
      v27 = *(_QWORD *)(v34 + 16);
      v26 = *(_QWORD *)(v34 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_233274154(v26 > 1, v27 + 1, 1);
        v7 = v36;
      }
      *(_QWORD *)(v7 + 16) = v27 + 1;
      v28 = v7 + 56 * v27;
      *(_QWORD *)(v28 + 32) = v24;
      *(_QWORD *)(v28 + 40) = v25;
      *(_DWORD *)(v28 + 48) = v33;
      *(_QWORD *)(v28 + 52) = v9;
      *(_QWORD *)(v28 + 60) = v10;
      *(_QWORD *)(v28 + 72) = v32;
      *(_QWORD *)(v28 + 80) = v11;
      v8 += 56;
      --v5;
      v3 = 0;
      if (!v5)
        return;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    v24 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key];
    v25 = *(_QWORD *)&v15[OBJC_IVAR____TtC10FinanceKit15LocalizedString_key + 8];
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_11;
  }
}

uint64_t sub_233426C78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = type metadata accessor for RawOrderPaymentTransaction();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.PaymentTransaction();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v19 = v2;
    v21 = MEMORY[0x24BEE4AF8];
    sub_233274128(0, v13, 0);
    v14 = v21;
    v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v20 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_233360CA0(v15, (uint64_t)v8);
      swift_retain();
      Order.PaymentTransaction.init(_:bundle:)((uint64_t)v8, a2, (uint64_t)v12);
      v21 = v14;
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_233274128(v16 > 1, v17 + 1, 1);
        v14 = v21;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      sub_233426E10((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v17);
      v15 += v20;
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_233426E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.PaymentTransaction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_233426E54()
{
  unint64_t result;

  result = qword_25604F530;
  if (!qword_25604F530)
  {
    result = MEMORY[0x234934494](&unk_233649244, &type metadata for OrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F530);
  }
  return result;
}

unint64_t sub_233426E98()
{
  unint64_t result;

  result = qword_25604F538;
  if (!qword_25604F538)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPaymentStatus, &type metadata for OrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_25604F538);
  }
  return result;
}

unint64_t sub_233426EDC()
{
  unint64_t result;

  result = qword_25604F550;
  if (!qword_25604F550)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPaymentSummaryItem, &type metadata for OrderPaymentSummaryItem);
    atomic_store(result, (unint64_t *)&qword_25604F550);
  }
  return result;
}

uint64_t sub_233426F20(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604F558);
    v10 = sub_23342708C(a2, a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233426F9C()
{
  unint64_t result;

  result = qword_25604F578;
  if (!qword_25604F578)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPaymentStatus, &type metadata for OrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_25604F578);
  }
  return result;
}

uint64_t sub_233426FE0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604F540);
    v8 = a2();
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233427048()
{
  unint64_t result;

  result = qword_25604F588;
  if (!qword_25604F588)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPaymentSummaryItem, &type metadata for OrderPaymentSummaryItem);
    atomic_store(result, (unint64_t *)&qword_25604F588);
  }
  return result;
}

uint64_t sub_23342708C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Order.PaymentTransaction();
    result = MEMORY[0x234934494](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2334270CC()
{
  unint64_t result;

  result = qword_25604F5A8;
  if (!qword_25604F5A8)
  {
    result = MEMORY[0x234934494](&unk_2336491F4, &type metadata for OrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5A8);
  }
  return result;
}

unint64_t sub_233427114()
{
  unint64_t result;

  result = qword_25604F5B8;
  if (!qword_25604F5B8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPaymentSummaryItem, &type metadata for OrderPaymentSummaryItem);
    atomic_store(result, (unint64_t *)&qword_25604F5B8);
  }
  return result;
}

uint64_t destroy for RawOrderPayment()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawOrderPayment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OrderPayment(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OrderPayment(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderPayment(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderPayment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderPayment()
{
  return &type metadata for OrderPayment;
}

uint64_t destroy for RawOrderPaymentSummaryItem()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawOrderPaymentSummaryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawOrderPaymentSummaryItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_WORD *)(a1 + 30) = *(_WORD *)(a2 + 30);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RawOrderPaymentSummaryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OrderPaymentSummaryItem()
{
  return &type metadata for OrderPaymentSummaryItem;
}

uint64_t storeEnumTagSinglePayload for OrderPaymentSummaryItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233427620 + 4 * byte_233648EDB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233427654 + 4 * byte_233648ED6[v4]))();
}

uint64_t sub_233427654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23342765C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233427664);
  return result;
}

uint64_t sub_233427670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233427678);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23342767C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233427684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderPaymentSummaryItem.CodingKeys()
{
  return &type metadata for OrderPaymentSummaryItem.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for OrderPayment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2334276EC + 4 * byte_233648EE5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233427720 + 4 * byte_233648EE0[v4]))();
}

uint64_t sub_233427720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233427728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233427730);
  return result;
}

uint64_t sub_23342773C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233427744);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233427748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233427750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderPayment.CodingKeys()
{
  return &type metadata for OrderPayment.CodingKeys;
}

unint64_t sub_233427770()
{
  unint64_t result;

  result = qword_25604F5C0;
  if (!qword_25604F5C0)
  {
    result = MEMORY[0x234934494](&unk_233649114, &type metadata for OrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5C0);
  }
  return result;
}

unint64_t sub_2334277B8()
{
  unint64_t result;

  result = qword_25604F5C8;
  if (!qword_25604F5C8)
  {
    result = MEMORY[0x234934494](&unk_2336491CC, &type metadata for OrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5C8);
  }
  return result;
}

unint64_t sub_233427800()
{
  unint64_t result;

  result = qword_25604F5D0;
  if (!qword_25604F5D0)
  {
    result = MEMORY[0x234934494](&unk_23364913C, &type metadata for OrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5D0);
  }
  return result;
}

unint64_t sub_233427848()
{
  unint64_t result;

  result = qword_25604F5D8;
  if (!qword_25604F5D8)
  {
    result = MEMORY[0x234934494](&unk_233649164, &type metadata for OrderPaymentSummaryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5D8);
  }
  return result;
}

unint64_t sub_233427890()
{
  unint64_t result;

  result = qword_25604F5E0;
  if (!qword_25604F5E0)
  {
    result = MEMORY[0x234934494](&unk_233649084, &type metadata for OrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5E0);
  }
  return result;
}

unint64_t sub_2334278D8()
{
  unint64_t result;

  result = qword_25604F5E8;
  if (!qword_25604F5E8)
  {
    result = MEMORY[0x234934494](&unk_2336490AC, &type metadata for OrderPayment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F5E8);
  }
  return result;
}

uint64_t sub_23342791C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61746F74 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x497972616D6D7573 && a2 == 0xEC000000736D6574 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4D746E656D796170 && a2 == 0xEE0073646F687465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000233676E60 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_233427BD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t OrderPaymentStatus.hash(into:)()
{
  return sub_23361F35C();
}

BOOL static OrderPaymentStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_233427CF4()
{
  sub_233428578();
  return sub_23361F428();
}

uint64_t sub_233427D1C()
{
  sub_233428578();
  return sub_23361F434();
}

uint64_t sub_233427D44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233427D74 + 4 * byte_2336492A0[*v0]))(0x676E69646E6570, 0xE700000000000000);
}

uint64_t sub_233427D74()
{
  return 0x7A69726F68747561;
}

uint64_t sub_233427D90()
{
  return 1684627824;
}

uint64_t sub_233427DA0()
{
  return 0x6465646E75666572;
}

uint64_t sub_233427DB8()
{
  return 0x64656E696C636564;
}

uint64_t sub_233427DD0()
{
  return 0x646564696F76;
}

uint64_t sub_233427DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23342921C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233427E08()
{
  sub_233428424();
  return sub_23361F428();
}

uint64_t sub_233427E30()
{
  sub_233428424();
  return sub_23361F434();
}

uint64_t sub_233427E58()
{
  sub_2334284AC();
  return sub_23361F428();
}

uint64_t sub_233427E80()
{
  sub_2334284AC();
  return sub_23361F434();
}

uint64_t sub_233427EA8()
{
  sub_233428534();
  return sub_23361F428();
}

uint64_t sub_233427ED0()
{
  sub_233428534();
  return sub_23361F434();
}

uint64_t sub_233427EF8()
{
  sub_2334285BC();
  return sub_23361F428();
}

uint64_t sub_233427F20()
{
  sub_2334285BC();
  return sub_23361F434();
}

uint64_t sub_233427F48()
{
  sub_2334284F0();
  return sub_23361F428();
}

uint64_t sub_233427F70()
{
  sub_2334284F0();
  return sub_23361F434();
}

uint64_t sub_233427F98()
{
  sub_233428468();
  return sub_23361F428();
}

uint64_t sub_233427FC0()
{
  sub_233428468();
  return sub_23361F434();
}

uint64_t OrderPaymentStatus.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

void OrderPaymentStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[17];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F5F0);
  v15[13] = *(_QWORD *)(v3 - 8);
  v15[14] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v15[12] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F5F8);
  v15[10] = *(_QWORD *)(v5 - 8);
  v15[11] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v15[9] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F600);
  v15[7] = *(_QWORD *)(v7 - 8);
  v15[8] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v15[6] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F608);
  v15[4] = *(_QWORD *)(v9 - 8);
  v15[5] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v15[3] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F610);
  v15[1] = *(_QWORD *)(v11 - 8);
  v15[2] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F618);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F620);
  v15[15] = *(_QWORD *)(v13 - 8);
  v15[16] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233428424();
  sub_23361F410();
  __asm { BR              X9 }
}

uint64_t sub_233428260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 70) = 0;
  sub_2334285BC();
  v5 = *(_QWORD *)(v4 - 96);
  sub_23361F0C8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

unint64_t sub_233428424()
{
  unint64_t result;

  result = qword_25604F628;
  if (!qword_25604F628)
  {
    result = MEMORY[0x234934494](&unk_2336498DC, &type metadata for OrderPaymentStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F628);
  }
  return result;
}

unint64_t sub_233428468()
{
  unint64_t result;

  result = qword_25604F630;
  if (!qword_25604F630)
  {
    result = MEMORY[0x234934494](&unk_23364988C, &type metadata for OrderPaymentStatus.VoidedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F630);
  }
  return result;
}

unint64_t sub_2334284AC()
{
  unint64_t result;

  result = qword_25604F638;
  if (!qword_25604F638)
  {
    result = MEMORY[0x234934494](&unk_23364983C, &type metadata for OrderPaymentStatus.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F638);
  }
  return result;
}

unint64_t sub_2334284F0()
{
  unint64_t result;

  result = qword_25604F640;
  if (!qword_25604F640)
  {
    result = MEMORY[0x234934494](&unk_2336497EC, &type metadata for OrderPaymentStatus.RefundedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F640);
  }
  return result;
}

unint64_t sub_233428534()
{
  unint64_t result;

  result = qword_25604F648;
  if (!qword_25604F648)
  {
    result = MEMORY[0x234934494](&unk_23364979C, &type metadata for OrderPaymentStatus.PaidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F648);
  }
  return result;
}

unint64_t sub_233428578()
{
  unint64_t result;

  result = qword_25604F650;
  if (!qword_25604F650)
  {
    result = MEMORY[0x234934494](&unk_23364974C, &type metadata for OrderPaymentStatus.AuthorizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F650);
  }
  return result;
}

unint64_t sub_2334285BC()
{
  unint64_t result;

  result = qword_25604F658;
  if (!qword_25604F658)
  {
    result = MEMORY[0x234934494](&unk_2336496FC, &type metadata for OrderPaymentStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F658);
  }
  return result;
}

uint64_t OrderPaymentStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[4];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F660);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F668);
  v37 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F670);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F678);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F680);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F688);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F690);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_233428424();
  v21 = v48;
  sub_23361F3EC();
  if (!v21)
  {
    v29[3] = v15;
    v29[1] = v13;
    v29[2] = v12;
    v30 = v17;
    v48 = v16;
    v22 = v19;
    v23 = sub_23361F098();
    if (*(_QWORD *)(v23 + 16) == 1)
    {
      v29[0] = v23;
      __asm { BR              X9 }
    }
    v24 = sub_23361EE10();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v26 = &type metadata for OrderPaymentStatus;
    v27 = v48;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v27);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
}

void sub_2334289E8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v0;
  *(_BYTE *)(v5 - 69) = 1;
  sub_233428578();
  v7 = *(_QWORD *)(v5 - 160);
  v8 = *(_QWORD *)(v5 - 96);
  sub_23361EFA8();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v7, *(_QWORD *)(v5 - 208));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v8);
    *v3 = v6;
    JUMPOUT(0x2334289C0);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x2334289B8);
}

unint64_t sub_233428C38()
{
  unint64_t result;

  result = qword_25604F698;
  if (!qword_25604F698)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderPaymentStatus, &type metadata for OrderPaymentStatus);
    atomic_store(result, (unint64_t *)&qword_25604F698);
  }
  return result;
}

uint64_t sub_233428C7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderPaymentStatus.init(from:)(a1, a2);
}

void sub_233428C90(_QWORD *a1)
{
  OrderPaymentStatus.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for OrderPaymentStatus()
{
  return &type metadata for OrderPaymentStatus;
}

uint64_t _s10FinanceKit18OrderPaymentStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233428D04 + 4 * byte_2336492B7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233428D38 + 4 * byte_2336492B2[v4]))();
}

uint64_t sub_233428D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233428D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233428D48);
  return result;
}

uint64_t sub_233428D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233428D5CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233428D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233428D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.CodingKeys()
{
  return &type metadata for OrderPaymentStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.PendingCodingKeys()
{
  return &type metadata for OrderPaymentStatus.PendingCodingKeys;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.AuthorizedCodingKeys()
{
  return &type metadata for OrderPaymentStatus.AuthorizedCodingKeys;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.PaidCodingKeys()
{
  return &type metadata for OrderPaymentStatus.PaidCodingKeys;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.RefundedCodingKeys()
{
  return &type metadata for OrderPaymentStatus.RefundedCodingKeys;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.DeclinedCodingKeys()
{
  return &type metadata for OrderPaymentStatus.DeclinedCodingKeys;
}

ValueMetadata *type metadata accessor for OrderPaymentStatus.VoidedCodingKeys()
{
  return &type metadata for OrderPaymentStatus.VoidedCodingKeys;
}

unint64_t sub_233428DE8()
{
  unint64_t result;

  result = qword_25604F6A0;
  if (!qword_25604F6A0)
  {
    result = MEMORY[0x234934494](&unk_2336496D4, &type metadata for OrderPaymentStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6A0);
  }
  return result;
}

unint64_t sub_233428E30()
{
  unint64_t result;

  result = qword_25604F6A8;
  if (!qword_25604F6A8)
  {
    result = MEMORY[0x234934494](&unk_2336495F4, &type metadata for OrderPaymentStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6A8);
  }
  return result;
}

unint64_t sub_233428E78()
{
  unint64_t result;

  result = qword_25604F6B0;
  if (!qword_25604F6B0)
  {
    result = MEMORY[0x234934494](&unk_23364961C, &type metadata for OrderPaymentStatus.PendingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6B0);
  }
  return result;
}

unint64_t sub_233428EC0()
{
  unint64_t result;

  result = qword_25604F6B8;
  if (!qword_25604F6B8)
  {
    result = MEMORY[0x234934494](&unk_2336495A4, &type metadata for OrderPaymentStatus.AuthorizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6B8);
  }
  return result;
}

unint64_t sub_233428F08()
{
  unint64_t result;

  result = qword_25604F6C0;
  if (!qword_25604F6C0)
  {
    result = MEMORY[0x234934494](&unk_2336495CC, &type metadata for OrderPaymentStatus.AuthorizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6C0);
  }
  return result;
}

unint64_t sub_233428F50()
{
  unint64_t result;

  result = qword_25604F6C8;
  if (!qword_25604F6C8)
  {
    result = MEMORY[0x234934494](&unk_233649554, &type metadata for OrderPaymentStatus.PaidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6C8);
  }
  return result;
}

unint64_t sub_233428F98()
{
  unint64_t result;

  result = qword_25604F6D0;
  if (!qword_25604F6D0)
  {
    result = MEMORY[0x234934494](&unk_23364957C, &type metadata for OrderPaymentStatus.PaidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6D0);
  }
  return result;
}

unint64_t sub_233428FE0()
{
  unint64_t result;

  result = qword_25604F6D8;
  if (!qword_25604F6D8)
  {
    result = MEMORY[0x234934494](&unk_233649504, &type metadata for OrderPaymentStatus.RefundedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6D8);
  }
  return result;
}

unint64_t sub_233429028()
{
  unint64_t result;

  result = qword_25604F6E0;
  if (!qword_25604F6E0)
  {
    result = MEMORY[0x234934494](&unk_23364952C, &type metadata for OrderPaymentStatus.RefundedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6E0);
  }
  return result;
}

unint64_t sub_233429070()
{
  unint64_t result;

  result = qword_25604F6E8;
  if (!qword_25604F6E8)
  {
    result = MEMORY[0x234934494](&unk_2336494B4, &type metadata for OrderPaymentStatus.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6E8);
  }
  return result;
}

unint64_t sub_2334290B8()
{
  unint64_t result;

  result = qword_25604F6F0;
  if (!qword_25604F6F0)
  {
    result = MEMORY[0x234934494](&unk_2336494DC, &type metadata for OrderPaymentStatus.DeclinedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6F0);
  }
  return result;
}

unint64_t sub_233429100()
{
  unint64_t result;

  result = qword_25604F6F8;
  if (!qword_25604F6F8)
  {
    result = MEMORY[0x234934494](&unk_233649464, &type metadata for OrderPaymentStatus.VoidedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F6F8);
  }
  return result;
}

unint64_t sub_233429148()
{
  unint64_t result;

  result = qword_25604F700;
  if (!qword_25604F700)
  {
    result = MEMORY[0x234934494](&unk_23364948C, &type metadata for OrderPaymentStatus.VoidedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F700);
  }
  return result;
}

unint64_t sub_233429190()
{
  unint64_t result;

  result = qword_25604F708;
  if (!qword_25604F708)
  {
    result = MEMORY[0x234934494](&unk_233649644, &type metadata for OrderPaymentStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F708);
  }
  return result;
}

unint64_t sub_2334291D8()
{
  unint64_t result;

  result = qword_25604F710;
  if (!qword_25604F710)
  {
    result = MEMORY[0x234934494](&unk_23364966C, &type metadata for OrderPaymentStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25604F710);
  }
  return result;
}

uint64_t sub_23342921C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6570 && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEA00000000006465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684627824 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465646E75666572 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656E696C636564 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646564696F76 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t ManagedContactTransactionInsightImporter.__allocating_init()()
{
  return swift_allocObject();
}

void ManagedContactTransactionInsightImporter.insertOrUpdateInsight(_:on:in:)(void *a1, uint64_t a2, void *a3)
{
  sub_2334294D4(a1, a2, a3);
}

uint64_t ManagedContactTransactionInsightImporter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedContactTransactionInsightImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedContactTransactionInsightImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_2334294D4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v6 = ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(a3);
  if (!v3)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_contactInsightObject);
    if (!v8)
    {
      type metadata accessor for ManagedContactTransactionInsight();
      v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
      objc_msgSend(v7, sel_setContactInsightObject_, v8);
    }

    v9 = objc_msgSend(a1, sel_peerPaymentCounterpartHandle);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v8, sel_setPeerPaymentCounterpartHandle_, v9);

      v8 = v10;
    }

  }
}

uint64_t type metadata accessor for ManagedContactTransactionInsightImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedContactTransactionInsightImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedContactTransactionInsightImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t BankConnectService.loadPaymentInfo(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v3[13] = type metadata accessor for BankConnectService.Message();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233429648()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[14];
  v2 = v0[11];
  v3 = v0[10];
  v0[15] = *(_QWORD *)(v0[12] + 16);
  *v1 = v3;
  v1[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t BankConnectService.loadPaymentInfo(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v1;
  *(_QWORD *)(v2 + 88) = type metadata accessor for BankConnectService.Message();
  v4 = swift_task_alloc();
  v5 = *a1;
  *(_QWORD *)(v2 + 96) = v4;
  *(_QWORD *)(v2 + 104) = v5;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 128) = a1[3];
  return swift_task_switch();
}

uint64_t sub_233429718()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = (_QWORD *)v0[12];
  v0[17] = *(_QWORD *)(v0[10] + 16);
  *v5 = v3;
  v5[1] = v4;
  v5[2] = v1;
  v5[3] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_233429784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318C26C;
  return BankConnectService.loadPaymentInfo(for:)(a1, a2);
}

uint64_t sub_2334297E4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2331676FC;
  return BankConnectService.loadPaymentInfo(for:)(a1);
}

uint64_t dispatch thunk of BankConnectPaymentInfoUpdating.loadPaymentInfo(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23318C26C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectPaymentInfoUpdating.loadPaymentInfo(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2331676FC;
  return v9(a1, a2, a3);
}

uint64_t Date.FormatStyle.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v29 = a2;
  v3 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D8A4();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D868();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D73C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23361D43C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = sub_23361D424();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v24 = type metadata accessor for FormatterConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v24 + 20), v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v7, a1 + *(int *)(v24 + 24), v27);
  sub_23361D1FC();
  sub_23361D454();
  return sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t sub_233429B9C(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F9D0);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F9D8);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F9E0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342C814();
  sub_23361F410();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_23342C858();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23342C89C();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_233429D6C()
{
  sub_23342C814();
  return sub_23361F428();
}

uint64_t sub_233429D94()
{
  sub_23342C814();
  return sub_23361F434();
}

uint64_t sub_233429DBC()
{
  sub_23342C89C();
  return sub_23361F428();
}

uint64_t sub_233429DE4()
{
  sub_23342C89C();
  return sub_23361F434();
}

uint64_t sub_233429E0C()
{
  sub_23342C858();
  return sub_23361F428();
}

uint64_t sub_233429E34()
{
  sub_23342C858();
  return sub_23361F434();
}

uint64_t sub_233429E5C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23342C36C(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_233429E88(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_233429B9C(a1, *v1);
}

uint64_t Order.DateAndTimeFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v43 = a2;
  v39 = a1;
  v44 = sub_23361D850();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.TimeFormatter(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SingleDateFormatter();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v3, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  v16 = type metadata accessor for Order.DateAndTimeFormatter(0);
  v15[*(int *)(v13 + 20)] = *(_BYTE *)(v3 + *(int *)(v16 + 24));
  v17 = v39;
  v42 = SingleDateFormatter.format(_:now:)(v39, v43);
  v43 = v18;
  sub_233168500((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SingleDateFormatter);
  sub_2331684BC(v3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  sub_23361D5F8();
  v19 = Order.TimeFormatter.format(_:now:)(v17);
  v40 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_233168500((uint64_t)v12, type metadata accessor for Order.TimeFormatter);
  type metadata accessor for FormatterConfiguration();
  v21 = v41;
  v22 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v5, *MEMORY[0x24BDCF230], v44);
  v23 = sub_23361D85C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
  if (*(_BYTE *)(v3 + *(int *)(v16 + 20)) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_233623D50;
    v29 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
    v30 = sub_2331683F0();
    v31 = v43;
    *(_QWORD *)(v28 + 32) = v42;
    *(_QWORD *)(v28 + 40) = v31;
    *(_QWORD *)(v28 + 96) = v29;
    *(_QWORD *)(v28 + 104) = v30;
    *(_QWORD *)(v28 + 64) = v30;
    *(_QWORD *)(v28 + 72) = v19;
    *(_QWORD *)(v28 + 80) = v40;
    if (qword_2542450A8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_233623D50;
  v25 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
  v26 = sub_2331683F0();
  v27 = v43;
  *(_QWORD *)(v24 + 32) = v42;
  *(_QWORD *)(v24 + 40) = v27;
  *(_QWORD *)(v24 + 96) = v25;
  *(_QWORD *)(v24 + 104) = v26;
  *(_QWORD *)(v24 + 64) = v26;
  *(_QWORD *)(v24 + 72) = v19;
  *(_QWORD *)(v24 + 80) = v40;
  if (v23 == 1)
  {
    if (qword_2542450A8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_2542450A8 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v32 = (void *)qword_2542450A0;
  v33 = (void *)sub_23361E12C();
  v34 = (void *)sub_23361E12C();
  v35 = (void *)sub_23361E12C();
  v36 = objc_msgSend(v32, sel_localizedStringForKey_value_table_, v33, v34, v35);

  sub_23361E150();
  v37 = sub_23361E180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t type metadata accessor for Order.TimeFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_25604F960);
}

uint64_t type metadata accessor for Order.DateAndTimeFormatter(uint64_t a1)
{
  return sub_233177414(a1, qword_25604F8C8);
}

uint64_t Order.DateAndTimeFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.DateAndTimeFormatter(0);
  sub_23361F35C();
  return sub_23361F35C();
}

uint64_t sub_23342A50C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C797473;
  if (*v0 != 1)
    v1 = 0x6C79745365746164;
  if (*v0)
    return v1;
  else
    return 0x72756769666E6F63;
}

uint64_t sub_23342A574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23342C698(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23342A598()
{
  sub_23342BB00();
  return sub_23361F428();
}

uint64_t sub_23342A5C0()
{
  sub_23342BB00();
  return sub_23361F434();
}

uint64_t Order.DateAndTimeFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F7E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342BB00();
  sub_23361F410();
  v11[15] = 0;
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  if (!v2)
  {
    v9 = type metadata accessor for Order.DateAndTimeFormatter(0);
    v11[14] = *(_BYTE *)(v3 + *(int *)(v9 + 20));
    v11[13] = 1;
    sub_23342BB44();
    sub_23361F17C();
    v11[12] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[11] = 2;
    sub_2332F83C8();
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Order.DateAndTimeFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  type metadata accessor for Order.DateAndTimeFormatter(0);
  sub_23361F35C();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t Order.DateAndTimeFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v19 = a2;
  v3 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F7F8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Order.DateAndTimeFormatter(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342BB00();
  v21 = v7;
  v11 = (uint64_t)v23;
  sub_23361F3EC();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v17 = (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration;
    v16 = (uint64_t)v10;
  }
  else
  {
    v23 = a1;
    v28 = 0;
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    v13 = (uint64_t)v20;
    v12 = v21;
    v14 = v22;
    sub_23361F068();
    sub_2331C7090(v13, (uint64_t)v10);
    v26 = 1;
    sub_23342BB88();
    sub_23361F068();
    v10[*(int *)(v8 + 20)] = v27;
    v24 = 2;
    sub_2332F840C();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v14);
    v10[*(int *)(v8 + 24)] = v25;
    sub_2331684BC((uint64_t)v10, v19, type metadata accessor for Order.DateAndTimeFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    v16 = (uint64_t)v10;
    v17 = type metadata accessor for Order.DateAndTimeFormatter;
  }
  return sub_233168500(v16, v17);
}

uint64_t sub_23342AB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = Order.DateAndTimeFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23342ABA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = Order.DateAndTimeFormatter.format(_:now:)(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_23342AC40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.DateAndTimeFormatter.init(from:)(a1, a2);
}

uint64_t sub_23342AC54(_QWORD *a1)
{
  return Order.DateAndTimeFormatter.encode(to:)(a1);
}

uint64_t sub_23342AC68()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F35C();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_23342AD98()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F35C();
  return sub_23361F35C();
}

uint64_t sub_23342AEAC()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  sub_23361F35C();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t Order.TimeFormatter.format(_:now:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v37 = a1;
  v1 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v1);
  v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361D8A4();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23361D868();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D73C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23361D508();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23361D43C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
  sub_23361D418();
  v24 = sub_23361D424();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 0, 1, v24);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v26 = v35;
  v25(v12, v35, v9);
  v27 = type metadata accessor for FormatterConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v8, v26 + *(int *)(v27 + 20), v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v5, v26 + *(int *)(v27 + 24), v34);
  sub_23361D1FC();
  sub_23361D454();
  v28 = sub_23361D4F0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  return v28;
}

uint64_t Order.TimeFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

BOOL static Order.TimeFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_23342B408()
{
  sub_23342BBCC();
  return sub_23361F428();
}

uint64_t sub_23342B430()
{
  sub_23342BBCC();
  return sub_23361F434();
}

uint64_t Order.TimeFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F808);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342BBCC();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Order.TimeFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t Order.TimeFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v16 = (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F818);
  v15 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.TimeFormatter(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D6D0();
  sub_23361D7D8();
  sub_23361D88C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342BBCC();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  else
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    sub_2331C7090(v16, (uint64_t)v11);
    sub_2331684BC((uint64_t)v11, v14, type metadata accessor for Order.TimeFormatter);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  return sub_233168500(v12, type metadata accessor for Order.TimeFormatter);
}

uint64_t sub_23342B878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = Order.TimeFormatter.format(_:now:)(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_23342B89C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = Order.TimeFormatter.format(_:now:)(a1);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_23342B934@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.TimeFormatter.init(from:)(a1, a2);
}

uint64_t sub_23342B948(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604F808);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342BBCC();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t _s10FinanceKit5OrderV20DateAndTimeFormatterV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if ((MEMORY[0x234931A40]() & 1) != 0
    && (v4 = type metadata accessor for FormatterConfiguration(),
        (MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0
    && (v5 = type metadata accessor for Order.DateAndTimeFormatter(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    v6 = *(_BYTE *)(a1 + *(int *)(v5 + 24)) ^ *(_BYTE *)(a2 + *(int *)(v5 + 24)) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

unint64_t sub_23342BB00()
{
  unint64_t result;

  result = qword_25604F7E8;
  if (!qword_25604F7E8)
  {
    result = MEMORY[0x234934494](&unk_233649EE8, &_s20DateAndTimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F7E8);
  }
  return result;
}

unint64_t sub_23342BB44()
{
  unint64_t result;

  result = qword_25604F7F0;
  if (!qword_25604F7F0)
  {
    result = MEMORY[0x234934494](&unk_233649EC0, &_s20DateAndTimeFormatterV5StyleON);
    atomic_store(result, (unint64_t *)&qword_25604F7F0);
  }
  return result;
}

unint64_t sub_23342BB88()
{
  unint64_t result;

  result = qword_25604F800;
  if (!qword_25604F800)
  {
    result = MEMORY[0x234934494](&unk_233649E98, &_s20DateAndTimeFormatterV5StyleON);
    atomic_store(result, (unint64_t *)&qword_25604F800);
  }
  return result;
}

unint64_t sub_23342BBCC()
{
  unint64_t result;

  result = qword_25604F810;
  if (!qword_25604F810)
  {
    result = MEMORY[0x234934494](&unk_233649E48, &_s13TimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F810);
  }
  return result;
}

uint64_t sub_23342BC10(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_25604F820, type metadata accessor for Order.DateAndTimeFormatter, (uint64_t)&protocol conformance descriptor for Order.DateAndTimeFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23342BC4C()
{
  return sub_233167C58(&qword_25604F828, type metadata accessor for Order.DateAndTimeFormatter, (uint64_t)&protocol conformance descriptor for Order.DateAndTimeFormatter);
}

uint64_t sub_23342BC78()
{
  return sub_233167C58(&qword_25604F830, type metadata accessor for Order.DateAndTimeFormatter, (uint64_t)&protocol conformance descriptor for Order.DateAndTimeFormatter);
}

uint64_t sub_23342BCA4()
{
  return sub_233167C58(&qword_25604F838, type metadata accessor for Order.DateAndTimeFormatter, (uint64_t)&protocol conformance descriptor for Order.DateAndTimeFormatter);
}

uint64_t sub_23342BCD0()
{
  return sub_233167C58(&qword_25604F840, type metadata accessor for Order.DateAndTimeFormatter, (uint64_t)&protocol conformance descriptor for Order.DateAndTimeFormatter);
}

uint64_t sub_23342BCFC(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_25604F848, type metadata accessor for Order.TimeFormatter, (uint64_t)&protocol conformance descriptor for Order.TimeFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23342BD38()
{
  return sub_233167C58(&qword_25604F850, type metadata accessor for Order.TimeFormatter, (uint64_t)&protocol conformance descriptor for Order.TimeFormatter);
}

uint64_t sub_23342BD64()
{
  return sub_233167C58(&qword_25604F858, type metadata accessor for Order.TimeFormatter, (uint64_t)&protocol conformance descriptor for Order.TimeFormatter);
}

uint64_t sub_23342BD90()
{
  return sub_233167C58(&qword_25604F860, type metadata accessor for Order.TimeFormatter, (uint64_t)&protocol conformance descriptor for Order.TimeFormatter);
}

uint64_t sub_23342BDBC()
{
  return sub_233167C58(&qword_25604F868, type metadata accessor for Order.TimeFormatter, (uint64_t)&protocol conformance descriptor for Order.TimeFormatter);
}

uint64_t _s20DateAndTimeFormatterVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23342BDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for FormatterConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t _s20DateAndTimeFormatterVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23342BE78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatterConfiguration();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_23342BEF0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatterConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s13TimeFormatterVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23342BF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s13TimeFormatterVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23342BFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s13TimeFormatterV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23342C038 + 4 * byte_2336499A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23342C058 + 4 * byte_2336499A5[v4]))();
}

_BYTE *sub_23342C038(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23342C058(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23342C060(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23342C068(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23342C070(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23342C078(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s13TimeFormatterV10CodingKeysOMa()
{
  return &_s13TimeFormatterV10CodingKeysON;
}

ValueMetadata *_s20DateAndTimeFormatterV5StyleOMa()
{
  return &_s20DateAndTimeFormatterV5StyleON;
}

uint64_t _s20DateAndTimeFormatterV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23342C0F4 + 4 * byte_2336499AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23342C128 + 4 * byte_2336499AA[v4]))();
}

uint64_t sub_23342C128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23342C130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23342C138);
  return result;
}

uint64_t sub_23342C144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23342C14CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23342C150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23342C158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20DateAndTimeFormatterV10CodingKeysOMa()
{
  return &_s20DateAndTimeFormatterV10CodingKeysON;
}

unint64_t sub_23342C178()
{
  unint64_t result;

  result = qword_25604F998;
  if (!qword_25604F998)
  {
    result = MEMORY[0x234934494](&unk_233649D00, &_s20DateAndTimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F998);
  }
  return result;
}

unint64_t sub_23342C1C0()
{
  unint64_t result;

  result = qword_25604F9A0;
  if (!qword_25604F9A0)
  {
    result = MEMORY[0x234934494](&unk_233649D68, &_s20DateAndTimeFormatterV5StyleON);
    atomic_store(result, (unint64_t *)&qword_25604F9A0);
  }
  return result;
}

unint64_t sub_23342C208()
{
  unint64_t result;

  result = qword_25604F9A8;
  if (!qword_25604F9A8)
  {
    result = MEMORY[0x234934494](&unk_233649E20, &_s13TimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9A8);
  }
  return result;
}

unint64_t sub_23342C250()
{
  unint64_t result;

  result = qword_25604F9B0;
  if (!qword_25604F9B0)
  {
    result = MEMORY[0x234934494](&unk_233649D90, &_s13TimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9B0);
  }
  return result;
}

unint64_t sub_23342C298()
{
  unint64_t result;

  result = qword_25604F9B8;
  if (!qword_25604F9B8)
  {
    result = MEMORY[0x234934494](&unk_233649DB8, &_s13TimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9B8);
  }
  return result;
}

unint64_t sub_23342C2E0()
{
  unint64_t result;

  result = qword_25604F9C0;
  if (!qword_25604F9C0)
  {
    result = MEMORY[0x234934494](&unk_233649C70, &_s20DateAndTimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9C0);
  }
  return result;
}

unint64_t sub_23342C328()
{
  unint64_t result;

  result = qword_25604F9C8;
  if (!qword_25604F9C8)
  {
    result = MEMORY[0x234934494](&unk_233649C98, &_s20DateAndTimeFormatterV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9C8);
  }
  return result;
}

uint64_t sub_23342C36C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FA00);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FA08);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FA10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23342C814();
  v10 = v26;
  sub_23361F3EC();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_23361F098();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_23361EE10();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v19 = &_s20DateAndTimeFormatterV5StyleON;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_23342C858();
    sub_23361EFA8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_23342C89C();
    sub_23361EFA8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return v6;
}

uint64_t sub_23342C698(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79745365746164 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23342C814()
{
  unint64_t result;

  result = qword_25604F9E8;
  if (!qword_25604F9E8)
  {
    result = MEMORY[0x234934494](&unk_23364A150, &_s20DateAndTimeFormatterV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9E8);
  }
  return result;
}

unint64_t sub_23342C858()
{
  unint64_t result;

  result = qword_25604F9F0;
  if (!qword_25604F9F0)
  {
    result = MEMORY[0x234934494](&unk_23364A100, &_s20DateAndTimeFormatterV5StyleO14WideCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9F0);
  }
  return result;
}

unint64_t sub_23342C89C()
{
  unint64_t result;

  result = qword_25604F9F8;
  if (!qword_25604F9F8)
  {
    result = MEMORY[0x234934494](&unk_23364A0B0, &_s20DateAndTimeFormatterV5StyleO15ShortCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604F9F8);
  }
  return result;
}

uint64_t _s20DateAndTimeFormatterV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23342C92C + 4 * byte_2336499B9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23342C960 + 4 * byte_2336499B4[v4]))();
}

uint64_t sub_23342C960(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23342C968(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23342C970);
  return result;
}

uint64_t sub_23342C97C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23342C984);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23342C988(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23342C990(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20DateAndTimeFormatterV5StyleO10CodingKeysOMa()
{
  return &_s20DateAndTimeFormatterV5StyleO10CodingKeysON;
}

ValueMetadata *_s20DateAndTimeFormatterV5StyleO15ShortCodingKeysOMa()
{
  return &_s20DateAndTimeFormatterV5StyleO15ShortCodingKeysON;
}

ValueMetadata *_s20DateAndTimeFormatterV5StyleO14WideCodingKeysOMa()
{
  return &_s20DateAndTimeFormatterV5StyleO14WideCodingKeysON;
}

unint64_t sub_23342C9D0()
{
  unint64_t result;

  result = qword_25604FA18;
  if (!qword_25604FA18)
  {
    result = MEMORY[0x234934494](&unk_23364A088, &_s20DateAndTimeFormatterV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA18);
  }
  return result;
}

unint64_t sub_23342CA18()
{
  unint64_t result;

  result = qword_25604FA20;
  if (!qword_25604FA20)
  {
    result = MEMORY[0x234934494](&unk_233649FA8, &_s20DateAndTimeFormatterV5StyleO15ShortCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA20);
  }
  return result;
}

unint64_t sub_23342CA60()
{
  unint64_t result;

  result = qword_25604FA28;
  if (!qword_25604FA28)
  {
    result = MEMORY[0x234934494](&unk_233649FD0, &_s20DateAndTimeFormatterV5StyleO15ShortCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA28);
  }
  return result;
}

unint64_t sub_23342CAA8()
{
  unint64_t result;

  result = qword_25604FA30;
  if (!qword_25604FA30)
  {
    result = MEMORY[0x234934494](&unk_233649F58, &_s20DateAndTimeFormatterV5StyleO14WideCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA30);
  }
  return result;
}

unint64_t sub_23342CAF0()
{
  unint64_t result;

  result = qword_25604FA38;
  if (!qword_25604FA38)
  {
    result = MEMORY[0x234934494](&unk_233649F80, &_s20DateAndTimeFormatterV5StyleO14WideCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA38);
  }
  return result;
}

unint64_t sub_23342CB38()
{
  unint64_t result;

  result = qword_25604FA40;
  if (!qword_25604FA40)
  {
    result = MEMORY[0x234934494](&unk_233649FF8, &_s20DateAndTimeFormatterV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA40);
  }
  return result;
}

unint64_t sub_23342CB80()
{
  unint64_t result;

  result = qword_25604FA48;
  if (!qword_25604FA48)
  {
    result = MEMORY[0x234934494](&unk_23364A020, &_s20DateAndTimeFormatterV5StyleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA48);
  }
  return result;
}

uint64_t Order.PickupFulfillment.init(_:bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t countAndFlagsBits;
  void *object;
  void *v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  Swift::String v53;
  void *v54;
  uint64_t v55;
  Swift::String v56;
  id v57;
  double v58;
  double v59;
  double v60;
  id v61;
  char *v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v80 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 128) = 0;
  v12 = type metadata accessor for Order.PickupFulfillment();
  v13 = a3 + *(int *)(v12 + 48);
  v14 = type metadata accessor for Order.FulfillmentWindow(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v83 = v13;
  v15(v13, 1, 1, v14);
  v16 = a3 + *(int *)(v12 + 52);
  v81 = v10;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v82 = v9;
  v17(v16, 1, 1, v9);
  swift_retain();
  v18 = swift_bridgeObjectRetain();
  sub_23328ABD4(v18, a2);
  v20 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)a3 = v20;
  *(_BYTE *)(a3 + 8) = *(_BYTE *)(a1 + 8);
  countAndFlagsBits = *(_QWORD *)(a1 + 16);
  object = *(void **)(a1 + 24);
  if (object)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v23 = (void *)OrderBundle.localizedString(forKey:)();
    swift_release();
    swift_bridgeObjectRelease();
    v24 = sub_23361D6B8();
    v25 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v24);
    countAndFlagsBits = v25._countAndFlagsBits;
    object = v25._object;

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a3 + 16) = countAndFlagsBits;
  *(_QWORD *)(a3 + 24) = object;
  v26 = *(_QWORD *)(a1 + 32);
  v85 = v12;
  v84 = v8;
  v86 = v16;
  if (v26 == 1)
  {
    v27 = 0;
  }
  else
  {
    v28 = *(_QWORD *)(a1 + 128);
    v77 = *(_QWORD *)(a1 + 120);
    v76 = *(_QWORD *)(a1 + 112);
    v29 = *(_QWORD *)(a1 + 96);
    v75 = *(_QWORD *)(a1 + 104);
    v30 = *(_QWORD *)(a1 + 80);
    v74 = *(_QWORD *)(a1 + 88);
    v31 = *(_QWORD *)(a1 + 64);
    v73 = *(_QWORD *)(a1 + 72);
    v78 = a2;
    v33 = *(_QWORD *)(a1 + 48);
    v32 = *(_QWORD *)(a1 + 56);
    v34 = *(_QWORD *)(a1 + 40);
    v79 = sub_233168668(0, (unint64_t *)&qword_256045B60);
    *(_QWORD *)&v87 = v26;
    *((_QWORD *)&v87 + 1) = v34;
    v88 = v33;
    v89 = v32;
    v90 = v31;
    v91 = v73;
    v92 = v30;
    v93 = v74;
    v94 = v29;
    v95 = v75;
    v96 = v76;
    v97 = v77;
    v98 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = CNMutablePostalAddress.init(rawAddress:)((uint64_t *)&v87);
  }
  *(_QWORD *)(a3 + 32) = v27;
  v35 = *(_QWORD *)(a1 + 168);
  if (v35)
  {
    v37 = *(_QWORD *)(a1 + 176);
    v36 = *(_QWORD *)(a1 + 184);
    v39 = *(_QWORD *)(a1 + 152);
    v38 = *(_QWORD *)(a1 + 160);
    v40 = *(_QWORD *)(a1 + 144);
    v99[0] = *(_QWORD *)(a1 + 136);
    v41 = v99[0];
    v99[1] = v40;
    v100 = v39;
    v101 = v38;
    v102 = v35;
    v103 = v37;
    v104 = v36;
    swift_retain();
    sub_233364468(v41, v40, v39, v38, v35);
    Barcode.init(_:bundle:)((uint64_t)v99, (uint64_t)&v87);
    v42 = v87;
    v43 = v88;
    v44 = v89;
    v45 = v90;
    v46 = v91;
    v47 = v92;
  }
  else
  {
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v42 = 0uLL;
  }
  v48 = v86;
  *(_OWORD *)(a3 + 40) = v42;
  *(_QWORD *)(a3 + 56) = v43;
  *(_QWORD *)(a3 + 64) = v44;
  *(_QWORD *)(a3 + 72) = v45;
  *(_QWORD *)(a3 + 80) = v46;
  *(_QWORD *)(a3 + 88) = v47;
  v49 = *(_QWORD *)(a1 + 224);
  v50 = *(void **)(a1 + 232);
  if (v50)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v51 = (void *)OrderBundle.localizedString(forKey:)();
    swift_release();
    swift_bridgeObjectRelease();
    v52 = sub_23361D6B8();
    v53 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v52);
    v49 = v53._countAndFlagsBits;
    v50 = v53._object;

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a3 + 96) = v49;
  *(_QWORD *)(a3 + 104) = v50;
  v54 = (void *)OrderBundle.localizedString(forKey:)();
  v55 = sub_23361D6B8();
  v56 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v55);

  swift_bridgeObjectRelease();
  *(Swift::String *)(a3 + 112) = v56;
  if ((*(_BYTE *)(a1 + 217) & 1) != 0)
  {
    v57 = 0;
  }
  else
  {
    v58 = *(double *)(a1 + 200);
    v59 = *(double *)(a1 + 192);
    if ((*(_BYTE *)(a1 + 216) & 1) != 0)
      v60 = 0.0;
    else
      v60 = *(double *)(a1 + 208);
    v61 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
    v62 = v80;
    sub_23361D628();
    v63 = (void *)sub_23361D5B0();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v62, v82);
    v57 = objc_msgSend(v61, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v63, v59, v58, v60, 0.0, 1.0);

  }
  v64 = v85;
  v65 = v84;
  v66 = v83;

  *(_QWORD *)(a3 + 128) = v57;
  RawOrderPickupFulfillment.pickupWindow.getter(v65);
  swift_release();
  sub_233170B8C((uint64_t)v65, v66, &qword_256043808);
  v67 = type metadata accessor for RawOrderPickupFulfillment();
  sub_2334302D4(a1 + *(int *)(v67 + 56), v48);
  v68 = (uint64_t *)(a1 + *(int *)(v67 + 60));
  v70 = *v68;
  v69 = v68[1];
  swift_bridgeObjectRetain();
  result = sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
  v72 = (_QWORD *)(a3 + *(int *)(v64 + 56));
  *v72 = v70;
  v72[1] = v69;
  return result;
}

void Order.PickupFulfillment.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id i;
  unint64_t v25;
  unint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  id v34;
  void *v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t countAndFlagsBits;
  void *object;
  id v40;
  void *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  Swift::String v56;
  char *v57;
  id v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for Order.PickupFulfillment();
  v11 = a2 + v10[12];
  v12 = type metadata accessor for Order.FulfillmentWindow(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v68 = v11;
  v13(v11, 1, 1, v12);
  v14 = a2 + v10[13];
  v15 = sub_23361D634();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = objc_msgSend(a1, sel_lineItemObjects);
  type metadata accessor for ManagedOrderLineItem();
  sub_233167C58((unint64_t *)&qword_256043F28, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderLineItem, MEMORY[0x24BEE5BD8]);
  sub_23361E5DC();

  v18 = swift_bridgeObjectRetain();
  v19 = sub_2333AFD68(v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v72 = v19;
  sub_2333156B4((uint64_t *)&v72);
  v69 = v9;
  v70 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16;
  swift_bridgeObjectRelease();
  v20 = v72;
  v71 = v15;
  if ((v72 & 0x8000000000000000) != 0 || (v72 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v21 = sub_23361EF30();
    swift_release();
    if (v21)
      goto LABEL_4;
LABEL_15:
    swift_release();
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_16;
  }
  v21 = *(_QWORD *)(v72 + 16);
  if (!v21)
    goto LABEL_15;
LABEL_4:
  v80 = MEMORY[0x24BEE4AF8];
  sub_233273CC0(0, v21 & ~(v21 >> 63), 0);
  if (v21 < 0)
  {
    __break(1u);
    swift_release();
    __break(1u);
    return;
  }
  v66 = v14;
  v67 = v6;
  v22 = 0;
  v23 = v80;
  if ((v20 & 0xC000000000000001) == 0)
    goto LABEL_7;
LABEL_6:
  for (i = (id)MEMORY[0x234933120](v22, v20); ; i = *(id *)(v20 + 8 * v22 + 32))
  {
    Order.LineItem.init(_:)(i, &v72);
    v80 = v23;
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_233273CC0(v25 > 1, v26 + 1, 1);
      v23 = v80;
    }
    *(_QWORD *)(v23 + 16) = v26 + 1;
    v27 = (_OWORD *)(v23 + (v26 << 7));
    v28 = v72;
    v29 = v73;
    v30 = v75;
    v27[4] = v74;
    v27[5] = v30;
    v27[2] = v28;
    v27[3] = v29;
    v31 = v76;
    v32 = v77;
    v33 = v79;
    v27[8] = v78;
    v27[9] = v33;
    v27[6] = v31;
    v27[7] = v32;
    if (v21 - 1 == v22)
      break;
    ++v22;
    if ((v20 & 0xC000000000000001) != 0)
      goto LABEL_6;
LABEL_7:
    ;
  }
  swift_release();
  v6 = v67;
  v14 = v66;
LABEL_16:
  *(_QWORD *)a2 = v23;
  *(_BYTE *)(a2 + 8) = ManagedOrderPickupFulfillment.status.getter();
  v34 = objc_msgSend(a1, sel_statusDescription);
  if (v34)
  {
    v35 = v34;
    v36 = sub_23361D6B8();
    v37 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v36);
    countAndFlagsBits = v37._countAndFlagsBits;
    object = v37._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  *(_QWORD *)(a2 + 16) = countAndFlagsBits;
  *(_QWORD *)(a2 + 24) = object;
  *(_QWORD *)(a2 + 32) = objc_msgSend(a1, sel_address, v66, v67);
  v40 = objc_msgSend(a1, sel_barcode);
  if (v40)
  {
    v41 = v40;
    ManagedOrderBarcode.model.getter((uint64_t)&v72);

    v42 = v72;
    v43 = v73;
    v44 = *((_QWORD *)&v73 + 1);
    v46 = *((_QWORD *)&v74 + 1);
    v45 = v74;
    v47 = v75;
  }
  else
  {
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v42 = 0uLL;
  }
  *(_OWORD *)(a2 + 40) = v42;
  *(_QWORD *)(a2 + 56) = v43;
  *(_QWORD *)(a2 + 64) = v44;
  *(_QWORD *)(a2 + 72) = v45;
  *(_QWORD *)(a2 + 80) = v46;
  *(_QWORD *)(a2 + 88) = v47;
  v48 = objc_msgSend(a1, sel_notes);
  if (v48)
  {
    v49 = v48;
    v50 = sub_23361D6B8();
    v51 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v50);
    v52 = v51._countAndFlagsBits;
    v53 = v51._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  *(_QWORD *)(a2 + 96) = v52;
  *(_QWORD *)(a2 + 104) = v53;
  v54 = objc_msgSend(a1, sel_displayName);
  v55 = sub_23361D6B8();
  v56 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v55);

  swift_bridgeObjectRelease();
  *(Swift::String *)(a2 + 112) = v56;
  *(_QWORD *)(a2 + 128) = objc_msgSend(a1, sel_location);
  v57 = v69;
  ManagedOrderPickupFulfillment.pickupWindow.getter(v69);
  sub_233170B8C((uint64_t)v57, v68, &qword_256043808);
  v58 = objc_msgSend(a1, sel_pickedUpDate);
  if (v58)
  {
    v59 = v58;
    sub_23361D5EC();

    v60 = 0;
  }
  else
  {
    v60 = 1;
  }
  v70(v6, v60, 1, v71);
  sub_233170B8C((uint64_t)v6, v14, (uint64_t *)&unk_254247DA0);
  v61 = objc_msgSend(a1, sel_fulfillmentIdentifier);
  v62 = sub_23361E150();
  v64 = v63;

  v65 = (uint64_t *)(a2 + v10[14]);
  *v65 = v62;
  v65[1] = v64;
}

uint64_t Order.PickupFulfillment.lineItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Order.PickupFulfillment.lineItems.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Order.PickupFulfillment.lineItems.modify())()
{
  return nullsub_1;
}

void Order.PickupFulfillment.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *Order.PickupFulfillment.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*Order.PickupFulfillment.status.modify())()
{
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.PickupFulfillment.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Order.PickupFulfillment.statusDescription.modify())()
{
  return nullsub_1;
}

void *Order.PickupFulfillment.address.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void Order.PickupFulfillment.address.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*Order.PickupFulfillment.address.modify())()
{
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.barcode.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  v8 = v1[11];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_233364468(v2, v3, v4, v5, v6);
}

__n128 Order.PickupFulfillment.barcode.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  v5 = a1[1];
  v6 = *a1;
  v4 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_2333BD360(v1[5], v1[6], v1[7], v1[8], v1[9]);
  *(_OWORD *)(v1 + 5) = v6;
  *(_OWORD *)(v1 + 7) = v5;
  result = v4;
  *(__n128 *)(v1 + 9) = v4;
  v1[11] = v2;
  return result;
}

uint64_t (*Order.PickupFulfillment.barcode.modify())()
{
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.PickupFulfillment.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*Order.PickupFulfillment.notes.modify())()
{
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.PickupFulfillment.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*Order.PickupFulfillment.displayName.modify())()
{
  return nullsub_1;
}

void *Order.PickupFulfillment.location.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 128);
  v2 = v1;
  return v1;
}

void Order.PickupFulfillment.location.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
}

uint64_t (*Order.PickupFulfillment.location.modify())()
{
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.pickupWindow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 48), a1, &qword_256043808);
}

uint64_t Order.PickupFulfillment.pickupWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 48), &qword_256043808);
}

uint64_t (*Order.PickupFulfillment.pickupWindow.modify())(_QWORD)
{
  type metadata accessor for Order.PickupFulfillment();
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.pickedUpDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 52), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.PickupFulfillment.pickedUpDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PickupFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 52), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Order.PickupFulfillment.pickedUpDate.modify())(_QWORD)
{
  type metadata accessor for Order.PickupFulfillment();
  return nullsub_1;
}

uint64_t Order.PickupFulfillment.fulfillmentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Order.PickupFulfillment() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.PickupFulfillment.fulfillmentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Order.PickupFulfillment() + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Order.PickupFulfillment.fulfillmentIdentifier.modify())(_QWORD)
{
  type metadata accessor for Order.PickupFulfillment();
  return nullsub_1;
}

uint64_t sub_23342DC10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23342DC48 + 4 * byte_23364A1A0[a1]))(0x6D657449656E696CLL, 0xE900000000000073);
}

uint64_t sub_23342DC48()
{
  return 0x737574617473;
}

unint64_t sub_23342DC5C()
{
  return 0xD000000000000011;
}

uint64_t sub_23342DC78()
{
  return 0x73736572646461;
}

uint64_t sub_23342DC90()
{
  return 0x65646F63726162;
}

uint64_t sub_23342DCA8()
{
  return 0x7365746F6ELL;
}

uint64_t sub_23342DCBC()
{
  return 0x4E79616C70736964;
}

uint64_t sub_23342DCDC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_23342DCF4()
{
  return 0x705564656B636970;
}

unint64_t sub_23342DD14()
{
  return 0xD000000000000015;
}

uint64_t sub_23342DD34()
{
  return 0x695770756B636970;
}

uint64_t sub_23342DD58()
{
  unsigned __int8 *v0;

  return sub_23342DC10(*v0);
}

uint64_t sub_23342DD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233431A1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23342DD84(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_23342DD90()
{
  sub_23343031C();
  return sub_23361F428();
}

uint64_t sub_23342DDB8()
{
  sub_23343031C();
  return sub_23361F434();
}

void Order.PickupFulfillment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FA50);
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23343031C();
  sub_23361F410();
  v8 = *(void **)(v3 + 32);
  if (v8)
  {
    RawAddress.init(_:)(v8, &v36);
    v30 = v36;
    v31 = v37;
    v32 = v38;
    v33 = v39;
    v34 = v40;
    v25 = v41;
    v24 = v42;
    v35 = v43;
    v28 = v45;
    v29 = v44;
    v27 = v46;
    v9 = v48;
    v26 = v47;
  }
  else
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v25 = 0;
    v24 = 0;
    v35 = 0;
    v28 = 0;
    v29 = 0;
    v27 = 0;
    v26 = 0;
    v9 = 0;
    v30 = 1;
  }
  v10 = *(void **)(v3 + 128);
  v36 = *(_QWORD *)v3;
  v49 = 0;
  v11 = v10;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560492A0);
  sub_2332E93D4(&qword_2560492A8, (uint64_t (*)(void))sub_2332E934C, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  if (v2)
  {
    sub_233329310(v30);
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  }
  else
  {
    v22 = (uint64_t)v10;
    swift_bridgeObjectRelease();
    LOBYTE(v36) = *(_BYTE *)(v3 + 8);
    v49 = 1;
    sub_233430360();
    sub_23361F17C();
    LOBYTE(v36) = 2;
    sub_23361F0E0();
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
    v40 = v34;
    v41 = v25;
    v42 = v24;
    v43 = v35;
    v44 = v29;
    v45 = v28;
    v46 = v27;
    v47 = v26;
    v48 = v9;
    v49 = 3;
    sub_23320C808();
    sub_23361F110();
    sub_233329310(v30);
    v12 = v5;
    v13 = *(_QWORD *)(v3 + 40);
    v14 = *(_QWORD *)(v3 + 48);
    v15 = *(_QWORD *)(v3 + 56);
    v16 = *(_QWORD *)(v3 + 64);
    v17 = *(_QWORD *)(v3 + 72);
    v18 = *(_QWORD *)(v3 + 80);
    v19 = *(_QWORD *)(v3 + 88);
    v36 = v13;
    v37 = v14;
    v38 = v15;
    v39 = v16;
    v40 = v17;
    v41 = v18;
    v42 = v19;
    v49 = 4;
    v20 = v15;
    v33 = v18;
    v34 = v17;
    v32 = v19;
    sub_233364468(v13, v14, v15, v16, v17);
    sub_2333BE834();
    v35 = v12;
    sub_23361F110();
    sub_2333BD360(v13, v14, v20, v16, v34);
    LOBYTE(v36) = 5;
    v21 = v35;
    sub_23361F0E0();
    LOBYTE(v36) = 6;
    sub_23361F140();
    v36 = v22;
    v49 = 7;
    sub_2334303A4();
    sub_23361F110();
    type metadata accessor for Order.PickupFulfillment();
    LOBYTE(v36) = 8;
    type metadata accessor for Order.FulfillmentWindow(0);
    sub_233167C58(&qword_25604BF00, type metadata accessor for Order.FulfillmentWindow, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow);
    sub_23361F110();
    LOBYTE(v36) = 9;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    LOBYTE(v36) = 10;
    sub_23361F140();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v21);

  }
}

uint64_t Order.PickupFulfillment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;

  v69 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v70 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FA70);
  v7 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.PickupFulfillment();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v13 + 16) = 0;
  *((_OWORD *)v13 + 3) = 0u;
  *((_OWORD *)v13 + 4) = 0u;
  *((_OWORD *)v13 + 5) = 0u;
  *((_OWORD *)v13 + 6) = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  v15 = type metadata accessor for Order.FulfillmentWindow(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v76 = v14;
  v16(v14, 1, 1, v15);
  v17 = (uint64_t)&v13[*(int *)(v10 + 52)];
  v18 = sub_23361D634();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v75 = v17;
  v19(v17, 1, 1, v18);
  v20 = a1[3];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23343031C();
  v21 = v74;
  sub_23361F3EC();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
    swift_bridgeObjectRelease();

    sub_2333BD360(*((_QWORD *)v13 + 5), *((_QWORD *)v13 + 6), *((_QWORD *)v13 + 7), *((_QWORD *)v13 + 8), *((_QWORD *)v13 + 9));
    swift_bridgeObjectRelease();

    sub_233168608(v76, &qword_256043808);
    return sub_233168608(v75, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v74 = v15;
    v67 = v18;
    v66 = v10;
    v68 = v7;
    v87 = 3;
    sub_23320C7C4();
    v22 = v72;
    v23 = v9;
    sub_23361EFFC();
    v58 = *((_QWORD *)&v77 + 1);
    v61 = v77;
    v62 = *((_QWORD *)&v78 + 1);
    v65 = v78;
    v59 = *((_QWORD *)&v79 + 1);
    v63 = v79;
    v64 = v80;
    v24 = v82;
    v60 = v81;
    v26 = v83;
    v25 = v84;
    v27 = v85;
    v28 = v86;
    v87 = 7;
    sub_2334303E8();
    sub_23361EFFC();
    v53 = v28;
    v54 = v27;
    v55 = v25;
    v56 = v26;
    v57 = v24;
    v29 = (void *)v77;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560492A0);
    v87 = 0;
    sub_2332E93D4(&qword_2560492C8, (uint64_t (*)(void))sub_2332E943C, MEMORY[0x24BEE12D0]);
    sub_23361F068();
    v31 = v29;
    *(_QWORD *)v13 = v77;
    v87 = 1;
    sub_23343042C();
    sub_23361F068();
    v32 = v63;
    v33 = v62;
    v13[8] = v77;
    LOBYTE(v77) = 2;
    v34 = sub_23361EFCC();
    v36 = v64;
    v37 = v23;
    *((_QWORD *)v13 + 2) = v34;
    *((_QWORD *)v13 + 3) = v35;
    v38 = v61;
    if (v61 == 1)
    {
      v39 = 0;
    }
    else
    {
      sub_233168668(0, (unint64_t *)&qword_256045B60);
      *(_QWORD *)&v77 = v38;
      *((_QWORD *)&v77 + 1) = v58;
      *(_QWORD *)&v78 = v65;
      *((_QWORD *)&v78 + 1) = v33;
      *(_QWORD *)&v79 = v32;
      *((_QWORD *)&v79 + 1) = v59;
      v80 = v36;
      v81 = v60;
      v82 = v57;
      v83 = v56;
      v84 = v55;
      v85 = v54;
      v86 = v53;
      v39 = CNMutablePostalAddress.init(rawAddress:)((uint64_t *)&v77);
    }
    *((_QWORD *)v13 + 4) = v39;
    v87 = 4;
    sub_2333BEAFC();
    v40 = v37;
    sub_23361EFFC();
    v41 = v80;
    v42 = v78;
    *(_OWORD *)(v13 + 40) = v77;
    *(_OWORD *)(v13 + 56) = v42;
    *(_OWORD *)(v13 + 72) = v79;
    *((_QWORD *)v13 + 11) = v41;
    LOBYTE(v77) = 5;
    *((_QWORD *)v13 + 12) = sub_23361EFCC();
    *((_QWORD *)v13 + 13) = v43;
    LOBYTE(v77) = 6;
    *((_QWORD *)v13 + 14) = sub_23361F02C();
    *((_QWORD *)v13 + 15) = v44;
    *((_QWORD *)v13 + 16) = v31;
    LOBYTE(v77) = 8;
    sub_233167C58(&qword_25604BEE8, type metadata accessor for Order.FulfillmentWindow, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow);
    v45 = v31;
    v46 = (uint64_t)v71;
    sub_23361EFFC();
    sub_233170B8C(v46, v76, &qword_256043808);
    LOBYTE(v77) = 9;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v47 = v22;
    v48 = v40;
    sub_23361EFFC();
    sub_233170B8C(v70, v75, (uint64_t *)&unk_254247DA0);
    LOBYTE(v77) = 10;
    v49 = sub_23361F02C();
    v51 = v50;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v47);

    v52 = (uint64_t *)&v13[*(int *)(v66 + 56)];
    *v52 = v49;
    v52[1] = v51;
    sub_233430470((uint64_t)v13, v69);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
    return sub_233168500((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  }
}

uint64_t sub_23342EF28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.PickupFulfillment.init(from:)(a1, a2);
}

void sub_23342EF3C(_QWORD *a1)
{
  Order.PickupFulfillment.encode(to:)(a1);
}

uint64_t Order.PickupFulfillment.fulfillment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_233430470(v1, a1);
  type metadata accessor for Order.Fulfillment();
  return swift_storeEnumTagMultiPayload();
}

BOOL _s10FinanceKit5OrderV17PickupFulfillmentV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  char v59;
  char *v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  char v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  int *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t *v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  _QWORD v169[2];
  char v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD v175[7];

  v147 = type metadata accessor for Order.FulfillmentWindow(0);
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v143 = (uint64_t)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(qword_256043D08);
  MEMORY[0x24BDAC7A8](v145);
  v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_23361D634();
  v151 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v144 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v11);
  v148 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v149);
  v152 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Order.PickupFulfillment();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v160 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v157 = (char *)&v130 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v155 = (char *)&v130 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v156 = (char *)&v130 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v163 = (uint64_t)&v130 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v153 = (char *)&v130 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v167 = (uint64_t)&v130 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v154 = (uint64_t *)((char *)&v130 - v31);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (uint64_t *)((char *)&v130 - v33);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v159 = (char *)&v130 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v168 = (char *)&v130 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v166 = (uint64_t)&v130 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v158 = (uint64_t)&v130 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (uint64_t *)((char *)&v130 - v44);
  v46 = MEMORY[0x24BDAC7A8](v43);
  v48 = (uint64_t *)((char *)&v130 - v47);
  v49 = *(void **)(a1 + 128);
  v50 = *(void **)(a2 + 128);
  v51 = *(void **)(a1 + 32);
  v52 = *(void **)(a2 + 32);
  v164 = v49;
  v165 = v50;
  v162 = v53;
  v161 = v34;
  if (!v51)
  {
    if (!v52)
    {
      v139 = (int *)v46;
      v137 = v7;
      v138 = v9;
      v78 = v49;
      v79 = v50;
      sub_233430470(a1, (uint64_t)v48);
      sub_233430470(a2, (uint64_t)v45);
      v60 = v153;
      goto LABEL_21;
    }
    goto LABEL_6;
  }
  if (!v52)
  {
LABEL_6:
    v62 = v49;
    v63 = v50;
    sub_233430470(a1, (uint64_t)v48);
    sub_233430470(a2, (uint64_t)v45);
    v60 = v153;
    v61 = (uint64_t)v168;
    goto LABEL_7;
  }
  v139 = (int *)v46;
  v137 = v7;
  v138 = v9;
  v54 = v49;
  sub_233168668(0, &qword_254247E48);
  v55 = v54;
  v56 = v50;
  v57 = v52;
  v58 = v51;
  v59 = sub_23361EA14();

  sub_233430470(a1, (uint64_t)v48);
  sub_233430470(a2, (uint64_t)v45);
  v60 = v153;
  v61 = (uint64_t)v168;
  if ((v59 & 1) == 0)
  {
LABEL_7:
    sub_233168500((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v64 = v167;
    v65 = v154;
    v66 = (uint64_t)v159;
LABEL_8:
    v67 = v158;
    sub_233430470(a1, v158);
    v68 = v166;
    sub_233430470(a2, v166);
    goto LABEL_9;
  }
LABEL_21:
  v80 = v48[5];
  v81 = v48[6];
  v83 = v48[7];
  v82 = v48[8];
  v85 = v48[9];
  v84 = (char *)v48[10];
  v86 = v48[11];
  v88 = v45[5];
  v87 = v45[6];
  v89 = v45[7];
  v90 = v45[8];
  v92 = v45[9];
  v91 = v45[10];
  v93 = v45[11];
  v66 = (uint64_t)v159;
  v153 = v84;
  v142 = v82;
  v141 = v83;
  v140 = v80;
  if (v85)
  {
    v175[0] = v80;
    v175[1] = v81;
    v175[2] = v83;
    v175[3] = v82;
    v175[4] = v85;
    v175[5] = v84;
    v175[6] = v86;
    if (v92)
    {
      v169[0] = v88;
      v169[1] = v87;
      v170 = v89;
      v171 = v90;
      v172 = v92;
      v173 = v91;
      v174 = v93;
      LODWORD(v136) = _s10FinanceKit7BarcodeV2eeoiySbAC_ACtFZ_0((uint64_t)v175, (uint64_t)v169);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_233168500((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      sub_233168500((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2333BD360(v140, v81, v141, v142, v85);
      v67 = v158;
      sub_233430470(a1, v158);
      v68 = v166;
      sub_233430470(a2, v166);
      v64 = v167;
      v61 = (uint64_t)v168;
      v65 = v154;
      if ((v136 & 1) != 0)
        goto LABEL_27;
LABEL_9:
      sub_233168500(v67, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      sub_233168500(v68, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      sub_233430470(a1, v61);
      sub_233430470(a2, v66);
      v69 = (uint64_t)v160;
      goto LABEL_10;
    }
    v135 = v88;
    v133 = v87;
    v136 = v93;
    v134 = v91;
    v131 = v89;
    v132 = v90;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_233168500((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v135 = v88;
  v133 = v87;
  v131 = v89;
  v132 = v90;
  v134 = v91;
  v136 = v93;
  sub_233364468(v88, v87, v89, v90, v92);
  sub_233168500((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  sub_233168500((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  if (v92)
  {
LABEL_31:
    sub_2333BD360(v140, v81, v141, v142, v85);
    sub_2333BD360(v135, v133, v131, v132, v92);
    v64 = v167;
    v61 = (uint64_t)v168;
    v65 = v154;
    goto LABEL_8;
  }
  sub_2333BD360(v140, v81, v141, v142, 0);
  v67 = v158;
  sub_233430470(a1, v158);
  v68 = v166;
  sub_233430470(a2, v166);
  v65 = v154;
  v61 = (uint64_t)v168;
LABEL_27:
  if (*(_QWORD *)(v67 + 112) != *(_QWORD *)(v68 + 112) || *(_QWORD *)(v67 + 120) != *(_QWORD *)(v68 + 120))
  {
    v94 = sub_23361F224();
    sub_233168500(v67, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v64 = v167;
    sub_233168500(v166, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233430470(a1, v61);
    sub_233430470(a2, v66);
    v69 = (uint64_t)v160;
    if ((v94 & 1) != 0)
      goto LABEL_33;
LABEL_10:
    sub_233168500(v61, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v66, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v70 = v161;
    sub_233430470(a1, (uint64_t)v161);
    sub_233430470(a2, (uint64_t)v65);
    v71 = (uint64_t)v60;
    goto LABEL_11;
  }
  sub_233168500(v67, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  sub_233168500(v166, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  sub_233430470(a1, v61);
  sub_233430470(a2, v66);
  v69 = (uint64_t)v160;
LABEL_33:
  v95 = v139[14];
  v96 = *(_QWORD *)(v61 + v95);
  v97 = *(_QWORD *)(v61 + v95 + 8);
  v98 = (_QWORD *)(v66 + v95);
  v71 = (uint64_t)v60;
  if (v96 != *v98 || v97 != v98[1])
  {
    v99 = sub_23361F224();
    sub_233168500(v61, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v64 = v167;
    sub_233168500(v66, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v70 = v161;
    sub_233430470(a1, (uint64_t)v161);
    sub_233430470(a2, (uint64_t)v65);
    if ((v99 & 1) != 0)
      goto LABEL_37;
LABEL_11:
    sub_233168500((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v72 = (uint64_t)v157;
    v73 = (uint64_t)v156;
    v74 = (uint64_t)v155;
    goto LABEL_12;
  }
  sub_233168500(v61, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  sub_233168500(v66, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  v70 = v161;
  sub_233430470(a1, (uint64_t)v161);
  sub_233430470(a2, (uint64_t)v65);
LABEL_37:
  v100 = sub_23322B4CC(*v70, *v65);
  sub_233168500((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  v64 = v167;
  sub_233168500((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  v72 = (uint64_t)v157;
  v73 = (uint64_t)v156;
  v74 = (uint64_t)v155;
  if ((v100 & 1) == 0)
    goto LABEL_12;
  if (!v164)
  {
    if (!v165)
    {
      v103 = 0;
      sub_233430470(a1, v64);
      v75 = v162;
      sub_233430470(a2, v162);
      goto LABEL_44;
    }
    goto LABEL_12;
  }
  if (!v165)
  {
LABEL_12:
    sub_233430470(a1, v64);
    v75 = v162;
    sub_233430470(a2, v162);
LABEL_13:
    sub_233168500(v75, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v64, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v76 = v163;
LABEL_14:
    sub_233430470(a1, v71);
    sub_233430470(a2, v76);
    goto LABEL_15;
  }
  v101 = v164;
  v102 = v165;
  LODWORD(v168) = sub_2332EC0C4(v101, v102);

  v64 = v167;
  sub_233430470(a1, v167);
  v75 = v162;
  sub_233430470(a2, v162);
  if ((v168 & 1) == 0)
    goto LABEL_13;
LABEL_44:
  v104 = *(_QWORD *)(v64 + 104);
  v105 = v64;
  v106 = *(_QWORD *)(v75 + 104);
  v107 = v75;
  if (!v104)
  {
    v108 = v105;
    swift_bridgeObjectRetain();
    sub_233168500(v75, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v108, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v76 = v163;
    if (!v106)
      goto LABEL_50;
    goto LABEL_52;
  }
  v76 = v163;
  if (!v106)
  {
    v109 = v107;
    swift_bridgeObjectRetain();
    sub_233168500(v109, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v167, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
LABEL_52:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (*(_QWORD *)(v167 + 96) == *(_QWORD *)(v107 + 96) && v104 == v106)
  {
    swift_bridgeObjectRetain();
    sub_233168500(v162, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v167, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    swift_bridgeObjectRelease();
LABEL_50:
    sub_233430470(a1, v71);
    sub_233430470(a2, v76);
    goto LABEL_54;
  }
  v110 = sub_23361F224();
  swift_bridgeObjectRetain();
  sub_233168500(v162, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  v76 = v163;
  sub_233168500(v167, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  swift_bridgeObjectRelease();
  sub_233430470(a1, v71);
  sub_233430470(a2, v76);
  if ((v110 & 1) == 0)
  {
LABEL_15:
    sub_233168500(v76, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v71, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
LABEL_16:
    sub_233430470(a1, v73);
    sub_233430470(a2, v74);
LABEL_17:

    sub_233168500(v74, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v73, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
LABEL_18:
    sub_233430470(a1, v72);
    sub_233430470(a2, v69);
    goto LABEL_19;
  }
LABEL_54:
  v111 = v139[13];
  v168 = (char *)(v76 + v111);
  v112 = v152;
  v113 = v152 + *(int *)(v149 + 48);
  sub_2331686A0(v71 + v111, v152, (uint64_t *)&unk_254247DA0);
  v114 = (uint64_t)v168;
  v168 = (char *)v113;
  sub_2331686A0(v114, v113, (uint64_t *)&unk_254247DA0);
  v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
  v116 = v150;
  if (v115((char *)v112, 1, v150) == 1)
  {
    sub_233168500(v163, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v71, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    if (v115(v168, 1, v116) == 1)
    {
      sub_233168608(v152, (uint64_t *)&unk_254247DA0);
      sub_233430470(a1, v73);
      sub_233430470(a2, v74);
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  v117 = (uint64_t)v148;
  sub_2331686A0(v152, (uint64_t)v148, (uint64_t *)&unk_254247DA0);
  if (v115(v168, 1, v116) == 1)
  {
    sub_233168500(v163, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v71, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v117, v116);
LABEL_59:
    sub_233168608(v152, &qword_256042DA0);
    goto LABEL_16;
  }
  v118 = v144;
  (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v144, v168, v116);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  LODWORD(v168) = sub_23361E108();
  v119 = *(void (**)(char *, uint64_t))(v151 + 8);
  v119(v118, v116);
  sub_233168500(v163, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  sub_233168500(v71, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  v119(v148, v116);
  sub_233168608(v152, (uint64_t *)&unk_254247DA0);
  sub_233430470(a1, v73);
  sub_233430470(a2, v74);
  if ((v168 & 1) == 0)
    goto LABEL_17;
LABEL_61:
  v120 = v139[12];
  v121 = v74 + v120;
  v122 = (uint64_t)v138;
  v123 = (uint64_t)&v138[*(int *)(v145 + 48)];
  sub_2331686A0(v73 + v120, (uint64_t)v138, &qword_256043808);
  sub_2331686A0(v121, v123, &qword_256043808);
  v124 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  v125 = v147;
  if (v124(v122, 1, v147) != 1)
  {
    sub_2331686A0(v122, (uint64_t)v137, &qword_256043808);
    if (v124(v123, 1, v125) != 1)
    {
      v126 = v143;
      sub_233431EC8(v123, v143);
      v127 = (uint64_t)v137;
      LODWORD(v168) = _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0((uint64_t)v137, v126);

      sub_233168500(v126, type metadata accessor for Order.FulfillmentWindow);
      sub_233168500(v74, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      sub_233168500(v73, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      sub_233168500(v127, type metadata accessor for Order.FulfillmentWindow);
      sub_233168608(v122, &qword_256043808);
      sub_233430470(a1, v72);
      sub_233430470(a2, v69);
      if ((v168 & 1) != 0)
        goto LABEL_68;
LABEL_19:
      sub_233168500(v69, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      sub_233168500(v72, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      return 0;
    }
    v138 = (char *)v122;

    sub_233168500(v74, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500(v73, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_233168500((uint64_t)v137, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_66;
  }
  v138 = (char *)v122;

  sub_233168500(v74, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  sub_233168500(v73, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  if (v124(v123, 1, v125) != 1)
  {
LABEL_66:
    sub_233168608((uint64_t)v138, qword_256043D08);
    goto LABEL_18;
  }
  sub_233168608((uint64_t)v138, &qword_256043808);
  sub_233430470(a1, v72);
  sub_233430470(a2, v69);
LABEL_68:
  v128 = *(unsigned __int8 *)(v72 + 8);
  sub_233168500(v72, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  v129 = *(unsigned __int8 *)(v69 + 8);
  sub_233168500(v69, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
  return v128 == v129;
}

uint64_t type metadata accessor for Order.PickupFulfillment()
{
  uint64_t result;

  result = qword_25604FAD8;
  if (!qword_25604FAD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2334302D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_23343031C()
{
  unint64_t result;

  result = qword_25604FA58;
  if (!qword_25604FA58)
  {
    result = MEMORY[0x234934494](&unk_23364A3C4, &_s17PickupFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FA58);
  }
  return result;
}

unint64_t sub_233430360()
{
  unint64_t result;

  result = qword_25604FA60;
  if (!qword_25604FA60)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.PickupStatus, &type metadata for Order.PickupStatus);
    atomic_store(result, (unint64_t *)&qword_25604FA60);
  }
  return result;
}

unint64_t sub_2334303A4()
{
  unint64_t result;

  result = qword_25604FA68;
  if (!qword_25604FA68)
  {
    result = MEMORY[0x234934494](&unk_23363906C, &type metadata for Location);
    atomic_store(result, (unint64_t *)&qword_25604FA68);
  }
  return result;
}

unint64_t sub_2334303E8()
{
  unint64_t result;

  result = qword_2560566A0;
  if (!qword_2560566A0)
  {
    result = MEMORY[0x234934494](&unk_233639044, &type metadata for Location);
    atomic_store(result, (unint64_t *)&qword_2560566A0);
  }
  return result;
}

unint64_t sub_23343042C()
{
  unint64_t result;

  result = qword_25604FA78;
  if (!qword_25604FA78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.PickupStatus, &type metadata for Order.PickupStatus);
    atomic_store(result, (unint64_t *)&qword_25604FA78);
  }
  return result;
}

uint64_t sub_233430470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.PickupFulfillment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s17PickupFulfillmentVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = (void *)a2[4];
    *(_QWORD *)(a1 + 32) = v9;
    v10 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v9;
    if (v10)
    {
      v12 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v12;
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v10;
      v13 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 56) = v14;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
      *(_QWORD *)(a1 + 88) = a2[11];
    }
    v15 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v15;
    v16 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v16;
    v17 = (void *)a2[16];
    v43 = a3;
    v18 = *(int *)(a3 + 48);
    v19 = (char *)(a1 + v18);
    v20 = (char *)a2 + v18;
    *(_QWORD *)(a1 + 128) = v17;
    v21 = type metadata accessor for Order.FulfillmentWindow(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = v17;
    if (v23(v20, 1, v21))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v27 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v19, v20, v27);
      if (EnumCaseMultiPayload == 1)
      {
        v28 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v29 = &v19[v28];
        v30 = &v20[v28];
        v31 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v32 = *(int *)(v43 + 52);
    v33 = (void *)(a1 + v32);
    v34 = (char *)a2 + v32;
    v35 = sub_23361D634();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v38 = *(int *)(v43 + 56);
    v39 = (_QWORD *)(a1 + v38);
    v40 = (uint64_t *)((char *)a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s17PickupFulfillmentVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(a1 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = v4 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v9 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
  }
  v10 = a1 + *(int *)(a2 + 52);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t _s17PickupFulfillmentVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v7;
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  v14 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  v15 = *(void **)(a2 + 128);
  v42 = a3;
  v16 = *(int *)(a3 + 48);
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  *(_QWORD *)(a1 + 128) = v15;
  v19 = type metadata accessor for Order.FulfillmentWindow(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v15;
  if (v21(v18, 1, v19))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v24 = v42;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v26 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v17, v18, v26);
    v24 = v42;
    if (EnumCaseMultiPayload == 1)
    {
      v27 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v28 = &v17[v27];
      v29 = &v18[v27];
      v30 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v31 = *(int *)(v24 + 52);
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = sub_23361D634();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = *(int *)(v24 + 56);
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17PickupFulfillmentVwca(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  _OWORD *v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 32);
  v7 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = v7;

  v9 = (_OWORD *)(a1 + 40);
  v10 = (__int128 *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2333C12D8(a1 + 40);
      v13 = *(_OWORD *)(a2 + 56);
      v12 = *(_OWORD *)(a2 + 72);
      v14 = *v10;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 56) = v13;
      *(_OWORD *)(a1 + 72) = v12;
      *v9 = v14;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *v10;
    v16 = *(_OWORD *)(a2 + 56);
    v17 = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v16;
    *(_OWORD *)(a1 + 72) = v17;
    *v9 = v15;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(void **)(a1 + 128);
  v19 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v19;
  v20 = v19;

  v21 = a3[12];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = type metadata accessor for Order.FulfillmentWindow(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v30 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v22, v23, v30);
      if (EnumCaseMultiPayload == 1)
      {
        v31 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v32 = &v22[v31];
        v33 = &v23[v31];
        v34 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_20;
    }
LABEL_14:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_20;
  }
  if (v28)
  {
    sub_233168500((uint64_t)v22, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_14;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v22, type metadata accessor for Order.FulfillmentWindow);
    v36 = swift_getEnumCaseMultiPayload();
    v37 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v22, v23, v37);
    if (v36 == 1)
    {
      v38 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v39 = &v22[v38];
      v40 = &v23[v38];
      v41 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_20:
  v42 = a3[13];
  v43 = (void *)(a1 + v42);
  v44 = (void *)(a2 + v42);
  v45 = sub_23361D634();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v43, v44, v45);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_25;
  }
  if (v49)
  {
LABEL_25:
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v43, v44, v45);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_26:
  v51 = a3[14];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17PickupFulfillmentVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v8 = a3[12];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  v11 = type metadata accessor for Order.FulfillmentWindow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[13];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_23361D634();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t _s17PickupFulfillmentVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  if (*(_QWORD *)(a1 + 72))
  {
    v8 = *(_QWORD *)(a2 + 72);
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v9;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2333C12D8(a1 + 40);
  }
  v11 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v11;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
LABEL_6:
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  v14 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  v15 = a3[12];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for Order.FulfillmentWindow(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v24 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v16, v17, v24);
      if (EnumCaseMultiPayload == 1)
      {
        v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v26 = &v16[v25];
        v27 = &v17[v25];
        v28 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_18;
    }
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  if (v22)
  {
    sub_233168500((uint64_t)v16, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_12;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v16, type metadata accessor for Order.FulfillmentWindow);
    v30 = swift_getEnumCaseMultiPayload();
    v31 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v16, v17, v31);
    if (v30 == 1)
    {
      v32 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v33 = &v16[v32];
      v34 = &v17[v32];
      v35 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_18:
  v36 = a3[13];
  v37 = (void *)(a1 + v36);
  v38 = (void *)(a2 + v36);
  v39 = sub_23361D634();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v37, v38, v39);
      goto LABEL_24;
    }
    (*(void (**)(void *, uint64_t))(v40 + 8))(v37, v39);
    goto LABEL_23;
  }
  if (v43)
  {
LABEL_23:
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v37, v38, v39);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_24:
  v45 = a3[14];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17PickupFulfillmentVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233431638(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 52);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t _s17PickupFulfillmentVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2334316EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 52);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_233431790()
{
  unint64_t v0;
  unint64_t v1;

  sub_233176020(319, qword_256043C20, (void (*)(uint64_t))type metadata accessor for Order.FulfillmentWindow);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s17PickupFulfillmentV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2334318C4 + 4 * byte_23364A1B0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2334318F8 + 4 * byte_23364A1AB[v4]))();
}

uint64_t sub_2334318F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233431900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233431908);
  return result;
}

uint64_t sub_233431914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23343191CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_233431920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233431928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17PickupFulfillmentV10CodingKeysOMa()
{
  return &_s17PickupFulfillmentV10CodingKeysON;
}

unint64_t sub_233431948()
{
  unint64_t result;

  result = qword_25604FB38;
  if (!qword_25604FB38)
  {
    result = MEMORY[0x234934494](&unk_23364A39C, &_s17PickupFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FB38);
  }
  return result;
}

unint64_t sub_233431990()
{
  unint64_t result;

  result = qword_25604FB40;
  if (!qword_25604FB40)
  {
    result = MEMORY[0x234934494](&unk_23364A30C, &_s17PickupFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FB40);
  }
  return result;
}

unint64_t sub_2334319D8()
{
  unint64_t result;

  result = qword_25604FB48;
  if (!qword_25604FB48)
  {
    result = MEMORY[0x234934494](&unk_23364A334, &_s17PickupFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FB48);
  }
  return result;
}

uint64_t sub_233431A1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D657449656E696CLL && a2 == 0xE900000000000073;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233669A10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65646F63726162 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x695770756B636970 && a2 == 0xEC000000776F646ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x705564656B636970 && a2 == 0xEC00000065746144 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233673680)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_233431EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.FulfillmentWindow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static CoreDataProvider.getBackgroundProvider()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = v0;
  if (qword_254246A38 != -1)
    swift_once();
  v2 = (uint64_t *)(qword_254246B20 + 16);
  v3 = (os_unfair_lock_s *)(qword_254246B20 + 24);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_233432294(v2, &v5);
  os_unfair_lock_unlock(v3);
  if (!v0)
    v1 = v5;
  swift_release();
  return v1;
}

uint64_t static CoreDataProvider.shared.getter()
{
  return sub_2334321E8(&qword_254247048);
}

uint64_t CoreDataProvider.store.getter()
{
  return swift_retain();
}

id CoreDataProviding.viewContext.getter(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;

  v2 = *(id *)((*(uint64_t (**)(void))(a2 + 8))() + 16);
  swift_release();
  v3 = objc_msgSend(v2, sel_viewContext);

  return v3;
}

uint64_t sub_233432040()
{
  void *v0;
  uint64_t result;

  type metadata accessor for CoreDataProvider();
  v0 = (void *)swift_allocObject();
  result = CoreDataProvider.init(shared:)(1);
  off_254247040 = v0;
  return result;
}

uint64_t CoreDataProvider.__allocating_init(shared:)(int a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CoreDataProvider.init(shared:)(a1);
  return v2;
}

uint64_t sub_233432100()
{
  uint64_t *v0;
  os_unfair_lock_s *v1;
  void *v2;
  uint64_t result;
  void *v4;

  if (qword_254246A38 != -1)
    swift_once();
  v0 = (uint64_t *)(qword_254246B20 + 16);
  v1 = (os_unfair_lock_s *)(qword_254246B20 + 24);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_233432294(v0, (uint64_t *)&v4);
  os_unfair_lock_unlock(v1);
  v2 = v4;
  result = swift_release();
  off_254245078 = v2;
  return result;
}

uint64_t static CoreDataProvider.background.getter()
{
  return sub_2334321E8(&qword_254245080);
}

uint64_t sub_2334321E8(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t CoreDataProvider.__allocating_init(store:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t CoreDataProvider.init(store:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_23343225C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254246A40);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  qword_254246B20 = result;
  return result;
}

uint64_t sub_233432294@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;

  v4 = *a1;
  if (*a1)
    goto LABEL_2;
  type metadata accessor for CoreDataProvider();
  v4 = swift_allocObject();
  CoreDataProvider.init(shared:)(0);
  if (!v2)
  {
    *a1 = v4;
LABEL_2:
    *a2 = v4;
    return swift_retain();
  }
  if (qword_2542483B0 != -1)
    swift_once();
  v7 = sub_23361DB80();
  __swift_project_value_buffer(v7, (uint64_t)qword_254248210);
  v8 = v2;
  v9 = v2;
  v10 = sub_23361DB68();
  v11 = sub_23361E774();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = v2;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_23361EBC4();
    *v13 = v15;

    _os_log_impl(&dword_233151000, v10, v11, "Could not create background CoreDataProvider: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v13, -1, -1);
    MEMORY[0x234934590](v12, -1, -1);
  }
  else
  {

  }
  return swift_willThrow();
}

uint64_t CoreDataProvider.init(shared:)(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t result;
  _QWORD v31[3];
  int v32;
  uint64_t v33;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for CoreDataStoreConfiguration(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v31 - v9;
  v11 = type metadata accessor for CoreDataStoreClientConfiguration(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  if ((a1 & 1) != 0)
  {
    v31[2] = v4;
    v14 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v15 = objc_msgSend(v14, sel_bundleIdentifier);
    if (v15)
    {
      v16 = v15;
      v31[1] = v5;
      v17 = sub_23361E150();
      v19 = v18;

      if (v17 == 0xD000000000000012 && v19 == 0x800000023366C720)
      {
        swift_bridgeObjectRelease();
LABEL_15:
        result = sub_23361EF24();
        __break(1u);
        return result;
      }
      v20 = sub_23361F224();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_15;
    }
    else
    {

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542482B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D50;
  *(_QWORD *)(inited + 32) = sub_23361E150();
  *(_QWORD *)(inited + 40) = v22;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 80) = sub_23361E150();
  *(_QWORD *)(inited + 88) = v23;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 96) = 0xD000000000000028;
  *(_QWORD *)(inited + 104) = 0x8000000233669E70;
  v24 = sub_23315F6D0(inited);
  if (qword_2542484A0 != -1)
    swift_once();
  v25 = sub_23361D340();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_2542481F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v13, v26, v25);
  v27 = *(int *)(v11 + 20);
  *(_QWORD *)&v13[*(int *)(v11 + 24)] = v24;
  v13[v27] = v32 & 1;
  sub_2331684BC((uint64_t)v13, (uint64_t)v10, type metadata accessor for CoreDataStoreClientConfiguration);
  swift_storeEnumTagMultiPayload();
  sub_2331684BC((uint64_t)v10, (uint64_t)v8, type metadata accessor for CoreDataStoreConfiguration);
  type metadata accessor for CoreDataStore();
  swift_allocObject();
  v28 = v33;
  v29 = CoreDataStore.init(configuration:)((uint64_t)v8);
  sub_233168500((uint64_t)v10, type metadata accessor for CoreDataStoreConfiguration);
  sub_233168500((uint64_t)v13, type metadata accessor for CoreDataStoreClientConfiguration);
  if (v28)
    swift_deallocPartialClassInstance();
  else
    v2[2] = v29;
  return (uint64_t)v2;
}

uint64_t CoreDataProvider.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CoreDataProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_233432888()
{
  return swift_retain();
}

id sub_233432894()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 16), sel_viewContext);
}

uint64_t dispatch thunk of CoreDataProviding.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoreDataProviding.viewContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for CoreDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreDataProvider.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CoreDataProvider.__allocating_init(shared:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

_BYTE *Order.PickupStatus.init(_:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t Order.PickupStatus.init(_:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL static Order.PickupStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Order.PickupStatus.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_23343296C()
{
  sub_2334330F0();
  return sub_23361F428();
}

uint64_t sub_233432994()
{
  sub_2334330F0();
  return sub_23361F434();
}

uint64_t sub_2334329BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2334329E4 + 4 * byte_23364A490[*v0]))(1852141679, 0xE400000000000000);
}

uint64_t sub_2334329E4()
{
  return 0x69737365636F7270;
}

uint64_t sub_233432A00()
{
  return 0x726F467964616572;
}

uint64_t sub_233432A24()
{
  return 0x705564656B636970;
}

uint64_t sub_233432A3C()
{
  return 0x6575737369;
}

uint64_t sub_233432A50()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_233432A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233433E60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233432A90()
{
  sub_2334330AC();
  return sub_23361F428();
}

uint64_t sub_233432AB8()
{
  sub_2334330AC();
  return sub_23361F434();
}

uint64_t sub_233432AE0()
{
  sub_233433134();
  return sub_23361F428();
}

uint64_t sub_233432B08()
{
  sub_233433134();
  return sub_23361F434();
}

uint64_t sub_233432B30()
{
  sub_233433244();
  return sub_23361F428();
}

uint64_t sub_233432B58()
{
  sub_233433244();
  return sub_23361F434();
}

uint64_t sub_233432B80()
{
  sub_233433178();
  return sub_23361F428();
}

uint64_t sub_233432BA8()
{
  sub_233433178();
  return sub_23361F434();
}

uint64_t sub_233432BD0()
{
  sub_233433200();
  return sub_23361F428();
}

uint64_t sub_233432BF8()
{
  sub_233433200();
  return sub_23361F434();
}

uint64_t sub_233432C20()
{
  sub_2334331BC();
  return sub_23361F428();
}

uint64_t sub_233432C48()
{
  sub_2334331BC();
  return sub_23361F434();
}

uint64_t Order.PickupStatus.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

void Order.PickupStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[17];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB50);
  v15[13] = *(_QWORD *)(v3 - 8);
  v15[14] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v15[12] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB58);
  v15[10] = *(_QWORD *)(v5 - 8);
  v15[11] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v15[9] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB60);
  v15[7] = *(_QWORD *)(v7 - 8);
  v15[8] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v15[6] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB68);
  v15[4] = *(_QWORD *)(v9 - 8);
  v15[5] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v15[3] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB70);
  v15[1] = *(_QWORD *)(v11 - 8);
  v15[2] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB78);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FB80);
  v15[15] = *(_QWORD *)(v13 - 8);
  v15[16] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334330AC();
  sub_23361F410();
  __asm { BR              X9 }
}

uint64_t sub_233432EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 70) = 0;
  sub_233433244();
  v5 = *(_QWORD *)(v4 - 96);
  sub_23361F0C8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

unint64_t sub_2334330AC()
{
  unint64_t result;

  result = qword_25604FB88;
  if (!qword_25604FB88)
  {
    result = MEMORY[0x234934494](&unk_23364AAAC, &_s12PickupStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FB88);
  }
  return result;
}

unint64_t sub_2334330F0()
{
  unint64_t result;

  result = qword_25604FB90;
  if (!qword_25604FB90)
  {
    result = MEMORY[0x234934494](&unk_23364AA5C, &_s12PickupStatusO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FB90);
  }
  return result;
}

unint64_t sub_233433134()
{
  unint64_t result;

  result = qword_25604FB98;
  if (!qword_25604FB98)
  {
    result = MEMORY[0x234934494](&unk_23364AA0C, &_s12PickupStatusO15IssueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FB98);
  }
  return result;
}

unint64_t sub_233433178()
{
  unint64_t result;

  result = qword_25604FBA0;
  if (!qword_25604FBA0)
  {
    result = MEMORY[0x234934494](&unk_23364A9BC, &_s12PickupStatusO18PickedUpCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FBA0);
  }
  return result;
}

unint64_t sub_2334331BC()
{
  unint64_t result;

  result = qword_25604FBA8;
  if (!qword_25604FBA8)
  {
    result = MEMORY[0x234934494](&unk_23364A96C, &_s12PickupStatusO24ReadyForPickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FBA8);
  }
  return result;
}

unint64_t sub_233433200()
{
  unint64_t result;

  result = qword_25604FBB0;
  if (!qword_25604FBB0)
  {
    result = MEMORY[0x234934494](&unk_23364A91C, &_s12PickupStatusO20ProcessingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FBB0);
  }
  return result;
}

unint64_t sub_233433244()
{
  unint64_t result;

  result = qword_25604FBB8;
  if (!qword_25604FBB8)
  {
    result = MEMORY[0x234934494](&unk_23364A8CC, &_s12PickupStatusO14OpenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FBB8);
  }
  return result;
}

uint64_t Order.PickupStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[4];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBC0);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBC8);
  v37 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBD0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBD8);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBE0);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBE8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FBF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2334330AC();
  v21 = v48;
  sub_23361F3EC();
  if (!v21)
  {
    v29[3] = v15;
    v29[1] = v13;
    v29[2] = v12;
    v30 = v17;
    v48 = v16;
    v22 = v19;
    v23 = sub_23361F098();
    if (*(_QWORD *)(v23 + 16) == 1)
    {
      v29[0] = v23;
      __asm { BR              X9 }
    }
    v24 = sub_23361EE10();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v26 = &type metadata for Order.PickupStatus;
    v27 = v48;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v27);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
}

void sub_233433670()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v0;
  *(_BYTE *)(v5 - 69) = 1;
  sub_233433200();
  v7 = *(_QWORD *)(v5 - 160);
  v8 = *(_QWORD *)(v5 - 96);
  sub_23361EFA8();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v7, *(_QWORD *)(v5 - 208));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v8);
    *v3 = v6;
    JUMPOUT(0x233433648);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x233433640);
}

uint64_t sub_2334338C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.PickupStatus.init(from:)(a1, a2);
}

void sub_2334338D4(_QWORD *a1)
{
  Order.PickupStatus.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Order.PickupStatus()
{
  return &type metadata for Order.PickupStatus;
}

uint64_t _s12PickupStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233433948 + 4 * byte_23364A4A7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23343397C + 4 * byte_23364A4A2[v4]))();
}

uint64_t sub_23343397C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233433984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23343398CLL);
  return result;
}

uint64_t sub_233433998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334339A0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2334339A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334339AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12PickupStatusO10CodingKeysOMa()
{
  return &_s12PickupStatusO10CodingKeysON;
}

ValueMetadata *_s12PickupStatusO14OpenCodingKeysOMa()
{
  return &_s12PickupStatusO14OpenCodingKeysON;
}

ValueMetadata *_s12PickupStatusO20ProcessingCodingKeysOMa()
{
  return &_s12PickupStatusO20ProcessingCodingKeysON;
}

ValueMetadata *_s12PickupStatusO24ReadyForPickupCodingKeysOMa()
{
  return &_s12PickupStatusO24ReadyForPickupCodingKeysON;
}

ValueMetadata *_s12PickupStatusO18PickedUpCodingKeysOMa()
{
  return &_s12PickupStatusO18PickedUpCodingKeysON;
}

ValueMetadata *_s12PickupStatusO15IssueCodingKeysOMa()
{
  return &_s12PickupStatusO15IssueCodingKeysON;
}

ValueMetadata *_s12PickupStatusO19CancelledCodingKeysOMa()
{
  return &_s12PickupStatusO19CancelledCodingKeysON;
}

unint64_t sub_233433A2C()
{
  unint64_t result;

  result = qword_25604FBF8;
  if (!qword_25604FBF8)
  {
    result = MEMORY[0x234934494](&unk_23364A8A4, &_s12PickupStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FBF8);
  }
  return result;
}

unint64_t sub_233433A74()
{
  unint64_t result;

  result = qword_25604FC00;
  if (!qword_25604FC00)
  {
    result = MEMORY[0x234934494](&unk_23364A7C4, &_s12PickupStatusO14OpenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC00);
  }
  return result;
}

unint64_t sub_233433ABC()
{
  unint64_t result;

  result = qword_25604FC08;
  if (!qword_25604FC08)
  {
    result = MEMORY[0x234934494](&unk_23364A7EC, &_s12PickupStatusO14OpenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC08);
  }
  return result;
}

unint64_t sub_233433B04()
{
  unint64_t result;

  result = qword_25604FC10;
  if (!qword_25604FC10)
  {
    result = MEMORY[0x234934494](&unk_23364A774, &_s12PickupStatusO20ProcessingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC10);
  }
  return result;
}

unint64_t sub_233433B4C()
{
  unint64_t result;

  result = qword_25604FC18;
  if (!qword_25604FC18)
  {
    result = MEMORY[0x234934494](&unk_23364A79C, &_s12PickupStatusO20ProcessingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC18);
  }
  return result;
}

unint64_t sub_233433B94()
{
  unint64_t result;

  result = qword_25604FC20;
  if (!qword_25604FC20)
  {
    result = MEMORY[0x234934494](&unk_23364A724, &_s12PickupStatusO24ReadyForPickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC20);
  }
  return result;
}

unint64_t sub_233433BDC()
{
  unint64_t result;

  result = qword_25604FC28;
  if (!qword_25604FC28)
  {
    result = MEMORY[0x234934494](&unk_23364A74C, &_s12PickupStatusO24ReadyForPickupCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC28);
  }
  return result;
}

unint64_t sub_233433C24()
{
  unint64_t result;

  result = qword_25604FC30;
  if (!qword_25604FC30)
  {
    result = MEMORY[0x234934494](&unk_23364A6D4, &_s12PickupStatusO18PickedUpCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC30);
  }
  return result;
}

unint64_t sub_233433C6C()
{
  unint64_t result;

  result = qword_25604FC38;
  if (!qword_25604FC38)
  {
    result = MEMORY[0x234934494](&unk_23364A6FC, &_s12PickupStatusO18PickedUpCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC38);
  }
  return result;
}

unint64_t sub_233433CB4()
{
  unint64_t result;

  result = qword_25604FC40;
  if (!qword_25604FC40)
  {
    result = MEMORY[0x234934494](&unk_23364A684, &_s12PickupStatusO15IssueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC40);
  }
  return result;
}

unint64_t sub_233433CFC()
{
  unint64_t result;

  result = qword_25604FC48;
  if (!qword_25604FC48)
  {
    result = MEMORY[0x234934494](&unk_23364A6AC, &_s12PickupStatusO15IssueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC48);
  }
  return result;
}

unint64_t sub_233433D44()
{
  unint64_t result;

  result = qword_25604FC50;
  if (!qword_25604FC50)
  {
    result = MEMORY[0x234934494](&unk_23364A634, &_s12PickupStatusO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC50);
  }
  return result;
}

unint64_t sub_233433D8C()
{
  unint64_t result;

  result = qword_25604FC58;
  if (!qword_25604FC58)
  {
    result = MEMORY[0x234934494](&unk_23364A65C, &_s12PickupStatusO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC58);
  }
  return result;
}

unint64_t sub_233433DD4()
{
  unint64_t result;

  result = qword_25604FC60;
  if (!qword_25604FC60)
  {
    result = MEMORY[0x234934494](&unk_23364A814, &_s12PickupStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC60);
  }
  return result;
}

unint64_t sub_233433E1C()
{
  unint64_t result;

  result = qword_25604FC68;
  if (!qword_25604FC68)
  {
    result = MEMORY[0x234934494](&unk_23364A83C, &_s12PickupStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25604FC68);
  }
  return result;
}

uint64_t sub_233433E60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852141679 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69737365636F7270 && a2 == 0xEA0000000000676ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F467964616572 && a2 == 0xEE0070756B636950 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x705564656B636970 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6575737369 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t BankConnectWebServiceNotificationEventsRequest.init(consent:fromDateTime:subscriptionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  sub_233193A5C(a1, a5);
  v9 = type metadata accessor for BankConnectWebServiceNotificationEventsRequest(0);
  v10 = a5 + *(int *)(v9 + 20);
  v11 = sub_23361D634();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  v13 = (_QWORD *)(a5 + *(int *)(v9 + 24));
  *v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t type metadata accessor for BankConnectWebServiceNotificationEventsRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_25604FD90);
}

void *BankConnectWebServiceNotificationEventsRequest.pathComponents.getter()
{
  return &unk_250467D78;
}

uint64_t BankConnectWebServiceNotificationEventsRequest.jsonBody.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = type metadata accessor for BankConnectWebServiceNotificationEventsRequest(0);
  v4 = v1 + *(int *)(v3 + 20);
  v5 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
  v6 = (uint64_t *)(v1 + *(int *)(v3 + 24));
  v8 = *v6;
  v7 = v6[1];
  v9 = (_QWORD *)(a1 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0) + 20));
  *v9 = v8;
  v9[1] = v7;
  return swift_bridgeObjectRetain();
}

void BankConnectWebServiceNotificationEventsRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t BankConnectWebServiceNotificationEventsRequest.makeJSONEncoder()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23361CAC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  v4 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_23361CADC();
  return v4;
}

_QWORD *BankConnectWebServiceNotificationEventsRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_2331AC150();
}

uint64_t sub_233434314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5 = v2 + *(int *)(a1 + 20);
  v6 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
  v7 = (uint64_t *)(v2 + *(int *)(a1 + 24));
  v9 = *v7;
  v8 = v7[1];
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0) + 20));
  *v10 = v9;
  v10[1] = v8;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_233434388()
{
  return BankConnectWebServiceNotificationEventsRequest.makeAdditionalHTTPHeaderFields()();
}

uint64_t _s10FinanceKit35BankConnectWebServiceAccountRequestV15makeJSONEncoder10Foundation0J0CyF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23361CAC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  v4 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_23361CADC();
  return v4;
}

void *sub_233434470()
{
  return &unk_250467D78;
}

void static RawBankConnectData.NotificationEventsResponse.parse(data:urlResponse:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = sub_23361CA40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = (void *)v9;
    v22 = v3;
    v11 = a3;
    v12 = objc_msgSend(v10, sel_statusCode);
    if (v12 == (id)200)
    {
      sub_23361CA70();
      swift_allocObject();
      sub_23361CA64();
      if (qword_256041BF0 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v5, (uint64_t)qword_2560458E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
      sub_23361CA4C();
      sub_233434774();
      v14 = v22;
      sub_23361CA58();
      if (v14)
      {
        swift_release();
        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        *v15 = v14;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      v19 = v12;
      type metadata accessor for FinanceNetworkError();
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      swift_allocError();
      *v20 = v19;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v17 = v16;
    *v16 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v17[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v17[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v18 = a3;
    swift_willThrow();
  }
}

unint64_t sub_233434774()
{
  unint64_t result;

  result = qword_25604FC70;
  if (!qword_25604FC70)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.NotificationEventsResponse, &type metadata for RawBankConnectData.NotificationEventsResponse);
    atomic_store(result, (unint64_t *)&qword_25604FC70);
  }
  return result;
}

uint64_t BankConnectWebServiceRegisterToNotificationEventsRequest.init(consent:eventTypes:subscriptionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  _QWORD *v10;

  sub_233193A5C(a1, a5);
  result = type metadata accessor for BankConnectWebServiceRegisterToNotificationEventsRequest(0);
  *(_QWORD *)(a5 + *(int *)(result + 24)) = a2;
  v10 = (_QWORD *)(a5 + *(int *)(result + 20));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for BankConnectWebServiceRegisterToNotificationEventsRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_25604FE28);
}

void *BankConnectWebServiceRegisterToNotificationEventsRequest.pathComponents.getter()
{
  return &unk_250467F28;
}

uint64_t BankConnectWebServiceRegisterToNotificationEventsRequest.jsonBody.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = type metadata accessor for BankConnectWebServiceRegisterToNotificationEventsRequest(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  v5 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  v7 = *v5;
  v6 = v5[1];
  *a1 = v4;
  a1[1] = v7;
  a1[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *BankConnectWebServiceRegisterToNotificationEventsRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_2331AC150();
}

uint64_t sub_23343488C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + *(int *)(a1 + 24));
  v4 = (uint64_t *)(v2 + *(int *)(a1 + 20));
  v6 = *v4;
  v5 = v4[1];
  *a2 = v3;
  a2[1] = v6;
  a2[2] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_2334348C4()
{
  return &unk_250467F28;
}

void static RawBankConnectData.RegisterToNotificationEventsResponse.parse(data:urlResponse:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = sub_23361CA40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = (void *)v9;
    v22 = v3;
    v11 = a3;
    v12 = objc_msgSend(v10, sel_statusCode);
    if (v12 == (id)200)
    {
      sub_23361CA70();
      swift_allocObject();
      sub_23361CA64();
      if (qword_256041BF0 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v5, (uint64_t)qword_2560458E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
      sub_23361CA4C();
      sub_233434BC8();
      v14 = v22;
      sub_23361CA58();
      if (v14)
      {
        swift_release();
        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        *v15 = v14;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      v19 = v12;
      type metadata accessor for FinanceNetworkError();
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      swift_allocError();
      *v20 = v19;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v17 = v16;
    *v16 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v17[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v17[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v18 = a3;
    swift_willThrow();
  }
}

unint64_t sub_233434BC8()
{
  unint64_t result;

  result = qword_25604FC78;
  if (!qword_25604FC78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.RegisterToNotificationEventsResponse, &type metadata for RawBankConnectData.RegisterToNotificationEventsResponse);
    atomic_store(result, (unint64_t *)&qword_25604FC78);
  }
  return result;
}

FinanceKit::BankConnectWebServiceUnregisterFromNotificationEventsRequest __swiftcall BankConnectWebServiceUnregisterFromNotificationEventsRequest.init(subscriptionID:)(FinanceKit::BankConnectWebServiceUnregisterFromNotificationEventsRequest subscriptionID)
{
  FinanceKit::BankConnectWebServiceUnregisterFromNotificationEventsRequest *v1;

  *v1 = subscriptionID;
  return subscriptionID;
}

void *BankConnectWebServiceUnregisterFromNotificationEventsRequest.pathComponents.getter()
{
  return &unk_250467F78;
}

uint64_t BankConnectWebServiceUnregisterFromNotificationEventsRequest.jsonBody.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void BankConnectWebServiceUnregisterFromNotificationEventsRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void *sub_233434C38()
{
  return &unk_250467F78;
}

void static BankConnectWebServiceUnregisterFromNotificationEventsResponse.parse(urlResponse:)(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  id v10;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)200)
    {
      v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      swift_allocError();
      *v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }

  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v9 = v8;
    *v8 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v9[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
    swift_willThrow();
  }
}

uint64_t sub_233434DB0()
{
  return sub_233167C58(&qword_25604FC80, type metadata accessor for RawBankConnectData.NotificationEventsRequestBody, (uint64_t)&protocol conformance descriptor for RawBankConnectData.NotificationEventsRequestBody);
}

unint64_t sub_233434DE0()
{
  unint64_t result;

  result = qword_256051260;
  if (!qword_256051260)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.RegisterToNotificationEventsRequestBody, &type metadata for RawBankConnectData.RegisterToNotificationEventsRequestBody);
    atomic_store(result, (unint64_t *)&qword_256051260);
  }
  return result;
}

unint64_t sub_233434E28()
{
  unint64_t result;

  result = qword_25604FCF8;
  if (!qword_25604FCF8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.UnregisterFromNotificationEventsRequestBody, &type metadata for RawBankConnectData.UnregisterFromNotificationEventsRequestBody);
    atomic_store(result, (unint64_t *)&qword_25604FCF8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for BankConnectWebServiceNotificationEventsRequest(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for BankConnectConsent();
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23361D634();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    swift_bridgeObjectRetain();
    v18(v14, v15, v16);
    v18(&a1[v8[7]], &a2[v8[7]], v16);
    v19 = v8[8];
    v20 = &a1[v19];
    v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v19], 1, v16))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
    v24 = v8[10];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    a1[v8[11]] = a2[v8[11]];
    v28 = v8[12];
    v29 = &a1[v28];
    v30 = &a2[v28];
    swift_bridgeObjectRetain();
    v18(v29, v30, v16);
    v18(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v16);
    v31 = *(int *)(a3 + 24);
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BankConnectWebServiceNotificationEventsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for BankConnectConsent();
  swift_bridgeObjectRelease();
  v6 = a1 + v5[6];
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(a1 + v5[7], v7);
  v10 = a1 + v5[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  v9(a1 + v5[12], v7);
  v9(a1 + *(int *)(a2 + 20), v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BankConnectWebServiceNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v7[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  v17(v13, v14, v15);
  v17((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v15);
  v18 = v7[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a2 + v18, 1, v15))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v17(v19, v20, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v22 = v7[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v26 = v7[12];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  swift_bridgeObjectRetain();
  v17(v27, v28, v15);
  v17((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), v15);
  v29 = *(int *)(a3 + 24);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BankConnectWebServiceNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v6[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v15((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v13);
  v16 = v6[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19((const void *)(a1 + v16), 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v23 = v6[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v15((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v13);
  v15((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), v13);
  v26 = *(int *)(a3 + 24);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for BankConnectWebServiceNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v13((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v14 = v7[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v13((void *)(a1 + v7[12]), (const void *)(a2 + v7[12]), v11);
  v13((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), v11);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for BankConnectWebServiceNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(const void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = v6[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v17((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v15);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21((const void *)(a1 + v18), 1, v15);
  v23 = v21(v20, 1, v15);
  if (!v22)
  {
    if (!v23)
    {
      v17(v19, v20, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v19, v20, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v25 = v6[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v17((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v15);
  v17((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), v15);
  v30 = *(int *)(a3 + 24);
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceNotificationEventsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233435900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for BankConnectConsent();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceNotificationEventsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334359B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for BankConnectConsent();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23361D634();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_233435A60()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for BankConnectConsent();
  if (v1 <= 0x3F)
  {
    result = sub_23361D634();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for BankConnectWebServiceRegisterToNotificationEventsRequest(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for BankConnectConsent();
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23361D634();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    swift_bridgeObjectRetain();
    v18(v14, v15, v16);
    v18(&a1[v8[7]], &a2[v8[7]], v16);
    v19 = v8[8];
    v20 = &a1[v19];
    v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v19], 1, v16))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
    v24 = v8[10];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    a1[v8[11]] = a2[v8[11]];
    v28 = v8[12];
    v29 = &a1[v28];
    v30 = &a2[v28];
    swift_bridgeObjectRetain();
    v18(v29, v30, v16);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = &a1[v31];
    v34 = &a2[v31];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BankConnectWebServiceRegisterToNotificationEventsRequest(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v2 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for BankConnectConsent();
  swift_bridgeObjectRelease();
  v4 = a1 + v3[6];
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + v3[7], v5);
  v8 = a1 + v3[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  v7(a1 + v3[12], v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BankConnectWebServiceRegisterToNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v7[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  v17(v13, v14, v15);
  v17((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v15);
  v18 = v7[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a2 + v18, 1, v15))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v17(v19, v20, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v22 = v7[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v26 = v7[12];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  swift_bridgeObjectRetain();
  v17(v27, v28, v15);
  v29 = *(int *)(a3 + 20);
  v30 = *(int *)(a3 + 24);
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BankConnectWebServiceRegisterToNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v6[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v15((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v13);
  v16 = v6[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19((const void *)(a1 + v16), 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v23 = v6[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v15((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v13);
  v26 = *(int *)(a3 + 20);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for BankConnectWebServiceRegisterToNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  v8 = v7[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v13((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  v14 = v7[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_BYTE *)(a1 + v7[11]) = *(_BYTE *)(a2 + v7[11]);
  v13((void *)(a1 + v7[12]), (const void *)(a2 + v7[12]), v11);
  v18 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for BankConnectWebServiceRegisterToNotificationEventsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(const void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  v6 = (int *)type metadata accessor for BankConnectConsent();
  v7 = v6[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = v6[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v17((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v15);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21((const void *)(a1 + v18), 1, v15);
  v23 = v21(v20, 1, v15);
  if (!v22)
  {
    if (!v23)
    {
      v17(v19, v20, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v19, v20, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
LABEL_7:
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v25 = v6[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  v17((void *)(a1 + v6[12]), (const void *)(a2 + v6[12]), v15);
  v30 = *(int *)(a3 + 20);
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServiceRegisterToNotificationEventsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233436570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BankConnectConsent();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServiceRegisterToNotificationEventsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334365F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BankConnectConsent();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_233436670()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BankConnectConsent();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceUnregisterFromNotificationEventsRequest()
{
  return &type metadata for BankConnectWebServiceUnregisterFromNotificationEventsRequest;
}

ValueMetadata *type metadata accessor for BankConnectWebServiceUnregisterFromNotificationEventsResponse()
{
  return &type metadata for BankConnectWebServiceUnregisterFromNotificationEventsResponse;
}

unint64_t static ManagedInternalAccount.existingAccount(withPublicAccountID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t result;
  unint64_t v10;
  id v11;
  objc_super v12;

  v12.receiver = (id)swift_getObjCClassFromMetadata();
  v12.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v4 = objc_msgSendSuper2(&v12, sel_fetchRequest);
  v5 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = sub_23361D658();
  *(_QWORD *)(v6 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v6 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v8);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v10 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x234933120](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_8:
    a2 = (uint64_t)v11;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id static ManagedInternalAccount.fetchRequest()()
{
  id v0;
  void *v1;
  objc_super v3;

  v3.receiver = (id)swift_getObjCClassFromMetadata();
  v3.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v0 = objc_msgSendSuper2(&v3, sel_fetchRequest);
  v1 = (void *)sub_23361E3D8();
  objc_msgSend(v0, sel_setRelationshipKeyPathsForPrefetching_, v1);

  return v0;
}

uint64_t static ManagedInternalAccount.predicateForAccounts(withInstitutionID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

unint64_t static ManagedInternalAccount.existingAccount(with:in:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t result;
  unint64_t v10;
  id v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  v3 = v1;
  v12 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v16.receiver = (id)swift_getObjCClassFromMetadata();
  v16.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v6 = objc_msgSendSuper2(&v16, sel_fetchRequest);
  v7 = (void *)sub_23361E3D8();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v7);

  v13 = v12;
  v14 = v4;
  v15 = v5;
  v8 = _s10FinanceKit22ManagedInternalAccountC012predicateForE04withSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0((uint64_t *)&v13);
  objc_msgSend(v6, sel_setPredicate_, v8);

  result = sub_23361E984();
  if (v2)
  {

    return v3;
  }
  v10 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v3)
      goto LABEL_9;
  }
  else
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return v3;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x234933120](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_8:
    v3 = (uint64_t)v11;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

unint64_t static ManagedInternalAccount.existingAccount(withExternalAccountID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unint64_t result;
  unint64_t v13;
  id v14;
  objc_super v15;

  v15.receiver = (id)swift_getObjCClassFromMetadata();
  v15.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v7 = objc_msgSendSuper2(&v15, sel_fetchRequest);
  v8 = MEMORY[0x24BEE0D00];
  v9 = (void *)sub_23361E3D8();
  objc_msgSend(v7, sel_setRelationshipKeyPathsForPrefetching_, v9);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 56) = v8;
  *(_QWORD *)(v10 + 64) = sub_2331683F0();
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v11);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v13 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)MEMORY[0x234933120](0, v13);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(v13 + 32);
LABEL_8:
    a3 = (uint64_t)v14;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void static ManagedInternalAccount.deleteAccount(with:in:)(__int128 *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  v16 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v20.receiver = (id)swift_getObjCClassFromMetadata();
  v20.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v6 = objc_msgSendSuper2(&v20, sel_fetchRequest);
  v7 = (void *)sub_23361E3D8();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v7);

  v17 = v16;
  v18 = v4;
  v19 = v5;
  v8 = _s10FinanceKit22ManagedInternalAccountC012predicateForE04withSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0((uint64_t *)&v17);
  objc_msgSend(v6, sel_setPredicate_, v8);

  objc_msgSend(v6, sel_setIncludesPropertyValues_, 0);
  v9 = sub_23361E984();
  if (v2)
  {

    return;
  }
  v10 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v14 <= 1)
    {
      swift_bridgeObjectRetain();
      v15 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v15)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    sub_23361EF24();
    __break(1u);
    return;
  }
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 > 1)
    goto LABEL_16;
  if (v11)
  {
LABEL_6:
    if ((v10 & 0xC000000000000001) != 0)
    {
      v12 = (id)MEMORY[0x234933120](0, v10);
      goto LABEL_9;
    }
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(id *)(v10 + 32);
LABEL_9:
      v13 = v12;
      swift_bridgeObjectRelease();
      objc_msgSend(a2, sel_deleteObject_, v13);

      return;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_12:

  swift_bridgeObjectRelease();
}

unint64_t static ManagedInternalAccount.existingAccount(accountID:consentID:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v11;
  void *v12;
  id v13;
  unint64_t result;
  unint64_t v15;
  id v16;
  objc_super v17;

  v6 = v4;
  v17.receiver = (id)swift_getObjCClassFromMetadata();
  v17.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v11 = objc_msgSendSuper2(&v17, sel_fetchRequest);
  v12 = (void *)sub_23361E3D8();
  objc_msgSend(v11, sel_setRelationshipKeyPathsForPrefetching_, v12);

  v13 = _s10FinanceKit22ManagedInternalAccountC012predicateForE09accountID07consentI0So11NSPredicateCSS_SStFZ_0(a1, a2, a3, a4);
  objc_msgSend(v11, sel_setPredicate_, v13);

  result = sub_23361E984();
  if (v5)
  {

    return v6;
  }
  v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!v6)
      goto LABEL_9;
  }
  else
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return v6;
    }
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x234933120](0, v15);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_8:
    v6 = (uint64_t)v16;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

unint64_t static ManagedInternalAccount.existingEnabledAccount(withPrimaryAccountIdentifier:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unint64_t result;
  unint64_t v13;
  id v14;
  objc_super v15;

  v15.receiver = (id)swift_getObjCClassFromMetadata();
  v15.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v7 = objc_msgSendSuper2(&v15, sel_fetchRequest);
  v8 = MEMORY[0x24BEE0D00];
  v9 = (void *)sub_23361E3D8();
  objc_msgSend(v7, sel_setRelationshipKeyPathsForPrefetching_, v9);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233623D60;
  *(_QWORD *)(v10 + 56) = v8;
  *(_QWORD *)(v10 + 64) = sub_2331683F0();
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v11);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v13 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)MEMORY[0x234933120](0, v13);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(v13 + 32);
LABEL_8:
    a3 = (uint64_t)v14;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInternalAccount.existingAccounts(withPublicAccountIDs:in:)(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  objc_super v7;

  v7.receiver = (id)swift_getObjCClassFromMetadata();
  v7.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v2 = objc_msgSendSuper2(&v7, sel_fetchRequest);
  v3 = (void *)sub_23361E3D8();
  objc_msgSend(v2, sel_setRelationshipKeyPathsForPrefetching_, v3);

  v4 = (void *)_s10FinanceKit22ManagedInternalAccountC20predicateForAccounts010withPublicE3IDsSo11NSPredicateCShy10Foundation4UUIDVG_tFZ_0(a1);
  objc_msgSend(v2, sel_setPredicate_, v4);

  v5 = sub_23361E984();
  return v5;
}

uint64_t static ManagedInternalAccount.existingAccounts(withExternalAccountIDs:in:)(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = (id)swift_getObjCClassFromMetadata();
  v8.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v2 = objc_msgSendSuper2(&v8, sel_fetchRequest);
  v3 = (void *)sub_23361E3D8();
  objc_msgSend(v2, sel_setRelationshipKeyPathsForPrefetching_, v3);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(v4 + 64) = sub_233438E38((unint64_t *)&qword_256042C90, &qword_254246588);
  *(_QWORD *)(v4 + 32) = a1;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_23361E6B4();
  objc_msgSend(v2, sel_setPredicate_, v5);

  v6 = sub_23361E984();
  return v6;
}

id static ManagedInternalAccount.existingObject(with:in:)(uint64_t a1, id a2)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7[0] = 0;
  v2 = objc_msgSend(a2, sel_existingObjectWithID_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = (id)swift_dynamicCastClassUnconditional();
    v5 = v3;
  }
  else
  {
    v4 = v7[0];
    sub_23361D1B4();

    swift_willThrow();
  }
  return v4;
}

uint64_t static ManagedInternalAccount.predicateForAccount(withExternalAccountID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

uint64_t static ManagedInternalAccount.linkedAccounts(withInstitutionID:in:)(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  objc_super v13;
  uint64_t v14;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v4 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  v5 = MEMORY[0x24BEE0D00];
  v6 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v7 + 32) = sub_23361E6B4();
  *(_QWORD *)(v7 + 40) = sub_23361E6B4();
  v14 = v7;
  sub_23361E408();
  v9 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v9);

  objc_msgSend(v4, sel_setPredicate_, v10);
  v11 = sub_23361E984();

  return v11;
}

uint64_t static ManagedInternalAccount.accounts(forInstitutionID:in:)(uint64_t a1, uint64_t a2)
{
  return sub_23343794C(a1, a2);
}

uint64_t static ManagedInternalAccount.accounts(grantedByConsentID:in:)(uint64_t a1, uint64_t a2)
{
  return sub_23343794C(a1, a2);
}

uint64_t sub_23343794C(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  objc_super v11;

  v11.receiver = (id)swift_getObjCClassFromMetadata();
  v11.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v4 = objc_msgSendSuper2(&v11, sel_fetchRequest);
  v5 = MEMORY[0x24BEE0D00];
  v6 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v6);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = sub_2331683F0();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v8);

  v9 = sub_23361E984();
  return v9;
}

uint64_t static ManagedInternalAccount.predicateForAccounts(withConsentID:)(uint64_t a1, uint64_t a2)
{
  return sub_2331B39E4(a1, a2);
}

uint64_t static ManagedInternalAccount.predicateForAccount(withPublicAccountID:)()
{
  return sub_233438074();
}

uint64_t static ManagedInternalAccount.existingAccounts(withInstitutionID:in:)(uint64_t a1, uint64_t a2)
{
  return sub_23343794C(a1, a2);
}

id static ManagedInternalAccount.fetchRequest(for:)(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  void *v4;
  void *ObjCClassFromMetadata;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  objc_super v18;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  v4 = (void *)a1[2];
  v3 = a1[3];
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v18.receiver = ObjCClassFromMetadata;
  v18.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit22ManagedInternalAccount;
  v6 = objc_msgSendSuper2(&v18, sel_fetchRequest);
  v7 = (void *)sub_23361E3D8();
  objc_msgSend(v6, sel_setRelationshipKeyPathsForPrefetching_, v7);

  if (v2)
    v8 = 0;
  else
    v8 = v1;
  objc_msgSend(v6, sel_setFetchLimit_, v8);
  if (v4)
  {
    v9 = qword_2542465D8;
    v10 = v4;
    if (v9 != -1)
      swift_once();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_2333B13C8(v11);
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setPredicate_, v12);

  }
  if (v3)
  {
    v13 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
    v14 = objc_msgSend(v13, sel_attributesByName);

    sub_233168668(0, &qword_256042E58);
    v15 = sub_23361E06C();

    swift_bridgeObjectRetain();
    sub_2334389AC(v3, v15);
    swift_bridgeObjectRelease();
    sub_233168668(0, (unint64_t *)&qword_2560446E0);
    v16 = (void *)sub_23361E3D8();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSortDescriptors_, v16);
    swift_bridgeObjectRelease();

  }
  return v6;
}

void *sub_233437D4C()
{
  void *result;

  result = (void *)sub_23315F950((uint64_t)&unk_250467560);
  off_2542465D0 = result;
  return result;
}

uint64_t static ManagedInternalAccount.attributeNamesByKeyPath.getter()
{
  if (qword_2542465D8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_233437DB0()
{
  if (qword_2542465D8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t static ManagedInternalAccount.enableAllAccountsForPublicAPI.getter()
{
  char v0;
  _BYTE v2[80];

  if (qword_256041D20 != -1)
    swift_once();
  swift_beginAccess();
  sub_2331DDF7C((uint64_t)&qword_25604FE68, (uint64_t)v2);
  v0 = sub_2331704B8();
  sub_2332ACC28((uint64_t)v2);
  return v0 & 1;
}

uint64_t static ManagedInternalAccount.enableAllAccountsForPublicAPI.setter(char a1)
{
  if (qword_256041D20 != -1)
    swift_once();
  swift_beginAccess();
  sub_233170D24(a1 & 1);
  return swift_endAccess();
}

uint64_t (*static ManagedInternalAccount.enableAllAccountsForPublicAPI.modify(uint64_t a1))(uint64_t a1)
{
  if (qword_256041D20 != -1)
    swift_once();
  swift_beginAccess();
  *(_BYTE *)(a1 + 24) = sub_2331704B8() & 1;
  return sub_233437F68;
}

uint64_t sub_233437F68(uint64_t a1)
{
  sub_233170D24(*(_BYTE *)(a1 + 24));
  return swift_endAccess();
}

id sub_233437FA0()
{
  id v1;

  if (qword_254246F70 != -1)
    swift_once();
  v1 = (id)qword_254246F68;
  qword_25604FE98 = sub_233168668(0, (unint64_t *)&qword_254247660);
  unk_25604FEA0 = &protocol witness table for NSUserDefaults;
  qword_25604FE80 = (uint64_t)v1;
  word_25604FE78 = 256;
  qword_25604FE68 = 0xD00000000000001DLL;
  unk_25604FE70 = 0x800000023366A750;
  qword_25604FEA8 = (uint64_t)&type metadata for DeviceInfo;
  unk_25604FEB0 = &protocol witness table for DeviceInfo;
  return v1;
}

uint64_t static ManagedInternalAccount.predicateForAccounts(grantingAccessByConsentUUID:)()
{
  return sub_233438074();
}

uint64_t sub_233438074()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_233385240((unint64_t *)&qword_2560436E8, &qword_2560436E0);
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

id static ManagedInternalAccount.predicateForTransactionPickerShareableAccounts()()
{
  uint64_t v0;
  char v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v8[10];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233626360;
  if (qword_256041D20 != -1)
    swift_once();
  swift_beginAccess();
  sub_2331DDF7C((uint64_t)&qword_25604FE68, (uint64_t)v8);
  v1 = sub_2331704B8();
  sub_2332ACC28((uint64_t)v8);
  if ((v1 & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
  }
  else
  {
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    v2 = (id)sub_23361E6B4();
  }
  *(_QWORD *)(v0 + 32) = v2;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233623D60;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 3);
  *(_QWORD *)(v3 + 56) = sub_233168668(0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v3 + 64) = sub_233385240((unint64_t *)&qword_2560430F0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v0 + 40) = sub_23361E6B4();
  v8[0] = v0;
  sub_23361E408();
  v5 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v5);

  return v6;
}

id static ManagedInternalAccount.predicateForThirdPartyShareableAccounts()()
{
  char v0;
  _BYTE v2[80];

  if (qword_256041D20 != -1)
    swift_once();
  swift_beginAccess();
  sub_2331DDF7C((uint64_t)&qword_25604FE68, (uint64_t)v2);
  v0 = sub_2331704B8();
  sub_2332ACC28((uint64_t)v2);
  if ((v0 & 1) != 0)
    return objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  return (id)sub_23361E6B4();
}

uint64_t static ManagedInternalAccount.predicateForAccounts(withoutAccountStatus:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *a1;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D60;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v1);
  *(_QWORD *)(v2 + 56) = sub_233168668(0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v2 + 64) = sub_233385240((unint64_t *)&qword_2560430F0, (unint64_t *)&qword_254248750);
  *(_QWORD *)(v2 + 32) = v3;
  return sub_23361E6B4();
}

uint64_t _s10FinanceKit22ManagedInternalAccountC20predicateForAccounts010withPublicE3IDsSo11NSPredicateCShy10Foundation4UUIDVG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v25 = sub_23361D6A0();
  v2 = *(_QWORD *)(v25 - 8);
  v3 = MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v21 - v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v7 = swift_allocObject();
  v8 = (_QWORD *)v7;
  *(_OWORD *)(v7 + 16) = xmmword_233623D60;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v22 = (_QWORD *)v7;
    v26 = MEMORY[0x24BEE4AF8];
    sub_23361EE70();
    result = sub_233398654(a1);
    v12 = result;
    v14 = v13;
    v16 = v15 & 1;
    v23 = a1 + 56;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v23 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_11;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
        goto LABEL_12;
      v17 = v24;
      v18 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v24, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v2 + 72) * v12, v25);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v17, v18);
      sub_23361D658();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v18);
      sub_23361EE4C();
      sub_23361EE7C();
      sub_23361EE88();
      sub_23361EE58();
      result = sub_2334F22E0(v12, v14, v16 & 1, a1);
      v12 = result;
      v14 = v19;
      v16 = v20 & 1;
      if (!--v9)
      {
        sub_233193A50(result, v19, v20 & 1);
        v10 = v26;
        v8 = v22;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_233168668(0, (unint64_t *)&qword_254247FB0);
    v8[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_25604B340);
    v8[8] = sub_233438E38((unint64_t *)&qword_25604B348, &qword_25604B340);
    v8[4] = v10;
    return sub_23361E6B4();
  }
  return result;
}

id _s10FinanceKit22ManagedInternalAccountC012predicateForE04withSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v8 = sub_2331683F0();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 32) = sub_23361E6B4();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = v8;
  *(_QWORD *)(v9 + 32) = v2;
  *(_QWORD *)(v9 + 40) = v1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 40) = sub_23361E6B4();
  sub_23361E408();
  v10 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v10);

  return v11;
}

uint64_t sub_2334389AC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v4 = sub_23361EF30();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v20 = a2;
      for (i = 4; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x234933120](i - 4, a1);
        else
          v6 = *(id *)(a1 + 8 * i);
        v7 = v6;
        v8 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v9 = objc_msgSend(v6, sel_key);
        if (!v9)
          goto LABEL_20;
        v10 = v9;
        v11 = sub_23361E150();
        v13 = v12;

        if (*(_QWORD *)(a2 + 16))
        {
          sub_2331E3D18(v11, v13);
          if ((v14 & 1) != 0)
            break;
        }
        if (qword_2542465D8 != -1)
          swift_once();
        if (*((_QWORD *)off_2542465D0 + 2))
        {
          swift_bridgeObjectRetain();
          sub_2331E3D18(v11, v13);
          if ((v15 & 1) != 0)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v16 = objc_msgSend(v7, sel_ascending);
            v17 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
            v18 = (void *)sub_23361E12C();
            swift_bridgeObjectRelease();
            objc_msgSend(v17, sel_initWithKey_ascending_, v18, v16);

            a2 = v20;
            swift_bridgeObjectRelease();

            goto LABEL_20;
          }

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        swift_bridgeObjectRelease();
LABEL_6:
        if (v8 == v4)
        {
          swift_bridgeObjectRelease();
          return v21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

id _s10FinanceKit22ManagedInternalAccountC012predicateForE09accountID07consentI0So11NSPredicateCSS_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_2331683F0();
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v8 + 32) = sub_23361E6B4();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_233623D60;
  *(_QWORD *)(v12 + 56) = v10;
  *(_QWORD *)(v12 + 64) = v11;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v8 + 40) = sub_23361E6B4();
  sub_23361E408();
  v13 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v13);

  return v14;
}

uint64_t sub_233438E38(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x234934494](MEMORY[0x24BDCFBF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RawECommerceOrderContent.topPriorityContentItem(bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  char v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92[16];
  uint64_t v93;
  uint64_t v94;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v80 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v79 = (uint64_t)&v74 - v9;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v82);
  v85 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v90 = v11;
  v91 = v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)&v74 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v83 = (char *)&v74 - v17;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047710);
  v18 = *(_QWORD *)(v84 - 8);
  v19 = MEMORY[0x24BDAC7A8](v84);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v74 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FEB8);
  MEMORY[0x24BDAC7A8](v24);
  v76 = (uint64_t)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RawECommerceOrderContent(0);
  swift_retain();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_23343D608(v26, a1);
  swift_bridgeObjectRelease();
  swift_release();
  v94 = v27;
  swift_retain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_23343DA08(v28, a1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_233189978(v29);
  v30 = v94;
  v93 = v3;
  swift_bridgeObjectRetain();
  v31 = sub_2334A224C((void (*)(uint64_t))sub_23343DBC4, (uint64_t)v92, v30);
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v89 = v31 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    sub_2331686A0(v89, (uint64_t)v23, &qword_256047710);
    result = swift_bridgeObjectRetain();
    v34 = v84;
    v35 = v18;
    if (v32 != 1)
    {
      v75 = a2;
      v36 = 1;
      v37 = v83;
      v81 = v21;
      v87 = v32;
      v88 = v31;
      v86 = v18;
      while (1)
      {
        if (v36 >= *(_QWORD *)(v31 + 16))
        {
          __break(1u);
          return result;
        }
        sub_2331686A0(v89 + *(_QWORD *)(v35 + 72) * v36, (uint64_t)v21, &qword_256047710);
        v38 = *(int *)(v34 + 48);
        v39 = (uint64_t)v23;
        v40 = &v23[v38];
        v41 = &v21[v38];
        sub_23361D5F8();
        v42 = type metadata accessor for Order.PriorityInfo(0);
        v43 = *(int *)(v42 + 20);
        v44 = word_23364AED2[v41[v43]];
        v45 = word_23364AED2[v40[v43]];
        if (v44 != v45)
        {
          (*(void (**)(char *, uint64_t))(v91 + 8))(v37, v90);
          if (v45 < v44)
            goto LABEL_19;
          goto LABEL_4;
        }
        v46 = *(int *)(v42 + 24);
        v47 = (uint64_t)&v41[v46];
        v48 = (uint64_t)&v40[v46];
        v49 = v85;
        v50 = v85 + *(int *)(v82 + 48);
        sub_2331686A0((uint64_t)&v41[v46], v85, (uint64_t *)&unk_254247DA0);
        sub_2331686A0(v48, v50, (uint64_t *)&unk_254247DA0);
        v51 = v90;
        v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
        if (v52(v49, 1, v90) == 1)
          break;
        v54 = v79;
        sub_2331686A0(v49, v79, (uint64_t *)&unk_254247DA0);
        if (v52(v50, 1, v51) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v54, v51);
LABEL_16:
          v55 = v80;
          sub_2331686A0(v47, v80, (uint64_t *)&unk_254247DA0);
          v56 = v52(v55, 1, v51);
          sub_233168608(v55, (uint64_t *)&unk_254247DA0);
          sub_233168608(v85, &qword_256042DA0);
          v37 = v83;
          (*(void (**)(char *, uint64_t))(v91 + 8))(v83, v51);
          v34 = v84;
          v21 = v81;
          if (v56 != 1)
            goto LABEL_19;
          goto LABEL_4;
        }
        v57 = v54;
        v58 = v91;
        v59 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
        v60 = v77;
        v59(v77, v57, v51);
        v61 = v78;
        v59(v78, v50, v51);
        v62 = v83;
        sub_23361D52C();
        v64 = fabs(v63);
        sub_23361D52C();
        v66 = fabs(v65);
        v67 = *(void (**)(char *, uint64_t))(v58 + 8);
        v67(v61, v51);
        v67(v60, v51);
        v68 = v49;
        v37 = v62;
        sub_233168608(v68, (uint64_t *)&unk_254247DA0);
        v67(v62, v51);
        v34 = v84;
        v21 = v81;
        if (v64 < v66)
        {
LABEL_19:
          v23 = (char *)v39;
          sub_233168608(v39, &qword_256047710);
          result = sub_233168478((uint64_t)v21, v39, &qword_256047710);
          v35 = v86;
          goto LABEL_5;
        }
LABEL_4:
        result = sub_233168608((uint64_t)v21, &qword_256047710);
        v35 = v86;
        v23 = (char *)v39;
LABEL_5:
        v31 = v88;
        if (v87 == ++v36)
        {
          a2 = v75;
          goto LABEL_22;
        }
      }
      if (v52(v50, 1, v51) == 1)
      {
        v53 = sub_23361D5BC();
        sub_233168608(v85, (uint64_t *)&unk_254247DA0);
        v37 = v83;
        (*(void (**)(char *, uint64_t))(v91 + 8))(v83, v51);
        v34 = v84;
        v21 = v81;
        if ((v53 & 1) != 0)
          goto LABEL_19;
        goto LABEL_4;
      }
      goto LABEL_16;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    v70 = v76;
    sub_233168478((uint64_t)v23, v76, &qword_256047710);
    v69 = 0;
  }
  else
  {
    v69 = 1;
    v34 = v84;
    v35 = v18;
    v70 = v76;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v70, v69, 1, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v70, 1, v34) == 1)
  {
    sub_233168608(v70, &qword_25604FEB8);
    v71 = type metadata accessor for Order.ContentItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(a2, 1, 1, v71);
  }
  else
  {
    v72 = v70 + *(int *)(v34 + 48);
    sub_233168580(v70, a2, type metadata accessor for Order.ContentItem);
    v73 = type metadata accessor for Order.ContentItem(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(a2, 0, 1, v73);
    return sub_233168500(v72, type metadata accessor for Order.PriorityInfo);
  }
}

uint64_t Order.ContentItem.lineItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for Order.Return();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for Order.Fulfillment();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v27 - v15;
  v17 = type metadata accessor for Order.ContentItem(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v1, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
    v21 = *v4;
    swift_bridgeObjectRetain();
    v22 = (uint64_t)v4;
    v23 = type metadata accessor for Order.Return;
  }
  else
  {
    sub_233168580((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    sub_2331684BC((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
      v21 = *v7;
      swift_bridgeObjectRetain();
      v24 = (uint64_t)v7;
      v25 = type metadata accessor for Order.PickupFulfillment;
    }
    else
    {
      sub_233168580((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
      v21 = *v10;
      swift_bridgeObjectRetain();
      v24 = (uint64_t)v10;
      v25 = type metadata accessor for Order.ShippingFulfillment;
    }
    sub_233168500(v24, (uint64_t (*)(_QWORD))v25);
    v23 = type metadata accessor for Order.Fulfillment;
    v22 = (uint64_t)v16;
  }
  sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
  return v21;
}

uint64_t Order.StatusPriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Order.StatusPriority.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = result;
  if ((unsigned __int16)result >= 0xAu)
    v2 = 10;
  *a2 = v2;
  return result;
}

uint64_t ManagedOrderContentItem.lineItems.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *v0;
  if ((*v0 & 0x4000000000000000) != 0)
  {
    v4 = (id)(v1 & 0xBFFFFFFFFFFFFFFFLL);
    v3 = ManagedOrderReturn.lineItems.getter();
  }
  else
  {
    if (v1 < 0)
    {
      v7 = objc_msgSend((id)(v1 & 0x7FFFFFFFFFFFFFFFLL), sel_lineItemObjects);
      type metadata accessor for ManagedOrderLineItem();
      sub_233167C58((unint64_t *)&qword_256043F28, (uint64_t (*)(uint64_t))type metadata accessor for ManagedOrderLineItem, MEMORY[0x24BEE5BD8]);
      sub_23361E5DC();

      v8 = swift_bridgeObjectRetain();
      v9 = sub_2333AFD68(v8);
      swift_bridgeObjectRelease();
      v10 = v9;
      sub_2333156B4(&v10);
      swift_bridgeObjectRelease();
      sub_2331B6B9C(v1);
      sub_2331B6B9C(v1);
      return v10;
    }
    v2 = (id)v1;
    v3 = ManagedOrderShippingFulfillment.lineItems.getter();
  }
  v5 = v3;
  sub_2331B6B9C(v1);
  return v5;
}

uint64_t ManagedECommerceOrderContent.priorityInfo.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256049CF8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v7 = (_QWORD *)sub_2331A6FB8(v6);
  swift_bridgeObjectRelease();
  v16 = v7;
  v8 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v9 = sub_2331A70F4(v8);
  swift_bridgeObjectRelease();
  sub_2331896C8(v9);
  sub_2331A8628(&v16);
  v10 = v16;
  v11 = v1;
  v12 = sub_23330354C((uint64_t)v10, v11);
  swift_bridgeObjectRelease();

  sub_2333008A8(v12, (uint64_t)v5);
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for Order.PriorityInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 1, v13) != 1)
    return sub_233168580((uint64_t)v5, a1, type metadata accessor for Order.PriorityInfo);
  Order.PriorityInfo.init(orderWithNoFulfillments:)(v11, a1);
  return sub_233168608((uint64_t)v5, &qword_256049CF8);
}

uint64_t sub_233439B08@<X0>(unsigned __int16 *a1@<X0>, char *a2@<X8>)
{
  return Order.StatusPriority.init(rawValue:)(*a1, a2);
}

uint64_t Order.PriorityInfo.orderUpdateDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Order.PriorityInfo.orderUpdateDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Order.PriorityInfo.orderUpdateDate.modify())()
{
  return nullsub_1;
}

uint64_t Order.PriorityInfo.statusPriority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Order.PriorityInfo(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t Order.PriorityInfo.statusPriority.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Order.PriorityInfo(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*Order.PriorityInfo.statusPriority.modify())(_QWORD)
{
  type metadata accessor for Order.PriorityInfo(0);
  return nullsub_1;
}

uint64_t Order.PriorityInfo.estimatedCompletionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.PriorityInfo(0);
  return sub_2331686A0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.PriorityInfo.estimatedCompletionDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Order.PriorityInfo(0) + 24);
  return sub_23318C8A8(a1, v3);
}

uint64_t (*Order.PriorityInfo.estimatedCompletionDate.modify())(_QWORD)
{
  type metadata accessor for Order.PriorityInfo(0);
  return nullsub_1;
}

uint64_t Order.PriorityInfo.isHigherPriority(than:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  uint64_t *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void (*v37)(char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a2;
  v4 = sub_23361D634();
  v5 = *(_QWORD **)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v39 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v39 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Order.PriorityInfo(0);
  v21 = *(int *)(v20 + 20);
  v22 = word_23364AED2[*(char *)(v2 + v21)];
  v23 = word_23364AED2[*(char *)(a1 + v21)];
  if (v22 == v23)
  {
    v39 = v10;
    v40 = v8;
    v24 = *(int *)(v20 + 24);
    v25 = a1 + v24;
    v26 = (uint64_t)&v19[*(int *)(v17 + 48)];
    v41 = v2 + v24;
    sub_2331686A0(v2 + v24, (uint64_t)v19, (uint64_t *)&unk_254247DA0);
    sub_2331686A0(v25, v26, (uint64_t *)&unk_254247DA0);
    v27 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6];
    if (v27((uint64_t)v19, 1, v4) == 1)
    {
      if (v27(v26, 1, v4) == 1)
      {
        v28 = sub_23361D5BC();
LABEL_10:
        v29 = (uint64_t *)&unk_254247DA0;
        goto LABEL_11;
      }
    }
    else
    {
      sub_2331686A0((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_254247DA0);
      if (v27(v26, 1, v4) != 1)
      {
        v30 = (void (*)(char *, char *, uint64_t))v5[4];
        v31 = v39;
        v30(v39, v16, v4);
        v32 = v40;
        v30(v40, (char *)v26, v4);
        sub_23361D52C();
        v34 = fabs(v33);
        sub_23361D52C();
        v36 = fabs(v35);
        v37 = (void (*)(char *, uint64_t))v5[1];
        v37(v32, v4);
        v37(v31, v4);
        v28 = v34 < v36;
        goto LABEL_10;
      }
      ((void (*)(char *, uint64_t))v5[1])(v16, v4);
    }
    sub_2331686A0(v41, (uint64_t)v14, (uint64_t *)&unk_254247DA0);
    v28 = v27((uint64_t)v14, 1, v4) != 1;
    sub_233168608((uint64_t)v14, (uint64_t *)&unk_254247DA0);
    v29 = &qword_256042DA0;
LABEL_11:
    sub_233168608((uint64_t)v19, v29);
    return v28 & 1;
  }
  v28 = v23 < v22;
  return v28 & 1;
}

uint64_t static Order.PriorityInfo.< infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  LOBYTE(a1) = Order.PriorityInfo.isHigherPriority(than:now:)(a1, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

uint64_t sub_23343A048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  LOBYTE(a1) = Order.PriorityInfo.isHigherPriority(than:now:)(a1, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

BOOL sub_23343A0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_23361D634();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  LOBYTE(a2) = Order.PriorityInfo.isHigherPriority(than:now:)(a2, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (a2 & 1) == 0;
}

BOOL sub_23343A17C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  LOBYTE(a1) = Order.PriorityInfo.isHigherPriority(than:now:)(a1, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (a1 & 1) == 0;
}

uint64_t sub_23343A218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_23361D634();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  LOBYTE(a2) = Order.PriorityInfo.isHigherPriority(than:now:)(a2, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return a2 & 1;
}

uint64_t Order.PriorityInfo.init(_:updatedDate:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  if ((a1 & 0x8000000000000000) != 0)
    Order.PriorityInfo.init(_:updatedDate:)((void *)(a1 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v9, a3);
  else
    Order.PriorityInfo.init(_:updatedDate:)((void *)a1, (uint64_t)v9, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
}

void Order.PriorityInfo.init(orderWithNoFulfillments:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v15[15];
  char v16;

  v4 = type metadata accessor for Order.PriorityInfo(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ManagedECommerceOrderContent.status.getter(&v16);
  v11 = v16;
  v12 = objc_msgSend(a1, sel_updatedDate);
  sub_23361D5EC();

  v13 = (uint64_t)&v6[*(int *)(v4 + 24)];
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v14(v13, 1, 1, v7);
  v6[*(int *)(v4 + 20)] = 0x90500u >> (8 * v11);
  sub_233168608(v13, (uint64_t *)&unk_254247DA0);
  v14(v13, 1, 1, v7);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v6, v10, v7);
  sub_233168580((uint64_t)v6, a2, type metadata accessor for Order.PriorityInfo);

}

uint64_t ManagedECommerceOrderContent.topPriorityContentItem.getter@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v79 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v78 = (uint64_t)&v74 - v6;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v82);
  v84 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_23361D634();
  v91 = *(_QWORD *)(v89 - 8);
  v8 = MEMORY[0x24BDAC7A8](v89);
  v77 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v74 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v74 - v12;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047600);
  v14 = *(_QWORD *)(v83 - 8);
  v15 = MEMORY[0x24BDAC7A8](v83);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v74 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604FEC0);
  MEMORY[0x24BDAC7A8](v20);
  v75 = (uint64_t *)((char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = ManagedECommerceOrderContent.shippingFulfillments.getter();
  v23 = (_QWORD *)sub_2331A6FB8(v22);
  swift_bridgeObjectRelease();
  v92 = v23;
  v24 = ManagedECommerceOrderContent.pickupFulfillments.getter();
  v25 = sub_2331A70F4(v24);
  swift_bridgeObjectRelease();
  sub_2331896C8(v25);
  sub_2331A8628(&v92);
  v26 = (_QWORD *)sub_23343DC08((uint64_t)v92);
  swift_bridgeObjectRelease();
  v92 = v26;
  v27 = ManagedECommerceOrderContent.returns.getter();
  v28 = sub_23343DCD8(v27);
  swift_bridgeObjectRelease();
  sub_23318A384(v28);
  v29 = v1;
  v30 = swift_bridgeObjectRetain();
  v31 = sub_23343DE18(v30, v29);
  swift_bridgeObjectRelease();

  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v88 = v31 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    sub_2331686A0(v88, (uint64_t)v19, &qword_256047600);
    result = swift_bridgeObjectRetain();
    v34 = (uint64_t)v19;
    if (v32 != 1)
    {
      v90 = v13;
      v87 = v14;
      v74 = a1;
      v35 = 1;
      v36 = (uint64_t *)&unk_254247DA0;
      v37 = v83;
      v80 = v17;
      v81 = v19;
      v85 = v31;
      v86 = v32;
      while (1)
      {
        if (v35 >= *(_QWORD *)(v31 + 16))
        {
          __break(1u);
          return result;
        }
        sub_2331686A0(v88 + *(_QWORD *)(v87 + 72) * v35, (uint64_t)v17, &qword_256047600);
        v38 = *(int *)(v37 + 48);
        v39 = v34 + v38;
        v40 = &v17[v38];
        v41 = v90;
        sub_23361D5F8();
        v42 = type metadata accessor for Order.PriorityInfo(0);
        v43 = *(int *)(v42 + 20);
        v44 = word_23364AED2[v40[v43]];
        v45 = word_23364AED2[*(char *)(v39 + v43)];
        if (v44 != v45)
        {
          (*(void (**)(char *, uint64_t))(v91 + 8))(v41, v89);
          if (v45 < v44)
            goto LABEL_19;
          goto LABEL_4;
        }
        v46 = *(int *)(v42 + 24);
        v47 = (uint64_t)&v40[v46];
        v48 = v39 + v46;
        v49 = v84;
        v50 = v84 + *(int *)(v82 + 48);
        v51 = v36;
        sub_2331686A0((uint64_t)&v40[v46], v84, v36);
        sub_2331686A0(v48, v50, v36);
        v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
        v53 = v89;
        if (v52(v49, 1, v89) == 1)
          break;
        v55 = v78;
        sub_2331686A0(v49, v78, v36);
        if (v52(v50, 1, v53) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v55, v53);
LABEL_16:
          v56 = v79;
          sub_2331686A0(v47, v79, v36);
          v57 = v52(v56, 1, v53);
          sub_233168608(v56, v36);
          sub_233168608(v84, &qword_256042DA0);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v53);
          v37 = v83;
          v17 = v80;
          v34 = (uint64_t)v81;
          if (v57 != 1)
            goto LABEL_19;
          goto LABEL_4;
        }
        v58 = v55;
        v59 = v91;
        v60 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
        v61 = v76;
        v60(v76, v58, v53);
        v62 = v77;
        v60(v77, v50, v53);
        v63 = v90;
        sub_23361D52C();
        v65 = fabs(v64);
        sub_23361D52C();
        v67 = fabs(v66);
        v68 = *(void (**)(char *, uint64_t))(v59 + 8);
        v68(v62, v53);
        v68(v61, v53);
        sub_233168608(v49, v51);
        v68(v63, v53);
        v37 = v83;
        v17 = v80;
        v34 = (uint64_t)v81;
        v36 = v51;
        if (v65 < v67)
        {
LABEL_19:
          sub_233168608(v34, &qword_256047600);
          result = sub_233168478((uint64_t)v17, v34, &qword_256047600);
          goto LABEL_5;
        }
LABEL_4:
        result = sub_233168608((uint64_t)v17, &qword_256047600);
LABEL_5:
        v31 = v85;
        if (v86 == ++v35)
        {
          a1 = v74;
          v14 = v87;
          goto LABEL_22;
        }
      }
      if (v52(v50, 1, v53) == 1)
      {
        v54 = sub_23361D5BC();
        sub_233168608(v84, v36);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v53);
        v37 = v83;
        v17 = v80;
        v34 = (uint64_t)v81;
        if ((v54 & 1) != 0)
          goto LABEL_19;
        goto LABEL_4;
      }
      goto LABEL_16;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    v71 = v34;
    v70 = v75;
    sub_233168478(v71, (uint64_t)v75, &qword_256047600);
    v69 = 0;
  }
  else
  {
    v69 = 1;
    v70 = v75;
  }
  v72 = v83;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v70, v69, 1, v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48))(v70, 1, v72) == 1)
  {
    result = sub_233168608((uint64_t)v70, &qword_25604FEC0);
    v73 = 0x7000000000000007;
  }
  else
  {
    v73 = *v70;
    result = sub_233168500((uint64_t)v70 + *(int *)(v72 + 48), type metadata accessor for Order.PriorityInfo);
  }
  *a1 = v73;
  return result;
}

uint64_t Order.PriorityInfo.init(_:updatedDate:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v6 = type metadata accessor for Order.PriorityInfo(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23361D634();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - v14;
  v16 = *a1;
  if ((v16 & 0x4000000000000000) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
    Order.PriorityInfo.init(_:updatedDate:)((void *)(v16 & 0xBFFFFFFFFFFFFFFFLL), (uint64_t)v13, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v17((char *)&v20 - v14, a2, v9);
    v17(v13, (uint64_t)v15, v9);
    if (v16 < 0)
      Order.PriorityInfo.init(_:updatedDate:)((id)(v16 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v13, (uint64_t)v8);
    else
      Order.PriorityInfo.init(_:updatedDate:)((id)v16, (uint64_t)v13, (uint64_t)v8);
    v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v15, v9);
    sub_233168580((uint64_t)v8, a3, type metadata accessor for Order.PriorityInfo);
    sub_2331B6B9C(v16);
    return ((uint64_t (*)(uint64_t, uint64_t))v19)(a2, v9);
  }
}

uint64_t sub_23343AD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.ContentItem(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256047710) + 48);
  sub_2331684BC(a1, a3, type metadata accessor for Order.ContentItem);
  sub_2331684BC(a1, (uint64_t)v12, type metadata accessor for Order.ContentItem);
  v14 = type metadata accessor for RawECommerceOrderContent(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + *(int *)(v14 + 48), v6);
  return Order.PriorityInfo.init(_:updatedDate:)((uint64_t)v12, v9, v13);
}

uint64_t Order.PriorityInfo.init(_:updatedDate:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t (*v38)();
  char *v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;

  v48 = a2;
  v46 = a3;
  v43 = type metadata accessor for Order.PriorityInfo(0);
  MEMORY[0x24BDAC7A8](v43);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Order.Return();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v44 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (uint64_t)&v41 - v9;
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v41 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - v17;
  v19 = type metadata accessor for Order.Fulfillment();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v41 - v23;
  v25 = type metadata accessor for Order.ContentItem(0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1;
  sub_2331684BC(a1, (uint64_t)v27, v28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = v45;
    sub_233168580((uint64_t)v27, v45, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
    v30 = v44;
    sub_2331684BC(v29, v44, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v31(v16, (uint64_t)v48, v10);
    LOBYTE(v29) = *(_BYTE *)(v30 + 8);
    v32 = v42;
    v31(v42, (uint64_t)v16, v10);
    v33 = v43;
    v34 = (uint64_t)&v5[*(int *)(v43 + 24)];
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v35(v34, 1, 1, v10);
    v5[*(int *)(v33 + 20)] = 0x90509080807uLL >> (8 * v29);
    sub_233168608(v34, (uint64_t *)&unk_254247DA0);
    v35(v34, 1, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v5, v32, v10);
    sub_233168580((uint64_t)v5, v46, type metadata accessor for Order.PriorityInfo);
    v36 = *(void (**)(char *, uint64_t))(v11 + 8);
    v36(v16, v10);
    sub_233168500(v30, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
    v36(v48, v10);
    sub_233168500(v47, type metadata accessor for Order.ContentItem);
    v37 = v45;
    v38 = type metadata accessor for Order.Return;
  }
  else
  {
    sub_233168580((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    sub_2331684BC((uint64_t)v24, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v39 = v48;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v48, v10);
    Order.PriorityInfo.init(_:updatedDate:)((uint64_t)v22, v18, v46);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v39, v10);
    sub_233168500(v47, type metadata accessor for Order.ContentItem);
    v37 = (uint64_t)v24;
    v38 = type metadata accessor for Order.Fulfillment;
  }
  return sub_233168500(v37, (uint64_t (*)(_QWORD))v38);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  char v59;

  v57 = a2;
  v55 = a3;
  v50 = type metadata accessor for Order.ShippingFulfillment();
  v4 = MEMORY[0x24BDAC7A8](v50);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (uint64_t)&v49 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v49 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t)&v49 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v51 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23361D634();
  v52 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v49 - v18;
  v20 = type metadata accessor for Order.PickupFulfillment();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v49 - v24;
  v26 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a1;
  sub_2331684BC(a1, (uint64_t)v28, v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    sub_2331684BC((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v30 = v52;
    v31 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v32 = v57;
    v31(v19, v57, v14);
    v58 = v23[8];
    v33 = v51;
    sub_2331686A0((uint64_t)&v23[*(int *)(v20 + 48)], v51, &qword_256043808);
    v34 = (uint64_t)&v23[*(int *)(v20 + 52)];
    v35 = v54;
    sub_2331686A0(v34, v54, (uint64_t *)&unk_254247DA0);
    v31(v17, v19, v14);
    Order.PriorityInfo.init(status:pickupWindow:pickedUpDate:updatedDate:)((unsigned __int8 *)&v58, v33, v35, (uint64_t)v17, v55);
    v36 = *(void (**)(char *, uint64_t))(v30 + 8);
    v36(v19, v14);
    sub_233168500((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v36(v32, v14);
    sub_233168500(v56, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v37 = (uint64_t)v25;
    v38 = type metadata accessor for Order.PickupFulfillment;
  }
  else
  {
    v39 = v53;
    sub_233168580((uint64_t)v28, v53, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    sub_2331684BC(v39, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v40 = v52;
    v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v41(v19, v57, v14);
    v59 = v6[40];
    v43 = v50;
    v42 = v51;
    sub_2331686A0((uint64_t)&v6[*(int *)(v50 + 52)], v51, &qword_256043808);
    v44 = v54;
    sub_2331686A0((uint64_t)&v6[*(int *)(v43 + 56)], v54, (uint64_t *)&unk_254247DA0);
    v45 = (uint64_t)&v6[*(int *)(v43 + 64)];
    v46 = v49;
    sub_2331686A0(v45, v49, (uint64_t *)&unk_254247DA0);
    v41(v17, v19, v14);
    Order.PriorityInfo.init(status:estimatedDeliveryWindow:deliveryDate:shippedDate:updatedDate:)((unsigned __int8 *)&v59, v42, v44, v46, (uint64_t)v17, v55);
    v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    v47(v19, v14);
    sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
    v47(v57, v14);
    sub_233168500(v56, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    v37 = v53;
    v38 = type metadata accessor for Order.ShippingFulfillment;
  }
  return sub_233168500(v37, (uint64_t (*)(_QWORD))v38);
}

uint64_t static ManagedOrder.ordersAreInIncreasingOrderByPriority(lhs:rhs:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;

  v32 = sub_23361D340();
  v4 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D634();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Order.PriorityInfo(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - v15;
  ManagedOrder.priority.getter((uint64_t)&v31 - v15);
  ManagedOrder.priority.getter((uint64_t)v14);
  if (_s10FinanceKit5OrderV12PriorityInfoV2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v14))
  {
    v17 = objc_msgSend(a1, sel_objectID);
    v18 = objc_msgSend(v17, sel_URIRepresentation);

    sub_23361D2D4();
    v19 = sub_23361D238();
    v21 = v20;
    v22 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23 = v32;
    v22(v6, v32);
    v24 = objc_msgSend(a2, sel_objectID);
    v25 = objc_msgSend(v24, sel_URIRepresentation);

    sub_23361D2D4();
    v26 = sub_23361D238();
    v28 = v27;
    v22(v6, v23);
    if (v19 == v26 && v21 == v28)
      v29 = 0;
    else
      v29 = sub_23361F224();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23361D5F8();
    v29 = Order.PriorityInfo.isHigherPriority(than:now:)((uint64_t)v14, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_233168500((uint64_t)v14, type metadata accessor for Order.PriorityInfo);
  sub_233168500((uint64_t)v16, type metadata accessor for Order.PriorityInfo);
  return v29 & 1;
}

uint64_t Order.PriorityInfo.init(_:updatedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v17 = a3;
  v5 = type metadata accessor for Order.PriorityInfo(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)(a1 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v13 = (uint64_t)&v7[*(int *)(v5 + 24)];
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  v7[*(int *)(v5 + 20)] = 0x90509080807uLL >> (8 * v12);
  sub_233168608(v13, (uint64_t *)&unk_254247DA0);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  sub_233168580((uint64_t)v7, v17, type metadata accessor for Order.PriorityInfo);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  unsigned __int8 v18;

  v17 = a3;
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_BYTE *)(a1 + 8);
  v15 = type metadata accessor for Order.PickupFulfillment();
  sub_2331686A0(a1 + *(int *)(v15 + 48), (uint64_t)v14, &qword_256043808);
  sub_2331686A0(a1 + *(int *)(v15 + 52), (uint64_t)v11, (uint64_t *)&unk_254247DA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  Order.PriorityInfo.init(status:pickupWindow:pickedUpDate:updatedDate:)(&v18, (uint64_t)v14, (uint64_t)v11, (uint64_t)v8, v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v20;
  unsigned __int8 v21;

  v20 = a3;
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v20 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_BYTE *)(a1 + 40);
  v18 = (int *)type metadata accessor for Order.ShippingFulfillment();
  sub_2331686A0(a1 + v18[13], (uint64_t)v17, &qword_256043808);
  sub_2331686A0(a1 + v18[14], (uint64_t)v14, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(a1 + v18[16], (uint64_t)v12, (uint64_t *)&unk_254247DA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  Order.PriorityInfo.init(status:estimatedDeliveryWindow:deliveryDate:shippedDate:updatedDate:)(&v21, (uint64_t)v17, (uint64_t)v14, (uint64_t)v12, (uint64_t)v8, v20);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
}

uint64_t Order.PriorityInfo.init(_:updatedDate:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v17 = a3;
  v5 = type metadata accessor for Order.PriorityInfo(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = ManagedOrderReturn.status.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v13 = (uint64_t)&v7[*(int *)(v5 + 24)];
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1, 1, v8);
  v7[*(int *)(v5 + 20)] = 0x90509080807uLL >> (8 * v12);
  sub_233168608(v13, (uint64_t *)&unk_254247DA0);
  v14(v13, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  sub_233168580((uint64_t)v7, v17, type metadata accessor for Order.PriorityInfo);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _BYTE v20[15];
  unsigned __int8 v21;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = ManagedOrderPickupFulfillment.status.getter();
  ManagedOrderPickupFulfillment.pickupWindow.getter(v15);
  v16 = objc_msgSend(a1, sel_pickedUpDate);
  if (v16)
  {
    v17 = v16;
    sub_23361D5EC();

    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, v18, 1, v6);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  Order.PriorityInfo.init(status:pickupWindow:pickedUpDate:updatedDate:)(&v21, (uint64_t)v15, (uint64_t)v12, (uint64_t)v9, a3);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  unsigned __int8 v26;

  v25 = a3;
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = ManagedOrderShippingFulfillment.status.getter();
  ManagedOrderShippingFulfillment.estimatedDeliveryWindow.getter(v17);
  v18 = objc_msgSend(a1, sel_deliveryDate);
  if (v18)
  {
    v19 = v18;
    sub_23361D5EC();

    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v20(v14, 0, 1, v5);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v20(v14, 1, 1, v5);
  }
  v21 = objc_msgSend(a1, sel_shippedDate);
  if (v21)
  {
    v22 = v21;
    sub_23361D5EC();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  v20(v12, v23, 1, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  Order.PriorityInfo.init(status:estimatedDeliveryWindow:deliveryDate:shippedDate:updatedDate:)(&v26, (uint64_t)v17, (uint64_t)v14, (uint64_t)v12, (uint64_t)v8, v25);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
}

uint64_t Order.PriorityInfo.init(status:pickupWindow:pickedUpDate:updatedDate:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a4;
  v47 = a2;
  v42 = a3;
  v7 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v7);
  v39 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Order.FulfillmentWindow(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v40 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v38 - v19;
  v21 = *a1;
  v43 = type metadata accessor for Order.PriorityInfo(0);
  v22 = *(int *)(v43 + 24);
  v45 = a5;
  v23 = a5 + v22;
  v24 = sub_23361D634();
  v41 = *(_QWORD *)(v24 - 8);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  v44 = v23;
  v25(v23, 1, 1, v24);
  if (((1 << v21) & 0x33) != 0)
  {
    sub_233168608(v42, (uint64_t *)&unk_254247DA0);
    sub_233168608(v47, &qword_256043808);
    v25((uint64_t)v20, 1, 1, v24);
    v26 = 0x90905040100uLL >> (8 * v21);
LABEL_3:
    v28 = v45;
    v27 = v46;
    v29 = v43;
    v30 = v44;
    v31 = v41;
    goto LABEL_4;
  }
  if (v21 != 2)
  {
    sub_233168608(v47, &qword_256043808);
    sub_233168478(v42, (uint64_t)v20, (uint64_t *)&unk_254247DA0);
    LOBYTE(v26) = 5;
    goto LABEL_3;
  }
  v33 = v47;
  sub_2331686A0(v47, (uint64_t)v15, &qword_256043808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_233168608(v42, (uint64_t *)&unk_254247DA0);
    sub_233168608(v33, &qword_256043808);
    sub_233168608((uint64_t)v15, &qword_256043808);
    v34 = 1;
    v28 = v45;
    v27 = v46;
    v29 = v43;
    v30 = v44;
    v31 = v41;
  }
  else
  {
    sub_2331684BC((uint64_t)v15, (uint64_t)v12, type metadata accessor for Order.FulfillmentWindow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v28 = v45;
    v27 = v46;
    v31 = v41;
    if (EnumCaseMultiPayload == 1)
    {
      v36 = v39;
      sub_233168580((uint64_t)v12, v39, type metadata accessor for TimeWindow);
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v40, v36, v24);
      sub_233168500(v36, type metadata accessor for TimeWindow);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v12, v24);
    }
    sub_233168608(v42, (uint64_t *)&unk_254247DA0);
    sub_233168608(v47, &qword_256043808);
    sub_233168500((uint64_t)v15, type metadata accessor for Order.FulfillmentWindow);
    v34 = 0;
    v29 = v43;
    v30 = v44;
  }
  v37 = (uint64_t)v40;
  v25((uint64_t)v40, v34, 1, v24);
  sub_233168478(v37, (uint64_t)v20, (uint64_t *)&unk_254247DA0);
  LOBYTE(v26) = 4;
LABEL_4:
  *(_BYTE *)(v28 + *(int *)(v29 + 20)) = v26;
  sub_23318C8A8((uint64_t)v20, v30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v28, v27, v24);
}

_BYTE *Order.StatusPriority.init(_:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = 0x90905040100uLL >> (8 * *result);
  return result;
}

{
  *a2 = 0x909060503020100uLL >> (8 * *result);
  return result;
}

{
  *a2 = 0x90509080807uLL >> (8 * *result);
  return result;
}

{
  *a2 = 0x90500u >> (8 * *result);
  return result;
}

void Order.PriorityInfo.init(status:estimatedDeliveryWindow:deliveryDate:shippedDate:updatedDate:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v25 = a5;
  v19[2] = a4;
  v19[3] = a3;
  v8 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v8);
  v19[1] = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.FulfillmentWindow(0);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = *a1;
  v15 = type metadata accessor for Order.PriorityInfo(0);
  v21 = a6;
  v22 = v15;
  v16 = a6 + *(int *)(v15 + 24);
  v17 = sub_23361D634();
  v20 = *(_QWORD *)(v17 - 8);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v23 = v16;
  v18(v16, 1, 1, v17);
  __asm { BR              X9 }
}

uint64_t sub_23343C8A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_233168608(*(_QWORD *)(v4 - 144), (uint64_t *)&unk_254247DA0);
  sub_233168608(*(_QWORD *)(v4 - 136), (uint64_t *)&unk_254247DA0);
  sub_233168608(*(_QWORD *)(v4 - 96), &qword_256043808);
  v3(v0, 1, 1, v1);
  v5 = *(_QWORD *)(v4 - 88);
  v7 = *(_QWORD *)(v4 - 128);
  v6 = *(_QWORD *)(v4 - 120);
  v8 = *(_QWORD *)(v4 - 104);
  *(_BYTE *)(v6 + *(int *)(*(_QWORD *)(v4 - 112) + 20)) = 0x909060503020100uLL >> (8 * v2);
  sub_23318C8A8(v0, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v1);
}

uint64_t Order.PriorityInfo.init(status:updatedDate:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *a1;
  v6 = type metadata accessor for Order.PriorityInfo(0);
  v7 = a3 + *(int *)(v6 + 24);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v10(v7, 1, 1, v8);
  *(_BYTE *)(a3 + *(int *)(v6 + 20)) = 0x90509080807uLL >> (8 * v5);
  sub_233168608(v7, (uint64_t *)&unk_254247DA0);
  v10(v7, 1, 1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a3, a2, v8);
}

{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *a1;
  v6 = type metadata accessor for Order.PriorityInfo(0);
  v7 = a3 + *(int *)(v6 + 24);
  v8 = sub_23361D634();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v10(v7, 1, 1, v8);
  *(_BYTE *)(a3 + *(int *)(v6 + 20)) = 0x90500u >> (8 * v5);
  sub_233168608(v7, (uint64_t *)&unk_254247DA0);
  v10(v7, 1, 1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a3, a2, v8);
}

uint64_t Order.StatusPriority.init(contentItem:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t result;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = type metadata accessor for Order.Return();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.PickupFulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.ShippingFulfillment();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Order.ContentItem(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233168580(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
    v16 = v6[8];
    result = sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
    v18 = 8 * v16;
    v19 = 0x90509080807;
  }
  else
  {
    sub_233168580(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
      v22 = v12[40];
      result = sub_233168500((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
      v21 = 0x909060503020100uLL >> (8 * v22);
      goto LABEL_7;
    }
    sub_233168580((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v20 = v9[8];
    result = sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.PickupFulfillment);
    v18 = 8 * v20;
    v19 = 0x90905040100;
  }
  v21 = v19 >> v18;
LABEL_7:
  *a2 = v21;
  return result;
}

void Order.StatusPriority.init(contentItem:)(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  id v4;
  char v5;
  char v6;
  unint64_t v7;
  id v8;
  char v9;
  unint64_t v10;
  id v11;
  unsigned __int8 v12;

  v3 = *a1;
  if ((*a1 & 0x4000000000000000) != 0)
  {
    v8 = (id)(v3 & 0xBFFFFFFFFFFFFFFFLL);
    v9 = ManagedOrderReturn.status.getter();
    sub_2331B6B9C(v3);
    sub_2331B6B9C(v3);
    v10 = 0x90509080807uLL >> (8 * v9);
  }
  else
  {
    if (v3 < 0)
    {
      v11 = (id)(v3 & 0x7FFFFFFFFFFFFFFFLL);
      v12 = ManagedOrderPickupFulfillment.status.getter();
      sub_2331B6B9C(v3);
      sub_2331B6B9C(v3);
      v6 = 8 * v12;
      v7 = 0x90905040100;
    }
    else
    {
      v4 = (id)v3;
      v5 = ManagedOrderShippingFulfillment.status.getter();
      sub_2331B6B9C(v3);
      sub_2331B6B9C(v3);
      v6 = 8 * v5;
      v7 = 0x909060503020100;
    }
    v10 = v7 >> v6;
  }
  *a2 = v10;
}

BOOL _s10FinanceKit5OrderV12PriorityInfoV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v28 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  if ((sub_23361D5E0() & 1) == 0)
    return 0;
  v29 = v7;
  v20 = type metadata accessor for Order.PriorityInfo(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v20 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v20 + 20)))
    return 0;
  v21 = v20;
  sub_2331686A0(a1 + *(int *)(v20 + 24), (uint64_t)v19, (uint64_t *)&unk_254247DA0);
  sub_2331686A0(a2 + *(int *)(v21 + 24), (uint64_t)v17, (uint64_t *)&unk_254247DA0);
  v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2331686A0((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_254247DA0);
  sub_2331686A0((uint64_t)v17, v22, (uint64_t *)&unk_254247DA0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
    if (v23(v22, 1, v4) == 1)
    {
      sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
      return 1;
    }
    goto LABEL_8;
  }
  sub_2331686A0((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_254247DA0);
  if (v23(v22, 1, v4) == 1)
  {
    sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_233168608((uint64_t)v10, &qword_256042DA0);
    return 0;
  }
  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v22, v4);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v25 = sub_23361E108();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v24, v4);
  sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
  v26(v14, v4);
  sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
  return (v25 & 1) != 0;
}

uint64_t _s10FinanceKit5OrderV11ContentItemO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v27;

  v4 = type metadata accessor for Order.Return();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Order.ContentItem(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050018);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_2331684BC(a1, (uint64_t)v19, type metadata accessor for Order.ContentItem);
  sub_2331684BC(a2, v20, type metadata accessor for Order.ContentItem);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v13, type metadata accessor for Order.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_233168580(v20, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
      v21 = _s10FinanceKit5OrderV6ReturnV2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v6);
      sub_233168500((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Order.Return);
      v22 = (uint64_t)v13;
      v23 = type metadata accessor for Order.Return;
LABEL_9:
      sub_233168500(v22, (uint64_t (*)(_QWORD))v23);
      sub_233168500((uint64_t)v19, type metadata accessor for Order.ContentItem);
      return v21 & 1;
    }
    v24 = type metadata accessor for Order.Return;
    v25 = (uint64_t)v13;
  }
  else
  {
    sub_2331684BC((uint64_t)v19, (uint64_t)v15, type metadata accessor for Order.ContentItem);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_233168580(v20, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      v21 = _s10FinanceKit5OrderV11FulfillmentO2eeoiySbAE_AEtFZ_0((uint64_t)v15, (uint64_t)v9);
      sub_233168500((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for Order.Fulfillment;
      goto LABEL_9;
    }
    v24 = type metadata accessor for Order.Fulfillment;
    v25 = (uint64_t)v15;
  }
  sub_233168500(v25, (uint64_t (*)(_QWORD))v24);
  sub_233168608((uint64_t)v19, &qword_256050018);
  v21 = 0;
  return v21 & 1;
}

uint64_t sub_23343D608(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a2;
  v3 = type metadata accessor for RawOrderPickupFulfillment();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v39 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v38 = (uint64_t)&v34 - v6;
  v44 = type metadata accessor for Order.Fulfillment();
  MEMORY[0x24BDAC7A8](v44);
  v46 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RawOrderShippingFulfillment();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v36 = (uint64_t)&v34 - v11;
  v43 = type metadata accessor for RawOrderFulfillment();
  v12 = *(_QWORD *)(v43 - 8);
  v13 = MEMORY[0x24BDAC7A8](v43);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v34 - v16;
  v18 = type metadata accessor for Order.ContentItem(0);
  v41 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  if (v21)
  {
    v47 = MEMORY[0x24BEE4AF8];
    sub_233273C94(0, v21, 0);
    v23 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v40 = *(_QWORD *)(v12 + 72);
    v35 = v15;
    do
    {
      sub_2331684BC(v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      sub_2331684BC((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v24 = v38;
        sub_233168580((uint64_t)v15, v38, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v25 = v39;
        sub_2331684BC(v24, v39, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
        v26 = v45;
        swift_retain();
        Order.PickupFulfillment.init(_:bundle:)(v25, v26, v46);
        sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
        v15 = v35;
        sub_233168500(v24, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderPickupFulfillment);
      }
      else
      {
        v27 = v36;
        sub_233168580((uint64_t)v15, v36, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v28 = v37;
        sub_2331684BC(v27, v37, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
        v29 = v45;
        swift_retain();
        Order.ShippingFulfillment.init(_:bundle:)(v28, v29, v46);
        sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderFulfillment);
        sub_233168500(v27, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
      }
      v30 = v46;
      swift_storeEnumTagMultiPayload();
      sub_233168580(v30, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Order.Fulfillment);
      swift_storeEnumTagMultiPayload();
      v22 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_233273C94(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v47;
      }
      v32 = *(_QWORD *)(v22 + 16);
      v31 = *(_QWORD *)(v22 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_233273C94(v31 > 1, v32 + 1, 1);
        v22 = v47;
      }
      *(_QWORD *)(v22 + 16) = v32 + 1;
      sub_233168580((uint64_t)v20, v22+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v32, type metadata accessor for Order.ContentItem);
      v23 += v40;
      --v21;
    }
    while (v21);
  }
  return v22;
}

uint64_t sub_23343DA08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = type metadata accessor for RawOrderReturn();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Order.ContentItem(0);
  v9 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (v12)
  {
    v18[1] = v2;
    v21 = MEMORY[0x24BEE4AF8];
    sub_233273C94(0, v12, 0);
    v13 = v21;
    v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v19 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_2331684BC(v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturn);
      swift_retain();
      Order.Return.init(_:bundle:)((uint64_t)v8, a2, (uint64_t)v11);
      swift_storeEnumTagMultiPayload();
      v21 = v13;
      v16 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_233273C94(v15 > 1, v16 + 1, 1);
        v13 = v21;
      }
      *(_QWORD *)(v13 + 16) = v16 + 1;
      sub_233168580((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v16, type metadata accessor for Order.ContentItem);
      v14 += v19;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_23343DBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23343AD98(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t type metadata accessor for Order.PriorityInfo(uint64_t a1)
{
  return sub_233177414(a1, qword_25604FFD8);
}

uint64_t type metadata accessor for Order.ContentItem(uint64_t a1)
{
  return sub_233177414(a1, qword_25604FF48);
}

uint64_t sub_23343DC08(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_2332741AC(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v7 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      v9 = (id)(v6 & 0x7FFFFFFFFFFFFFFFLL);
      if (v7 >= v8 >> 1)
        sub_2332741AC(v8 > 1, v7 + 1, 1);
      *(_QWORD *)(v11 + 16) = v7 + 1;
      *(_QWORD *)(v11 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23343DCD8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v10 = MEMORY[0x24BEE4AF8];
    result = sub_2332741AC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v10;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x234933120](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = (unint64_t)v6;
      v9 = *(_QWORD *)(v10 + 16);
      v8 = *(_QWORD *)(v10 + 24);
      if (v9 >= v8 >> 1)
        sub_2332741AC(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v10 + 16) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9 + 32) = v7 | 0x4000000000000000;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23343DE18(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  int64_t v30;
  uint64_t result;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void *v47;
  unsigned int v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v57;
  id v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  __int16 v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;

  v93 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v7);
  v81 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for Order.PriorityInfo(0);
  v9 = MEMORY[0x24BDAC7A8](v83);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v85 = (uint64_t)&v78 - v12;
  v88 = sub_23361D634();
  v94 = *(_QWORD *)(v88 - 8);
  v13 = MEMORY[0x24BDAC7A8](v88);
  v84 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v80 = (char *)&v78 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v78 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v92 = (char *)&v78 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v78 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v78 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256047600);
  v90 = *(_QWORD *)(v27 - 8);
  v91 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (uint64_t *)((char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v30)
  {
    v79 = v6;
    v78 = v2;
    v101 = MEMORY[0x24BEE4AF8];
    sub_233274180(0, v30, 0);
    v32 = (uint64_t *)(a1 + 32);
    v97 = v101;
    v33 = v88;
    v82 = v19;
    v86 = v29;
    v87 = v24;
    v89 = v26;
    do
    {
      v34 = *v32;
      v95 = (uint64_t)v29 + *(int *)(v91 + 48);
      v96 = v32 + 1;
      *v29 = v34;
      sub_2331B6B6C(v34);
      sub_2331B6B6C(v34);
      sub_2331B6B6C(v34);
      v35 = objc_msgSend(v93, sel_updatedDate);
      sub_23361D5EC();

      if ((v34 & 0x4000000000000000) != 0)
      {
        v42 = v11;
        v43 = v83;
        v44 = v33;
        v45 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
        v46 = v92;
        v45(v92, v26, v44);
        v47 = (void *)sub_23361E12C();
        objc_msgSend((id)(v34 & 0xBFFFFFFFFFFFFFFFLL), sel_willAccessValueForKey_, v47);

        v48 = objc_msgSend((id)(v34 & 0xBFFFFFFFFFFFFFFFLL), sel_statusValue);
        v49 = (void *)sub_23361E12C();
        objc_msgSend((id)(v34 & 0xBFFFFFFFFFFFFFFFLL), sel_didAccessValueForKey_, v49);

        switch(v48)
        {
          case 0u:
            v50 = v82;
            v65 = v46;
            v33 = v88;
            v45(v82, v65, v88);
            v52 = v43;
            v66 = *(int *)(v43 + 24);
            v11 = v42;
            v54 = (uint64_t)&v42[v66];
            v55 = v94;
            v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
            v56(v54, 1, 1, v33);
            v57 = 7;
            break;
          case 1u:
          case 2u:
            v50 = v82;
            v51 = v46;
            v33 = v88;
            v45(v82, v51, v88);
            v52 = v43;
            v53 = *(int *)(v43 + 24);
            v11 = v42;
            v54 = (uint64_t)&v42[v53];
            v55 = v94;
            v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
            v56(v54, 1, 1, v33);
            v57 = 8;
            break;
          case 3u:
          case 5u:
            v50 = v82;
            v63 = v46;
            v33 = v88;
            v45(v82, v63, v88);
            v52 = v43;
            v64 = *(int *)(v43 + 24);
            v11 = v42;
            v54 = (uint64_t)&v42[v64];
            v55 = v94;
            v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
            v56(v54, 1, 1, v33);
            v57 = 9;
            break;
          case 4u:
            v50 = v82;
            v67 = v46;
            v33 = v88;
            v45(v82, v67, v88);
            v52 = v43;
            v68 = *(int *)(v43 + 24);
            v11 = v42;
            v54 = (uint64_t)&v42[v68];
            v55 = v94;
            v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
            v56(v54, 1, 1, v33);
            v57 = 5;
            break;
          default:
            v99 = 0;
            v100 = 0xE000000000000000;
            sub_23361ED98();
            swift_bridgeObjectRelease();
            v99 = 0xD000000000000020;
            v100 = 0x8000000233675440;
            v98 = v48;
            sub_23361F1D0();
            sub_23361E27C();
            swift_bridgeObjectRelease();
            sub_23361EF24();
            __break(1u);
            JUMPOUT(0x23343E5F4);
        }
        v11[*(int *)(v52 + 20)] = v57;
        sub_233168608(v54, (uint64_t *)&unk_254247DA0);
        v56(v54, 1, 1, v33);
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v11, v50, v33);
        sub_233168580((uint64_t)v11, v95, type metadata accessor for Order.PriorityInfo);
        sub_2331B6B9C(v34);
        v41 = *(void (**)(char *, uint64_t))(v55 + 8);
        v41(v92, v33);
        v29 = v86;
        v24 = v87;
      }
      else
      {
        v36 = v94;
        v37 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
        v37(v24, v26, v33);
        if (v34 < 0)
        {
          v37(v80, v24, v33);
          v58 = (id)(v34 & 0x7FFFFFFFFFFFFFFFLL);
          LOBYTE(v99) = ManagedOrderPickupFulfillment.status.getter();
          ManagedOrderPickupFulfillment.pickupWindow.getter(v81);
          v59 = objc_msgSend(v58, sel_pickedUpDate);
          if (v59)
          {
            v60 = v59;
            v61 = (uint64_t)v79;
            sub_23361D5EC();

            v62 = 0;
          }
          else
          {
            v62 = 1;
            v61 = (uint64_t)v79;
          }
          v69 = v94;
          v70 = v88;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v61, v62, 1, v88);
          v71 = (uint64_t)v84;
          v72 = v80;
          v37(v84, v80, v70);
          v40 = v85;
          v73 = v61;
          v33 = v70;
          Order.PriorityInfo.init(status:pickupWindow:pickedUpDate:updatedDate:)((unsigned __int8 *)&v99, (uint64_t)v81, v73, v71, v85);
          sub_2331B6B9C(v34);
          v41 = *(void (**)(char *, uint64_t))(v69 + 8);
          v41(v72, v33);
          v29 = v86;
          v24 = v87;
          v41(v87, v33);
        }
        else
        {
          v38 = (uint64_t)v84;
          v37(v84, v24, v33);
          v39 = (id)v34;
          v40 = v85;
          Order.PriorityInfo.init(_:updatedDate:)(v39, v38, v85);
          v41 = *(void (**)(char *, uint64_t))(v36 + 8);
          v41(v24, v33);
        }
        sub_233168580(v40, v95, type metadata accessor for Order.PriorityInfo);
        sub_2331B6B9C(v34);
      }
      v26 = v89;
      v41(v89, v33);
      sub_2331B6B9C(v34);
      v74 = v97;
      v101 = v97;
      v76 = *(_QWORD *)(v97 + 16);
      v75 = *(_QWORD *)(v97 + 24);
      if (v76 >= v75 >> 1)
      {
        sub_233274180(v75 > 1, v76 + 1, 1);
        v74 = v101;
      }
      *(_QWORD *)(v74 + 16) = v76 + 1;
      v77 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      v97 = v74;
      sub_233168478((uint64_t)v29, v74 + v77 + *(_QWORD *)(v90 + 72) * v76, &qword_256047600);
      --v30;
      v32 = v96;
    }
    while (v30);
    return v97;
  }
  return result;
}

unint64_t sub_23343E610()
{
  unint64_t result;

  result = qword_25604FEC8;
  if (!qword_25604FEC8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.StatusPriority, &type metadata for Order.StatusPriority);
    atomic_store(result, (unint64_t *)&qword_25604FEC8);
  }
  return result;
}

uint64_t sub_23343E654()
{
  return sub_233167C58(&qword_25604FED0, type metadata accessor for Order.PriorityInfo, (uint64_t)&protocol conformance descriptor for Order.PriorityInfo);
}

uint64_t _s11ContentItemOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v122)(char *, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  char *v130;
  uint64_t v131;
  uint64_t v133;
  void *v134;
  int *v135;
  void *__dst;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  void *__dsta;
  int *__dstb;
  int *v140;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      v6 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v6;
      v7 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v7;
      v8 = type metadata accessor for Order.Return();
      v9 = *(int *)(v8 + 32);
      __dst = (void *)(a1 + v9);
      v140 = (int *)v8;
      v10 = (char *)a2 + v9;
      v11 = sub_23361D634();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      v33 = v140[9];
      v34 = (void *)(a1 + v33);
      v35 = (char *)a2 + v33;
      if (v13((char *)a2 + v33, 1, v11))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v34, v35, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
      }
      v37 = v140[10];
      v38 = (void *)(a1 + v37);
      v39 = (char *)a2 + v37;
      if (v13((char *)a2 + v37, 1, v11))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v38, v39, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v38, 0, 1, v11);
      }
      v41 = v140[11];
      v42 = (_QWORD *)(a1 + v41);
      v43 = (uint64_t *)((char *)a2 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      v45 = v140[12];
      v46 = (_QWORD *)(a1 + v45);
      v47 = (uint64_t *)((char *)a2 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = v140[13];
      v50 = (_QWORD *)(a1 + v49);
      v51 = (uint64_t *)((char *)a2 + v49);
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      v53 = v140[14];
      v54 = (_QWORD *)(a1 + v53);
      v55 = (uint64_t *)((char *)a2 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = v140[15];
      __dsta = (void *)(a1 + v57);
      v58 = (char *)a2 + v57;
      v59 = sub_23361D340();
      v60 = *(_QWORD *)(v59 - 8);
      v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v61(v58, 1, v59))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dsta, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v60 + 16))(__dsta, v58, v59);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(__dsta, 0, 1, v59);
      }
      v63 = v140[16];
      v64 = (_QWORD *)(a1 + v63);
      v65 = (uint64_t *)((char *)a2 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for Order.Fulfillment();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
        v17 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v17;
        v18 = (void *)a2[4];
        *(_QWORD *)(a1 + 32) = v18;
        v19 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v18;
        if (v19)
        {
          v21 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v21;
          *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
          *(_QWORD *)(a1 + 64) = a2[8];
          *(_QWORD *)(a1 + 72) = v19;
          v22 = a2[11];
          *(_QWORD *)(a1 + 80) = a2[10];
          *(_QWORD *)(a1 + 88) = v22;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v67 = *(_OWORD *)(a2 + 7);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
          *(_OWORD *)(a1 + 56) = v67;
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
          *(_QWORD *)(a1 + 88) = a2[11];
        }
        v68 = a2[13];
        *(_QWORD *)(a1 + 96) = a2[12];
        *(_QWORD *)(a1 + 104) = v68;
        v69 = a2[15];
        *(_QWORD *)(a1 + 112) = a2[14];
        *(_QWORD *)(a1 + 120) = v69;
        v70 = (void *)a2[16];
        *(_QWORD *)(a1 + 128) = v70;
        __dstb = (int *)type metadata accessor for Order.PickupFulfillment();
        v71 = __dstb[12];
        v72 = (char *)(a1 + v71);
        v73 = (char *)a2 + v71;
        v74 = type metadata accessor for Order.FulfillmentWindow(0);
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v77 = v70;
        if (v76(v73, 1, v74))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          v79 = __dstb;
        }
        else
        {
          v95 = swift_getEnumCaseMultiPayload();
          v96 = sub_23361D634();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v72, v73, v96);
          v79 = __dstb;
          if (v95 == 1)
          {
            v97 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
            v98 = &v72[v97];
            v99 = &v73[v97];
            v100 = sub_23361CD40();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v98, v99, v100);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        v107 = v79[13];
        v108 = (void *)(a1 + v107);
        v109 = (char *)a2 + v107;
        v110 = sub_23361D634();
        v111 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
        {
          v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v111 + 16))(v108, v109, v110);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v110);
        }
        v113 = v79[14];
        v114 = (_QWORD *)(a1 + v113);
        v115 = (uint64_t *)((char *)a2 + v113);
        v116 = v115[1];
        *v114 = *v115;
        v114[1] = v116;
        swift_bridgeObjectRetain();
      }
      else
      {
        v23 = a2[2];
        *(_QWORD *)(a1 + 8) = a2[1];
        *(_QWORD *)(a1 + 16) = v23;
        v24 = a2[4];
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_QWORD *)(a1 + 32) = v24;
        *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
        v25 = a2[7];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = v25;
        v26 = a2[9];
        *(_QWORD *)(a1 + 64) = a2[8];
        *(_QWORD *)(a1 + 72) = v26;
        v27 = a2[11];
        *(_QWORD *)(a1 + 80) = a2[10];
        *(_QWORD *)(a1 + 88) = v27;
        v28 = type metadata accessor for Order.ShippingFulfillment();
        v29 = *(int *)(v28 + 44);
        v134 = (void *)(a1 + v29);
        v135 = (int *)v28;
        v30 = (char *)a2 + v29;
        v31 = sub_23361D340();
        v133 = *(_QWORD *)(v31 - 8);
        __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__dstc(v30, 1, v31))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v134, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v133 + 16))(v134, v30, v31);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v134, 0, 1, v31);
        }
        v80 = v135[12];
        v81 = a1 + v80;
        v82 = (uint64_t)a2 + v80;
        v83 = *(_QWORD *)(v82 + 8);
        if (v83 == 1)
        {
          v84 = *(_OWORD *)(v82 + 16);
          *(_OWORD *)v81 = *(_OWORD *)v82;
          *(_OWORD *)(v81 + 16) = v84;
          *(_OWORD *)(v81 + 32) = *(_OWORD *)(v82 + 32);
          *(_QWORD *)(v81 + 48) = *(_QWORD *)(v82 + 48);
        }
        else
        {
          *(_QWORD *)v81 = *(_QWORD *)v82;
          *(_QWORD *)(v81 + 8) = v83;
          v85 = *(_QWORD *)(v82 + 24);
          *(_QWORD *)(v81 + 16) = *(_QWORD *)(v82 + 16);
          *(_QWORD *)(v81 + 24) = v85;
          v86 = *(_QWORD *)(v82 + 40);
          *(_QWORD *)(v81 + 32) = *(_QWORD *)(v82 + 32);
          *(_QWORD *)(v81 + 40) = v86;
          v87 = *(void **)(v82 + 48);
          *(_QWORD *)(v81 + 48) = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v88 = v87;
        }
        v89 = v135[13];
        v90 = (char *)(a1 + v89);
        v91 = (char *)a2 + v89;
        v92 = type metadata accessor for Order.FulfillmentWindow(0);
        v93 = *(_QWORD *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
        {
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          v101 = swift_getEnumCaseMultiPayload();
          v102 = sub_23361D634();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v90, v91, v102);
          if (v101 == 1)
          {
            v103 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
            v104 = &v90[v103];
            v105 = &v91[v103];
            v106 = sub_23361CD40();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        }
        v117 = v135[14];
        v118 = (void *)(a1 + v117);
        v119 = (char *)a2 + v117;
        v120 = sub_23361D634();
        v121 = *(_QWORD *)(v120 - 8);
        v122 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
        if (v122(v119, 1, v120))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
        }
        v124 = v135[15];
        v125 = (_QWORD *)(a1 + v124);
        v126 = (uint64_t *)((char *)a2 + v124);
        v127 = v126[1];
        *v125 = *v126;
        v125[1] = v127;
        v128 = v135[16];
        v129 = (void *)(a1 + v128);
        v130 = (char *)a2 + v128;
        swift_bridgeObjectRetain();
        if (v122(v130, 1, v120))
        {
          v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v121 + 16))(v129, v130, v120);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v129, 0, 1, v120);
        }
        *(_BYTE *)(a1 + v135[17]) = *((_BYTE *)a2 + v135[17]);
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s11ContentItemOwxx(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = (int *)type metadata accessor for Order.Return();
    v3 = a1 + v2[8];
    v4 = sub_23361D634();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = a1 + v2[9];
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    v8 = a1 + v2[10];
    if (!v6(v8, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = a1 + v2[15];
    v10 = sub_23361D340();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    return swift_bridgeObjectRelease();
  }
  type metadata accessor for Order.Fulfillment();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(a1 + 72))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v13 = type metadata accessor for Order.PickupFulfillment();
    v14 = a1 + *(int *)(v13 + 48);
    v15 = type metadata accessor for Order.FulfillmentWindow(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v16 = swift_getEnumCaseMultiPayload();
      v17 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v14, v17);
      if (v16 == 1)
      {
        v18 = v14 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v19 = sub_23361CD40();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
    }
    v20 = a1 + *(int *)(v13 + 52);
    v21 = sub_23361D634();
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = (int *)type metadata accessor for Order.ShippingFulfillment();
  v25 = a1 + v24[11];
  v26 = sub_23361D340();
  v27 = *(_QWORD *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  v28 = a1 + v24[12];
  if (*(_QWORD *)(v28 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  v29 = a1 + v24[13];
  v30 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30))
  {
    v31 = swift_getEnumCaseMultiPayload();
    v32 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v29, v32);
    if (v31 == 1)
    {
      v33 = v29 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v34 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
    }
  }
  v35 = a1 + v24[14];
  v36 = sub_23361D634();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (!v38(v35, 1, v36))
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  swift_bridgeObjectRelease();
  v39 = a1 + v24[16];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v38)(v39, 1, v36);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v39, v36);
  return result;
}

uint64_t _s11ContentItemOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(const void *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  const void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  const void *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(const void *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  const void *v127;
  uint64_t v128;
  uint64_t v130;
  void *__dst;
  int *v132;
  unsigned int (*v133)(const void *, uint64_t, uint64_t);
  void *v134;
  int *v135;
  int *v136;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v5 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    v136 = (int *)type metadata accessor for Order.Return();
    v6 = v136[8];
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = sub_23361D634();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v30 = v136[9];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    if (v11((const void *)(a2 + v30), 1, v9))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    v34 = v136[10];
    v35 = (void *)(a1 + v34);
    v36 = (const void *)(a2 + v34);
    if (v11((const void *)(a2 + v34), 1, v9))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    v38 = v136[11];
    v39 = (_QWORD *)(a1 + v38);
    v40 = (_QWORD *)(a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = v136[12];
    v43 = (_QWORD *)(a1 + v42);
    v44 = (_QWORD *)(a2 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = v136[13];
    v47 = (_QWORD *)(a1 + v46);
    v48 = (_QWORD *)(a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    v50 = v136[14];
    v51 = (_QWORD *)(a1 + v50);
    v52 = (_QWORD *)(a2 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = v136[15];
    v134 = (void *)(a1 + v54);
    v55 = (const void *)(a2 + v54);
    v56 = sub_23361D340();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58(v55, 1, v56))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v134, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v134, v55, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v134, 0, 1, v56);
    }
    v60 = v136[16];
    v61 = (_QWORD *)(a1 + v60);
    v62 = (_QWORD *)(a2 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for Order.Fulfillment();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v14 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v14;
      v15 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v15;
      v16 = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v15;
      if (v16)
      {
        v18 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v18;
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = v16;
        v19 = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v64 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = v64;
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      }
      v65 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v65;
      v66 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v66;
      v67 = *(void **)(a2 + 128);
      *(_QWORD *)(a1 + 128) = v67;
      v135 = (int *)type metadata accessor for Order.PickupFulfillment();
      v68 = v135[12];
      v69 = (char *)(a1 + v68);
      v70 = (char *)(a2 + v68);
      v71 = type metadata accessor for Order.FulfillmentWindow(0);
      v72 = *(_QWORD *)(v71 - 8);
      v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v74 = v67;
      if (v73(v70, 1, v71))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        v76 = v135;
      }
      else
      {
        v92 = swift_getEnumCaseMultiPayload();
        v93 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v69, v70, v93);
        if (v92 == 1)
        {
          v94 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v95 = &v69[v94];
          v96 = &v70[v94];
          v97 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v95, v96, v97);
        }
        v76 = v135;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
      }
      v104 = v76[13];
      v105 = (void *)(a1 + v104);
      v106 = (const void *)(a2 + v104);
      v107 = sub_23361D634();
      v108 = *(_QWORD *)(v107 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v105, v106, v107);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
      }
      v110 = v76[14];
      v111 = (_QWORD *)(a1 + v110);
      v112 = (_QWORD *)(a2 + v110);
      v113 = v112[1];
      *v111 = *v112;
      v111[1] = v113;
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v20;
      v21 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v21;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v22 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v22;
      v23 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v23;
      v24 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v24;
      v25 = type metadata accessor for Order.ShippingFulfillment();
      v26 = *(int *)(v25 + 44);
      __dst = (void *)(a1 + v26);
      v132 = (int *)v25;
      v27 = (const void *)(a2 + v26);
      v28 = sub_23361D340();
      v130 = *(_QWORD *)(v28 - 8);
      v133 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v130 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v133(v27, 1, v28))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v130 + 16))(__dst, v27, v28);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(__dst, 0, 1, v28);
      }
      v77 = v132[12];
      v78 = a1 + v77;
      v79 = a2 + v77;
      v80 = *(_QWORD *)(v79 + 8);
      if (v80 == 1)
      {
        v81 = *(_OWORD *)(v79 + 16);
        *(_OWORD *)v78 = *(_OWORD *)v79;
        *(_OWORD *)(v78 + 16) = v81;
        *(_OWORD *)(v78 + 32) = *(_OWORD *)(v79 + 32);
        *(_QWORD *)(v78 + 48) = *(_QWORD *)(v79 + 48);
      }
      else
      {
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *(_QWORD *)(v78 + 8) = v80;
        v82 = *(_QWORD *)(v79 + 24);
        *(_QWORD *)(v78 + 16) = *(_QWORD *)(v79 + 16);
        *(_QWORD *)(v78 + 24) = v82;
        v83 = *(_QWORD *)(v79 + 40);
        *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
        *(_QWORD *)(v78 + 40) = v83;
        v84 = *(void **)(v79 + 48);
        *(_QWORD *)(v78 + 48) = v84;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v85 = v84;
      }
      v86 = v132[13];
      v87 = (char *)(a1 + v86);
      v88 = (char *)(a2 + v86);
      v89 = type metadata accessor for Order.FulfillmentWindow(0);
      v90 = *(_QWORD *)(v89 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        v98 = swift_getEnumCaseMultiPayload();
        v99 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v87, v88, v99);
        if (v98 == 1)
        {
          v100 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v101 = &v87[v100];
          v102 = &v88[v100];
          v103 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      v114 = v132[14];
      v115 = (void *)(a1 + v114);
      v116 = (const void *)(a2 + v114);
      v117 = sub_23361D634();
      v118 = *(_QWORD *)(v117 - 8);
      v119 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v118 + 48);
      if (v119(v116, 1, v117))
      {
        v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v118 + 16))(v115, v116, v117);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
      }
      v121 = v132[15];
      v122 = (_QWORD *)(a1 + v121);
      v123 = (_QWORD *)(a2 + v121);
      v124 = v123[1];
      *v122 = *v123;
      v122[1] = v124;
      v125 = v132[16];
      v126 = (void *)(a1 + v125);
      v127 = (const void *)(a2 + v125);
      swift_bridgeObjectRetain();
      if (v119(v127, 1, v117))
      {
        v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v118 + 16))(v126, v127, v117);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v126, 0, 1, v117);
      }
      *(_BYTE *)(a1 + v132[17]) = *(_BYTE *)(a2 + v132[17]);
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s11ContentItemOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  uint64_t v10;
  int EnumCaseMultiPayload;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(const void *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  id v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  void *v68;
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  void *v98;
  const void *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(const void *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void *v108;
  const void *v109;
  uint64_t v110;
  uint64_t v112;
  void *v113;
  int *v114;
  void *__dst;
  unsigned int (*__dstc)(const void *, uint64_t, uint64_t);
  void *__dsta;
  int *__dstb;
  int *v119;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Order.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v4 = type metadata accessor for Order.Return();
      v5 = *(int *)(v4 + 32);
      __dst = (void *)(a1 + v5);
      v119 = (int *)v4;
      v6 = (const void *)(a2 + v5);
      v7 = sub_23361D634();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(__dst, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      v20 = v119[9];
      v21 = (void *)(a1 + v20);
      v22 = (const void *)(a2 + v20);
      if (v9((const void *)(a2 + v20), 1, v7))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v21, v22, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
      }
      v24 = v119[10];
      v25 = (void *)(a1 + v24);
      v26 = (const void *)(a2 + v24);
      if (v9((const void *)(a2 + v24), 1, v7))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v25, v26, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
      }
      v28 = v119[11];
      v29 = (_QWORD *)(a1 + v28);
      v30 = (_QWORD *)(a2 + v28);
      *v29 = *v30;
      v29[1] = v30[1];
      v31 = v119[12];
      v32 = (_QWORD *)(a1 + v31);
      v33 = (_QWORD *)(a2 + v31);
      *v32 = *v33;
      v32[1] = v33[1];
      v34 = v119[13];
      v35 = (_QWORD *)(a1 + v34);
      v36 = (_QWORD *)(a2 + v34);
      *v35 = *v36;
      v35[1] = v36[1];
      v37 = v119[14];
      v38 = (_QWORD *)(a1 + v37);
      v39 = (_QWORD *)(a2 + v37);
      *v38 = *v39;
      v38[1] = v39[1];
      v40 = v119[15];
      __dsta = (void *)(a1 + v40);
      v41 = (const void *)(a2 + v40);
      v42 = sub_23361D340();
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44(v41, 1, v42))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(__dsta, v41, v42);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dsta, 0, 1, v42);
      }
      v46 = v119[16];
      v47 = (_QWORD *)(a1 + v46);
      v48 = (_QWORD *)(a2 + v46);
      *v47 = *v48;
      v47[1] = v48[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for Order.Fulfillment();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        v12 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v12;
        v13 = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = v12;
        if (v13)
        {
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v49 = *(_OWORD *)(a2 + 40);
          v50 = *(_OWORD *)(a2 + 56);
          v51 = *(_OWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 56) = v50;
          *(_OWORD *)(a1 + 72) = v51;
          *(_OWORD *)(a1 + 40) = v49;
        }
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        v52 = *(void **)(a2 + 128);
        *(_QWORD *)(a1 + 128) = v52;
        __dstb = (int *)type metadata accessor for Order.PickupFulfillment();
        v53 = __dstb[12];
        v54 = (char *)(a1 + v53);
        v55 = (char *)(a2 + v53);
        v56 = type metadata accessor for Order.FulfillmentWindow(0);
        v57 = *(_QWORD *)(v56 - 8);
        v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v59 = v52;
        if (v58(v55, 1, v56))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
          v61 = __dstb;
        }
        else
        {
          v76 = swift_getEnumCaseMultiPayload();
          v77 = sub_23361D634();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v54, v55, v77);
          if (v76 == 1)
          {
            v78 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
            v79 = &v54[v78];
            v80 = &v55[v78];
            v81 = sub_23361CD40();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
          }
          v61 = __dstb;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        }
        v88 = v61[13];
        v89 = (void *)(a1 + v88);
        v90 = (const void *)(a2 + v88);
        v91 = sub_23361D634();
        v92 = *(_QWORD *)(v91 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
        {
          v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v92 + 16))(v89, v90, v91);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
        }
        v94 = v61[14];
        v95 = (_QWORD *)(a1 + v94);
        v96 = (_QWORD *)(a2 + v94);
        *v95 = *v96;
        v95[1] = v96[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        v15 = type metadata accessor for Order.ShippingFulfillment();
        v16 = *(int *)(v15 + 44);
        v113 = (void *)(a1 + v16);
        v114 = (int *)v15;
        v17 = (const void *)(a2 + v16);
        v18 = sub_23361D340();
        v112 = *(_QWORD *)(v18 - 8);
        __dstc = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__dstc(v17, 1, v18))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v113, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v112 + 16))(v113, v17, v18);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v113, 0, 1, v18);
        }
        v62 = v114[12];
        v63 = a1 + v62;
        v64 = (__int128 *)(a2 + v62);
        if (*((_QWORD *)v64 + 1) == 1)
        {
          v65 = *v64;
          v66 = v64[1];
          v67 = v64[2];
          *(_QWORD *)(v63 + 48) = *((_QWORD *)v64 + 6);
          *(_OWORD *)(v63 + 16) = v66;
          *(_OWORD *)(v63 + 32) = v67;
          *(_OWORD *)v63 = v65;
        }
        else
        {
          *(_QWORD *)v63 = *(_QWORD *)v64;
          *(_QWORD *)(v63 + 8) = *((_QWORD *)v64 + 1);
          *(_QWORD *)(v63 + 16) = *((_QWORD *)v64 + 2);
          *(_QWORD *)(v63 + 24) = *((_QWORD *)v64 + 3);
          *(_QWORD *)(v63 + 32) = *((_QWORD *)v64 + 4);
          *(_QWORD *)(v63 + 40) = *((_QWORD *)v64 + 5);
          v68 = (void *)*((_QWORD *)v64 + 6);
          *(_QWORD *)(v63 + 48) = v68;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v69 = v68;
        }
        v70 = v114[13];
        v71 = (char *)(a1 + v70);
        v72 = (char *)(a2 + v70);
        v73 = type metadata accessor for Order.FulfillmentWindow(0);
        v74 = *(_QWORD *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
        {
          v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          v82 = swift_getEnumCaseMultiPayload();
          v83 = sub_23361D634();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v71, v72, v83);
          if (v82 == 1)
          {
            v84 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
            v85 = &v71[v84];
            v86 = &v72[v84];
            v87 = sub_23361CD40();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        }
        v97 = v114[14];
        v98 = (void *)(a1 + v97);
        v99 = (const void *)(a2 + v97);
        v100 = sub_23361D634();
        v101 = *(_QWORD *)(v100 - 8);
        v102 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v101 + 48);
        if (v102(v99, 1, v100))
        {
          v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v101 + 16))(v98, v99, v100);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        }
        v104 = v114[15];
        v105 = (_QWORD *)(a1 + v104);
        v106 = (_QWORD *)(a2 + v104);
        *v105 = *v106;
        v105[1] = v106[1];
        v107 = v114[16];
        v108 = (void *)(a1 + v107);
        v109 = (const void *)(a2 + v107);
        swift_bridgeObjectRetain();
        if (v102(v109, 1, v100))
        {
          v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v101 + 16))(v108, v109, v100);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v108, 0, 1, v100);
        }
        *(_BYTE *)(a1 + v114[17]) = *(_BYTE *)(a2 + v114[17]);
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s11ContentItemOwtk(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  int *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(const void *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  uint64_t v82;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v4 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v4;
    v5 = (int *)type metadata accessor for Order.Return();
    v6 = v5[8];
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = sub_23361D634();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v30 = v5[9];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    if (v11((const void *)(a2 + v30), 1, v9))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v31, v32, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    v34 = v5[10];
    v35 = (void *)(a1 + v34);
    v36 = (const void *)(a2 + v34);
    if (v11((const void *)(a2 + v34), 1, v9))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    *(_OWORD *)(a1 + v5[11]) = *(_OWORD *)(a2 + v5[11]);
    *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
    *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
    *(_OWORD *)(a1 + v5[14]) = *(_OWORD *)(a2 + v5[14]);
    v38 = v5[15];
    v39 = (void *)(a1 + v38);
    v40 = (const void *)(a2 + v38);
    v41 = sub_23361D340();
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  }
  else
  {
    type metadata accessor for Order.Fulfillment();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v15 = (int *)type metadata accessor for Order.PickupFulfillment();
      v16 = v15[12];
      v17 = (char *)(a1 + v16);
      v18 = (char *)(a2 + v16);
      v19 = type metadata accessor for Order.FulfillmentWindow(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v44 = swift_getEnumCaseMultiPayload();
        v45 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v17, v18, v45);
        if (v44 == 1)
        {
          v46 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v47 = &v17[v46];
          v48 = &v18[v46];
          v49 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v66 = v15[13];
      v67 = (void *)(a1 + v66);
      v68 = (const void *)(a2 + v66);
      v69 = sub_23361D634();
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v70 + 32))(v67, v68, v69);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      *(_OWORD *)(a1 + v15[14]) = *(_OWORD *)(a2 + v15[14]);
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v22 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v22;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      v23 = (int *)type metadata accessor for Order.ShippingFulfillment();
      v24 = v23[11];
      v25 = (void *)(a1 + v24);
      v26 = (const void *)(a2 + v24);
      v27 = sub_23361D340();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v50 = v23[12];
      v51 = a1 + v50;
      v52 = a2 + v50;
      v53 = *(_OWORD *)(v52 + 16);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *(_OWORD *)(v51 + 16) = v53;
      *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
      *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
      v54 = v23[13];
      v55 = (char *)(a1 + v54);
      v56 = (char *)(a2 + v54);
      v57 = type metadata accessor for Order.FulfillmentWindow(0);
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v60 = swift_getEnumCaseMultiPayload();
        v61 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v55, v56, v61);
        if (v60 == 1)
        {
          v62 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
          v63 = &v55[v62];
          v64 = &v56[v62];
          v65 = sub_23361CD40();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v72 = v23[14];
      v73 = (void *)(a1 + v72);
      v74 = (const void *)(a2 + v72);
      v75 = sub_23361D634();
      v76 = *(_QWORD *)(v75 - 8);
      v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48);
      if (v77(v74, 1, v75))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_OWORD *)(a1 + v23[15]) = *(_OWORD *)(a2 + v23[15]);
      v79 = v23[16];
      v80 = (void *)(a1 + v79);
      v81 = (const void *)(a2 + v79);
      if (v77((const void *)(a2 + v79), 1, v75))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v80, v81, v75);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v80, 0, 1, v75);
      }
      *(_BYTE *)(a1 + v23[17]) = *(_BYTE *)(a2 + v23[17]);
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s11ContentItemOwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  int *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(const void *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const void *v81;
  uint64_t v82;

  if (a1 != a2)
  {
    sub_233168500(a1, type metadata accessor for Order.ContentItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v4 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v4;
      v5 = (int *)type metadata accessor for Order.Return();
      v6 = v5[8];
      v7 = (void *)(a1 + v6);
      v8 = (const void *)(a2 + v6);
      v9 = sub_23361D634();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v30 = v5[9];
      v31 = (void *)(a1 + v30);
      v32 = (const void *)(a2 + v30);
      if (v11((const void *)(a2 + v30), 1, v9))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v31, v32, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
      }
      v34 = v5[10];
      v35 = (void *)(a1 + v34);
      v36 = (const void *)(a2 + v34);
      if (v11((const void *)(a2 + v34), 1, v9))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v35, v36, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      }
      *(_OWORD *)(a1 + v5[11]) = *(_OWORD *)(a2 + v5[11]);
      *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
      *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
      *(_OWORD *)(a1 + v5[14]) = *(_OWORD *)(a2 + v5[14]);
      v38 = v5[15];
      v39 = (void *)(a1 + v38);
      v40 = (const void *)(a2 + v38);
      v41 = sub_23361D340();
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v39, v40, v41);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
    }
    else
    {
      type metadata accessor for Order.Fulfillment();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        v14 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v14;
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        v15 = (int *)type metadata accessor for Order.PickupFulfillment();
        v16 = v15[12];
        v17 = (char *)(a1 + v16);
        v18 = (char *)(a2 + v16);
        v19 = type metadata accessor for Order.FulfillmentWindow(0);
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          v44 = swift_getEnumCaseMultiPayload();
          v45 = sub_23361D634();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v17, v18, v45);
          if (v44 == 1)
          {
            v46 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
            v47 = &v17[v46];
            v48 = &v18[v46];
            v49 = sub_23361CD40();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v66 = v15[13];
        v67 = (void *)(a1 + v66);
        v68 = (const void *)(a2 + v66);
        v69 = sub_23361D634();
        v70 = *(_QWORD *)(v69 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v70 + 32))(v67, v68, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        }
        *(_OWORD *)(a1 + v15[14]) = *(_OWORD *)(a2 + v15[14]);
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v22 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v22;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        v23 = (int *)type metadata accessor for Order.ShippingFulfillment();
        v24 = v23[11];
        v25 = (void *)(a1 + v24);
        v26 = (const void *)(a2 + v24);
        v27 = sub_23361D340();
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v50 = v23[12];
        v51 = a1 + v50;
        v52 = a2 + v50;
        v53 = *(_OWORD *)(v52 + 16);
        *(_OWORD *)v51 = *(_OWORD *)v52;
        *(_OWORD *)(v51 + 16) = v53;
        *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
        *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
        v54 = v23[13];
        v55 = (char *)(a1 + v54);
        v56 = (char *)(a2 + v54);
        v57 = type metadata accessor for Order.FulfillmentWindow(0);
        v58 = *(_QWORD *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          v60 = swift_getEnumCaseMultiPayload();
          v61 = sub_23361D634();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v55, v56, v61);
          if (v60 == 1)
          {
            v62 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
            v63 = &v55[v62];
            v64 = &v56[v62];
            v65 = sub_23361CD40();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        v72 = v23[14];
        v73 = (void *)(a1 + v72);
        v74 = (const void *)(a2 + v72);
        v75 = sub_23361D634();
        v76 = *(_QWORD *)(v75 - 8);
        v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48);
        if (v77(v74, 1, v75))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v73, v74, v75);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        }
        *(_OWORD *)(a1 + v23[15]) = *(_OWORD *)(a2 + v23[15]);
        v79 = v23[16];
        v80 = (void *)(a1 + v79);
        v81 = (const void *)(a2 + v79);
        if (v77((const void *)(a2 + v79), 1, v75))
        {
          v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v80, v81, v75);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v80, 0, 1, v75);
        }
        *(_BYTE *)(a1 + v23[17]) = *(_BYTE *)(a2 + v23[17]);
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_233441808()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Order.Fulfillment();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Order.Return();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s14StatusPriorityOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2334418D4 + 4 * byte_23364ACDD[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_233441908 + 4 * byte_23364ACD8[v4]))();
}

uint64_t sub_233441908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233441910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233441918);
  return result;
}

uint64_t sub_233441924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23344192CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_233441930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233441938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Order.StatusPriority()
{
  return &type metadata for Order.StatusPriority;
}

char *_s12PriorityInfoVwCP(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D634();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s12PriorityInfoVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *_s12PriorityInfoVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *_s12PriorityInfoVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *_s12PriorityInfoVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *_s12PriorityInfoVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t _s12PriorityInfoVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233441EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 246)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xA)
      return v9 - 9;
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t _s12PriorityInfoVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233441F90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23361D634();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 246)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 9;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233442034()
{
  unint64_t v0;
  unint64_t v1;

  sub_23361D634();
  if (v0 <= 0x3F)
  {
    sub_2331FE95C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ManagedOrderContentItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_2331B6B6C(*a2);
  *a1 = v3;
  return a1;
}

void destroy for ManagedOrderContentItem(uint64_t *a1)
{
  sub_2331B6B9C(*a1);
}

uint64_t *assignWithCopy for ManagedOrderContentItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  sub_2331B6B6C(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_2331B6B9C(v4);
  return a1;
}

uint64_t *assignWithTake for ManagedOrderContentItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_2331B6B9C(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedOrderContentItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 63);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) & 1 | (2 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ManagedOrderContentItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3E)
  {
    *(_QWORD *)result = a2 - 63;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x1F | (32 * (-a2 & 0x3F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0x7000000000000007;
    }
  }
  return result;
}

uint64_t sub_23344220C(_QWORD *a1)
{
  return (*a1 >> 62) & 1;
}

_QWORD *sub_233442218(_QWORD *result)
{
  *result &= ~0x4000000000000000uLL;
  return result;
}

unint64_t *sub_233442228(unint64_t *result, char a2)
{
  *result = *result & 0x8FFFFFFFFFFFFFF8 | ((unint64_t)(a2 & 1) << 62);
  return result;
}

ValueMetadata *type metadata accessor for ManagedOrderContentItem()
{
  return &type metadata for ManagedOrderContentItem;
}

uint64_t BankConnectConsentStatusDataLoader.__allocating_init(environment:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_23318B020(a1, v2 + 16);
  return v2;
}

uint64_t BankConnectConsentStatusDataLoader.init(environment:)(__int128 *a1)
{
  uint64_t v1;

  sub_23318B020(a1, v1 + 16);
  return v1;
}

uint64_t BankConnectConsentStatusDataLoader.loadConsentStatus(forConsentID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = type metadata accessor for BankConnectConsent();
  v3[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 + 64);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23344232C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  v1 = v0 + 10;
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v3 = sub_23361DB68();
  v4 = sub_23361E780();
  v5 = os_log_type_enabled(v3, v4);
  v6 = v0[17];
  if (v5)
  {
    v7 = v0[16];
    v8 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v9 = v27;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    v0[15] = sub_233164DCC(v7, v6, &v27);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v3, v4, "Fetching consent status for consent with consentID: %s.", v8, 0xCu);
    swift_arrayDestroy();
    v10 = v9;
    v1 = v0 + 10;
    MEMORY[0x234934590](v10, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = v0[17];
  v12 = (_QWORD *)v0[18];
  v13 = v0[16];
  v14 = v12[5];
  v15 = v12[6];
  __swift_project_boxed_opaque_existential_1(v12 + 2, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  v16 = v0[13];
  v17 = v0[14];
  __swift_project_boxed_opaque_existential_1(v1, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(v13, v11, v16, v17);
  v18 = v0[23];
  v19 = v0[19];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
  v21 = v12[5];
  v20 = v12[6];
  __swift_project_boxed_opaque_existential_1(v12 + 2, v21);
  v22 = (uint64_t *)(v18 + *(int *)(v19 + 20));
  v23 = *v22;
  v24 = v22[1];
  v0[24] = v24;
  swift_bridgeObjectRetain();
  v25 = (_QWORD *)swift_task_alloc();
  v0[25] = v25;
  *v25 = v0;
  v25[1] = sub_233442610;
  return BankConnectDataLoaderEnvironment.makeTaskQueue(forConsentID:)(v23, v24, v21, v20);
}

uint64_t sub_233442610(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233442674()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = v0[26];
  v2 = v0[22];
  v3 = v0[20];
  v4 = v0[18];
  sub_2331684BC(v0[23], v2, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  v0[27] = v6;
  *(_QWORD *)(v6 + 16) = v4;
  sub_233168580(v2, v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  sub_233167C58((unint64_t *)&qword_2560478A0, (uint64_t (*)(uint64_t))type metadata accessor for BankConnectTaskQueue, (uint64_t)&protocol conformance descriptor for BankConnectTaskQueue);
  swift_retain();
  if (v1)
  {
    swift_getObjectType();
    sub_23361E474();
  }
  return swift_task_switch();
}

uint64_t sub_233442764()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[26];
  v1 = v0[27];
  v0[2] = v0;
  v0[3] = sub_2334427C8;
  v3 = swift_continuation_init();
  sub_233286944(v3, v2, (uint64_t)&unk_256050030, v1);
  return swift_continuation_await();
}

uint64_t sub_2334427C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 224) = v1;
  if (v1)
    swift_willThrow();
  else
    swift_release();
  return swift_task_switch();
}

uint64_t sub_233442844()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23344289C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2334428D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  sub_233168500(v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233442930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_2331676FC;
  return sub_233442B40(a3);
}

uint64_t sub_233442984()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = (int *)type metadata accessor for BankConnectConsent();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v3 + v1[6];
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v1[7], v6);
  v9 = v3 + v1[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  v8(v3 + v1[12], v6);
  return swift_deallocObject();
}

uint64_t sub_233442AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BankConnectConsent() - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2331676FC;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_2331676FC;
  return sub_233442B40(v3);
}

uint64_t sub_233442B40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_256043688);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233442BA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v9;

  v2 = v0[7];
  v1 = (_QWORD *)v0[8];
  v4 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  v5 = BankConnectDataLoaderEnvironment.makeWebServiceClient()(v4, v3);
  v0[11] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v0[12] = v6;
  v6[2] = v5;
  v6[3] = v2;
  v6[4] = v1;
  v9 = (char *)&dword_256057870 + dword_256057870;
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  *v7 = v0;
  v7[1] = sub_233442C60;
  return ((uint64_t (*)(_QWORD, void *, _QWORD *))v9)(v0[10], &unk_256050110, v6);
}

uint64_t sub_233442C60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233442CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9[9];

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD **)(v0 + 64);
  v4 = v3[5];
  v5 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v6);
  v9[0] = *(_BYTE *)(v1 + *(int *)(v2 + 36));
  BankConnectConsentStoring.updateConsent(_:consentStatus:)(v1, v9, v6, v7);
  sub_233168608(*(_QWORD *)(v0 + 80), &qword_256043688);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233442DC4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectConsentStatusDataLoader.loadPendingConsentStatus(forConsentID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  type metadata accessor for BankConnectConsent();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233442E64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v1 = v0 + 2;
  if (qword_256041CA0 != -1)
    swift_once();
  v2 = sub_23361DB80();
  __swift_project_value_buffer(v2, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  v3 = sub_23361DB68();
  v4 = sub_23361E780();
  v5 = os_log_type_enabled(v3, v4);
  v6 = v0[9];
  if (v5)
  {
    v7 = v0[8];
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v19 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    v0[7] = sub_233164DCC(v7, v6, &v19);
    v1 = v0 + 2;
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v3, v4, "Fetching consent status for pending consent with consentID: %s.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = (_QWORD *)v0[10];
  v12 = v0[8];
  v11 = v0[9];
  v13 = v10[5];
  v14 = v10[6];
  __swift_project_boxed_opaque_existential_1(v10 + 2, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  v15 = v0[5];
  v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v12, v11, v15, v16);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
  v17 = (_QWORD *)swift_task_alloc();
  v0[12] = v17;
  *v17 = v0;
  v17[1] = sub_2334430E4;
  return sub_233442B40(v0[11]);
}

uint64_t sub_2334430E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233443148()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233443190()
{
  uint64_t v0;

  sub_233168500(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334431D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560479E0);
  v4[18] = swift_task_alloc();
  v5 = type metadata accessor for FinanceNetworkError();
  v4[19] = v5;
  v4[20] = *(_QWORD *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for BankConnectErrorWithConsent(0);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for BankConnectWebServiceConsentStatusRequest(0);
  v4[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2334432C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v4;

  v2 = v0[26];
  v1 = v0[27];
  sub_2331684BC(v0[16], v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectConsent);
  v0[5] = v2;
  v0[6] = (uint64_t)&protocol witness table for BankConnectWebServiceConsentStatusRequest;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0 + 2);
  sub_2331684BC(v1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for BankConnectWebServiceConsentStatusRequest);
  v4 = (_QWORD *)swift_task_alloc();
  v0[28] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_233443368;
  return sub_2335B8790((uint64_t)(v0 + 2), 1u, 0, 1);
}

uint64_t sub_233443368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[29] = a1;
  v5[30] = a2;
  v5[31] = a3;
  v5[32] = v3;
  swift_task_dealloc();
  if (!v3)
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v5 + 2));
  return swift_task_switch();
}

uint64_t sub_2334433E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  id v24;
  char v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32[9];

  v1 = *(void **)(v0 + 256);
  sub_2331AC414(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(void **)(v0 + 248), *(_QWORD *)(v0 + 112));
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 240);
  v3 = *(void **)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 232);
  if (v2)
  {

    sub_23316BEA4(v5, v4);
    sub_233168500(*(_QWORD *)(v0 + 216), type metadata accessor for BankConnectWebServiceConsentStatusRequest);
    *(_QWORD *)(v0 + 96) = v2;
    v6 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if (swift_dynamicCast())
    {
      v8 = *(_QWORD *)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 200);
      v9 = *(_QWORD *)(v0 + 176);
      v10 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD **)(v0 + 136);

      sub_233168580(v7, v8, type metadata accessor for BankConnectErrorWithConsent);
      v12 = v11 + 2;
      v13 = v11[5];
      v14 = v11[6];
      __swift_project_boxed_opaque_existential_1(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
      v15 = *(_QWORD *)(v0 + 80);
      v16 = *(_QWORD *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v15);
      v17 = v8 + *(int *)(v10 + 20);
      sub_2331684BC(v17, v9, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 7)
        sub_233168500(*(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
      v19 = *(_QWORD *)(v0 + 192);
      v32[0] = EnumCaseMultiPayload == 7;
      BankConnectConsentStoring.updateConsent(_:consentStatus:)(v19, v32, v15, v16);
      v20 = *(_QWORD *)(v0 + 192);
      __swift_destroy_boxed_opaque_existential_0(v0 + 56);
      sub_2335CB128(v17);
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      swift_allocError();
      sub_2331684BC(v17, v30, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
      swift_willThrow();
      sub_233168500(v20, type metadata accessor for BankConnectErrorWithConsent);

    }
    else
    {
      v23 = *(_QWORD *)(v0 + 160);

      *(_QWORD *)(v0 + 104) = v2;
      v24 = v2;
      v25 = swift_dynamicCast();
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v23 + 56);
      if ((v25 & 1) != 0)
      {
        v27 = *(_QWORD *)(v0 + 168);
        v28 = *(_QWORD *)(v0 + 144);
        v26(v28, 0, 1, *(_QWORD *)(v0 + 152));
        sub_233168580(v28, v27, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
        sub_2335CB128(v27);
        sub_233168500(v27, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
      }
      else
      {
        v29 = *(_QWORD *)(v0 + 144);
        v26(v29, 1, 1, *(_QWORD *)(v0 + 152));
        sub_233168608(v29, &qword_2560479E0);
      }
      swift_willThrow();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 216);

    sub_23316BEA4(v5, v4);
    sub_233168500(v21, type metadata accessor for BankConnectWebServiceConsentStatusRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_233443788()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26[9];

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = *(void **)(v0 + 256);
  sub_233168500(*(_QWORD *)(v0 + 216), type metadata accessor for BankConnectWebServiceConsentStatusRequest);
  *(_QWORD *)(v0 + 96) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
  {
    v4 = *(_QWORD *)(v0 + 192);
    v3 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD **)(v0 + 136);

    sub_233168580(v3, v4, type metadata accessor for BankConnectErrorWithConsent);
    v8 = v7 + 2;
    v9 = v7[5];
    v10 = v7[6];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v11);
    v13 = v4 + *(int *)(v6 + 20);
    sub_2331684BC(v13, v5, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 7)
      sub_233168500(*(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    v15 = *(_QWORD *)(v0 + 192);
    v26[0] = EnumCaseMultiPayload == 7;
    BankConnectConsentStoring.updateConsent(_:consentStatus:)(v15, v26, v11, v12);
    v16 = *(_QWORD *)(v0 + 192);
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);
    sub_2335CB128(v13);
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    sub_2331684BC(v13, v24, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    swift_willThrow();
    sub_233168500(v16, type metadata accessor for BankConnectErrorWithConsent);

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 160);

    *(_QWORD *)(v0 + 104) = v1;
    v18 = v1;
    v19 = swift_dynamicCast();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v17 + 56);
    if ((v19 & 1) != 0)
    {
      v21 = *(_QWORD *)(v0 + 168);
      v22 = *(_QWORD *)(v0 + 144);
      v20(v22, 0, 1, *(_QWORD *)(v0 + 152));
      sub_233168580(v22, v21, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
      sub_2335CB128(v21);
      sub_233168500(v21, (uint64_t (*)(_QWORD))type metadata accessor for FinanceNetworkError);
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 144);
      v20(v23, 1, 1, *(_QWORD *)(v0 + 152));
      sub_233168608(v23, &qword_2560479E0);
    }
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectConsentStatusDataLoader.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t BankConnectConsentStatusDataLoader.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_233443AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318C26C;
  return BankConnectConsentStatusDataLoader.loadConsentStatus(forConsentID:)(a1, a2);
}

uint64_t sub_233443B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23318C26C;
  return BankConnectConsentStatusDataLoader.loadPendingConsentStatus(forConsentID:)(a1, a2);
}

uint64_t dispatch thunk of BankConnectConsentStatusDataLoading.loadConsentStatus(forConsentID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23318C26C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BankConnectConsentStatusDataLoading.loadPendingConsentStatus(forConsentID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23318C26C;
  return v11(a1, a2, a3, a4);
}

uint64_t type metadata accessor for BankConnectConsentStatusDataLoader()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectConsentStatusDataLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectConsentStatusDataLoader.__allocating_init(environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_233443CDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23318C26C;
  return sub_2334431D4(a1, v4, v5, v6);
}

uint64_t sub_233443D48()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageProcessingXPCServiceModel()
{
  return objc_opt_self();
}

void sub_233443EA0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  swift_getKeyPath();
  swift_bridgeObjectRetain();
  XPCEntitlements.check(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  v8 = a3 + 2;
  v9 = a3[5];
  v10 = a3[6];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
  v12 = objc_allocWithZone((Class)type metadata accessor for StorableColor());
  v13 = StorableColor.init(color:)(v11);
  (*(void (**)(uint64_t, id, _QWORD))(a4 + 16))(a4, v13, 0);

}

uint64_t sub_23344400C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v6 = *(_BYTE *)(a2 + 57);
  v7 = *(_BYTE *)(a2 + 58);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_BYTE *)(a2 + 80);
  LOBYTE(v29) = *(_BYTE *)(a2 + 56);
  BYTE1(v29) = v6;
  BYTE2(v29) = v7;
  v30 = v8;
  v31 = v9;
  v32 = v10;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  XPCEntitlements.check(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value);
  v12 = *(double *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 8);
  v13 = *(double *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 16);
  v14 = *(double *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 24);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 32);
  v16 = *(_BYTE *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 40);
  v17 = *(_BYTE *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 41);
  v18 = *(_BYTE *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 42);
  v19 = *(_QWORD *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 48);
  v20 = *(_BYTE *)(a1 + OBJC_IVAR___XPCThumbnailConfiguration_value + 56);
  v21 = (_QWORD *)(a2 + 16);
  v23 = *(_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 48);
  __swift_project_boxed_opaque_existential_1(v21, v23);
  v29 = v15;
  LOBYTE(v30) = v16;
  BYTE1(v30) = v17;
  BYTE2(v30) = v18;
  v31 = v19;
  v32 = v20;
  v24 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, double, double, double))(v22 + 16))(v11, &v29, v23, v22, v12, v13, v14);
  v26 = v25;
  if (v25 >> 60 == 15)
    v27 = 0;
  else
    v27 = (void *)sub_23361D3AC();
  (*(void (**)(uint64_t, void *, _QWORD))(a3 + 16))(a3, v27, 0);

  return sub_2331B04E8(v24, v26);
}

uint64_t FinanceStore.internalConsents(since:isMonitoring:)(void **a1, char a2)
{
  uint64_t v2;
  void *v4;
  _BYTE *v5;
  uint64_t v6;
  _QWORD v8[5];
  void *v9;

  v4 = *a1;
  static DeviceInfo.deviceType.getter((char *)v8);
  if (LOBYTE(v8[0]))
  {
    sub_23316853C();
    swift_allocError();
    *v5 = 3;
    swift_willThrow();
  }
  else
  {
    v9 = v4;
    v8[3] = type metadata accessor for FinanceStore();
    v8[4] = &off_250487D20;
    v8[0] = v2;
    swift_retain();
    sub_2332A5A4C(&v9, a2 & 1, (uint64_t)v8);
    v2 = v6;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  }
  return v2;
}

id InternalConsentResult.token.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t InternalConsentResult.consents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FinanceStore.internalConsents(with:sortDescriptors:limit:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + 73) = a7;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 56) = v7;
  *(_BYTE *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23344431C()
{
  uint64_t v0;
  _BYTE *v1;
  char v3;
  char v4;
  _QWORD *v5;
  char v6[9];

  static DeviceInfo.deviceType.getter(v6);
  if (v6[0])
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_BYTE *)(v0 + 73) & 1;
    v4 = *(_BYTE *)(v0 + 72) & 1;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_2331991F4;
    return sub_2332A5C10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v4, *(_QWORD *)(v0 + 48), v3);
  }
}

ValueMetadata *type metadata accessor for InternalConsentResult()
{
  return &type metadata for InternalConsentResult;
}

void PIIRedactionConfiguration.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = objc_msgSend(a1, sel_piiRedactionConfigurationCountryCodes);
  v5 = sub_23361E5DC();

  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6)
  {
    v7 = objc_msgSend(a1, sel_piiRedactionConfigurationCountryCodes);
    v6 = sub_23361E5DC();

  }
  *a2 = v6;
}

uint64_t PIIRedactionConfiguration.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2331C92EC(*a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void PIIRedactionConfiguration.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(a1, sel_countryCodes);
  v5 = sub_23361E5DC();

  *a2 = v5;
}

uint64_t PIIRedactionConfiguration.countryCodes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PIIRedactionConfiguration.countryCodes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PIIRedactionConfiguration.countryCodes.modify())()
{
  return nullsub_1;
}

uint64_t PIIRedactionConfiguration.init(countryCodes:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static PIIRedactionConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2333E36C8(*a1, *a2);
}

uint64_t PIIRedactionConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_233243554(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334445E0()
{
  sub_2334449F4();
  return sub_23361F428();
}

uint64_t sub_233444608()
{
  sub_2334449F4();
  return sub_23361F434();
}

uint64_t PIIRedactionConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560501C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334449F4();
  sub_23361F410();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560578D0);
  sub_233444A38(&qword_2560501D8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PIIRedactionConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_233243554((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t PIIRedactionConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560501E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334449F4();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2560578D0);
    sub_233444A38(&qword_256057910, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2334448E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PIIRedactionConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2334448F8(_QWORD *a1)
{
  return PIIRedactionConfiguration.encode(to:)(a1);
}

uint64_t sub_23344490C(uint64_t *a1, uint64_t *a2)
{
  return sub_2333E36C8(*a1, *a2);
}

uint64_t sub_233444918()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_233243554((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23344496C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_233243554(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2334449A4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23361F350();
  swift_bridgeObjectRetain();
  sub_233243554((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

unint64_t sub_2334449F4()
{
  unint64_t result;

  result = qword_2560501D0;
  if (!qword_2560501D0)
  {
    result = MEMORY[0x234934494](&unk_23364B1C0, &type metadata for PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560501D0);
  }
  return result;
}

uint64_t sub_233444A38(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2560578D0);
    v8 = a2;
    result = MEMORY[0x234934494](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233444A9C()
{
  unint64_t result;

  result = qword_2560501E8;
  if (!qword_2560501E8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for PIIRedactionConfiguration, &type metadata for PIIRedactionConfiguration);
    atomic_store(result, (unint64_t *)&qword_2560501E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PIIRedactionConfiguration()
{
  return &type metadata for PIIRedactionConfiguration;
}

uint64_t storeEnumTagSinglePayload for PIIRedactionConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233444B30 + 4 * asc_23364B010[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233444B50 + 4 * byte_23364B015[v4]))();
}

_BYTE *sub_233444B30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233444B50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233444B58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233444B60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233444B68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233444B70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PIIRedactionConfiguration.CodingKeys()
{
  return &type metadata for PIIRedactionConfiguration.CodingKeys;
}

unint64_t sub_233444B90()
{
  unint64_t result;

  result = qword_2560501F0;
  if (!qword_2560501F0)
  {
    result = MEMORY[0x234934494](&unk_23364B198, &type metadata for PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560501F0);
  }
  return result;
}

unint64_t sub_233444BD8()
{
  unint64_t result;

  result = qword_2560501F8;
  if (!qword_2560501F8)
  {
    result = MEMORY[0x234934494](&unk_23364B108, &type metadata for PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560501F8);
  }
  return result;
}

unint64_t sub_233444C20()
{
  unint64_t result;

  result = qword_256050200;
  if (!qword_256050200)
  {
    result = MEMORY[0x234934494](&unk_23364B130, &type metadata for PIIRedactionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050200);
  }
  return result;
}

uint64_t HTTPRequest.authenticated(using:forceRenewToken:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 144) = v5;
  *(_QWORD *)(v6 + 120) = a2;
  *(_QWORD *)(v6 + 128) = a4;
  *(_BYTE *)(v6 + 200) = a3;
  *(_QWORD *)(v6 + 112) = a1;
  *(_QWORD *)(v6 + 152) = *(_QWORD *)(a4 - 8);
  *(_QWORD *)(v6 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233444CC4()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(unsigned __int8 *)(v0 + 200);
  v2 = *(_QWORD **)(v0 + 120);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  if (v1 == 1)
  {
    v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v5;
    v6 = sub_233444D74;
  }
  else
  {
    v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v5;
    v6 = sub_233444E98;
  }
  *v5 = v0;
  v5[1] = v6;
  return v8(v3, v4);
}

uint64_t sub_233444D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v6 = (_QWORD *)*v5;
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = a4;
  v6[7] = v4;
  v6[22] = v4;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233444DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 152) + 16))(v5, *(_QWORD *)(v0 + 144), v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v8, v5, v7);
  v10 = type metadata accessor for HTTPRequestWithGrandSlamAuthentication(0, v7, v6, v9);
  v11 = (_QWORD *)(v8 + *(int *)(v10 + 36));
  *v11 = v1;
  v11[1] = v2;
  v12 = (_QWORD *)(v8 + *(int *)(v10 + 40));
  *v12 = v3;
  v12[1] = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233444E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v6 = (_QWORD *)*v5;
  v6[8] = v5;
  v6[9] = a1;
  v6[10] = a2;
  v6[11] = a3;
  v6[12] = a4;
  v6[13] = v4;
  v6[24] = v4;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233444F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 152) + 16))(v5, *(_QWORD *)(v0 + 144), v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v8, v5, v7);
  v10 = type metadata accessor for HTTPRequestWithGrandSlamAuthentication(0, v7, v6, v9);
  v11 = (_QWORD *)(v8 + *(int *)(v10 + 36));
  *v11 = v1;
  v11[1] = v2;
  v12 = (_QWORD *)(v8 + *(int *)(v10 + 40));
  *v12 = v3;
  v12[1] = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233444FBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 176);
  type metadata accessor for FinanceNetworkError();
  sub_2332F3EFC();
  swift_allocError();
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23344504C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 192);
  type metadata accessor for FinanceNetworkError();
  sub_2332F3EFC();
  swift_allocError();
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL static GrandSlamAuthenticationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GrandSlamAuthenticationError.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t GrandSlamAuthenticationError.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

id GrandSlamAuthenticator.accountStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t GrandSlamAuthenticator.serviceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *GrandSlamAuthenticator.__allocating_init(accountStore:)(uint64_t a1)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[3] = 0xD000000000000014;
  result[4] = 0x8000000233677230;
  result[2] = a1;
  return result;
}

_QWORD *GrandSlamAuthenticator.init(accountStore:)(uint64_t a1)
{
  _QWORD *v1;

  v1[3] = 0xD000000000000014;
  v1[4] = 0x8000000233677230;
  v1[2] = a1;
  return v1;
}

uint64_t GrandSlamAuthenticator.token()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23344521C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  void *v31;
  _BYTE *v32;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + 16);
  v2 = objc_msgSend(v1, sel_aida_accountForPrimaryiCloudAccount);
  *(_QWORD *)(v0 + 24) = v2;
  if (v2)
  {
    v3 = v2;
    v4 = (void *)sub_23361E12C();
    v5 = objc_msgSend(v1, sel_credentialForAccount_serviceID_, v3, v4);
    *(_QWORD *)(v0 + 32) = v5;

    if (!v5 || (v6 = objc_msgSend(v5, sel_token)) == 0)
    {
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v19;
      *v19 = v0;
      v19[1] = sub_23344559C;
      v20 = *(_QWORD *)(v0 + 16);
      v19[54] = v3;
      v19[55] = v20;
      return swift_task_switch();
    }
    v7 = v6;
    v8 = sub_23361E150();
    v10 = v9;

    v11 = objc_msgSend(*(id *)(v0 + 24), sel_aida_alternateDSID);
    if (v11)
    {
      v12 = v11;
      v14 = *(void **)(v0 + 24);
      v13 = *(void **)(v0 + 32);
      v15 = sub_23361E150();
      v17 = v16;

      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v15, v17, v8, v10);
    }
    swift_bridgeObjectRelease();
    if (qword_256041C58 != -1)
      swift_once();
    v26 = sub_23361DB80();
    __swift_project_value_buffer(v26, (uint64_t)qword_2560494D8);
    v27 = sub_23361DB68();
    v28 = sub_23361E768();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_233151000, v27, v28, "Cannot provide grand slam token without alternate DSID", v29, 2u);
      MEMORY[0x234934590](v29, -1, -1);
    }
    v31 = *(void **)(v0 + 24);
    v30 = *(void **)(v0 + 32);

    sub_233446504();
    swift_allocError();
    *v32 = 3;
    swift_willThrow();

  }
  else
  {
    if (qword_256041C58 != -1)
      swift_once();
    v21 = sub_23361DB80();
    __swift_project_value_buffer(v21, (uint64_t)qword_2560494D8);
    v22 = sub_23361DB68();
    v23 = sub_23361E768();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_233151000, v22, v23, "Cannot provide grand slam token without account", v24, 2u);
      MEMORY[0x234934590](v24, -1, -1);
    }

    sub_233446504();
    swift_allocError();
    *v25 = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23344559C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 56) = a2;
    *(_QWORD *)(v6 + 64) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_233445614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v16;
  _BYTE *v17;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = objc_msgSend(*(id *)(v0 + 24), sel_aida_alternateDSID);
  if (v3)
  {
    v4 = v3;
    v6 = *(void **)(v0 + 24);
    v5 = *(void **)(v0 + 32);
    v7 = sub_23361E150();
    v9 = v8;

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v7, v9, v1, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_256041C58 != -1)
      swift_once();
    v11 = sub_23361DB80();
    __swift_project_value_buffer(v11, (uint64_t)qword_2560494D8);
    v12 = sub_23361DB68();
    v13 = sub_23361E768();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_233151000, v12, v13, "Cannot provide grand slam token without alternate DSID", v14, 2u);
      MEMORY[0x234934590](v14, -1, -1);
    }
    v16 = *(void **)(v0 + 24);
    v15 = *(void **)(v0 + 32);

    sub_233446504();
    swift_allocError();
    *v17 = 3;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2334457B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334457F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 432) = a1;
  *(_QWORD *)(v2 + 440) = v1;
  return swift_task_switch();
}

uint64_t sub_233445808()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  if (qword_256041C58 != -1)
    swift_once();
  v1 = sub_23361DB80();
  v0[56] = __swift_project_value_buffer(v1, (uint64_t)qword_2560494D8);
  v2 = sub_23361DB68();
  v3 = sub_23361E780();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Renewing credentials for account without grand slam token", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }
  v5 = (_QWORD *)v0[55];
  v19 = v0[54];

  v6 = (void *)v5[2];
  v0[57] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25604BE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233627000;
  v0[48] = sub_23361E150();
  v0[49] = v8;
  sub_23361ED50();
  v9 = sub_233271454();
  v10 = sub_23361E9F0();
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v0[50] = sub_23361E150();
  v0[51] = v11;
  sub_23361ED50();
  v12 = sub_23361E9F0();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 144) = v12;
  v0[46] = sub_23361E150();
  v0[47] = v13;
  sub_23361ED50();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_233623D60;
  v15 = v5[3];
  v0[58] = v15;
  v16 = v5[4];
  v0[59] = v16;
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  *(_QWORD *)(inited + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  *(_QWORD *)(inited + 216) = v14;
  swift_bridgeObjectRetain();
  sub_23315F810(inited);
  v17 = sub_23361E054();
  v0[60] = v17;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 52;
  v0[2] = v0;
  v0[3] = sub_233445B10;
  v0[45] = swift_continuation_init();
  v0[41] = MEMORY[0x24BDAC760];
  v0[42] = 0x40000000;
  v0[43] = sub_2334462F8;
  v0[44] = &block_descriptor_15;
  objc_msgSend(v6, sel_renewCredentialsForAccount_options_completion_, v19, v17, v0 + 41);
  return swift_continuation_await();
}

uint64_t sub_233445B10()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 488) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_233445B70()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE *v19;

  v1 = *(_QWORD *)(v0 + 416);

  if (v1)
  {
    v2 = sub_23361DB68();
    v3 = sub_23361E768();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_233151000, v2, v3, "Failed to renew credentials for account", v4, 2u);
      MEMORY[0x234934590](v4, -1, -1);
    }

    sub_233446504();
    swift_allocError();
    *v5 = 1;
    swift_willThrow();
  }
  else
  {
    v6 = *(void **)(v0 + 456);
    v7 = *(_QWORD *)(v0 + 432);
    v8 = (void *)sub_23361E12C();
    v9 = objc_msgSend(v6, sel_credentialForAccount_serviceID_, v7, v8);

    if (v9)
    {
      v10 = objc_msgSend(v9, sel_token);
      if (v10)
      {
        v11 = v10;
        v12 = sub_23361E150();
        v14 = v13;

        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v12, v14);
      }
    }
    v16 = sub_23361DB68();
    v17 = sub_23361E768();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_233151000, v16, v17, "Renewed credential has no grand slam token", v18, 2u);
      MEMORY[0x234934590](v18, -1, -1);
    }

    sub_233446504();
    swift_allocError();
    *v19 = 2;
    swift_willThrow();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233445D9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;

  v2 = *(void **)(v0 + 480);
  v1 = *(void **)(v0 + 488);
  swift_willThrow();

  v3 = v1;
  v4 = v1;
  v5 = sub_23361DB68();
  v6 = sub_23361E768();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 488);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 424) = v11;
    sub_23361EBC4();
    *v9 = v11;

    _os_log_impl(&dword_233151000, v5, v6, "Failed to renew credentials for account with error: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v9, -1, -1);
    MEMORY[0x234934590](v8, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 488);

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GrandSlamAuthenticator.renewToken()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch();
}

uint64_t sub_233445F48()
{
  uint64_t v0;
  id v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE *v10;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 48) + 16), sel_aida_accountForPrimaryiCloudAccount);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_2334460C8;
    v4 = *(_QWORD *)(v0 + 48);
    v3[54] = v2;
    v3[55] = v4;
    return swift_task_switch();
  }
  else
  {
    if (qword_256041C58 != -1)
      swift_once();
    v6 = sub_23361DB80();
    __swift_project_value_buffer(v6, (uint64_t)qword_2560494D8);
    v7 = sub_23361DB68();
    v8 = sub_23361E768();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_233151000, v7, v8, "Cannot provide grand slam token without account", v9, 2u);
      MEMORY[0x234934590](v9, -1, -1);
    }

    sub_233446504();
    swift_allocError();
    *v10 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2334460C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v4[9] = a2;
  v4[10] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233446134()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  _BYTE *v14;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_aida_alternateDSID);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(void **)(v0 + 56);
    v5 = sub_23361E150();
    v7 = v6;

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 8))(v5, v7, v3, *(_QWORD *)(v0 + 72));
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_256041C58 != -1)
      swift_once();
    v9 = sub_23361DB80();
    __swift_project_value_buffer(v9, (uint64_t)qword_2560494D8);
    v10 = sub_23361DB68();
    v11 = sub_23361E768();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_233151000, v10, v11, "Cannot provide grand slam token without alternate DSID", v12, 2u);
      MEMORY[0x234934590](v12, -1, -1);
    }
    v13 = *(void **)(v0 + 56);

    sub_233446504();
    swift_allocError();
    *v14 = 3;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2334462C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334462F8(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t GrandSlamAuthenticator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t GrandSlamAuthenticator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2334463C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_233447014;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_233446428()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_233446488;
  v3[6] = v2;
  return swift_task_switch();
}

uint64_t sub_233446488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = *v5;
  v11 = swift_task_dealloc();
  if (!v4)
  {
    v11 = a1;
    v12 = a2;
    v13 = a3;
    v14 = a4;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v11, v12, v13, v14);
}

unint64_t sub_233446504()
{
  unint64_t result;

  result = qword_256050218;
  if (!qword_256050218)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for GrandSlamAuthenticationError, &type metadata for GrandSlamAuthenticationError);
    atomic_store(result, &qword_256050218);
  }
  return result;
}

_QWORD *sub_233446548(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
  if (!v1)
  {
    sub_23361ED98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2334A4BB0(0, v2[2] + 1, 1, v2);
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = sub_2334A4BB0((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
    v2[2] = v4 + 1;
    v5 = (char *)&v2[4 * v4];
    strcpy(v5 + 32, "Authorization");
    *((_WORD *)v5 + 23) = -4864;
    *((_QWORD *)v5 + 6) = 0x6B6F54656C707041;
    *((_QWORD *)v5 + 7) = 0xEB00000000206E65;
  }
  return v2;
}

_QWORD *sub_2334466D4(uint64_t a1)
{
  return sub_233446548(a1);
}

unint64_t sub_2334466EC()
{
  unint64_t result;

  result = qword_256050230;
  if (!qword_256050230)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for GrandSlamAuthenticationError, &type metadata for GrandSlamAuthenticationError);
    atomic_store(result, (unint64_t *)&qword_256050230);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GrandSlamAuthenticationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23344677C + 4 * byte_23364B215[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2334467B0 + 4 * byte_23364B210[v4]))();
}

uint64_t sub_2334467B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334467B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334467C0);
  return result;
}

uint64_t sub_2334467CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334467D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2334467D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334467E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GrandSlamAuthenticationError()
{
  return &type metadata for GrandSlamAuthenticationError;
}

uint64_t dispatch thunk of GrandSlamAuthenticating.token()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_233447018;
  return v7(a1, a2);
}

uint64_t dispatch thunk of GrandSlamAuthenticating.renewToken()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2334468D4;
  return v7(a1, a2);
}

uint64_t sub_2334468D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v10;

  v10 = *v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, a4);
}

uint64_t type metadata accessor for GrandSlamAuthenticator()
{
  return objc_opt_self();
}

uint64_t method lookup function for GrandSlamAuthenticator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GrandSlamAuthenticator.__allocating_init(accountStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

_UNKNOWN **sub_233446980()
{
  return &off_250487B60;
}

uint64_t sub_23344698C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_233446A04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_233446AF0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233446B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_233446BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_233446C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_233446CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_233446D74(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_233446DF8 + 4 * byte_23364B21A[v10]))();
  }
}

void sub_233446E7C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_233446F78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x233446FF0);
}

void sub_233446F80(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x233446F88);
  JUMPOUT(0x233446FF0);
}

void sub_233446FCC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x233446FF0);
}

void sub_233446FD4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x233446FF0);
}

uint64_t sub_233446FDC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x233446FE8);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x233446FF0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for HTTPRequestWithGrandSlamAuthentication(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HTTPRequestWithGrandSlamAuthentication);
}

uint64_t sub_23344701C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1 + OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  swift_beginAccess();
  sub_233447218(v3, (uint64_t)&v6);
  if (v7)
    return sub_23318B020(&v6, (uint64_t)a2);
  if (qword_256041D40 != -1)
    swift_once();
  v5 = off_256054E98;
  a2[3] = type metadata accessor for BankConnectService();
  a2[4] = &protocol witness table for BankConnectService;
  *a2 = v5;
  swift_retain();
  return sub_233447F74((uint64_t)&v6);
}

uint64_t sub_2334470E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];
  _BYTE v7[40];

  sub_233177068(a1, (uint64_t)v7);
  v3 = *a2;
  sub_233177068((uint64_t)v7, (uint64_t)v6);
  v4 = v3 + OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  swift_beginAccess();
  sub_233447FB4((uint64_t)v6, v4);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_233447158@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  __int128 v6;
  uint64_t v7;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  swift_beginAccess();
  sub_233447218(v3, (uint64_t)&v6);
  if (v7)
    return sub_23318B020(&v6, (uint64_t)a1);
  if (qword_256041D40 != -1)
    swift_once();
  v5 = off_256054E98;
  a1[3] = type metadata accessor for BankConnectService();
  a1[4] = &protocol witness table for BankConnectService;
  *a1 = v5;
  swift_retain();
  return sub_233447F74((uint64_t)&v6);
}

uint64_t sub_233447218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560503B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233447260(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];

  sub_233177068(a1, (uint64_t)v5);
  v3 = v1 + OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  swift_beginAccess();
  sub_233447FB4((uint64_t)v5, v3);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

void (*sub_2334472C8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v4 = (__int128 *)(v3 + 5);
  v5 = OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  v3[21] = v1;
  v3[22] = v5;
  v6 = v1 + v5;
  swift_beginAccess();
  sub_233447218(v6, (uint64_t)(v3 + 5));
  if (v3[8])
  {
    sub_23318B020(v4, (uint64_t)v3);
  }
  else
  {
    if (qword_256041D40 != -1)
      swift_once();
    v7 = off_256054E98;
    v3[3] = type metadata accessor for BankConnectService();
    v3[4] = &protocol witness table for BankConnectService;
    *v3 = v7;
    swift_retain();
    sub_233447F74((uint64_t)v4);
  }
  return sub_2334473AC;
}

void sub_2334473AC(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  v4 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v5 = v2[21] + v2[22];
    sub_233177068(*a1, v3);
    sub_233177068(v3, v4);
    swift_beginAccess();
    sub_233447FB4(v4, v5);
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_0(v3);
  }
  else
  {
    v6 = v2[21] + v2[22];
    sub_233177068(*a1, v3);
    swift_beginAccess();
    sub_233447FB4(v3, v6);
    swift_endAccess();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  free(v2);
}

uint64_t sub_233447484(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DeviceInfo.deviceType.getter(&v13);
  if (v13)
    return a1(0, 0);
  v9 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = a1;
  v10[6] = a2;
  v11 = v2;
  swift_retain();
  sub_2333B205C((uint64_t)v7, (uint64_t)&unk_2560503C0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_233447584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return swift_task_switch();
}

uint64_t sub_2334475A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  swift_beginAccess();
  sub_233447218(v1, v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_23318B020((__int128 *)(v0 + 56), v0 + 16);
  }
  else
  {
    if (qword_256041D40 != -1)
      swift_once();
    v2 = off_256054E98;
    *(_QWORD *)(v0 + 40) = type metadata accessor for BankConnectService();
    *(_QWORD *)(v0 + 48) = &protocol witness table for BankConnectService;
    *(_QWORD *)(v0 + 16) = v2;
    swift_retain();
    sub_233447F74(v0 + 56);
  }
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_2334476D0;
  return v7(v0 + 160, v3, v4);
}

uint64_t sub_2334476D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233447734()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  v2 = *(unsigned __int8 *)(v0 + 160);
  v3 = *(unsigned __int8 *)(v0 + 161);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1(v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233447784()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  void (*v6)(_QWORD, _QWORD);

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E768();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Failed to load offline lab preference", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }
  v5 = *(void **)(v0 + 152);
  v6 = *(void (**)(_QWORD, _QWORD))(v0 + 128);

  v6(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2334478DC(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v3;
  *(_BYTE *)(v11 + 40) = a1;
  *(_QWORD *)(v11 + 48) = a2;
  *(_QWORD *)(v11 + 56) = a3;
  v12 = v3;
  swift_retain();
  sub_2333B205C((uint64_t)v9, (uint64_t)&unk_2560503D0, v11);
  return swift_release();
}

uint64_t sub_2334479BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 128) = a6;
  *(_QWORD *)(v7 + 136) = a7;
  *(_BYTE *)(v7 + 160) = a5;
  *(_QWORD *)(v7 + 120) = a4;
  return swift_task_switch();
}

uint64_t sub_2334479DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService;
  swift_beginAccess();
  sub_233447218(v1, v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_23318B020((__int128 *)(v0 + 56), v0 + 16);
  }
  else
  {
    if (qword_256041D40 != -1)
      swift_once();
    v2 = off_256054E98;
    *(_QWORD *)(v0 + 40) = type metadata accessor for BankConnectService();
    *(_QWORD *)(v0 + 48) = &protocol witness table for BankConnectService;
    *(_QWORD *)(v0 + 16) = v2;
    swift_retain();
    sub_233447F74(v0 + 56);
  }
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
  v7 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_233447B04;
  return v7(*(unsigned __int8 *)(v0 + 160), v3, v4);
}

uint64_t sub_233447B04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233447B68()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 128);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233447BA4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  void (*v6)(void *);
  id v7;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E768();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "Failed to set offline lab preference", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }
  v5 = *(void **)(v0 + 152);
  v6 = *(void (**)(void *))(v0 + 128);

  v7 = v5;
  v6(v5);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233447DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_23361D1A8();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

unint64_t sub_233447E28()
{
  return 0xD000000000000024;
}

id BankConnectOfflineLabConsentCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BankConnectOfflineLabConsentCoordinator.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  objc_super v4;

  v1 = &v0[OBJC_IVAR____TtC10FinanceKit39BankConnectOfflineLabConsentCoordinator__bankConnectService];
  v2 = (objc_class *)type metadata accessor for BankConnectOfflineLabConsentCoordinator();
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

id BankConnectOfflineLabConsentCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BankConnectOfflineLabConsentCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_233447F74(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560503B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233447FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560503B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_233448000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23318C26C;
  *(_QWORD *)(v3 + 136) = v2;
  *(_OWORD *)(v3 + 120) = v4;
  return swift_task_switch();
}

uint64_t sub_23344806C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23318C26C;
  *(_OWORD *)(v4 + 128) = v5;
  *(_BYTE *)(v4 + 160) = v3;
  *(_QWORD *)(v4 + 120) = v2;
  return swift_task_switch();
}

uint64_t type metadata accessor for BankConnectOfflineLabConsentCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectOfflineLabConsentCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectOfflineLabConsentCoordinator.bankConnectService.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BankConnectOfflineLabConsentCoordinator.bankConnectService.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BankConnectOfflineLabConsentCoordinator.bankConnectService.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BankConnectOfflineLabConsentCoordinator.loadOfflineLabSharingPreference(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BankConnectOfflineLabConsentCoordinator.saveOfflineLabSharingPermission(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BankConnectOfflineLabConsentCoordinator.offlineLabPrivacyBundleIdentifier()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

void sub_2334481C0(uint64_t a1)
{
  uint64_t v1;

  sub_233447DDC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_3Tm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233448200(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  _Block_copy(a2);
  static DeviceInfo.deviceType.getter(&v13);
  if (v13)
  {
    a2[2](a2, 0, 0);
  }
  else
  {
    v9 = sub_23361E534();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = a1;
    v10[5] = sub_233448370;
    v10[6] = v7;
    v11 = a1;
    swift_retain();
    sub_2333B205C((uint64_t)v6, (uint64_t)&unk_256050408, (uint64_t)v10);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23344834C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_233448370(char a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), a1 & 1, a2 & 1);
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2334483C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_2331676FC;
  *(_QWORD *)(v3 + 136) = v2;
  *(_OWORD *)(v3 + 120) = v4;
  return swift_task_switch();
}

uint64_t sub_233448430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a3;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = type metadata accessor for FinanceStore.Message();
  v7 = swift_task_alloc();
  v8 = *a4;
  v5[7] = v7;
  v5[8] = v8;
  return swift_task_switch();
}

uint64_t sub_233448498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)v1 = v4;
  v5 = (void *)v4;
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v2;
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_256043018 + dword_256043018);
  v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_23344854C;
  return v9(*(_QWORD *)(v0 + 56));
}

uint64_t sub_23344854C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  sub_2331CB0F4(v4);
  return swift_task_switch();
}

uint64_t sub_2334485C4()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_233274064(0, v2, 0);
    v3 = v14;
    v4 = *(_QWORD *)(v14 + 16);
    v5 = 16 * v4;
    v6 = (id *)(v1 + 40);
    do
    {
      v7 = (uint64_t)*(v6 - 1);
      v8 = *(_QWORD *)(v14 + 24);
      v9 = *v6;
      if (v4 >= v8 >> 1)
        sub_233274064(v8 > 1, v4 + 1, 1);
      *(_QWORD *)(v14 + 16) = v4 + 1;
      v10 = v14 + v5;
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v9;
      v5 += 16;
      v6 += 2;
      ++v4;
      --v2;
    }
    while (v2);
    v11 = *(void **)(v0 + 16);
    swift_bridgeObjectRelease();

  }
  else
  {
    v12 = *(void **)(v0 + 16);
    swift_bridgeObjectRelease();

    v3 = MEMORY[0x24BEE4AF8];
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_2334486E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id NSManagedObjectContext.currentLocalHistoryToken.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v0 = NSManagedObjectContext.localStore.getter();
  if (!v0)
  {
    if (qword_2542483B0 != -1)
      swift_once();
    v8 = sub_23361DB80();
    __swift_project_value_buffer(v8, (uint64_t)qword_254248210);
    v9 = sub_23361DB68();
    v10 = sub_23361E768();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_233151000, v9, v10, "Unable to provide history token, local store does not exist", v11, 2u);
      MEMORY[0x234934590](v11, -1, -1);
    }

    return 0;
  }
  v1 = v0;
  v2 = objc_msgSend(v0, sel_persistentStoreCoordinator);
  if (!v2)
  {

    return 0;
  }
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_233623D60;
  *(_QWORD *)(v4 + 56) = sub_2331D767C();
  *(_QWORD *)(v4 + 32) = v1;
  v5 = v1;
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_currentPersistentHistoryTokenFromStores_, v6);

  return v7;
}

void NSManagedObjectContext.fetchPersistentHistory(after:)(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _OWORD v13[2];
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend((id)objc_opt_self(), sel_fetchHistoryAfterToken_, a1);
  *(_QWORD *)&v14[0] = 0;
  v3 = objc_msgSend(v1, sel_executeRequest_error_, v2, v14);
  v4 = *(void **)&v14[0];
  if (v3)
  {
    v5 = v3;
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClassUnconditional();
    v7 = v4;
    if (objc_msgSend(v6, sel_result))
    {
      sub_23361EC24();

      swift_unknownObjectRelease();
      sub_2331683D0(v13, v14);
      sub_2331683D0(v14, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254247CF8);
      swift_dynamicCast();
    }
    else
    {
      if (qword_2542483B0 != -1)
        swift_once();
      v9 = sub_23361DB80();
      __swift_project_value_buffer(v9, (uint64_t)qword_254248210);
      v10 = sub_23361DB68();
      v11 = sub_23361E768();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_233151000, v10, v11, "No history results, no transactions to return", v12, 2u);
        MEMORY[0x234934590](v12, -1, -1);
      }

    }
  }
  else
  {
    v8 = *(id *)&v14[0];
    sub_23361D1B4();

    swift_willThrow();
  }
}

uint64_t Order.ShippingFulfillment.init(_:bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t countAndFlagsBits;
  void *v25;
  uint64_t v26;
  Swift::String v27;
  void *object;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85[13];
  _QWORD v86[6];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[152];
  _BYTE v101[152];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v6);
  v84 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for Order.ShippingFulfillment();
  v9 = a3 + v8[11];
  v10 = sub_23361D340();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v80 = (int *)v9;
  v11(v9, 1, 1, v10);
  v12 = a3 + v8[12];
  *(_OWORD *)v12 = xmmword_23363ADC0;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)(v12 + 48) = 0;
  v13 = a3 + v8[13];
  v14 = type metadata accessor for Order.FulfillmentWindow(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v83 = v13;
  v15(v13, 1, 1, v14);
  v16 = a3 + v8[14];
  v17 = sub_23361D634();
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 56);
  v81 = v16;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v16, 1, 1, v17);
  v79 = v8;
  v82 = a3 + v8[16];
  v18();
  swift_retain();
  v19 = swift_bridgeObjectRetain();
  sub_23328ABD4(v19, a2);
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_release();
  v22 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a3 = v21;
  *(_QWORD *)(a3 + 8) = v22;
  v23 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 16) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a3 + 32) = v23;
  *(_BYTE *)(a3 + 40) = 0x706040302050100uLL >> (8 * *(_BYTE *)(a1 + 40));
  countAndFlagsBits = *(_QWORD *)(a1 + 48);
  if (*(_QWORD *)(a1 + 56))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v25 = (void *)OrderBundle.localizedString(forKey:)();
    swift_release();
    swift_bridgeObjectRelease();
    v26 = sub_23361D6B8();
    v27 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v26);
    countAndFlagsBits = v27._countAndFlagsBits;
    object = v27._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    object = 0;
  }
  *(_QWORD *)(a3 + 48) = countAndFlagsBits;
  *(_QWORD *)(a3 + 56) = object;
  v29 = *(_QWORD *)(a1 + 64);
  v30 = *(void **)(a1 + 72);
  if (v30)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v31 = (void *)OrderBundle.localizedString(forKey:)();
    swift_release();
    swift_bridgeObjectRelease();
    v32 = sub_23361D6B8();
    v33 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v32);
    v29 = v33._countAndFlagsBits;
    v30 = v33._object;

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a3 + 64) = v29;
  *(_QWORD *)(a3 + 72) = v30;
  v34 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a3 + 80) = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a3 + 88) = v34;
  v35 = type metadata accessor for RawOrderShippingFulfillment();
  v36 = a1 + *(int *)(v35 + 44);
  swift_bridgeObjectRetain();
  sub_2332C489C(v36, (uint64_t)v80, &qword_254248700);
  v80 = (int *)v35;
  sub_233371950(a1 + *(int *)(v35 + 48), (uint64_t)v100);
  sub_233371950((uint64_t)v100, (uint64_t)v101);
  v37 = sub_23327036C((uint64_t)v101);
  v78 = a2;
  if (v37 == 1)
  {
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v77 = 0;
    v43 = 1;
  }
  else
  {
    sub_233371950((uint64_t)v100, (uint64_t)v86);
    v44 = v87;
    v73 = v86[2];
    v74 = v86[0];
    v75 = v86[1];
    v76 = v86[3];
    v71 = v86[5];
    v72 = v86[4];
    if (v87 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = 0;
    }
    else
    {
      v61 = v98;
      v62 = v99;
      v68 = v96;
      v69 = v97;
      v70 = v94;
      v77 = v93;
      v46 = v91;
      v66 = v92;
      v67 = v95;
      v47 = v89;
      v48 = v90;
      v49 = v88;
      v63 = v88;
      v64 = v89;
      v65 = sub_23335A330();
      v85[0] = v44;
      v85[1] = v49;
      v85[2] = v47;
      v85[3] = v48;
      v85[4] = v46;
      v85[5] = v66;
      v85[6] = v77;
      v85[7] = v70;
      v85[8] = v67;
      v85[9] = v68;
      v85[10] = v69;
      v85[11] = v61;
      v85[12] = v62;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23332938C(v44);
      v45 = CNMutablePostalAddress.init(rawAddress:)(v85);
    }
    v77 = (uint64_t)v45;
    v39 = v73;
    v38 = v74;
    v43 = v75;
    v40 = v76;
    v42 = v71;
    v41 = v72;
  }
  sub_23344C074(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(void **)(v12 + 48));
  *(_QWORD *)v12 = v38;
  *(_QWORD *)(v12 + 8) = v43;
  *(_QWORD *)(v12 + 16) = v39;
  *(_QWORD *)(v12 + 24) = v40;
  *(_QWORD *)(v12 + 32) = v41;
  *(_QWORD *)(v12 + 40) = v42;
  *(_QWORD *)(v12 + 48) = v77;
  v50 = v84;
  RawOrderShippingFulfillment.estimatedDeliveryWindow.getter(v84);
  swift_release();
  sub_233170B8C((uint64_t)v50, v83, &qword_256043808);
  v51 = v80;
  sub_2332C489C(a1 + v80[15], v81, (uint64_t *)&unk_254247DA0);
  v52 = (uint64_t *)(a1 + v51[16]);
  v54 = *v52;
  v53 = v52[1];
  v55 = v79;
  v56 = (_QWORD *)(a3 + v79[15]);
  *v56 = v54;
  v56[1] = v53;
  v57 = a1 + v51[17];
  swift_bridgeObjectRetain();
  sub_2332C489C(v57, v82, (uint64_t *)&unk_254247DA0);
  v58 = *(_BYTE *)(a1 + v51[18]);
  result = sub_233168500(a1, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderShippingFulfillment);
  *(_BYTE *)(a3 + v55[17]) = v58;
  return result;
}

void Order.ShippingFulfillment.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id i;
  unint64_t v30;
  unint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t countAndFlagsBits;
  void *object;
  id v55;
  void *v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char *v73;
  id v74;
  void *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  id v82;
  void *v83;
  char v84;
  char *v85;
  int *v86;
  char *v87;
  void (*v88)(uint64_t, uint64_t, uint64_t, _QWORD);
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v85 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v10);
  v94 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&v91 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for Order.ShippingFulfillment();
  v15 = a2 + v14[11];
  v16 = sub_23361D340();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v16 - 8) + 56);
  *(_QWORD *)&v90 = v15;
  *(_QWORD *)&v89 = v16;
  v88 = v17;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v15, 1, 1);
  v18 = a2 + v14[12];
  *(_OWORD *)v18 = xmmword_23363ADC0;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_QWORD *)(v18 + 48) = 0;
  v19 = a2 + v14[13];
  v20 = type metadata accessor for Order.FulfillmentWindow(0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v92 = v19;
  v21(v19, 1, 1, v20);
  v22 = a2 + v14[14];
  v23 = sub_23361D634();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v93 = v22;
  v24(v22, 1, 1, v23);
  v95 = a2 + v14[16];
  v96 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24;
  v97 = v23;
  ((void (*)(void))v24)();
  v25 = ManagedOrderShippingFulfillment.lineItems.getter();
  if (v25 >> 62)
  {
    v26 = sub_23361EF30();
    if (v26)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    goto LABEL_15;
  }
  v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v26)
    goto LABEL_14;
LABEL_3:
  v106 = MEMORY[0x24BEE4AF8];
  sub_233273CC0(0, v26 & ~(v26 >> 63), 0);
  if (v26 < 0)
  {
    __break(1u);
    return;
  }
  v85 = v9;
  v86 = v14;
  v87 = v7;
  v27 = 0;
  v28 = v106;
  if ((v25 & 0xC000000000000001) == 0)
    goto LABEL_6;
LABEL_5:
  for (i = (id)MEMORY[0x234933120](v27, v25); ; i = *(id *)(v25 + 8 * v27 + 32))
  {
    Order.LineItem.init(_:)(i, &v98);
    v106 = v28;
    v31 = *(_QWORD *)(v28 + 16);
    v30 = *(_QWORD *)(v28 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_233273CC0(v30 > 1, v31 + 1, 1);
      v28 = v106;
    }
    *(_QWORD *)(v28 + 16) = v31 + 1;
    v32 = (_OWORD *)(v28 + (v31 << 7));
    v33 = v98;
    v34 = v99;
    v35 = v101;
    v32[4] = v100;
    v32[5] = v35;
    v32[2] = v33;
    v32[3] = v34;
    v36 = v102;
    v37 = v103;
    v38 = v105;
    v32[8] = v104;
    v32[9] = v38;
    v32[6] = v36;
    v32[7] = v37;
    if (v26 - 1 == v27)
      break;
    ++v27;
    if ((v25 & 0xC000000000000001) != 0)
      goto LABEL_5;
LABEL_6:
    ;
  }
  swift_bridgeObjectRelease();
  v7 = v87;
  v14 = v86;
  v9 = v85;
LABEL_15:
  *(_QWORD *)a2 = v28;
  v39 = objc_msgSend(a1, sel_carrier, v85, v86, v87);
  if (v39)
  {
    v40 = v39;
    v41 = sub_23361E150();
    v43 = v42;

  }
  else
  {
    v41 = 0;
    v43 = 0;
  }
  *(_QWORD *)(a2 + 8) = v41;
  *(_QWORD *)(a2 + 16) = v43;
  v44 = objc_msgSend(a1, sel_carrierIdentifier);
  if (v44)
  {
    v45 = v44;
    v46 = sub_23361E150();
    v48 = v47;

  }
  else
  {
    v46 = 0;
    v48 = 0;
  }
  *(_QWORD *)(a2 + 24) = v46;
  *(_QWORD *)(a2 + 32) = v48;
  *(_BYTE *)(a2 + 40) = ManagedOrderShippingFulfillment.status.getter();
  v49 = objc_msgSend(a1, sel_statusDescription);
  if (v49)
  {
    v50 = v49;
    v51 = sub_23361D6B8();
    v52 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v51);
    countAndFlagsBits = v52._countAndFlagsBits;
    object = v52._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    countAndFlagsBits = 0;
    object = 0;
  }
  *(_QWORD *)(a2 + 48) = countAndFlagsBits;
  *(_QWORD *)(a2 + 56) = object;
  v55 = objc_msgSend(a1, sel_notes);
  if (v55)
  {
    v56 = v55;
    v57 = sub_23361D6B8();
    v58 = LocalizedString.localizedString(for:)((Swift::OpaquePointer)v57);
    v59 = v58._countAndFlagsBits;
    v60 = v58._object;

    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = 0;
    v60 = 0;
  }
  *(_QWORD *)(a2 + 64) = v59;
  *(_QWORD *)(a2 + 72) = v60;
  v61 = objc_msgSend(a1, sel_trackingNumber);
  if (v61)
  {
    v62 = v61;
    v63 = sub_23361E150();
    v65 = v64;

  }
  else
  {
    v63 = 0;
    v65 = 0;
  }
  v66 = v91;
  *(_QWORD *)(a2 + 80) = v63;
  *(_QWORD *)(a2 + 88) = v65;
  v67 = objc_msgSend(a1, sel_trackingURL);
  if (v67)
  {
    v68 = v67;
    sub_23361D2D4();

    v69 = 0;
  }
  else
  {
    v69 = 1;
  }
  v70 = 1;
  v88(v66, v69, 1, v89);
  sub_233170B8C(v66, v90, &qword_254248700);
  ManagedOrderShippingFulfillment.recipientModel.getter((uint64_t *)&v98);
  v91 = v98;
  v90 = v99;
  v89 = v100;
  v71 = v101;
  sub_23344C074(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), *(_QWORD *)(v18 + 32), *(_QWORD *)(v18 + 40), *(void **)(v18 + 48));
  v72 = v90;
  *(_OWORD *)v18 = v91;
  *(_OWORD *)(v18 + 16) = v72;
  *(_OWORD *)(v18 + 32) = v89;
  *(_QWORD *)(v18 + 48) = v71;
  v73 = v94;
  ManagedOrderShippingFulfillment.estimatedDeliveryWindow.getter(v94);
  sub_233170B8C((uint64_t)v73, v92, &qword_256043808);
  v74 = objc_msgSend(a1, sel_deliveryDate);
  if (v74)
  {
    v75 = v74;
    sub_23361D5EC();

    v70 = 0;
  }
  v76 = 1;
  v96(v9, v70, 1, v97);
  sub_233170B8C((uint64_t)v9, v93, (uint64_t *)&unk_254247DA0);
  v77 = objc_msgSend(a1, sel_fulfillmentIdentifier);
  v78 = sub_23361E150();
  v80 = v79;

  v81 = (uint64_t *)(a2 + v14[15]);
  *v81 = v78;
  v81[1] = v80;
  v82 = objc_msgSend(a1, sel_shippedDate);
  if (v82)
  {
    v83 = v82;
    sub_23361D5EC();

    v76 = 0;
  }
  v96(v7, v76, 1, v97);
  sub_233170B8C((uint64_t)v7, v95, (uint64_t *)&unk_254247DA0);
  v84 = ManagedOrderShippingFulfillment.shippingType.getter();

  *(_BYTE *)(a2 + v14[17]) = v84 & 1;
}

uint64_t Order.ShippingFulfillment.lineItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Order.ShippingFulfillment.lineItems.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Order.ShippingFulfillment.lineItems.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.carrier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingFulfillment.carrier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.carrier.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.carrierIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingFulfillment.carrierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.carrierIdentifier.modify())()
{
  return nullsub_1;
}

void Order.ShippingFulfillment.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *Order.ShippingFulfillment.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*Order.ShippingFulfillment.status.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.statusDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingFulfillment.statusDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.statusDescription.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingFulfillment.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.notes.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.trackingNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingFulfillment.trackingNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.trackingNumber.modify())()
{
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.trackingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 44), a1, &qword_254248700);
}

uint64_t Order.ShippingFulfillment.trackingURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 44), &qword_254248700);
}

uint64_t (*Order.ShippingFulfillment.trackingURL.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.recipient.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Order.ShippingFulfillment() + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = (void *)v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = (uint64_t)v10;
  return sub_23344C0C8(v4, v5, v6, v7, v8, v9, v10);
}

__n128 Order.ShippingFulfillment.recipient.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = v1 + *(int *)(type metadata accessor for Order.ShippingFulfillment() + 48);
  sub_23344C074(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48));
  *(_OWORD *)v3 = v7;
  *(_OWORD *)(v3 + 16) = v6;
  result = v5;
  *(__n128 *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 48) = v2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.recipient.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.estimatedDeliveryWindow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 52), a1, &qword_256043808);
}

uint64_t Order.ShippingFulfillment.estimatedDeliveryWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 52), &qword_256043808);
}

uint64_t (*Order.ShippingFulfillment.estimatedDeliveryWindow.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.deliveryDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 56), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.ShippingFulfillment.deliveryDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 56), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Order.ShippingFulfillment.deliveryDate.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.fulfillmentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Order.ShippingFulfillment() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingFulfillment.fulfillmentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Order.ShippingFulfillment() + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.fulfillmentIdentifier.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.shippedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_2331686A0(v1 + *(int *)(v3 + 64), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t Order.ShippingFulfillment.shippedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Order.ShippingFulfillment();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 64), (uint64_t *)&unk_254247DA0);
}

uint64_t (*Order.ShippingFulfillment.shippedDate.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t Order.ShippingFulfillment.shippingType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Order.ShippingFulfillment();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t Order.ShippingFulfillment.shippingType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Order.ShippingFulfillment();
  *(_BYTE *)(v1 + *(int *)(result + 68)) = v2;
  return result;
}

uint64_t (*Order.ShippingFulfillment.shippingType.modify())(_QWORD)
{
  type metadata accessor for Order.ShippingFulfillment();
  return nullsub_1;
}

uint64_t sub_233449EB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233449EEC + 4 * byte_23364B450[a1]))(0x6D657449656E696CLL, 0xE900000000000073);
}

uint64_t sub_233449EEC()
{
  return 0x72656972726163;
}

unint64_t sub_233449F04()
{
  return 0xD000000000000011;
}

uint64_t sub_233449F40()
{
  return 0x7365746F6ELL;
}

uint64_t sub_233449F54()
{
  return 0x676E696B63617274;
}

uint64_t sub_233449F88()
{
  return 0x6E65697069636572;
}

unint64_t sub_233449FA0()
{
  return 0xD000000000000017;
}

uint64_t sub_233449FF8()
{
  return 0x4464657070696873;
}

uint64_t sub_23344A018()
{
  return 0x676E697070696873;
}

uint64_t sub_23344A038()
{
  unsigned __int8 *v0;

  return sub_233449EB4(*v0);
}

uint64_t sub_23344A040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23344E1C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23344A064(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_23344A070()
{
  sub_23344C118();
  return sub_23361F428();
}

uint64_t sub_23344A098()
{
  sub_23344C118();
  return sub_23361F434();
}

uint64_t Order.ShippingFulfillment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23344C118();
  sub_23361F410();
  *(_QWORD *)&v16 = *(_QWORD *)v3;
  v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560492A0);
  sub_2332E93D4(&qword_2560492A8, (uint64_t (*)(void))sub_2332E934C, MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v16) = 1;
  sub_23361F0E0();
  LOBYTE(v16) = 2;
  sub_23361F0E0();
  LOBYTE(v16) = *(_BYTE *)(v3 + 40);
  v20 = 3;
  sub_23344C15C();
  sub_23361F17C();
  LOBYTE(v16) = 4;
  sub_23361F0E0();
  LOBYTE(v16) = 5;
  sub_23361F0E0();
  LOBYTE(v16) = 6;
  sub_23361F0E0();
  v9 = type metadata accessor for Order.ShippingFulfillment();
  LOBYTE(v16) = 7;
  sub_23361D340();
  sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_23361F110();
  v10 = (__int128 *)(v3 + *(int *)(v9 + 48));
  v11 = *((_QWORD *)v10 + 6);
  v12 = v10[1];
  v16 = *v10;
  v17 = v12;
  v18 = v10[2];
  v19 = v11;
  v20 = 8;
  sub_23344C1A0();
  sub_23361F110();
  LOBYTE(v16) = 9;
  type metadata accessor for Order.FulfillmentWindow(0);
  sub_233167C58(&qword_25604BF00, type metadata accessor for Order.FulfillmentWindow, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow);
  sub_23361F110();
  v15 = v6;
  LOBYTE(v16) = 10;
  sub_23361D634();
  sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23361F110();
  LOBYTE(v16) = 11;
  sub_23361F140();
  LOBYTE(v16) = 12;
  sub_23361F110();
  LOBYTE(v16) = *(_BYTE *)(v3 + *(int *)(v9 + 68));
  v20 = 13;
  sub_23344C1E4();
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v5);
}

uint64_t Order.ShippingFulfillment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  int *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char v66;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v47 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (uint64_t)&v44 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)&v51 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050440);
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for Order.ShippingFulfillment();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 8) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *((_OWORD *)v16 + 4) = 0u;
  *((_OWORD *)v16 + 5) = 0u;
  v17 = (uint64_t)&v16[*(int *)(v14 + 44)];
  v18 = sub_23361D340();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v60 = v17;
  v19(v17, 1, 1, v18);
  v20 = &v16[v13[12]];
  *(_OWORD *)v20 = xmmword_23363ADC0;
  *((_OWORD *)v20 + 1) = 0u;
  *((_OWORD *)v20 + 2) = 0u;
  v61 = v20;
  *((_QWORD *)v20 + 6) = 0;
  v21 = (uint64_t)&v16[v13[13]];
  v22 = type metadata accessor for Order.FulfillmentWindow(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v59 = v21;
  v23(v21, 1, 1, v22);
  v24 = (uint64_t)&v16[v13[14]];
  v25 = sub_23361D634();
  v26 = *(void (**)(void))(*(_QWORD *)(v25 - 8) + 56);
  v58 = v24;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(v24, 1, 1, v25);
  v54 = v13;
  v57 = &v16[v13[16]];
  v26();
  v27 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_23344C118();
  v53 = v12;
  v28 = v56;
  sub_23361F3EC();
  if (v28)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v31 = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608(v31, &qword_254248700);
    sub_23344C074(*(_QWORD *)v61, *((_QWORD *)v61 + 1), *((_QWORD *)v61 + 2), *((_QWORD *)v61 + 3), *((_QWORD *)v61 + 4), *((_QWORD *)v61 + 5), *((void **)v61 + 6));
    sub_233168608(v59, &qword_256043808);
    sub_233168608(v58, (uint64_t *)&unk_254247DA0);
    return sub_233168608((uint64_t)v57, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v56 = v22;
    v29 = v50;
    v30 = v51;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2560492A0);
    v66 = 0;
    sub_2332E93D4(&qword_2560492C8, (uint64_t (*)(void))sub_2332E943C, MEMORY[0x24BEE12D0]);
    sub_23361F068();
    *(_QWORD *)v16 = v62;
    LOBYTE(v62) = 1;
    *((_QWORD *)v16 + 1) = sub_23361EFCC();
    *((_QWORD *)v16 + 2) = v32;
    LOBYTE(v62) = 2;
    *((_QWORD *)v16 + 3) = sub_23361EFCC();
    *((_QWORD *)v16 + 4) = v33;
    v66 = 3;
    sub_23344C228();
    sub_23361F068();
    v16[40] = v62;
    LOBYTE(v62) = 4;
    *((_QWORD *)v16 + 6) = sub_23361EFCC();
    *((_QWORD *)v16 + 7) = v34;
    LOBYTE(v62) = 5;
    *((_QWORD *)v16 + 8) = sub_23361EFCC();
    *((_QWORD *)v16 + 9) = v35;
    LOBYTE(v62) = 6;
    *((_QWORD *)v16 + 10) = sub_23361EFCC();
    *((_QWORD *)v16 + 11) = v36;
    LOBYTE(v62) = 7;
    sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_23361EFFC();
    sub_233170B8C(v30, v60, &qword_254248700);
    v66 = 8;
    sub_23344C26C();
    sub_23361EFFC();
    v51 = v62;
    v45 = v63;
    v44 = v64;
    v37 = v65;
    v38 = v61;
    sub_23344C074(*(_QWORD *)v61, *((_QWORD *)v61 + 1), *((_QWORD *)v61 + 2), *((_QWORD *)v61 + 3), *((_QWORD *)v61 + 4), *((_QWORD *)v61 + 5), *((void **)v61 + 6));
    v39 = v45;
    *(_OWORD *)v38 = v51;
    *((_OWORD *)v38 + 1) = v39;
    *((_OWORD *)v38 + 2) = v44;
    *((_QWORD *)v38 + 6) = v37;
    LOBYTE(v62) = 9;
    sub_233167C58(&qword_25604BEE8, type metadata accessor for Order.FulfillmentWindow, (uint64_t)&protocol conformance descriptor for Order.FulfillmentWindow);
    sub_23361EFFC();
    sub_233170B8C(v49, v59, &qword_256043808);
    LOBYTE(v62) = 10;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361EFFC();
    sub_233170B8C(v48, v58, (uint64_t *)&unk_254247DA0);
    LOBYTE(v62) = 11;
    v40 = sub_23361F02C();
    v41 = (uint64_t *)&v16[v54[15]];
    *v41 = v40;
    v41[1] = v42;
    LOBYTE(v62) = 12;
    sub_23361EFFC();
    sub_233170B8C(v47, (uint64_t)v57, (uint64_t *)&unk_254247DA0);
    v66 = 13;
    sub_23344C2B0();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v53, v52);
    v16[v54[17]] = v62;
    sub_23344C2F4((uint64_t)v16, v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    return sub_233168500((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Order.ShippingFulfillment);
  }
}

uint64_t sub_23344AD68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.ShippingFulfillment.init(from:)(a1, a2);
}

uint64_t sub_23344AD7C(_QWORD *a1)
{
  return Order.ShippingFulfillment.encode(to:)(a1);
}

uint64_t Order.ShippingFulfillment.fulfillment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23344C2F4(v1, a1);
  type metadata accessor for Order.Fulfillment();
  return swift_storeEnumTagMultiPayload();
}

__n128 Order.ShippingRecipient.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  __n128 result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __int128 v13;
  _OWORD v14[6];
  uint64_t v15;
  _BYTE v16[48];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = *(_OWORD *)(a1 + 112);
  v20 = *(_OWORD *)(a1 + 96);
  v21 = v3;
  v22 = *(_OWORD *)(a1 + 128);
  v23 = *(_QWORD *)(a1 + 144);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v16[32] = *(_OWORD *)(a1 + 32);
  v17 = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v18 = *(_OWORD *)(a1 + 64);
  v19 = v5;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v16 = *(_OWORD *)a1;
  *(_OWORD *)&v16[16] = v6;
  v12 = *(__n128 *)&v16[24];
  v13 = *(_OWORD *)&v16[8];
  v10 = *(_QWORD *)v16;
  v11 = *(_QWORD *)&v16[40];
  if ((_QWORD)v17 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23344C338((uint64_t)v16);
    v7 = 0;
  }
  else
  {
    sub_23335A330();
    v14[0] = v17;
    v14[1] = v18;
    v14[2] = v19;
    v14[3] = v20;
    v14[4] = v21;
    v14[5] = v22;
    v15 = v23;
    sub_23332938C(v17);
    v8 = v17;
    sub_23332938C(v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = CNMutablePostalAddress.init(rawAddress:)((uint64_t *)v14);
    sub_23344C338((uint64_t)v16);
    sub_233329310(v8);
  }
  *(_QWORD *)a2 = v10;
  *(_OWORD *)(a2 + 8) = v13;
  result = v12;
  *(__n128 *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t _s10FinanceKit5OrderV19ShippingFulfillmentV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t *v67;
  uint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void *v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  void *v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, _QWORD *);
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  void (*v139)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  char *v167;
  _QWORD v168[7];
  _QWORD v169[6];
  id v170;

  v158 = sub_23361D634();
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v149 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v5 = MEMORY[0x24BDAC7A8](v155);
  v154 = (uint64_t)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v161 = (uint64_t)&v141 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v148 = (uint64_t)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v151 = (uint64_t)&v141 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v152 = (uint64_t)&v141 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v150 = (uint64_t)&v141 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v159 = (uint64_t)&v141 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v160 = (uint64_t)&v141 - v19;
  v166 = (_QWORD *)type metadata accessor for Order.FulfillmentWindow(0);
  v163 = *(v166 - 1);
  MEMORY[0x24BDAC7A8](v166);
  v153 = (uint64_t)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(qword_256043D08);
  MEMORY[0x24BDAC7A8](v162);
  v167 = (char *)&v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v156 = (uint64_t)&v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v164 = (uint64_t)&v141 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v165 = (uint64_t)&v141 - v27;
  v28 = sub_23361D340();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v141 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v141 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v141 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v141 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v141 - v42;
  if ((sub_23322B4CC(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_78;
  v44 = *(_QWORD *)(a1 + 16);
  v45 = *(_QWORD *)(a2 + 16);
  if (!v44)
  {
    if (v45)
      goto LABEL_78;
    goto LABEL_9;
  }
  if (!v45)
    goto LABEL_78;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && v44 == v45 || (v46 = sub_23361F224(), v47 = 0, (v46 & 1) != 0))
  {
LABEL_9:
    v48 = *(_QWORD *)(a1 + 32);
    v49 = *(_QWORD *)(a2 + 32);
    if (v48)
    {
      if (!v49)
        goto LABEL_78;
      if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24) || v48 != v49)
      {
        v50 = sub_23361F224();
        v47 = 0;
        if ((v50 & 1) == 0)
          return v47 & 1;
      }
    }
    else if (v49)
    {
      goto LABEL_78;
    }
    if (*(unsigned __int8 *)(a1 + 40) != *(unsigned __int8 *)(a2 + 40))
      goto LABEL_78;
    v51 = *(_QWORD *)(a1 + 56);
    v52 = *(_QWORD *)(a2 + 56);
    if (v51)
    {
      if (!v52)
        goto LABEL_78;
      if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48) || v51 != v52)
      {
        v53 = sub_23361F224();
        v47 = 0;
        if ((v53 & 1) == 0)
          return v47 & 1;
      }
    }
    else if (v52)
    {
      goto LABEL_78;
    }
    v54 = *(_QWORD *)(a1 + 72);
    v55 = *(_QWORD *)(a2 + 72);
    if (v54)
    {
      if (!v55)
        goto LABEL_78;
      if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64) || v54 != v55)
      {
        v56 = sub_23361F224();
        v47 = 0;
        if ((v56 & 1) == 0)
          return v47 & 1;
      }
    }
    else if (v55)
    {
      goto LABEL_78;
    }
    v57 = *(_QWORD *)(a1 + 88);
    v58 = *(_QWORD *)(a2 + 88);
    if (v57)
    {
      if (!v58)
        goto LABEL_78;
      if (*(_QWORD *)(a1 + 80) != *(_QWORD *)(a2 + 80) || v57 != v58)
      {
        v59 = sub_23361F224();
        v47 = 0;
        if ((v59 & 1) == 0)
          return v47 & 1;
      }
    }
    else if (v58)
    {
      goto LABEL_78;
    }
    v60 = type metadata accessor for Order.ShippingFulfillment();
    v61 = *(int *)(v60 + 44);
    v146 = a1;
    v62 = a1 + v61;
    v63 = v60;
    sub_2331686A0(v62, (uint64_t)v43, &qword_254248700);
    v145 = (int *)v63;
    v64 = *(int *)(v63 + 44);
    v147 = a2;
    sub_2331686A0(a2 + v64, (uint64_t)v41, &qword_254248700);
    v65 = (uint64_t)&v34[*(int *)(v32 + 48)];
    sub_2331686A0((uint64_t)v43, (uint64_t)v34, &qword_254248700);
    sub_2331686A0((uint64_t)v41, v65, &qword_254248700);
    v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    if (v66((uint64_t)v34, 1, v28) == 1)
    {
      sub_233168608((uint64_t)v41, &qword_254248700);
      sub_233168608((uint64_t)v43, &qword_254248700);
      if (v66(v65, 1, v28) == 1)
      {
        sub_233168608((uint64_t)v34, &qword_254248700);
        goto LABEL_46;
      }
    }
    else
    {
      sub_2331686A0((uint64_t)v34, (uint64_t)v38, &qword_254248700);
      if (v66(v65, 1, v28) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v31, v65, v28);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v69 = sub_23361E108();
        v70 = *(void (**)(char *, uint64_t))(v29 + 8);
        v70(v31, v28);
        sub_233168608((uint64_t)v41, &qword_254248700);
        sub_233168608((uint64_t)v43, &qword_254248700);
        v70(v38, v28);
        sub_233168608((uint64_t)v34, &qword_254248700);
        if ((v69 & 1) == 0)
          goto LABEL_78;
LABEL_46:
        v71 = v145[12];
        v72 = v146;
        v73 = *(_QWORD *)(v146 + v71);
        v74 = *(_QWORD *)(v146 + v71 + 8);
        v75 = *(_QWORD *)(v146 + v71 + 16);
        v76 = *(_QWORD *)(v146 + v71 + 24);
        v78 = *(_QWORD *)(v146 + v71 + 32);
        v77 = *(_QWORD *)(v146 + v71 + 40);
        v79 = *(id *)(v146 + v71 + 48);
        v80 = (uint64_t *)(v147 + v71);
        v82 = *v80;
        v81 = v80[1];
        v84 = v80[2];
        v83 = v80[3];
        v86 = v80[4];
        v85 = v80[5];
        v87 = (char *)v80[6];
        if (v74 == 1)
        {
          v141 = v73;
          v142 = v75;
          v144 = v77;
          v143 = v78;
          if (v81 == 1)
            goto LABEL_53;
        }
        else
        {
          v169[0] = v73;
          v169[1] = v74;
          v169[2] = v75;
          v169[3] = v76;
          v169[4] = v78;
          v169[5] = v77;
          v170 = v79;
          v88 = v79;
          if (v81 != 1)
          {
            v168[0] = v82;
            v168[1] = v81;
            v168[2] = v84;
            v168[3] = v83;
            v168[4] = v86;
            v168[5] = v85;
            v168[6] = v87;
            v92 = v73;
            v93 = v75;
            v94 = v76;
            v95 = v76;
            v96 = v77;
            v97 = v88;
            sub_23344C0C8(v73, v74, v75, v95, v78, v77, v88);
            v98 = v97;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            LODWORD(v144) = _s10FinanceKit5OrderV17ShippingRecipientV2eeoiySbAE_AEtFZ_0(v169, v168);
            v99 = v170;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_23344C074(v92, v74, v93, v94, v78, v96, v97);
            v72 = v146;
            if ((v144 & 1) == 0)
              goto LABEL_78;
LABEL_53:
            v100 = v145;
            v101 = v165;
            sub_2331686A0(v72 + v145[13], v165, &qword_256043808);
            v102 = v164;
            sub_2331686A0(v147 + v100[13], v164, &qword_256043808);
            v103 = (uint64_t)v167;
            v104 = (uint64_t)&v167[*(int *)(v162 + 48)];
            sub_2331686A0(v101, (uint64_t)v167, &qword_256043808);
            sub_2331686A0(v102, v104, &qword_256043808);
            v105 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v163 + 48);
            v106 = v166;
            if (v105(v103, 1, v166) == 1)
            {
              sub_233168608(v102, &qword_256043808);
              sub_233168608(v101, &qword_256043808);
              if (v105(v104, 1, v106) == 1)
              {
                sub_233168608(v103, &qword_256043808);
LABEL_60:
                v110 = v160;
                sub_2331686A0(v146 + v100[14], v160, (uint64_t *)&unk_254247DA0);
                v111 = v100;
                v112 = v159;
                sub_2331686A0(v147 + v100[14], v159, (uint64_t *)&unk_254247DA0);
                v113 = v161;
                v114 = v161 + *(int *)(v155 + 48);
                sub_2331686A0(v110, v161, (uint64_t *)&unk_254247DA0);
                sub_2331686A0(v112, v114, (uint64_t *)&unk_254247DA0);
                v115 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
                v116 = v158;
                if (v115(v113, 1, v158) == 1)
                {
                  sub_233168608(v159, (uint64_t *)&unk_254247DA0);
                  sub_233168608(v160, (uint64_t *)&unk_254247DA0);
                  if (v115(v114, 1, v116) == 1)
                  {
                    sub_233168608(v161, (uint64_t *)&unk_254247DA0);
                    goto LABEL_67;
                  }
                }
                else
                {
                  v117 = v150;
                  sub_2331686A0(v161, v150, (uint64_t *)&unk_254247DA0);
                  if (v115(v114, 1, v116) != 1)
                  {
                    v118 = v157;
                    v119 = v149;
                    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 32))(v149, v114, v116);
                    sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                    v120 = sub_23361E108();
                    v121 = *(void (**)(char *, uint64_t))(v118 + 8);
                    v121(v119, v116);
                    sub_233168608(v159, (uint64_t *)&unk_254247DA0);
                    sub_233168608(v160, (uint64_t *)&unk_254247DA0);
                    v121((char *)v117, v116);
                    sub_233168608(v161, (uint64_t *)&unk_254247DA0);
                    if ((v120 & 1) == 0)
                      goto LABEL_78;
LABEL_67:
                    v122 = v111[15];
                    v123 = v146;
                    v124 = *(_QWORD *)(v146 + v122);
                    v125 = *(_QWORD *)(v146 + v122 + 8);
                    v126 = v147;
                    v127 = (_QWORD *)(v147 + v122);
                    if (v124 == *v127 && v125 == v127[1]
                      || (v128 = sub_23361F224(), v123 = v146, v126 = v147, v47 = 0, (v128 & 1) != 0))
                    {
                      v129 = v152;
                      v130 = v126;
                      sub_2331686A0(v123 + v111[16], v152, (uint64_t *)&unk_254247DA0);
                      v131 = v151;
                      sub_2331686A0(v130 + v111[16], v151, (uint64_t *)&unk_254247DA0);
                      v132 = v154;
                      v133 = v154 + *(int *)(v155 + 48);
                      sub_2331686A0(v129, v154, (uint64_t *)&unk_254247DA0);
                      sub_2331686A0(v131, v133, (uint64_t *)&unk_254247DA0);
                      if (v115(v132, 1, v158) == 1)
                      {
                        sub_233168608(v151, (uint64_t *)&unk_254247DA0);
                        sub_233168608(v152, (uint64_t *)&unk_254247DA0);
                        if (v115(v133, 1, v158) == 1)
                        {
                          sub_233168608(v154, (uint64_t *)&unk_254247DA0);
LABEL_77:
                          v47 = *(_BYTE *)(v146 + v111[17]) ^ *(_BYTE *)(v147 + v111[17]) ^ 1;
                          return v47 & 1;
                        }
                        goto LABEL_75;
                      }
                      sub_2331686A0(v154, v148, (uint64_t *)&unk_254247DA0);
                      if (v115(v133, 1, v158) == 1)
                      {
                        sub_233168608(v151, (uint64_t *)&unk_254247DA0);
                        sub_233168608(v152, (uint64_t *)&unk_254247DA0);
                        (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v148, v158);
LABEL_75:
                        v67 = &qword_256042DA0;
                        v68 = v154;
                        goto LABEL_44;
                      }
                      v134 = v157;
                      v135 = v149;
                      v136 = v158;
                      (*(void (**)(char *, uint64_t, uint64_t))(v157 + 32))(v149, v133, v158);
                      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                      v137 = v148;
                      v138 = sub_23361E108();
                      v139 = *(void (**)(char *, uint64_t))(v134 + 8);
                      v139(v135, v136);
                      sub_233168608(v151, (uint64_t *)&unk_254247DA0);
                      sub_233168608(v152, (uint64_t *)&unk_254247DA0);
                      v139((char *)v137, v136);
                      sub_233168608(v154, (uint64_t *)&unk_254247DA0);
                      if ((v138 & 1) != 0)
                        goto LABEL_77;
LABEL_78:
                      v47 = 0;
                      return v47 & 1;
                    }
                    return v47 & 1;
                  }
                  sub_233168608(v159, (uint64_t *)&unk_254247DA0);
                  sub_233168608(v160, (uint64_t *)&unk_254247DA0);
                  (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v117, v116);
                }
                v67 = &qword_256042DA0;
                v68 = v161;
LABEL_44:
                sub_233168608(v68, v67);
                goto LABEL_78;
              }
            }
            else
            {
              v107 = v156;
              sub_2331686A0(v103, v156, &qword_256043808);
              if (v105(v104, 1, v106) != 1)
              {
                v108 = v153;
                sub_233431EC8(v104, v153);
                v109 = _s10FinanceKit5OrderV17FulfillmentWindowO2eeoiySbAE_AEtFZ_0(v107, v108);
                sub_233168500(v108, type metadata accessor for Order.FulfillmentWindow);
                sub_233168608(v102, &qword_256043808);
                sub_233168608(v101, &qword_256043808);
                sub_233168500(v107, type metadata accessor for Order.FulfillmentWindow);
                sub_233168608(v103, &qword_256043808);
                if ((v109 & 1) == 0)
                  goto LABEL_78;
                goto LABEL_60;
              }
              sub_233168608(v102, &qword_256043808);
              sub_233168608(v101, &qword_256043808);
              sub_233168500(v107, type metadata accessor for Order.FulfillmentWindow);
            }
            v67 = qword_256043D08;
            v68 = v103;
            goto LABEL_44;
          }
          v141 = v73;
          v142 = v75;
          v143 = v78;
          v89 = v77;
          v166 = v79;
          v167 = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v144 = v89;
          swift_bridgeObjectRetain();
          v79 = v166;
          v90 = v166;
          v87 = v167;
        }
        v91 = v87;
        sub_23344C0C8(v82, v81, v84, v83, v86, v85, v87);
        sub_23344C074(v141, v74, v142, v76, v143, v144, v79);
        sub_23344C074(v82, v81, v84, v83, v86, v85, v91);
        goto LABEL_78;
      }
      sub_233168608((uint64_t)v41, &qword_254248700);
      sub_233168608((uint64_t)v43, &qword_254248700);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
    }
    v67 = &qword_256045948;
    v68 = (uint64_t)v34;
    goto LABEL_44;
  }
  return v47 & 1;
}

uint64_t type metadata accessor for Order.ShippingFulfillment()
{
  uint64_t result;

  result = qword_2560504B8;
  if (!qword_2560504B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23344C074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_23344C0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v7;
  uint64_t result;

  if (a2 != 1)
  {
    v7 = a7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23344C118()
{
  unint64_t result;

  result = qword_256050420;
  if (!qword_256050420)
  {
    result = MEMORY[0x234934494](&unk_23364B694, &_s19ShippingFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050420);
  }
  return result;
}

unint64_t sub_23344C15C()
{
  unint64_t result;

  result = qword_256050428;
  if (!qword_256050428)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingStatus, &type metadata for Order.ShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256050428);
  }
  return result;
}

unint64_t sub_23344C1A0()
{
  unint64_t result;

  result = qword_256050430;
  if (!qword_256050430)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingRecipient, &type metadata for Order.ShippingRecipient);
    atomic_store(result, (unint64_t *)&qword_256050430);
  }
  return result;
}

unint64_t sub_23344C1E4()
{
  unint64_t result;

  result = qword_256050438;
  if (!qword_256050438)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingType, &type metadata for Order.ShippingType);
    atomic_store(result, (unint64_t *)&qword_256050438);
  }
  return result;
}

unint64_t sub_23344C228()
{
  unint64_t result;

  result = qword_256050448;
  if (!qword_256050448)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingStatus, &type metadata for Order.ShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256050448);
  }
  return result;
}

unint64_t sub_23344C26C()
{
  unint64_t result;

  result = qword_256050450;
  if (!qword_256050450)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingRecipient, &type metadata for Order.ShippingRecipient);
    atomic_store(result, (unint64_t *)&qword_256050450);
  }
  return result;
}

unint64_t sub_23344C2B0()
{
  unint64_t result;

  result = qword_256050458;
  if (!qword_256050458)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingType, &type metadata for Order.ShippingType);
    atomic_store(result, (unint64_t *)&qword_256050458);
  }
  return result;
}

uint64_t sub_23344C2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Order.ShippingFulfillment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23344C338(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233329310(v3);
  return a1;
}

uint64_t _s19ShippingFulfillmentVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  void *__dst;
  unsigned int (*v56)(char *, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v10;
    v11 = a2[11];
    v12 = a3[11];
    __dst = (void *)(a1 + v12);
    v13 = (char *)a2 + v12;
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v11;
    v14 = sub_23361D340();
    v53 = *(_QWORD *)(v14 - 8);
    v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56(v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v53 + 16))(__dst, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v14);
    }
    v16 = a3[12];
    v17 = v6 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(_QWORD *)(v18 + 8);
    if (v19 == 1)
    {
      v20 = *(_OWORD *)(v18 + 16);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *(_OWORD *)(v17 + 16) = v20;
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      v21 = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
      *(_QWORD *)(v17 + 24) = v21;
      v22 = *(_QWORD *)(v18 + 40);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 40) = v22;
      v23 = *(void **)(v18 + 48);
      *(_QWORD *)(v17 + 48) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v23;
    }
    v25 = a3[13];
    v26 = (char *)(v6 + v25);
    v27 = (char *)a2 + v25;
    v28 = type metadata accessor for Order.FulfillmentWindow(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v32 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v26, v27, v32);
      if (EnumCaseMultiPayload == 1)
      {
        v33 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v34 = &v26[v33];
        v35 = &v27[v33];
        v36 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v37 = a3[14];
    v38 = (void *)(v6 + v37);
    v39 = (char *)a2 + v37;
    v40 = sub_23361D634();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v42(v39, 1, v40))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v44 = a3[15];
    v45 = a3[16];
    v46 = (_QWORD *)(v6 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = (void *)(v6 + v45);
    v50 = (char *)a2 + v45;
    swift_bridgeObjectRetain();
    if (v42(v50, 1, v40))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v49, v50, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v49, 0, 1, v40);
    }
    *(_BYTE *)(v6 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  }
  return v6;
}

uint64_t _s19ShippingFulfillmentVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[11];
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[12];
  if (*(_QWORD *)(v7 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  v8 = a1 + a2[13];
  v9 = type metadata accessor for Order.FulfillmentWindow(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v11 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = v8 + *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v13 = sub_23361CD40();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
  }
  v14 = a1 + a2[14];
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v17(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  swift_bridgeObjectRelease();
  v18 = a1 + a2[16];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v18, 1, v15);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
  return result;
}

uint64_t _s19ShippingFulfillmentVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(const void *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  void *__dst;
  unsigned int (*v53)(const void *, uint64_t, uint64_t);
  const void *v54;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  v10 = a3[11];
  __dst = (void *)(a1 + v10);
  v54 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53(v54, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(__dst, v54, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v54, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v14 = a3[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(v16 + 8);
  if (v17 == 1)
  {
    v18 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v18;
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  }
  else
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
    v19 = *(_QWORD *)(v16 + 24);
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v15 + 24) = v19;
    v20 = *(_QWORD *)(v16 + 40);
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v15 + 40) = v20;
    v21 = *(void **)(v16 + 48);
    *(_QWORD *)(v15 + 48) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v21;
  }
  v23 = a3[13];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = type metadata accessor for Order.FulfillmentWindow(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v30 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v24, v25, v30);
    if (EnumCaseMultiPayload == 1)
    {
      v31 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v32 = &v24[v31];
      v33 = &v25[v31];
      v34 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v35 = a3[14];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = sub_23361D634();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  if (v40(v37, 1, v38))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v42 = a3[15];
  v43 = a3[16];
  v44 = (_QWORD *)(a1 + v42);
  v45 = (_QWORD *)(a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = (void *)(a1 + v43);
  v48 = (const void *)(a2 + v43);
  swift_bridgeObjectRetain();
  if (v40(v48, 1, v38))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v47, v48, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v47, 0, 1, v38);
  }
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t _s19ShippingFulfillmentVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  void *v66;
  int v67;
  int v68;
  uint64_t v69;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[11];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23361D340();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[12];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 8);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *v17;
      v21 = v17[1];
      v22 = v17[2];
      *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v22;
      *(_OWORD *)v16 = v20;
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
      v26 = (void *)*((_QWORD *)v17 + 6);
      *(_QWORD *)(v16 + 48) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = v26;
    }
  }
  else if (v19 == 1)
  {
    sub_23344D418(v16);
    v24 = v17[1];
    v23 = v17[2];
    v25 = *v17;
    *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
    *(_OWORD *)(v16 + 16) = v24;
    *(_OWORD *)(v16 + 32) = v23;
    *(_OWORD *)v16 = v25;
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = *(void **)(v16 + 48);
    v29 = (void *)*((_QWORD *)v17 + 6);
    *(_QWORD *)(v16 + 48) = v29;
    v30 = v29;

  }
  v31 = a3[13];
  v32 = (char *)(a1 + v31);
  v33 = (char *)(a2 + v31);
  v34 = type metadata accessor for Order.FulfillmentWindow(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v40 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v32, v33, v40);
      if (EnumCaseMultiPayload == 1)
      {
        v41 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v42 = &v32[v41];
        v43 = &v33[v41];
        v44 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_27;
    }
LABEL_20:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_27;
  }
  if (v38)
  {
    sub_233168500((uint64_t)v32, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_20;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v32, type metadata accessor for Order.FulfillmentWindow);
    v46 = swift_getEnumCaseMultiPayload();
    v47 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v32, v33, v47);
    if (v46 == 1)
    {
      v48 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v49 = &v32[v48];
      v50 = &v33[v48];
      v51 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  v52 = a3[14];
  v53 = (void *)(a1 + v52);
  v54 = (void *)(a2 + v52);
  v55 = sub_23361D634();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
LABEL_32:
    v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v53, v54, v55);
LABEL_33:
  v61 = a3[15];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (_QWORD *)(a2 + v61);
  *v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = a3[16];
  v65 = (void *)(a1 + v64);
  v66 = (void *)(a2 + v64);
  v67 = v57((void *)(a1 + v64), 1, v55);
  v68 = v57(v66, 1, v55);
  if (!v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v65, v66, v55);
      goto LABEL_39;
    }
    (*(void (**)(void *, uint64_t))(v56 + 8))(v65, v55);
    goto LABEL_38;
  }
  if (v68)
  {
LABEL_38:
    v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v65, v66, v55);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v65, 0, 1, v55);
LABEL_39:
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_23344D418(uint64_t a1)
{
  _s17ShippingRecipientVwxx(a1);
  return a1;
}

uint64_t _s19ShippingFulfillmentVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(const void *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = a3[11];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[12];
  v14 = a3[13];
  v15 = a1 + v13;
  v16 = a2 + v13;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  v18 = (char *)(a1 + v14);
  v19 = (char *)(a2 + v14);
  v20 = type metadata accessor for Order.FulfillmentWindow(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v24 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v18, v19, v24);
    if (EnumCaseMultiPayload == 1)
    {
      v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v26 = &v18[v25];
      v27 = &v19[v25];
      v28 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v29 = a3[14];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = sub_23361D634();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
  if (v34(v31, 1, v32))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v36 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v34((const void *)(a2 + v36), 1, v32))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v37, v38, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v32);
  }
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t _s19ShippingFulfillmentVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  int v66;
  int v67;
  uint64_t v68;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  v11 = a3[11];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_23361D340();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[12];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (*(_QWORD *)(a1 + v20 + 8) == 1)
  {
LABEL_10:
    v24 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v24;
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
    *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
    goto LABEL_12;
  }
  v23 = *(_QWORD *)(v22 + 8);
  if (v23 == 1)
  {
    sub_23344D418(v21);
    goto LABEL_10;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = v25;
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = v26;
  swift_bridgeObjectRelease();
  v27 = *(void **)(v21 + 48);
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);

LABEL_12:
  v28 = a3[13];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  v31 = type metadata accessor for Order.FulfillmentWindow(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v37 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v29, v30, v37);
      if (EnumCaseMultiPayload == 1)
      {
        v38 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v39 = &v29[v38];
        v40 = &v30[v38];
        v41 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_25;
    }
LABEL_18:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_25;
  }
  if (v35)
  {
    sub_233168500((uint64_t)v29, type metadata accessor for Order.FulfillmentWindow);
    goto LABEL_18;
  }
  if (a1 != a2)
  {
    sub_233168500((uint64_t)v29, type metadata accessor for Order.FulfillmentWindow);
    v43 = swift_getEnumCaseMultiPayload();
    v44 = sub_23361D634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v29, v30, v44);
    if (v43 == 1)
    {
      v45 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v46 = &v29[v45];
      v47 = &v30[v45];
      v48 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_25:
  v49 = a3[14];
  v50 = (void *)(a1 + v49);
  v51 = (void *)(a2 + v49);
  v52 = sub_23361D634();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v53 + 32))(v50, v51, v52);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
LABEL_30:
    v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v53 + 40))(v50, v51, v52);
LABEL_31:
  v58 = a3[15];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  v62 = *v60;
  v61 = v60[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  v63 = a3[16];
  v64 = (void *)(a1 + v63);
  v65 = (void *)(a2 + v63);
  v66 = v54((void *)(a1 + v63), 1, v52);
  v67 = v54(v65, 1, v52);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(void *, void *, uint64_t))(v53 + 40))(v64, v65, v52);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v53 + 8))(v64, v52);
    goto LABEL_36;
  }
  if (v67)
  {
LABEL_36:
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v53 + 32))(v64, v65, v52);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v64, 0, 1, v52);
LABEL_37:
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t _s19ShippingFulfillmentVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23344DCD4(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[14];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t _s19ShippingFulfillmentVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23344DDB0(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256043808);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[14];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_23344DE7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, qword_256043C20, (void (*)(uint64_t))type metadata accessor for Order.FulfillmentWindow);
    if (v1 <= 0x3F)
    {
      sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t _s19ShippingFulfillmentV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19ShippingFulfillmentV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_23344E070 + 4 * byte_23364B463[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_23344E0A4 + 4 * byte_23364B45E[v4]))();
}

uint64_t sub_23344E0A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23344E0AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23344E0B4);
  return result;
}

uint64_t sub_23344E0C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23344E0C8);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_23344E0CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23344E0D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19ShippingFulfillmentV10CodingKeysOMa()
{
  return &_s19ShippingFulfillmentV10CodingKeysON;
}

unint64_t sub_23344E0F4()
{
  unint64_t result;

  result = qword_256050520;
  if (!qword_256050520)
  {
    result = MEMORY[0x234934494](&unk_23364B66C, &_s19ShippingFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050520);
  }
  return result;
}

unint64_t sub_23344E13C()
{
  unint64_t result;

  result = qword_256050528;
  if (!qword_256050528)
  {
    result = MEMORY[0x234934494](&unk_23364B5DC, &_s19ShippingFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050528);
  }
  return result;
}

unint64_t sub_23344E184()
{
  unint64_t result;

  result = qword_256050530;
  if (!qword_256050530)
  {
    result = MEMORY[0x234934494](&unk_23364B604, &_s19ShippingFulfillmentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050530);
  }
  return result;
}

uint64_t sub_23344E1C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D657449656E696CLL && a2 == 0xE900000000000073;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656972726163 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233673B40 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233669A10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xEE007265626D754ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xEB000000004C5255 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E65697069636572 && a2 == 0xE900000000000074 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233677340 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x79726576696C6564 && a2 == 0xEC00000065746144 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233673680 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x4464657070696873 && a2 == 0xEB00000000657461 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x676E697070696873 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t Order.ShippingRecipient.init(familyName:givenName:organizationName:address:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

BOOL static Order.ShippingStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

_BYTE *Order.ShippingStatus.init(_:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = 0x706040302050100uLL >> (8 * *result);
  return result;
}

uint64_t Order.ShippingStatus.init(_:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Order.ShippingStatus.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_23344E838()
{
  sub_233450B94();
  return sub_23361F428();
}

uint64_t sub_23344E860()
{
  sub_233450B94();
  return sub_23361F434();
}

uint64_t sub_23344E888()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23344E8B0 + 4 * byte_23364B6F0[*v0]))(1852141679, 0xE400000000000000);
}

uint64_t sub_23344E8B0()
{
  return 0x69737365636F7270;
}

uint64_t sub_23344E8CC()
{
  return 0x7961576568546E6FLL;
}

uint64_t sub_23344E8E4()
{
  return 0x6544726F4674756FLL;
}

uint64_t sub_23344E908()
{
  return 0x65726576696C6564;
}

uint64_t sub_23344E964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233451950(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23344E988()
{
  sub_233450B50();
  return sub_23361F428();
}

uint64_t sub_23344E9B0()
{
  sub_233450B50();
  return sub_23361F434();
}

uint64_t sub_23344E9D8()
{
  sub_233450C60();
  return sub_23361F428();
}

uint64_t sub_23344EA00()
{
  sub_233450C60();
  return sub_23361F434();
}

uint64_t sub_23344EA28()
{
  sub_233450BD8();
  return sub_23361F428();
}

uint64_t sub_23344EA50()
{
  sub_233450BD8();
  return sub_23361F434();
}

uint64_t sub_23344EA78()
{
  sub_233450CE8();
  return sub_23361F428();
}

uint64_t sub_23344EAA0()
{
  sub_233450CE8();
  return sub_23361F434();
}

uint64_t sub_23344EAC8()
{
  sub_233450D70();
  return sub_23361F428();
}

uint64_t sub_23344EAF0()
{
  sub_233450D70();
  return sub_23361F434();
}

uint64_t sub_23344EB18()
{
  sub_233450CA4();
  return sub_23361F428();
}

uint64_t sub_23344EB40()
{
  sub_233450CA4();
  return sub_23361F434();
}

uint64_t sub_23344EB68()
{
  sub_233450D2C();
  return sub_23361F428();
}

uint64_t sub_23344EB90()
{
  sub_233450D2C();
  return sub_23361F434();
}

uint64_t sub_23344EBB8()
{
  sub_233450C1C();
  return sub_23361F428();
}

uint64_t sub_23344EBE0()
{
  sub_233450C1C();
  return sub_23361F434();
}

uint64_t Order.ShippingStatus.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t Order.ShippingRecipient.familyName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingRecipient.givenName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.ShippingRecipient.organizationName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void *Order.ShippingRecipient.address.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

void Order.ShippingRecipient.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = v0[3];
  v2 = v0[5];
  v3 = (void *)v0[6];
  if (v0[1])
  {
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
  }
  else
  {
    sub_23361F368();
    if (v1)
    {
LABEL_3:
      sub_23361F368();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      if (v2)
        goto LABEL_4;
LABEL_8:
      sub_23361F368();
      if (v3)
        goto LABEL_5;
      goto LABEL_9;
    }
  }
  sub_23361F368();
  if (!v2)
    goto LABEL_8;
LABEL_4:
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_5:
    sub_23361F368();
    v4 = v3;
    sub_23361EA20();

    return;
  }
LABEL_9:
  sub_23361F368();
}

uint64_t Order.ShippingRecipient.hashValue.getter()
{
  sub_23361F350();
  Order.ShippingRecipient.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_23344EE94()
{
  sub_23361F350();
  Order.ShippingRecipient.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_23344EEF0()
{
  sub_23361F350();
  Order.ShippingRecipient.hash(into:)();
  return sub_23361F3A4();
}

void Order.ShippingStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050538);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050540);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050548);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050550);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v26 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050558);
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v23 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050560);
  v21 = *(_QWORD *)(v13 - 8);
  v22 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v20 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050568);
  v18 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050570);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050578);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v17 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233450B50();
  sub_23361F410();
  __asm { BR              X9 }
}

uint64_t sub_23344F208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_233450D70();
  v5 = *(_QWORD *)(v4 - 104);
  sub_23361F0C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

uint64_t Order.ShippingStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  char *v57;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505C8);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505D0);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v54 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505D8);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505E0);
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v50 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505E8);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505F0);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560505F8);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v48 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050600);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050608);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_233450B50();
  v23 = v57;
  sub_23361F3EC();
  if (!v23)
  {
    v31[2] = v17;
    v31[0] = v15;
    v31[1] = v14;
    v32 = v19;
    v33 = v18;
    v57 = v21;
    v24 = sub_23361F098();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_23361EE10();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v27 = &type metadata for Order.ShippingStatus;
    v28 = v33;
    v29 = v57;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v28);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
}

uint64_t sub_23344FBB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Order.ShippingStatus.init(from:)(a1, a2);
}

void sub_23344FBC4(_QWORD *a1)
{
  Order.ShippingStatus.encode(to:)(a1);
}

uint64_t sub_23344FBD8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23344FC0C + 4 * byte_23364B708[*v0]))(0x614E796C696D6166, 0xEA0000000000656DLL);
}

uint64_t sub_23344FC0C()
{
  return 0x6D614E6E65766967;
}

unint64_t sub_23344FC28()
{
  return 0xD000000000000010;
}

uint64_t sub_23344FC44()
{
  return 0x73736572646461;
}

uint64_t sub_23344FC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233451CC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23344FC80()
{
  sub_233450DB4();
  return sub_23361F428();
}

uint64_t sub_23344FCA8()
{
  sub_233450DB4();
  return sub_23361F434();
}

uint64_t Order.ShippingRecipient.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050610);
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[3] = v1[2];
  v12[2] = v1[3];
  v12[1] = v1[4];
  v6 = (void *)v1[6];
  v12[0] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233450DB4();
  sub_23361F410();
  if (v6)
  {
    RawAddress.init(_:)(v6, &v25);
    v17 = v25;
    v18 = v26;
    v19 = v27;
    v20 = v28;
    v21 = v29;
    v22 = v30;
    v23 = v31;
    v24 = v32;
    v14 = v33;
    v7 = v35;
    v13 = v34;
    v8 = v36;
    v9 = v37;
  }
  else
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v14 = 0;
    v13 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v17 = 1;
  }
  v10 = v15;
  LOBYTE(v25) = 0;
  sub_23361F0E0();
  if (!v10)
  {
    LOBYTE(v25) = 1;
    sub_23361F0E0();
    LOBYTE(v25) = 2;
    sub_23361F0E0();
    v25 = v17;
    v26 = v18;
    v27 = v19;
    v28 = v20;
    v29 = v21;
    v30 = v22;
    v31 = v23;
    v32 = v24;
    v33 = v14;
    v34 = v13;
    v35 = v7;
    v36 = v8;
    v37 = v9;
    v38 = 3;
    sub_23320C808();
    sub_23361F110();
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v3);
  return sub_233329310(v17);
}

uint64_t Order.ShippingRecipient.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050620);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233450DB4();
  sub_23361F3EC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v61 = 3;
  sub_23320C7C4();
  sub_23361EFFC();
  v36 = a2;
  v40 = v49;
  v41 = v50;
  v42 = v51;
  v46 = v52;
  v47 = v53;
  v43 = v54;
  v44 = v48;
  v45 = v55;
  v39 = v56;
  v38 = v57;
  v9 = v59;
  v37 = v58;
  v10 = v60;
  LOBYTE(v48) = 0;
  v11 = sub_23361EFCC();
  v14 = v13;
  v33 = v11;
  v34 = v10;
  v35 = v9;
  LOBYTE(v48) = 1;
  swift_bridgeObjectRetain();
  v15 = sub_23361EFCC();
  v17 = v16;
  v31 = v15;
  v32 = v14;
  LOBYTE(v48) = 2;
  swift_bridgeObjectRetain();
  v28 = sub_23361EFCC();
  v29 = v17;
  v18 = v44;
  v19 = v45;
  v20 = v36;
  v30 = v21;
  if (v44 == 1)
  {
    swift_bridgeObjectRetain();
    v22 = 0;
  }
  else
  {
    v27[1] = sub_233168668(0, (unint64_t *)&qword_256045B60);
    v48 = v18;
    v49 = v40;
    v50 = v41;
    v51 = v42;
    v52 = v46;
    v53 = v47;
    v54 = v43;
    v55 = v19;
    v56 = v39;
    v57 = v38;
    v58 = v37;
    v59 = v35;
    v60 = v34;
    swift_bridgeObjectRetain();
    sub_23332938C(v44);
    v22 = CNMutablePostalAddress.init(rawAddress:)(&v48);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_233329310(v44);
  v23 = v22;
  v24 = v32;
  *v20 = v33;
  v20[1] = v24;
  v25 = v29;
  v20[2] = v31;
  v20[3] = v25;
  v26 = v30;
  v20[4] = v28;
  v20[5] = v26;
  v20[6] = (uint64_t)v22;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233450594@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Order.ShippingRecipient.init(from:)(a1, a2);
}

uint64_t sub_2334505A8(_QWORD *a1)
{
  return Order.ShippingRecipient.encode(to:)(a1);
}

uint64_t Order.ShippingRecipient.formattedName.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045B50);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23361CE60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CE3C();
  v7 = sub_23361CE54();
  v9 = v7;
  if ((v8 & 0x2000000000000000) != 0)
    v10 = HIBYTE(v8) & 0xF;
  else
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t Order.ShippingRecipient.formatted.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[6];
  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_stringFromPostalAddress_style_, v3, 0);
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256050628);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233627000;
  v9 = Order.ShippingRecipient.formattedName.getter();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v7;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v1)
      goto LABEL_15;
    goto LABEL_10;
  }
  v11 = v9;
  v12 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_2334A4AA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_2334A4AA4((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v15 + 1;
  v16 = &v13[2 * v15];
  v16[4] = v11;
  v16[5] = v12;
  if (v1)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2334A4AA4(0, v13[2] + 1, 1, v13);
    v18 = v13[2];
    v17 = v13[3];
    if (v18 >= v17 >> 1)
      v13 = sub_2334A4AA4((_QWORD *)(v17 > 1), v18 + 1, 1, v13);
    v13[2] = v18 + 1;
    v19 = &v13[2 * v18];
    v19[4] = v2;
    v19[5] = v1;
  }
LABEL_15:
  if (v7)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2334A4AA4(0, v13[2] + 1, 1, v13);
    v21 = v13[2];
    v20 = v13[3];
    if (v21 >= v20 >> 1)
      v13 = sub_2334A4AA4((_QWORD *)(v20 > 1), v21 + 1, 1, v13);
    v13[2] = v21 + 1;
    v22 = &v13[2 * v21];
    v22[4] = v5;
    v22[5] = v7;
  }
  swift_release();
  if (v13[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23319C29C();
    v23 = sub_23361E0D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v23;
}

uint64_t _s10FinanceKit5OrderV17ShippingRecipientV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t result;
  char v17;
  char v18;
  id v19;
  id v20;
  char v21;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = (void *)a1[6];
  v9 = a2[1];
  v10 = a2[2];
  v12 = a2[3];
  v11 = a2[4];
  v13 = a2[5];
  v14 = (void *)a2[6];
  if (!v3)
  {
    if (v9)
      return 0;
    goto LABEL_8;
  }
  if (!v9)
    return 0;
  if (*a1 == *a2 && v3 == v9 || (v15 = sub_23361F224(), result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v12)
        return 0;
      if (v4 != v10 || v6 != v12)
      {
        v17 = sub_23361F224();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v12)
    {
      return 0;
    }
    if (v7)
    {
      if (!v13)
        return 0;
      if (v5 != v11 || v7 != v13)
      {
        v18 = sub_23361F224();
        result = 0;
        if ((v18 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (v8)
    {
      if (v14)
      {
        sub_233168668(0, &qword_254247E48);
        v19 = v14;
        v20 = v8;
        v21 = sub_23361EA14();

        if ((v21 & 1) != 0)
          return 1;
      }
    }
    else if (!v14)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_233450B50()
{
  unint64_t result;

  result = qword_256050580;
  if (!qword_256050580)
  {
    result = MEMORY[0x234934494](&unk_23364C094, &_s14ShippingStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050580);
  }
  return result;
}

unint64_t sub_233450B94()
{
  unint64_t result;

  result = qword_256050588;
  if (!qword_256050588)
  {
    result = MEMORY[0x234934494](&unk_23364C044, &_s14ShippingStatusO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050588);
  }
  return result;
}

unint64_t sub_233450BD8()
{
  unint64_t result;

  result = qword_256050590;
  if (!qword_256050590)
  {
    result = MEMORY[0x234934494](&unk_23364BFF4, &_s14ShippingStatusO15IssueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050590);
  }
  return result;
}

unint64_t sub_233450C1C()
{
  unint64_t result;

  result = qword_256050598;
  if (!qword_256050598)
  {
    result = MEMORY[0x234934494](&unk_23364BFA4, &_s14ShippingStatusO17ShippedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050598);
  }
  return result;
}

unint64_t sub_233450C60()
{
  unint64_t result;

  result = qword_2560505A0;
  if (!qword_2560505A0)
  {
    result = MEMORY[0x234934494](&unk_23364BF54, &_s14ShippingStatusO19DeliveredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560505A0);
  }
  return result;
}

unint64_t sub_233450CA4()
{
  unint64_t result;

  result = qword_2560505A8;
  if (!qword_2560505A8)
  {
    result = MEMORY[0x234934494](&unk_23364BF04, &_s14ShippingStatusO24OutForDeliveryCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560505A8);
  }
  return result;
}

unint64_t sub_233450CE8()
{
  unint64_t result;

  result = qword_2560505B0;
  if (!qword_2560505B0)
  {
    result = MEMORY[0x234934494](&unk_23364BEB4, &_s14ShippingStatusO18OnTheWayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560505B0);
  }
  return result;
}

unint64_t sub_233450D2C()
{
  unint64_t result;

  result = qword_2560505B8;
  if (!qword_2560505B8)
  {
    result = MEMORY[0x234934494](&unk_23364BE64, &_s14ShippingStatusO20ProcessingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560505B8);
  }
  return result;
}

unint64_t sub_233450D70()
{
  unint64_t result;

  result = qword_2560505C0;
  if (!qword_2560505C0)
  {
    result = MEMORY[0x234934494](&unk_23364BE14, &_s14ShippingStatusO14OpenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560505C0);
  }
  return result;
}

unint64_t sub_233450DB4()
{
  unint64_t result;

  result = qword_256050618;
  if (!qword_256050618)
  {
    result = MEMORY[0x234934494](&unk_23364BDC4, &_s17ShippingRecipientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050618);
  }
  return result;
}

unint64_t sub_233450DFC()
{
  unint64_t result;

  result = qword_256050630;
  if (!qword_256050630)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingStatus, &type metadata for Order.ShippingStatus);
    atomic_store(result, (unint64_t *)&qword_256050630);
  }
  return result;
}

unint64_t sub_233450E44()
{
  unint64_t result;

  result = qword_256050638;
  if (!qword_256050638)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for Order.ShippingRecipient, &type metadata for Order.ShippingRecipient);
    atomic_store(result, (unint64_t *)&qword_256050638);
  }
  return result;
}

ValueMetadata *type metadata accessor for Order.ShippingStatus()
{
  return &type metadata for Order.ShippingStatus;
}

void _s17ShippingRecipientVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *_s17ShippingRecipientVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  return a1;
}

_QWORD *_s17ShippingRecipientVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[6];
  v5 = (void *)a2[6];
  a1[6] = v5;
  v6 = v5;

  return a1;
}

uint64_t _s17ShippingRecipientVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t _s17ShippingRecipientVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s17ShippingRecipientVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Order.ShippingRecipient()
{
  return &type metadata for Order.ShippingRecipient;
}

uint64_t _s17ShippingRecipientV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233451154 + 4 * byte_23364B711[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233451188 + 4 * byte_23364B70C[v4]))();
}

uint64_t sub_233451188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233451190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233451198);
  return result;
}

uint64_t sub_2334511A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334511ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2334511B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334511B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17ShippingRecipientV10CodingKeysOMa()
{
  return &_s17ShippingRecipientV10CodingKeysON;
}

uint64_t _s14ShippingStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_233451220 + 4 * byte_23364B71B[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_233451254 + 4 * byte_23364B716[v4]))();
}

uint64_t sub_233451254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23345125C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233451264);
  return result;
}

uint64_t sub_233451270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233451278);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23345127C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233451284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14ShippingStatusO10CodingKeysOMa()
{
  return &_s14ShippingStatusO10CodingKeysON;
}

ValueMetadata *_s14ShippingStatusO14OpenCodingKeysOMa()
{
  return &_s14ShippingStatusO14OpenCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO20ProcessingCodingKeysOMa()
{
  return &_s14ShippingStatusO20ProcessingCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO18OnTheWayCodingKeysOMa()
{
  return &_s14ShippingStatusO18OnTheWayCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO24OutForDeliveryCodingKeysOMa()
{
  return &_s14ShippingStatusO24OutForDeliveryCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO19DeliveredCodingKeysOMa()
{
  return &_s14ShippingStatusO19DeliveredCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO17ShippedCodingKeysOMa()
{
  return &_s14ShippingStatusO17ShippedCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO15IssueCodingKeysOMa()
{
  return &_s14ShippingStatusO15IssueCodingKeysON;
}

ValueMetadata *_s14ShippingStatusO19CancelledCodingKeysOMa()
{
  return &_s14ShippingStatusO19CancelledCodingKeysON;
}

unint64_t sub_233451324()
{
  unint64_t result;

  result = qword_256050640;
  if (!qword_256050640)
  {
    result = MEMORY[0x234934494](&unk_23364BCE4, &_s14ShippingStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050640);
  }
  return result;
}

unint64_t sub_23345136C()
{
  unint64_t result;

  result = qword_256050648;
  if (!qword_256050648)
  {
    result = MEMORY[0x234934494](&unk_23364BD9C, &_s17ShippingRecipientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050648);
  }
  return result;
}

unint64_t sub_2334513B4()
{
  unint64_t result;

  result = qword_256050650;
  if (!qword_256050650)
  {
    result = MEMORY[0x234934494](&unk_23364BD0C, &_s17ShippingRecipientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050650);
  }
  return result;
}

unint64_t sub_2334513FC()
{
  unint64_t result;

  result = qword_256050658;
  if (!qword_256050658)
  {
    result = MEMORY[0x234934494](&unk_23364BD34, &_s17ShippingRecipientV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050658);
  }
  return result;
}

unint64_t sub_233451444()
{
  unint64_t result;

  result = qword_256050660;
  if (!qword_256050660)
  {
    result = MEMORY[0x234934494](&unk_23364BC04, &_s14ShippingStatusO14OpenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050660);
  }
  return result;
}

unint64_t sub_23345148C()
{
  unint64_t result;

  result = qword_256050668;
  if (!qword_256050668)
  {
    result = MEMORY[0x234934494](&unk_23364BC2C, &_s14ShippingStatusO14OpenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050668);
  }
  return result;
}

unint64_t sub_2334514D4()
{
  unint64_t result;

  result = qword_256050670;
  if (!qword_256050670)
  {
    result = MEMORY[0x234934494](&unk_23364BBB4, &_s14ShippingStatusO20ProcessingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050670);
  }
  return result;
}

unint64_t sub_23345151C()
{
  unint64_t result;

  result = qword_256050678;
  if (!qword_256050678)
  {
    result = MEMORY[0x234934494](&unk_23364BBDC, &_s14ShippingStatusO20ProcessingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050678);
  }
  return result;
}

unint64_t sub_233451564()
{
  unint64_t result;

  result = qword_256050680;
  if (!qword_256050680)
  {
    result = MEMORY[0x234934494](&unk_23364BB64, &_s14ShippingStatusO18OnTheWayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050680);
  }
  return result;
}

unint64_t sub_2334515AC()
{
  unint64_t result;

  result = qword_256050688;
  if (!qword_256050688)
  {
    result = MEMORY[0x234934494](&unk_23364BB8C, &_s14ShippingStatusO18OnTheWayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050688);
  }
  return result;
}

unint64_t sub_2334515F4()
{
  unint64_t result;

  result = qword_256050690;
  if (!qword_256050690)
  {
    result = MEMORY[0x234934494](&unk_23364BB14, &_s14ShippingStatusO24OutForDeliveryCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050690);
  }
  return result;
}

unint64_t sub_23345163C()
{
  unint64_t result;

  result = qword_256050698;
  if (!qword_256050698)
  {
    result = MEMORY[0x234934494](&unk_23364BB3C, &_s14ShippingStatusO24OutForDeliveryCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256050698);
  }
  return result;
}

unint64_t sub_233451684()
{
  unint64_t result;

  result = qword_2560506A0;
  if (!qword_2560506A0)
  {
    result = MEMORY[0x234934494](&unk_23364BAC4, &_s14ShippingStatusO19DeliveredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506A0);
  }
  return result;
}

unint64_t sub_2334516CC()
{
  unint64_t result;

  result = qword_2560506A8;
  if (!qword_2560506A8)
  {
    result = MEMORY[0x234934494](&unk_23364BAEC, &_s14ShippingStatusO19DeliveredCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506A8);
  }
  return result;
}

unint64_t sub_233451714()
{
  unint64_t result;

  result = qword_2560506B0;
  if (!qword_2560506B0)
  {
    result = MEMORY[0x234934494](&unk_23364BA74, &_s14ShippingStatusO17ShippedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506B0);
  }
  return result;
}

unint64_t sub_23345175C()
{
  unint64_t result;

  result = qword_2560506B8;
  if (!qword_2560506B8)
  {
    result = MEMORY[0x234934494](&unk_23364BA9C, &_s14ShippingStatusO17ShippedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506B8);
  }
  return result;
}

unint64_t sub_2334517A4()
{
  unint64_t result;

  result = qword_2560506C0;
  if (!qword_2560506C0)
  {
    result = MEMORY[0x234934494](&unk_23364BA24, &_s14ShippingStatusO15IssueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506C0);
  }
  return result;
}

unint64_t sub_2334517EC()
{
  unint64_t result;

  result = qword_2560506C8;
  if (!qword_2560506C8)
  {
    result = MEMORY[0x234934494](&unk_23364BA4C, &_s14ShippingStatusO15IssueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506C8);
  }
  return result;
}

unint64_t sub_233451834()
{
  unint64_t result;

  result = qword_2560506D0;
  if (!qword_2560506D0)
  {
    result = MEMORY[0x234934494](&unk_23364B9D4, &_s14ShippingStatusO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506D0);
  }
  return result;
}

unint64_t sub_23345187C()
{
  unint64_t result;

  result = qword_2560506D8;
  if (!qword_2560506D8)
  {
    result = MEMORY[0x234934494](&unk_23364B9FC, &_s14ShippingStatusO19CancelledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506D8);
  }
  return result;
}

unint64_t sub_2334518C4()
{
  unint64_t result;

  result = qword_2560506E0;
  if (!qword_2560506E0)
  {
    result = MEMORY[0x234934494](&unk_23364BC54, &_s14ShippingStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506E0);
  }
  return result;
}

unint64_t sub_23345190C()
{
  unint64_t result;

  result = qword_2560506E8;
  if (!qword_2560506E8)
  {
    result = MEMORY[0x234934494](&unk_23364BC7C, &_s14ShippingStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2560506E8);
  }
  return result;
}

uint64_t sub_233451950(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852141679 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69737365636F7270 && a2 == 0xEA0000000000676ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961576568546E6FLL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6544726F4674756FLL && a2 == 0xEE0079726576696CLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65726576696C6564 && a2 == 0xE900000000000064 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64657070696873 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6575737369 && a2 == 0xE500000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_233451CC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233672EC0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t static ManagedAuthorizationSession.existingSession(in:)(uint64_t a1)
{
  uint64_t v1;
  id v3;
  unint64_t result;
  unint64_t v5;
  id v6;
  objc_super v7;

  v7.receiver = (id)swift_getObjCClassFromMetadata();
  v7.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedAuthorizationSession;
  v3 = objc_msgSendSuper2(&v7, sel_fetchRequest);
  result = sub_23361E984();
  if (v1)
  {

    return a1;
  }
  v5 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a1 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a1)
      goto LABEL_9;
  }
  else
  {
    a1 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a1)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a1;
    }
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x234933120](0, v5);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_8:
    a1 = (uint64_t)v6;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_233451FA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_fpanId);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_233452004(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setFpanId_);

}

uint64_t sub_233452060@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_previousConsentUUID);
  if (v3)
  {
    v4 = v3;
    sub_23361D67C();

    v5 = sub_23361D6A0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_23361D6A0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

void sub_2334520E4(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331D7514(a1, (uint64_t)v6);
  v7 = *a2;
  v8 = sub_23361D6A0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    v10 = (void *)sub_23361D658();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setPreviousConsentUUID_, v10);

}

id ManagedAuthorizationSession.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAuthorizationSession.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAuthorizationSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ManagedAuthorizationSession.authorizationType.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_authorizationTypeValue);
  if (result > 2)
  {
    sub_23361ED98();
    sub_23361E27C();
    objc_msgSend(v0, sel_authorizationTypeValue);
    sub_23361F1D0();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    result = (id)sub_23361EF24();
    __break(1u);
  }
  return result;
}

id ManagedAuthorizationSession.authorizationType.setter(__int16 a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setAuthorizationTypeValue_, a1);
}

id (*ManagedAuthorizationSession.authorizationType.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_WORD *)(a1 + 8) = (unsigned __int16)ManagedAuthorizationSession.authorizationType.getter();
  return sub_23345243C;
}

id sub_23345243C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setAuthorizationTypeValue_, *(__int16 *)(a1 + 8));
}

id ManagedAuthorizationSession.__allocating_init(_:context:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  int *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  objc_class *v20;
  char *v21;
  void *v22;
  objc_super v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(v2), sel_initWithContext_, a2);
  v9 = (void *)sub_23361D658();
  objc_msgSend(v8, sel_setId_, v9);

  v10 = (int *)type metadata accessor for BankConnectAuthorizationSession();
  if (*(_QWORD *)(a1 + v10[9] + 8))
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v8, sel_setFpanId_, v11);

  v12 = a1 + v10[5];
  v13 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setConsentId_, v13);

  v14 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setConsentToken_, v14);

  v15 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setConsentAuthorizationURI_, v15);

  sub_2331D7514(a1 + v10[7], (uint64_t)v7);
  v16 = sub_23361D6A0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v16) != 1)
  {
    v18 = (void *)sub_23361D658();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
  }
  objc_msgSend(v8, sel_setPreviousConsentUUID_, v18);

  v19 = *(id *)(v12 + 48);
  if (v19)
  {
    v20 = (objc_class *)type metadata accessor for StringParams();
    v21 = (char *)objc_allocWithZone(v20);
    *(_QWORD *)&v21[OBJC_IVAR____TtC10FinanceKit12StringParams_value] = v19;
    v24.receiver = v21;
    v24.super_class = v20;
    swift_bridgeObjectRetain();
    v19 = objc_msgSendSuper2(&v24, sel_init);
  }
  objc_msgSend(v8, sel_setExtensionPayload_, v19);

  v22 = (void *)sub_23361E12C();
  objc_msgSend(v8, sel_setCodeVerifier_, v22);

  objc_msgSend(v8, sel_setAuthorizationTypeValue_, *(__int16 *)(a1 + v10[10]));
  sub_233452B2C(a1);
  return v8;
}

void BankConnectAuthorizationSession.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  void *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;

  v65 = a2;
  v3 = (int *)type metadata accessor for BankConnectAuthorizationSession();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D6A0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, "id");
  v62 = v15;
  sub_23361D67C();

  v17 = objc_msgSend(a1, sel_consentId);
  v18 = sub_23361E150();
  v60 = v19;
  v61 = v18;

  v20 = objc_msgSend(a1, sel_consentToken);
  v21 = sub_23361E150();
  v58 = v22;
  v59 = v21;

  v23 = objc_msgSend(a1, sel_consentAuthorizationURI);
  v24 = sub_23361E150();
  v56 = v25;
  v57 = v24;

  v26 = (char *)objc_msgSend(a1, sel_extensionPayload);
  if (v26)
  {
    v27 = v26;
    v55 = *(_QWORD *)&v26[OBJC_IVAR____TtC10FinanceKit12StringParams_value];
    swift_bridgeObjectRetain();

  }
  else
  {
    v55 = 0;
  }
  v28 = objc_msgSend(a1, sel_previousConsentUUID);
  v63 = v13;
  v64 = v11;
  if (v28)
  {
    v29 = v28;
    sub_23361D67C();

    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v31 = v11;
    v32 = 0;
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v31 = v11;
    v32 = 1;
  }
  v33 = v12;
  v30(v31, v32, 1, v12);
  v34 = objc_msgSend(a1, sel_codeVerifier);
  v35 = sub_23361E150();
  v53 = v36;
  v54 = v35;

  Institution.init(_:)(objc_msgSend(a1, sel_institutionObject), (uint64_t)v8);
  v37 = objc_msgSend(a1, sel_fpanId);
  if (v37)
  {
    v38 = v37;
    v39 = (uint64_t)v8;
    v40 = sub_23361E150();
    v42 = v41;

  }
  else
  {
    v39 = (uint64_t)v8;
    v40 = 0;
    v42 = 0;
  }
  v43 = (unsigned __int16)ManagedAuthorizationSession.authorizationType.getter();
  v44 = (uint64_t)&v5[v3[7]];
  v30((char *)v44, 1, 1, v33);
  v45 = (uint64_t *)&v5[v3[9]];
  *v45 = 0;
  v45[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v5, v62, v33);
  v46 = &v5[v3[5]];
  v47 = v60;
  *(_QWORD *)v46 = v61;
  *((_QWORD *)v46 + 1) = v47;
  v48 = v58;
  *((_QWORD *)v46 + 2) = v59;
  *((_QWORD *)v46 + 3) = v48;
  v49 = v56;
  *((_QWORD *)v46 + 4) = v57;
  *((_QWORD *)v46 + 5) = v49;
  *((_QWORD *)v46 + 6) = v55;
  sub_2332CEB58((uint64_t)v64, v44);
  v50 = &v5[v3[6]];
  v51 = v53;
  *(_QWORD *)v50 = v54;
  *((_QWORD *)v50 + 1) = v51;
  sub_233168580(v39, (uint64_t)&v5[v3[8]], type metadata accessor for Institution);
  swift_bridgeObjectRelease();
  *v45 = v40;
  v45[1] = v42;
  *(_WORD *)&v5[v3[10]] = v43;
  sub_233168580((uint64_t)v5, v65, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationSession);

}

id static ManagedAuthorizationSession.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedAuthorizationSession;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

uint64_t sub_233452B2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BankConnectAuthorizationSession();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id static ManagedAuthorizationSession.insertSession(_:in:)(uint64_t a1, void *a2)
{
  return sub_233452CDC(a1, a2);
}

void static ManagedAuthorizationSession.deleteAllSessions(in:)(void *a1)
{
  uint64_t v1;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  objc_super v10;

  v10.receiver = (id)swift_getObjCClassFromMetadata();
  v10.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit27ManagedAuthorizationSession;
  v3 = objc_msgSendSuper2(&v10, sel_fetchRequest);
  objc_msgSend(v3, sel_setIncludesPropertyValues_, 0);
  v4 = sub_23361E984();
  if (v1)
  {

    return;
  }
  v5 = v4;
  if (!(v4 >> 62))
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_5;
LABEL_12:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23361EF30();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_12;
LABEL_5:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x234933120](i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(a1, sel_deleteObject_, v8);

    }
    goto LABEL_12;
  }
  __break(1u);
}

id sub_233452CDC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v18[2];

  v5 = type metadata accessor for Institution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BankConnectAuthorizationSession();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedAuthorizationSession();
  sub_2331684BC(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationSession);
  v11 = a2;
  v12 = ManagedAuthorizationSession.__allocating_init(_:context:)((uint64_t)v10, v11);
  v13 = (uint64_t *)(a1 + *(int *)(v8 + 32));
  type metadata accessor for ManagedInstitution();
  v14 = (void *)static ManagedInstitution.existingInstitution(withInstitutionID:in:)(*v13, v13[1], (uint64_t)v11);
  if (v2)
  {

  }
  else
  {
    v15 = v14;
    if (v14)
    {
      v16 = v14;
      _s10FinanceKit18ManagedInstitutionC6update_4with7contextyAC_AA0D0VSo22NSManagedObjectContextCtFZ_0(v16, (uint64_t)v13, v11);
    }
    else
    {
      sub_2331684BC((uint64_t)v13, (uint64_t)v7, type metadata accessor for Institution);
      v16 = ManagedInstitution.__allocating_init(_:context:)((uint64_t)v7, v11);
    }
    sub_2334C6820((uint64_t)v13 + *(int *)(v5 + 60), v16, (uint64_t)v11);

    objc_msgSend(v12, sel_setInstitutionObject_, v16);
  }
  return v12;
}

void sub_233452EA0(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D658();
  objc_msgSend(v2, sel_setId_, v3);

}

char *keypath_get_selector_fpanId()
{
  return sel_fpanId;
}

char *keypath_get_selector_consentId()
{
  return sel_consentId;
}

void sub_233452F08(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_consentId, a2);
}

void sub_233452F24(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setConsentId_);
}

void sub_233452F30(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_consentToken, a2);
}

void sub_233452F4C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setConsentToken_);
}

char *keypath_get_selector_consentAuthorizationURI()
{
  return sel_consentAuthorizationURI;
}

void sub_233452F64(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_consentAuthorizationURI, a2);
}

void sub_233452F80(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setConsentAuthorizationURI_);
}

char *keypath_get_selector_previousConsentUUID()
{
  return sel_previousConsentUUID;
}

char *keypath_get_selector_extensionPayload()
{
  return sel_extensionPayload;
}

id sub_233452FAC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_extensionPayload);
  *a2 = result;
  return result;
}

id sub_233452FE4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setExtensionPayload_, *a1);
}

char *keypath_get_selector_codeVerifier()
{
  return sel_codeVerifier;
}

void sub_233453004(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2331BB378(a1, (SEL *)&selRef_codeVerifier, a2);
}

void sub_233453020(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_4Tm(a1, a2, a3, a4, (SEL *)&selRef_setCodeVerifier_);
}

id sub_23345302C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_institutionObject);
  *a2 = result;
  return result;
}

id sub_233453064(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInstitutionObject_, *a1);
}

id sub_233453078@<X0>(_WORD *a1@<X8>)
{
  id result;

  result = ManagedAuthorizationSession.authorizationType.getter();
  *a1 = (_WORD)result;
  return result;
}

id sub_2334530A0(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAuthorizationTypeValue_, *a1);
}

uint64_t type metadata accessor for ManagedAuthorizationSession()
{
  return objc_opt_self();
}

uint64_t ManagedAccountMatchImporter.__allocating_init(passDataSourceProvider:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = swift_allocObject();
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v6, v3, v4);
  *(_QWORD *)(v2 + 16) = v6;
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v2;
}

id ManagedAccountMatchImporter.insertOrUpdateAccountMatch(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  Class v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v5 = type metadata accessor for AccountMatch();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for ManagedAccountMatch();
  v9 = *(int *)(v5 + 20);
  v33 = a1;
  v10 = (uint64_t *)(a1 + v9);
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  *(_QWORD *)&v35 = *v10;
  *((_QWORD *)&v35 + 1) = v12;
  v36 = v13;
  v37 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = (void *)a2;
  v15 = (id)static ManagedAccountMatch.existingAccountMatch(with:in:)(&v35, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v31 = v8;
    v32 = v7;
    type metadata accessor for ManagedInternalAccount();
    *(_QWORD *)&v35 = v11;
    *((_QWORD *)&v35 + 1) = v12;
    v36 = v13;
    v37 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v38;
    v17 = (void *)static ManagedInternalAccount.existingAccount(with:in:)(&v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      v19 = v15;
      v15 = sub_233453448(v19, v17, v33);

    }
    else
    {
      v20 = (uint64_t)v32;
      sub_2334535FC(v33, (uint64_t)v32);
      v21 = objc_allocWithZone(v31);
      v22 = v16;
      v15 = objc_msgSend(v21, sel_initWithContext_, v22);
      _s10FinanceKit19ManagedAccountMatchC6update_4withyAC_AA0dE0VtFZ_0(v15, v20);

      sub_233453640(v20);
      v23 = v34;
      if (v17)
      {
        v24 = v17;
        _s10FinanceKit22ManagedInternalAccountC6update_4withyAC_AA0cE5MatchCtFZ_0(v24, v15);
        *(_QWORD *)&v35 = *(_QWORD *)(v23 + 16);
        v25 = (id)v35;
        v26 = objc_msgSend(v15, sel_fpanID);
        v27 = sub_23361E150();
        v29 = v28;

        v30._countAndFlagsBits = v27;
        v30._object = v29;
        BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(1, v30);

        swift_bridgeObjectRelease();
      }
    }
  }
  return v15;
}

uint64_t ManagedAccountMatchImporter.init(passDataSourceProvider:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_2334535B4(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

uint64_t ManagedAccountMatchImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedAccountMatchImporter.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void *sub_233453448(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  id v22;
  Swift::String v23;
  id v24;

  v7 = objc_msgSend(a1, sel_fpanID);
  v8 = sub_23361E150();
  v10 = v9;

  v11 = (uint64_t *)(a3 + *(int *)(type metadata accessor for AccountMatch() + 24));
  v12 = *v11;
  v13 = (void *)v11[1];
  if (v8 == *v11 && v10 == v13)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = *(id *)(v3 + 16);
      v17 = objc_msgSend(a1, sel_fpanID);
      v18 = sub_23361E150();
      v20 = v19;

      v21._countAndFlagsBits = v18;
      v21._object = v20;
      BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(0, v21);

      swift_bridgeObjectRelease();
      v22 = v16;
      v23._countAndFlagsBits = v12;
      v23._object = v13;
      BankConnectPaymentPassDataSource.setDynamicCardArt(enabled:for:)(1, v23);

    }
  }
  _s10FinanceKit19ManagedAccountMatchC6update_4withyAC_AA0dE0VtFZ_0(a1, a3);
  if (a2)
  {
    v24 = a2;
    _s10FinanceKit22ManagedInternalAccountC6update_4withyAC_AA0cE5MatchCtFZ_0(v24, a1);

  }
  return a1;
}

uint64_t sub_2334535B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v6, a3, a4);
  *(_QWORD *)(a2 + 16) = v6;
  return a2;
}

uint64_t sub_2334535FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccountMatch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233453640(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccountMatch();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ManagedAccountMatchImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedAccountMatchImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedAccountMatchImporter.__allocating_init(passDataSourceProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

BOOL static OrderStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

FinanceKit::OrderStatus __swiftcall OrderStatus.init(_:)(FinanceKit::OrderStatus result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result;
  return result;
}

uint64_t OrderStatus.hash(into:)()
{
  return sub_23361F35C();
}

uint64_t sub_2334536F8()
{
  sub_233453BA4();
  return sub_23361F428();
}

uint64_t sub_233453720()
{
  sub_233453BA4();
  return sub_23361F434();
}

uint64_t sub_233453748()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6574656C706D6F63;
  if (*v0 != 1)
    v1 = 0x656C6C65636E6163;
  if (*v0)
    return v1;
  else
    return 1852141679;
}

uint64_t sub_2334537A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334544BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334537C8()
{
  sub_233453B60();
  return sub_23361F428();
}

uint64_t sub_2334537F0()
{
  sub_233453B60();
  return sub_23361F434();
}

uint64_t sub_233453818()
{
  sub_233453BE8();
  return sub_23361F428();
}

uint64_t sub_233453840()
{
  sub_233453BE8();
  return sub_23361F434();
}

uint64_t sub_233453868()
{
  sub_233453C2C();
  return sub_23361F428();
}

uint64_t sub_233453890()
{
  sub_233453C2C();
  return sub_23361F434();
}

uint64_t OrderStatus.hashValue.getter()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t OrderStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050790);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050798);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560507A0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560507A8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233453B60();
  sub_23361F410();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_233453BE8();
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_233453BA4();
      v16 = v21;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_233453C2C();
    sub_23361F0C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_233453B60()
{
  unint64_t result;

  result = qword_2560507B0;
  if (!qword_2560507B0)
  {
    result = MEMORY[0x234934494](&unk_23364C53C, &type metadata for OrderStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560507B0);
  }
  return result;
}

unint64_t sub_233453BA4()
{
  unint64_t result;

  result = qword_2560507B8;
  if (!qword_2560507B8)
  {
    result = MEMORY[0x234934494](&unk_23364C4EC, &type metadata for OrderStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560507B8);
  }
  return result;
}

unint64_t sub_233453BE8()
{
  unint64_t result;

  result = qword_2560507C0;
  if (!qword_2560507C0)
  {
    result = MEMORY[0x234934494](&unk_23364C49C, &type metadata for OrderStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560507C0);
  }
  return result;
}

unint64_t sub_233453C2C()
{
  unint64_t result;

  result = qword_2560507C8;
  if (!qword_2560507C8)
  {
    result = MEMORY[0x234934494](&unk_23364C44C, &type metadata for OrderStatus.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560507C8);
  }
  return result;
}

uint64_t OrderStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560507D0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560507D8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560507E0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560507E8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233453B60();
  v13 = v41;
  sub_23361F3EC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23361F098();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23361EE10();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v25 = &type metadata for OrderStatus;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_233453BE8();
      v20 = v9;
      sub_23361EFA8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_233453BA4();
      v28 = v15;
      sub_23361EFA8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_233453C2C();
    sub_23361EFA8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

unint64_t sub_2334540B8()
{
  unint64_t result;

  result = qword_2560507F0;
  if (!qword_2560507F0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderStatus, &type metadata for OrderStatus);
    atomic_store(result, (unint64_t *)&qword_2560507F0);
  }
  return result;
}

uint64_t sub_2334540FC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return OrderStatus.init(from:)(a1, a2);
}

uint64_t sub_233454110(_QWORD *a1)
{
  return OrderStatus.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for OrderStatus()
{
  return &type metadata for OrderStatus;
}

uint64_t _s10FinanceKit11OrderStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233454184 + 4 * byte_23364C165[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2334541B8 + 4 * byte_23364C160[v4]))();
}

uint64_t sub_2334541B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334541C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334541C8);
  return result;
}

uint64_t sub_2334541D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334541DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2334541E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334541E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderStatus.CodingKeys()
{
  return &type metadata for OrderStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for OrderStatus.OpenCodingKeys()
{
  return &type metadata for OrderStatus.OpenCodingKeys;
}

ValueMetadata *type metadata accessor for OrderStatus.CompletedCodingKeys()
{
  return &type metadata for OrderStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for OrderStatus.CancelledCodingKeys()
{
  return &type metadata for OrderStatus.CancelledCodingKeys;
}

unint64_t sub_233454238()
{
  unint64_t result;

  result = qword_2560507F8;
  if (!qword_2560507F8)
  {
    result = MEMORY[0x234934494](&unk_23364C424, &type metadata for OrderStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560507F8);
  }
  return result;
}

unint64_t sub_233454280()
{
  unint64_t result;

  result = qword_256050800;
  if (!qword_256050800)
  {
    result = MEMORY[0x234934494](&unk_23364C344, &type metadata for OrderStatus.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050800);
  }
  return result;
}

unint64_t sub_2334542C8()
{
  unint64_t result;

  result = qword_256050808;
  if (!qword_256050808)
  {
    result = MEMORY[0x234934494](&unk_23364C36C, &type metadata for OrderStatus.OpenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050808);
  }
  return result;
}

unint64_t sub_233454310()
{
  unint64_t result;

  result = qword_256050810;
  if (!qword_256050810)
  {
    result = MEMORY[0x234934494](&unk_23364C2F4, &type metadata for OrderStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050810);
  }
  return result;
}

unint64_t sub_233454358()
{
  unint64_t result;

  result = qword_256050818;
  if (!qword_256050818)
  {
    result = MEMORY[0x234934494](&unk_23364C31C, &type metadata for OrderStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050818);
  }
  return result;
}

unint64_t sub_2334543A0()
{
  unint64_t result;

  result = qword_256050820;
  if (!qword_256050820)
  {
    result = MEMORY[0x234934494](&unk_23364C2A4, &type metadata for OrderStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050820);
  }
  return result;
}

unint64_t sub_2334543E8()
{
  unint64_t result;

  result = qword_256050828;
  if (!qword_256050828)
  {
    result = MEMORY[0x234934494](&unk_23364C2CC, &type metadata for OrderStatus.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050828);
  }
  return result;
}

unint64_t sub_233454430()
{
  unint64_t result;

  result = qword_256050830;
  if (!qword_256050830)
  {
    result = MEMORY[0x234934494](&unk_23364C394, &type metadata for OrderStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050830);
  }
  return result;
}

unint64_t sub_233454478()
{
  unint64_t result;

  result = qword_256050838;
  if (!qword_256050838)
  {
    result = MEMORY[0x234934494](&unk_23364C3BC, &type metadata for OrderStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050838);
  }
  return result;
}

uint64_t sub_2334544BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852141679 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_23345461C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23361ECA8();
    type metadata accessor for ManagedContactTransactionInsight();
    sub_233455D78(&qword_256043F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManagedContactTransactionInsight);
    sub_23361E60C();
    v1 = v27;
    v26 = v28;
    v2 = v29;
    v3 = v30;
    v4 = v31;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v23 = v2;
  v25 = (unint64_t)(v2 + 64) >> 6;
  v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_23361ED08())
      goto LABEL_38;
    type metadata accessor for ManagedContactTransactionInsight();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v32;
    swift_unknownObjectRelease();
    if (!v32)
      goto LABEL_38;
LABEL_31:
    v15 = objc_msgSend(v11, sel_peerPaymentCounterpartHandle, v23);
    if (v15)
    {
      v16 = v15;
      v17 = sub_23361E150();
      v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_2334A4AA4(0, v24[2] + 1, 1, v24);
      v21 = v24[2];
      v20 = v24[3];
      if (v21 >= v20 >> 1)
        v24 = sub_2334A4AA4((_QWORD *)(v20 > 1), v21 + 1, 1, v24);
      v24[2] = v21 + 1;
      v22 = &v24[2 * v21];
      v22[4] = v17;
      v22[5] = v19;
    }
    else
    {

    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_38;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v25)
      goto LABEL_38;
    v13 = *(_QWORD *)(v26 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v25)
        goto LABEL_38;
      v13 = *(_QWORD *)(v26 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v25)
          goto LABEL_38;
        v13 = *(_QWORD *)(v26 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v25)
            goto LABEL_38;
          v13 = *(_QWORD *)(v26 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v25)
              goto LABEL_38;
            v13 = *(_QWORD *)(v26 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v25 != v14)
              {
                v13 = *(_QWORD *)(v26 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_2331961F0();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_23345497C(uint64_t a1, SEL *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;

  v3 = a1;
  v28 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23361ECA8();
    type metadata accessor for ManagedTransactionInsights();
    sub_233455D78(&qword_256043F40, v4, (uint64_t (*)(uint64_t))type metadata accessor for ManagedTransactionInsights);
    sub_23361E60C();
    v3 = v23;
    v21 = v24;
    v5 = v25;
    v6 = v26;
    v7 = v27;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v6 = 0;
  }
  v20 = v5;
  v11 = (unint64_t)(v5 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_23361ED08())
      goto LABEL_36;
    type metadata accessor for ManagedTransactionInsights();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = v22;
    swift_unknownObjectRelease();
    v14 = v6;
    v12 = v7;
    if (!v22)
      goto LABEL_36;
LABEL_26:
    v18 = objc_msgSend(v15, *a2, v20);

    v6 = v14;
    v7 = v12;
    if (v18)
    {
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      v6 = v14;
      v7 = v12;
    }
  }
  if (v7)
  {
    v12 = (v7 - 1) & v7;
    v13 = __clz(__rbit64(v7)) | (v6 << 6);
    v14 = v6;
LABEL_25:
    v15 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (!v15)
      goto LABEL_36;
    goto LABEL_26;
  }
  v14 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v14 >= v11)
      goto LABEL_36;
    v16 = *(_QWORD *)(v21 + 8 * v14);
    if (!v16)
    {
      v17 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_36;
      v16 = *(_QWORD *)(v21 + 8 * v17);
      if (v16)
        goto LABEL_23;
      v17 = v6 + 3;
      if (v6 + 3 >= v11)
        goto LABEL_36;
      v16 = *(_QWORD *)(v21 + 8 * v17);
      if (v16)
        goto LABEL_23;
      v17 = v6 + 4;
      if (v6 + 4 >= v11)
        goto LABEL_36;
      v16 = *(_QWORD *)(v21 + 8 * v17);
      if (v16)
      {
LABEL_23:
        v14 = v17;
      }
      else
      {
        v14 = v6 + 5;
        if (v6 + 5 >= v11)
          goto LABEL_36;
        v16 = *(_QWORD *)(v21 + 8 * v14);
        if (!v16)
        {
          v19 = v6 + 6;
          while (v11 != v19)
          {
            v16 = *(_QWORD *)(v21 + 8 * v19++);
            if (v16)
            {
              v14 = v19 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_2331961F0();
          return;
        }
      }
    }
LABEL_24:
    v12 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v14 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

void sub_233454C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23361ECA8();
    type metadata accessor for ManagedInternalTransaction();
    sub_233455D78(&qword_256043F48, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManagedInternalTransaction);
    sub_23361E60C();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_23361ED08())
      goto LABEL_36;
    type metadata accessor for ManagedInternalTransaction();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_36;
LABEL_26:
    v15 = objc_msgSend(v12, sel_insightsObject, v17);

    v3 = v11;
    v4 = v9;
    if (v15)
    {
      MEMORY[0x234932730]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23361E414();
      sub_23361E438();
      sub_23361E408();
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_25:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_36;
    goto LABEL_26;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_36;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_36;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v16 = v3 + 6;
          while (v8 != v16)
          {
            v13 = *(_QWORD *)(v18 + 8 * v16++);
            if (v13)
            {
              v11 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_2331961F0();
          return;
        }
      }
    }
LABEL_24:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

id ManagedInternalTransaction.createOrMergeInsightsIfNeeded(in:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  objc_super v32;
  uint64_t v33;

  v2 = v1;
  swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D6A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = objc_msgSend(v2, sel_sharedId);
  v31 = a1;
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  v15 = v14;
  sub_23361D67C();

  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    sub_2331D76B8((uint64_t)v6);
    goto LABEL_7;
  }
  v16(v13, v6, v7);
  v32.receiver = (id)swift_getObjCClassFromMetadata();
  v32.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedInternalTransaction;
  v17 = objc_msgSendSuper2(&v32, sel_fetchRequest);
  v18 = (void *)sub_23361E3D8();
  objc_msgSend(v17, sel_setRelationshipKeyPathsForPrefetching_, v18);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_233623D60;
  v20 = sub_23361D658();
  *(_QWORD *)(v19 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v19 + 64) = sub_2331B372C();
  *(_QWORD *)(v19 + 32) = v20;
  v21 = (void *)sub_23361E6B4();
  objc_msgSend(v17, sel_setPredicate_, v21);

  v22 = v31;
  v23 = v33;
  v24 = sub_23361E984();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);

    return v22;
  }
  v27 = sub_2331C9548(v24);
  swift_bridgeObjectRelease();
  _s10FinanceKit26ManagedTransactionInsightsC05mergedE012transactions2inACSgShyAA0c8InternalD0CG_So22NSManagedObjectContextCtFZ_0(v27, (uint64_t)v22);
  v29 = v28;

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_7:
  v22 = objc_msgSend(v2, sel_insightsObject);
  if (!v22)
  {
    type metadata accessor for ManagedTransactionInsights();
    v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v22 = objc_msgSend(v25, sel_initWithContext_, v31);
    objc_msgSend(v2, sel_setInsightsObject_, v22);
  }
  return v22;
}

uint64_t type metadata accessor for ManagedTransactionInsights()
{
  return objc_opt_self();
}

id ManagedTransactionInsights.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransactionInsights.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransactionInsights.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTransactionInsights.fetchRequest()()
{
  objc_super v1;

  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit26ManagedTransactionInsights;
  return objc_msgSendSuper2(&v1, sel_fetchRequest);
}

Swift::Void __swiftcall ManagedTransactionInsights.willSave()()
{
  void *v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_willSave);
  if ((objc_msgSend(v0, sel_isDeleted) & 1) == 0)
  {
    v1 = (void *)sub_23361E12C();
    v2 = objc_msgSend(v0, sel_objectIDsForRelationshipNamed_, v1);

    sub_233168668(0, (unint64_t *)&qword_2560466E8);
    v3 = sub_23361E3F0();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_23361EF30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v4)
    {
      v5 = objc_msgSend(v0, sel_managedObjectContext);
      objc_msgSend(v5, sel_deleteObject_, v0);

    }
  }
}

id sub_233455640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  id result;
  id v13;
  void *v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;

  v4 = swift_bridgeObjectRetain();
  v5 = (void *)sub_233199830(v4);
  swift_bridgeObjectRelease();
  if (!v5)
  {
LABEL_12:
    v10 = swift_bridgeObjectRetain();
    v5 = (void *)sub_233199830(v10);
    swift_bridgeObjectRelease();
    if (!v5)
    {
      type metadata accessor for ManagedTransactionInsights();
      return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a2);
    }
    return v5;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_23361ECE4() >= 2)
      goto LABEL_4;
    goto LABEL_11;
  }
  if (*(uint64_t *)(a1 + 16) < 2)
  {
LABEL_11:

    goto LABEL_12;
  }
LABEL_4:
  sub_23345497C(a1, (SEL *)&selRef_applePayInsightObject);
  v7 = v6;
  if (v6 >> 62)
  {
    if (sub_23361EF30())
      goto LABEL_6;
LABEL_15:
    v9 = 0;
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_6:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x234933120](0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_34;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;
LABEL_16:
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setApplePayInsightObject_, v9);

  sub_23345497C(a1, (SEL *)&selRef_bankMerchantInformationInsightObject);
  v7 = v11;
  if (!(v11 >> 62))
  {
    result = *(id *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_18;
LABEL_23:
    v14 = 0;
    goto LABEL_24;
  }
  result = (id)sub_23361EF30();
  if (!result)
    goto LABEL_23;
LABEL_18:
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v13 = (id)MEMORY[0x234933120](0, v7);
    goto LABEL_21;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v7 + 32);
LABEL_21:
    v14 = v13;
LABEL_24:
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setBankMerchantInformationInsightObject_, v14);

    sub_23345497C(a1, (SEL *)&selRef_mapsInsightObject);
    sub_2331C9380(v15);
    swift_bridgeObjectRelease();
    v16 = (void *)sub_2331B162C();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setMapsInsightObject_, v16);

    sub_23345497C(a1, (SEL *)&selRef_contactInsightObject);
    v18 = sub_2331C939C(v17);
    swift_bridgeObjectRelease();
    v19 = (void *)sub_23319981C(v18);
    if (v19)
    {
      sub_23345461C(v18);
      if (*(_QWORD *)(v20 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v21 = (void *)sub_23361E12C();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v21 = 0;
      }
      objc_msgSend(v19, sel_setPeerPaymentCounterpartHandle_, v21);
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v5, sel_setContactInsightObject_, v19);

    return v5;
  }
  __break(1u);
  return result;
}

void _s10FinanceKit26ManagedTransactionInsightsC05mergedE012transactions2inACSgShyAA0c8InternalD0CG_So22NSManagedObjectContextCtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v3 = a1;
  sub_233454C88(a1);
  v5 = sub_2331C952C(v4);
  swift_bridgeObjectRelease();
  v6 = sub_233455640(v5, a2);
  swift_bridgeObjectRelease();
  if (v6)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_23361ECA8();
      type metadata accessor for ManagedInternalTransaction();
      sub_233455D78(&qword_256043F48, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManagedInternalTransaction);
      sub_23361E60C();
      v3 = v23;
      v21 = v24;
      v7 = v25;
      v8 = v26;
      v9 = v27;
    }
    else
    {
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v21 = v3 + 56;
      v7 = ~v10;
      v11 = -v10;
      if (v11 < 64)
        v12 = ~(-1 << v11);
      else
        v12 = -1;
      v9 = v12 & *(_QWORD *)(v3 + 56);
      swift_bridgeObjectRetain();
      v8 = 0;
    }
    v13 = (unint64_t)(v7 + 64) >> 6;
    if (v3 < 0)
      goto LABEL_11;
    while (1)
    {
      if (v9)
      {
        v14 = (v9 - 1) & v9;
        v15 = __clz(__rbit64(v9)) | (v8 << 6);
        v16 = v8;
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = *(_QWORD *)(v21 + 8 * v18);
        v16 = v8 + 1;
        if (!v19)
        {
          v16 = v8 + 2;
          if (v8 + 2 >= v13)
            goto LABEL_31;
          v19 = *(_QWORD *)(v21 + 8 * v16);
          if (!v19)
          {
            v16 = v8 + 3;
            if (v8 + 3 >= v13)
              goto LABEL_31;
            v19 = *(_QWORD *)(v21 + 8 * v16);
            if (!v19)
            {
              v16 = v8 + 4;
              if (v8 + 4 >= v13)
                goto LABEL_31;
              v19 = *(_QWORD *)(v21 + 8 * v16);
              if (!v19)
              {
                v20 = v8 + 5;
                while (v13 != v20)
                {
                  v19 = *(_QWORD *)(v21 + 8 * v20++);
                  if (v19)
                  {
                    v16 = v20 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_2331961F0();
                return;
              }
            }
          }
        }
LABEL_27:
        v14 = (v19 - 1) & v19;
        v15 = __clz(__rbit64(v19)) + (v16 << 6);
      }
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      if (!v17)
        goto LABEL_31;
      while (1)
      {
        objc_msgSend(v17, sel_setInsightsObject_, v6);

        v8 = v16;
        v9 = v14;
        if ((v3 & 0x8000000000000000) == 0)
          break;
LABEL_11:
        if (sub_23361ED08())
        {
          type metadata accessor for ManagedInternalTransaction();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v17 = v22;
          swift_unknownObjectRelease();
          v16 = v8;
          v14 = v9;
          if (v22)
            continue;
        }
        goto LABEL_31;
      }
    }
  }
}

char *keypath_get_selector_mapsInsightObject()
{
  return sel_mapsInsightObject;
}

id sub_233455C24@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_mapsInsightObject);
  *a2 = result;
  return result;
}

id sub_233455C5C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMapsInsightObject_, *a1);
}

char *keypath_get_selector_applePayInsightObject()
{
  return sel_applePayInsightObject;
}

id sub_233455C7C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_applePayInsightObject);
  *a2 = result;
  return result;
}

id sub_233455CB4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setApplePayInsightObject_, *a1);
}

char *keypath_get_selector_bankMerchantInformationInsightObject()
{
  return sel_bankMerchantInformationInsightObject;
}

id sub_233455CD4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_bankMerchantInformationInsightObject);
  *a2 = result;
  return result;
}

id sub_233455D0C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBankMerchantInformationInsightObject_, *a1);
}

char *keypath_get_selector_contactInsightObject()
{
  return sel_contactInsightObject;
}

id sub_233455D2C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_contactInsightObject);
  *a2 = result;
  return result;
}

id sub_233455D64(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContactInsightObject_, *a1);
}

uint64_t sub_233455D78(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = a3(a2);
    result = MEMORY[0x234934494](MEMORY[0x24BEE5BD8], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t BankConnectPassKitTransactionsDeleter.__allocating_init(coreDataStore:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t BankConnectPassKitTransactionsDeleter.init(coreDataStore:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_233455DF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v10;
  os_activity_scope_state_s state;
  uint64_t v13;

  v5 = v4;
  v13 = *MEMORY[0x24BDAC8D0];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  if (qword_254246ED0 != -1)
    swift_once();
  v10 = _os_activity_create(&dword_233151000, "bankConnect/deletePaymentTransaction", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v10, &state);
  sub_233455EFC(v5, a1, a2, a3, a4);
  os_activity_scope_leave(&state);
  return swift_unknownObjectRelease();
}

void sub_233455EFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_256041CA0 != -1)
    swift_once();
  v10 = sub_23361DB80();
  __swift_project_value_buffer(v10, (uint64_t)qword_2560495B0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_23361DB68();
  v12 = sub_23361E780();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_233164DCC(a2, a3, &v18);
    v17 = a2;
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_233164DCC(a4, a5, &v18);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_233151000, v11, v12, "Deleting PassKit transaction with transactionID: %s for fpanID: %s.", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234934590](v14, -1, -1);
    MEMORY[0x234934590](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v15 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_newBackgroundContext, v17);
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  sub_23361E960();

}

void sub_2334561B4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  void *v37;
  id v38[5];

  v38[4] = *(id *)MEMORY[0x24BDAC8D0];
  type metadata accessor for ManagedInternalAccount();
  v12 = static ManagedInternalAccount.existingAccount(withExternalAccountID:in:)(a1, a2, (uint64_t)a3);
  if (!v6)
  {
    v13 = (void *)v12;
    if (v12)
    {
      type metadata accessor for ManagedInternalTransaction();
      v14 = objc_msgSend(v13, sel_accountId);
      v15 = (void *)sub_23361E150();
      v17 = v16;

      v18 = objc_msgSend(v13, sel_institutionId);
      v19 = (void *)sub_23361E150();
      v37 = v13;
      v21 = v20;

      v38[0] = v15;
      v38[1] = v17;
      v38[2] = v19;
      v38[3] = v21;
      sub_2331E28A0();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_233623D60;
      *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v22 + 64) = sub_2331683F0();
      *(_QWORD *)(v22 + 32) = a5;
      *(_QWORD *)(v22 + 40) = a6;
      swift_bridgeObjectRetain();
      v23 = (void *)sub_23361E6B4();
      v24 = sub_23338355C((uint64_t *)v38, v23);

      sub_233382BA0((uint64_t)v24, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v38[0] = 0;
      if ((objc_msgSend(a3, sel_save_, v38) & 1) != 0)
      {
        v30 = qword_256041CA0;
        v31 = v38[0];
        if (v30 != -1)
          swift_once();
        v32 = sub_23361DB80();
        __swift_project_value_buffer(v32, (uint64_t)qword_2560495B0);
        v33 = sub_23361DB68();
        v34 = sub_23361E780();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v35 = 0;
          _os_log_impl(&dword_233151000, v33, v34, "Successfully deleted PassKit transaction.", v35, 2u);
          MEMORY[0x234934590](v35, -1, -1);
        }

      }
      else
      {
        v36 = v38[0];
        sub_23361D1B4();

        swift_willThrow();
      }
    }
    else
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v25 = sub_23361DB80();
      __swift_project_value_buffer(v25, (uint64_t)qword_2560495B0);
      swift_bridgeObjectRetain_n();
      v26 = sub_23361DB68();
      v27 = sub_23361E768();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = (void *)swift_slowAlloc();
        v38[0] = v29;
        *(_DWORD *)v28 = 136315138;
        swift_bridgeObjectRetain();
        sub_233164DCC(a1, a2, (uint64_t *)v38);
        sub_23361EBC4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_233151000, v26, v27, "Failed to find account for fpanID: %s, unable to delete transaction.", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234934590](v29, -1, -1);
        MEMORY[0x234934590](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

uint64_t BankConnectPassKitTransactionsDeleter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t BankConnectPassKitTransactionsDeleter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BankConnectPassKitTransactionsDeleter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BankConnectPassKitTransactionsDeleter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsDeleter.__allocating_init(coreDataStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BankConnectPassKitTransactionsDeleter.deletePaymentTransaction(with:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

void sub_2334566AC()
{
  uint64_t v0;

  sub_2334561B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t Order.VersionIdentifier.init(fullyQualifiedOrderIdentifier:updateDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v6;
  v7 = a3 + *(int *)(type metadata accessor for Order.VersionIdentifier() + 20);
  v8 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t type metadata accessor for Order.VersionIdentifier()
{
  uint64_t result;

  result = qword_2560508A0;
  if (!qword_2560508A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Order.VersionIdentifier.fullyQualifiedOrderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Order.VersionIdentifier.fullyQualifiedOrderIdentifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*Order.VersionIdentifier.fullyQualifiedOrderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Order.VersionIdentifier.updateDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order.VersionIdentifier() + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Order.VersionIdentifier.updateDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order.VersionIdentifier() + 20);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Order.VersionIdentifier.updateDate.modify())(_QWORD)
{
  type metadata accessor for Order.VersionIdentifier();
  return nullsub_1;
}

uint64_t Order.VersionIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Order.VersionIdentifier();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23361E090();
}

uint64_t Order.VersionIdentifier.hashValue.getter()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Order.VersionIdentifier();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_233456A44()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_233456B14()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23361E090();
}

uint64_t sub_233456BD4()
{
  sub_23361F350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23361D634();
  sub_233167C58((unint64_t *)&qword_256042700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t Order.versionIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v3 = type metadata accessor for Order(0);
  v4 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  v6 = *v4;
  v5 = v4[1];
  v8 = v4[2];
  v7 = v4[3];
  v9 = v1 + *(int *)(v3 + 44);
  v10 = (char *)a1 + *(int *)(type metadata accessor for Order.VersionIdentifier() + 20);
  v11 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  *a1 = v6;
  a1[1] = v5;
  a1[2] = v8;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s10FinanceKit5OrderV17VersionIdentifierV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_23361F224() & 1) == 0)
    return 0;
  v7 = v2 == v4 && v3 == v5;
  if (!v7 && (sub_23361F224() & 1) == 0)
    return 0;
  type metadata accessor for Order.VersionIdentifier();
  return sub_23361D5E0();
}

uint64_t sub_233456DEC()
{
  return sub_233167C58(&qword_256050840, (uint64_t (*)(uint64_t))type metadata accessor for Order.VersionIdentifier, (uint64_t)&protocol conformance descriptor for Order.VersionIdentifier);
}

uint64_t *_s17VersionIdentifierVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23361D634();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t _s17VersionIdentifierVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s17VersionIdentifierVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *_s17VersionIdentifierVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s17VersionIdentifierVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *_s17VersionIdentifierVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23361D634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t _s17VersionIdentifierVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233457124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s17VersionIdentifierVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2334571AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D634();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_233457220()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Order.WebService.authenticationToken.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Order.WebService.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Order.WebService.authenticationToken.modify())()
{
  return nullsub_1;
}

uint64_t Order.WebService.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order.WebService() + 20);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Order.WebService()
{
  uint64_t result;

  result = qword_256050930;
  if (!qword_256050930)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Order.WebService.baseURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Order.WebService() + 20);
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*Order.WebService.baseURL.modify())(_QWORD)
{
  type metadata accessor for Order.WebService();
  return nullsub_1;
}

uint64_t *_s10WebServiceVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23361D340();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s10WebServiceVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s10WebServiceVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23361D340();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *_s10WebServiceVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D340();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s10WebServiceVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23361D340();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s10WebServiceVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23361D340();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s10WebServiceVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23345769C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s10WebServiceVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233457724(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23361D340();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_233457798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t BankConnectService.completeConnectionAuthorization(forSession:withAuthorizationPayload:fraudAssessment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  type metadata accessor for BankConnectConsent();
  v5[15] = swift_task_alloc();
  v5[16] = type metadata accessor for BankConnectService.Message();
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233457890()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_256041CA0 != -1)
    swift_once();
  v1 = sub_23361DB80();
  __swift_project_value_buffer(v1, (uint64_t)qword_2560495B0);
  v2 = sub_23361DB68();
  v3 = sub_23361E768();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_233151000, v2, v3, "completeConnectionAuthorization(forSession:withAuthorizationPayload:fraudAssessment:) is deprecated and has been replaced with completeConnectionAuthorization(for:with:fraudAssessment:configuration:). Please update immediately, continued use of this function may result in unexpected behaviour.", v4, 2u);
    MEMORY[0x234934590](v4, -1, -1);
  }
  v5 = v0[17];
  v6 = v0[13];
  v7 = v0[14];
  v9 = v0[11];
  v8 = v0[12];

  v0[18] = *(_QWORD *)(v7 + 16);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
  v11 = v5 + *(int *)(v10 + 48);
  v12 = *(int *)(v10 + 64);
  sub_2331684BC(v9, v5, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationSession);
  sub_2331684BC(v8, v11, type metadata accessor for BankConnectAuthorizationPayload);
  *(_QWORD *)(v5 + v12) = v6;
  type metadata accessor for BankConnectAuthorizationConfiguration();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_233457A18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[18];
  v0[7] = v0[15];
  v0[2] = v0;
  v0[3] = sub_233457A7C;
  v2 = swift_continuation_init();
  sub_233298BE0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_233457A7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 152) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 136);
    sub_233193A5C(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 80));
    sub_2331A0DF4(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_233457B24()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BankConnectService.completeConnectionAuthorization(for:with:fraudAssessment:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  type metadata accessor for BankConnectConsent();
  v6[16] = swift_task_alloc();
  v6[17] = type metadata accessor for BankConnectService.Message();
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233457BF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[18];
  v2 = v0[14];
  v4 = v0[12];
  v3 = v0[13];
  v5 = v0[11];
  v0[19] = *(_QWORD *)(v0[15] + 16);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256050970);
  v7 = v1 + v6[12];
  v8 = v6[16];
  v9 = v1 + v6[20];
  sub_2331684BC(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationSession);
  sub_2331684BC(v4, v7, type metadata accessor for BankConnectAuthorizationPayload);
  *(_QWORD *)(v1 + v8) = v3;
  sub_2331684BC(v2, v9, (uint64_t (*)(_QWORD))type metadata accessor for BankConnectAuthorizationConfiguration);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_233457CD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[19];
  v0[7] = v0[16];
  v0[2] = v0;
  v0[3] = sub_233457D3C;
  v2 = swift_continuation_init();
  sub_233298BE0(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_233457D3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 160) = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 144);
    sub_233193A5C(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 80));
    sub_2331A0DF4(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_233457DE4()
{
  uint64_t v0;

  sub_2331A0DF4(*(_QWORD *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233457E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2331676FC;
  return BankConnectService.completeConnectionAuthorization(forSession:withAuthorizationPayload:fraudAssessment:)(a1, a2, a3, a4);
}

uint64_t sub_233457EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23318C26C;
  return BankConnectService.completeConnectionAuthorization(for:with:fraudAssessment:configuration:)(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of BankConnectConnectionAuthorizationCompleting.completeConnectionAuthorization(forSession:withAuthorizationPayload:fraudAssessment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_2331676FC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of BankConnectConnectionAuthorizationCompleting.completeConnectionAuthorization(for:with:fraudAssessment:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 16)
                                                                                              + *(_QWORD *)(a7 + 16));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23318C26C;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t BankConnectConsent.init(id:consentID:authorizedAt:authorizedUntil:backgroundRefreshLastConfirmedAt:refreshSequenceNumber:consentToken:consentStatus:lastUpdatedAt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12)
{
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char v27;
  void (*v30)(uint64_t, uint64_t, uint64_t);

  v27 = *a11;
  v18 = (int *)type metadata accessor for BankConnectConsent();
  v19 = a9 + v18[8];
  v20 = sub_23361D634();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
  v22 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (_QWORD *)(a9 + v18[5]);
  *v23 = a2;
  v23[1] = a3;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
  v30(a9 + v18[6], a4, v20);
  v30(a9 + v18[7], a5, v20);
  sub_23318C8A8(a6, v19);
  *(_QWORD *)(a9 + v18[9]) = a7;
  v24 = (_QWORD *)(a9 + v18[10]);
  *v24 = a8;
  v24[1] = a10;
  *(_BYTE *)(a9 + v18[11]) = v27;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(a9 + v18[12], a12, v20);
}

uint64_t type metadata accessor for BankConnectConsent()
{
  uint64_t result;

  result = qword_256050A20;
  if (!qword_256050A20)
    return swift_getSingletonMetadata();
  return result;
}

void BankConnectConsent.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  char v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for BankConnectConsent();
  v8 = a2 + v7[8];
  v9 = sub_23361D634();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v11 = 1;
  v28 = v8;
  v10(v8, 1, 1, v9);
  v12 = objc_msgSend(a1, "id");
  sub_23361D67C();

  v13 = objc_msgSend(a1, sel_consentID);
  v14 = sub_23361E150();
  v16 = v15;

  v17 = (uint64_t *)(a2 + v7[5]);
  *v17 = v14;
  v17[1] = v16;
  v18 = objc_msgSend(a1, sel_authorizedAt);
  sub_23361D5EC();

  v19 = objc_msgSend(a1, sel_authorizedUntil);
  sub_23361D5EC();

  v20 = objc_msgSend(a1, sel_backgroundRefreshLastConfirmedAt);
  if (v20)
  {
    v21 = v20;
    sub_23361D5EC();

    v11 = 0;
  }
  v10((uint64_t)v6, v11, 1, v9);
  sub_23318C8A8((uint64_t)v6, v28);
  *(_QWORD *)(a2 + v7[9]) = objc_msgSend(a1, sel_refreshSequenceNumber);
  v22 = objc_msgSend(a1, sel_consentToken);
  v23 = sub_23361E150();
  v25 = v24;

  v26 = (uint64_t *)(a2 + v7[10]);
  *v26 = v23;
  v26[1] = v25;
  ManagedConsent.consentStatus.getter(&v29);
  *(_BYTE *)(a2 + v7[11]) = v29;
  v27 = objc_msgSend(a1, sel_lastUpdatedAt);
  sub_23361D5EC();

}

{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  v3 = (int *)type metadata accessor for BankConnectConsent();
  v4 = a2 + v3[8];
  v5 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_23361D694();
  v6 = objc_msgSend(a1, sel_consentID);
  v7 = sub_23361E150();
  v9 = v8;

  v10 = (uint64_t *)(a2 + v3[5]);
  *v10 = v7;
  v10[1] = v9;
  v11 = objc_msgSend(a1, sel_authorizedAt);
  sub_23361D5EC();

  v12 = objc_msgSend(a1, sel_authorizedUntil);
  sub_23361D5EC();

  *(_QWORD *)(a2 + v3[9]) = objc_msgSend(a1, sel_refreshSequenceNumber);
  v13 = objc_msgSend(a1, sel_consentToken);
  v14 = sub_23361E150();
  v16 = v15;

  v17 = (uint64_t *)(a2 + v3[10]);
  *v17 = v14;
  v17[1] = v16;
  *(_BYTE *)(a2 + v3[11]) = 0;
  sub_23361D5F8();

}

uint64_t BankConnectConsent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t BankConnectConsent.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D6A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*BankConnectConsent.id.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectConsent.consentID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectConsent() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectConsent.consentID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BankConnectConsent() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BankConnectConsent.consentID.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.authorizedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankConnectConsent.authorizedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 24);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankConnectConsent.authorizedAt.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.authorizedUntil.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 28);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankConnectConsent.authorizedUntil.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 28);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankConnectConsent.authorizedUntil.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.backgroundRefreshLastConfirmedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 32);
  return sub_23319F164(v3, a1);
}

uint64_t BankConnectConsent.backgroundRefreshLastConfirmedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 32);
  return sub_23318C8A8(a1, v3);
}

uint64_t (*BankConnectConsent.backgroundRefreshLastConfirmedAt.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.refreshSequenceNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectConsent() + 36));
}

uint64_t BankConnectConsent.refreshSequenceNumber.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BankConnectConsent();
  *(_QWORD *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*BankConnectConsent.refreshSequenceNumber.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.consentToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectConsent() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectConsent.consentToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BankConnectConsent() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BankConnectConsent.consentToken.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.consentStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BankConnectConsent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t BankConnectConsent.consentStatus.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for BankConnectConsent();
  *(_BYTE *)(v1 + *(int *)(result + 44)) = v2;
  return result;
}

uint64_t (*BankConnectConsent.consentStatus.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t BankConnectConsent.lastUpdatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 48);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BankConnectConsent.lastUpdatedAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BankConnectConsent() + 48);
  v4 = sub_23361D634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BankConnectConsent.lastUpdatedAt.modify())(_QWORD)
{
  type metadata accessor for BankConnectConsent();
  return nullsub_1;
}

uint64_t sub_233458B68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233458B90 + 4 * byte_23364C740[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_233458B90()
{
  return 0x49746E65736E6F63;
}

uint64_t sub_233458BAC()
{
  return 0x7A69726F68747561;
}

unint64_t sub_233458BE0()
{
  return 0xD000000000000020;
}

unint64_t sub_233458C00()
{
  return 0xD000000000000015;
}

uint64_t sub_233458C1C()
{
  return 0x54746E65736E6F63;
}

uint64_t sub_233458C3C()
{
  return 0x53746E65736E6F63;
}

uint64_t sub_233458C60()
{
  return 0x616470557473616CLL;
}

uint64_t sub_233458C84()
{
  unsigned __int8 *v0;

  return sub_233458B68(*v0);
}

uint64_t sub_233458C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23345A8F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233458CB0()
{
  sub_233459B00();
  return sub_23361F428();
}

uint64_t sub_233458CD8()
{
  sub_233459B00();
  return sub_23361F434();
}

uint64_t BankConnectConsent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560509A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233459B00();
  sub_23361F410();
  v11[31] = 0;
  sub_23361D6A0();
  sub_233167C58(&qword_25604D960, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23361F17C();
  if (!v2)
  {
    v9 = type metadata accessor for BankConnectConsent();
    v11[30] = 1;
    sub_23361F140();
    v11[29] = 2;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F17C();
    v11[28] = 3;
    sub_23361F17C();
    v11[27] = 4;
    sub_23361F110();
    v11[26] = 5;
    sub_23361F194();
    v11[25] = 6;
    sub_23361F140();
    v11[24] = *(_BYTE *)(v3 + *(int *)(v9 + 44));
    v11[15] = 7;
    sub_233459B44();
    sub_23361F17C();
    v11[14] = 8;
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BankConnectConsent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;

  v48 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361D634();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)&v45 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - v11;
  v13 = sub_23361D6A0();
  v55 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560509B8);
  v15 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for BankConnectConsent();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v58 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = (int *)v19;
  v21 = &v58[*(int *)(v19 + 32)];
  v56 = v6;
  v22 = *(void (**)(void))(v6 + 56);
  v23 = (uint64_t)v21;
  v61 = v5;
  v22();
  v24 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_233459B00();
  v54 = v17;
  v25 = v60;
  sub_23361F3EC();
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
    return sub_233168608(v23, (uint64_t *)&unk_254247DA0);
  }
  else
  {
    v26 = v12;
    v27 = v51;
    v47 = v15;
    v71 = 0;
    sub_233167C58(&qword_256042350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v28 = v52;
    sub_23361F068();
    v60 = v23;
    v29 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v58, v28, v13);
    v70 = 1;
    v30 = sub_23361F02C();
    v52 = (char *)v13;
    v31 = v59;
    v32 = (uint64_t *)(v29 + v59[5]);
    *v32 = v30;
    v32[1] = v33;
    v69 = 2;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v34 = v26;
    v35 = v61;
    sub_23361F068();
    v36 = v29 + v31[6];
    v46 = *(void (**)(uint64_t, char *, uint64_t))(v56 + 32);
    v46(v36, v34, v35);
    v68 = 3;
    sub_23361F068();
    v37 = v46;
    v46(v29 + v31[7], v27, v35);
    v67 = 4;
    v38 = (uint64_t)v50;
    sub_23361EFFC();
    v39 = (uint64_t)v57;
    sub_23318C8A8(v38, v60);
    v66 = 5;
    *(_QWORD *)(v29 + v31[9]) = sub_23361F080();
    v65 = 6;
    v40 = sub_23361F02C();
    v41 = (uint64_t *)(v29 + v31[10]);
    *v41 = v40;
    v41[1] = v42;
    v63 = 7;
    sub_233459B88();
    sub_23361F068();
    *(_BYTE *)(v29 + v31[11]) = v64;
    v62 = 8;
    v43 = v49;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v54, v53);
    v37(v29 + v31[12], v43, v35);
    sub_2331925D8(v29, v48);
    __swift_destroy_boxed_opaque_existential_0(v39);
    return sub_23330B904(v29);
  }
}

uint64_t sub_2334596F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BankConnectConsent.init(from:)(a1, a2);
}

uint64_t sub_233459708(_QWORD *a1)
{
  return BankConnectConsent.encode(to:)(a1);
}

uint64_t _s10FinanceKit18BankConnectConsentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v26;
  char v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  if ((sub_23361D670() & 1) == 0)
    goto LABEL_21;
  v44 = v4;
  v20 = type metadata accessor for BankConnectConsent();
  v21 = *(int *)(v20 + 20);
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  if (v22 != *v24 || v23 != v24[1])
  {
    v26 = sub_23361F224();
    v27 = 0;
    if ((v26 & 1) == 0)
      return v27 & 1;
  }
  if ((sub_23361D5E0() & 1) == 0 || (sub_23361D5E0() & 1) == 0)
    goto LABEL_21;
  sub_23319F164(a1 + *(int *)(v20 + 32), (uint64_t)v19);
  v42 = v20;
  sub_23319F164(a2 + *(int *)(v20 + 32), (uint64_t)v17);
  v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23319F164((uint64_t)v19, (uint64_t)v10);
  v43 = v28;
  sub_23319F164((uint64_t)v17, v28);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v30 = v44;
  if (v29((uint64_t)v10, 1, v44) == 1)
  {
    sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
    if (v29(v43, 1, v30) == 1)
    {
      sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
      goto LABEL_16;
    }
LABEL_14:
    sub_233168608((uint64_t)v10, &qword_256042DA0);
    v27 = 0;
    return v27 & 1;
  }
  sub_23319F164((uint64_t)v10, (uint64_t)v14);
  if (v29(v43, 1, v30) == 1)
  {
    sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
    sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v30);
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v43, v30);
  sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v31 = sub_23361E108();
  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v7, v30);
  sub_233168608((uint64_t)v17, (uint64_t *)&unk_254247DA0);
  sub_233168608((uint64_t)v19, (uint64_t *)&unk_254247DA0);
  v32(v14, v30);
  sub_233168608((uint64_t)v10, (uint64_t *)&unk_254247DA0);
  if ((v31 & 1) == 0)
  {
LABEL_21:
    v27 = 0;
    return v27 & 1;
  }
LABEL_16:
  v33 = v42;
  if (*(_QWORD *)(a1 + *(int *)(v42 + 36)) != *(_QWORD *)(a2 + *(int *)(v42 + 36)))
    goto LABEL_21;
  v34 = *(int *)(v42 + 40);
  v35 = *(_QWORD *)(a1 + v34);
  v36 = *(_QWORD *)(a1 + v34 + 8);
  v37 = (_QWORD *)(a2 + v34);
  if (v35 == *v37 && v36 == v37[1] || (v38 = sub_23361F224(), v33 = v42, v39 = v38, v27 = 0, (v39 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(v33 + 44)) == *(unsigned __int8 *)(a2 + *(int *)(v33 + 44)))
    {
      v27 = sub_23361D5E0();
      return v27 & 1;
    }
    goto LABEL_21;
  }
  return v27 & 1;
}

unint64_t sub_233459B00()
{
  unint64_t result;

  result = qword_2560509A8;
  if (!qword_2560509A8)
  {
    result = MEMORY[0x234934494](&unk_23364C95C, &type metadata for BankConnectConsent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560509A8);
  }
  return result;
}

unint64_t sub_233459B44()
{
  unint64_t result;

  result = qword_2560509B0;
  if (!qword_2560509B0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectConsentStatus, &type metadata for BankConnectConsentStatus);
    atomic_store(result, (unint64_t *)&qword_2560509B0);
  }
  return result;
}

unint64_t sub_233459B88()
{
  unint64_t result;

  result = qword_2560509C0;
  if (!qword_2560509C0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for BankConnectConsentStatus, &type metadata for BankConnectConsentStatus);
    atomic_store(result, (unint64_t *)&qword_2560509C0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for BankConnectConsent(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D6A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = &a1[v8];
    v11 = &a2[v8];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = &a1[v9];
    v14 = &a2[v9];
    v15 = sub_23361D634();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v15);
    v17(&a1[a3[7]], &a2[a3[7]], v15);
    v18 = a3[8];
    v19 = &a1[v18];
    v20 = &a2[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&a2[v18], 1, v15))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    v23 = a3[10];
    *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    v28 = &a1[v27];
    v29 = &a2[v27];
    swift_bridgeObjectRetain();
    v17(v28, v29, v15);
  }
  return a1;
}

uint64_t destroy for BankConnectConsent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[6];
  v6 = sub_23361D634();
  v7 = *(_QWORD *)(v6 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v5, v6);
  v10(a1 + a2[7], v6);
  v8 = a1 + a2[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    v10(v8, v6);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + a2[12], v6);
}

uint64_t initializeWithCopy for BankConnectConsent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void *, const void *, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (void *)(a1 + v8);
  v13 = (const void *)(a2 + v8);
  v14 = sub_23361D634();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v16(v12, v13, v14);
  v16((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v14);
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a2 + v17, 1, v14))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  v21 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  swift_bridgeObjectRetain();
  v16(v26, v27, v14);
  return a1;
}

uint64_t assignWithCopy for BankConnectConsent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v15((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v13);
  v16 = a3[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19((const void *)(a1 + v16), 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v15((void *)(a1 + a3[12]), (const void *)(a2 + a3[12]), v13);
  return a1;
}

uint64_t initializeWithTake for BankConnectConsent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D634();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v12((void *)(a1 + v18), (const void *)(a2 + v18), v10);
  return a1;
}

uint64_t assignWithTake for BankConnectConsent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, const void *, uint64_t);
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(const void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_23361D6A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23361D634();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v17((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v15);
  v18 = a3[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21((const void *)(a1 + v18), 1, v15);
  v23 = v21(v20, 1, v15);
  if (!v22)
  {
    if (!v23)
    {
      v17(v19, v20, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v19, v20, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
LABEL_7:
  v25 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v17((void *)(a1 + v30), (const void *)(a2 + v30), v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for BankConnectConsent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23345A4D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23361D6A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[8];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectConsent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23345A5B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_23361D6A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23345A688()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23361D6A0();
  if (v0 <= 0x3F)
  {
    sub_23361D634();
    if (v1 <= 0x3F)
    {
      sub_2331FE95C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t storeEnumTagSinglePayload for BankConnectConsent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23345A7A0 + 4 * byte_23364C74E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23345A7D4 + 4 * byte_23364C749[v4]))();
}

uint64_t sub_23345A7D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23345A7DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23345A7E4);
  return result;
}

uint64_t sub_23345A7F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23345A7F8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23345A7FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23345A804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectConsent.CodingKeys()
{
  return &type metadata for BankConnectConsent.CodingKeys;
}

unint64_t sub_23345A824()
{
  unint64_t result;

  result = qword_256050A78;
  if (!qword_256050A78)
  {
    result = MEMORY[0x234934494](&unk_23364C934, &type metadata for BankConnectConsent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050A78);
  }
  return result;
}

unint64_t sub_23345A86C()
{
  unint64_t result;

  result = qword_256050A80;
  if (!qword_256050A80)
  {
    result = MEMORY[0x234934494](&unk_23364C8A4, &type metadata for BankConnectConsent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050A80);
  }
  return result;
}

unint64_t sub_23345A8B4()
{
  unint64_t result;

  result = qword_256050A88;
  if (!qword_256050A88)
  {
    result = MEMORY[0x234934494](&unk_23364C8CC, &type metadata for BankConnectConsent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050A88);
  }
  return result;
}

uint64_t sub_23345A8F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E65736E6F63 && a2 == 0xE900000000000044 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEC00000074416465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEF6C69746E556465 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000233673930 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233673900 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x54746E65736E6F63 && a2 == 0xEC0000006E656B6FLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x53746E65736E6F63 && a2 == 0xED00007375746174 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x616470557473616CLL && a2 == 0xED00007441646574)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void sub_23345AD18(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_institutionID);
  v4 = sub_23361E150();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_23345AD6C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_etag);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23361E150();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_23345ADD0(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_23361E12C();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setEtag_);

}

void sub_23345AE2C(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_lastRequestDate);
  sub_23361D5EC();

}

id ManagedInstitutionAsset.__allocating_init(institutionID:etag:data:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7)
{
  objc_class *v7;
  objc_class *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v23;
  unint64_t v24;

  v8 = v7;
  v24 = a6;
  v12 = sub_23361D634();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone(v8), sel_initWithContext_, a7);
  v17 = (void *)sub_23361E12C();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setInstitutionID_, v17);

  if (a4)
  {
    v18 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v16, sel_setEtag_, v18);

  v19 = v24;
  v20 = (void *)sub_23361D3AC();
  objc_msgSend(v16, sel_setData_, v20);

  sub_23361D5F8();
  v21 = (void *)sub_23361D5B0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v16, sel_setLastRequestDate_, v21);

  sub_23316BEA4(a5, v19);
  return v16;
}

id ManagedInstitutionAsset.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInstitutionAsset.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedInstitutionAsset.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static ManagedInstitutionAsset.existingAsset(withInstitutionID:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t result;
  unint64_t v11;
  id v12;
  objc_super v13;

  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit23ManagedInstitutionAsset;
  v7 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  result = sub_23361E984();
  if (v3)
  {

    return a3;
  }
  v11 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a3 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_9;
  }
  else
  {
    a3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a3)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a3;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    a3 = (uint64_t)v12;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void static ManagedInstitutionAsset.update(managedInstitutionAsset:etag:data:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  if (a3)
    v4 = (void *)sub_23361E12C();
  else
    v4 = 0;
  objc_msgSend(a1, sel_setEtag_, v4);

  v5 = (id)sub_23361D3AC();
  objc_msgSend(a1, sel_setData_, v5);

}

void static ManagedInstitutionAsset.deleteAsset(institutionID:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  objc_super v15;

  v15.receiver = (id)swift_getObjCClassFromMetadata();
  v15.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit23ManagedInstitutionAsset;
  v7 = objc_msgSendSuper2(&v15, sel_fetchRequest);
  sub_2331E28A0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_233623D60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 64) = sub_2331683F0();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_23361E6B4();
  objc_msgSend(v7, sel_setPredicate_, v9);

  objc_msgSend(v7, sel_setIncludesPropertyValues_, 0);
  v10 = sub_23361E984();
  if (v3)
  {

    return;
  }
  v11 = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_5;
LABEL_10:

    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x234933120](0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    v13 = v12;
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_deleteObject_, v13);

    return;
  }
  __break(1u);
}

void sub_23345B5A8(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCF9E0], (SEL *)&selRef_setInstitutionID_);
}

char *keypath_get_selector_etag()
{
  return sel_etag;
}

void sub_23345B5D4(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCDCA0], (SEL *)&selRef_setData_);
}

char *keypath_get_selector_lastRequestDate()
{
  return sel_lastRequestDate;
}

void sub_23345B5F8(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setLastRequestDate_, v3);

}

uint64_t type metadata accessor for ManagedInstitutionAsset()
{
  return objc_opt_self();
}

uint64_t sub_23345B660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v2 = sub_23361D634();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v21 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v21 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  Date.advancedByDays(_:)(2, (uint64_t)&v21 - v13);
  Date.advancedByDays(_:)(-3, (uint64_t)v12);
  sub_2331B19CC();
  if ((sub_23361E0E4() & 1) != 0)
  {
    v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v12, v2);
    v15(v14, v2);
    v16 = sub_23361CB84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v18(v9, v14, v2);
    v18(v6, v12, v2);
    sub_23361CB54();
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v12, v2);
    v19(v14, v2);
    v20 = sub_23361CB84();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
  }
}

uint64_t static FinanceStore.shared.getter()
{
  if (qword_254244AD0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_23345B860()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_254246690);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FinanceStore();
  v3 = swift_allocObject();
  *v2 = 2;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246718);
  swift_allocObject();
  *(_QWORD *)(v3 + 24) = sub_233462E70((uint64_t)v2, 0, 0, qword_254246690);
  type metadata accessor for FinanceDataStore();
  swift_allocObject();
  result = sub_2332A1534(0);
  *(_QWORD *)(v3 + 16) = result;
  off_254245198 = (_UNKNOWN *)v3;
  return result;
}

uint64_t FinanceStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t result;
  _QWORD v7[6];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(NSObject **)(v1 + 16);
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = v1;
  v3[3] = 0xD000000000000018;
  v3[4] = 0x80000002336777B0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_2334630AC;
  *(_QWORD *)(v4 + 24) = v3;
  v7[4] = sub_233167E10;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2332714C0;
  v7[3] = &block_descriptor_16;
  v5 = _Block_copy(v7);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
    return v0;
  }
  return result;
}

uint64_t FinanceStore.__deallocating_deinit()
{
  FinanceStore.deinit();
  return swift_deallocClassInstance();
}

void FinanceStore.Reply.Failure.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unsigned __int8 v12;

  v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  v5 = swift_dynamicCast();
  if ((v5 & 1) != 0)
  {

    v6 = 0;
    v7 = 0;
    v8 = v12;
  }
  else
  {
    v9 = (void *)sub_23361D1A8();
    v10 = objc_msgSend(v9, sel_domain);
    v8 = sub_23361E150();
    v6 = v11;

    v7 = objc_msgSend(v9, sel_code);
  }
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v5 ^ 1;
}

uint64_t FinanceStore.Reply.Failure.error.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t result;
  _BYTE *v9;

  v1 = *(_QWORD *)v0;
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v4 = v0 + 8;
    v2 = *(_QWORD *)(v0 + 8);
    v3 = *(_QWORD *)(v4 + 8);
    v5 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    swift_bridgeObjectRetain();
    v6 = (void *)sub_23361E12C();
    sub_23329DAD0(v1, v2, v3, 1);
    v7 = objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, v3, 0);

    return (uint64_t)v7;
  }
  else
  {
    sub_23316853C();
    result = swift_allocError();
    *v9 = v1;
  }
  return result;
}

BOOL static FinanceStore.Reply.Failure.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v12;
  _BOOL8 result;
  int v14;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  if ((v5 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v10 = *(_QWORD *)a1;
      if (v2 == v6 && v3 == v7)
      {
        sub_2334630E0(v10, v3, v8, 1);
        sub_2334630E0(v2, v3, v4, 1);
        sub_23329DAD0(v2, v3, v4, 1);
        sub_23329DAD0(v2, v3, v8, 1);
      }
      else
      {
        v12 = sub_23361F224();
        sub_2334630E0(v6, v7, v8, 1);
        sub_2334630E0(v2, v3, v4, 1);
        sub_23329DAD0(v2, v3, v4, 1);
        sub_23329DAD0(v6, v7, v8, 1);
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
      return v4 == v8;
    }
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
  {
LABEL_14:
    sub_2334630E0(v6, v7, v8, v9);
    sub_23329DAD0(v2, v3, v4, v5);
    sub_23329DAD0(v6, v7, v8, v9);
    return 0;
  }
  v14 = *(_QWORD *)a2;
  sub_23329DAD0(*(_QWORD *)a1, v3, v4, 0);
  sub_23329DAD0(v6, v7, v8, 0);
  switch((char)v2)
  {
    case 3:
      if (v14 != 3)
        return 0;
      break;
    case 4:
      if (v14 != 4)
        return 0;
      break;
    case 5:
      if (v14 != 5)
        return 0;
      break;
    case 6:
      if (v14 != 6)
        return 0;
      break;
    default:
      if ((v14 - 3) < 4 || (v6 ^ v2) != 0)
        return 0;
      break;
  }
  return 1;
}

BOOL sub_23345BE9C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23345BEAC()
{
  return sub_23361F35C();
}

uint64_t sub_23345BED0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4565636E616E6966 && a2 == 0xEC000000726F7272;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727245736ELL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23345BFD8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727245736ELL;
  else
    return 0x4565636E616E6966;
}

uint64_t sub_23345C018(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23345C10C()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_23345C150(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646F43726F727265;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_23345C188(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_23345C338(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23345BE9C);
}

uint64_t sub_23345C194()
{
  return sub_23345C10C();
}

uint64_t sub_23345C1B8()
{
  return sub_23345BEAC();
}

uint64_t sub_23345C1CC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_23345C360(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_23345BEAC);
}

uint64_t sub_23345C1D8()
{
  char *v0;

  return sub_23345BFD8(*v0);
}

uint64_t sub_23345C1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23345BED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345C21C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_233469A24();
  *a1 = result;
  return result;
}

uint64_t sub_23345C24C(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ECF8, a1);
  return sub_23361F428();
}

uint64_t sub_23345C280(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ECF8, a1);
  return sub_23361F434();
}

uint64_t sub_23345C2B8@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23345D2AC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_2331783F0, a2);
}

uint64_t sub_23345C2C4(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ED48, a1);
  return sub_23361F428();
}

uint64_t sub_23345C2F8(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ED48, a1);
  return sub_23361F434();
}

uint64_t sub_23345C32C(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_23345C338(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23346AA24);
}

uint64_t sub_23345C338(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_23345C354(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_23345C360(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_23346AA18);
}

uint64_t sub_23345C360(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_23361F350();
  a4(v8, *v4, a2[2], a2[3], a2[4]);
  return sub_23361F3A4();
}

uint64_t sub_23345C3B4()
{
  char *v0;

  return sub_23345C150(*v0);
}

uint64_t sub_23345C3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23345C018(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345C3F8(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ED98, a1);
  return sub_23361F428();
}

uint64_t sub_23345C42C(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ED98, a1);
  return sub_23361F434();
}

uint64_t FinanceStore.Reply.Failure.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = type metadata accessor for FinanceStore.Reply.Failure.NsErrorCodingKeys(255, v4, v5, v6);
  v29 = MEMORY[0x234934494](&unk_23364ED98, v7);
  v30 = v7;
  v32 = sub_23361F1AC();
  v26 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)&v23 - v8;
  v9 = type metadata accessor for FinanceStore.Reply.Failure.FinanceErrorCodingKeys(255, v4, v5, v6);
  v25 = MEMORY[0x234934494](&unk_23364ED48, v9);
  v28 = sub_23361F1AC();
  v24 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v23 - v10;
  v11 = type metadata accessor for FinanceStore.Reply.Failure.CodingKeys(255, v4, v5, v6);
  MEMORY[0x234934494](&unk_23364ECF8, v11);
  v33 = sub_23361F1AC();
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v13 = (char *)&v23 - v12;
  v34 = *v2;
  v23 = v2[1];
  LOBYTE(v4) = *((_BYTE *)v2 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F410();
  if ((v4 & 1) != 0)
  {
    v14 = v26;
    v41 = 1;
    v15 = v31;
    v16 = v33;
    sub_23361F0C8();
    v40 = 0;
    v17 = v35;
    v18 = v32;
    sub_23361F140();
    if (!v17)
    {
      v39 = 1;
      sub_23361F164();
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v18);
  }
  else
  {
    v19 = v24;
    v38 = 0;
    v20 = v27;
    v16 = v33;
    sub_23361F0C8();
    v37 = v34;
    sub_233463114();
    v21 = v28;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v13, v16);
}

uint64_t FinanceStore.Reply.Failure.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;

  v54 = a5;
  v9 = type metadata accessor for FinanceStore.Reply.Failure.NsErrorCodingKeys(255, a2, a3, a4);
  v61 = MEMORY[0x234934494](&unk_23364ED98, v9);
  v62 = v9;
  v58 = sub_23361F0BC();
  v55 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v63 = (char *)&v50 - v10;
  v11 = type metadata accessor for FinanceStore.Reply.Failure.FinanceErrorCodingKeys(255, a2, a3, a4);
  v59 = MEMORY[0x234934494](&unk_23364ED48, v11);
  v12 = sub_23361F0BC();
  v56 = *(_QWORD *)(v12 - 8);
  v57 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)&v50 - v13;
  v64 = a4;
  v65 = a3;
  v14 = type metadata accessor for FinanceStore.Reply.Failure.CodingKeys(255, a2, a3, a4);
  MEMORY[0x234934494](&unk_23364ECF8, v14);
  v15 = sub_23361F0BC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = *(_QWORD *)(a1 + 24);
  v66 = a1;
  v18 = (_QWORD *)a1;
  v20 = (char *)&v50 - v19;
  __swift_project_boxed_opaque_existential_1(v18, v17);
  v21 = v71;
  sub_23361F3EC();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_0(v66);
  v51 = v11;
  v22 = v65;
  v53 = v16;
  v71 = v15;
  v52 = v20;
  *(_QWORD *)&v67 = sub_23361F098();
  v23 = sub_23361E45C();
  MEMORY[0x234934494](MEMORY[0x24BEE12C8], v23);
  *(_QWORD *)&v69 = sub_23361EC54();
  *((_QWORD *)&v69 + 1) = v24;
  *(_QWORD *)&v70 = v25;
  *((_QWORD *)&v70 + 1) = v26;
  v27 = sub_23361EC48();
  MEMORY[0x234934494](MEMORY[0x24BEE2190], v27);
  sub_23361E660();
  v28 = v67;
  if (v67 == 2 || (v50 = v69, v67 = v69, v68 = v70, (sub_23361E66C() & 1) == 0))
  {
    v32 = sub_23361EE10();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v34 = type metadata accessor for FinanceStore.Reply.Failure(0, a2, v22, v64);
    v35 = v71;
    v36 = v52;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v35);
    return __swift_destroy_boxed_opaque_existential_0(v66);
  }
  if ((v28 & 1) != 0)
  {
    LOBYTE(v67) = 1;
    v29 = v63;
    v30 = v71;
    v31 = v52;
    sub_23361EFA8();
    LOBYTE(v67) = 0;
    v41 = v58;
    v42 = v29;
    v44 = sub_23361F02C();
    v46 = v45;
    LOBYTE(v67) = 1;
    v47 = sub_23361F050();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v41);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v30);
  }
  else
  {
    LOBYTE(v67) = 0;
    v38 = v60;
    v39 = v71;
    v40 = v52;
    sub_23361EFA8();
    sub_233463164();
    v43 = v57;
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v43);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v39);
    v46 = 0;
    v47 = 0;
    v44 = v67;
  }
  v48 = v66;
  v49 = v54;
  *v54 = v44;
  v49[1] = v46;
  v49[2] = v47;
  *((_BYTE *)v49 + 24) = v28 & 1;
  return __swift_destroy_boxed_opaque_existential_0(v48);
}

BOOL sub_23345CD80(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23345CD90()
{
  return sub_23361F35C();
}

uint64_t sub_23345CDB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E6968746F6ELL && a2 == 0xE700000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736563637573 && a2 == 0xE700000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23345CF08()
{
  sub_23361F350();
  sub_23361F35C();
  return sub_23361F3A4();
}

uint64_t sub_23345CF4C(char a1)
{
  return *(_QWORD *)&aNothing_0[8 * a1];
}

uint64_t sub_23345CF64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23361F224();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23345CFD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return FinanceStore.Reply.Failure.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_23345CFF0(_QWORD *a1, _QWORD *a2)
{
  return FinanceStore.Reply.Failure.encode(to:)(a1, a2);
}

BOOL sub_23345D008(char *a1, char *a2)
{
  return sub_23345CD80(*a1, *a2);
}

uint64_t sub_23345D020()
{
  return sub_23345CF08();
}

uint64_t sub_23345D030()
{
  return sub_23345CD90();
}

uint64_t sub_23345D040()
{
  sub_23361F350();
  sub_23345CD90();
  return sub_23361F3A4();
}

uint64_t sub_23345D088()
{
  char *v0;

  return sub_23345CF4C(*v0);
}

uint64_t sub_23345D098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23345CDB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345D0C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_233469A2C();
  *a1 = result;
  return result;
}

uint64_t sub_23345D0F8(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364EBB8, a1);
  return sub_23361F428();
}

uint64_t sub_23345D12C(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364EBB8, a1);
  return sub_23361F434();
}

uint64_t sub_23345D160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23345CF64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23345D194(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ECA8, a1);
  return sub_23361F428();
}

uint64_t sub_23345D1C8(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364ECA8, a1);
  return sub_23361F434();
}

uint64_t sub_23345D1FC@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t result;

  v2 = sub_2331783F0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_23345D244(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364EC08, a1);
  return sub_23361F428();
}

uint64_t sub_23345D278(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364EC08, a1);
  return sub_23361F434();
}

uint64_t sub_23345D2AC@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23345D2E0(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364EC58, a1);
  return sub_23361F428();
}

uint64_t sub_23345D314(uint64_t a1)
{
  MEMORY[0x234934494](&unk_23364EC58, a1);
  return sub_23361F434();
}

uint64_t FinanceStore.Reply.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;

  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = type metadata accessor for FinanceStore.Reply.FailureCodingKeys(255, v4, v5, v6);
  v60 = MEMORY[0x234934494](&unk_23364ECA8, v7);
  v61 = v7;
  v8 = sub_23361F1AC();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v47 - v9;
  v10 = type metadata accessor for FinanceStore.Reply.SuccessCodingKeys(255, v4, v5, v6);
  v11 = MEMORY[0x234934494](&unk_23364EC58, v10);
  v55 = v10;
  v54 = v11;
  v59 = sub_23361F1AC();
  v53 = *(_QWORD *)(v59 - 8);
  v12 = MEMORY[0x24BDAC7A8](v59);
  v56 = (char *)&v47 - v13;
  v58 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FinanceStore.Reply.NothingCodingKeys(255, v4, v5, v6);
  v16 = MEMORY[0x234934494](&unk_23364EC08, v15);
  v52 = v15;
  v51 = v16;
  v50 = sub_23361F1AC();
  v49 = *(_QWORD *)(v50 - 8);
  v17 = MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)&v47 - v18;
  v19 = *(a2 - 1);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v6;
  v67 = v4;
  v63 = v5;
  v22 = type metadata accessor for FinanceStore.Reply.CodingKeys(255, v4, v5, v6);
  MEMORY[0x234934494](&unk_23364EBB8, v22);
  v71 = sub_23361F1AC();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v24 = (char *)&v47 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v70 = v24;
  sub_23361F410();
  (*(void (**)(char *, uint64_t, _QWORD *))(v19 + 16))(v21, v68, a2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v26 = *(_QWORD *)v21;
      v27 = *((_QWORD *)v21 + 1);
      v28 = *((_QWORD *)v21 + 2);
      v29 = v21[24];
      LOBYTE(v72) = 2;
      v30 = v62;
      v32 = v70;
      v31 = v71;
      sub_23361F0C8();
      v72 = v26;
      v73 = v27;
      v74 = v28;
      v75 = v29;
      v33 = type metadata accessor for FinanceStore.Reply.Failure(0, v67, v63, v66);
      MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.Reply<A>.Failure, v33);
      v34 = v65;
      sub_23361F17C();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v34);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v31);
      return sub_23329DAD0(v26, v27, v28, v29);
    }
    else
    {
      LOBYTE(v72) = 0;
      v44 = v48;
      v46 = v70;
      v45 = v71;
      sub_23361F0C8();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v46, v45);
    }
  }
  else
  {
    v36 = v53;
    v38 = v57;
    v37 = v58;
    v39 = v67;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v21, v67);
    LOBYTE(v72) = 1;
    v40 = v56;
    v42 = v70;
    v41 = v71;
    sub_23361F0C8();
    v43 = v59;
    sub_23361F17C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v43);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v42, v41);
  }
}

uint64_t FinanceStore.Reply.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  uint64_t v65;
  char v66;
  _OWORD *v67;
  __int128 v68;
  _OWORD *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;

  v89 = a5;
  v9 = type metadata accessor for FinanceStore.Reply.FailureCodingKeys(255, a2, a3, a4);
  v86 = MEMORY[0x234934494](&unk_23364ECA8, v9);
  v87 = v9;
  v78 = sub_23361F0BC();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v88 = (char *)&v68 - v10;
  v11 = type metadata accessor for FinanceStore.Reply.SuccessCodingKeys(255, a2, a3, a4);
  v12 = MEMORY[0x234934494](&unk_23364EC58, v11);
  v84 = v11;
  v83 = v12;
  v75 = sub_23361F0BC();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v85 = (char *)&v68 - v13;
  v14 = type metadata accessor for FinanceStore.Reply.NothingCodingKeys(255, a2, a3, a4);
  v15 = MEMORY[0x234934494](&unk_23364EC08, v14);
  v82 = v14;
  v81 = v15;
  v73 = sub_23361F0BC();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v80 = (char *)&v68 - v16;
  v17 = type metadata accessor for FinanceStore.Reply.CodingKeys(255, a2, a3, a4);
  MEMORY[0x234934494](&unk_23364EBB8, v17);
  v94 = sub_23361F0BC();
  v90 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v19 = (char *)&v68 - v18;
  v93 = a2;
  v79 = a3;
  v76 = a4;
  v91 = type metadata accessor for FinanceStore.Reply(0, a2, a3, a4);
  v20 = *(_QWORD *)(v91 - 8);
  v21 = MEMORY[0x24BDAC7A8](v91);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v68 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v68 - v27;
  v29 = a1;
  v30 = a1[3];
  v95 = v29;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v92 = v19;
  v31 = v100;
  sub_23361F3EC();
  if (!v31)
  {
    v70 = v26;
    v69 = v23;
    v100 = v20;
    v32 = v93;
    v71 = v28;
    v34 = v91;
    v33 = v92;
    *(_QWORD *)&v96 = sub_23361F098();
    v35 = sub_23361E45C();
    MEMORY[0x234934494](MEMORY[0x24BEE12C8], v35);
    *(_QWORD *)&v98 = sub_23361EC54();
    *((_QWORD *)&v98 + 1) = v36;
    *(_QWORD *)&v99 = v37;
    *((_QWORD *)&v99 + 1) = v38;
    v39 = sub_23361EC48();
    MEMORY[0x234934494](MEMORY[0x24BEE2190], v39);
    sub_23361E660();
    v40 = v96;
    if (v96 != 3)
    {
      v68 = v98;
      v96 = v98;
      v97 = v99;
      if ((sub_23361E66C() & 1) != 0)
      {
        if (v40)
        {
          if (v40 == 1)
          {
            LOBYTE(v96) = 1;
            v41 = v85;
            v42 = v33;
            v43 = v94;
            sub_23361EFA8();
            v44 = v89;
            v45 = v100;
            v57 = v75;
            sub_23361F068();
            (*(void (**)(char *, uint64_t))(v74 + 8))(v41, v57);
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v90 + 8))(v42, v43);
            v61 = v70;
            v62 = v34;
            swift_storeEnumTagMultiPayload();
            v63 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
            v64 = v71;
            v63(v71, v61, v34);
LABEL_12:
            v63(v44, v64, v62);
            return __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
          }
          LOBYTE(v96) = 2;
          v54 = v88;
          v55 = v94;
          sub_23361EFA8();
          v56 = v100;
          v58 = type metadata accessor for FinanceStore.Reply.Failure(0, v32, v79, v76);
          MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.Reply<A>.Failure, v58);
          v59 = v78;
          sub_23361F068();
          v60 = v90;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v59);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v55);
          v65 = v97;
          v66 = BYTE8(v97);
          v67 = v69;
          *v69 = v96;
          *((_QWORD *)v67 + 2) = v65;
          *((_BYTE *)v67 + 24) = v66;
          v62 = v34;
          swift_storeEnumTagMultiPayload();
          v63 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
          v64 = v71;
          v63(v71, (char *)v67, v34);
        }
        else
        {
          LOBYTE(v96) = 0;
          v52 = v80;
          v53 = v94;
          sub_23361EFA8();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v52, v73);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v90 + 8))(v33, v53);
          v64 = v71;
          v62 = v34;
          swift_storeEnumTagMultiPayload();
          v63 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
        }
        v44 = v89;
        goto LABEL_12;
      }
    }
    v46 = sub_23361EE10();
    swift_allocError();
    v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v48 = v34;
    v49 = v33;
    v50 = v94;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v48, *MEMORY[0x24BEE26D0], v46);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v49, v50);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
}

uint64_t sub_23345E060@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return FinanceStore.Reply.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_23345E080(_QWORD *a1, _QWORD *a2)
{
  return FinanceStore.Reply.encode(to:)(a1, a2);
}

uint64_t sub_23345E098(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23345E0D0 + 4 * byte_23364C9E4[a1]))(0xD000000000000010, 0x8000000233677810);
}

uint64_t sub_23345E27C()
{
  sub_23346517C();
  return sub_23361F428();
}

uint64_t sub_23345E2A4()
{
  sub_23346517C();
  return sub_23361F434();
}

uint64_t sub_23345E2CC()
{
  sub_233464FE4();
  return sub_23361F428();
}

uint64_t sub_23345E2F4()
{
  sub_233464FE4();
  return sub_23361F434();
}

uint64_t sub_23345E31C()
{
  sub_2334650B0();
  return sub_23361F428();
}

uint64_t sub_23345E344()
{
  sub_2334650B0();
  return sub_23361F434();
}

uint64_t sub_23345E36C()
{
  unsigned __int8 *v0;

  return sub_23345E098(*v0);
}

uint64_t sub_23345E374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233469A34(a1, a2);
  *a3 = result;
  return result;
}

void sub_23345E398(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_23345E3A4()
{
  sub_233464E90();
  return sub_23361F428();
}

uint64_t sub_23345E3CC()
{
  sub_233464E90();
  return sub_23361F434();
}

uint64_t sub_23345E3F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x4464657461647075;
  else
    return 12383;
}

uint64_t sub_23345E42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A268(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345E450()
{
  sub_2334654B4();
  return sub_23361F428();
}

uint64_t sub_23345E478()
{
  sub_2334654B4();
  return sub_23361F434();
}

unint64_t sub_23345E4A0()
{
  return 0xD000000000000015;
}

uint64_t sub_23345E4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A358(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23345E4E4()
{
  sub_233465028();
  return sub_23361F428();
}

uint64_t sub_23345E50C()
{
  sub_233465028();
  return sub_23361F434();
}

uint64_t sub_23345E534()
{
  sub_233465470();
  return sub_23361F428();
}

uint64_t sub_23345E55C()
{
  sub_233465470();
  return sub_23361F434();
}

uint64_t sub_23345E584()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23345E5B8 + 4 * byte_23364C9F9[*v0]))(0xD000000000000011, 0x8000000233669CD0);
}

uint64_t sub_23345E5B8()
{
  return 0x614E797469746E65;
}

uint64_t sub_23345E5D4()
{
  return 0x49746E756F636361;
}

uint64_t sub_23345E5F0(uint64_t a1)
{
  return a1 + 11;
}

uint64_t sub_23345E608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A3DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345E62C()
{
  sub_233464ED4();
  return sub_23361F428();
}

uint64_t sub_23345E654()
{
  sub_233464ED4();
  return sub_23361F434();
}

uint64_t sub_23345E67C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x614E797469746E65;
  if (*v0 != 1)
    v1 = 0xD00000000000001CLL;
  if (*v0)
    return v1;
  else
    return 12383;
}

uint64_t sub_23345E6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A5A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345E6F8()
{
  sub_233464F5C();
  return sub_23361F428();
}

uint64_t sub_23345E720()
{
  sub_233464F5C();
  return sub_23361F434();
}

uint64_t sub_23345E748()
{
  sub_23346506C();
  return sub_23361F428();
}

uint64_t sub_23345E770()
{
  sub_23346506C();
  return sub_23361F434();
}

uint64_t sub_23345E798()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6F6974706FLL;
  else
    return 0x724164656E676973;
}

uint64_t sub_23345E7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A6E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345E804()
{
  sub_233465314();
  return sub_23361F428();
}

uint64_t sub_23345E82C()
{
  sub_233465314();
  return sub_23361F434();
}

uint64_t sub_23345E854()
{
  sub_2334654F8();
  return sub_23361F428();
}

uint64_t sub_23345E87C()
{
  sub_2334654F8();
  return sub_23361F434();
}

uint64_t sub_23345E8A4()
{
  return 0x646E6957656D6974;
}

uint64_t sub_23345E8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x646E6957656D6974 && a2 == 0xEA0000000000776FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23345E960()
{
  sub_2334652D0();
  return sub_23361F428();
}

uint64_t sub_23345E988()
{
  sub_2334652D0();
  return sub_23361F434();
}

uint64_t sub_23345E9B0()
{
  sub_2334650F4();
  return sub_23361F428();
}

uint64_t sub_23345E9D8()
{
  sub_2334650F4();
  return sub_23361F434();
}

uint64_t sub_23345EA00()
{
  return 0x7079546863746566;
}

uint64_t sub_23345EA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7079546863746566 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23345EABC()
{
  sub_23346539C();
  return sub_23361F428();
}

uint64_t sub_23345EAE4()
{
  sub_23346539C();
  return sub_23361F434();
}

uint64_t sub_23345EB0C()
{
  sub_23346528C();
  return sub_23361F428();
}

uint64_t sub_23345EB34()
{
  sub_23346528C();
  return sub_23361F434();
}

uint64_t sub_23345EB5C()
{
  sub_233465580();
  return sub_23361F428();
}

uint64_t sub_23345EB84()
{
  sub_233465580();
  return sub_23361F434();
}

uint64_t sub_23345EBAC()
{
  sub_233464FA0();
  return sub_23361F428();
}

uint64_t sub_23345EBD4()
{
  sub_233464FA0();
  return sub_23361F434();
}

uint64_t sub_23345EBFC()
{
  return 0x724164656E676973;
}

uint64_t sub_23345EC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x724164656E676973 && a2 == 0xED00006576696863)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23345ECD8()
{
  sub_233465248();
  return sub_23361F428();
}

uint64_t sub_23345ED00()
{
  sub_233465248();
  return sub_23361F434();
}

uint64_t sub_23345ED28()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x65756C615677656ELL;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 12383;
}

uint64_t sub_23345ED7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A7FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345EDA0()
{
  sub_233465204();
  return sub_23361F428();
}

uint64_t sub_23345EDC8()
{
  sub_233465204();
  return sub_23361F434();
}

uint64_t sub_23345EDF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C62616E457369;
  else
    return 12383;
}

uint64_t sub_23345EE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23346A934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23345EE48()
{
  sub_2334651C0();
  return sub_23361F428();
}

uint64_t sub_23345EE70()
{
  sub_2334651C0();
  return sub_23361F434();
}

uint64_t sub_23345EE98()
{
  return 7827310;
}

uint64_t sub_23345EEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7827310 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23345EF2C()
{
  sub_233465138();
  return sub_23361F428();
}

uint64_t sub_23345EF54()
{
  sub_233465138();
  return sub_23361F434();
}

void FinanceStore.Message.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD v39[17];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;

  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467D8);
  v39[5] = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v89 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v3);
  v92 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467F0);
  v39[4] = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v87 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467C8);
  v84 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467B8);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v78 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467D0);
  v39[14] = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v83 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246800);
  v39[13] = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v77 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v75);
  v76 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467A0);
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v70 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246A70);
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v62 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467E8);
  v39[12] = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v68 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_23361D634();
  v67 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v65 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246788);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v58 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246808);
  v39[2] = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467E0);
  v39[3] = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v69 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246778);
  v39[11] = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v56 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246790);
  v39[10] = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467F8);
  v39[9] = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467C0);
  v39[1] = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v51 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246770);
  v39[7] = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246780);
  v39[6] = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246798);
  v39[8] = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v91 = (char *)v39 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v43 = (char *)v39 - v30;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467A8);
  v39[16] = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39[15] = (char *)v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542467B0);
  MEMORY[0x24BDAC7A8](v32);
  v33 = type metadata accessor for FinanceStore.Message();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246768);
  v94 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v37 = (char *)v39 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233464E90();
  v96 = v37;
  sub_23361F410();
  sub_2331684BC(v95, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  v38 = (char *)sub_23345F858 + 4 * word_23364C9FE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23345F858()
{
  char *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v0;
  *(_BYTE *)(v1 - 128) = 1;
  sub_2334654F8();
  v3 = *(_QWORD *)(v1 - 616);
  v5 = *(_QWORD *)(v1 - 144);
  v4 = *(_QWORD *)(v1 - 136);
  sub_23361F0C8();
  *(_BYTE *)(v1 - 128) = v2;
  sub_23346553C();
  v6 = *(_QWORD *)(v1 - 600);
  sub_23361F17C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 608) + 8))(v3, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v5, v4);
}

uint64_t FinanceStore.Message.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  _QWORD v73[30];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;

  v120 = a2;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246920);
  v73[14] = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v118 = (char *)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246938);
  v121 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v119 = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246910);
  v95 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v116 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246900);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v114 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246918);
  v73[25] = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v117 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246948);
  v73[24] = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v115 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468E8);
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v111 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246B18);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v109 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246930);
  v73[22] = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v112 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468D0);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v108 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246950);
  v73[13] = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v110 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246928);
  v73[23] = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v113 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468C0);
  v73[21] = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v107 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468D8);
  v73[20] = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v106 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246940);
  v73[19] = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v105 = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246908);
  v73[12] = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v123 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468B8);
  v73[17] = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v103 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468C8);
  v73[16] = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v102 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468E0);
  v73[18] = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v104 = (char *)v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468F0);
  v73[15] = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v101 = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468F8);
  v73[29] = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v100 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542468B0);
  v122 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v129 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for FinanceStore.Message();
  v25 = MEMORY[0x24BDAC7A8](v126);
  v73[11] = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v73[6] = (char *)v73 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v73[10] = (char *)v73 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v73[28] = (char *)v73 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v73[27] = (char *)v73 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v73[7] = (char *)v73 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v99 = (char *)v73 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v73[9] = (char *)v73 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v73[8] = (char *)v73 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v73[26] = (char *)v73 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)v73 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)v73 - v49;
  v51 = MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)v73 - v52;
  v54 = MEMORY[0x24BDAC7A8](v51);
  v56 = (char *)v73 - v55;
  v57 = MEMORY[0x24BDAC7A8](v54);
  v59 = (char *)v73 - v58;
  MEMORY[0x24BDAC7A8](v57);
  v61 = (char *)v73 - v60;
  v62 = a1[3];
  v127 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v62);
  sub_233464E90();
  v63 = v128;
  sub_23361F3EC();
  if (v63)
  {
    v64 = (uint64_t)v127;
  }
  else
  {
    v73[1] = v59;
    v73[2] = v53;
    v73[3] = v50;
    v73[0] = v47;
    v73[4] = v56;
    v128 = 0;
    v65 = v126;
    v73[5] = v61;
    v66 = v124;
    v67 = v129;
    v68 = sub_23361F098();
    if (*(_QWORD *)(v68 + 16) == 1)
      __asm { BR              X10 }
    v69 = sub_23361EE10();
    swift_allocError();
    v71 = v70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604CD30);
    *v71 = v65;
    sub_23361EFC0();
    sub_23361EDEC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v71, *MEMORY[0x24BEE26D0], v69);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v67, v66);
    v64 = (uint64_t)v127;
  }
  return __swift_destroy_boxed_opaque_existential_0(v64);
}

uint64_t sub_233462E3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FinanceStore.Message.init(from:)(a1, a2);
}

void sub_233462E50(_QWORD *a1)
{
  FinanceStore.Message.encode(to:)(a1);
}

uint64_t sub_233462E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_233462E70(a1, a2, a3, &qword_256043030);
}

uint64_t sub_233462E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v18 = a4;
  v19 = a2;
  v5 = v4;
  v20 = a3;
  v17 = a1;
  v6 = sub_23361E864();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23361E858();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23361DDFC();
  MEMORY[0x24BDAC7A8](v12);
  v16 = sub_233168668(0, qword_254245350);
  sub_23361DDF0();
  v21 = MEMORY[0x24BEE4AF8];
  sub_233167C58((unint64_t *)&unk_254245340, v11, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254245330);
  sub_2331B1A14(&qword_254245338, &qword_254245330, MEMORY[0x24BEE12C8]);
  sub_23361EC6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5750], v6);
  *(_QWORD *)(v4 + 16) = sub_23361E894();
  *(_QWORD *)(v4 + 24) = 0;
  sub_233168478(v17, v5 + *(_QWORD *)(*(_QWORD *)v5 + 120), v18);
  v13 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 128));
  v14 = v20;
  *v13 = v19;
  v13[1] = v14;
  return v4;
}

uint64_t sub_233463080()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2334630AC()
{
  uint64_t v0;

  return sub_2334631E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2334630C8()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_2334630E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t type metadata accessor for FinanceStore.Reply.Failure.NsErrorCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.Failure.NsErrorCodingKeys);
}

uint64_t type metadata accessor for FinanceStore.Reply.Failure.FinanceErrorCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.Failure.FinanceErrorCodingKeys);
}

uint64_t type metadata accessor for FinanceStore.Reply.Failure.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.Failure.CodingKeys);
}

unint64_t sub_233463114()
{
  unint64_t result;

  result = qword_256050A90;
  if (!qword_256050A90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceError, &type metadata for FinanceError);
    atomic_store(result, (unint64_t *)&qword_256050A90);
  }
  return result;
}

uint64_t type metadata accessor for FinanceStore.Reply.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.Failure);
}

unint64_t sub_233463164()
{
  unint64_t result;

  result = qword_256050A98;
  if (!qword_256050A98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceError, &type metadata for FinanceError);
    atomic_store(result, (unint64_t *)&qword_256050A98);
  }
  return result;
}

uint64_t type metadata accessor for FinanceStore.Reply.FailureCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.FailureCodingKeys);
}

uint64_t type metadata accessor for FinanceStore.Reply.SuccessCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.SuccessCodingKeys);
}

uint64_t type metadata accessor for FinanceStore.Reply.NothingCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.NothingCodingKeys);
}

uint64_t type metadata accessor for FinanceStore.Reply.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply.CodingKeys);
}

uint64_t type metadata accessor for FinanceStore.Reply(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceStore.Reply);
}

uint64_t sub_2334631E8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
  {
    swift_retain();
    sub_23361DBBC();
    swift_release();
  }
  *(_QWORD *)(a1 + 24) = 0;
  return swift_release();
}

void _s10FinanceKit0A5StoreC7MessageO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD v66[2];
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;

  v101 = a1;
  v102 = a2;
  v69 = sub_23361D6A0();
  v72 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v66[0] = (char *)v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(qword_256048D18);
  MEMORY[0x24BDAC7A8](v67);
  v68 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v88 = (char *)v66 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v89 = (char *)v66 - v9;
  v10 = type metadata accessor for BankCredential.ACH(0);
  MEMORY[0x24BDAC7A8](v10);
  v83 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E28);
  MEMORY[0x24BDAC7A8](v80);
  v81 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for BankCredential(0);
  MEMORY[0x24BDAC7A8](v13);
  v82 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for TimeWindow(0);
  MEMORY[0x24BDAC7A8](v70);
  v79 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23361D634();
  v99 = *(_QWORD *)(v16 - 8);
  v100 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v78 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v66[1] = (char *)v66 - v19;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  v20 = MEMORY[0x24BDAC7A8](v77);
  v76 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v73 = (char *)v66 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v75 = (char *)v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v86 = (char *)v66 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v87 = (char *)v66 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v74 = (char *)v66 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v84 = (char *)v66 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v85 = (char *)v66 - v34;
  v35 = type metadata accessor for FinanceStore.Message();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v97 = (char *)v66 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v95 = (char *)v66 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v93 = (char *)v66 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v98 = (char *)v66 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v96 = (char *)v66 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v92 = (char *)v66 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v91 = (char *)v66 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v90 = (char *)v66 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v94 = (char *)v66 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v58 = MEMORY[0x24BDAC7A8](v57);
  MEMORY[0x24BDAC7A8](v58);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E30);
  v60 = MEMORY[0x24BDAC7A8](v59);
  v62 = (char *)v66 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (uint64_t)&v62[*(int *)(v60 + 48)];
  sub_2331684BC(v101, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  v64 = v102;
  v102 = v63;
  sub_2331684BC(v64, v63, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  v103 = v62;
  v65 = (char *)sub_2334638DC + 4 * word_23364CA52[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_2334638DC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  BOOL v4;

  v2 = *(_QWORD *)(v1 - 176);
  sub_2331684BC(v2, (uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  v3 = *(unsigned __int8 **)(v1 - 184);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_233168608(v2, &qword_256050E30);
    return 0;
  }
  else
  {
    v4 = *v0 == *v3;
    sub_233168500(v2, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
  }
  return v4;
}

uint64_t type metadata accessor for FinanceStore.Message()
{
  uint64_t result;

  result = qword_254247BF8;
  if (!qword_254247BF8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_233464E90()
{
  unint64_t result;

  result = qword_254247A98;
  if (!qword_254247A98)
  {
    result = MEMORY[0x234934494](&unk_23364EB68, &type metadata for FinanceStore.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247A98);
  }
  return result;
}

unint64_t sub_233464ED4()
{
  unint64_t result;

  result = qword_256050AA0;
  if (!qword_256050AA0)
  {
    result = MEMORY[0x234934494](&unk_23364EB18, &type metadata for FinanceStore.Message.FetchHistoricalChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AA0);
  }
  return result;
}

unint64_t sub_233464F18()
{
  unint64_t result;

  result = qword_256050AA8;
  if (!qword_256050AA8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AuxiliaryEntityPredicateProvider, &type metadata for AuxiliaryEntityPredicateProvider);
    atomic_store(result, (unint64_t *)&qword_256050AA8);
  }
  return result;
}

unint64_t sub_233464F5C()
{
  unint64_t result;

  result = qword_256050AB0;
  if (!qword_256050AB0)
  {
    result = MEMORY[0x234934494](&unk_23364EAC8, &type metadata for FinanceStore.Message.FetchHistoricalTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AB0);
  }
  return result;
}

unint64_t sub_233464FA0()
{
  unint64_t result;

  result = qword_256050AC8;
  if (!qword_256050AC8)
  {
    result = MEMORY[0x234934494](&unk_23364EA78, &type metadata for FinanceStore.Message.RequestAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AC8);
  }
  return result;
}

unint64_t sub_233464FE4()
{
  unint64_t result;

  result = qword_256050AD0;
  if (!qword_256050AD0)
  {
    result = MEMORY[0x234934494](&unk_23364EA28, &type metadata for FinanceStore.Message.AuthorizationStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AD0);
  }
  return result;
}

unint64_t sub_233465028()
{
  unint64_t result;

  result = qword_256050AD8;
  if (!qword_256050AD8)
  {
    result = MEMORY[0x234934494](&unk_23364E9D8, &type metadata for FinanceStore.Message.DeleteBankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AD8);
  }
  return result;
}

unint64_t sub_23346506C()
{
  unint64_t result;

  result = qword_256050AE0;
  if (!qword_256050AE0)
  {
    result = MEMORY[0x234934494](&unk_23364E988, &type metadata for FinanceStore.Message.InsertOrUpdateBankCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AE0);
  }
  return result;
}

unint64_t sub_2334650B0()
{
  unint64_t result;

  result = qword_256050AF0;
  if (!qword_256050AF0)
  {
    result = MEMORY[0x234934494](&unk_23364E938, &type metadata for FinanceStore.Message.BankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AF0);
  }
  return result;
}

unint64_t sub_2334650F4()
{
  unint64_t result;

  result = qword_256050AF8;
  if (!qword_256050AF8)
  {
    result = MEMORY[0x234934494](&unk_23364E8E8, &type metadata for FinanceStore.Message.OrderCountForSignoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050AF8);
  }
  return result;
}

unint64_t sub_233465138()
{
  unint64_t result;

  result = qword_256050B00;
  if (!qword_256050B00)
  {
    result = MEMORY[0x234934494](&unk_23364E898, &type metadata for FinanceStore.Message.UpdateOrdersShowAsActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B00);
  }
  return result;
}

unint64_t sub_23346517C()
{
  unint64_t result;

  result = qword_256050B08;
  if (!qword_256050B08)
  {
    result = MEMORY[0x234934494](&unk_23364E848, &type metadata for FinanceStore.Message.ActiveOrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B08);
  }
  return result;
}

unint64_t sub_2334651C0()
{
  unint64_t result;

  result = qword_256050B10;
  if (!qword_256050B10)
  {
    result = MEMORY[0x234934494](&unk_23364E7F8, &type metadata for FinanceStore.Message.SetOrderNotificationsEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B10);
  }
  return result;
}

unint64_t sub_233465204()
{
  unint64_t result;

  result = qword_256050B18;
  if (!qword_256050B18)
  {
    result = MEMORY[0x234934494](&unk_23364E7A8, &type metadata for FinanceStore.Message.SetOrderMarkedAsCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B18);
  }
  return result;
}

unint64_t sub_233465248()
{
  unint64_t result;

  result = qword_256050B20;
  if (!qword_256050B20)
  {
    result = MEMORY[0x234934494](&unk_23364E758, &type metadata for FinanceStore.Message.SaveOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B20);
  }
  return result;
}

unint64_t sub_23346528C()
{
  unint64_t result;

  result = qword_256050B28;
  if (!qword_256050B28)
  {
    result = MEMORY[0x234934494](&unk_23364E708, &type metadata for FinanceStore.Message.RefreshOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B28);
  }
  return result;
}

unint64_t sub_2334652D0()
{
  unint64_t result;

  result = qword_254247BC0;
  if (!qword_254247BC0)
  {
    result = MEMORY[0x234934494](&unk_23364E6B8, &type metadata for FinanceStore.Message.MapsSuggestionsOrderPickupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BC0);
  }
  return result;
}

unint64_t sub_233465314()
{
  unint64_t result;

  result = qword_256050B30;
  if (!qword_256050B30)
  {
    result = MEMORY[0x234934494](&unk_23364E668, &type metadata for FinanceStore.Message.InsertOrUpdateOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B30);
  }
  return result;
}

unint64_t sub_233465358()
{
  unint64_t result;

  result = qword_256050B38;
  if (!qword_256050B38)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderInsertOrUpdateOptions, &type metadata for OrderInsertOrUpdateOptions);
    atomic_store(result, (unint64_t *)&qword_256050B38);
  }
  return result;
}

unint64_t sub_23346539C()
{
  unint64_t result;

  result = qword_256050B40;
  if (!qword_256050B40)
  {
    result = MEMORY[0x234934494](&unk_23364E618, &type metadata for FinanceStore.Message.OrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B40);
  }
  return result;
}

unint64_t sub_2334653E0()
{
  unint64_t result;

  result = qword_256050B48;
  if (!qword_256050B48)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FetchOrderType, &type metadata for FetchOrderType);
    atomic_store(result, (unint64_t *)&qword_256050B48);
  }
  return result;
}

uint64_t sub_233465424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 != 1)
  {
    if (a5)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_233465470()
{
  unint64_t result;

  result = qword_256050B50;
  if (!qword_256050B50)
  {
    result = MEMORY[0x234934494](&unk_23364E5C8, &type metadata for FinanceStore.Message.DeleteOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B50);
  }
  return result;
}

unint64_t sub_2334654B4()
{
  unint64_t result;

  result = qword_256050B58;
  if (!qword_256050B58)
  {
    result = MEMORY[0x234934494](&unk_23364E578, &type metadata for FinanceStore.Message.ContainsOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B58);
  }
  return result;
}

unint64_t sub_2334654F8()
{
  unint64_t result;

  result = qword_256050B60;
  if (!qword_256050B60)
  {
    result = MEMORY[0x234934494](&unk_23364E528, &type metadata for FinanceStore.Message.IsDataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B60);
  }
  return result;
}

unint64_t sub_23346553C()
{
  unint64_t result;

  result = qword_256050B68;
  if (!qword_256050B68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.DataType, &type metadata for FinanceStore.DataType);
    atomic_store(result, (unint64_t *)&qword_256050B68);
  }
  return result;
}

unint64_t sub_233465580()
{
  unint64_t result;

  result = qword_256050B70;
  if (!qword_256050B70)
  {
    result = MEMORY[0x234934494](&unk_23364E4D8, &type metadata for FinanceStore.Message.ReindexSpotlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050B70);
  }
  return result;
}

unint64_t sub_2334655C4()
{
  unint64_t result;

  result = qword_256050B78;
  if (!qword_256050B78)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for AuxiliaryEntityPredicateProvider, &type metadata for AuxiliaryEntityPredicateProvider);
    atomic_store(result, (unint64_t *)&qword_256050B78);
  }
  return result;
}

uint64_t sub_233465608(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25604C3A0);
    v10 = sub_233167C58(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], a3);
    result = MEMORY[0x234934494](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23346568C()
{
  unint64_t result;

  result = qword_256050B90;
  if (!qword_256050B90)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderInsertOrUpdateOptions, &type metadata for OrderInsertOrUpdateOptions);
    atomic_store(result, (unint64_t *)&qword_256050B90);
  }
  return result;
}

unint64_t sub_2334656D0()
{
  unint64_t result;

  result = qword_256050B98;
  if (!qword_256050B98)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FetchOrderType, &type metadata for FetchOrderType);
    atomic_store(result, (unint64_t *)&qword_256050B98);
  }
  return result;
}

unint64_t sub_233465714()
{
  unint64_t result;

  result = qword_256050BA0[0];
  if (!qword_256050BA0[0])
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for FinanceStore.DataType, &type metadata for FinanceStore.DataType);
    atomic_store(result, qword_256050BA0);
  }
  return result;
}

uint64_t type metadata accessor for FinanceStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for FinanceStore()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_233465784()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2334657F4(uint64_t *__dst, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x19uLL)
    v5 = 25;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *(_QWORD *)a2;
    *v3 = *(_QWORD *)a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *(unsigned __int8 *)(a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      v11 = *(_QWORD *)a2;
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_BYTE *)(a2 + 24);
      sub_2334630E0(*(_QWORD *)a2, v12, v13, v14);
      *v3 = v11;
      v3[1] = v12;
      v3[2] = v13;
      *((_BYTE *)v3 + 24) = v14;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_233465950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x19)
    v3 = 25;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return sub_23329DAD0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_233465998 + 4 * byte_23364CA81[v5]))();
  }
}

uint64_t *sub_233465A04(uint64_t *__dst, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x19uLL)
    v5 = 25;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *(_QWORD *)a2;
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_BYTE *)(a2 + 24);
    sub_2334630E0(*(_QWORD *)a2, v9, v10, v11);
    *__dst = v8;
    __dst[1] = v9;
    __dst[2] = v10;
    *((_BYTE *)__dst + 24) = v11;
    *((_BYTE *)__dst + v5) = 1;
  }
  else
  {
    (*(void (**)(uint64_t *))(v4 + 16))(__dst);
    *((_BYTE *)__dst + v5) = 0;
  }
  return __dst;
}

unsigned __int8 *sub_233465B20(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x19uLL)
      v7 = 25;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = __dst[v7];
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      sub_23329DAD0(*(_QWORD *)__dst, *((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), __dst[24]);
    else
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = __src[v7];
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *(_QWORD *)__src;
      v13 = *((_QWORD *)__src + 1);
      v14 = *((_QWORD *)__src + 2);
      v15 = __src[24];
      sub_2334630E0(v12, v13, v14, v15);
      *(_QWORD *)__dst = v12;
      *((_QWORD *)__dst + 1) = v13;
      *((_QWORD *)__dst + 2) = v14;
      __dst[24] = v15;
      __dst[v7] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

char *sub_233465CF4(char *__dst, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x19uLL)
    v5 = 25;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_OWORD *)__dst = *a2;
    *(_OWORD *)(__dst + 9) = *(_OWORD *)((char *)a2 + 9);
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(char *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_233465DE4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x19uLL)
      v7 = 25;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = __dst[v7];
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      sub_23329DAD0(*(_QWORD *)__dst, *((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), __dst[24]);
    else
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = __src[v7];
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *(_OWORD *)(__dst + 9) = *(_OWORD *)(__src + 9);
      __dst[v7] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_233465F9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 25;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x19uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_233466060 + 4 * byte_23364CAA4[(v4 - 1)]))();
}

void sub_2334660AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x19)
    v5 = 25;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_233466254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 25;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x19uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23346629C + 4 * byte_23364CAB2[v3]))();
}

void sub_2334662E4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x19uLL)
    v4 = 25;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_2334663AC(uint64_t a1)
{
  return sub_23329DAD0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_2334663C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2334630E0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_23346641C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2334630E0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_23329DAD0(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_233466488(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_23329DAD0(v5, v7, v6, v8);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FinanceStore.Message(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v7;
        v8 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
        v10 = (char *)a1 + v9;
        v11 = (const void *)(a2 + v9);
        v12 = sub_23361D634();
        v13 = *(_QWORD *)(v12 - 8);
        if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
          goto LABEL_22;
        goto LABEL_4;
      case 2u:
      case 6u:
        v17 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v17;
        v18 = *(_QWORD *)(a2 + 16);
        v19 = *(_QWORD *)(a2 + 24);
        a1[2] = v18;
        a1[3] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v20 = *(_QWORD *)a2;
        v21 = *(_QWORD *)(a2 + 8);
        v22 = *(_QWORD *)(a2 + 16);
        v23 = *(_QWORD *)(a2 + 24);
        v24 = *(_BYTE *)(a2 + 32);
        sub_233466AC4(v20, v21, v22, v23, v24);
        *a1 = v20;
        a1[1] = v21;
        a1[2] = v22;
        a1[3] = v23;
        *((_BYTE *)a1 + 32) = v24;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v25 = *(_QWORD *)a2;
        v26 = *(_QWORD *)(a2 + 8);
        sub_2331D1374(*(_QWORD *)a2, v26);
        *a1 = v25;
        a1[1] = v26;
        *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v27 = sub_23361D634();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        v28 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = a2 + v28;
        v31 = sub_23361CD40();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v33 = *(_QWORD *)a2;
        v32 = *(_QWORD *)(a2 + 8);
        sub_2331D1374(v33, v32);
        *a1 = v33;
        a1[1] = v32;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v34 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v34;
        v35 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v35;
        *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
        v10 = (char *)a1 + v36;
        v11 = (const void *)(a2 + v36);
        v12 = sub_23361D634();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_4:
          v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
LABEL_22:
          (*(void (**)(char *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v37 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v37;
        v38 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v38;
        *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v39 = sub_23361D634();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v40 = sub_23361D6A0();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
        v41 = (int *)type metadata accessor for BankCredential.ACH(0);
        v42 = v41[5];
        v43 = (uint64_t *)((char *)a1 + v42);
        v44 = (_QWORD *)(a2 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        v46 = v41[6];
        v47 = (uint64_t *)((char *)a1 + v46);
        v48 = (_QWORD *)(a2 + v46);
        v49 = v48[1];
        *v47 = *v48;
        v47[1] = v49;
        v50 = v41[7];
        v51 = (uint64_t *)((char *)a1 + v50);
        v52 = (_QWORD *)(a2 + v50);
        v53 = v52[1];
        *v51 = *v52;
        v51[1] = v53;
        v54 = v41[8];
        v55 = (char *)a1 + v54;
        v56 = a2 + v54;
        v57 = sub_23361D634();
        v58 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v58(v55, v56, v57);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v59 = *(void **)a2;
        v60 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v60;
        v62 = *(_QWORD *)(a2 + 16);
        v61 = *(_QWORD *)(a2 + 24);
        a1[2] = v62;
        a1[3] = v61;
        v63 = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368);
        v65 = *(int *)(v64 + 64);
        v66 = (char *)a1 + v65;
        v67 = (const void *)(a2 + v65);
        v68 = sub_23361D6A0();
        v69 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v69 + 16))(v66, v67, v68);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        *(uint64_t *)((char *)a1 + *(int *)(v64 + 80)) = *(_QWORD *)(a2 + *(int *)(v64 + 80));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_233466AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 != 1)
  {
    if (a5)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FinanceStore.Message(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
      goto LABEL_7;
    case 2:
    case 6:
    case 9:
      goto LABEL_14;
    case 3:
      return sub_233465424(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    case 4:
    case 7:
      return sub_23316BEA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    case 5:
      v4 = sub_23361D634();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      a1 += *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v5 = sub_23361CD40();
      goto LABEL_11;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
LABEL_7:
      v6 = a1 + v3;
      v7 = sub_23361D634();
      v8 = *(_QWORD *)(v7 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      if ((_DWORD)result)
        return result;
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      v13 = v6;
      v11 = v7;
      return v12(v13, v11);
    case 10:
      goto LABEL_10;
    case 11:
      v9 = sub_23361D6A0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      v10 = type metadata accessor for BankCredential.ACH(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(v10 + 32);
LABEL_10:
      v5 = sub_23361D634();
LABEL_11:
      v11 = v5;
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v13 = a1;
      return v12(v13, v11);
    case 12:
      goto LABEL_15;
    case 13:

LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 14:
      swift_bridgeObjectRelease();
      v14 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368) + 64);
      v15 = sub_23361D6A0();
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
LABEL_15:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for FinanceStore.Message(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v6;
      v7 = *(_QWORD *)(a2 + 24);
      a1[2] = *(_QWORD *)(a2 + 16);
      a1[3] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
      v9 = (char *)a1 + v8;
      v10 = (const void *)(a2 + v8);
      v11 = sub_23361D634();
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        goto LABEL_19;
      goto LABEL_3;
    case 2u:
    case 6u:
      v14 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v14;
      v15 = *(_QWORD *)(a2 + 16);
      v16 = *(_QWORD *)(a2 + 24);
      a1[2] = v15;
      a1[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 3u:
      v17 = *(_QWORD *)a2;
      v18 = *(_QWORD *)(a2 + 8);
      v19 = *(_QWORD *)(a2 + 16);
      v20 = *(_QWORD *)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_233466AC4(v17, v18, v19, v20, v21);
      *a1 = v17;
      a1[1] = v18;
      a1[2] = v19;
      a1[3] = v20;
      *((_BYTE *)a1 + 32) = v21;
      goto LABEL_23;
    case 4u:
      v22 = *(_QWORD *)a2;
      v23 = *(_QWORD *)(a2 + 8);
      sub_2331D1374(*(_QWORD *)a2, v23);
      *a1 = v22;
      a1[1] = v23;
      *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
      goto LABEL_23;
    case 5u:
      v24 = sub_23361D634();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
      v25 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v26 = (char *)a1 + v25;
      v27 = a2 + v25;
      v28 = sub_23361CD40();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      goto LABEL_23;
    case 7u:
      v30 = *(_QWORD *)a2;
      v29 = *(_QWORD *)(a2 + 8);
      sub_2331D1374(v30, v29);
      *a1 = v30;
      a1[1] = v29;
      goto LABEL_23;
    case 8u:
      v31 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v31;
      v32 = *(_QWORD *)(a2 + 24);
      a1[2] = *(_QWORD *)(a2 + 16);
      a1[3] = v32;
      *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
      v9 = (char *)a1 + v33;
      v10 = (const void *)(a2 + v33);
      v11 = sub_23361D634();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
LABEL_3:
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
LABEL_19:
        (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      goto LABEL_23;
    case 9u:
      v34 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v34;
      v35 = *(_QWORD *)(a2 + 24);
      a1[2] = *(_QWORD *)(a2 + 16);
      a1[3] = v35;
      *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 0xAu:
      v36 = sub_23361D634();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
      goto LABEL_23;
    case 0xBu:
      v37 = sub_23361D6A0();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
      v38 = (int *)type metadata accessor for BankCredential.ACH(0);
      v39 = v38[5];
      v40 = (uint64_t *)((char *)a1 + v39);
      v41 = (_QWORD *)(a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v38[6];
      v44 = (uint64_t *)((char *)a1 + v43);
      v45 = (_QWORD *)(a2 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      v47 = v38[7];
      v48 = (uint64_t *)((char *)a1 + v47);
      v49 = (_QWORD *)(a2 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = v38[8];
      v52 = (char *)a1 + v51;
      v53 = a2 + v51;
      v54 = sub_23361D634();
      v55 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v52, v53, v54);
      goto LABEL_23;
    case 0xCu:
      *a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 0xDu:
      v56 = *(void **)a2;
      v57 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v57;
      v59 = *(_QWORD *)(a2 + 16);
      v58 = *(_QWORD *)(a2 + 24);
      a1[2] = v59;
      a1[3] = v58;
      v60 = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368);
      v62 = *(int *)(v61 + 64);
      v63 = (char *)a1 + v62;
      v64 = (const void *)(a2 + v62);
      v65 = sub_23361D6A0();
      v66 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v61 + 80)) = *(_QWORD *)(a2 + *(int *)(v61 + 80));
      swift_bridgeObjectRetain();
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for FinanceStore.Message(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (a1 != (uint64_t *)a2)
  {
    sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
        v7 = (char *)a1 + v6;
        v8 = (const void *)(a2 + v6);
        v9 = sub_23361D634();
        v10 = *(_QWORD *)(v9 - 8);
        if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
          goto LABEL_20;
        goto LABEL_4;
      case 2u:
      case 6u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 3u:
        v12 = *(_QWORD *)a2;
        v13 = *(_QWORD *)(a2 + 8);
        v14 = *(_QWORD *)(a2 + 16);
        v15 = *(_QWORD *)(a2 + 24);
        v16 = *(_BYTE *)(a2 + 32);
        sub_233466AC4(v12, v13, v14, v15, v16);
        *a1 = v12;
        a1[1] = v13;
        a1[2] = v14;
        a1[3] = v15;
        *((_BYTE *)a1 + 32) = v16;
        goto LABEL_24;
      case 4u:
        v17 = *(_QWORD *)a2;
        v18 = *(_QWORD *)(a2 + 8);
        sub_2331D1374(*(_QWORD *)a2, v18);
        *a1 = v17;
        a1[1] = v18;
        *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
        goto LABEL_24;
      case 5u:
        v19 = sub_23361D634();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = a2 + v20;
        v23 = sub_23361CD40();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        goto LABEL_24;
      case 7u:
        v25 = *(_QWORD *)a2;
        v24 = *(_QWORD *)(a2 + 8);
        sub_2331D1374(v25, v24);
        *a1 = v25;
        a1[1] = v24;
        goto LABEL_24;
      case 8u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
        v7 = (char *)a1 + v26;
        v8 = (const void *)(a2 + v26);
        v9 = sub_23361D634();
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        {
LABEL_4:
          v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
LABEL_20:
          (*(void (**)(char *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
        }
        goto LABEL_24;
      case 9u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        *((_BYTE *)a1 + 32) = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0xAu:
        v27 = sub_23361D634();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        goto LABEL_24;
      case 0xBu:
        v28 = sub_23361D6A0();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        v29 = (int *)type metadata accessor for BankCredential.ACH(0);
        v30 = v29[5];
        v31 = (uint64_t *)((char *)a1 + v30);
        v32 = (_QWORD *)(a2 + v30);
        *v31 = *v32;
        v31[1] = v32[1];
        v33 = v29[6];
        v34 = (uint64_t *)((char *)a1 + v33);
        v35 = (_QWORD *)(a2 + v33);
        *v34 = *v35;
        v34[1] = v35[1];
        v36 = v29[7];
        v37 = (uint64_t *)((char *)a1 + v36);
        v38 = (_QWORD *)(a2 + v36);
        *v37 = *v38;
        v37[1] = v38[1];
        v39 = v29[8];
        v40 = (char *)a1 + v39;
        v41 = a2 + v39;
        v42 = sub_23361D634();
        v43 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v40, v41, v42);
        goto LABEL_24;
      case 0xCu:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0xDu:
        v44 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        v45 = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0xEu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368);
        v47 = *(int *)(v46 + 64);
        v48 = (char *)a1 + v47;
        v49 = (const void *)(a2 + v47);
        v50 = sub_23361D6A0();
        v51 = *(_QWORD *)(v50 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v51 + 16))(v48, v49, v50);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        }
        *(uint64_t *)((char *)a1 + *(int *)(v46 + 80)) = *(_QWORD *)(a2 + *(int *)(v46 + 80));
        swift_bridgeObjectRetain();
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FinanceStore.Message(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23361D634();
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        goto LABEL_15;
      goto LABEL_3;
    case 5u:
      v13 = sub_23361D634();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23361CD40();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_16;
    case 8u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
      v8 = (char *)a1 + v19;
      v9 = (char *)a2 + v19;
      v10 = sub_23361D634();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
LABEL_3:
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
LABEL_15:
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      goto LABEL_16;
    case 0xAu:
      v20 = sub_23361D634();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_16;
    case 0xBu:
      v21 = sub_23361D6A0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      v22 = (int *)type metadata accessor for BankCredential.ACH(0);
      *(_OWORD *)((char *)a1 + v22[5]) = *(_OWORD *)((char *)a2 + v22[5]);
      *(_OWORD *)((char *)a1 + v22[6]) = *(_OWORD *)((char *)a2 + v22[6]);
      *(_OWORD *)((char *)a1 + v22[7]) = *(_OWORD *)((char *)a2 + v22[7]);
      v23 = v22[8];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23361D634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_16;
    case 0xEu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368);
      v28 = *(int *)(v27 + 64);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23361D6A0();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v27 + 80)) = *(_QWORD *)((char *)a2 + *(int *)(v27 + 80));
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for FinanceStore.Message(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 != a2)
  {
    sub_233168500((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FinanceStore.Message);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256044020) + 48);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_23361D634();
        v11 = *(_QWORD *)(v10 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
          goto LABEL_13;
        goto LABEL_4;
      case 5u:
        v13 = sub_23361D634();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = *(int *)(type metadata accessor for TimeWindow(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23361CD40();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_17;
      case 8u:
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256046168) + 64);
        v8 = (char *)a1 + v19;
        v9 = (char *)a2 + v19;
        v10 = sub_23361D634();
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
LABEL_4:
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
LABEL_13:
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        goto LABEL_17;
      case 0xAu:
        v20 = sub_23361D634();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        goto LABEL_17;
      case 0xBu:
        v21 = sub_23361D6A0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        v22 = (int *)type metadata accessor for BankCredential.ACH(0);
        *(_OWORD *)((char *)a1 + v22[5]) = *(_OWORD *)((char *)a2 + v22[5]);
        *(_OWORD *)((char *)a1 + v22[6]) = *(_OWORD *)((char *)a2 + v22[6]);
        *(_OWORD *)((char *)a1 + v22[7]) = *(_OWORD *)((char *)a2 + v22[7]);
        v23 = v22[8];
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23361D634();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_17;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25604C368);
        v28 = *(int *)(v27 + 64);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_23361D6A0();
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v27 + 80)) = *(_QWORD *)((char *)a2 + *(int *)(v27 + 80));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_2334680CC()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  char v10;
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;

  v11 = &unk_23364CD80;
  sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v12 = &v10;
    v13 = &unk_23364CD98;
    v14 = &unk_23364CDB0;
    v15 = &unk_23364CDC8;
    v1 = type metadata accessor for TimeWindow(319);
    if (v2 <= 0x3F)
    {
      v16 = *(_QWORD *)(v1 - 8) + 64;
      v17 = &unk_23364CD98;
      v18 = &unk_23364CDE0;
      swift_getTupleTypeLayout3();
      v19 = &v9;
      v20 = &unk_23364CE10;
      v3 = sub_23361D634();
      if (v4 <= 0x3F)
      {
        v21 = *(_QWORD *)(v3 - 8) + 64;
        v5 = type metadata accessor for BankCredential.ACH(319);
        if (v6 <= 0x3F)
        {
          v22 = *(_QWORD *)(v5 - 8) + 64;
          v23 = MEMORY[0x24BEE0158] + 64;
          v24 = &unk_23364CD98;
          sub_233176020(319, (unint64_t *)&qword_254247C30, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
          if (v7 <= 0x3F)
          {
            swift_getTupleTypeLayout();
            v25 = &v8;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for FinanceStore.Message.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FinanceStore.Message.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_233468368 + 4 * byte_23364CB2D[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_23346839C + 4 * byte_23364CB28[v4]))();
}

uint64_t sub_23346839C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334683A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334683ACLL);
  return result;
}

uint64_t sub_2334683B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334683C0);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_2334683C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334683CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.CodingKeys()
{
  return &type metadata for FinanceStore.Message.CodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.ReindexSpotlightCodingKeys()
{
  return &type metadata for FinanceStore.Message.ReindexSpotlightCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.IsDataRestrictedCodingKeys()
{
  return &type metadata for FinanceStore.Message.IsDataRestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.ContainsOrderCodingKeys()
{
  return &type metadata for FinanceStore.Message.ContainsOrderCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.DeleteOrderCodingKeys()
{
  return &type metadata for FinanceStore.Message.DeleteOrderCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.OrdersCodingKeys()
{
  return &type metadata for FinanceStore.Message.OrdersCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.InsertOrUpdateOrderCodingKeys()
{
  return &type metadata for FinanceStore.Message.InsertOrUpdateOrderCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.MapsSuggestionsOrderPickupsCodingKeys()
{
  return &type metadata for FinanceStore.Message.MapsSuggestionsOrderPickupsCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.RefreshOrderCodingKeys()
{
  return &type metadata for FinanceStore.Message.RefreshOrderCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.SaveOrderCodingKeys()
{
  return &type metadata for FinanceStore.Message.SaveOrderCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.SetOrderMarkedAsCompleteCodingKeys()
{
  return &type metadata for FinanceStore.Message.SetOrderMarkedAsCompleteCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.SetOrderNotificationsEnabledCodingKeys()
{
  return &type metadata for FinanceStore.Message.SetOrderNotificationsEnabledCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.ActiveOrdersCodingKeys()
{
  return &type metadata for FinanceStore.Message.ActiveOrdersCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.UpdateOrdersShowAsActiveCodingKeys()
{
  return &type metadata for FinanceStore.Message.UpdateOrdersShowAsActiveCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.OrderCountForSignoutCodingKeys()
{
  return &type metadata for FinanceStore.Message.OrderCountForSignoutCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.BankCredentialsCodingKeys()
{
  return &type metadata for FinanceStore.Message.BankCredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.InsertOrUpdateBankCredentialCodingKeys()
{
  return &type metadata for FinanceStore.Message.InsertOrUpdateBankCredentialCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.DeleteBankCredentialsCodingKeys()
{
  return &type metadata for FinanceStore.Message.DeleteBankCredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.AuthorizationStatusCodingKeys()
{
  return &type metadata for FinanceStore.Message.AuthorizationStatusCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.RequestAuthorizationCodingKeys()
{
  return &type metadata for FinanceStore.Message.RequestAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.FetchHistoricalTransactionsCodingKeys()
{
  return &type metadata for FinanceStore.Message.FetchHistoricalTransactionsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FinanceStore.Message.FetchHistoricalChangesCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233468580 + 4 * byte_23364CB37[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2334685B4 + 4 * byte_23364CB32[v4]))();
}

uint64_t sub_2334685B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334685BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334685C4);
  return result;
}

uint64_t sub_2334685D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334685D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2334685DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334685E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FinanceStore.Message.FetchHistoricalChangesCodingKeys()
{
  return &type metadata for FinanceStore.Message.FetchHistoricalChangesCodingKeys;
}

uint64_t _s10FinanceKit12FinanceStoreC7MessageO34SetOrderMarkedAsCompleteCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23346864C + 4 * byte_23364CB41[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233468680 + 4 * byte_23364CB3C[v4]))();
}

uint64_t sub_233468680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233468688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233468690);
  return result;
}

uint64_t sub_23346869C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334686A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2334686A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334686B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s10FinanceKit12FinanceStoreC7MessageO26IsDataRestrictedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334686FC + 4 * byte_23364CB46[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23346871C + 4 * byte_23364CB4B[v4]))();
}

_BYTE *sub_2334686FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23346871C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233468724(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23346872C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233468734(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23346873C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t _s10FinanceKit12FinanceStoreC7MessageO23ContainsOrderCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233468794 + 4 * byte_23364CB55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334687C8 + 4 * byte_23364CB50[v4]))();
}

uint64_t sub_2334687C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334687D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334687D8);
  return result;
}

uint64_t sub_2334687E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2334687ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2334687F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334687F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_233468804()
{
  JUMPOUT(0x234934494);
}

void sub_233468814()
{
  JUMPOUT(0x234934494);
}

void sub_233468824()
{
  JUMPOUT(0x234934494);
}

void sub_233468834()
{
  JUMPOUT(0x234934494);
}

void sub_233468844()
{
  JUMPOUT(0x234934494);
}

void sub_233468854()
{
  JUMPOUT(0x234934494);
}

unint64_t sub_233468868()
{
  unint64_t result;

  result = qword_256050DA8;
  if (!qword_256050DA8)
  {
    result = MEMORY[0x234934494](&unk_23364D808, &type metadata for FinanceStore.Message.FetchHistoricalChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DA8);
  }
  return result;
}

unint64_t sub_2334688B0()
{
  unint64_t result;

  result = qword_256050DB0;
  if (!qword_256050DB0)
  {
    result = MEMORY[0x234934494](&unk_23364D8C0, &type metadata for FinanceStore.Message.FetchHistoricalTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DB0);
  }
  return result;
}

unint64_t sub_2334688F8()
{
  unint64_t result;

  result = qword_256050DB8;
  if (!qword_256050DB8)
  {
    result = MEMORY[0x234934494](&unk_23364DA18, &type metadata for FinanceStore.Message.DeleteBankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DB8);
  }
  return result;
}

unint64_t sub_233468940()
{
  unint64_t result;

  result = qword_256050DC0;
  if (!qword_256050DC0)
  {
    result = MEMORY[0x234934494](&unk_23364DAD0, &type metadata for FinanceStore.Message.InsertOrUpdateBankCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DC0);
  }
  return result;
}

unint64_t sub_233468988()
{
  unint64_t result;

  result = qword_256050DC8;
  if (!qword_256050DC8)
  {
    result = MEMORY[0x234934494](&unk_23364DC28, &type metadata for FinanceStore.Message.UpdateOrdersShowAsActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DC8);
  }
  return result;
}

unint64_t sub_2334689D0()
{
  unint64_t result;

  result = qword_256050DD0;
  if (!qword_256050DD0)
  {
    result = MEMORY[0x234934494](&unk_23364DD30, &type metadata for FinanceStore.Message.SetOrderNotificationsEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DD0);
  }
  return result;
}

unint64_t sub_233468A18()
{
  unint64_t result;

  result = qword_256050DD8;
  if (!qword_256050DD8)
  {
    result = MEMORY[0x234934494](&unk_23364DDE8, &type metadata for FinanceStore.Message.SetOrderMarkedAsCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DD8);
  }
  return result;
}

unint64_t sub_233468A60()
{
  unint64_t result;

  result = qword_256050DE0;
  if (!qword_256050DE0)
  {
    result = MEMORY[0x234934494](&unk_23364DEA0, &type metadata for FinanceStore.Message.SaveOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DE0);
  }
  return result;
}

unint64_t sub_233468AA8()
{
  unint64_t result;

  result = qword_256050DE8;
  if (!qword_256050DE8)
  {
    result = MEMORY[0x234934494](&unk_23364DF58, &type metadata for FinanceStore.Message.RefreshOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DE8);
  }
  return result;
}

unint64_t sub_233468AF0()
{
  unint64_t result;

  result = qword_256050DF0;
  if (!qword_256050DF0)
  {
    result = MEMORY[0x234934494](&unk_23364E010, &type metadata for FinanceStore.Message.MapsSuggestionsOrderPickupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DF0);
  }
  return result;
}

unint64_t sub_233468B38()
{
  unint64_t result;

  result = qword_256050DF8;
  if (!qword_256050DF8)
  {
    result = MEMORY[0x234934494](&unk_23364E0C8, &type metadata for FinanceStore.Message.InsertOrUpdateOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050DF8);
  }
  return result;
}

unint64_t sub_233468B80()
{
  unint64_t result;

  result = qword_256050E00;
  if (!qword_256050E00)
  {
    result = MEMORY[0x234934494](&unk_23364E180, &type metadata for FinanceStore.Message.OrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050E00);
  }
  return result;
}

unint64_t sub_233468BC8()
{
  unint64_t result;

  result = qword_256050E08;
  if (!qword_256050E08)
  {
    result = MEMORY[0x234934494](&unk_23364E238, &type metadata for FinanceStore.Message.DeleteOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050E08);
  }
  return result;
}

unint64_t sub_233468C10()
{
  unint64_t result;

  result = qword_256050E10;
  if (!qword_256050E10)
  {
    result = MEMORY[0x234934494](&unk_23364E2F0, &type metadata for FinanceStore.Message.ContainsOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050E10);
  }
  return result;
}

unint64_t sub_233468C58()
{
  unint64_t result;

  result = qword_256050E18;
  if (!qword_256050E18)
  {
    result = MEMORY[0x234934494](&unk_23364E3A8, &type metadata for FinanceStore.Message.IsDataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050E18);
  }
  return result;
}

unint64_t sub_233468CA0()
{
  unint64_t result;

  result = qword_256050E20;
  if (!qword_256050E20)
  {
    result = MEMORY[0x234934494](&unk_23364E4B0, &type metadata for FinanceStore.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050E20);
  }
  return result;
}

unint64_t sub_233468CE8()
{
  unint64_t result;

  result = qword_254247B38;
  if (!qword_254247B38)
  {
    result = MEMORY[0x234934494](&unk_23364E3D0, &type metadata for FinanceStore.Message.ReindexSpotlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B38);
  }
  return result;
}

unint64_t sub_233468D30()
{
  unint64_t result;

  result = qword_254247B30;
  if (!qword_254247B30)
  {
    result = MEMORY[0x234934494](&unk_23364E3F8, &type metadata for FinanceStore.Message.ReindexSpotlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B30);
  }
  return result;
}

unint64_t sub_233468D78()
{
  unint64_t result;

  result = qword_254247B28;
  if (!qword_254247B28)
  {
    result = MEMORY[0x234934494](&unk_23364E318, &type metadata for FinanceStore.Message.IsDataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B28);
  }
  return result;
}

unint64_t sub_233468DC0()
{
  unint64_t result;

  result = qword_254247B20;
  if (!qword_254247B20)
  {
    result = MEMORY[0x234934494](&unk_23364E340, &type metadata for FinanceStore.Message.IsDataRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B20);
  }
  return result;
}

unint64_t sub_233468E08()
{
  unint64_t result;

  result = qword_254247B08;
  if (!qword_254247B08)
  {
    result = MEMORY[0x234934494](&unk_23364E260, &type metadata for FinanceStore.Message.ContainsOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B08);
  }
  return result;
}

unint64_t sub_233468E50()
{
  unint64_t result;

  result = qword_254247B00;
  if (!qword_254247B00)
  {
    result = MEMORY[0x234934494](&unk_23364E288, &type metadata for FinanceStore.Message.ContainsOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B00);
  }
  return result;
}

unint64_t sub_233468E98()
{
  unint64_t result;

  result = qword_254247AD8;
  if (!qword_254247AD8)
  {
    result = MEMORY[0x234934494](&unk_23364E1A8, &type metadata for FinanceStore.Message.DeleteOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AD8);
  }
  return result;
}

unint64_t sub_233468EE0()
{
  unint64_t result;

  result = qword_254247AD0;
  if (!qword_254247AD0)
  {
    result = MEMORY[0x234934494](&unk_23364E1D0, &type metadata for FinanceStore.Message.DeleteOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AD0);
  }
  return result;
}

unint64_t sub_233468F28()
{
  unint64_t result;

  result = qword_254247AB8;
  if (!qword_254247AB8)
  {
    result = MEMORY[0x234934494](&unk_23364E0F0, &type metadata for FinanceStore.Message.OrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AB8);
  }
  return result;
}

unint64_t sub_233468F70()
{
  unint64_t result;

  result = qword_254247AB0;
  if (!qword_254247AB0)
  {
    result = MEMORY[0x234934494](&unk_23364E118, &type metadata for FinanceStore.Message.OrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AB0);
  }
  return result;
}

unint64_t sub_233468FB8()
{
  unint64_t result;

  result = qword_254247B58;
  if (!qword_254247B58)
  {
    result = MEMORY[0x234934494](&unk_23364E038, &type metadata for FinanceStore.Message.InsertOrUpdateOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B58);
  }
  return result;
}

unint64_t sub_233469000()
{
  unint64_t result;

  result = qword_254247B50;
  if (!qword_254247B50)
  {
    result = MEMORY[0x234934494](&unk_23364E060, &type metadata for FinanceStore.Message.InsertOrUpdateOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B50);
  }
  return result;
}

unint64_t sub_233469048()
{
  unint64_t result;

  result = qword_254247BD0;
  if (!qword_254247BD0)
  {
    result = MEMORY[0x234934494](&unk_23364DF80, &type metadata for FinanceStore.Message.MapsSuggestionsOrderPickupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BD0);
  }
  return result;
}

unint64_t sub_233469090()
{
  unint64_t result;

  result = qword_254247BC8;
  if (!qword_254247BC8)
  {
    result = MEMORY[0x234934494](&unk_23364DFA8, &type metadata for FinanceStore.Message.MapsSuggestionsOrderPickupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BC8);
  }
  return result;
}

unint64_t sub_2334690D8()
{
  unint64_t result;

  result = qword_254247AF8;
  if (!qword_254247AF8)
  {
    result = MEMORY[0x234934494](&unk_23364DEC8, &type metadata for FinanceStore.Message.RefreshOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AF8);
  }
  return result;
}

unint64_t sub_233469120()
{
  unint64_t result;

  result = qword_254247AF0;
  if (!qword_254247AF0)
  {
    result = MEMORY[0x234934494](&unk_23364DEF0, &type metadata for FinanceStore.Message.RefreshOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AF0);
  }
  return result;
}

unint64_t sub_233469168()
{
  unint64_t result;

  result = qword_254247AC8;
  if (!qword_254247AC8)
  {
    result = MEMORY[0x234934494](&unk_23364DE10, &type metadata for FinanceStore.Message.SaveOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AC8);
  }
  return result;
}

unint64_t sub_2334691B0()
{
  unint64_t result;

  result = qword_254247AC0;
  if (!qword_254247AC0)
  {
    result = MEMORY[0x234934494](&unk_23364DE38, &type metadata for FinanceStore.Message.SaveOrderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AC0);
  }
  return result;
}

unint64_t sub_2334691F8()
{
  unint64_t result;

  result = qword_254247B98;
  if (!qword_254247B98)
  {
    result = MEMORY[0x234934494](&unk_23364DD58, &type metadata for FinanceStore.Message.SetOrderMarkedAsCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B98);
  }
  return result;
}

unint64_t sub_233469240()
{
  unint64_t result;

  result = qword_254247B90;
  if (!qword_254247B90)
  {
    result = MEMORY[0x234934494](&unk_23364DD80, &type metadata for FinanceStore.Message.SetOrderMarkedAsCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B90);
  }
  return result;
}

unint64_t sub_233469288()
{
  unint64_t result;

  result = qword_254247BF0;
  if (!qword_254247BF0)
  {
    result = MEMORY[0x234934494](&unk_23364DCA0, &type metadata for FinanceStore.Message.SetOrderNotificationsEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BF0);
  }
  return result;
}

unint64_t sub_2334692D0()
{
  unint64_t result;

  result = qword_254247BE8;
  if (!qword_254247BE8)
  {
    result = MEMORY[0x234934494](&unk_23364DCC8, &type metadata for FinanceStore.Message.SetOrderNotificationsEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BE8);
  }
  return result;
}

unint64_t sub_233469318()
{
  unint64_t result;

  result = qword_254247AE8;
  if (!qword_254247AE8)
  {
    result = MEMORY[0x234934494](&unk_23364DC50, &type metadata for FinanceStore.Message.ActiveOrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AE8);
  }
  return result;
}

unint64_t sub_233469360()
{
  unint64_t result;

  result = qword_254247AE0;
  if (!qword_254247AE0)
  {
    result = MEMORY[0x234934494](&unk_23364DC78, &type metadata for FinanceStore.Message.ActiveOrdersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AE0);
  }
  return result;
}

unint64_t sub_2334693A8()
{
  unint64_t result;

  result = qword_254247BA8;
  if (!qword_254247BA8)
  {
    result = MEMORY[0x234934494](&unk_23364DB98, &type metadata for FinanceStore.Message.UpdateOrdersShowAsActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BA8);
  }
  return result;
}

unint64_t sub_2334693F0()
{
  unint64_t result;

  result = qword_254247BA0;
  if (!qword_254247BA0)
  {
    result = MEMORY[0x234934494](&unk_23364DBC0, &type metadata for FinanceStore.Message.UpdateOrdersShowAsActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BA0);
  }
  return result;
}

unint64_t sub_233469438()
{
  unint64_t result;

  result = qword_254247CE0;
  if (!qword_254247CE0)
  {
    result = MEMORY[0x234934494](&unk_23364DB48, &type metadata for FinanceStore.Message.OrderCountForSignoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247CE0);
  }
  return result;
}

unint64_t sub_233469480()
{
  unint64_t result;

  result = qword_254247CE8;
  if (!qword_254247CE8)
  {
    result = MEMORY[0x234934494](&unk_23364DB70, &type metadata for FinanceStore.Message.OrderCountForSignoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247CE8);
  }
  return result;
}

unint64_t sub_2334694C8()
{
  unint64_t result;

  result = qword_254247B18;
  if (!qword_254247B18)
  {
    result = MEMORY[0x234934494](&unk_23364DAF8, &type metadata for FinanceStore.Message.BankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B18);
  }
  return result;
}

unint64_t sub_233469510()
{
  unint64_t result;

  result = qword_254247B10;
  if (!qword_254247B10)
  {
    result = MEMORY[0x234934494](&unk_23364DB20, &type metadata for FinanceStore.Message.BankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B10);
  }
  return result;
}

unint64_t sub_233469558()
{
  unint64_t result;

  result = qword_254247BE0;
  if (!qword_254247BE0)
  {
    result = MEMORY[0x234934494](&unk_23364DA40, &type metadata for FinanceStore.Message.InsertOrUpdateBankCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BE0);
  }
  return result;
}

unint64_t sub_2334695A0()
{
  unint64_t result;

  result = qword_254247BD8;
  if (!qword_254247BD8)
  {
    result = MEMORY[0x234934494](&unk_23364DA68, &type metadata for FinanceStore.Message.InsertOrUpdateBankCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BD8);
  }
  return result;
}

unint64_t sub_2334695E8()
{
  unint64_t result;

  result = qword_254247B78;
  if (!qword_254247B78)
  {
    result = MEMORY[0x234934494](&unk_23364D988, &type metadata for FinanceStore.Message.DeleteBankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B78);
  }
  return result;
}

unint64_t sub_233469630()
{
  unint64_t result;

  result = qword_254247B70;
  if (!qword_254247B70)
  {
    result = MEMORY[0x234934494](&unk_23364D9B0, &type metadata for FinanceStore.Message.DeleteBankCredentialsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B70);
  }
  return result;
}

unint64_t sub_233469678()
{
  unint64_t result;

  result = qword_254247B48;
  if (!qword_254247B48)
  {
    result = MEMORY[0x234934494](&unk_23364D938, &type metadata for FinanceStore.Message.AuthorizationStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B48);
  }
  return result;
}

unint64_t sub_2334696C0()
{
  unint64_t result;

  result = qword_254247B40;
  if (!qword_254247B40)
  {
    result = MEMORY[0x234934494](&unk_23364D960, &type metadata for FinanceStore.Message.AuthorizationStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B40);
  }
  return result;
}

unint64_t sub_233469708()
{
  unint64_t result;

  result = qword_254247B68;
  if (!qword_254247B68)
  {
    result = MEMORY[0x234934494](&unk_23364D8E8, &type metadata for FinanceStore.Message.RequestAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B68);
  }
  return result;
}

unint64_t sub_233469750()
{
  unint64_t result;

  result = qword_254247B60;
  if (!qword_254247B60)
  {
    result = MEMORY[0x234934494](&unk_23364D910, &type metadata for FinanceStore.Message.RequestAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B60);
  }
  return result;
}

unint64_t sub_233469798()
{
  unint64_t result;

  result = qword_254247BB8;
  if (!qword_254247BB8)
  {
    result = MEMORY[0x234934494](&unk_23364D830, &type metadata for FinanceStore.Message.FetchHistoricalTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BB8);
  }
  return result;
}

unint64_t sub_2334697E0()
{
  unint64_t result;

  result = qword_254247BB0;
  if (!qword_254247BB0)
  {
    result = MEMORY[0x234934494](&unk_23364D858, &type metadata for FinanceStore.Message.FetchHistoricalTransactionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247BB0);
  }
  return result;
}

unint64_t sub_233469828()
{
  unint64_t result;

  result = qword_254247B88;
  if (!qword_254247B88)
  {
    result = MEMORY[0x234934494](&unk_23364D778, &type metadata for FinanceStore.Message.FetchHistoricalChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B88);
  }
  return result;
}

unint64_t sub_233469870()
{
  unint64_t result;

  result = qword_254247B80;
  if (!qword_254247B80)
  {
    result = MEMORY[0x234934494](&unk_23364D7A0, &type metadata for FinanceStore.Message.FetchHistoricalChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247B80);
  }
  return result;
}

unint64_t sub_2334698B8()
{
  unint64_t result;

  result = qword_254247AA8;
  if (!qword_254247AA8)
  {
    result = MEMORY[0x234934494](&unk_23364E420, &type metadata for FinanceStore.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AA8);
  }
  return result;
}

unint64_t sub_233469900()
{
  unint64_t result;

  result = qword_254247AA0;
  if (!qword_254247AA0)
  {
    result = MEMORY[0x234934494](&unk_23364E448, &type metadata for FinanceStore.Message.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254247AA0);
  }
  return result;
}

void sub_233469944()
{
  JUMPOUT(0x234934494);
}

void sub_233469954()
{
  JUMPOUT(0x234934494);
}

void sub_233469964()
{
  JUMPOUT(0x234934494);
}

void sub_233469974()
{
  JUMPOUT(0x234934494);
}

void sub_233469984()
{
  JUMPOUT(0x234934494);
}

void sub_233469994()
{
  JUMPOUT(0x234934494);
}

void sub_2334699A4()
{
  JUMPOUT(0x234934494);
}

void sub_2334699B4()
{
  JUMPOUT(0x234934494);
}

void sub_2334699C4()
{
  JUMPOUT(0x234934494);
}

void sub_2334699D4()
{
  JUMPOUT(0x234934494);
}

void sub_2334699E4()
{
  JUMPOUT(0x234934494);
}

void sub_2334699F4()
{
  JUMPOUT(0x234934494);
}

void sub_233469A04()
{
  JUMPOUT(0x234934494);
}

void sub_233469A14()
{
  JUMPOUT(0x234934494);
}

uint64_t sub_233469A24()
{
  return 2;
}

uint64_t sub_233469A2C()
{
  return 3;
}

uint64_t sub_233469A34(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000233677810 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233677830 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6961746E6F63 && a2 == 0xED0000726564724FLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x724F6574656C6564 && a2 == 0xEB00000000726564 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726564726FLL && a2 == 0xE600000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233668F10 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000233677850 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4F68736572666572 && a2 == 0xEC00000072656472 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6564724F65766173 && a2 == 0xE900000000000072 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233677870 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000233677890 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x724F657669746361 && a2 == 0xEC00000073726564 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002336778B0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233668FB0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x646572436B6E6162 && a2 == 0xEF736C6169746E65 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002336778D0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002336778F0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233677910 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233677930 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002336752A0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002336752C0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

uint64_t sub_23346A268(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4464657461647075 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23346A358(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000233677970)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23361F224();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23346A3DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000233669CD0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E797469746E65 && a2 == 0xEA0000000000656DLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000233677950)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23346A5A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E797469746E65 && a2 == 0xEA0000000000656DLL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000233677950)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23346A6E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x724164656E676973 && a2 == 0xED00006576696863;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23346A7FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C615677656ELL && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233677990)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23346A934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C62616E457369 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t RawOrderContent.ecommerceOrderContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v5);
  sub_23328BA24((uint64_t)v5, a1);
  v6 = type metadata accessor for RawECommerceOrderContent(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

uint64_t type metadata accessor for RawOrderContent()
{
  uint64_t result;

  result = qword_256050EE8;
  if (!qword_256050EE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RawOrderContent.fullyQualifiedOrderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  v9 = &v5[*(int *)(v3 + 20)];
  v11 = *(_QWORD *)v9;
  v10 = *((_QWORD *)v9 + 1);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  v12 = &v5[*(int *)(v3 + 24)];
  v14 = *(_QWORD *)v12;
  v13 = *((_QWORD *)v12 + 1);
  swift_bridgeObjectRetain();
  result = sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
  *a1 = v11;
  a1[1] = v10;
  a1[2] = v14;
  a1[3] = v13;
  return result;
}

uint64_t RawOrderContent.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  v9 = &v5[*(int *)(v3 + 48)];
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v9, v10);
  return sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
}

uint64_t RawOrderContent.orderTypeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v0, (uint64_t)v6);
  sub_23328BA24((uint64_t)v6, (uint64_t)v3);
  v7 = *(_QWORD *)&v3[*(int *)(v1 + 20)];
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v3, type metadata accessor for RawECommerceOrderContent);
  return v7;
}

uint64_t RawOrderContent.orderIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v0, (uint64_t)v6);
  sub_23328BA24((uint64_t)v6, (uint64_t)v3);
  v7 = *(_QWORD *)&v3[*(int *)(v1 + 24)];
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v3, type metadata accessor for RawECommerceOrderContent);
  return v7;
}

uint64_t RawOrderContent.webServiceURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  sub_233199624((uint64_t)&v5[*(int *)(v3 + 96)], a1);
  return sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
}

uint64_t RawOrderContent.authenticationToken.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v0, (uint64_t)v6);
  sub_23328BA24((uint64_t)v6, (uint64_t)v3);
  v7 = *(_QWORD *)&v3[*(int *)(v1 + 100)];
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v3, type metadata accessor for RawECommerceOrderContent);
  return v7;
}

uint64_t RawOrderContent.showsAsActiveUntilDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  v4 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v2, (uint64_t)v9);
  sub_23328BA24((uint64_t)v9, (uint64_t)v6);
  if ((RawECommerceOrderContent.isActive.getter() & 1) != 0)
  {
    v10 = sub_23361D634();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  else
  {
    sub_2334CEB74(a1);
    v11 = sub_23361D634();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  return sub_233168500((uint64_t)v6, type metadata accessor for RawECommerceOrderContent);
}

uint64_t RawOrderContent.automaticUpdatesEnabledUntilDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  RawECommerceOrderContent.automaticUpdatesEnabledUntilDate.getter(a1);
  return sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
}

uint64_t RawOrderContent.SchemaVersion.rawValue.getter()
{
  unsigned __int16 *v0;

  return *v0;
}

uint64_t RawOrderContent.SchemaVersion.rawValue.setter(uint64_t result)
{
  _WORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*RawOrderContent.SchemaVersion.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderContent.SchemaVersion.init(rawValue:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t RawOrderContent.schemaVersion.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int16 v9;
  uint64_t result;
  uint64_t v11;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  v9 = *(_WORD *)&v5[*(int *)(v3 + 104)];
  result = sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
  *a1 = v9;
  return result;
}

uint64_t RawOrderContent.OrderType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t RawOrderContent.OrderType.rawValue.getter()
{
  return 0x6372656D6D6F6365;
}

uint64_t sub_23346B3DC()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_23346B430()
{
  return sub_23361E0A8();
}

uint64_t sub_23346B44C()
{
  sub_23361F350();
  sub_23361E0A8();
  return sub_23361F3A4();
}

uint64_t sub_23346B49C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23346B4EC(_QWORD *a1@<X8>)
{
  *a1 = 0x6372656D6D6F6365;
  a1[1] = 0xE900000000000065;
}

uint64_t RawOrderContent.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  v9 = &v5[*(int *)(v3 + 44)];
  v10 = sub_23361D634();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v9, v10);
  return sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
}

uint64_t static RawOrderContent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E38);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2333CB6BC(a1, (uint64_t)v10);
  sub_2333CB6BC(a2, v11);
  sub_23328BA24((uint64_t)v10, (uint64_t)v6);
  LOBYTE(a2) = _s10FinanceKit24RawECommerceOrderContentV2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_233168500(v11, type metadata accessor for RawECommerceOrderContent);
  sub_233168500((uint64_t)v6, type metadata accessor for RawECommerceOrderContent);
  return a2 & 1;
}

uint64_t sub_23346B700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E38);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2333CB6BC(a1, (uint64_t)v10);
  sub_2333CB6BC(a2, v11);
  sub_23328BA24((uint64_t)v10, (uint64_t)v6);
  LOBYTE(a2) = _s10FinanceKit24RawECommerceOrderContentV2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_233168500(v11, type metadata accessor for RawECommerceOrderContent);
  sub_233168500((uint64_t)v6, type metadata accessor for RawECommerceOrderContent);
  return a2 & 1;
}

uint64_t RawOrderContent.SchemaVersion.init(integerLiteral:)@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  if ((__int16)result < 1)
    __break(1u);
  else
    *a2 = result;
  return result;
}

void static RawOrderContent.SchemaVersion.latest.getter(_WORD *a1@<X8>)
{
  *a1 = 1;
}

BOOL static RawOrderContent.SchemaVersion.< infix(_:_:)(__int16 *a1, __int16 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23346B838(__int16 *a1, __int16 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23346B84C(__int16 *a1, __int16 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23346B860(__int16 *a1, __int16 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23346B874(__int16 *a1, __int16 *a2)
{
  return *a2 < *a1;
}

__int16 *sub_23346B888@<X0>(__int16 *result@<X0>, _WORD *a2@<X8>)
{
  int v2;

  v2 = *result;
  if (v2 < 1)
    __break(1u);
  else
    *a2 = v2;
  return result;
}

uint64_t RawOrderContent.SchemaVersion.description.getter()
{
  return sub_23361F1D0();
}

uint64_t sub_23346B8E0()
{
  return sub_23361F1D0();
}

uint64_t RawOrderContentDecodingError.errorDescription.getter()
{
  sub_23361ED98();
  sub_23361E27C();
  sub_23361F1D0();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  sub_23361E27C();
  return 0;
}

uint64_t RawOrderContent.SchemaVersion.init(from:)@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;
  __int16 v5;
  __int16 v6;
  _QWORD v8[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23361F3E0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    v5 = sub_23361F254();
    v6 = v5;
    if (v5 <= 0)
    {
      sub_23361EE10();
      swift_allocError();
      sub_23361EDD4();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
      *a2 = v6;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23346BAF4@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  return RawOrderContent.SchemaVersion.init(from:)(a1, a2);
}

uint64_t sub_23346BB08()
{
  sub_2334707D0();
  return sub_23361E36C();
}

uint64_t sub_23346BB54()
{
  sub_23347078C();
  return sub_23361E390();
}

uint64_t sub_23346BBB0()
{
  sub_23347078C();
  return sub_23361E354();
}

uint64_t sub_23346BBFC(char *a1, char *a2)
{
  return sub_233228630(*a1, *a2);
}

uint64_t sub_23346BC08()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23346BC98()
{
  sub_23361E0A8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23346BD04()
{
  sub_23361F350();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  return sub_23361F3A4();
}

uint64_t sub_23346BD90@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23346BDEC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6556616D65686373;
  if (*v1)
    v2 = 0x707954726564726FLL;
  v3 = 0xED00006E6F697372;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23346BE3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x707954726564726FLL;
  else
    return 0x6556616D65686373;
}

uint64_t sub_23346BE88@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23361EF9C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23346BEE8()
{
  sub_23346C58C();
  return sub_23361F428();
}

uint64_t sub_23346BF10()
{
  sub_23346C58C();
  return sub_23361F434();
}

uint64_t RawOrderContent.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  __int16 v6;
  char v7;
  _QWORD v8[5];

  if (qword_256041C20 != -1)
    swift_once();
  swift_beginAccess();
  v4 = byte_256048538;
  sub_233177068(a1, (uint64_t)v8);
  v6 = 1;
  v7 = v4;
  RawOrderContent.init(from:configuration:)(v8, &v6, a2);
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t RawOrderContent.DecodingConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  if (qword_256041C20 != -1)
    swift_once();
  result = swift_beginAccess();
  v3 = byte_256048538;
  *(_WORD *)a1 = 1;
  *(_BYTE *)(a1 + 2) = v3;
  return result;
}

uint64_t RawOrderContent.init(from:configuration:)@<X0>(_QWORD *a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  unsigned __int16 v15;
  unsigned __int16 *v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD v21[5];
  int v22;
  unsigned __int16 v23;
  char v24;

  v19 = a3;
  v6 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050E40);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a2;
  v20 = *((unsigned __int8 *)a2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23346C58C();
  sub_23361F3EC();
  if (!v3)
  {
    v13 = v22;
    v14 = v10;
    LOBYTE(v23) = 0;
    sub_23346C5D0();
    sub_23361F068();
    v15 = v21[0];
    if (v13 >= SLOWORD(v21[0]))
    {
      LOBYTE(v21[0]) = 1;
      sub_23346C614();
      sub_23361F068();
      sub_233177068((uint64_t)a1, (uint64_t)v21);
      v23 = v15;
      v24 = v20;
      RawECommerceOrderContent.init(from:configuration:)(v21, &v23, (uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v9);
      sub_23328BA24((uint64_t)v8, v19);
    }
    else
    {
      sub_23346C658();
      swift_allocError();
      *v16 = v15;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void RawOrderContent.DecodingConfiguration.maximumSupportedSchemaVersion.getter(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

_WORD *RawOrderContent.DecodingConfiguration.maximumSupportedSchemaVersion.setter(_WORD *result)
{
  _WORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RawOrderContent.DecodingConfiguration.maximumSupportedSchemaVersion.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t RawOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*RawOrderContent.DecodingConfiguration.allowsInsecureHTTPURLs.modify())()
{
  return nullsub_1;
}

uint64_t RawOrderContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RawOrderContent();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v5);
  RawECommerceOrderContent.encode(to:)(a1);
  return sub_233168500((uint64_t)v5, type metadata accessor for RawECommerceOrderContent);
}

uint64_t sub_23346C3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  __int16 v6;
  char v7;
  _QWORD v8[5];

  if (qword_256041C20 != -1)
    swift_once();
  swift_beginAccess();
  v4 = byte_256048538;
  sub_233177068(a1, (uint64_t)v8);
  v6 = 1;
  v7 = v4;
  RawOrderContent.init(from:configuration:)(v8, &v6, a2);
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t sub_23346C480@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  __int16 v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 2);
  v5 = *(_WORD *)a2;
  v6 = v3;
  return RawOrderContent.init(from:configuration:)(a1, &v5, a3);
}

uint64_t sub_23346C4B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = type metadata accessor for RawECommerceOrderContent(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2333CB6BC(v1, (uint64_t)v8);
  sub_23328BA24((uint64_t)v8, (uint64_t)v6);
  RawECommerceOrderContent.encode(to:)(a1);
  return sub_233168500((uint64_t)v6, type metadata accessor for RawECommerceOrderContent);
}

unint64_t sub_23346C58C()
{
  unint64_t result;

  result = qword_256050E48;
  if (!qword_256050E48)
  {
    result = MEMORY[0x234934494](&unk_23364F344, &type metadata for RawOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050E48);
  }
  return result;
}

unint64_t sub_23346C5D0()
{
  unint64_t result;

  result = qword_256050E50;
  if (!qword_256050E50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.SchemaVersion, &type metadata for RawOrderContent.SchemaVersion);
    atomic_store(result, (unint64_t *)&qword_256050E50);
  }
  return result;
}

unint64_t sub_23346C614()
{
  unint64_t result;

  result = qword_256050E58;
  if (!qword_256050E58)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.OrderType, &type metadata for RawOrderContent.OrderType);
    atomic_store(result, (unint64_t *)&qword_256050E58);
  }
  return result;
}

unint64_t sub_23346C658()
{
  unint64_t result;

  result = qword_256050E60;
  if (!qword_256050E60)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContentDecodingError, &type metadata for RawOrderContentDecodingError);
    atomic_store(result, (unint64_t *)&qword_256050E60);
  }
  return result;
}

unint64_t sub_23346C6A0()
{
  unint64_t result;

  result = qword_256050E68;
  if (!qword_256050E68)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.OrderType, &type metadata for RawOrderContent.OrderType);
    atomic_store(result, (unint64_t *)&qword_256050E68);
  }
  return result;
}

unint64_t sub_23346C6E8()
{
  unint64_t result;

  result = qword_256050E70;
  if (!qword_256050E70)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.SchemaVersion, &type metadata for RawOrderContent.SchemaVersion);
    atomic_store(result, (unint64_t *)&qword_256050E70);
  }
  return result;
}

uint64_t sub_23346C72C()
{
  return MEMORY[0x24BEE3F70];
}

_QWORD *initializeBufferWithCopyOfBuffer for RawOrderContent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  uint64_t v152;
  unsigned int (*v153)(char *, uint64_t, uint64_t);
  void (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2 == 1)
    {
      v6 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 96) = a2[12];
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      v8 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v8;
    }
    else
    {
      v10 = a2[1];
      v11 = a2[2];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v10;
      v12 = a2[3];
      v13 = a2[4];
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v12;
      v14 = a2[5];
      v15 = a2[6];
      *(_QWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 40) = v14;
      v16 = a2[7];
      v17 = a2[8];
      *(_QWORD *)(a1 + 48) = v15;
      *(_QWORD *)(a1 + 56) = v16;
      v18 = a2[9];
      v19 = a2[10];
      *(_QWORD *)(a1 + 64) = v17;
      *(_QWORD *)(a1 + 72) = v18;
      v20 = a2[11];
      v21 = a2[12];
      *(_QWORD *)(a1 + 80) = v19;
      *(_QWORD *)(a1 + 88) = v20;
      *(_QWORD *)(a1 + 96) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v22 = (int *)type metadata accessor for RawMerchant();
    v23 = v22[5];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_23361D340();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v30 = v22[6];
    v31 = (char *)v4 + v30;
    v32 = (char *)a2 + v30;
    v153 = v28;
    if (v28((char *)a2 + v30, 1, v26))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v31, v32, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
    }
    v34 = v22[7];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v22[8];
    v39 = (_QWORD *)((char *)v4 + v38);
    v40 = (uint64_t *)((char *)a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = v22[9];
    v43 = (_QWORD *)((char *)v4 + v42);
    v44 = (uint64_t *)((char *)a2 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = v22[10];
    v47 = (_QWORD *)((char *)v4 + v46);
    v48 = (uint64_t *)((char *)a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    v50 = v22[11];
    v51 = (_QWORD *)((char *)v4 + v50);
    v52 = (uint64_t *)((char *)a2 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = v22[12];
    v55 = (char *)v4 + v54;
    v56 = (uint64_t)a2 + v54;
    v152 = v27;
    v154 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v154(v55, v56, v26);
    v57 = (int *)type metadata accessor for RawECommerceOrderContent(0);
    v58 = v57[5];
    v59 = (_QWORD *)((char *)v4 + v58);
    v60 = (uint64_t *)((char *)a2 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = v57[6];
    v63 = (_QWORD *)((char *)v4 + v62);
    v64 = (uint64_t *)((char *)a2 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    v66 = v57[7];
    v67 = (_QWORD *)((char *)v4 + v66);
    v68 = (uint64_t *)((char *)a2 + v66);
    v69 = v68[1];
    *v67 = *v68;
    v67[1] = v69;
    *((_BYTE *)v4 + v57[8]) = *((_BYTE *)a2 + v57[8]);
    *((_BYTE *)v4 + v57[9]) = *((_BYTE *)a2 + v57[9]);
    v70 = v57[10];
    v71 = (_QWORD *)((char *)v4 + v70);
    v72 = (uint64_t *)((char *)a2 + v70);
    v73 = v72[1];
    *v71 = *v72;
    v71[1] = v73;
    v74 = v57[11];
    v75 = (char *)v4 + v74;
    v155 = v26;
    v150 = (uint64_t)a2 + v74;
    v76 = sub_23361D634();
    v149 = *(_QWORD *)(v76 - 8);
    v77 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78 = v75;
    v79 = v57;
    v77(v78, v150, v76);
    v151 = (void (*)(char *, char *, uint64_t))v77;
    v77((char *)v4 + v57[12], (uint64_t)a2 + v57[12], v76);
    v154((char *)v4 + v57[13], (uint64_t)a2 + v57[13], v155);
    v80 = v57[14];
    v81 = (char *)v4 + v80;
    v82 = (char *)a2 + v80;
    v83 = *((_QWORD *)v82 + 5);
    if (v83)
    {
      *v81 = *v82;
      *(_OWORD *)(v81 + 8) = *(_OWORD *)(v82 + 8);
      *((_DWORD *)v81 + 6) = *((_DWORD *)v82 + 6);
      *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
      *((_QWORD *)v81 + 5) = v83;
      v84 = *((_QWORD *)v82 + 7);
      *((_QWORD *)v81 + 6) = *((_QWORD *)v82 + 6);
      *((_QWORD *)v81 + 7) = v84;
      v85 = *((_QWORD *)v82 + 9);
      *((_QWORD *)v81 + 8) = *((_QWORD *)v82 + 8);
      *((_QWORD *)v81 + 9) = v85;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v86 = *((_OWORD *)v82 + 3);
      *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
      *((_OWORD *)v81 + 3) = v86;
      *((_OWORD *)v81 + 4) = *((_OWORD *)v82 + 4);
      v87 = *((_OWORD *)v82 + 1);
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *((_OWORD *)v81 + 1) = v87;
    }
    v88 = v57[15];
    v89 = (char *)v4 + v88;
    v90 = (char *)a2 + v88;
    v91 = (int *)type metadata accessor for RawOrderReturnInfo();
    v92 = *((_QWORD *)v91 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v92 + 48))(v90, 1, v91))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      v147 = v76;
      v148 = v57;
      v154(v89, (uint64_t)v90, v155);
      v94 = v91[5];
      v95 = &v89[v94];
      v96 = &v90[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v91[6];
      v99 = &v89[v98];
      v100 = &v90[v98];
      swift_bridgeObjectRetain();
      if (v153(v100, 1, v155))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        v154(v99, (uint64_t)v100, v155);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v99, 0, 1, v155);
      }
      v102 = v91[7];
      v103 = &v89[v102];
      v104 = &v90[v102];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(&v90[v102], 1, v147))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        v151(v103, v104, v147);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v103, 0, 1, v147);
      }
      v89[v91[8]] = v90[v91[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v92 + 56))(v89, 0, 1, v91);
      v79 = v148;
    }
    *(_QWORD *)((char *)v4 + v79[16]) = *(uint64_t *)((char *)a2 + v79[16]);
    *(_QWORD *)((char *)v4 + v79[17]) = *(uint64_t *)((char *)a2 + v79[17]);
    v106 = v79[18];
    v107 = (char *)v4 + v106;
    v108 = (uint64_t)a2 + v106;
    v109 = *(uint64_t *)((char *)a2 + v106 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v109 == 1)
    {
      v110 = *(_OWORD *)(v108 + 48);
      *((_OWORD *)v107 + 2) = *(_OWORD *)(v108 + 32);
      *((_OWORD *)v107 + 3) = v110;
      *((_OWORD *)v107 + 4) = *(_OWORD *)(v108 + 64);
      v111 = *(_OWORD *)(v108 + 16);
      *(_OWORD *)v107 = *(_OWORD *)v108;
      *((_OWORD *)v107 + 1) = v111;
    }
    else
    {
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v112 = *(_QWORD *)(v108 + 24);
      *((_QWORD *)v107 + 2) = *(_QWORD *)(v108 + 16);
      *((_QWORD *)v107 + 3) = v112;
      v113 = *(_QWORD *)(v108 + 40);
      *((_QWORD *)v107 + 4) = *(_QWORD *)(v108 + 32);
      *((_QWORD *)v107 + 5) = v113;
      v114 = *(_QWORD *)(v108 + 56);
      *((_QWORD *)v107 + 6) = *(_QWORD *)(v108 + 48);
      *((_QWORD *)v107 + 7) = v114;
      v115 = *(_QWORD *)(v108 + 64);
      v116 = *(_QWORD *)(v108 + 72);
      *((_QWORD *)v107 + 8) = v115;
      *((_QWORD *)v107 + 9) = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)((char *)v4 + v79[19]) = *(uint64_t *)((char *)a2 + v79[19]);
    *(_QWORD *)((char *)v4 + v79[20]) = *(uint64_t *)((char *)a2 + v79[20]);
    *(_QWORD *)((char *)v4 + v79[21]) = *(uint64_t *)((char *)a2 + v79[21]);
    v117 = v79[22];
    v118 = (char *)v4 + v117;
    v119 = (uint64_t)a2 + v117;
    v120 = *(uint64_t *)((char *)a2 + v117 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v120)
    {
      v121 = *(_QWORD *)(v119 + 8);
      *(_QWORD *)v118 = *(_QWORD *)v119;
      *((_QWORD *)v118 + 1) = v121;
      v118[16] = *(_BYTE *)(v119 + 16);
      *((_QWORD *)v118 + 3) = *(_QWORD *)(v119 + 24);
      *((_QWORD *)v118 + 4) = v120;
      v122 = *(_QWORD *)(v119 + 48);
      *((_QWORD *)v118 + 5) = *(_QWORD *)(v119 + 40);
      *((_QWORD *)v118 + 6) = v122;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v123 = *(_OWORD *)(v119 + 16);
      *(_OWORD *)v118 = *(_OWORD *)v119;
      *((_OWORD *)v118 + 1) = v123;
      *((_OWORD *)v118 + 2) = *(_OWORD *)(v119 + 32);
      *((_QWORD *)v118 + 6) = *(_QWORD *)(v119 + 48);
    }
    v124 = v155;
    v125 = v79;
    v126 = v79[23];
    v127 = (_QWORD *)((char *)v4 + v126);
    v128 = (uint64_t *)((char *)a2 + v126);
    v129 = type metadata accessor for RawOrderProvider();
    v130 = *(_QWORD *)(v129 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
    {
      v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
      memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
    }
    else
    {
      v132 = v128[1];
      *v127 = *v128;
      v127[1] = v132;
      v133 = v128[3];
      v127[2] = v128[2];
      v127[3] = v133;
      v134 = v128[5];
      v127[4] = v128[4];
      v127[5] = v134;
      v135 = *(int *)(v129 + 28);
      v136 = (char *)v127 + v135;
      v137 = (char *)v128 + v135;
      swift_bridgeObjectRetain();
      v124 = v155;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v154(v136, (uint64_t)v137, v155);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
    }
    v138 = v125[24];
    v139 = (char *)v4 + v138;
    v140 = (char *)a2 + v138;
    if (v153((char *)a2 + v138, 1, v124))
    {
      v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    }
    else
    {
      v154(v139, (uint64_t)v140, v124);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v139, 0, 1, v124);
    }
    v142 = v125[25];
    v143 = (_QWORD *)((char *)v4 + v142);
    v144 = (uint64_t *)((char *)a2 + v142);
    v145 = v144[1];
    *v143 = *v144;
    v143[1] = v145;
    *(_WORD *)((char *)v4 + v125[26]) = *(_WORD *)((char *)a2 + v125[26]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RawOrderContent(char *a1)
{
  int *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(char *, uint64_t, uint64_t);
  char *v7;
  void (*v8)(char *, uint64_t);
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v24)(char *, uint64_t);

  if (*(_QWORD *)a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v2 = (int *)type metadata accessor for RawMerchant();
  v3 = &a1[v2[5]];
  v4 = sub_23361D340();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  v7 = &a1[v2[6]];
  if (!v6(v7, 1, v4))
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(&a1[v2[12]], v4);
  v9 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = &a1[v9[11]];
  v11 = sub_23361D634();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(&a1[v9[12]], v11);
  v8(&a1[v9[13]], v4);
  if (*(_QWORD *)&a1[v9[14] + 40])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = &a1[v9[15]];
  v15 = type metadata accessor for RawOrderReturnInfo();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v24 = v8;
    v8(v14, v4);
    swift_bridgeObjectRelease();
    v16 = v6;
    v17 = &v14[*(int *)(v15 + 24)];
    v18 = v16;
    if (!v16(v17, 1, v4))
      v24(v17, v4);
    v19 = &v14[*(int *)(v15 + 28)];
    v6 = v18;
    v8 = v24;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11))
      v13(v19, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&a1[v9[18] + 8] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&a1[v9[22] + 32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v20 = &a1[v9[23]];
  v21 = type metadata accessor for RawOrderProvider();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8(&v20[*(int *)(v21 + 28)], v4);
  }
  v22 = &a1[v9[24]];
  if (!v6(v22, 1, v4))
    v8(v22, v4);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RawOrderContent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  void *v136;
  const void *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  unsigned int (*v150)(char *, uint64_t, uint64_t);
  void (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;

  if (*(_QWORD *)a2 == 1)
  {
    v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    v11 = *(_QWORD *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    v13 = *(_QWORD *)(a2 + 56);
    v14 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v13;
    v15 = *(_QWORD *)(a2 + 72);
    v16 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v15;
    v17 = *(_QWORD *)(a2 + 88);
    v18 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v16;
    *(_QWORD *)(a1 + 88) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v19 = (int *)type metadata accessor for RawMerchant();
  v20 = v19[5];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_23361D340();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = v19[6];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v150 = (unsigned int (*)(char *, uint64_t, uint64_t))v25;
  if (v25((const void *)(a2 + v27), 1, v23))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v28, v29, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  v31 = v19[7];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = v19[8];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = v19[9];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = v19[10];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = v19[11];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v19[12];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v149 = v24;
  v151 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v151(v52, v53, v23);
  v54 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v55 = v54[5];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = v54[6];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  v63 = v54[7];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  *(_BYTE *)(a1 + v54[8]) = *(_BYTE *)(a2 + v54[8]);
  *(_BYTE *)(a1 + v54[9]) = *(_BYTE *)(a2 + v54[9]);
  v67 = v54[10];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (_QWORD *)(a2 + v67);
  v70 = v69[1];
  *v68 = *v69;
  v68[1] = v70;
  v71 = v54[11];
  v72 = a1 + v71;
  v152 = v23;
  v147 = a2 + v71;
  v73 = sub_23361D634();
  v146 = *(_QWORD *)(v73 - 8);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v75 = v72;
  v76 = v54;
  v74(v75, v147, v73);
  v148 = (void (*)(char *, char *, uint64_t))v74;
  v74(a1 + v54[12], a2 + v54[12], v73);
  v151(a1 + v54[13], a2 + v54[13], v152);
  v77 = v54[14];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = *(_QWORD *)(v79 + 40);
  if (v80)
  {
    *(_BYTE *)v78 = *(_BYTE *)v79;
    *(_OWORD *)(v78 + 8) = *(_OWORD *)(v79 + 8);
    *(_DWORD *)(v78 + 24) = *(_DWORD *)(v79 + 24);
    *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
    *(_QWORD *)(v78 + 40) = v80;
    v81 = *(_QWORD *)(v79 + 56);
    *(_QWORD *)(v78 + 48) = *(_QWORD *)(v79 + 48);
    *(_QWORD *)(v78 + 56) = v81;
    v82 = *(_QWORD *)(v79 + 72);
    *(_QWORD *)(v78 + 64) = *(_QWORD *)(v79 + 64);
    *(_QWORD *)(v78 + 72) = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v83 = *(_OWORD *)(v79 + 48);
    *(_OWORD *)(v78 + 32) = *(_OWORD *)(v79 + 32);
    *(_OWORD *)(v78 + 48) = v83;
    *(_OWORD *)(v78 + 64) = *(_OWORD *)(v79 + 64);
    v84 = *(_OWORD *)(v79 + 16);
    *(_OWORD *)v78 = *(_OWORD *)v79;
    *(_OWORD *)(v78 + 16) = v84;
  }
  v85 = v54[15];
  v86 = (char *)(a1 + v85);
  v87 = (char *)(a2 + v85);
  v88 = (int *)type metadata accessor for RawOrderReturnInfo();
  v89 = *((_QWORD *)v88 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v89 + 48))(v87, 1, v88))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    v144 = v73;
    v145 = v54;
    v151((uint64_t)v86, (uint64_t)v87, v152);
    v91 = v88[5];
    v92 = &v86[v91];
    v93 = &v87[v91];
    v94 = *((_QWORD *)v93 + 1);
    *(_QWORD *)v92 = *(_QWORD *)v93;
    *((_QWORD *)v92 + 1) = v94;
    v95 = v88[6];
    v96 = &v86[v95];
    v97 = &v87[v95];
    swift_bridgeObjectRetain();
    if (v150(v97, 1, v152))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      v151((uint64_t)v96, (uint64_t)v97, v152);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v96, 0, 1, v152);
    }
    v99 = v88[7];
    v100 = &v86[v99];
    v101 = &v87[v99];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(&v87[v99], 1, v144))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v148(v100, v101, v144);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v100, 0, 1, v144);
    }
    v86[v88[8]] = v87[v88[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
    v76 = v145;
  }
  *(_QWORD *)(a1 + v76[16]) = *(_QWORD *)(a2 + v76[16]);
  *(_QWORD *)(a1 + v76[17]) = *(_QWORD *)(a2 + v76[17]);
  v103 = v76[18];
  v104 = a1 + v103;
  v105 = a2 + v103;
  v106 = *(_QWORD *)(a2 + v103 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v106 == 1)
  {
    v107 = *(_OWORD *)(v105 + 48);
    *(_OWORD *)(v104 + 32) = *(_OWORD *)(v105 + 32);
    *(_OWORD *)(v104 + 48) = v107;
    *(_OWORD *)(v104 + 64) = *(_OWORD *)(v105 + 64);
    v108 = *(_OWORD *)(v105 + 16);
    *(_OWORD *)v104 = *(_OWORD *)v105;
    *(_OWORD *)(v104 + 16) = v108;
  }
  else
  {
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *(_QWORD *)(v104 + 8) = v106;
    v109 = *(_QWORD *)(v105 + 24);
    *(_QWORD *)(v104 + 16) = *(_QWORD *)(v105 + 16);
    *(_QWORD *)(v104 + 24) = v109;
    v110 = *(_QWORD *)(v105 + 40);
    *(_QWORD *)(v104 + 32) = *(_QWORD *)(v105 + 32);
    *(_QWORD *)(v104 + 40) = v110;
    v111 = *(_QWORD *)(v105 + 56);
    *(_QWORD *)(v104 + 48) = *(_QWORD *)(v105 + 48);
    *(_QWORD *)(v104 + 56) = v111;
    v112 = *(_QWORD *)(v105 + 64);
    v113 = *(_QWORD *)(v105 + 72);
    *(_QWORD *)(v104 + 64) = v112;
    *(_QWORD *)(v104 + 72) = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + v76[19]) = *(_QWORD *)(a2 + v76[19]);
  *(_QWORD *)(a1 + v76[20]) = *(_QWORD *)(a2 + v76[20]);
  *(_QWORD *)(a1 + v76[21]) = *(_QWORD *)(a2 + v76[21]);
  v114 = v76[22];
  v115 = a1 + v114;
  v116 = a2 + v114;
  v117 = *(_QWORD *)(a2 + v114 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v117)
  {
    v118 = *(_QWORD *)(v116 + 8);
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *(_QWORD *)(v115 + 8) = v118;
    *(_BYTE *)(v115 + 16) = *(_BYTE *)(v116 + 16);
    *(_QWORD *)(v115 + 24) = *(_QWORD *)(v116 + 24);
    *(_QWORD *)(v115 + 32) = v117;
    v119 = *(_QWORD *)(v116 + 48);
    *(_QWORD *)(v115 + 40) = *(_QWORD *)(v116 + 40);
    *(_QWORD *)(v115 + 48) = v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v120 = *(_OWORD *)(v116 + 16);
    *(_OWORD *)v115 = *(_OWORD *)v116;
    *(_OWORD *)(v115 + 16) = v120;
    *(_OWORD *)(v115 + 32) = *(_OWORD *)(v116 + 32);
    *(_QWORD *)(v115 + 48) = *(_QWORD *)(v116 + 48);
  }
  v121 = v152;
  v122 = v76;
  v123 = v76[23];
  v124 = (_QWORD *)(a1 + v123);
  v125 = (_QWORD *)(a2 + v123);
  v126 = type metadata accessor for RawOrderProvider();
  v127 = *(_QWORD *)(v126 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
  {
    v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
  }
  else
  {
    v129 = v125[1];
    *v124 = *v125;
    v124[1] = v129;
    v130 = v125[3];
    v124[2] = v125[2];
    v124[3] = v130;
    v131 = v125[5];
    v124[4] = v125[4];
    v124[5] = v131;
    v132 = *(int *)(v126 + 28);
    v133 = (char *)v124 + v132;
    v134 = (char *)v125 + v132;
    swift_bridgeObjectRetain();
    v121 = v152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v151((uint64_t)v133, (uint64_t)v134, v152);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
  }
  v135 = v122[24];
  v136 = (void *)(a1 + v135);
  v137 = (const void *)(a2 + v135);
  if (v150((char *)(a2 + v135), 1, v121))
  {
    v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
  }
  else
  {
    v151((uint64_t)v136, (uint64_t)v137, v121);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v136, 0, 1, v121);
  }
  v139 = v122[25];
  v140 = (_QWORD *)(a1 + v139);
  v141 = (_QWORD *)(a2 + v139);
  v142 = v141[1];
  *v140 = *v141;
  v140[1] = v142;
  *(_WORD *)(a1 + v122[26]) = *(_WORD *)(a2 + v122[26]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RawOrderContent(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  void (*v47)(uint64_t, char *, uint64_t);
  int *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _BYTE *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  uint64_t (*v84)(_BYTE *, uint64_t, int *);
  int v85;
  int v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  int v99;
  int v100;
  uint64_t v101;
  size_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t (*v109)(void);
  int v110;
  int v111;
  size_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  __int128 *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(_QWORD *, uint64_t, uint64_t);
  int v142;
  int v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  char *v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  _BYTE *__src;
  char *__srca;
  void *v161;
  char *v162;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  char *__dstb;
  uint64_t v166;
  void (*v167)(uint64_t, char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t (*v171)(void);
  uint64_t v172;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4 == 1)
  {
    if (v5 == 1)
    {
      v6 = *(_OWORD *)a2;
      v7 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)a1 = v6;
      v8 = *((_OWORD *)a2 + 3);
      v9 = *((_OWORD *)a2 + 4);
      v10 = *((_OWORD *)a2 + 5);
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 48) = v8;
    }
    else
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_233326AE4(a1);
    v12 = *((_OWORD *)a2 + 1);
    v11 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = v11;
    v14 = *((_OWORD *)a2 + 4);
    v13 = *((_OWORD *)a2 + 5);
    v15 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v14;
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 48) = v15;
  }
  else
  {
    *(_QWORD *)a1 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v16 = (int *)type metadata accessor for RawMerchant();
  v17 = v16[5];
  v18 = (void *)(a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = sub_23361D340();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void))(v21 + 48);
  v23 = ((uint64_t (*)(void *, uint64_t, uint64_t))v22)(v18, 1, v20);
  v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_13:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_14:
  v26 = v16[6];
  v27 = (void *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(a1 + v26, 1, v20);
  v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v28, 1, v20);
  v171 = v22;
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_19:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_20:
  v32 = v16[7];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v16[8];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v16[9];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)((char *)a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v16[10];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)((char *)a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = v16[11];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (uint64_t *)((char *)a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v168 = v21;
  v47 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 24);
  v47(a1 + v16[12], (char *)a2 + v16[12], v20);
  v48 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v49 = v48[5];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)((char *)a2 + v49);
  *v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = v48[6];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (uint64_t *)((char *)a2 + v52);
  *v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = v48[7];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)((char *)a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v48[8]) = *((_BYTE *)a2 + v48[8]);
  *(_BYTE *)(a1 + v48[9]) = *((_BYTE *)a2 + v48[9]);
  v58 = v48[10];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (uint64_t *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = v48[11];
  v62 = a1 + v61;
  v63 = (uint64_t)a2 + v61;
  v64 = sub_23361D634();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 24);
  v66(v62, v63, v64);
  v169 = v64;
  __dst = (void (*)(char *, char *, uint64_t))v66;
  v66(a1 + v48[12], (uint64_t)a2 + v48[12], v64);
  v167 = v47;
  v47(a1 + v48[13], (char *)a2 + v48[13], v20);
  v67 = v48[14];
  v68 = a1 + v67;
  v69 = (uint64_t)a2 + v67;
  v70 = *(_QWORD *)(a1 + v67 + 40);
  v71 = *(uint64_t *)((char *)a2 + v67 + 40);
  v172 = v20;
  v166 = v65;
  if (v70)
  {
    if (v71)
    {
      *(_BYTE *)v68 = *(_BYTE *)v69;
      *(_DWORD *)(v68 + 8) = *(_DWORD *)(v69 + 8);
      *(_WORD *)(v68 + 12) = *(_WORD *)(v69 + 12);
      *(_WORD *)(v68 + 14) = *(_WORD *)(v69 + 14);
      *(_WORD *)(v68 + 16) = *(_WORD *)(v69 + 16);
      *(_WORD *)(v68 + 18) = *(_WORD *)(v69 + 18);
      *(_WORD *)(v68 + 20) = *(_WORD *)(v69 + 20);
      *(_WORD *)(v68 + 22) = *(_WORD *)(v69 + 22);
      *(_WORD *)(v68 + 24) = *(_WORD *)(v69 + 24);
      *(_WORD *)(v68 + 26) = *(_WORD *)(v69 + 26);
      *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
      *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v68 + 48) = *(_QWORD *)(v69 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v68 + 56) = *(_QWORD *)(v69 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v68 + 64) = *(_QWORD *)(v69 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v68 + 72) = *(_QWORD *)(v69 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_233326B18(v68);
      *(_OWORD *)v68 = *(_OWORD *)v69;
      v73 = *(_OWORD *)(v69 + 64);
      v75 = *(_OWORD *)(v69 + 16);
      v74 = *(_OWORD *)(v69 + 32);
      *(_OWORD *)(v68 + 48) = *(_OWORD *)(v69 + 48);
      *(_OWORD *)(v68 + 64) = v73;
      *(_OWORD *)(v68 + 16) = v75;
      *(_OWORD *)(v68 + 32) = v74;
    }
  }
  else if (v71)
  {
    *(_BYTE *)v68 = *(_BYTE *)v69;
    v72 = *(_OWORD *)(v69 + 8);
    *(_DWORD *)(v68 + 24) = *(_DWORD *)(v69 + 24);
    *(_OWORD *)(v68 + 8) = v72;
    *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
    *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
    *(_QWORD *)(v68 + 48) = *(_QWORD *)(v69 + 48);
    *(_QWORD *)(v68 + 56) = *(_QWORD *)(v69 + 56);
    *(_QWORD *)(v68 + 64) = *(_QWORD *)(v69 + 64);
    *(_QWORD *)(v68 + 72) = *(_QWORD *)(v69 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v68 = *(_OWORD *)v69;
    v76 = *(_OWORD *)(v69 + 16);
    v77 = *(_OWORD *)(v69 + 32);
    v78 = *(_OWORD *)(v69 + 64);
    *(_OWORD *)(v68 + 48) = *(_OWORD *)(v69 + 48);
    *(_OWORD *)(v68 + 64) = v78;
    *(_OWORD *)(v68 + 16) = v76;
    *(_OWORD *)(v68 + 32) = v77;
  }
  v79 = v48[15];
  v80 = (_BYTE *)(a1 + v79);
  v81 = (char *)a2 + v79;
  v82 = (int *)type metadata accessor for RawOrderReturnInfo();
  v83 = *((_QWORD *)v82 - 1);
  v84 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v83 + 48);
  v85 = v84(v80, 1, v82);
  v86 = v84(v81, 1, v82);
  if (!v85)
  {
    if (v86)
    {
      sub_233168500((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
      goto LABEL_35;
    }
    v167((uint64_t)v80, v81, v172);
    v94 = v82[5];
    v95 = &v80[v94];
    v96 = &v81[v94];
    *v95 = *v96;
    v95[1] = v96[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v97 = v82[6];
    v98 = &v81[v97];
    v162 = &v80[v97];
    v99 = v171();
    __src = v98;
    v100 = ((uint64_t (*)(char *, uint64_t, uint64_t))v171)(v98, 1, v172);
    if (v99)
    {
      v101 = v169;
      if (v100)
      {
        v102 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v103 = v162;
LABEL_46:
        memcpy(v103, __src, v102);
        goto LABEL_49;
      }
      (*(void (**)(char *, _BYTE *, uint64_t))(v168 + 16))(v162, __src, v172);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v162, 0, 1, v172);
    }
    else
    {
      v101 = v169;
      if (v100)
      {
        (*(void (**)(char *, uint64_t))(v168 + 8))(v162, v172);
        v102 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254248700) - 8) + 64);
        v103 = v162;
        goto LABEL_46;
      }
      v167((uint64_t)v162, __src, v172);
    }
LABEL_49:
    v107 = v82[7];
    v108 = &v81[v107];
    v109 = *(uint64_t (**)(void))(v166 + 48);
    __srca = &v80[v107];
    v110 = v109();
    v111 = ((uint64_t (*)(char *, uint64_t, uint64_t))v109)(v108, 1, v101);
    if (v110)
    {
      if (!v111)
      {
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(__srca, v108, v101);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(__srca, 0, 1, v101);
        goto LABEL_57;
      }
      v112 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8)
                       + 64);
      v113 = __srca;
    }
    else
    {
      if (!v111)
      {
        __dst(__srca, v108, v101);
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(__srca, v101);
      v112 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0) - 8)
                       + 64);
      v113 = __srca;
    }
    memcpy(v113, v108, v112);
LABEL_57:
    v80[v82[8]] = v81[v82[8]];
    goto LABEL_58;
  }
  if (v86)
  {
LABEL_35:
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_58;
  }
  v161 = *(void **)(v168 + 16);
  ((void (*)(_BYTE *, char *, uint64_t))v161)(v80, v81, v172);
  v87 = v82[5];
  v88 = &v80[v87];
  v89 = &v81[v87];
  *v88 = *v89;
  v88[1] = v89[1];
  v90 = v82[6];
  __dsta = &v80[v90];
  v91 = &v81[v90];
  swift_bridgeObjectRetain();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v171)(v91, 1, v172))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(__dsta, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v161)(__dsta, v91, v172);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v168 + 56))(__dsta, 0, 1, v172);
  }
  v104 = v82[7];
  __dstb = &v80[v104];
  v105 = &v81[v104];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(&v81[v104], 1, v169))
  {
    v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(__dstb, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(__dstb, v105, v169);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(__dstb, 0, 1, v169);
  }
  v80[v82[8]] = v81[v82[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v83 + 56))(v80, 0, 1, v82);
LABEL_58:
  *(_QWORD *)(a1 + v48[16]) = *(uint64_t *)((char *)a2 + v48[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v48[17]) = *(uint64_t *)((char *)a2 + v48[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114 = v48[18];
  v115 = a1 + v114;
  v116 = (uint64_t)a2 + v114;
  v117 = *(_QWORD *)(a1 + v114 + 8);
  v118 = *(uint64_t *)((char *)a2 + v114 + 8);
  if (v117 == 1)
  {
    if (v118 == 1)
    {
      *(_OWORD *)v115 = *(_OWORD *)v116;
      v119 = *(_OWORD *)(v116 + 16);
      v120 = *(_OWORD *)(v116 + 32);
      v121 = *(_OWORD *)(v116 + 64);
      *(_OWORD *)(v115 + 48) = *(_OWORD *)(v116 + 48);
      *(_OWORD *)(v115 + 64) = v121;
      *(_OWORD *)(v115 + 16) = v119;
      *(_OWORD *)(v115 + 32) = v120;
    }
    else
    {
      *(_QWORD *)v115 = *(_QWORD *)v116;
      *(_QWORD *)(v115 + 8) = *(_QWORD *)(v116 + 8);
      *(_QWORD *)(v115 + 16) = *(_QWORD *)(v116 + 16);
      *(_QWORD *)(v115 + 24) = *(_QWORD *)(v116 + 24);
      *(_QWORD *)(v115 + 32) = *(_QWORD *)(v116 + 32);
      *(_QWORD *)(v115 + 40) = *(_QWORD *)(v116 + 40);
      *(_QWORD *)(v115 + 48) = *(_QWORD *)(v116 + 48);
      *(_QWORD *)(v115 + 56) = *(_QWORD *)(v116 + 56);
      *(_QWORD *)(v115 + 64) = *(_QWORD *)(v116 + 64);
      *(_QWORD *)(v115 + 72) = *(_QWORD *)(v116 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v118 == 1)
  {
    sub_233326B4C(v115);
    *(_OWORD *)v115 = *(_OWORD *)v116;
    v122 = *(_OWORD *)(v116 + 64);
    v124 = *(_OWORD *)(v116 + 16);
    v123 = *(_OWORD *)(v116 + 32);
    *(_OWORD *)(v115 + 48) = *(_OWORD *)(v116 + 48);
    *(_OWORD *)(v115 + 64) = v122;
    *(_OWORD *)(v115 + 16) = v124;
    *(_OWORD *)(v115 + 32) = v123;
  }
  else
  {
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *(_QWORD *)(v115 + 8) = *(_QWORD *)(v116 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v115 + 16) = *(_QWORD *)(v116 + 16);
    *(_QWORD *)(v115 + 24) = *(_QWORD *)(v116 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v115 + 32) = *(_QWORD *)(v116 + 32);
    *(_QWORD *)(v115 + 40) = *(_QWORD *)(v116 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v115 + 48) = *(_QWORD *)(v116 + 48);
    *(_QWORD *)(v115 + 56) = *(_QWORD *)(v116 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v115 + 64) = *(_QWORD *)(v116 + 64);
    *(_QWORD *)(v115 + 72) = *(_QWORD *)(v116 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + v48[19]) = *(uint64_t *)((char *)a2 + v48[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v48[20]) = *(uint64_t *)((char *)a2 + v48[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v48[21]) = *(uint64_t *)((char *)a2 + v48[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v125 = v48[22];
  v126 = a1 + v125;
  v127 = (__int128 *)((char *)a2 + v125);
  v128 = *(_QWORD *)(a1 + v125 + 32);
  v129 = *(uint64_t *)((char *)a2 + v125 + 32);
  if (v128)
  {
    if (v129)
    {
      *(_QWORD *)v126 = *(_QWORD *)v127;
      *(_QWORD *)(v126 + 8) = *((_QWORD *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v126 + 16) = *((_BYTE *)v127 + 16);
      *(_QWORD *)(v126 + 24) = *((_QWORD *)v127 + 3);
      *(_QWORD *)(v126 + 32) = *((_QWORD *)v127 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v126 + 40) = *((_QWORD *)v127 + 5);
      *(_QWORD *)(v126 + 48) = *((_QWORD *)v127 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_233326B80(v126);
      v131 = v127[1];
      v130 = v127[2];
      v132 = *v127;
      *(_QWORD *)(v126 + 48) = *((_QWORD *)v127 + 6);
      *(_OWORD *)(v126 + 16) = v131;
      *(_OWORD *)(v126 + 32) = v130;
      *(_OWORD *)v126 = v132;
    }
  }
  else if (v129)
  {
    *(_QWORD *)v126 = *(_QWORD *)v127;
    *(_QWORD *)(v126 + 8) = *((_QWORD *)v127 + 1);
    *(_BYTE *)(v126 + 16) = *((_BYTE *)v127 + 16);
    *(_QWORD *)(v126 + 24) = *((_QWORD *)v127 + 3);
    *(_QWORD *)(v126 + 32) = *((_QWORD *)v127 + 4);
    *(_QWORD *)(v126 + 40) = *((_QWORD *)v127 + 5);
    *(_QWORD *)(v126 + 48) = *((_QWORD *)v127 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v133 = *v127;
    v134 = v127[1];
    v135 = v127[2];
    *(_QWORD *)(v126 + 48) = *((_QWORD *)v127 + 6);
    *(_OWORD *)(v126 + 16) = v134;
    *(_OWORD *)(v126 + 32) = v135;
    *(_OWORD *)v126 = v133;
  }
  v136 = v48[23];
  v137 = (_QWORD *)(a1 + v136);
  v138 = (uint64_t *)((char *)a2 + v136);
  v139 = type metadata accessor for RawOrderProvider();
  v140 = *(_QWORD *)(v139 - 8);
  v141 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48);
  v142 = v141(v137, 1, v139);
  v143 = v141(v138, 1, v139);
  if (v142)
  {
    if (!v143)
    {
      *v137 = *v138;
      v137[1] = v138[1];
      v137[2] = v138[2];
      v137[3] = v138[3];
      v137[4] = v138[4];
      v137[5] = v138[5];
      v144 = *(int *)(v139 + 28);
      v145 = (char *)v137 + v144;
      v146 = (char *)v138 + v144;
      v170 = *(void (**)(char *, char *, uint64_t))(v168 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v147 = v172;
      v170(v145, v146, v172);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (v143)
  {
    sub_233168500((uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
LABEL_77:
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
    memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    v147 = v172;
    goto LABEL_78;
  }
  *v137 = *v138;
  v137[1] = v138[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v137[2] = v138[2];
  v137[3] = v138[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v137[4] = v138[4];
  v137[5] = v138[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v147 = v172;
  v167((uint64_t)v137 + *(int *)(v139 + 28), (char *)v138 + *(int *)(v139 + 28), v172);
LABEL_78:
  v149 = v48[24];
  v150 = (_BYTE *)(a1 + v149);
  v151 = (char *)a2 + v149;
  v152 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v171)(a1 + v149, 1, v147);
  v153 = ((uint64_t (*)(char *, uint64_t, uint64_t))v171)(v151, 1, v147);
  if (!v152)
  {
    if (!v153)
    {
      v167((uint64_t)v150, v151, v147);
      goto LABEL_84;
    }
    (*(void (**)(_BYTE *, uint64_t))(v168 + 8))(v150, v147);
    goto LABEL_83;
  }
  if (v153)
  {
LABEL_83:
    v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    goto LABEL_84;
  }
  (*(void (**)(_BYTE *, char *, uint64_t))(v168 + 16))(v150, v151, v147);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v150, 0, 1, v147);
LABEL_84:
  v155 = v48[25];
  v156 = (_QWORD *)(a1 + v155);
  v157 = (uint64_t *)((char *)a2 + v155);
  *v156 = *v157;
  v156[1] = v157[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v48[26]) = *(_WORD *)((char *)a2 + v48[26]);
  return a1;
}

uint64_t initializeWithTake for RawOrderContent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  void (*v19)(void *, const void *, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);

  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = (int *)type metadata accessor for RawMerchant();
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = v7[6];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v77 = v12;
  v78 = (unsigned int (*)(char *, uint64_t, uint64_t))v13;
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    v19 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  }
  else
  {
    v19 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v19(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  v19((void *)(a1 + v7[12]), (const void *)(a2 + v7[12]), v11);
  v20 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  *(_OWORD *)(a1 + v20[5]) = *(_OWORD *)(a2 + v20[5]);
  *(_OWORD *)(a1 + v20[6]) = *(_OWORD *)(a2 + v20[6]);
  *(_OWORD *)(a1 + v20[7]) = *(_OWORD *)(a2 + v20[7]);
  *(_BYTE *)(a1 + v20[8]) = *(_BYTE *)(a2 + v20[8]);
  *(_BYTE *)(a1 + v20[9]) = *(_BYTE *)(a2 + v20[9]);
  *(_OWORD *)(a1 + v20[10]) = *(_OWORD *)(a2 + v20[10]);
  v21 = v20[11];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23361D634();
  v25 = v11;
  v74 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
  v26(v22, v23, v24);
  v26(a1 + v20[12], a2 + v20[12], v24);
  v76 = v25;
  v19((void *)(a1 + v20[13]), (const void *)(a2 + v20[13]), v25);
  v27 = v20[14];
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = v29[3];
  v28[2] = v29[2];
  v28[3] = v30;
  v28[4] = v29[4];
  v31 = v29[1];
  *v28 = *v29;
  v28[1] = v31;
  v32 = v20[15];
  v33 = (char *)(a1 + v32);
  v34 = (char *)(a2 + v32);
  v35 = (int *)type metadata accessor for RawOrderReturnInfo();
  v36 = *((_QWORD *)v35 - 1);
  v75 = (void (*)(char *, char *, uint64_t))v19;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    v38 = v76;
    v39 = v77;
  }
  else
  {
    v72 = v36;
    v73 = v24;
    v71 = (void (*)(char *, char *, uint64_t))v26;
    v38 = v76;
    v19(v33, v34, v76);
    *(_OWORD *)&v33[v35[5]] = *(_OWORD *)&v34[v35[5]];
    v40 = v35[6];
    v41 = &v33[v40];
    v42 = &v34[v40];
    if (v78(&v34[v40], 1, v76))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v19(v41, v42, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v41, 0, 1, v76);
    }
    v44 = v35[7];
    v45 = &v33[v44];
    v46 = &v34[v44];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(&v34[v44], 1, v73))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v71(v45, v46, v73);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v45, 0, 1, v73);
    }
    v33[v35[8]] = v34[v35[8]];
    (*(void (**)(void))(v72 + 56))();
    v39 = v77;
  }
  *(_QWORD *)(a1 + v20[16]) = *(_QWORD *)(a2 + v20[16]);
  *(_QWORD *)(a1 + v20[17]) = *(_QWORD *)(a2 + v20[17]);
  v48 = v20[18];
  v49 = (_OWORD *)(a1 + v48);
  v50 = (_OWORD *)(a2 + v48);
  v51 = v50[4];
  v52 = v50[2];
  v49[3] = v50[3];
  v49[4] = v51;
  v53 = v50[1];
  *v49 = *v50;
  v49[1] = v53;
  v49[2] = v52;
  *(_QWORD *)(a1 + v20[19]) = *(_QWORD *)(a2 + v20[19]);
  *(_QWORD *)(a1 + v20[20]) = *(_QWORD *)(a2 + v20[20]);
  *(_QWORD *)(a1 + v20[21]) = *(_QWORD *)(a2 + v20[21]);
  v54 = v20[22];
  v55 = a1 + v54;
  v56 = (__int128 *)(a2 + v54);
  *(_QWORD *)(v55 + 48) = *((_QWORD *)v56 + 6);
  v57 = v56[2];
  v58 = *v56;
  *(_OWORD *)(v55 + 16) = v56[1];
  *(_OWORD *)(v55 + 32) = v57;
  *(_OWORD *)v55 = v58;
  v59 = v20[23];
  v60 = (_OWORD *)(a1 + v59);
  v61 = (_OWORD *)(a2 + v59);
  v62 = type metadata accessor for RawOrderProvider();
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v65 = v61[1];
    *v60 = *v61;
    v60[1] = v65;
    v60[2] = v61[2];
    v75((char *)v60 + *(int *)(v62 + 28), (char *)v61 + *(int *)(v62 + 28), v38);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  v66 = v20[24];
  v67 = (void *)(a1 + v66);
  v68 = (void *)(a2 + v66);
  if (v78((char *)(a2 + v66), 1, v38))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v75((char *)v67, (char *)v68, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v67, 0, 1, v38);
  }
  *(_OWORD *)(a1 + v20[25]) = *(_OWORD *)(a2 + v20[25]);
  *(_WORD *)(a1 + v20[26]) = *(_WORD *)(a2 + v20[26]);
  return a1;
}

uint64_t assignWithTake for RawOrderContent(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(void *, uint64_t, uint64_t);
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int *v93;
  uint64_t v94;
  uint64_t (*v95)(char *, uint64_t, int *);
  int v96;
  int v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  unsigned int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t (*v142)(char *, uint64_t, uint64_t);
  int v143;
  int v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  char *v150;
  unsigned int v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t (*v167)(char *, uint64_t, uint64_t);
  int v168;
  int v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t, uint64_t);
  _BYTE *__src;
  unsigned int (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;

  if (*(_QWORD *)a1 == 1)
    goto LABEL_4;
  if (*(_QWORD *)a2 == 1)
  {
    sub_233326AE4(a1);
LABEL_4:
    v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  v13 = (int *)type metadata accessor for RawMerchant();
  v14 = v13[5];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_23361D340();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v177 = (unsigned int (*)(char *, uint64_t, uint64_t))v19;
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_12:
  v23 = v13[6];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = v19((void *)(a1 + v23), 1, v17);
  v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_17:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_18:
  v29 = v13[7];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = v13[8];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = v13[9];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v44 = v13[10];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = v13[11];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v175 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v175(a1 + v13[12], a2 + v13[12], v17);
  v54 = (int *)type metadata accessor for RawECommerceOrderContent(0);
  v55 = v54[5];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)(a2 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = v54[6];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  v65 = v54[7];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (uint64_t *)(a2 + v65);
  v69 = *v67;
  v68 = v67[1];
  *v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v54[8]) = *(_BYTE *)(a2 + v54[8]);
  *(_BYTE *)(a1 + v54[9]) = *(_BYTE *)(a2 + v54[9]);
  v70 = v54[10];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (uint64_t *)(a2 + v70);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  v75 = v54[11];
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = sub_23361D634();
  v79 = *(_QWORD *)(v78 - 8);
  v80 = v18;
  v81 = v17;
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 40);
  v82(v76, v77, v78);
  v171 = (void (*)(char *, char *, uint64_t))v82;
  v82(a1 + v54[12], a2 + v54[12], v78);
  v83 = v81;
  v175(a1 + v54[13], a2 + v54[13], v81);
  v84 = v54[14];
  v85 = a1 + v84;
  v178 = a2;
  v86 = a2 + v84;
  v173 = v78;
  v174 = v80;
  v172 = v79;
  if (*(_QWORD *)(a1 + v84 + 40))
  {
    v87 = *(_QWORD *)(v86 + 40);
    if (v87)
    {
      *(_BYTE *)v85 = *(_BYTE *)v86;
      *(_DWORD *)(v85 + 8) = *(_DWORD *)(v86 + 8);
      *(_OWORD *)(v85 + 12) = *(_OWORD *)(v86 + 12);
      *(_QWORD *)(v85 + 32) = *(_QWORD *)(v86 + 32);
      *(_QWORD *)(v85 + 40) = v87;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v85 + 48) = *(_QWORD *)(v86 + 48);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v85 + 56) = *(_QWORD *)(v86 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v85 + 64) = *(_QWORD *)(v86 + 64);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v85 + 72) = *(_QWORD *)(v86 + 72);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_233326B18(v85);
  }
  v88 = *(_OWORD *)(v86 + 48);
  *(_OWORD *)(v85 + 32) = *(_OWORD *)(v86 + 32);
  *(_OWORD *)(v85 + 48) = v88;
  *(_OWORD *)(v85 + 64) = *(_OWORD *)(v86 + 64);
  v89 = *(_OWORD *)(v86 + 16);
  *(_OWORD *)v85 = *(_OWORD *)v86;
  *(_OWORD *)(v85 + 16) = v89;
LABEL_23:
  v90 = v54[15];
  v91 = (char *)(a1 + v90);
  v92 = (char *)(a2 + v90);
  v93 = (int *)type metadata accessor for RawOrderReturnInfo();
  v94 = *((_QWORD *)v93 - 1);
  v95 = *(uint64_t (**)(char *, uint64_t, int *))(v94 + 48);
  v96 = v95(v91, 1, v93);
  __src = v92;
  v97 = v95(v92, 1, v93);
  if (v96)
  {
    if (!v97)
    {
      v98 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
      v98(v91, v92, v83);
      *(_OWORD *)&v91[v93[5]] = *(_OWORD *)&v92[v93[5]];
      v99 = v93[6];
      v100 = &v91[v99];
      v101 = &v92[v99];
      if (v177(&v92[v99], 1, v83))
      {
        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v98(v100, v101, v83);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v100, 0, 1, v83);
      }
      v115 = v93[7];
      v116 = &v91[v115];
      v117 = &v92[v115];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(&v92[v115], 1, v173))
      {
        v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v116, v117, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v116, 0, 1, v173);
      }
      v91[v93[8]] = v92[v93[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v94 + 56))(v91, 0, 1, v93);
      goto LABEL_40;
    }
LABEL_29:
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
LABEL_40:
    v119 = v178;
    goto LABEL_41;
  }
  if (v97)
  {
    sub_233168500((uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderReturnInfo);
    goto LABEL_29;
  }
  v175((uint64_t)v91, (uint64_t)v92, v83);
  v104 = v93[5];
  v105 = &v91[v104];
  v106 = &v92[v104];
  v108 = *(_QWORD *)v106;
  v107 = *((_QWORD *)v106 + 1);
  *(_QWORD *)v105 = v108;
  *((_QWORD *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  v109 = v93[6];
  v110 = &v91[v109];
  v111 = &v92[v109];
  v112 = v177(&v91[v109], 1, v83);
  v113 = v177(v111, 1, v83);
  if (v112)
  {
    v114 = v172;
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v110, v111, v83);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v110, 0, 1, v83);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  v114 = v172;
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v174 + 8))(v110, v83);
LABEL_69:
    v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    goto LABEL_70;
  }
  v175((uint64_t)v110, (uint64_t)v111, v83);
LABEL_70:
  v164 = v93[7];
  v165 = &v91[v164];
  v166 = &__src[v164];
  v167 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  v168 = v167(&v91[v164], 1, v173);
  v169 = v167(v166, 1, v173);
  if (!v168)
  {
    if (!v169)
    {
      v171(v165, v166, v173);
      goto LABEL_76;
    }
    (*(void (**)(char *, uint64_t))(v172 + 8))(v165, v173);
    goto LABEL_75;
  }
  if (v169)
  {
LABEL_75:
    v170 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v165, v166, v173);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v165, 0, 1, v173);
LABEL_76:
  v119 = v178;
  v91[v93[8]] = __src[v93[8]];
LABEL_41:
  *(_QWORD *)(a1 + v54[16]) = *(_QWORD *)(v119 + v54[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v54[17]) = *(_QWORD *)(v119 + v54[17]);
  swift_bridgeObjectRelease();
  v120 = v54[18];
  v121 = a1 + v120;
  v122 = v119 + v120;
  if (*(_QWORD *)(a1 + v120 + 8) == 1)
  {
LABEL_44:
    v124 = *(_OWORD *)(v122 + 48);
    *(_OWORD *)(v121 + 32) = *(_OWORD *)(v122 + 32);
    *(_OWORD *)(v121 + 48) = v124;
    *(_OWORD *)(v121 + 64) = *(_OWORD *)(v122 + 64);
    v125 = *(_OWORD *)(v122 + 16);
    *(_OWORD *)v121 = *(_OWORD *)v122;
    *(_OWORD *)(v121 + 16) = v125;
    goto LABEL_46;
  }
  v123 = *(_QWORD *)(v122 + 8);
  if (v123 == 1)
  {
    sub_233326B4C(v121);
    goto LABEL_44;
  }
  *(_QWORD *)v121 = *(_QWORD *)v122;
  *(_QWORD *)(v121 + 8) = v123;
  swift_bridgeObjectRelease();
  v126 = *(_QWORD *)(v122 + 24);
  *(_QWORD *)(v121 + 16) = *(_QWORD *)(v122 + 16);
  *(_QWORD *)(v121 + 24) = v126;
  swift_bridgeObjectRelease();
  v127 = *(_QWORD *)(v122 + 40);
  *(_QWORD *)(v121 + 32) = *(_QWORD *)(v122 + 32);
  *(_QWORD *)(v121 + 40) = v127;
  swift_bridgeObjectRelease();
  v128 = *(_QWORD *)(v122 + 56);
  *(_QWORD *)(v121 + 48) = *(_QWORD *)(v122 + 48);
  *(_QWORD *)(v121 + 56) = v128;
  swift_bridgeObjectRelease();
  v129 = *(_QWORD *)(v122 + 72);
  *(_QWORD *)(v121 + 64) = *(_QWORD *)(v122 + 64);
  *(_QWORD *)(v121 + 72) = v129;
  swift_bridgeObjectRelease();
LABEL_46:
  *(_QWORD *)(a1 + v54[19]) = *(_QWORD *)(v119 + v54[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v54[20]) = *(_QWORD *)(v119 + v54[20]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v54[21]) = *(_QWORD *)(v119 + v54[21]);
  swift_bridgeObjectRelease();
  v130 = v54[22];
  v131 = a1 + v130;
  v132 = v119 + v130;
  if (*(_QWORD *)(a1 + v130 + 32))
  {
    if (*(_QWORD *)(v132 + 32))
    {
      v133 = *(_QWORD *)(v132 + 8);
      *(_QWORD *)v131 = *(_QWORD *)v132;
      *(_QWORD *)(v131 + 8) = v133;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v131 + 16) = *(_BYTE *)(v132 + 16);
      v134 = *(_QWORD *)(v132 + 32);
      *(_QWORD *)(v131 + 24) = *(_QWORD *)(v132 + 24);
      *(_QWORD *)(v131 + 32) = v134;
      swift_bridgeObjectRelease();
      v135 = *(_QWORD *)(v132 + 48);
      *(_QWORD *)(v131 + 40) = *(_QWORD *)(v132 + 40);
      *(_QWORD *)(v131 + 48) = v135;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_233326B80(v131);
  }
  v136 = *(_OWORD *)(v132 + 16);
  *(_OWORD *)v131 = *(_OWORD *)v132;
  *(_OWORD *)(v131 + 16) = v136;
  *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
  *(_QWORD *)(v131 + 48) = *(_QWORD *)(v132 + 48);
LABEL_51:
  v137 = v54[23];
  v138 = (char *)(a1 + v137);
  v139 = (char *)(v119 + v137);
  v140 = type metadata accessor for RawOrderProvider();
  v141 = *(_QWORD *)(v140 - 8);
  v142 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
  v143 = v142(v138, 1, v140);
  v144 = v142(v139, 1, v140);
  if (v143)
  {
    if (!v144)
    {
      v145 = *((_OWORD *)v139 + 1);
      *(_OWORD *)v138 = *(_OWORD *)v139;
      *((_OWORD *)v138 + 1) = v145;
      *((_OWORD *)v138 + 2) = *((_OWORD *)v139 + 2);
      v146 = v174;
      (*(void (**)(char *, char *, uint64_t))(v174 + 32))(&v138[*(int *)(v140 + 28)], &v139[*(int *)(v140 + 28)], v83);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v144)
    {
      v160 = *((_QWORD *)v139 + 1);
      *(_QWORD *)v138 = *(_QWORD *)v139;
      *((_QWORD *)v138 + 1) = v160;
      swift_bridgeObjectRelease();
      v161 = *((_QWORD *)v139 + 3);
      *((_QWORD *)v138 + 2) = *((_QWORD *)v139 + 2);
      *((_QWORD *)v138 + 3) = v161;
      swift_bridgeObjectRelease();
      v162 = *((_QWORD *)v139 + 5);
      *((_QWORD *)v138 + 4) = *((_QWORD *)v139 + 4);
      *((_QWORD *)v138 + 5) = v162;
      swift_bridgeObjectRelease();
      v175((uint64_t)&v138[*(int *)(v140 + 28)], (uint64_t)&v139[*(int *)(v140 + 28)], v83);
      goto LABEL_57;
    }
    sub_233168500((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderProvider);
  }
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
  memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
LABEL_57:
  v146 = v174;
LABEL_58:
  v148 = v54[24];
  v149 = (void *)(a1 + v148);
  v150 = (char *)(v178 + v148);
  v151 = v177((char *)(a1 + v148), 1, v83);
  v152 = v177(v150, 1, v83);
  if (!v151)
  {
    if (!v152)
    {
      v175((uint64_t)v149, (uint64_t)v150, v83);
      goto LABEL_64;
    }
    (*(void (**)(void *, uint64_t))(v146 + 8))(v149, v83);
    goto LABEL_63;
  }
  if (v152)
  {
LABEL_63:
    v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(void *, char *, uint64_t))(v146 + 32))(v149, v150, v83);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v149, 0, 1, v83);
LABEL_64:
  v154 = v54[25];
  v155 = (_QWORD *)(a1 + v154);
  v156 = (uint64_t *)(v178 + v154);
  v158 = *v156;
  v157 = v156[1];
  *v155 = v158;
  v155[1] = v157;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v54[26]) = *(_WORD *)(v178 + v54[26]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawOrderContent()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23346FFA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for RawMerchant();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[11];
    }
    else
    {
      v16 = sub_23361D340();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[13];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[15];
        }
        else
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
          {
            v8 = v18;
            v15 = a3[23];
          }
          else
          {
            v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            v14 = *(_QWORD *)(v8 - 8);
            v15 = a3[24];
          }
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderContent()
{
  type metadata accessor for RawECommerceOrderContent(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23347013C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = type metadata accessor for RawMerchant();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_23361D634();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[11];
    }
    else
    {
      v16 = sub_23361D340();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[13];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A468);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[15];
        }
        else
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25604A470);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[23];
          }
          else
          {
            v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
            v14 = *(_QWORD *)(v10 - 8);
            v15 = a4[24];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_233470280(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for RawECommerceOrderContent(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.SchemaVersion()
{
  return &type metadata for RawOrderContent.SchemaVersion;
}

uint64_t storeEnumTagSinglePayload for RawOrderContent.OrderType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23347032C + 4 * asc_23364EE10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23347034C + 4 * byte_23364EE15[v4]))();
}

_BYTE *sub_23347032C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23347034C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233470354(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23347035C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233470364(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23347036C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.OrderType()
{
  return &type metadata for RawOrderContent.OrderType;
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RawOrderContentDecodingError(unsigned __int16 *a1, int a2)
{
  int v2;
  int v3;
  int v4;

  if (!a2)
    return 0;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if ((a2 + 0xFFFF) < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 0xFFFF;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        return 0;
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 0xFFFF;
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for RawOrderContentDecodingError(_WORD *a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 0xFFFF) <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if ((a3 + 0xFFFF) < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (!a2)
    return ((uint64_t (*)(void))((char *)sub_23347047C + 4 * byte_23364EE1F[v4]))();
  *a1 = a2 - 1;
  return ((uint64_t (*)(void))((char *)sub_23347045C + 4 * byte_23364EE1A[v4]))();
}

uint64_t sub_23347045C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23347047C(uint64_t result)
{
  *(_BYTE *)(result + 2) = 0;
  return result;
}

uint64_t sub_233470484(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23347048C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_233470494(uint64_t result)
{
  *(_WORD *)(result + 2) = 0;
  return result;
}

uint64_t sub_23347049C(uint64_t result)
{
  *(_DWORD *)(result + 2) = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContentDecodingError()
{
  return &type metadata for RawOrderContentDecodingError;
}

uint64_t __swift_memcpy3_2(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RawOrderContent.DecodingConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *((unsigned __int8 *)a1 + 2);
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for RawOrderContent.DecodingConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 2) = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.DecodingConfiguration()
{
  return &type metadata for RawOrderContent.DecodingConfiguration;
}

uint64_t storeEnumTagSinglePayload for RawOrderContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233470634 + 4 * byte_23364EE29[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233470668 + 4 * byte_23364EE24[v4]))();
}

uint64_t sub_233470668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233470670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233470678);
  return result;
}

uint64_t sub_233470684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23347068CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233470690(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233470698(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawOrderContent.CodingKeys()
{
  return &type metadata for RawOrderContent.CodingKeys;
}

unint64_t sub_2334706B8()
{
  unint64_t result;

  result = qword_256050EF8;
  if (!qword_256050EF8)
  {
    result = MEMORY[0x234934494](&unk_23364F31C, &type metadata for RawOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050EF8);
  }
  return result;
}

unint64_t sub_233470700()
{
  unint64_t result;

  result = qword_256050F00;
  if (!qword_256050F00)
  {
    result = MEMORY[0x234934494](&unk_23364F254, &type metadata for RawOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050F00);
  }
  return result;
}

unint64_t sub_233470748()
{
  unint64_t result;

  result = qword_256050F08;
  if (!qword_256050F08)
  {
    result = MEMORY[0x234934494](&unk_23364F27C, &type metadata for RawOrderContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050F08);
  }
  return result;
}

unint64_t sub_23347078C()
{
  unint64_t result;

  result = qword_256050F10;
  if (!qword_256050F10)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.OrderType, &type metadata for RawOrderContent.OrderType);
    atomic_store(result, (unint64_t *)&qword_256050F10);
  }
  return result;
}

unint64_t sub_2334707D0()
{
  unint64_t result;

  result = qword_256050F18;
  if (!qword_256050F18)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawOrderContent.SchemaVersion, &type metadata for RawOrderContent.SchemaVersion);
    atomic_store(result, (unint64_t *)&qword_256050F18);
  }
  return result;
}

uint64_t OrderWebServiceRegisterRequest.deviceLibraryIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.deviceLibraryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.deviceLibraryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.orderTypeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.orderIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.authenticationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.authenticationToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.pushToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_2331D1374(v1, *(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.pushToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23316BEA4(*(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.pushToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.init(deviceLibraryIdentifier:orderTypeIdentifier:orderIdentifier:authenticationToken:pushToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

_QWORD *OrderWebServiceRegisterRequest.pathComponents.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int64_t v29;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = 12662;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  swift_bridgeObjectRetain();
  v8 = sub_2334A4AA4((_QWORD *)1, 3, 1, (_QWORD *)inited);
  v10 = v8[2];
  v9 = v8[3];
  v11 = v10 + 1;
  if (v10 >= v9 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v11;
  v12 = &v8[2 * v10];
  v12[4] = 0x73656369766564;
  v12[5] = 0xE700000000000000;
  v13 = v8[3];
  v14 = v10 + 2;
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v13 > 1), v14, 1, v8);
  v8[2] = v14;
  v15 = &v8[2 * v11];
  v15[4] = v2;
  v15[5] = v1;
  swift_bridgeObjectRelease();
  v16 = v8[2];
  v17 = v16 + 3;
  if (__OFADD__(v16, 3))
  {
    __break(1u);
  }
  else
  {
    v18 = v8[3];
    v19 = v18 >> 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((uint64_t)(v18 >> 1) >= v17)
      goto LABEL_7;
  }
  if (v16 <= v17)
    v29 = v16 + 3;
  else
    v29 = v16;
  v8 = sub_2334A4AA4((_QWORD *)1, v29, 1, v8);
  v16 = v8[2];
  v18 = v8[3];
  v19 = v18 >> 1;
LABEL_7:
  v20 = v16 + 1;
  if (v19 <= v16)
    v8 = sub_2334A4AA4((_QWORD *)(v18 > 1), v16 + 1, 1, v8);
  v8[2] = v20;
  v21 = (char *)&v8[2 * v16];
  strcpy(v21 + 32, "registrations");
  *((_WORD *)v21 + 23) = -4864;
  v22 = v8[3];
  v23 = v16 + 2;
  swift_bridgeObjectRetain();
  if (v20 >= v22 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v22 > 1), v23, 1, v8);
  v8[2] = v23;
  v24 = &v8[2 * v20];
  v24[4] = v4;
  v24[5] = v3;
  v25 = v8[2];
  v26 = v8[3];
  swift_bridgeObjectRetain();
  if (v25 >= v26 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v26 > 1), v25 + 1, 1, v8);
  v8[2] = v25 + 1;
  v27 = &v8[2 * v25];
  v27[4] = v6;
  v27[5] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void OrderWebServiceRegisterRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.pushToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2331D1374(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.pushToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23316BEA4(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*OrderWebServiceRegisterRequest.JSONBody.pushToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.init(pushToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void static OrderWebServiceRegisterRequest.JSONBody.== infix(_:_:)(uint64_t *a1)
{
  sub_2334C71D4(*a1, a1[1]);
}

uint64_t sub_233470DB0()
{
  return 0x656B6F5468737570;
}

uint64_t sub_233470DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656B6F5468737570 && a2 == 0xE90000000000006ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233470E6C()
{
  sub_2334734D8();
  return sub_23361F428();
}

uint64_t sub_233470E94()
{
  sub_2334734D8();
  return sub_23361F434();
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050F20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334734D8();
  sub_23361F410();
  v10[0] = v8;
  v10[1] = v7;
  sub_2331A6BA8();
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OrderWebServiceRegisterRequest.JSONBody.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050F30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334734D8();
  sub_23361F3EC();
  if (!v2)
  {
    sub_2331A6B08();
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2334710DC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return OrderWebServiceRegisterRequest.JSONBody.init(from:)(a1, a2);
}

uint64_t sub_2334710F0(_QWORD *a1)
{
  return OrderWebServiceRegisterRequest.JSONBody.encode(to:)(a1);
}

uint64_t OrderWebServiceRegisterRequest.jsonBody.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  *a1 = v2;
  a1[1] = v3;
  return sub_2331D1374(v2, v3);
}

uint64_t OrderWebServiceRegisterRequest.makeAdditionalHTTPHeaderFields()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  strcpy((char *)(v0 + 32), "Authorization");
  *(_WORD *)(v0 + 46) = -4864;
  *(_QWORD *)(v0 + 48) = 0x64724F656C707041;
  *(_QWORD *)(v0 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OrderWebServiceRegisterRequest.makeJSONEncoder()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_23361CAB8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23361CB00();
  swift_allocObject();
  v4 = sub_23361CAF4();
  *v3 = sub_233471294;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCB328], v0);
  sub_23361CAD0();
  return v4;
}

uint64_t sub_233471294(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_23361F404();
  sub_2331D1374(a1, a2);
  sub_2331D32A4(a1, a2);
  sub_23316BEA4(a1, a2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  sub_23361F260();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t sub_233471368@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  *a1 = v2;
  a1[1] = v3;
  return sub_2331D1374(v2, v3);
}

uint64_t sub_233471374()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  strcpy((char *)(v0 + 32), "Authorization");
  *(_WORD *)(v0 + 46) = -4864;
  *(_QWORD *)(v0 + 48) = 0x64724F656C707041;
  *(_QWORD *)(v0 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_233471448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_23361CAB8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23361CB00();
  swift_allocObject();
  v4 = sub_23361CAF4();
  *v3 = sub_233471294;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCB328], v0);
  sub_23361CAD0();
  return v4;
}

uint64_t OrderWebServiceRegisterResponse.hash(into:)()
{
  return sub_23361F35C();
}

BOOL static OrderWebServiceRegisterResponse.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void static OrderWebServiceRegisterResponse.parse(_:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t *v9;
  uint64_t *v10;
  id v11;
  _QWORD *v12;

  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v10 = v9;
    *v9 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v10[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v10[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v11 = a1;
    swift_willThrow();
    return;
  }
  v5 = (void *)v4;
  v6 = a1;
  v7 = objc_msgSend(v5, sel_statusCode);
  if (v7 == (id)401)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
  }
  else
  {
    v8 = v7;
    if (v7 == (id)201)
    {

      *a2 = 0;
      return;
    }
    if (v7 == (id)200)
    {

      *a2 = 1;
      return;
    }
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v12 = v8;
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

}

uint64_t (*OrderWebServiceUnregisterRequest.deviceLibraryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*OrderWebServiceUnregisterRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*OrderWebServiceUnregisterRequest.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceUnregisterRequest.authenticationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceUnregisterRequest.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*OrderWebServiceUnregisterRequest.authenticationToken.modify())()
{
  return nullsub_1;
}

void __swiftcall OrderWebServiceUnregisterRequest.init(deviceLibraryIdentifier:orderTypeIdentifier:orderIdentifier:authenticationToken:)(FinanceKit::OrderWebServiceUnregisterRequest *__return_ptr retstr, Swift::String deviceLibraryIdentifier, Swift::String orderTypeIdentifier, Swift::String orderIdentifier, Swift::String authenticationToken)
{
  retstr->deviceLibraryIdentifier = deviceLibraryIdentifier;
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->orderIdentifier = orderIdentifier;
  retstr->authenticationToken = authenticationToken;
}

_QWORD *OrderWebServiceUnregisterRequest.pathComponents.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int64_t v29;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  *(_QWORD *)(inited + 32) = 12662;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  swift_bridgeObjectRetain();
  v8 = sub_2334A4AA4((_QWORD *)1, 3, 1, (_QWORD *)inited);
  v10 = v8[2];
  v9 = v8[3];
  v11 = v10 + 1;
  if (v10 >= v9 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v8[2] = v11;
  v12 = &v8[2 * v10];
  v12[4] = 0x73656369766564;
  v12[5] = 0xE700000000000000;
  v13 = v8[3];
  v14 = v10 + 2;
  swift_bridgeObjectRetain();
  if (v11 >= v13 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v13 > 1), v14, 1, v8);
  v8[2] = v14;
  v15 = &v8[2 * v11];
  v15[4] = v2;
  v15[5] = v1;
  swift_bridgeObjectRelease();
  v16 = v8[2];
  v17 = v16 + 3;
  if (__OFADD__(v16, 3))
  {
    __break(1u);
  }
  else
  {
    v18 = v8[3];
    v19 = v18 >> 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((uint64_t)(v18 >> 1) >= v17)
      goto LABEL_7;
  }
  if (v16 <= v17)
    v29 = v16 + 3;
  else
    v29 = v16;
  v8 = sub_2334A4AA4((_QWORD *)1, v29, 1, v8);
  v16 = v8[2];
  v18 = v8[3];
  v19 = v18 >> 1;
LABEL_7:
  v20 = v16 + 1;
  if (v19 <= v16)
    v8 = sub_2334A4AA4((_QWORD *)(v18 > 1), v16 + 1, 1, v8);
  v8[2] = v20;
  v21 = (char *)&v8[2 * v16];
  strcpy(v21 + 32, "registrations");
  *((_WORD *)v21 + 23) = -4864;
  v22 = v8[3];
  v23 = v16 + 2;
  swift_bridgeObjectRetain();
  if (v20 >= v22 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v22 > 1), v23, 1, v8);
  v8[2] = v23;
  v24 = &v8[2 * v20];
  v24[4] = v4;
  v24[5] = v3;
  v25 = v8[2];
  v26 = v8[3];
  swift_bridgeObjectRetain();
  if (v25 >= v26 >> 1)
    v8 = sub_2334A4AA4((_QWORD *)(v26 > 1), v25 + 1, 1, v8);
  v8[2] = v25 + 1;
  v27 = &v8[2 * v25];
  v27[4] = v6;
  v27[5] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void OrderWebServiceUnregisterRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t OrderWebServiceUnregisterRequest.makeHTTPHeaderFields()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  strcpy((char *)(v0 + 32), "Authorization");
  *(_WORD *)(v0 + 46) = -4864;
  *(_QWORD *)(v0 + 48) = 0x64724F656C707041;
  *(_QWORD *)(v0 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  return v0;
}

void sub_233471B70(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static OrderWebServiceUnregisterResponse.parse(_:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t *v9;
  uint64_t *v10;
  id v11;
  _QWORD *v12;

  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    v7 = objc_msgSend(v5, sel_statusCode);
    if (v7 == (id)404)
    {

      *a2 = 1;
    }
    else
    {
      v8 = v7;
      if (v7 == (id)401)
      {
        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
      }
      else
      {
        if (v7 == (id)200)
        {

          *a2 = 0;
          return;
        }
        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        *v12 = v8;
      }
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

    }
  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v10 = v9;
    *v9 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v10[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v10[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v11 = a1;
    swift_willThrow();
  }
}

uint64_t OrderWebServiceFetchRequest.orderTypeIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchRequest.orderIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchRequest.authenticationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.authenticationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.authenticationToken.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchRequest.lastModifiedValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchRequest.lastModifiedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchRequest.lastModifiedValue.modify())()
{
  return nullsub_1;
}

BOOL OrderWebServiceFetchRequest.isConditional.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56) != 0;
}

void __swiftcall OrderWebServiceFetchRequest.init(orderTypeIdentifier:orderIdentifier:authenticationToken:lastModifiedValue:)(FinanceKit::OrderWebServiceFetchRequest *__return_ptr retstr, Swift::String orderTypeIdentifier, Swift::String orderIdentifier, Swift::String authenticationToken, Swift::String_optional lastModifiedValue)
{
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->orderIdentifier = orderIdentifier;
  retstr->authenticationToken = authenticationToken;
  retstr->lastModifiedValue = lastModifiedValue;
}

uint64_t OrderWebServiceFetchRequest.pathComponents.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23362AF00;
  *(_QWORD *)(v5 + 32) = 12662;
  *(_QWORD *)(v5 + 40) = 0xE200000000000000;
  *(_QWORD *)(v5 + 48) = 0x73726564726FLL;
  *(_QWORD *)(v5 + 56) = 0xE600000000000000;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v1;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 88) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t OrderWebServiceFetchRequest.makeHTTPHeaderFields()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233623D60;
  swift_bridgeObjectRetain();
  sub_23361E27C();
  strcpy((char *)(v3 + 32), "Authorization");
  *(_WORD *)(v3 + 46) = -4864;
  *(_QWORD *)(v3 + 48) = 0x64724F656C707041;
  *(_QWORD *)(v3 + 56) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t)sub_2334A4BB0((_QWORD *)1, 2, 1, (_QWORD *)v3);
    *(_QWORD *)(v3 + 16) = 2;
    *(_QWORD *)(v3 + 64) = 0xD000000000000011;
    *(_QWORD *)(v3 + 72) = 0x8000000233670920;
    *(_QWORD *)(v3 + 80) = v2;
    *(_QWORD *)(v3 + 88) = v1;
  }
  return v3;
}

uint64_t sub_23347210C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23362AF00;
  *(_QWORD *)(v5 + 32) = 12662;
  *(_QWORD *)(v5 + 40) = 0xE200000000000000;
  *(_QWORD *)(v5 + 48) = 0x73726564726FLL;
  *(_QWORD *)(v5 + 56) = 0xE600000000000000;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v1;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 88) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_2334721A0()
{
  return OrderWebServiceFetchRequest.makeHTTPHeaderFields()();
}

uint64_t OrderWebServiceFetchResponseContext.orderTypeIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchResponseContext.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchResponseContext.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchResponseContext.orderIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchResponseContext.orderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchResponseContext.orderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchResponseContext.requestWasConditional.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t OrderWebServiceFetchResponseContext.requestWasConditional.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*OrderWebServiceFetchResponseContext.requestWasConditional.modify())()
{
  return nullsub_1;
}

void __swiftcall OrderWebServiceFetchResponseContext.init(orderTypeIdentifier:orderIdentifier:requestWasConditional:)(FinanceKit::OrderWebServiceFetchResponseContext *__return_ptr retstr, Swift::String orderTypeIdentifier, Swift::String orderIdentifier, Swift::Bool requestWasConditional)
{
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->orderIdentifier = orderIdentifier;
  retstr->requestWasConditional = requestWasConditional;
}

uint64_t OrderWebServiceFetchResponseContext.fullyQualifiedOrderIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_2334722F8(__int128 *a1, __int128 *a2)
{
  __int128 v4[2];
  __int128 v5[2];

  sub_23318B020(a1, (uint64_t)v4);
  sub_23318B020(a2, (uint64_t)v5);
  return _s10FinanceKit28OrderWebServiceFetchResponseO2eeoiySbAC_ACtFZ_0(v4, v5);
}

void static OrderWebServiceFetchResponse.parse(data:urlResponse:responseContext:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  __int128 v7[2];

  sub_233473CE4(a1, a2, a3, a4, (uint64_t **)v7);
  if (!v5)
    sub_23318B020(v7, a5);
}

uint64_t OrderWebServiceFetchChangesRequest.deviceLibraryIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchChangesRequest.deviceLibraryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesRequest.deviceLibraryIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesRequest.orderTypeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchChangesRequest.orderTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesRequest.orderTypeIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesRequest.lastModifiedValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OrderWebServiceFetchChangesRequest.lastModifiedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesRequest.lastModifiedValue.modify())()
{
  return nullsub_1;
}

void __swiftcall OrderWebServiceFetchChangesRequest.init(deviceLibraryIdentifier:orderTypeIdentifier:lastModifiedValue:)(FinanceKit::OrderWebServiceFetchChangesRequest *__return_ptr retstr, Swift::String deviceLibraryIdentifier, Swift::String orderTypeIdentifier, Swift::String_optional lastModifiedValue)
{
  retstr->deviceLibraryIdentifier = deviceLibraryIdentifier;
  retstr->orderTypeIdentifier = orderTypeIdentifier;
  retstr->lastModifiedValue = lastModifiedValue;
}

uint64_t OrderWebServiceFetchChangesRequest.pathComponents.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254247308);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233626370;
  *(_QWORD *)(v5 + 32) = 12662;
  *(_QWORD *)(v5 + 40) = 0xE200000000000000;
  *(_QWORD *)(v5 + 48) = 0x73656369766564;
  *(_QWORD *)(v5 + 56) = 0xE700000000000000;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v1;
  strcpy((char *)(v5 + 80), "registrations");
  *(_WORD *)(v5 + 94) = -4864;
  *(_QWORD *)(v5 + 96) = v4;
  *(_QWORD *)(v5 + 104) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t OrderWebServiceFetchChangesRequest.queryItems.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 40))
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051270);
  sub_23361CBC0();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_233623D60;
  sub_23361CBB4();
  return v1;
}

void OrderWebServiceFetchChangesRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_233472660()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 40))
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051270);
  sub_23361CBC0();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_233623D60;
  sub_23361CBB4();
  return v1;
}

uint64_t OrderWebServiceFetchChangesResponse.orderIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderWebServiceFetchChangesResponse.orderIdentifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesResponse.orderIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesResponse.lastModifiedValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*OrderWebServiceFetchChangesResponse.lastModifiedValue.modify())()
{
  return nullsub_1;
}

FinanceKit::OrderWebServiceFetchChangesResponse __swiftcall OrderWebServiceFetchChangesResponse.init(orderIdentifiers:lastModifiedValue:)(Swift::OpaquePointer orderIdentifiers, Swift::String_optional lastModifiedValue)
{
  uint64_t v2;
  FinanceKit::OrderWebServiceFetchChangesResponse result;

  *(Swift::OpaquePointer *)v2 = orderIdentifiers;
  *(Swift::String_optional *)(v2 + 8) = lastModifiedValue;
  result.lastModifiedValue = lastModifiedValue;
  result.orderIdentifiers = orderIdentifiers;
  return result;
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.orderIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.orderIdentifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesResponse.JSONBody.orderIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t _s10FinanceKit35OrderWebServiceFetchChangesResponseV17lastModifiedValueSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*OrderWebServiceFetchChangesResponse.JSONBody.lastModified.modify())()
{
  return nullsub_1;
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.init(orderIdentifiers:lastModified:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_233472834()
{
  _BYTE *v0;

  if (*v0)
    return 0x69646F4D7473616CLL;
  else
    return 0xD000000000000010;
}

uint64_t sub_23347287C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233475288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2334728A0()
{
  sub_23347420C();
  return sub_23361F428();
}

uint64_t sub_2334728C8()
{
  sub_23347420C();
  return sub_23361F434();
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050F38);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v11[1] = v1[2];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23347420C();
  sub_23361F410();
  v14 = v9;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23361F110();
  if (!v2)
  {
    v12 = 1;
    sub_23361F0E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OrderWebServiceFetchChangesResponse.JSONBody.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050F48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23347420C();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    v14[15] = 0;
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361EFFC();
    v9 = v15;
    v14[14] = 1;
    swift_bridgeObjectRetain();
    v11 = sub_23361EFCC();
    v13 = v12;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v13;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233472C38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return OrderWebServiceFetchChangesResponse.JSONBody.init(from:)(a1, a2);
}

uint64_t sub_233472C4C(_QWORD *a1)
{
  return OrderWebServiceFetchChangesResponse.JSONBody.encode(to:)(a1);
}

void static OrderWebServiceFetchChangesResponse.parse(data:urlResponse:)(void *a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (!v5)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v12 = v11;
    *v11 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v12[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v12[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v13 = a1;
    swift_willThrow();
    return;
  }
  v6 = (void *)v5;
  v7 = a1;
  v8 = objc_msgSend(v6, sel_statusCode);
  if (v8 == (id)401)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
  }
  else
  {
    v9 = v8;
    if (v8 == (id)204)
    {

      v14 = MEMORY[0x24BEE4AF8];
      a2[1] = 0;
      a2[2] = 0;
      *a2 = v14;
      return;
    }
    if (v8 == (id)200)
    {
      sub_23361CA70();
      swift_allocObject();
      sub_23361CA64();
      sub_233474250();
      sub_23361CA58();
      if (v2)
      {
        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        *v10 = v2;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        swift_release();
        return;
      }
      swift_release();
      v16 = MEMORY[0x24BEE4AF8];
      if (v17)
        v16 = v17;
      *a2 = v16;
      *(_OWORD *)(a2 + 1) = v18;
      goto LABEL_12;
    }
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v15 = v9;
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_12:

}

uint64_t OrderWebServiceLogRequest.logEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderWebServiceLogRequest.logEntries.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OrderWebServiceLogRequest.logEntries.modify())()
{
  return nullsub_1;
}

FinanceKit::OrderWebServiceLogRequest __swiftcall OrderWebServiceLogRequest.init(logEntries:)(FinanceKit::OrderWebServiceLogRequest logEntries)
{
  FinanceKit::OrderWebServiceLogRequest *v1;

  v1->logEntries._rawValue = logEntries.logEntries._rawValue;
  return logEntries;
}

void *OrderWebServiceLogRequest.pathComponents.getter()
{
  return &unk_250467AA8;
}

void OrderWebServiceLogRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t (*OrderWebServiceLogRequest.JSONBody.logs.modify())()
{
  return nullsub_1;
}

uint64_t static OrderWebServiceLogRequest.JSONBody.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  return sub_23322B8BC(*a1, *a2);
}

uint64_t sub_233472FDC()
{
  return 1936158572;
}

uint64_t sub_233472FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1936158572 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23361F224();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233473070()
{
  sub_233474294();
  return sub_23361F428();
}

uint64_t sub_233473098()
{
  sub_233474294();
  return sub_23361F434();
}

uint64_t OrderWebServiceLogRequest.JSONBody.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050F58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233474294();
  sub_23361F410();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
  sub_23317242C(&qword_2560425A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OrderWebServiceLogRequest.JSONBody.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256050F68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233474294();
  sub_23361F3EC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_23317242C((unint64_t *)&qword_2560425E8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233473320@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return OrderWebServiceLogRequest.JSONBody.init(from:)(a1, a2);
}

uint64_t sub_233473334(_QWORD *a1)
{
  return OrderWebServiceLogRequest.JSONBody.encode(to:)(a1);
}

uint64_t OrderWebServiceLogRequest.jsonBody.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_233473354@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void *sub_233473360()
{
  return &unk_250467AA8;
}

void static OrderWebServiceLogResponse.validate(_:)(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  id v10;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)200)
    {
      v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      swift_allocError();
      *v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }

  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v9 = v8;
    *v8 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v9[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
    swift_willThrow();
  }
}

unint64_t sub_2334734D8()
{
  unint64_t result;

  result = qword_256050F28;
  if (!qword_256050F28)
  {
    result = MEMORY[0x234934494](&unk_23364FBB0, &type metadata for OrderWebServiceRegisterRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050F28);
  }
  return result;
}

BOOL _s10FinanceKit28OrderWebServiceFetchResponseO2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v12;
  uint64_t v13;
  _QWORD v14[5];
  _QWORD v15[5];

  sub_23318B020(a1, (uint64_t)v15);
  if (!v15[0])
  {
    sub_23318B020(a2, (uint64_t)v14);
    return v14[0] == 0;
  }
  v4 = v15[1];
  v3 = v15[2];
  v6 = v15[3];
  v5 = v15[4];
  sub_23318B020(a2, (uint64_t)v14);
  if (!v14[0])
    return 0;
  v8 = v14[1];
  v7 = v14[2];
  v9 = v14[4];
  v13 = v14[3];
  sub_23361DE5C();
  swift_retain();
  swift_retain();
  sub_2331D1374(v4, v3);
  sub_2331D1374(v8, v7);
  sub_233167C58(&qword_25604CEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC62E8]);
  if ((sub_23361E00C() & 1) == 0 || (sub_2334C71D4(v4, v3), (v10 & 1) == 0))
  {
    sub_23316BEA4(v8, v7);
    sub_23316BEA4(v4, v3);
LABEL_12:
    swift_release();
    swift_release();
    return 0;
  }
  if (!v5)
  {
    swift_bridgeObjectRetain();
    sub_23316BEA4(v8, v7);
    sub_23316BEA4(v4, v3);
    swift_release();
    swift_release();
    if (!v9)
      return 1;
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v9)
  {
    swift_bridgeObjectRetain();
    sub_23316BEA4(v8, v7);
    sub_23316BEA4(v4, v3);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v6 == v13 && v5 == v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23316BEA4(v8, v7);
    sub_23316BEA4(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return 1;
  }
  v12 = sub_23361F224();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23316BEA4(v8, v7);
  sub_23316BEA4(v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (v12 & 1) != 0;
}

BOOL _s10FinanceKit35OrderWebServiceFetchChangesResponseV8JSONBodyV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD **)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    if (!v7 || (sub_23322B8BC(v4, v7) & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
    return v8 && (v5 == v9 && v6 == v8 || (sub_23361F224() & 1) != 0);
  return !v8;
}

uint64_t *sub_233473854(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t *v18;
  id v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  int v23;
  int v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  __int16 v30;
  uint64_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  id v45[5];
  __int16 v46;

  v43 = a2;
  v3 = sub_23361EE10();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - v9;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = objc_msgSend(v15, sel_temporaryDirectory);

  sub_23361D2D4();
  v45[3] = &type metadata for OrderBundleValidator;
  v45[4] = &protocol witness table for OrderBundleValidator;
  v45[0] = &type metadata for WalletPreferences;
  v45[1] = &protocol witness table for WalletPreferences;
  v17 = v44;
  v18 = sub_2333CB238(a1, v43, (uint64_t)v14, (uint64_t)v45);
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v45[0] = v17;
    v19 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
    if (swift_dynamicCast())
    {

      v20 = v42;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v42, v10, v3);
      v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v22 = v41;
      v21(v41, v20, v3);
      v23 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v22, v3);
      v24 = *MEMORY[0x24BEE26D8];
      v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v22, v3);
      if (v23 == v24)
      {
        v26 = swift_allocError();
        v21(v27, v20, v3);
        sub_23347538C();
        swift_allocError();
        *(_QWORD *)v28 = v26;
        *(_OWORD *)(v28 + 8) = 0u;
        *(_OWORD *)(v28 + 24) = 0u;
        *(_OWORD *)(v28 + 40) = 0u;
        *(_OWORD *)(v28 + 49) = 0u;
      }
      else
      {
        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        v35 = v34;
        v36 = swift_allocError();
        v21(v37, v20, v3);
        *v35 = v36;
        swift_storeEnumTagMultiPayload();
      }
      swift_willThrow();
      v25(v20, v3);
    }
    else
    {

      v45[0] = v17;
      v29 = v17;
      if (!swift_dynamicCast())
      {

        type metadata accessor for FinanceNetworkError();
        sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
        swift_allocError();
        *v38 = v17;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return v18;
      }

      v30 = v46;
      sub_23346C658();
      v31 = swift_allocError();
      *v32 = v30;
      sub_23347538C();
      swift_allocError();
      *(_QWORD *)v33 = v31;
      *(_OWORD *)(v33 + 8) = 0u;
      *(_OWORD *)(v33 + 24) = 0u;
      *(_OWORD *)(v33 + 40) = 0u;
      *(_OWORD *)(v33 + 49) = 0u;
      swift_willThrow();
    }

  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v18;
}

void sub_233473CE4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  id v43;
  uint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t **v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t **v56;
  uint64_t v57;
  id v58;

  v56 = a5;
  v57 = a1;
  v9 = type metadata accessor for RawECommerceOrderContent(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RawOrderContent();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v50 - v16;
  v18 = *a4;
  v19 = a4[2];
  v52 = a4[1];
  v53 = v19;
  v54 = a4[3];
  v55 = v18;
  v20 = *((unsigned __int8 *)a4 + 32);
  objc_opt_self();
  v21 = swift_dynamicCastObjCClass();
  if (!v21)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v42 = v41;
    *v41 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v42[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v42[1] = (uint64_t)a3;
    swift_storeEnumTagMultiPayload();
    v43 = a3;
    swift_willThrow();
    return;
  }
  v22 = (void *)v21;
  v58 = a3;
  v23 = objc_msgSend(v22, sel_statusCode);
  if (v23 == (id)401)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
LABEL_23:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_24;
  }
  v24 = v23;
  if (v23 == (id)304)
  {
    if (v20)
    {

      v44 = 0;
      v45 = 0;
      v25 = 0;
      v38 = 0;
      v40 = 0;
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  if (v23 != (id)200)
  {
LABEL_22:
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v46 = v24;
    goto LABEL_23;
  }
  v25 = a2;
  v26 = sub_233473854(v57, a2);
  if (v5)
  {
LABEL_24:

    return;
  }
  v51 = v26;
  sub_2333CB6BC((uint64_t)v26 + OBJC_IVAR____TtC10FinanceKit11OrderBundle_content, (uint64_t)v17);
  sub_2333CB6BC((uint64_t)v17, (uint64_t)v15);
  sub_23328BA24((uint64_t)v15, (uint64_t)v11);
  v27 = &v11[*(int *)(v9 + 20)];
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v11, type metadata accessor for RawECommerceOrderContent);
  sub_2333CB6BC((uint64_t)v17, (uint64_t)v15);
  sub_23328BA24((uint64_t)v15, (uint64_t)v11);
  v30 = &v11[*(int *)(v9 + 24)];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  sub_233168500((uint64_t)v11, type metadata accessor for RawECommerceOrderContent);
  v50 = v28;
  v33 = v52;
  v34 = v55 == v28 && v52 == v29;
  if (!v34 && (sub_23361F224() & 1) == 0
    || (v53 == v32 ? (v35 = v54 == v31) : (v35 = 0), !v35 && (sub_23361F224() & 1) == 0))
  {
    sub_23347538C();
    swift_allocError();
    v47 = v54;
    *(_QWORD *)v48 = v55;
    *(_QWORD *)(v48 + 8) = v33;
    *(_QWORD *)(v48 + 16) = v53;
    *(_QWORD *)(v48 + 24) = v47;
    *(_QWORD *)(v48 + 32) = v50;
    *(_QWORD *)(v48 + 40) = v29;
    *(_QWORD *)(v48 + 48) = v32;
    *(_QWORD *)(v48 + 56) = v31;
    *(_BYTE *)(v48 + 64) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();

    sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderContent);
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = (void *)sub_23361E12C();
  v37 = objc_msgSend(v22, sel_valueForHTTPHeaderField_, v36);

  if (v37)
  {
    v38 = sub_23361E150();
    v40 = v39;

  }
  else
  {

    v38 = 0;
    v40 = 0;
  }
  v45 = v57;
  sub_233168500((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for RawOrderContent);
  sub_2331D1374(v45, v25);
  v44 = v51;
LABEL_28:
  v49 = v56;
  *v56 = v44;
  v49[1] = (uint64_t *)v45;
  v49[2] = (uint64_t *)v25;
  v49[3] = (uint64_t *)v38;
  v49[4] = v40;
}

unint64_t sub_23347420C()
{
  unint64_t result;

  result = qword_256050F40;
  if (!qword_256050F40)
  {
    result = MEMORY[0x234934494](&unk_23364FB60, &type metadata for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050F40);
  }
  return result;
}

unint64_t sub_233474250()
{
  unint64_t result;

  result = qword_256050F50;
  if (!qword_256050F50)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderWebServiceFetchChangesResponse.JSONBody, &type metadata for OrderWebServiceFetchChangesResponse.JSONBody);
    atomic_store(result, (unint64_t *)&qword_256050F50);
  }
  return result;
}

unint64_t sub_233474294()
{
  unint64_t result;

  result = qword_256050F60;
  if (!qword_256050F60)
  {
    result = MEMORY[0x234934494](&unk_23364FB10, &type metadata for OrderWebServiceLogRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050F60);
  }
  return result;
}

unint64_t sub_2334742DC()
{
  unint64_t result;

  result = qword_256050F70;
  if (!qword_256050F70)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderWebServiceRegisterRequest.JSONBody, &type metadata for OrderWebServiceRegisterRequest.JSONBody);
    atomic_store(result, (unint64_t *)&qword_256050F70);
  }
  return result;
}

unint64_t sub_233474324()
{
  unint64_t result;

  result = qword_256050FB0;
  if (!qword_256050FB0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderWebServiceRegisterResponse, &type metadata for OrderWebServiceRegisterResponse);
    atomic_store(result, (unint64_t *)&qword_256050FB0);
  }
  return result;
}

unint64_t sub_23347436C()
{
  unint64_t result;

  result = qword_256050FB8;
  if (!qword_256050FB8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderWebServiceUnregisterResponse, &type metadata for OrderWebServiceUnregisterResponse);
    atomic_store(result, (unint64_t *)&qword_256050FB8);
  }
  return result;
}

uint64_t destroy for OrderWebServiceRegisterRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23316BEA4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
}

_QWORD *initializeWithCopy for OrderWebServiceRegisterRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[8];
  v8 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2331D1374(v7, v8);
  a1[8] = v7;
  a1[9] = v8;
  return a1;
}

_QWORD *assignWithCopy for OrderWebServiceRegisterRequest(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[8];
  v4 = a2[9];
  sub_2331D1374(v5, v4);
  v6 = a1[8];
  v7 = a1[9];
  a1[8] = v5;
  a1[9] = v4;
  sub_23316BEA4(v6, v7);
  return a1;
}

_QWORD *assignWithTake for OrderWebServiceRegisterRequest(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a1[8];
  v9 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_23316BEA4(v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterRequest()
{
  return &type metadata for OrderWebServiceRegisterRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterRequest.JSONBody()
{
  return &type metadata for OrderWebServiceRegisterRequest.JSONBody;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterResponse()
{
  return &type metadata for OrderWebServiceRegisterResponse;
}

ValueMetadata *type metadata accessor for OrderWebServiceUnregisterRequest()
{
  return &type metadata for OrderWebServiceUnregisterRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceUnregisterResponse()
{
  return &type metadata for OrderWebServiceUnregisterResponse;
}

uint64_t _s10FinanceKit32OrderWebServiceUnregisterRequestVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s10FinanceKit32OrderWebServiceUnregisterRequestVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s10FinanceKit32OrderWebServiceUnregisterRequestVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s10FinanceKit32OrderWebServiceUnregisterRequestVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10FinanceKit32OrderWebServiceUnregisterRequestVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_233474810(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchRequest()
{
  return &type metadata for OrderWebServiceFetchRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchResponseContext()
{
  return &type metadata for OrderWebServiceFetchResponseContext;
}

unint64_t destroy for OrderWebServiceFetchResponse(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    sub_23316BEA4(a1[1], a1[2]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OrderWebServiceFetchResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    swift_retain();
    sub_2331D1374(v4, v5);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for OrderWebServiceFetchResponse(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      v10 = a2[1];
      v11 = a2[2];
      swift_retain();
      sub_2331D1374(v10, v11);
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v12 = *(_OWORD *)a2;
    v13 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v12;
    *((_OWORD *)a1 + 1) = v13;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    sub_23316BEA4(a1[1], a1[2]);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  v6 = a2[1];
  v7 = a2[2];
  sub_2331D1374(v6, v7);
  v8 = a1[1];
  v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_23316BEA4(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OrderWebServiceFetchResponse(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    sub_23316BEA4(a1[1], a1[2]);
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
    a1[4] = *(_QWORD *)(a2 + 32);
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_release();
  v4 = a1[1];
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_23316BEA4(v4, v5);
  v6 = *(_QWORD *)(a2 + 32);
  a1[3] = *(_QWORD *)(a2 + 24);
  a1[4] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderWebServiceFetchResponse(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OrderWebServiceFetchResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_233474B84(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 24) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchResponse()
{
  return &type metadata for OrderWebServiceFetchResponse;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesRequest()
{
  return &type metadata for OrderWebServiceFetchChangesRequest;
}

_QWORD *assignWithCopy for OrderWebServiceFetchChangesResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OrderWebServiceFetchChangesResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesResponse()
{
  return &type metadata for OrderWebServiceFetchChangesResponse;
}

uint64_t destroy for OrderWebServiceFetchChangesResponse.JSONBody()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s10FinanceKit35OrderWebServiceFetchChangesResponseVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OrderWebServiceFetchChangesResponse.JSONBody(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OrderWebServiceFetchChangesResponse.JSONBody(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderWebServiceFetchChangesResponse.JSONBody(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OrderWebServiceFetchChangesResponse.JSONBody(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesResponse.JSONBody()
{
  return &type metadata for OrderWebServiceFetchChangesResponse.JSONBody;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogRequest()
{
  return &type metadata for OrderWebServiceLogRequest;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogRequest.JSONBody()
{
  return &type metadata for OrderWebServiceLogRequest.JSONBody;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogResponse()
{
  return &type metadata for OrderWebServiceLogResponse;
}

ValueMetadata *type metadata accessor for OrderWebServiceLogRequest.JSONBody.CodingKeys()
{
  return &type metadata for OrderWebServiceLogRequest.JSONBody.CodingKeys;
}

uint64_t _s10FinanceKit31OrderWebServiceRegisterResponseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233474EE4 + 4 * byte_23364F3A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233474F18 + 4 * byte_23364F3A0[v4]))();
}

uint64_t sub_233474F18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233474F20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233474F28);
  return result;
}

uint64_t sub_233474F34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233474F3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233474F40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233474F48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys()
{
  return &type metadata for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys;
}

uint64_t _s10FinanceKit25OrderWebServiceLogRequestV8JSONBodyV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233474FA4 + 4 * byte_23364F3AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233474FC4 + 4 * byte_23364F3AF[v4]))();
}

_BYTE *sub_233474FA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233474FC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233474FCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233474FD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233474FDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233474FE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceRegisterRequest.JSONBody.CodingKeys()
{
  return &type metadata for OrderWebServiceRegisterRequest.JSONBody.CodingKeys;
}

unint64_t sub_233475004()
{
  unint64_t result;

  result = qword_256050FF8;
  if (!qword_256050FF8)
  {
    result = MEMORY[0x234934494](&unk_23364F978, &type metadata for OrderWebServiceRegisterRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256050FF8);
  }
  return result;
}

unint64_t sub_23347504C()
{
  unint64_t result;

  result = qword_256051000;
  if (!qword_256051000)
  {
    result = MEMORY[0x234934494](&unk_23364FA30, &type metadata for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051000);
  }
  return result;
}

unint64_t sub_233475094()
{
  unint64_t result;

  result = qword_256051008;
  if (!qword_256051008)
  {
    result = MEMORY[0x234934494](&unk_23364FAE8, &type metadata for OrderWebServiceLogRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051008);
  }
  return result;
}

unint64_t sub_2334750DC()
{
  unint64_t result;

  result = qword_256051010;
  if (!qword_256051010)
  {
    result = MEMORY[0x234934494](&unk_23364FA58, &type metadata for OrderWebServiceLogRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051010);
  }
  return result;
}

unint64_t sub_233475124()
{
  unint64_t result;

  result = qword_256051018;
  if (!qword_256051018)
  {
    result = MEMORY[0x234934494](&unk_23364FA80, &type metadata for OrderWebServiceLogRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051018);
  }
  return result;
}

unint64_t sub_23347516C()
{
  unint64_t result;

  result = qword_256051020;
  if (!qword_256051020)
  {
    result = MEMORY[0x234934494](&unk_23364F9A0, &type metadata for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051020);
  }
  return result;
}

unint64_t sub_2334751B4()
{
  unint64_t result;

  result = qword_256051028;
  if (!qword_256051028)
  {
    result = MEMORY[0x234934494](&unk_23364F9C8, &type metadata for OrderWebServiceFetchChangesResponse.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051028);
  }
  return result;
}

unint64_t sub_2334751FC()
{
  unint64_t result;

  result = qword_256051030;
  if (!qword_256051030)
  {
    result = MEMORY[0x234934494](&unk_23364F8E8, &type metadata for OrderWebServiceRegisterRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051030);
  }
  return result;
}

unint64_t sub_233475244()
{
  unint64_t result;

  result = qword_256051038;
  if (!qword_256051038)
  {
    result = MEMORY[0x234934494](&unk_23364F910, &type metadata for OrderWebServiceRegisterRequest.JSONBody.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051038);
  }
  return result;
}

uint64_t sub_233475288(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000233677A50 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646F4D7473616CLL && a2 == 0xEC00000064656966)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23347538C()
{
  unint64_t result;

  result = qword_2560512D0;
  if (!qword_2560512D0)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for OrderWebServiceError, &type metadata for OrderWebServiceError);
    atomic_store(result, (unint64_t *)&qword_2560512D0);
  }
  return result;
}

char *sub_233475404()
{
  uint64_t inited;
  char *v1;

  swift_bridgeObjectRetain();
  sub_23361E27C();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  strcpy((char *)(inited + 32), "Content-Type");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = 0xD000000000000010;
  *(_QWORD *)(inited + 56) = 0x8000000233668540;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (char *)sub_2334A4BB0((_QWORD *)1, 2, 1, (_QWORD *)inited);
  *((_QWORD *)v1 + 2) = 2;
  strcpy(v1 + 64, "Authorization");
  *((_WORD *)v1 + 39) = -4864;
  *((_QWORD *)v1 + 10) = 0x64724F656C707041;
  *((_QWORD *)v1 + 11) = 0xEB00000000207265;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_233475594()
{
  return sub_233475C44(type metadata accessor for BankConnectWebServiceAccountRequest, (uint64_t)&unk_2504670A0);
}

uint64_t sub_2334755B8()
{
  return sub_233475658((uint64_t)&unk_250467120);
}

uint64_t sub_233475608()
{
  return sub_233475658((uint64_t)&unk_250467160);
}

uint64_t sub_233475658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t *boxed_opaque_existential_0;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37[3];
  int *v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a1;
  v40 = *MEMORY[0x24BDAC8D0];
  v2 = sub_23361CAC4();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v4 = (int *)type metadata accessor for BankConnectConsent();
  v5 = v4[6];
  v6 = (uint64_t *)(v1 + v4[5]);
  v7 = v6[1];
  v31 = *v6;
  v8 = v1 + v5;
  v9 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  v38 = v9;
  v39 = sub_233167C58(&qword_256043230, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v37);
  v11 = (char *)boxed_opaque_existential_0 + v9[5];
  v12 = sub_23361D634();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v11, v8, v12);
  v13((char *)boxed_opaque_existential_0 + v9[6], v1 + v4[7], v12);
  v14 = *(_QWORD *)(v1 + v4[9]);
  v15 = (uint64_t *)(v1 + v4[10]);
  v16 = *v15;
  v17 = v15[1];
  *boxed_opaque_existential_0 = v31;
  boxed_opaque_existential_0[1] = v7;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v9[7]) = v14;
  v18 = (uint64_t *)((char *)boxed_opaque_existential_0 + v9[8]);
  *v18 = v16;
  v18[1] = v17;
  __swift_project_boxed_opaque_existential_1(v37, (uint64_t)v38);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v19 = v34;
  v20 = __swift_project_value_buffer(v34, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v20, v19);
  sub_23361CADC();
  v21 = v35;
  v22 = sub_23361CAE8();
  v24 = v23;
  swift_release();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    v26 = sub_23361D3B8();
    v28 = v27;
    sub_23316BEA4(v22, v24);
    v29 = (_QWORD *)inited;
    *(_QWORD *)(inited + 32) = 0x746E65736E6F43;
    v29[5] = 0xE700000000000000;
    v29[6] = v26;
    v29[7] = v28;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    v37[0] = v30;
    sub_233189574((uint64_t)v29);
    return v37[0];
  }
}

uint64_t sub_233475960()
{
  return sub_233475658((uint64_t)&unk_2504671E0);
}

uint64_t sub_2334759B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[14];

  v20[13] = *MEMORY[0x24BDAC8D0];
  v1 = sub_23361CAC4();
  v19[0] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v6 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v20[3] = &type metadata for RawBankConnectData.InitiatedConsent;
  v20[4] = sub_2331AB220();
  v9 = (_QWORD *)swift_allocObject();
  v20[0] = v9;
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v7;
  v9[5] = v6;
  __swift_project_boxed_opaque_existential_1(v20, (uint64_t)&type metadata for RawBankConnectData.InitiatedConsent);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v1, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v19[0] + 16))(v3, v10, v1);
  sub_23361CADC();
  v11 = v19[1];
  v12 = sub_23361CAE8();
  v14 = v13;
  swift_release();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    v16 = sub_23361D3B8();
    v18 = v17;
    sub_23316BEA4(v12, v14);
    *(_QWORD *)(inited + 32) = 0x746E65736E6F43;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    *(_QWORD *)(inited + 48) = v16;
    *(_QWORD *)(inited + 56) = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    v20[0] = &unk_250467260;
    sub_233189574(inited);
    return v20[0];
  }
}

uint64_t sub_233475C20()
{
  return sub_233475C44(type metadata accessor for BankConnectWebServiceAccountPaymentInfoRequest, (uint64_t)&unk_2504672E0);
}

uint64_t sub_233475C44(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *boxed_opaque_existential_0;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42[3];
  int *v43;
  uint64_t v44;
  _QWORD *v45;

  v34 = a1;
  v35 = a2;
  v3 = sub_23361CAC4();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v5 = (int *)type metadata accessor for BankConnectConsent();
  v6 = v5[6];
  v7 = (uint64_t *)(v2 + v5[5]);
  v8 = v7[1];
  v36 = *v7;
  v9 = v2 + v6;
  v10 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  v43 = v10;
  v44 = sub_233167C58(&qword_256043230, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v42);
  v12 = (char *)boxed_opaque_existential_0 + v10[5];
  v13 = sub_23361D634();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v12, v9, v13);
  v14((char *)boxed_opaque_existential_0 + v10[6], v2 + v5[7], v13);
  v15 = v2;
  v16 = *(_QWORD *)(v2 + v5[9]);
  v17 = (uint64_t *)(v2 + v5[10]);
  v18 = *v17;
  v19 = v17[1];
  *boxed_opaque_existential_0 = v36;
  boxed_opaque_existential_0[1] = v8;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]) = v16;
  v20 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[8]);
  *v20 = v18;
  v20[1] = v19;
  __swift_project_boxed_opaque_existential_1(v42, (uint64_t)v43);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v21 = v39;
  v22 = __swift_project_value_buffer(v39, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v22, v21);
  sub_23361CADC();
  v23 = v40;
  v24 = sub_23361CAE8();
  v26 = v25;
  swift_release();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    v28 = sub_23361D3B8();
    v30 = v29;
    sub_23316BEA4(v24, v26);
    v31 = (_QWORD *)inited;
    *(_QWORD *)(inited + 32) = 0x746E65736E6F43;
    v31[5] = 0xE700000000000000;
    v31[6] = v28;
    v31[7] = v30;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
    v45 = v31;
    v32 = v34(0);
    v33 = sub_2333AD8E8(v15 + *(int *)(v32 + 24));
    sub_233189574((uint64_t)v33);
    v42[0] = v35;
    sub_233189574((uint64_t)v45);
    return v42[0];
  }
}

uint64_t sub_233475F48()
{
  return sub_233475658((uint64_t)&unk_250467320);
}

uint64_t sub_233475F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t *boxed_opaque_existential_0;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39[3];
  int *v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = sub_23361CAC4();
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v34 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  v3 = (int *)type metadata accessor for BankConnectConsent();
  v4 = v3[6];
  v5 = (uint64_t *)(v0 + v3[5]);
  v6 = v5[1];
  v33 = *v5;
  v7 = v0 + v4;
  v8 = (int *)type metadata accessor for RawBankConnectData.Consent(0);
  v40 = v8;
  v41 = sub_233167C58(&qword_256043230, type metadata accessor for RawBankConnectData.Consent, (uint64_t)&protocol conformance descriptor for RawBankConnectData.Consent);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
  v10 = (char *)boxed_opaque_existential_0 + v8[5];
  v11 = sub_23361D634();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v10, v7, v11);
  v12((char *)boxed_opaque_existential_0 + v8[6], v0 + v3[7], v11);
  v13 = v0;
  v14 = *(_QWORD *)(v0 + v3[9]);
  v15 = (uint64_t *)(v0 + v3[10]);
  v16 = *v15;
  v17 = v15[1];
  *boxed_opaque_existential_0 = v33;
  boxed_opaque_existential_0[1] = v6;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]) = v14;
  v18 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[8]);
  *v18 = v16;
  v18[1] = v17;
  __swift_project_boxed_opaque_existential_1(v39, (uint64_t)v40);
  sub_23361CB00();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v19 = v36;
  v20 = __swift_project_value_buffer(v36, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v20, v19);
  sub_23361CADC();
  v21 = v37;
  v22 = sub_23361CAE8();
  v24 = v23;
  swift_release();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    v26 = sub_23361D3B8();
    v28 = v27;
    sub_23316BEA4(v22, v24);
    v29 = (_QWORD *)inited;
    *(_QWORD *)(inited + 32) = 0x746E65736E6F43;
    v29[5] = 0xE700000000000000;
    v29[6] = v26;
    v29[7] = v28;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    v42 = v29;
    v30 = type metadata accessor for BankConnectWebServiceAccountTransactionsRequest(0);
    v31 = sub_2333AD8E8(v13 + *(int *)(v30 + 36));
    sub_233189574((uint64_t)v31);
    v39[0] = (uint64_t)&unk_2504673A0;
    sub_233189574((uint64_t)v42);
    return v39[0];
  }
}

_QWORD *sub_233476298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;

  type metadata accessor for BankConnectWebServiceOfflineLabPermissionSaveRequest(0);
  v0 = sub_23361D64C();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051230);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_233623D60;
  strcpy((char *)(inited + 32), "Content-Type");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = 0xD000000000000010;
  *(_QWORD *)(inited + 56) = 0x8000000233668540;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_2334A4BB0((_QWORD *)1, 2, 1, (_QWORD *)inited);
  v4[2] = 2;
  v4[8] = 0xD000000000000019;
  v4[9] = 0x8000000233670940;
  v4[10] = v0;
  v4[11] = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2334763E4()
{
  return sub_233475658((uint64_t)&unk_250467420);
}

uint64_t sub_233476434()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  sub_2332F4F30();
  swift_bridgeObjectRetain();
  v1 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_233476550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[2];

  v2 = sub_23361CAB8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  *v5 = sub_233471294;
  v5[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCB328], v2);
  sub_23361CAD0();
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v11[0] = v6;
  v11[1] = v7;
  sub_2331D1374(v6, v7);
  sub_2334742DC();
  v8 = sub_23361CAE8();
  sub_23316BEA4(v6, v7);
  swift_release();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v9 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_2334766EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[4];

  v2 = sub_23361CAC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_23361CADC();
  v7 = (_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceAccountRequest(0) + 20));
  v8 = v7[1];
  v12[0] = *v7;
  v12[1] = v8;
  v12[2] = 12630;
  v12[3] = 0xE200000000000000;
  sub_23347C2CC();
  swift_bridgeObjectRetain();
  v9 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v10 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_2334768C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  type metadata accessor for BankConnectWebServiceAccountsRequest(0);
  sub_23347C310();
  swift_bridgeObjectRetain();
  v1 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_233476A00()
{
  return sub_233476A38((void (*)(uint64_t *__return_ptr))BankConnectWebServicePassUnlinkRequest.jsonBody.getter);
}

uint64_t sub_233476A1C()
{
  return sub_233476A38((void (*)(uint64_t *__return_ptr))BankConnectWebServicePassLinkingRequest.jsonBody.getter);
}

uint64_t sub_233476A38(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  a1(&v6);
  sub_23347C398();
  v3 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v4 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_233476B60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  sub_233310554();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v1 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_233476D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceRevokeConsentRequest(0) + 20));
  if (v2 && *(_QWORD *)(v2 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254246588);
    sub_2331B1A14((unint64_t *)&qword_2560512B0, &qword_254246588, MEMORY[0x24BEE12B0]);
    sub_23361E0D8();
  }
  sub_2331ADB00();
  v3 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v4 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_233476EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v0 = sub_23361D6A0();
  v33 = *(_QWORD *)(v0 - 8);
  v34 = v0;
  v1 = v33;
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v3;
  v4 = (int *)type metadata accessor for PrismWebServiceRegisterTransactionRequest.JSONBody(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361CAC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  v37 = sub_23361CAF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCB358], v7);
  sub_23361CADC();
  v11 = (int *)type metadata accessor for PrismWebServiceRegisterTransactionRequest(0);
  v12 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v36 + v11[5], v0);
  v13 = v12;
  v14 = (uint64_t *)(v12 + v11[6]);
  v16 = *v14;
  v15 = v14[1];
  v17 = v12 + v11[7];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256048370);
  v41 = v18;
  v42 = sub_2331B1A14((unint64_t *)&qword_256051290, &qword_256048370, MEMORY[0x24BDC6538]);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_0, v17, v18);
  __swift_project_boxed_opaque_existential_1(v40, v41);
  sub_2331D1374(v16, v15);
  v20 = v43;
  sub_23361CDAC();
  v43 = v20;
  v22 = v38;
  v21 = v39;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  v23 = (uint64_t *)(v13 + v11[8]);
  v24 = *v23;
  v25 = v23[1];
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v6, v35, v34);
  *(_QWORD *)&v6[v4[5]] = &unk_2504674A0;
  v26 = (uint64_t *)&v6[v4[6]];
  *v26 = v16;
  v26[1] = v15;
  v27 = &v6[v4[7]];
  *(_QWORD *)v27 = v22;
  *((_QWORD *)v27 + 1) = v21;
  v28 = (uint64_t *)&v6[v4[8]];
  *v28 = v24;
  v28[1] = v25;
  *(_QWORD *)&v6[v4[9]] = 1;
  sub_2331D1374(v24, v25);
  sub_233167C58(&qword_256048390, type metadata accessor for PrismWebServiceRegisterTransactionRequest.JSONBody, (uint64_t)&protocol conformance descriptor for PrismWebServiceRegisterTransactionRequest.JSONBody);
  v29 = v43;
  v30 = sub_23361CAE8();
  sub_233168500((uint64_t)v6, type metadata accessor for PrismWebServiceRegisterTransactionRequest.JSONBody);
  swift_release();
  if (v29)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v31 = v29;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v30;
}

uint64_t sub_233477264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = type metadata accessor for RawBankConnectData.CompleteConsentRequestBody(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  BankConnectWebServiceCompleteConsentRequest.jsonBody.getter((uint64_t)v3);
  sub_233167C58(&qword_256043278, type metadata accessor for RawBankConnectData.CompleteConsentRequestBody, (uint64_t)&protocol conformance descriptor for RawBankConnectData.CompleteConsentRequestBody);
  v4 = sub_23361CAE8();
  sub_233168500((uint64_t)v3, type metadata accessor for RawBankConnectData.CompleteConsentRequestBody);
  swift_release();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v5 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_2334773E0()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[8];
  uint64_t v4;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  BankConnectWebServiceInitiateConsentRequest.jsonBody.getter((uint64_t)v3);
  sub_2331ADA8C();
  v4 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v1 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_233477594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[2];

  v2 = sub_23361CAC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_23361CADC();
  v7 = (_QWORD *)(v0 + *(int *)(type metadata accessor for BankConnectWebServiceAccountPaymentInfoRequest(0) + 20));
  v8 = v7[1];
  v12[0] = *v7;
  v12[1] = v8;
  sub_23347C288();
  swift_bridgeObjectRetain();
  v9 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v10 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_233477754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v2 = type metadata accessor for RawBankConnectData.NotificationEventsRequestBody(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23361CAC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_23361CADC();
  v10 = type metadata accessor for BankConnectWebServiceNotificationEventsRequest(0);
  v11 = v0 + *(int *)(v10 + 20);
  v12 = sub_23361D634();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v11, v12);
  v13 = (uint64_t *)(v0 + *(int *)(v10 + 24));
  v14 = *v13;
  v15 = v13[1];
  v16 = &v4[*(int *)(v2 + 20)];
  *(_QWORD *)v16 = v14;
  *((_QWORD *)v16 + 1) = v15;
  sub_233167C58(&qword_25604FC80, type metadata accessor for RawBankConnectData.NotificationEventsRequestBody, (uint64_t)&protocol conformance descriptor for RawBankConnectData.NotificationEventsRequestBody);
  swift_bridgeObjectRetain();
  v17 = sub_23361CAE8();
  sub_233168500((uint64_t)v4, type metadata accessor for RawBankConnectData.NotificationEventsRequestBody);
  swift_release();
  if (v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v18 = v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v17;
}

uint64_t sub_2334779A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v5 = sub_23361CAC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_23361CADC();
  v13[0] = a1;
  v13[1] = a2;
  sub_23347C354();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v11 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v10;
}

uint64_t sub_233477B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v2);
  v34 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for RawBankConnectData.TransactionsRequestBody(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23361CAC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  v11 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  sub_23361CADC();
  v13 = (int *)type metadata accessor for BankConnectWebServiceAccountTransactionsRequest(0);
  v14 = v13[6];
  v15 = (uint64_t *)(v1 + v13[5]);
  v16 = v15[1];
  v32 = *v15;
  v33 = v11;
  v17 = v1 + v14;
  v18 = (char *)v6 + v4[5];
  v19 = sub_23361D634();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, v17, v19);
  v21 = v34;
  sub_23319F164(v1 + v13[7], v34);
  v22 = (uint64_t *)(v1 + v13[8]);
  v24 = *v22;
  v23 = v22[1];
  v25 = (uint64_t)v6 + v4[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v25, 1, 1, v19);
  v26 = (_QWORD *)((char *)v6 + v4[7]);
  *v26 = 0;
  v26[1] = 0;
  *v6 = v32;
  v6[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23318C8A8(v21, v25);
  swift_bridgeObjectRelease();
  *v26 = v24;
  v26[1] = v23;
  sub_233167C58(&qword_256051238, type metadata accessor for RawBankConnectData.TransactionsRequestBody, (uint64_t)&protocol conformance descriptor for RawBankConnectData.TransactionsRequestBody);
  v27 = v35;
  v28 = sub_23361CAE8();
  sub_233168500((uint64_t)v6, type metadata accessor for RawBankConnectData.TransactionsRequestBody);
  swift_release();
  if (v27)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v29 = v27;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v28;
}

uint64_t sub_233477E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD v6[6];

  v6[5] = a2;
  v6[4] = a1;
  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  BankConnectWebServiceInstitutionsForPassesRequest.jsonBody.getter(v6);
  sub_23331059C();
  v3 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v4 = v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_233477FDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  type metadata accessor for BankConnectWebServiceRegisterToNotificationEventsRequest(0);
  sub_233434DE0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_233478134()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23361CB00();
  swift_allocObject();
  sub_23361CAF4();
  sub_233434E28();
  swift_bridgeObjectRetain();
  v1 = sub_23361CAE8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v2 = v0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_23347825C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _OWORD v15[5];

  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[3];
  v15[2] = v2[2];
  v15[3] = v9;
  v15[4] = v2[4];
  v10 = v2[1];
  v15[0] = *v2;
  v15[1] = v10;
  v11 = OrderWebServiceRegisterRequest.pathComponents.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v12 = v11[2];
  if (v12)
  {
    v13 = v11 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_23361D274();
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_233478370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _OWORD v15[4];

  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[1];
  v15[0] = *v2;
  v15[1] = v9;
  v10 = v2[3];
  v15[2] = v2[2];
  v15[3] = v10;
  v11 = OrderWebServiceUnregisterRequest.pathComponents.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v12 = v11[2];
  if (v12)
  {
    v13 = v11 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_23361D274();
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23347847C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v23 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)&v20 - v8;
  v9 = sub_23361CC14();
  v20 = *(_QWORD *)(v9 - 8);
  v21 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v22(v15, a1, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23361D274();
  sub_23361D274();
  swift_bridgeObjectRetain();
  sub_23361D274();
  swift_bridgeObjectRelease();
  sub_23361D274();
  swift_bridgeObjectRetain();
  sub_23361D274();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v3 + 40))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051270);
    sub_23361CBC0();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_233623D60;
    sub_23361CBB4();
    if (*(_QWORD *)(v16 + 16))
      goto LABEL_3;
LABEL_6:
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v25, v15, v12);
    return swift_bridgeObjectRelease();
  }
  if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    goto LABEL_6;
LABEL_3:
  sub_23361CC08();
  sub_23361CBE4();
  v17 = (uint64_t)v23;
  v22(v23, (uint64_t)v15, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  v18 = v24;
  sub_23361CBF0();
  sub_2331A046C(v17);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v21);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v25, v18, v12);
  }
  return result;
}

uint64_t sub_2334787CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v31 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)&v25 - v8;
  v9 = sub_23361CC14();
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - v17;
  v32 = *v3;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v28(v16, a1, v12);
  v19 = *(_QWORD *)(v32 + 16);
  if (v19)
  {
    v20 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23361D274();
      swift_bridgeObjectRelease();
      v20 += 16;
      --v19;
    }
    while (v19);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v18, v16, v12);
  sub_2332A6DC8((uint64_t)&v32);
  if (!*(_QWORD *)(v3[1] + 16))
  {
    v23 = v18;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(v31, v23, v12);
  }
  swift_bridgeObjectRetain();
  sub_23361CC08();
  sub_23361CBE4();
  v22 = (uint64_t)v29;
  v28(v29, (uint64_t)v18, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
  v23 = v30;
  sub_23361CBF0();
  sub_2331A046C(v22);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v23, 1, v12);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(v31, v23, v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_233478A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = sub_23361CC14();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23361D340();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v16(v15, a1, v12);
  swift_bridgeObjectRetain();
  sub_23361D274();
  sub_23361D274();
  swift_bridgeObjectRetain();
  sub_23361D274();
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051270);
  sub_23361CBC0();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_233623D60;
  sub_23361CBB4();
  if (*(_QWORD *)(v17 + 16))
  {
    v18 = v23;
    sub_23361CC08();
    sub_23361CBE4();
    v16(v6, (uint64_t)v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    sub_23361CBF0();
    sub_2331A046C((uint64_t)v6);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v18, v8, v12);
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23, v15, v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_233478D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = sub_23361D340();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for BankConnectWebServiceOfflineLabItemsRequest(0) + 28));
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    v12 = v10 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23361D274();
      swift_bridgeObjectRelease();
      v12 += 16;
      --v11;
    }
    while (v11);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t OrderWebServiceClient.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  v4 = sub_23361D340();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t OrderWebServiceClient.__allocating_init(baseURL:configuration:walletPreferences:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  swift_allocObject();
  v8 = sub_23347B594(a1, (uint64_t)a2, a3, a4);

  return v8;
}

uint64_t OrderWebServiceClient.init(baseURL:configuration:walletPreferences:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = sub_23347B594(a1, (uint64_t)a2, a3, a4);

  return v5;
}

uint64_t sub_233478F08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[23] = a1;
  v2[24] = v1;
  v3 = sub_23361E720();
  v2[25] = v3;
  v2[26] = *(_QWORD *)(v3 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v2[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233478FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD *v10;

  if (((*(uint64_t (**)(void))(*(_QWORD *)(v0[24]
                                         + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_walletPreferences
                                         + 8)
                             + 8))() & 1) != 0)
  {
    v1 = v0[29];
    sub_23361C9C8();
    v2 = sub_23361D340();
    v3 = *(_QWORD *)(v2 - 8);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
    v5 = v0[29];
    if (v4 == 1)
    {
      sub_2331A046C(v0[29]);
    }
    else
    {
      sub_23361D2F8();
      v7 = v6;
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
      if (v7)
      {
        v8 = (void *)objc_opt_self();
        v9 = (void *)sub_23361E12C();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setAllowsAnyHTTPSCertificate_forHost_, 1, v9);

      }
    }
  }
  v10 = (_QWORD *)swift_task_alloc();
  v0[30] = v10;
  *v10 = v0;
  v10[1] = sub_233479144;
  return sub_23361E738();
}

uint64_t sub_233479144(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2334791F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = (uint64_t)objc_msgSend(*(id *)(v0 + 248), sel_expectedContentLength);
  if (v5 >= 6291456)
    v5 = 6291456;
  *(_QWORD *)(v0 + 152) = sub_23347BF28(v5);
  *(_QWORD *)(v0 + 160) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  *(_QWORD *)(v0 + 128) = sub_23361E708();
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = v8;
  return swift_task_switch();
}

uint64_t sub_2334792B4()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v3;

  v1 = *(_BYTE **)(v0 + 136);
  if (v1 == *(_BYTE **)(v0 + 144))
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v3;
    *v3 = v0;
    v3[1] = sub_23347937C;
    return sub_23361CE0C();
  }
  else
  {
    *(_BYTE *)(v0 + 84) = *v1;
    *(_QWORD *)(v0 + 136) = v1 + 1;
    return swift_task_switch();
  }
}

uint64_t sub_23347937C(__int16 a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_WORD *)(v4 + 82) = a1;
  return swift_task_switch();
}

void sub_233479434()
{
  __asm { BR              X12 }
}

uint64_t sub_2334794A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560512D8);
  *(_QWORD *)(v0 + 112) = v2;
  *(_QWORD *)(v0 + 120) = sub_2331B1A14(&qword_2560512E0, &qword_2560512D8, MEMORY[0x24BDD06A0]);
  *(_BYTE *)(v0 + 88) = v1;
  *(_BYTE *)(v0 + 81) = *(_BYTE *)__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v2);
  sub_23361D394();
  __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  return swift_task_switch();
}

uint64_t sub_2334797DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 272);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_233479868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_23316BEA4(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  v4 = *(void **)(v0 + 272);
  *(_QWORD *)(v0 + 168) = v4;
  v5 = (id *)(v0 + 168);
  v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
  {
    v7 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 24);
    v9 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 72);
    if (*(_BYTE *)(v0 + 80) == 2 && !(v8 | v7 | v9 | v10 | v11 | v12 | v14 | v13))
    {
      v17 = v4;
      v18 = *(_QWORD *)(v0 + 72);

      sub_23347538C();
      swift_allocError();
      *(_QWORD *)v19 = 0;
      *(_QWORD *)(v19 + 8) = v8;
      *(_QWORD *)(v19 + 16) = v9;
      *(_QWORD *)(v19 + 24) = v10;
      *(_QWORD *)(v19 + 32) = v11;
      *(_QWORD *)(v19 + 40) = v12;
      *(_QWORD *)(v19 + 48) = v14;
      *(_QWORD *)(v19 + 56) = v18;
      *(_BYTE *)(v19 + 64) = 2;
      swift_willThrow();

      goto LABEL_6;
    }
    sub_23347C550((void *)v7, v8, v9, v10, v11, v12, v14, v13, *(_BYTE *)(v0 + 80));
  }

  type metadata accessor for FinanceNetworkError();
  sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
  swift_allocError();
  *v15 = v4;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233479A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((*(_WORD *)(v0 + 82) & 0x100) == 0)
    __asm { BR              X12 }
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __asm { BR              X3 }
}

uint64_t sub_233479EBC()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 256);
  *(_QWORD *)(v0 + 168) = v1;
  v2 = (id *)(v0 + 168);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if (swift_dynamicCast())
  {
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    if (*(_BYTE *)(v0 + 80) == 2 && !(v5 | v4 | v6 | v7 | v8 | v9 | v11 | v10))
    {
      v14 = v1;
      v15 = *(_QWORD *)(v0 + 72);

      sub_23347538C();
      swift_allocError();
      *(_QWORD *)v16 = 0;
      *(_QWORD *)(v16 + 8) = v5;
      *(_QWORD *)(v16 + 16) = v6;
      *(_QWORD *)(v16 + 24) = v7;
      *(_QWORD *)(v16 + 32) = v8;
      *(_QWORD *)(v16 + 40) = v9;
      *(_QWORD *)(v16 + 48) = v11;
      *(_QWORD *)(v16 + 56) = v15;
      *(_BYTE *)(v16 + 64) = 2;
      swift_willThrow();

      goto LABEL_6;
    }
    sub_23347C550((void *)v4, v5, v6, v7, v8, v9, v11, v10, *(_BYTE *)(v0 + 80));
  }

  type metadata accessor for FinanceNetworkError();
  sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
  swift_allocError();
  *v12 = v1;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A0AC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v2;
  sub_23361D340();
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  v5 = sub_23361C9F8();
  *(_QWORD *)(v3 + 120) = v5;
  *(_QWORD *)(v3 + 128) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  v6 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v6;
  *(_OWORD *)(v3 + 80) = a2[4];
  v7 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v7;
  return swift_task_switch();
}

uint64_t sub_23347A148()
{
  _QWORD *v0;
  char *v1;
  _QWORD *v2;

  sub_23347825C(v0[13] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, v0[14]);
  sub_23361C9BC();
  sub_23361C968();
  sub_23361C95C();
  v1 = sub_233475404();
  _sSD10FinanceKitSSRszSSRs_rlEySDyS2SGSayAA15HTTPHeaderFieldVGcfC_0((uint64_t)v1);
  sub_23361C9A4();
  sub_233476550();
  sub_23361C9EC();
  sub_23361C9B0();
  v2 = (_QWORD *)swift_task_alloc();
  v0[18] = v2;
  *v2 = v0;
  v2[1] = sub_23347A27C;
  return sub_233478F08(v0[17]);
}

uint64_t sub_23347A27C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD **)v4;
  *(_QWORD *)(*(_QWORD *)v4 + 152) = v3;
  swift_task_dealloc();
  v10 = v8[16];
  v9 = v8[17];
  v11 = v8[15];
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  else
  {
    v8[20] = a3;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_23316BEA4(a1, a2);
  }
  return swift_task_switch();
}

uint64_t sub_23347A324()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  static OrderWebServiceRegisterResponse.parse(_:)(v1, *(_BYTE **)(v0 + 96));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A38C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A3CC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v2;
  v5 = sub_23361C9F8();
  *(_QWORD *)(v3 + 96) = v5;
  *(_QWORD *)(v3 + 104) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  v6 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v6;
  v7 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return swift_task_switch();
}

uint64_t sub_23347A440()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_2332EFBA0(v0[11] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_23347A4E0;
  return sub_233478F08(v0[14]);
}

uint64_t sub_23347A4E0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD **)v4;
  *(_QWORD *)(*(_QWORD *)v4 + 128) = v3;
  swift_task_dealloc();
  v10 = v8[13];
  v9 = v8[14];
  v11 = v8[12];
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  else
  {
    v8[17] = a3;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_23316BEA4(a1, a2);
  }
  return swift_task_switch();
}

uint64_t sub_23347A588()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  static OrderWebServiceUnregisterResponse.parse(_:)(v1, *(_BYTE **)(v0 + 80));

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A5E4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A618(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v2;
  v5 = sub_23361C9F8();
  *(_QWORD *)(v3 + 136) = v5;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 152) = swift_task_alloc();
  v6 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v6;
  v7 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return swift_task_switch();
}

uint64_t sub_23347A68C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_2332EFD18(v0[16] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, v0[19]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_23347A72C;
  return sub_233478F08(v0[19]);
}

uint64_t sub_23347A72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD **)v4;
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 152);
  v10 = *(_QWORD *)(*(_QWORD *)v4 + 136);
  v11 = *(_QWORD *)(*(_QWORD *)v4 + 144);
  *(_QWORD *)(*(_QWORD *)v4 + 168) = v3;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if (!v3)
  {
    v8[22] = a3;
    v8[23] = a2;
    v8[24] = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23347A7D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v10[4];
  BOOL v11;

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(void **)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 72) != 0;
  v10[0] = *(_QWORD *)(v0 + 16);
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = v7;
  v11 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233473CE4(v1, v2, v4, v10, (uint64_t **)(v0 + 80));

  sub_23316BEA4(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v3)
    sub_23318B020((__int128 *)(v0 + 80), *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A8C0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347A8F4(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  sub_23361D340();
  *(_QWORD *)(v3 + 80) = swift_task_alloc();
  v5 = sub_23361C9F8();
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  v6 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = a2[2];
  return swift_task_switch();
}

uint64_t sub_23347A988()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_23347847C(v0[9] + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, v0[10]);
  sub_23361C9BC();
  sub_23361C968();
  sub_23361C95C();
  _sSD10FinanceKitSSRszSSRs_rlEySDyS2SGSayAA15HTTPHeaderFieldVGcfC_0(MEMORY[0x24BEE4AF8]);
  sub_23361C9A4();
  sub_23361C9EC();
  sub_23361C9B0();
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_23347AA58;
  return sub_233478F08(v0[13]);
}

uint64_t sub_23347AA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD **)v4;
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 104);
  v10 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v11 = *(_QWORD *)(*(_QWORD *)v4 + 96);
  *(_QWORD *)(*(_QWORD *)v4 + 120) = v3;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if (!v3)
  {
    v8[16] = a3;
    v8[17] = a2;
    v8[18] = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23347AAFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void **)(v0 + 128);
  static OrderWebServiceFetchChangesResponse.parse(data:urlResponse:)(v3, *(_QWORD **)(v0 + 64));

  sub_23316BEA4(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347AB84()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347ABC4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = v1;
  v4 = sub_23361C9F8();
  v2[3] = v4;
  v2[4] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *a1;
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch();
}

uint64_t sub_23347AC2C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2332EFED0(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL, *(void **)(v0 + 48), *(_QWORD *)(v0 + 40));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_23347ACC8;
  return sub_233478F08(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23347ACC8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v7;

  v7 = (_QWORD *)*v4;
  v7[8] = a3;
  v7[9] = v3;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v7[4] + 8))(v7[5], v7[3]);
  if (!v3)
    sub_23316BEA4(a1, a2);
  return swift_task_switch();
}

uint64_t sub_23347AD58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t *v8;
  uint64_t *v9;
  id v10;
  _QWORD *v11;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  v2 = *(void **)(v0 + 64);
  if (!v1)
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v9 = v8;
    *v8 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v9[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v9[1] = (uint64_t)v2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_6:
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  v3 = (void *)v1;
  v4 = v2;
  v5 = objc_msgSend(v3, sel_statusCode);
  v6 = *(void **)(v0 + 64);
  if (v5 != (id)200)
  {
    v10 = v5;
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    *v11 = v10;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    goto LABEL_6;
  }

  swift_task_dealloc();
  v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_23347AF00()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347AF34(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 16) = v2;
  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_23347AFA4;
  return v7(a1);
}

uint64_t sub_23347AFA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23347B008()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2332F25D8;
  return sub_23361F1DC();
}

uint64_t sub_23347B088()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_2332F26B8;
  return sub_23361F1DC();
}

void sub_23347B108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256049A50);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = *(void **)(a2 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegateQueue);
  v8 = *(void **)(a2 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_session);
  v9 = *(void **)(a2 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegate);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_QWORD *)(v11 + ((v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  aBlock[4] = sub_23347C49C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2331C9ED4;
  aBlock[3] = &block_descriptor_17;
  v12 = _Block_copy(aBlock);
  v13 = v8;
  v14 = v9;
  swift_release();
  objc_msgSend(v7, sel_addOperationWithBlock_, v12);
  _Block_release(v12);
}

id sub_23347B284(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256049A50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  if (*(_BYTE *)(a1
                + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalid) == 1)
    return (id)sub_23361E48C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v12 = (uint64_t (**)())(a1
                       + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  v13 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  *v12 = sub_2332F50BC;
  v12[1] = (uint64_t (*)())v11;
  sub_233166944(v13);
  return objc_msgSend(a3, sel_invalidateAndCancel);
}

uint64_t OrderWebServiceClient.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t OrderWebServiceClient.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  v2 = sub_23361D340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_23347B54C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s10FinanceKit15SessionDelegateCMa_0();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23347B594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;

  v9 = v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_baseURL;
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_walletPreferences);
  *v12 = a3;
  v12[1] = a4;
  v13 = objc_msgSend(objc_allocWithZone((Class)_s10FinanceKit15SessionDelegateCMa_0()), sel_init);
  v14 = OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegate;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegate) = v13;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  v16 = OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegateQueue;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_sessionDelegateQueue) = v15;
  v17 = v15;
  v18 = (void *)sub_23361E12C();
  objc_msgSend(v17, sel_setName_, v18);

  v19 = *(void **)(v4 + v16);
  objc_msgSend(v19, sel_setMaxConcurrentOperationCount_, 1);
  v20 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, a2, *(_QWORD *)(v4 + v14), v19);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC10FinanceKit21OrderWebServiceClient_session) = v20;
  return v4;
}

void sub_23347B710(uint64_t a1)
{
  uint64_t v1;

  sub_23347B108(a1, v1);
}

void destroy for OrderWebServiceError(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 64);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!v1)
  {

  }
}

uint64_t initializeWithCopy for OrderWebServiceError(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v3 = *((unsigned __int8 *)a2 + 64);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    *(_BYTE *)(a1 + 64) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v10 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else
  {
    v4 = *a2;
    v5 = (id)*a2;
    *(_QWORD *)a1 = v4;
    *(_BYTE *)(a1 + 64) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for OrderWebServiceError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {

    }
    v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = *(_OWORD *)(a2 + 16);
      v9 = *(_OWORD *)(a2 + 32);
      v10 = *(_OWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      v6 = *(void **)a2;
      v7 = v6;
      *(_QWORD *)a1 = v6;
      *(_BYTE *)(a1 + 64) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for OrderWebServiceError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {

    }
    v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v7;
      *(_BYTE *)(a1 + 64) = 1;
    }
    else if (v5)
    {
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 64) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for OrderWebServiceError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OrderWebServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_23347BB14(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_23347BB30(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for OrderWebServiceError()
{
  return &type metadata for OrderWebServiceError;
}

uint64_t sub_23347BB68()
{
  return type metadata accessor for OrderWebServiceClient();
}

uint64_t type metadata accessor for OrderWebServiceClient()
{
  uint64_t result;

  result = qword_2560510D8;
  if (!qword_2560510D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23347BBAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361D340();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OrderWebServiceClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OrderWebServiceClient.__allocating_init(baseURL:configuration:walletPreferences:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of OrderWebServiceClient.register(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23318C26C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.unregister(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2331676FC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.fetch(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 152) + *(_QWORD *)(*(_QWORD *)v2 + 152));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23318C26C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.fetchChanges(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 160) + *(_QWORD *)(*(_QWORD *)v2 + 160));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23318C26C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of OrderWebServiceClient.log(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 168) + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23318C26C;
  return v6(a1);
}

uint64_t dispatch thunk of OrderWebServiceClient.invalidateAndCancelAfter<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 176)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 176));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23318C26C;
  return v12(a1, a2, a3, a4);
}

uint64_t _s10FinanceKit15SessionDelegateCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_23347BF28(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_23361CC74();
      swift_allocObject();
      sub_23361CC68();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_23361D388();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23347BFBC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = v1;
  if (a1)
  {
    v4 = a1;
    if (qword_254246760 != -1)
      swift_once();
    v5 = sub_23361DB80();
    __swift_project_value_buffer(v5, (uint64_t)qword_254246748);
    v6 = a1;
    v7 = a1;
    v8 = sub_23361DB68();
    v9 = sub_23361E768();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_23361EBC4();
      *v11 = v21;

      _os_log_impl(&dword_233151000, v8, v9, "Order web service client session did become invalid with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v11, -1, -1);
      MEMORY[0x234934590](v10, -1, -1);

      goto LABEL_12;
    }

  }
  else
  {
    if (qword_254246760 != -1)
      swift_once();
    v13 = sub_23361DB80();
    __swift_project_value_buffer(v13, (uint64_t)qword_254246748);
    v8 = sub_23361DB68();
    v14 = sub_23361E750();
    if (os_log_type_enabled(v8, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_233151000, v8, v14, "Order web service client session did become invalid", v15, 2u);
      MEMORY[0x234934590](v15, -1, -1);
    }
  }

LABEL_12:
  *(_BYTE *)(v2
           + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalid) = 1;
  v16 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  v17 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtC10FinanceKitP33_BBE0122A3E1307DE2D47D62BE8CA3C6615SessionDelegate_sessionDidBecomeInvalidHandler);
  if (v17)
  {
    v18 = swift_retain();
    v17(v18);
    sub_233166944((uint64_t)v17);
    v19 = *v16;
  }
  else
  {
    v19 = 0;
  }
  *v16 = 0;
  v16[1] = 0;
  return sub_233166944(v19);
}

unint64_t sub_23347C288()
{
  unint64_t result;

  result = qword_256051228;
  if (!qword_256051228)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PaymentInfoRequestBody, &type metadata for RawBankConnectData.PaymentInfoRequestBody);
    atomic_store(result, (unint64_t *)&qword_256051228);
  }
  return result;
}

unint64_t sub_23347C2CC()
{
  unint64_t result;

  result = qword_256051240;
  if (!qword_256051240)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AccountRequestBody, &type metadata for RawBankConnectData.AccountRequestBody);
    atomic_store(result, (unint64_t *)&qword_256051240);
  }
  return result;
}

unint64_t sub_23347C310()
{
  unint64_t result;

  result = qword_256051248;
  if (!qword_256051248)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.AccountsRequestBody, &type metadata for RawBankConnectData.AccountsRequestBody);
    atomic_store(result, (unint64_t *)&qword_256051248);
  }
  return result;
}

unint64_t sub_23347C354()
{
  unint64_t result;

  result = qword_256051250;
  if (!qword_256051250)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.TermsAndConditionsRequestBody, &type metadata for RawBankConnectData.TermsAndConditionsRequestBody);
    atomic_store(result, (unint64_t *)&qword_256051250);
  }
  return result;
}

unint64_t sub_23347C398()
{
  unint64_t result;

  result = qword_256051258;
  if (!qword_256051258)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for RawBankConnectData.PassLinkUpdatingBody, &type metadata for RawBankConnectData.PassLinkUpdatingBody);
    atomic_store(result, (unint64_t *)&qword_256051258);
  }
  return result;
}

uint64_t sub_23347C3DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23347C408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256049A50);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id sub_23347C49C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256049A50) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23347B284(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_23347C4EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256049A50);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_23347C550(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!a9)
  {

  }
}

uint64_t static JSONEncoder.makeBankConnectJSONEncoder()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23361CAC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CB00();
  swift_allocObject();
  v4 = sub_23361CAF4();
  if (qword_256041C00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_256045900);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_23361CADC();
  return v4;
}

uint64_t static JSONDecoder.makeBankConnectJSONDecoder()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23361CA40();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361CA70();
  swift_allocObject();
  v4 = sub_23361CA64();
  if (qword_256041BF0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_2560458E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_23361CA4C();
  return v4;
}

uint64_t sub_23347C770(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for InternalTransaction(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    if (!v8)
      return v9;
    v18 = MEMORY[0x24BEE4AF8];
    result = sub_233273B70(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v17 = v2;
    v11 = 0;
    v9 = v18;
    v2 = a1 & 0xC000000000000001;
    while (v8 != v11)
    {
      if (v2)
        v12 = (id)MEMORY[0x234933120](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      v14 = (uint64_t)v12 + OBJC_IVAR___XPCInternalTransaction_value;
      swift_beginAccess();
      sub_2332AB558(v14, (uint64_t)v7);

      v18 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_233273B70(v15 > 1, v16 + 1, 1);
        v9 = v18;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v16 + 1;
      sub_2332AB5D8((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16);
      if (v8 == v11)
        return v9;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v8 = sub_23361EF30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23347CA70(int a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  type metadata accessor for InternalTransaction.XPC(0);
  v3[5] = sub_23361E3F0();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23347CADC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = sub_23347C770(v0[5]);
  v0[6] = v2;
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_23347CB80;
  return v7(v2, v3, v4);
}

uint64_t sub_23347CB80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23347CBE4()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;

  v1 = *(void (***)(_QWORD, _QWORD))(v0 + 32);
  sub_2333059CC(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for Transaction.Insight.XPC(0);
  v2 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v2);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347CDB8(const void *a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23347CE04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_23347CE80;
  return v6(v2, v3);
}

uint64_t sub_23347CE80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23347CEDC()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;

  v1 = *(void (***)(_QWORD, _QWORD))(v0 + 24);
  sub_2333059CC(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for Transaction.Insight.XPC(0);
  v2 = (void *)sub_23361E054();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v2);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347CF7C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23347CFA8()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2331676FC;
  return ((uint64_t (*)(const void *, uint64_t))((char *)&dword_2560512E8 + dword_2560512E8))(v2, v3);
}

uint64_t sub_23347D014()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23347D048()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23318C26C;
  return ((uint64_t (*)(int, void *, uint64_t))((char *)&dword_2560512F8 + dword_2560512F8))(v2, v3, v4);
}

uint64_t sub_23347D0BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (*a1 == *a2)
    return 0;
  if ((sub_23361E504() & 1) != 0)
    return 1;
  return (v3 < v2) & sub_23361E510();
}

uint64_t sub_23347D130(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a2;
  v3 = *a1;
  if (*a2 == *a1)
  {
    v4 = 1;
  }
  else if ((sub_23361E504() & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v4 = (v3 >= v2) | sub_23361E510() ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23347D1AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  if (*a1 == *a2)
  {
    v4 = 1;
  }
  else if ((sub_23361E504() & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v4 = (v3 >= v2) | sub_23361E510() ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23347D228(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  v3 = *a1;
  if (*a2 == *a1)
    return 0;
  if ((sub_23361E504() & 1) != 0)
    return 1;
  return (v3 < v2) & sub_23361E510();
}

uint64_t sub_23347D29C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v24 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD **)v1;
  v17 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v17 >= 3)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_233605C90(v16);
      v16 = (_QWORD *)result;
    }
    v19 = v16[2];
    if (v19)
    {
      v20 = v19 - 1;
      v21 = (uint64_t)v16 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      sub_233168580(v21 + *(_QWORD *)(v4 + 72) * (v19 - 1), (uint64_t)v13, type metadata accessor for TaskPriorityQueue.PendingTask);
      v16[2] = v20;
      sub_233168580((uint64_t)v13, (uint64_t)v15, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233480D50(v21, v16[2], (uint64_t)v15);
      *(_QWORD *)v1 = v16;
      sub_2331684BC((uint64_t)v15, a1, type metadata accessor for TaskPriorityQueue.PendingTask);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
      return sub_233168500((uint64_t)v15, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (!v17)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = sub_233605C90(v16);
    v16 = (_QWORD *)result;
  }
  v22 = v16[2];
  if (!v22)
    goto LABEL_14;
  v23 = v22 - 1;
  sub_233168580((uint64_t)v16+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * (v22 - 1), (uint64_t)v7, type metadata accessor for TaskPriorityQueue.PendingTask);
  v16[2] = v23;
  *(_QWORD *)v1 = v16;
  sub_233168580((uint64_t)v7, (uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
  sub_233168580((uint64_t)v10, a1, type metadata accessor for TaskPriorityQueue.PendingTask);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

uint64_t sub_23347D4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t (*v19)(uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  char *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t *v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v43 = a2;
  v44 = a1;
  v5 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (unint64_t *)((char *)&v38 - v10);
  v12 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  MEMORY[0x24BDAC7A8](v39);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v3, (uint64_t)v14, type metadata accessor for TaskPriorityQueue.State);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v42 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v14, 1, v17);
  v19 = type metadata accessor for TaskPriorityQueue.State;
  if (v18 == 1)
    goto LABEL_17;
  v41 = v3;
  sub_233168500(v3, type metadata accessor for TaskPriorityQueue.State);
  v20 = &v14[*(int *)(v17 + 48)];
  v21 = *(_QWORD *)v20;
  v22 = *((_QWORD *)v20 + 1);
  sub_233168580((uint64_t)v14, (uint64_t)v16, type metadata accessor for TaskPriorityQueue.CurrentTask);
  v45 = v22;
  v23 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
LABEL_15:
    sub_2332741D8(v23 > 1, (int64_t)v14, 1);
    v22 = v45;
    goto LABEL_6;
  }
  v40 = v21 + 1;
  v24 = (char *)v11 + *(int *)(v5 + 20);
  v25 = sub_23361E534();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v44, v25);
  *v11 = v21;
  v26 = (unint64_t *)((char *)v11 + *(int *)(v5 + 24));
  *v26 = v43;
  v26[1] = a3;
  sub_2331684BC((uint64_t)v11, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.PendingTask);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45 = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_2332741D8(0, *(_QWORD *)(v22 + 16) + 1, 1);
    v22 = v45;
  }
  v21 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  v14 = (char *)(v21 + 1);
  if (v21 >= v23 >> 1)
    goto LABEL_15;
LABEL_6:
  *(_QWORD *)(v22 + 16) = v14;
  v14 = (char *)(v22 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
  sub_233168580((uint64_t)v9, (uint64_t)&v14[*(_QWORD *)(v6 + 72) * v21], type metadata accessor for TaskPriorityQueue.PendingTask);
  v28 = *(_QWORD *)(v22 + 16);
  if (!v28)
  {
    __break(1u);
LABEL_17:
    result = sub_233168500((uint64_t)v14, v19);
    __break(1u);
    return result;
  }
  sub_233480594(v28 - 1, __clz(v28) ^ 0x3F, (uint64_t)v14, v28);
  sub_233168500((uint64_t)v11, type metadata accessor for TaskPriorityQueue.PendingTask);
  if ((sub_23361E504() & 1) != 0)
  {
    v29 = &v16[*(int *)(v39 + 20)];
    v30 = *(void (**)(uint64_t))v29;
    v31 = v41;
    if ((v29[16] & 1) != 0)
    {
      v32 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v29 = 0;
      *((_QWORD *)v29 + 1) = 0;
      v29[16] = 1;
      v33 = (unint64_t *)(v31 + *(int *)(v17 + 48));
      sub_2331684BC((uint64_t)v16, v31, type metadata accessor for TaskPriorityQueue.CurrentTask);
      *v33 = v40;
      v33[1] = v22;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v31, 0, 1, v17);
      if (v30)
      {
        sub_233166934((uint64_t)v30);
        v30(1);
        sub_23347F86C((uint64_t)v30, v32, 1);
        sub_23347F86C((uint64_t)v30, v32, 1);
      }
    }
    else
    {
      *(_QWORD *)v29 = *(_QWORD *)v29 & 1 | 0x100;
      *((_QWORD *)v29 + 1) = 0;
      v29[16] = 0;
      v36 = (unint64_t *)(v31 + *(int *)(v17 + 48));
      sub_2331684BC((uint64_t)v16, v31, type metadata accessor for TaskPriorityQueue.CurrentTask);
      *v36 = v40;
      v36[1] = v22;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v31, 0, 1, v17);
    }
  }
  else
  {
    v34 = v41;
    v35 = (unint64_t *)(v41 + *(int *)(v17 + 48));
    sub_2331684BC((uint64_t)v16, v41, type metadata accessor for TaskPriorityQueue.CurrentTask);
    *v35 = v40;
    v35[1] = v22;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v34, 0, 1, v17);
  }
  return sub_233168500((uint64_t)v16, type metadata accessor for TaskPriorityQueue.CurrentTask);
}

uint64_t sub_23347D908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(uint64_t);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;

  v1 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2331684BC(v0, v3, type metadata accessor for TaskPriorityQueue.State);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7);
  v10 = type metadata accessor for TaskPriorityQueue.State;
  if (v9 != 1)
  {
    sub_233168500(v0, type metadata accessor for TaskPriorityQueue.State);
    v11 = (uint64_t *)(v3 + *(int *)(v7 + 48));
    v13 = *v11;
    v12 = v11[1];
    sub_233168580(v3, (uint64_t)v6, type metadata accessor for TaskPriorityQueue.CurrentTask);
    v14 = &v6[*(int *)(v4 + 20)];
    v3 = *(_QWORD *)v14;
    if ((v14[16] & 1) != 0)
    {
      v15 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v14 = 0;
      *((_QWORD *)v14 + 1) = 0;
      v14[16] = 1;
      v16 = (_QWORD *)(v0 + *(int *)(v7 + 48));
      sub_2331684BC((uint64_t)v6, v0, type metadata accessor for TaskPriorityQueue.CurrentTask);
      *v16 = v13;
      v16[1] = v12;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v0, 0, 1, v7);
      if (v3)
      {
        sub_233166934(v3);
        ((void (*)(_QWORD))v3)(0);
        sub_23347F86C(v3, v15, 1);
        sub_23347F86C(v3, v15, 1);
      }
      return sub_233168500((uint64_t)v6, type metadata accessor for TaskPriorityQueue.CurrentTask);
    }
    if ((v3 & 1) == 0)
    {
      *(_QWORD *)v14 = *(_QWORD *)v14 & 0x100 | 1;
      *((_QWORD *)v14 + 1) = 0;
      v14[16] = 0;
      v17 = (_QWORD *)(v0 + *(int *)(v7 + 48));
      sub_2331684BC((uint64_t)v6, v0, type metadata accessor for TaskPriorityQueue.CurrentTask);
      *v17 = v13;
      v17[1] = v12;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v0, 0, 1, v7);
      return sub_233168500((uint64_t)v6, type metadata accessor for TaskPriorityQueue.CurrentTask);
    }
    __break(1u);
  }
  result = sub_233168500(v3, v10);
  __break(1u);
  return result;
}

uint64_t sub_23347DB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (**v39)(uint64_t);
  void (*v40)(uint64_t);
  void (*v41)(uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(uint64_t);
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v63 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051480);
  v8 = MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v55 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v62 = (char *)&v55 - v13;
  v14 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v64 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v55 - v20;
  sub_2331684BC(v1, (uint64_t)v16, type metadata accessor for TaskPriorityQueue.State);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v66 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v16, 1, v22) == 1)
    goto LABEL_9;
  v23 = &v16[*(int *)(v22 + 48)];
  v24 = *((_QWORD *)v23 + 1);
  v61 = *(_QWORD *)v23;
  sub_233168580((uint64_t)v16, (uint64_t)v21, type metadata accessor for TaskPriorityQueue.CurrentTask);
  v68 = v24;
  v25 = &v21[*(int *)(v17 + 20)];
  if (v25[16] != 1 || *(_QWORD *)v25)
  {
    __break(1u);
LABEL_9:
    result = sub_233168500((uint64_t)v16, type metadata accessor for TaskPriorityQueue.State);
    __break(1u);
    return result;
  }
  sub_233168500(v1, type metadata accessor for TaskPriorityQueue.State);
  sub_23347D29C((uint64_t)v4);
  v26 = v5;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_233168608((uint64_t)v4, &qword_256051478);
    swift_release();
    sub_233168500((uint64_t)v21, type metadata accessor for TaskPriorityQueue.CurrentTask);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v1, 1, 1, v22);
  }
  else
  {
    v58 = v17;
    v59 = v1;
    v28 = v12;
    v29 = v65;
    v30 = v62;
    v31 = v63;
    v56 = &v62[*(int *)(v67 + 48)];
    sub_233168580((uint64_t)v4, v63, type metadata accessor for TaskPriorityQueue.PendingTask);
    v32 = v31 + *(int *)(v26 + 20);
    v33 = sub_23361E534();
    v34 = (uint64_t)v21;
    v35 = v26;
    v36 = v33;
    v60 = v34;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
    v57 = *(_QWORD *)(v33 - 8);
    v38 = v57;
    v37(v28, v32, v33);
    v39 = (void (**)(uint64_t))(v31 + *(int *)(v35 + 24));
    v40 = *v39;
    v41 = v39[1];
    v42 = (uint64_t)v30;
    v37(v30, (uint64_t)v28, v36);
    v43 = v56;
    *(_QWORD *)v56 = v40;
    *((_QWORD *)v43 + 1) = v41;
    v44 = v40;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v46 = v42;
    v45(v29, v42, v36);
    v47 = (uint64_t)v64;
    v37(v64, (uint64_t)v29, v36);
    v48 = v59;
    v49 = v47 + *(int *)(v58 + 20);
    *(_QWORD *)v49 = 0;
    *(_QWORD *)(v49 + 8) = 0;
    *(_BYTE *)(v49 + 16) = 0;
    v50 = (_QWORD *)(v48 + *(int *)(v22 + 48));
    sub_2331684BC(v47, v48, type metadata accessor for TaskPriorityQueue.CurrentTask);
    v51 = v68;
    *v50 = v61;
    v50[1] = v51;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v48, 0, 1, v22);
    v52 = &v29[*(int *)(v67 + 48)];
    v45(v29, v46, v36);
    *(_QWORD *)v52 = v44;
    *((_QWORD *)v52 + 1) = v41;
    v53 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
    swift_retain();
    v54 = v53(v29, v36);
    v44(v54);
    swift_release();
    sub_233168500(v47, type metadata accessor for TaskPriorityQueue.CurrentTask);
    sub_233168608(v46, &qword_256051480);
    return sub_233168500(v60, type metadata accessor for TaskPriorityQueue.CurrentTask);
  }
}

uint64_t TaskPriorityQueue.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256051320);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2331684BC((uint64_t)v4, v6 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v6 + 16), type metadata accessor for TaskPriorityQueue.State);
  result = sub_233168500((uint64_t)v4, type metadata accessor for TaskPriorityQueue.State);
  *a1 = v6;
  return result;
}

uint64_t type metadata accessor for TaskPriorityQueue.State(uint64_t a1)
{
  return sub_233177414(a1, (uint64_t *)&unk_256051458);
}

uint64_t TaskPriorityQueue.addTask<A>(priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[13] = a4;
  v6[14] = a5;
  v6[11] = a2;
  v6[12] = a3;
  v6[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v6[15] = swift_task_alloc();
  v7 = sub_23361E534();
  v6[16] = v7;
  v6[17] = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v9 = *v5;
  v6[18] = v8;
  v6[19] = v9;
  return swift_task_switch();
}

uint64_t sub_23347E164()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[15];
  sub_23347E47C(v0[11], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[15];
    sub_23361E570();
    sub_233168608(v4, (uint64_t *)&unk_254247060);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[17] + 32))(v0[18], v0[15], v0[16]);
  }
  return swift_task_switch();
}

uint64_t sub_23347E208()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v2 = v0[18];
  v1 = v0[19];
  v0[2] = v0;
  v0[3] = sub_23347E2E4;
  v3 = swift_continuation_init();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = v1 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v1 + 16);
  v6 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_23347E4C4(v5, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
  os_unfair_lock_unlock(v6);
  swift_task_dealloc();
  return swift_continuation_await();
}

uint64_t sub_23347E2E4()
{
  return swift_task_switch();
}

uint64_t sub_23347E330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v4;
  v5 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v6;
  *v6 = v0;
  v6[1] = sub_23347E3D4;
  return sub_23361EE40();
}

uint64_t sub_23347E3D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23347E430()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347E47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23347E4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD v23[2];

  v7 = type metadata accessor for TaskPriorityQueue.State(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v23 - v11;
  sub_2331684BC(a1, (uint64_t)v23 - v11, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    v23[1] = v3;
    sub_233168500((uint64_t)v12, type metadata accessor for TaskPriorityQueue.State);
    sub_2331684BC(a1, (uint64_t)v10, type metadata accessor for TaskPriorityQueue.State);
    if (v16(v10, 1, v14) == 1)
    {
      sub_233168500(a1, type metadata accessor for TaskPriorityQueue.State);
      sub_233168500((uint64_t)v10, type metadata accessor for TaskPriorityQueue.State);
      v17 = sub_23361E534();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v18 = a1 + *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      *(_QWORD *)v18 = 0;
      *(_QWORD *)(v18 + 8) = 0;
      *(_BYTE *)(v18 + 16) = 0;
      v19 = (_QWORD *)(a1 + *(int *)(v14 + 48));
      v20 = MEMORY[0x24BEE4AF8];
      *v19 = 1;
      v19[1] = v20;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      return swift_continuation_throwingResume();
    }
    else
    {
      result = sub_233168500((uint64_t)v10, type metadata accessor for TaskPriorityQueue.State);
      __break(1u);
    }
  }
  else
  {
    swift_release();
    sub_233168500((uint64_t)v12, type metadata accessor for TaskPriorityQueue.CurrentTask);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a3;
    sub_23347D4F8(a2, (uint64_t)sub_233481F64, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_23347E6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  sub_23361EBAC();
  v7[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  v7[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23347E77C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = v0[18];
  v2 = v0[15];
  v3 = v0[16];
  v5 = v0[13];
  v4 = v0[14];
  v6 = v0[12];
  v7 = sub_23361E534();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, v6, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v1, 0, 1, v7);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v3;
  v9[5] = v5;
  v9[6] = v4;
  v9[7] = v2;
  v10 = sub_23361E4C8();
  v0[19] = v10;
  swift_retain();
  swift_retain();
  sub_23347ED48(v1, (uint64_t)&unk_256051470, (uint64_t)v9, v10);
  sub_233168608(v1, (uint64_t *)&unk_254247060);
  return swift_task_switch();
}

uint64_t sub_23347E88C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v1 = *(uint64_t **)(v0 + 120);
  *(_QWORD *)(v0 + 56) = v0 + 188;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23347E97C;
  v2 = swift_continuation_init();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = *v1;
  v5 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *v1 + 16);
  *(_QWORD *)(v0 + 160) = v5;
  v6 = (uint64_t)v1 + v5;
  v7 = *(unsigned int *)(v4 + 48);
  *(_DWORD *)(v0 + 184) = v7;
  v8 = (os_unfair_lock_s *)((char *)v1 + ((v7 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_23347EEF4(v6, *(_QWORD *)(v3 + 16));
  *(_QWORD *)(v0 + 168) = 0;
  os_unfair_lock_unlock(v8);
  swift_task_dealloc();
  return swift_continuation_await();
}

uint64_t sub_23347E97C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)v0 + 189) = *(_BYTE *)(*(_QWORD *)v0 + 188);
  return swift_task_switch();
}

uint64_t sub_23347E9CC()
{
  uint64_t v0;
  _QWORD *v1;

  if (*(_BYTE *)(v0 + 189) == 1)
    sub_23361E4BC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_23347EA48;
  return sub_23361E4B0();
}

uint64_t sub_23347EA48()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23347EA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v1) == 1)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 168);
    v5 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 120) + ((*(unsigned int *)(v0 + 184) + 3) & 0x1FFFFFFFCLL));
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 80), v2, v1);
    os_unfair_lock_lock(v5);
    sub_23347DB30();
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v0 + 120)
                                           + ((*(unsigned int *)(v0 + 184) + 3) & 0x1FFFFFFFCLL)));
    if (!v4)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_23347EB90(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_23318C26C;
  return sub_23347E6F0(a1, a2, v7, v8, v9, v10, v6);
}

uint64_t sub_23347EC20(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  *(_QWORD *)(v6 + 16) = a6;
  v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v8;
  *v8 = v6;
  v8[1] = sub_23347EC88;
  return v10(a1);
}

uint64_t sub_23347EC88()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23347ECDC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16)
                          + ((*(unsigned int *)(**(_QWORD **)(v0 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v1);
  sub_23347D908();
  os_unfair_lock_unlock(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347ED48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v22[4];
  _QWORD v23[4];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23347E47C(a1, (uint64_t)v12);
  v13 = sub_23361E534();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_233168608((uint64_t)v12, (uint64_t *)&unk_254247060);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_23361E474();
      v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23361E528();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v18 = *v5;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = *(_QWORD *)(a4 + 16);
  v19[3] = a2;
  v19[4] = a3;
  v20 = (_QWORD *)(v17 | v15);
  if (v17 | v15)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v15;
    v23[3] = v17;
  }
  v22[1] = 1;
  v22[2] = v20;
  v22[3] = v18;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23347EEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for TaskPriorityQueue.State(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  sub_2331684BC(a1, (uint64_t)v6, type metadata accessor for TaskPriorityQueue.State);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    result = sub_233168500((uint64_t)v6, type metadata accessor for TaskPriorityQueue.State);
    __break(1u);
  }
  else
  {
    v13 = &v6[*(int *)(v11 + 48)];
    v14 = *(_QWORD *)v13;
    v28 = *((_QWORD *)v13 + 1);
    result = sub_233168580((uint64_t)v6, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.CurrentTask);
    v16 = &v9[*(int *)(v7 + 20)];
    if ((v16[16] & 1) == 0)
    {
      v17 = *(_QWORD *)v16;
      sub_233168500(a1, type metadata accessor for TaskPriorityQueue.State);
      if ((v17 & 1) != 0)
      {
        sub_23347F86C(*(_QWORD *)v16, *((_QWORD *)v16 + 1), v16[16]);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        v16[16] = 1;
        v23 = (_QWORD *)(a1 + *(int *)(v11 + 48));
        sub_2331684BC((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.CurrentTask);
        v24 = v28;
        *v23 = v14;
        v23[1] = v24;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        **(_BYTE **)(*(_QWORD *)(a2 + 64) + 40) = 0;
      }
      else
      {
        if ((v17 & 0x100) == 0)
        {
          v18 = *(_QWORD *)v16;
          v19 = *((_QWORD *)v16 + 1);
          v20 = v16[16];
          swift_retain();
          sub_23347F86C(v18, v19, v20);
          *(_QWORD *)v16 = sub_233481EBC;
          *((_QWORD *)v16 + 1) = v10;
          v16[16] = 1;
          v21 = (_QWORD *)(a1 + *(int *)(v11 + 48));
          sub_2331684BC((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.CurrentTask);
          v22 = v28;
          *v21 = v14;
          v21[1] = v22;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
LABEL_9:
          sub_233168500((uint64_t)v9, type metadata accessor for TaskPriorityQueue.CurrentTask);
          return swift_release();
        }
        sub_23347F86C(*(_QWORD *)v16, *((_QWORD *)v16 + 1), v16[16]);
        *(_QWORD *)v16 = 0;
        *((_QWORD *)v16 + 1) = 0;
        v16[16] = 1;
        v25 = (_QWORD *)(a1 + *(int *)(v11 + 48));
        sub_2331684BC((uint64_t)v9, a1, type metadata accessor for TaskPriorityQueue.CurrentTask);
        v26 = v28;
        *v25 = v14;
        v25[1] = v26;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        **(_BYTE **)(*(_QWORD *)(a2 + 64) + 40) = 1;
      }
      swift_continuation_resume();
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t TaskPriorityQueue.addThrowingTask<A>(priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[7] = a4;
  v6[8] = a5;
  v6[5] = a2;
  v6[6] = a3;
  v6[4] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246B30);
  v7 = sub_23361F3BC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v8 = swift_task_alloc();
  v9 = *v5;
  v6[12] = v8;
  v6[13] = v9;
  return swift_task_switch();
}

uint64_t sub_23347F270()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[6];
  v0[2] = v0[13];
  v4 = (_QWORD *)swift_allocObject();
  v0[14] = v4;
  v4[2] = v2;
  v4[3] = v3;
  v4[4] = v1;
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[15] = v5;
  *v5 = v0;
  v5[1] = sub_23347F324;
  return TaskPriorityQueue.addTask<A>(priority:operation:)(v0[12], v0[5], (uint64_t)&unk_256051350, (uint64_t)v4, v0[9]);
}

uint64_t sub_23347F324()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23347F380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v1);
  sub_2332D8AA4(v1, v0 + 24, v2);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347F434(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = *(_QWORD *)(a4 - 8);
  v6 = swift_task_alloc();
  v4[5] = v6;
  v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v4[6] = v7;
  *v7 = v4;
  v7[1] = sub_23347F4C0;
  return v9(v6);
}

uint64_t sub_23347F4C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23347F524()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246B30);
  sub_23361F3BC();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347F5A0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254246B30);
  sub_23361F3BC();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23347F610()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23347F634(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = (int *)v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2331676FC;
  return sub_23347F434(a1, v5, v6, v4);
}

ValueMetadata *type metadata accessor for TaskPriorityQueue()
{
  return &type metadata for TaskPriorityQueue;
}

_QWORD *initializeBufferWithCopyOfBuffer for TaskPriorityQueue.PriorityQueue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for TaskPriorityQueue.PriorityQueue()
{
  return swift_release();
}

_QWORD *assignWithCopy for TaskPriorityQueue.PriorityQueue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for TaskPriorityQueue.PriorityQueue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TaskPriorityQueue.PriorityQueue()
{
  return &type metadata for TaskPriorityQueue.PriorityQueue;
}

uint64_t *sub_23347F764(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361E534();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_23347F814(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
  }
  return a1;
}

uint64_t sub_23347F814(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_233166934(result);
  return result;
}

uint64_t sub_23347F820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23361E534();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_23347F86C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));
}

uint64_t sub_23347F86C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_233166944(result);
  return result;
}

uint64_t sub_23347F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = sub_23361E534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_23347F814(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  return a1;
}

uint64_t sub_23347F8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v6 = sub_23361E534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_23347F814(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  v15 = *(_BYTE *)(v8 + 16);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  sub_23347F86C(v13, v14, v15);
  return a1;
}

uint64_t sub_23347F98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23361E534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_23347F9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v6 = sub_23361E534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  v13 = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = v10;
  sub_23347F86C(v11, v12, v13);
  return a1;
}

uint64_t sub_23347FA70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23347FA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23361E534();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23347FAF8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23347FB04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23361E534();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for TaskPriorityQueue.CurrentTask(uint64_t a1)
{
  return sub_233177414(a1, qword_2560513B0);
}

uint64_t sub_23347FB94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361E534();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23347FC04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t *, _QWORD, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23361E534();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = *(_QWORD *)v13;
      v15 = *((_QWORD *)v13 + 1);
      v16 = v13[16];
      sub_23347F814(*(_QWORD *)v13, v15, v16);
      *(_QWORD *)v12 = v14;
      *((_QWORD *)v12 + 1) = v15;
      v12[16] = v16;
      v17 = *(int *)(v7 + 48);
      v18 = (uint64_t *)((char *)a1 + v17);
      v19 = (uint64_t *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_retain();
      v21(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23347FD30(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23361E534();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = type metadata accessor for TaskPriorityQueue.CurrentTask(0);
    sub_23347F86C(*(_QWORD *)(a1 + *(int *)(v5 + 20)), *(_QWORD *)(a1 + *(int *)(v5 + 20) + 8), *(_BYTE *)(a1 + *(int *)(v5 + 20) + 16));
    return swift_release();
  }
  return result;
}

char *sub_23347FDC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361E534();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = v11[16];
    sub_23347F814(*(_QWORD *)v11, v13, v14);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    v10[16] = v14;
    v15 = *(int *)(v6 + 48);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_retain();
    v19(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_23347FED0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v23 = sub_23361E534();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(a1, a2, v23);
      v24 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *(_QWORD *)v26;
      v28 = *((_QWORD *)v26 + 1);
      v29 = v26[16];
      sub_23347F814(*(_QWORD *)v26, v28, v29);
      v30 = *(_QWORD *)v25;
      v31 = *((_QWORD *)v25 + 1);
      v32 = v25[16];
      *(_QWORD *)v25 = v27;
      *((_QWORD *)v25 + 1) = v28;
      v25[16] = v29;
      sub_23347F86C(v30, v31, v32);
      v33 = *(int *)(v6 + 48);
      v34 = &a1[v33];
      v35 = &a2[v33];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
      swift_retain();
      swift_release();
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_256051318);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361E534();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  sub_23347F814(*(_QWORD *)v14, v16, v17);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  v13[16] = v17;
  v18 = *(int *)(v6 + 48);
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  swift_retain();
  v21(a1, 0, 1, v6);
  return a1;
}

char *sub_23348009C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23361E534();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_233480180(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v16 = sub_23361E534();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(a1, a2, v16);
      v17 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = v19[16];
      v21 = *(_QWORD *)v18;
      v22 = *((_QWORD *)v18 + 1);
      v23 = v18[16];
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v18[16] = v20;
      sub_23347F86C(v21, v22, v23);
      v24 = *(int *)(v6 + 48);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v28 = *(_QWORD *)v26;
      v27 = *((_QWORD *)v26 + 1);
      *(_QWORD *)v25 = v28;
      *((_QWORD *)v25 + 1) = v27;
      swift_release();
      return a1;
    }
    sub_233168608((uint64_t)a1, &qword_256051318);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23361E534();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(type metadata accessor for TaskPriorityQueue.CurrentTask(0) + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_233480308()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233480314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_233480364()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233480370(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2334803C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_233480400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051318);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_233480444()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TaskPriorityQueue.CurrentTask(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_2334804B4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2334804E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4 = *(int **)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23318C26C;
  v6[2] = v5;
  v9 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v7 = (_QWORD *)swift_task_alloc();
  v6[3] = v7;
  *v7 = v6;
  v7[1] = sub_23347EC88;
  return v9(a1);
}

uint64_t type metadata accessor for TaskPriorityQueue.PendingTask(uint64_t a1)
{
  return sub_233177414(a1, qword_2560514F0);
}

uint64_t sub_233480594(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;

  v81 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v8 = MEMORY[0x24BDAC7A8](v81);
  v10 = (uint64_t *)((char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (uint64_t *)((char *)&v72 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v74 = (uint64_t)&v72 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v76 = (uint64_t *)((char *)&v72 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v79 = (uint64_t *)((char *)&v72 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v73 = (uint64_t)&v72 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v75 = (uint64_t *)((char *)&v72 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v78 = (unint64_t)&v72 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (uint64_t *)((char *)&v72 - v27);
  result = MEMORY[0x24BDAC7A8](v26);
  v32 = (uint64_t *)((char *)&v72 - v31);
  if (!a1)
    return result;
  v77 = a4;
  v33 = a1 - 1;
  if (a1 - 1 < 0)
    v33 = a1;
  v34 = v33 >> 1;
  v35 = *(_QWORD *)(v30 + 72);
  v36 = a1;
  v37 = a3 + v35 * a1;
  v80 = v35;
  v38 = v34;
  v39 = a3 + v35 * v34;
  if ((a2 & 1) != 0)
  {
    sub_2331684BC(v37, (uint64_t)v13, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_2331684BC(v39, (uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
    v40 = *v13;
    v32 = v13;
    v41 = *v10;
    if (v40 == *v10)
      goto LABEL_8;
    if ((sub_23361E504() & 1) != 0)
      goto LABEL_13;
    if ((sub_23361E510() & 1) == 0)
    {
LABEL_8:
      v42 = (uint64_t)v10;
      goto LABEL_9;
    }
    v71 = (uint64_t)v10;
  }
  else
  {
    sub_2331684BC(v37, (uint64_t)&v72 - v31, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_2331684BC(v39, (uint64_t)v28, type metadata accessor for TaskPriorityQueue.PendingTask);
    v40 = *v28;
    v41 = *v32;
    if (*v28 == *v32)
    {
LABEL_6:
      v42 = (uint64_t)v28;
LABEL_9:
      sub_233168500(v42, type metadata accessor for TaskPriorityQueue.PendingTask);
      result = sub_233168500((uint64_t)v32, type metadata accessor for TaskPriorityQueue.PendingTask);
      goto LABEL_15;
    }
    if ((sub_23361E504() & 1) != 0)
    {
      v10 = v28;
LABEL_13:
      sub_233168500((uint64_t)v10, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168500((uint64_t)v32, type metadata accessor for TaskPriorityQueue.PendingTask);
LABEL_14:
      --a2;
      result = sub_233480C48(v36, v38, a3);
      v36 = v38;
      goto LABEL_15;
    }
    if ((sub_23361E510() & 1) == 0)
      goto LABEL_6;
    v71 = (uint64_t)v28;
  }
  sub_233168500(v71, type metadata accessor for TaskPriorityQueue.PendingTask);
  result = sub_233168500((uint64_t)v32, type metadata accessor for TaskPriorityQueue.PendingTask);
  if (v41 < v40)
    goto LABEL_14;
LABEL_15:
  v77 = a3;
  if ((a2 & 1) != 0)
  {
    if (v36 > 2)
    {
      do
      {
        v78 = v36 - 3;
        v59 = (unint64_t)(v36 - 3) >> 2;
        v61 = (uint64_t)v79;
        v60 = v80;
        v62 = v36;
        v63 = v80 * v36;
        v64 = a3 + v80 * v36;
        sub_2331684BC(v64, (uint64_t)v79, type metadata accessor for TaskPriorityQueue.PendingTask);
        v65 = v59 * v60;
        v66 = a3 + v59 * v60;
        v52 = v76;
        sub_2331684BC(v66, (uint64_t)v76, type metadata accessor for TaskPriorityQueue.PendingTask);
        v67 = (uint64_t *)v61;
        v68 = *v52;
        v69 = *v67;
        if (*v52 == *v67)
        {
          v49 = v67;
          goto LABEL_59;
        }
        v75 = (uint64_t *)v66;
        if ((sub_23361E504() & 1) != 0)
        {
          sub_233168500((uint64_t)v52, type metadata accessor for TaskPriorityQueue.PendingTask);
          result = sub_233168500((uint64_t)v79, type metadata accessor for TaskPriorityQueue.PendingTask);
          a3 = v77;
        }
        else
        {
          if ((sub_23361E510() & 1) == 0)
          {
            v52 = v76;
            v49 = v79;
            goto LABEL_59;
          }
          sub_233168500((uint64_t)v76, type metadata accessor for TaskPriorityQueue.PendingTask);
          result = sub_233168500((uint64_t)v79, type metadata accessor for TaskPriorityQueue.PendingTask);
          v56 = v69 < v68;
          a3 = v77;
          if (!v56)
            return result;
        }
        if (v62 != v59)
        {
          if (!a3)
          {
LABEL_62:
            __break(1u);
            return result;
          }
          sub_233168580(v64, v74, type metadata accessor for TaskPriorityQueue.PendingTask);
          v70 = (uint64_t)v75;
          if (v63 < v65 || v64 >= (unint64_t)v75 + v80)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v63 != v65)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          result = sub_233168580(v74, v70, type metadata accessor for TaskPriorityQueue.PendingTask);
        }
        v36 = v59;
      }
      while (v78 > 0xB);
    }
  }
  else if (v36 > 2)
  {
    v43 = type metadata accessor for TaskPriorityQueue.PendingTask;
    while (1)
    {
      v44 = v36 - 3;
      v45 = (unint64_t)(v36 - 3) >> 2;
      v46 = v80;
      v47 = v36;
      v74 = v80 * v36;
      v48 = a3 + v80 * v36;
      v49 = (uint64_t *)v78;
      sub_2331684BC(v48, v78, v43);
      v50 = v45;
      v51 = v45 * v46;
      v76 = (uint64_t *)(a3 + v45 * v46);
      v52 = v75;
      v53 = v43;
      sub_2331684BC((uint64_t)v76, (uint64_t)v75, v43);
      v54 = *v49;
      v55 = *v52;
      if (*v49 == *v52)
        break;
      v79 = (uint64_t *)v44;
      if ((sub_23361E504() & 1) != 0)
      {
        v43 = v53;
        sub_233168500((uint64_t)v52, v53);
        result = sub_233168500(v78, v53);
        a3 = v77;
      }
      else
      {
        if ((sub_23361E510() & 1) == 0)
        {
          v52 = v75;
          v49 = (uint64_t *)v78;
          break;
        }
        sub_233168500((uint64_t)v75, v53);
        result = sub_233168500(v78, v53);
        v56 = v55 < v54;
        v43 = v53;
        a3 = v77;
        if (!v56)
          return result;
      }
      v57 = (unint64_t)v79;
      if (v47 != v50)
      {
        if (!a3)
        {
          __break(1u);
          goto LABEL_62;
        }
        sub_233168580(v48, v73, v43);
        v58 = (uint64_t)v76;
        if (v74 < v51 || v48 >= (unint64_t)v76 + v80)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v74 != v51)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        result = sub_233168580(v73, v58, v43);
      }
      v36 = v50;
      if (v57 <= 0xB)
        return result;
    }
LABEL_59:
    sub_233168500((uint64_t)v52, type metadata accessor for TaskPriorityQueue.PendingTask);
    return sub_233168500((uint64_t)v49, type metadata accessor for TaskPriorityQueue.PendingTask);
  }
  return result;
}

uint64_t sub_233480C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = (char *)&v18 - v10;
  if (a1 != a2)
  {
    if (a3)
    {
      v12 = *(_QWORD *)(v8 + 72);
      v13 = v12 * a1;
      v14 = a3 + v12 * a1;
      v15 = v12 * a2;
      v16 = a3 + v15;
      sub_233168580(v14, (uint64_t)&v18 - v10, type metadata accessor for TaskPriorityQueue.PendingTask);
      if (v13 < v15 || v14 >= v16 + v12)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v13 != v15)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      return sub_233168580((uint64_t)v11, v16, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_233480D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (uint64_t *)((char *)&v31 - v11);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (uint64_t *)((char *)&v31 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t *)((char *)&v31 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (uint64_t *)((char *)&v31 - v19);
  v22 = *(_QWORD *)(v21 + 72);
  if (a2 == 2)
  {
    v23 = a1 + v22;
    sub_2331684BC(v23, (uint64_t)&v31 - v19, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_2331684BC(a3, (uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
    v24 = *v18;
    v25 = *v20;
    if (*v18 == *v20)
    {
LABEL_3:
      sub_233168500((uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
      return sub_233168500((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    if ((sub_23361E504() & 1) != 0)
    {
      sub_233168500((uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168500((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
LABEL_12:
      sub_233168580(v23, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168580(a3, v23, type metadata accessor for TaskPriorityQueue.PendingTask);
      return sub_233168580((uint64_t)v9, a3, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    if ((sub_23361E510() & 1) == 0)
      goto LABEL_3;
    sub_233168500((uint64_t)v18, type metadata accessor for TaskPriorityQueue.PendingTask);
    result = sub_233168500((uint64_t)v20, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v25 < v24)
      goto LABEL_12;
  }
  else
  {
    v32 = a3;
    sub_2331684BC(a1 + 2 * v22, (uint64_t)v15, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_2331684BC(a1 + v22, (uint64_t)v12, type metadata accessor for TaskPriorityQueue.PendingTask);
    v27 = *v15;
    v28 = *v12;
    if (*v15 == *v12)
    {
      v29 = 2;
    }
    else if ((sub_23361E504() & 1) != 0)
    {
      v29 = 1;
    }
    else if (((v28 < v27) & sub_23361E510()) != 0)
    {
      v29 = 1;
    }
    else
    {
      v29 = 2;
    }
    v30 = v32;
    sub_233168500((uint64_t)v12, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168500((uint64_t)v15, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168580(a1 + v29 * v22, (uint64_t)v9, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168580(v30, a1 + v29 * v22, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168580((uint64_t)v9, v30, type metadata accessor for TaskPriorityQueue.PendingTask);
    return sub_233481050(v29, 1, a1, a2);
  }
  return result;
}

uint64_t sub_233481050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t *v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;

  v119 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v8 = MEMORY[0x24BDAC7A8](v119);
  v10 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v102 = (uint64_t)&v101 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v109 = (uint64_t *)((char *)&v101 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v110 = (uint64_t)&v101 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v107 = (uint64_t *)((char *)&v101 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v106 = (uint64_t *)((char *)&v101 - v20);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v113 = (uint64_t *)((char *)&v101 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v114 = (char *)&v101 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v112 = (uint64_t *)((char *)&v101 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v111 = (uint64_t *)((char *)&v101 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v101 - v30;
  result = MEMORY[0x24BDAC7A8](v29);
  v35 = (char **)((char *)&v101 - v34);
  if (!a3)
  {
    __break(1u);
    return result;
  }
  v36 = a3;
  v104 = *(_QWORD *)(v33 + 72);
  sub_233168580(a3 + v104 * a1, (uint64_t)&v101 - v34, type metadata accessor for TaskPriorityQueue.PendingTask);
  v37 = (4 * a1) | 3;
  v38 = 4 * a1 + 6;
  v108 = v35;
  v39 = a1;
  if (v38 >= a4)
  {
    v81 = a2 + 2;
    v41 = v36;
    v42 = v104;
    goto LABEL_53;
  }
  v117 = (uint64_t *)v31;
  v101 = v10;
  v40 = (uint64_t *)v114;
  v41 = v36;
  v42 = v104;
  v105 = a4;
  v103 = v41;
  do
  {
    v115 = a2;
    v116 = v39;
    v43 = v41 + v37 * v42;
    v44 = v41;
    v45 = v117;
    sub_2331684BC(v43, (uint64_t)v117, type metadata accessor for TaskPriorityQueue.PendingTask);
    v46 = v42;
    v47 = v44;
    v48 = v46;
    v49 = v44 + (v37 + 1) * v46;
    v50 = v111;
    sub_2331684BC(v49, (uint64_t)v111, type metadata accessor for TaskPriorityQueue.PendingTask);
    v51 = (uint64_t)v50;
    v52 = *v45;
    v53 = *v50;
    if (*v45 == *v50)
    {
      v54 = 0;
    }
    else
    {
      if ((sub_23361E504() & 1) != 0)
        v54 = 1;
      else
        v54 = (v53 < v52) & sub_23361E510();
      v40 = (uint64_t *)v114;
      v51 = (uint64_t)v111;
    }
    sub_233168500(v51, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168500((uint64_t)v117, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v54)
      v55 = v37 + 1;
    else
      v55 = v37;
    v118 = v55;
    v56 = v37 + 2;
    v57 = v112;
    sub_2331684BC(v47 + (v37 + 2) * v48, (uint64_t)v112, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_2331684BC(v47 + v38 * v48, (uint64_t)v40, type metadata accessor for TaskPriorityQueue.PendingTask);
    v58 = *v57;
    v59 = *v40;
    if (*v57 == *v40)
    {
      v60 = 0;
    }
    else
    {
      if ((sub_23361E504() & 1) != 0)
        v60 = 1;
      else
        v60 = (v59 < v58) & sub_23361E510();
      v57 = v112;
    }
    sub_233168500((uint64_t)v40, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168500((uint64_t)v57, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v60)
      v56 = v38;
    v61 = v118;
    v62 = v113;
    sub_2331684BC(v47 + v118 * v48, (uint64_t)v113, type metadata accessor for TaskPriorityQueue.PendingTask);
    v63 = v106;
    sub_2331684BC(v47 + v56 * v48, (uint64_t)v106, type metadata accessor for TaskPriorityQueue.PendingTask);
    v64 = *v62;
    v65 = *v63;
    if (*v62 == *v63)
    {
      v66 = v48;
      v67 = 0;
    }
    else
    {
      v66 = v48;
      if ((sub_23361E504() & 1) != 0)
        v67 = 1;
      else
        v67 = (v65 < v64) & sub_23361E510();
      v62 = v113;
      v61 = v118;
    }
    sub_233168500((uint64_t)v63, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168500((uint64_t)v62, type metadata accessor for TaskPriorityQueue.PendingTask);
    if (v67)
      v39 = v56;
    else
      v39 = v61;
    v68 = v107;
    sub_2331684BC(v47 + v39 * v66, (uint64_t)v107, type metadata accessor for TaskPriorityQueue.PendingTask);
    v35 = v108;
    v69 = *v108;
    v70 = *v68;
    if (*v108 == *v68)
    {
      sub_233168500((uint64_t)v68, type metadata accessor for TaskPriorityQueue.PendingTask);
LABEL_50:
      v41 = v47;
LABEL_51:
      v42 = v66;
      v82 = v116;
      return sub_233168580((uint64_t)v35, v41 + v82 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
    if ((sub_23361E504() & 1) != 0)
    {
      sub_233168500((uint64_t)v68, type metadata accessor for TaskPriorityQueue.PendingTask);
      v41 = v47;
    }
    else
    {
      v71 = sub_23361E510();
      sub_233168500((uint64_t)v68, type metadata accessor for TaskPriorityQueue.PendingTask);
      if ((v71 & 1) == 0)
        goto LABEL_50;
      v41 = v47;
      if (v70 >= v69)
        goto LABEL_51;
    }
    v72 = v110;
    sub_233168580(v47 + v39 * v66, v110, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168580(v72, v41 + v116 * v66, type metadata accessor for TaskPriorityQueue.PendingTask);
    v73 = v39 - 1;
    if (v39 - 1 < 0)
      v73 = v39;
    v74 = v41 + (v73 >> 1) * v66;
    v75 = v109;
    sub_2331684BC(v74, (uint64_t)v109, type metadata accessor for TaskPriorityQueue.PendingTask);
    v76 = *v35;
    v77 = *v75;
    if (*v35 == *v75)
    {
      sub_233168500((uint64_t)v75, type metadata accessor for TaskPriorityQueue.PendingTask);
      v42 = v66;
      v40 = (uint64_t *)v114;
      goto LABEL_5;
    }
    v78 = sub_23361E504();
    v40 = (uint64_t *)v114;
    if ((v78 & 1) != 0)
    {
      sub_233168500((uint64_t)v75, type metadata accessor for TaskPriorityQueue.PendingTask);
      v41 = v103;
      v42 = v104;
LABEL_42:
      v79 = v110;
      sub_233168580(v74, v110, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168580((uint64_t)v35, v74, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168580(v79, (uint64_t)v35, type metadata accessor for TaskPriorityQueue.PendingTask);
      goto LABEL_5;
    }
    if ((sub_23361E510() & 1) != 0)
    {
      sub_233168500((uint64_t)v109, type metadata accessor for TaskPriorityQueue.PendingTask);
      v80 = v77 < v76;
      v41 = v103;
      v42 = v104;
      if (v80)
        goto LABEL_42;
    }
    else
    {
      sub_233168500((uint64_t)v109, type metadata accessor for TaskPriorityQueue.PendingTask);
      v41 = v103;
      v42 = v104;
    }
LABEL_5:
    v37 = (4 * v39) | 3;
    v38 = 4 * v39 + 6;
    a2 = v115 + 2;
    a4 = v105;
  }
  while (v38 < v105);
  v81 = v115 + 4;
  v10 = v101;
LABEL_53:
  v83 = (2 * v39) | 1;
  if (v83 >= a4)
    goto LABEL_64;
  v101 = v10;
  v84 = v39;
  v82 = sub_233481934(v83, a2 + 1, v37, v81, v41, a4);
  v85 = v102;
  sub_2331684BC(v41 + v82 * v42, v102, type metadata accessor for TaskPriorityQueue.PendingTask);
  v86 = (uint64_t *)v85;
  v87 = *v35;
  v88 = v35;
  v89 = *v86;
  if (v87 == *v86)
  {
    sub_233168500((uint64_t)v86, type metadata accessor for TaskPriorityQueue.PendingTask);
    v82 = v84;
    v35 = v88;
    return sub_233168580((uint64_t)v35, v41 + v82 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
  }
  v118 = v41 + v82 * v42;
  v90 = (uint64_t)v86;
  if ((sub_23361E504() & 1) != 0)
  {
    sub_233168500(v90, type metadata accessor for TaskPriorityQueue.PendingTask);
    goto LABEL_58;
  }
  if ((sub_23361E510() & 1) == 0)
  {
    sub_233168500(v102, type metadata accessor for TaskPriorityQueue.PendingTask);
    goto LABEL_70;
  }
  sub_233168500(v102, type metadata accessor for TaskPriorityQueue.PendingTask);
  if (v89 >= v87)
  {
LABEL_70:
    v82 = v84;
    v35 = v108;
    return sub_233168580((uint64_t)v35, v41 + v82 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
  }
LABEL_58:
  v91 = v110;
  sub_233168580(v118, v110, type metadata accessor for TaskPriorityQueue.PendingTask);
  sub_233168580(v91, v41 + v84 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
  v35 = v108;
  if (v82 < v37)
    return sub_233168580((uint64_t)v35, v41 + v82 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
  v92 = v82 - 1;
  v39 = v82;
  if (v82 - 1 < 0)
    v92 = v82;
  v93 = v92 >> 1;
  v94 = v41 + (v92 >> 1) * v42;
  v95 = (uint64_t *)v101;
  sub_2331684BC(v94, (uint64_t)v101, type metadata accessor for TaskPriorityQueue.PendingTask);
  v96 = *v35;
  v97 = *v95;
  if (v96 == *v95)
  {
    v98 = (uint64_t)v95;
    goto LABEL_63;
  }
  if ((sub_23361E504() & 1) != 0)
  {
    sub_233168500((uint64_t)v95, type metadata accessor for TaskPriorityQueue.PendingTask);
    v35 = v108;
    goto LABEL_73;
  }
  if ((sub_23361E510() & 1) == 0)
  {
    v98 = (uint64_t)v101;
LABEL_63:
    sub_233168500(v98, type metadata accessor for TaskPriorityQueue.PendingTask);
    v35 = v108;
LABEL_64:
    v82 = v39;
    return sub_233168580((uint64_t)v35, v41 + v82 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
  }
  sub_233168500((uint64_t)v101, type metadata accessor for TaskPriorityQueue.PendingTask);
  v80 = v97 < v96;
  v35 = v108;
  v82 = v39;
  if (v80)
  {
LABEL_73:
    v99 = v94;
    v100 = v110;
    sub_233168580(v99, v110, type metadata accessor for TaskPriorityQueue.PendingTask);
    sub_233168580(v100, v118, type metadata accessor for TaskPriorityQueue.PendingTask);
    v82 = v93;
  }
  return sub_233168580((uint64_t)v35, v41 + v82 * v42, type metadata accessor for TaskPriorityQueue.PendingTask);
}

uint64_t sub_233481934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v75 = a2;
  v76 = a5;
  v74 = a4;
  v8 = type metadata accessor for TaskPriorityQueue.PendingTask(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (uint64_t *)((char *)&v71 - v13);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v71 - v18);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (uint64_t *)((char *)&v71 - v21);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (uint64_t *)((char *)&v71 - v24);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (uint64_t *)((char *)&v71 - v27);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (uint64_t *)((char *)&v71 - v30);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v38 = (uint64_t *)((char *)&v71 - v35);
  if (v36 >= a6)
  {
    v45 = a1 + 1;
    if (a1 + 1 < a6)
    {
      v46 = *(_QWORD *)(v34 + 72);
      v47 = v76;
      sub_2331684BC(v76 + v46 * a1, (uint64_t)v14, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_2331684BC(v47 + v46 * v45, (uint64_t)v11, type metadata accessor for TaskPriorityQueue.PendingTask);
      v48 = *v14;
      v49 = *v11;
      if (*v14 == *v11)
      {
        v45 = a1;
      }
      else if ((sub_23361E504() & 1) == 0 && ((v49 < v48) & sub_23361E510()) == 0)
      {
        v45 = a1;
      }
      sub_233168500((uint64_t)v11, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168500((uint64_t)v14, type metadata accessor for TaskPriorityQueue.PendingTask);
      return v45;
    }
  }
  else
  {
    v39 = *(_QWORD *)(v34 + 72);
    v73 = v32;
    if (v36 + 2 >= a6)
    {
      v71 = (uint64_t *)v37;
      v72 = (uint64_t *)v33;
      ++a1;
      v50 = v76;
      v51 = v36;
      sub_2331684BC(v76 + v39 * a1, (uint64_t)v28, type metadata accessor for TaskPriorityQueue.PendingTask);
      v52 = v51;
      sub_2331684BC(v50 + v39 * v51, (uint64_t)v25, type metadata accessor for TaskPriorityQueue.PendingTask);
      v53 = *v28;
      v54 = *v25;
      if (*v28 == *v25)
      {
        v55 = 0;
      }
      else if ((sub_23361E504() & 1) != 0)
      {
        v55 = 1;
      }
      else
      {
        v55 = (v54 < v53) & sub_23361E510();
      }
      sub_233168500((uint64_t)v25, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168500((uint64_t)v28, type metadata accessor for TaskPriorityQueue.PendingTask);
      if ((v55 & 1) != 0)
        a1 = v52;
      if (v52 + 1 < a6)
      {
        v62 = v76;
        v63 = v72;
        sub_2331684BC(v76 + a1 * v39, (uint64_t)v72, type metadata accessor for TaskPriorityQueue.PendingTask);
        v64 = v62 + v39 * (v52 + 1);
        v65 = v71;
        sub_2331684BC(v64, (uint64_t)v71, type metadata accessor for TaskPriorityQueue.PendingTask);
        v66 = (uint64_t)v65;
        v67 = *v63;
        v68 = *v65;
        if (v67 == *v65)
        {
          v69 = 0;
        }
        else
        {
          v69 = (sub_23361E504() & 1) != 0 || (v68 < v67) & sub_23361E510();
          v66 = (uint64_t)v71;
        }
        sub_233168500(v66, type metadata accessor for TaskPriorityQueue.PendingTask);
        sub_233168500((uint64_t)v72, type metadata accessor for TaskPriorityQueue.PendingTask);
        if (v69)
          return v52 + 1;
      }
    }
    else
    {
      v72 = (uint64_t *)(v36 + 2);
      v40 = v36 + 1;
      v75 = v36;
      v41 = v39 * v36;
      v42 = v76;
      sub_2331684BC(v76 + v39 * v36, (uint64_t)&v71 - v35, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_2331684BC(v42 + v39 * v40, (uint64_t)v31, type metadata accessor for TaskPriorityQueue.PendingTask);
      v43 = *v38;
      v44 = *v31;
      if (*v38 != *v31)
      {
        v71 = (uint64_t *)((char *)v38 + *(int *)(v73 + 20));
        if ((sub_23361E504() & 1) != 0)
        {
          v41 = v39 * v40;
          v75 = v40;
        }
        else
        {
          v56 = ((v44 < v43) & sub_23361E510()) == 0;
          v57 = v75;
          if (!v56)
            v57 = v40;
          v75 = v57;
          v41 = v57 * v39;
        }
      }
      v58 = (uint64_t)v72;
      sub_233168500((uint64_t)v31, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168500((uint64_t)v38, type metadata accessor for TaskPriorityQueue.PendingTask);
      v59 = v76;
      sub_2331684BC(v76 + v41, (uint64_t)v22, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_2331684BC(v59 + v39 * v58, (uint64_t)v19, type metadata accessor for TaskPriorityQueue.PendingTask);
      v60 = *v22;
      v61 = *v19;
      if (*v22 == *v19)
      {
        a1 = v75;
      }
      else
      {
        a1 = v58;
        if ((sub_23361E504() & 1) == 0)
        {
          if (((v61 < v60) & sub_23361E510()) != 0)
            a1 = v58;
          else
            a1 = v75;
        }
      }
      sub_233168500((uint64_t)v19, type metadata accessor for TaskPriorityQueue.PendingTask);
      sub_233168500((uint64_t)v22, type metadata accessor for TaskPriorityQueue.PendingTask);
    }
  }
  return a1;
}

uint64_t sub_233481EAC()
{
  return swift_deallocObject();
}

uint64_t sub_233481EBC(char a1)
{
  uint64_t v1;

  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(v1 + 16) + 64) + 40) = a1 & 1;
  return swift_continuation_resume();
}

uint64_t sub_233481ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 24);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2331676FC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256051488 + dword_256051488))(a1, v4);
}

uint64_t sub_233481F54()
{
  return swift_deallocObject();
}

uint64_t sub_233481F64()
{
  return swift_continuation_throwingResume();
}

uint64_t *sub_233481F6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23361E534();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = (uint64_t *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
  }
  swift_retain();
  return v4;
}

uint64_t sub_233482018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23361E534();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_release();
}

_QWORD *sub_233482070(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361E534();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  return a1;
}

_QWORD *sub_2334820F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361E534();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_233482184(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361E534();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_2334821FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361E534();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_233482280()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23348228C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23361E534();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23348230C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233482318(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23361E534();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_233482394()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361E534();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TaskPriorityQueue.CurrentTask.State(uint64_t a1)
{
  return sub_23347F86C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s10FinanceKit17TaskPriorityQueueV11CurrentTaskV5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23347F814(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TaskPriorityQueue.CurrentTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23347F814(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23347F86C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TaskPriorityQueue.CurrentTask.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23347F86C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TaskPriorityQueue.CurrentTask.State()
{
  return &type metadata for TaskPriorityQueue.CurrentTask.State;
}

unint64_t sub_233482520()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256051530;
  if (!qword_256051530)
  {
    v1 = type metadata accessor for TaskPriorityQueue.PendingTask(255);
    result = MEMORY[0x234934494](&unk_23364FD34, v1);
    atomic_store(result, (unint64_t *)&qword_256051530);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TaskPriorityQueue.TaskEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2334825B4 + 4 * byte_23364FCB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2334825E8 + 4 * asc_23364FCB0[v4]))();
}

uint64_t sub_2334825E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2334825F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2334825F8);
  return result;
}

uint64_t sub_233482604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23348260CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233482610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233482618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskPriorityQueue.TaskEvent()
{
  return &type metadata for TaskPriorityQueue.TaskEvent;
}

unint64_t sub_233482638()
{
  unint64_t result;

  result = qword_256051538;
  if (!qword_256051538)
  {
    result = MEMORY[0x234934494](&unk_23364FDB0, &type metadata for TaskPriorityQueue.TaskEvent);
    atomic_store(result, (unint64_t *)&qword_256051538);
  }
  return result;
}

uint64_t ManagedAuthorizationSessionImporter.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ManagedAuthorizationSessionImporter.init()()
{
  uint64_t v0;

  return v0;
}

void ManagedAuthorizationSessionImporter.replaceCurrentSession(with:context:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  type metadata accessor for ManagedAuthorizationSession();
  static ManagedAuthorizationSession.deleteAllSessions(in:)(a2);
  if (!v2)
    sub_233452CDC(a1, a2);
}

uint64_t ManagedAuthorizationSessionImporter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedAuthorizationSessionImporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedAuthorizationSessionImporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedAuthorizationSessionImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedAuthorizationSessionImporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_233482740(int *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v2 = *v1;
  v3 = (uint64_t)v1 + a1[5];
  v4 = *(void **)((char *)v1 + a1[6]);
  v5 = *((_BYTE *)v1 + a1[8]);
  v6 = *__swift_project_boxed_opaque_existential_1((uint64_t *)((char *)v1 + a1[7]), *(uint64_t *)((char *)v1 + a1[7] + 24));
  v7 = v4;
  v8 = sub_23348374C(v3, v4, v5, v6, v2);

  return v8;
}

void FinanceStore.transactionHistory(forAccountID:since:isMonitoring:)(uint64_t a1@<X0>, void **a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  int *v10;
  uint64_t *boxed_opaque_existential_0;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  char v17;

  v8 = *a2;
  static DeviceInfo.deviceType.getter(&v17);
  if (v17)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)(v4 + 16);
    v10 = (int *)_s34TransactionHistoryIteratorProviderVMa();
    a4[3] = (uint64_t)v10;
    a4[4] = sub_233167C58(&qword_2560515D8, (uint64_t (*)(uint64_t))_s34TransactionHistoryIteratorProviderVMa, (uint64_t)&unk_23364FED0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    v12 = (char *)boxed_opaque_existential_0 + v10[5];
    v13 = sub_23361D6A0();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    v15 = (uint64_t *)((char *)boxed_opaque_existential_0 + v10[7]);
    v15[3] = type metadata accessor for FinanceStore();
    v15[4] = &off_250487D20;
    *v15 = v4;
    *boxed_opaque_existential_0 = v9;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v10[6]) = (uint64_t)v8;
    *((_BYTE *)boxed_opaque_existential_0 + v10[8]) = a3 & 1;
    v16 = v8;
    swift_retain();
    swift_retain();
  }
}

uint64_t _s34TransactionHistoryIteratorProviderVMa()
{
  uint64_t result;

  result = qword_256051658;
  if (!qword_256051658)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233482928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_233482944()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v3;
  char v4[9];

  v4[0] = 2;
  if ((FinanceStore.isDataRestricted(for:)(v4) & 1) != 0)
  {
    sub_23316853C();
    swift_allocError();
    *v1 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v3;
    *v3 = v0;
    v3[1] = sub_2331D625C;
    return sub_2332A1B50(*(_QWORD *)(v0 + 32));
  }
}

uint64_t FinanceStore.transactions(query:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_233482A14()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;
  void (*v3)(int *);
  char v4;

  static DeviceInfo.deviceType.getter(&v4);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v1 = (int8x16_t *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v1;
    v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    v3 = (void (*)(int *))((char *)&dword_2560443F0 + dword_2560443F0);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_233482AAC;
    v3((int *)&unk_2560515F0);
  }
}

uint64_t sub_233482AAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_233482B34()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254246B30);
  if ((swift_dynamicCast() & 1) != 0 && *(_BYTE *)(v0 + 64) == 4)
    return sub_23361EF24();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233482C24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_2331676FC;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

void FinanceStore.transactionHistory(since:isMonitoring:)(void **a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t *boxed_opaque_existential_0;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  char v14;

  v6 = *a1;
  static DeviceInfo.deviceType.getter(&v14);
  if (v14)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 16);
    v8 = (int *)_s34TransactionHistoryIteratorProviderVMa();
    a3[3] = (uint64_t)v8;
    a3[4] = sub_233167C58(&qword_2560515D8, (uint64_t (*)(uint64_t))_s34TransactionHistoryIteratorProviderVMa, (uint64_t)&unk_23364FED0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
    v10 = (char *)boxed_opaque_existential_0 + v8[5];
    v11 = sub_23361D6A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    v12 = (uint64_t *)((char *)boxed_opaque_existential_0 + v8[7]);
    v12[3] = type metadata accessor for FinanceStore();
    v12[4] = &off_250487D20;
    *v12 = v3;
    *boxed_opaque_existential_0 = v7;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v8[6]) = (uint64_t)v6;
    *((_BYTE *)boxed_opaque_existential_0 + v8[8]) = a2 & 1;
    v13 = v6;
    swift_retain();
    swift_retain();
  }
}

uint64_t FinanceStore.privateTransactions(query:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 1);
  *(_BYTE *)(v2 + 57) = *((_BYTE *)a1 + 24);
  *(_QWORD *)(v2 + 96) = a1[4];
  *(_BYTE *)(v2 + 58) = *((_BYTE *)a1 + 40);
  return swift_task_switch();
}

void sub_233482DD4()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  char v6;
  char v7[9];

  static DeviceInfo.deviceType.getter(&v6);
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7[0] = 2;
    if ((FinanceStore.isDataRestricted(for:)(v7) & 1) != 0)
    {
      sub_23316853C();
      swift_allocError();
      *v1 = 2;
      swift_willThrow();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v2 = *(_BYTE *)(v0 + 58);
      v3 = *(_QWORD *)(v0 + 96);
      v4 = *(_BYTE *)(v0 + 57);
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
      *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 80);
      *(_BYTE *)(v0 + 40) = v4;
      *(_QWORD *)(v0 + 48) = v3;
      *(_BYTE *)(v0 + 56) = v2;
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v5;
      *v5 = v0;
      v5[1] = sub_2331D69C0;
      sub_2332A2BD4((_OWORD *)(v0 + 16));
    }
  }
}

_QWORD *sub_233482EC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23361D6A0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[6];
    v16 = a3[7];
    v17 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)v7 + v15) = v17;
    v18 = (char *)v7 + v16;
    v19 = (char *)a2 + v16;
    v20 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)v7 + v16 + 24) = v20;
    v21 = v20;
    v22 = **(void (***)(char *, char *, uint64_t))(v20 - 8);
    v23 = v17;
    v22(v18, v19, v21);
    *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v7;
}

uint64_t sub_233483010(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_23361D6A0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  return __swift_destroy_boxed_opaque_existential_0(a1 + a2[7]);
}

_QWORD *sub_23348309C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = *(void **)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v15;
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v18;
  v19 = v18;
  v20 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  v21 = v15;
  v20(v16, v17, v19);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_2334831C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = *(void **)((char *)a1 + v15);
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = v17;

  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_23348331C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_233483418(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23361D6A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + v17);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_23348357C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233483588(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_233483608()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_233483614(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23348368C()
{
  unint64_t v0;

  sub_2332C25A4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_233483720()
{
  return sub_233167C58(qword_2560516A0, (uint64_t (*)(uint64_t))type metadata accessor for Transaction, (uint64_t)&protocol conformance descriptor for Transaction);
}

uint64_t sub_23348374C(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  os_unfair_lock_s *v15;
  char **v16;
  os_unfair_lock_s *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  _BYTE v28[24];
  uint64_t v29;
  _QWORD v30[5];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254246740);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = type metadata accessor for FinanceStore();
  v30[4] = &off_250487D20;
  v30[0] = a4;
  sub_2331D7514(a1, (uint64_t)v12);
  sub_233177068((uint64_t)v30, (uint64_t)v28);
  v13 = a2;
  swift_retain();
  v14 = sub_2332A6A58();
  v15 = *(os_unfair_lock_s **)(a5 + 16);
  v16 = (char **)&v15[4];
  v17 = v15 + 6;
  os_unfair_lock_lock(v15 + 6);
  sub_2332A14D8(v16, &v27);
  os_unfair_lock_unlock(v17);
  v18 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2560516C8);
  v19 = swift_allocObject();
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (uint64_t *)((char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  v24 = sub_233483924((unint64_t)v12, (unint64_t)a2, a3 & 1, *v22, 0, v14, (uint64_t)v18, v19);

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return v24;
}

uint64_t sub_233483924(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)@<X0>(void *@<X0>, uint64_t@<X8>);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  os_activity_t v49;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  _QWORD v58[3];
  uint64_t v59;
  _UNKNOWN **v60;
  _QWORD v61[3];
  uint64_t v62;
  _UNKNOWN **v63;

  v52 = a6;
  v54 = a5;
  LOBYTE(v11) = a3;
  v14 = sub_23361E900();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FinanceStore();
  v63 = &off_250487D20;
  *(_BYTE *)(a8 + 16) = 0;
  *(_QWORD *)(a8 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + qword_2560CD360) = 0;
  v62 = v17;
  v61[0] = a4;
  v18 = (char *)qword_2560CD368;
  *(_QWORD *)(a8 + qword_2560CD368) = 0;
  v19 = a8 + qword_2560CD3A0;
  v20 = qword_256041CB0;
  swift_retain();
  if (v20 != -1)
LABEL_25:
    swift_once();
  v21 = sub_23361DB80();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_2560495E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v22, v21);
  v53 = a1;
  sub_2331D7514(a1, a8 + qword_2560CD380);
  *(_BYTE *)(a8 + 32) = v11 & 1;
  *(_QWORD *)(a8 + qword_2560CD358) = a7;
  v23 = (uint64_t (**)@<X0>(void *@<X0>, uint64_t@<X8>))(a8 + qword_2560CD390);
  *v23 = sub_233483EBC;
  v23[1] = 0;
  v24 = *(void **)&v18[a8];
  *(_QWORD *)&v18[a8] = a2;
  swift_retain();

  v25 = *__swift_project_boxed_opaque_existential_1(v61, v17);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v25;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v26 = swift_allocObject();
  sub_23318B020(v57, v26 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v27 = (_QWORD *)(a8 + qword_2560CD370);
  *v27 = &unk_2560443D8;
  v27[1] = v26;
  v28 = *__swift_project_boxed_opaque_existential_1(v61, v62);
  v59 = v17;
  v60 = &off_250487D20;
  v58[0] = v28;
  sub_233177068((uint64_t)v58, (uint64_t)v57);
  v29 = swift_allocObject();
  sub_23318B020(v57, v29 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  v30 = (_QWORD *)(a8 + qword_2560CD378);
  *v30 = &unk_256048730;
  v30[1] = v29;
  *(_QWORD *)(a8 + qword_2560CD388) = v54;
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_23361E90C();

  sub_23361E8E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(a8 + qword_2560CD348, v16, v56);
  v32 = objc_msgSend(*(id *)(a7 + 16), sel_persistentStoreCoordinator);
  v33 = objc_msgSend(v32, sel_persistentStores);

  sub_2331D767C();
  a1 = sub_23361E3F0();

  if (!(a1 >> 62))
  {
    a7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a7)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_20:
    v41 = 0;
    v43 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  a7 = sub_23361EF30();
  if (!a7)
    goto LABEL_15;
LABEL_4:
  a2 = a1 & 0xC000000000000001;
  v11 = 4;
  while (1)
  {
    v19 = v11 - 4;
    if (a2)
      v34 = (char *)MEMORY[0x234933120](v11 - 4, a1);
    else
      v34 = (char *)*(id *)(a1 + 8 * v11);
    v18 = v34;
    v17 = v11 - 3;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v35 = objc_msgSend(v34, sel_configurationName);
    v16 = (char *)sub_23361E150();
    v37 = v36;

    if (v16 == (char *)0x6C61636F4CLL && v37 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v39 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      break;

    ++v11;
    if (v17 == a7)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  v40 = objc_msgSend(v18, sel_identifier);

  if (!v40)
    goto LABEL_20;
  v41 = sub_23361E150();
  v43 = v42;

LABEL_21:
  v44 = v52;
  v45 = v53;
  v46 = (uint64_t *)(a8 + qword_2560CD350);
  *v46 = v41;
  v46[1] = v43;
  *(_QWORD *)(a8 + qword_2560CD398) = v44;
  v47 = qword_254246ED0;
  v48 = v44;
  if (v47 != -1)
    swift_once();
  v49 = _os_activity_create(&dword_233151000, "FinancialDataAsyncIterator", (os_activity_t)qword_254246EC8, OS_ACTIVITY_FLAG_DETACHED);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  sub_2331D76B8(v45);
  *(_QWORD *)(a8 + qword_2560CD3A8) = v49;
  return a8;
}

uint64_t sub_233483EBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transaction.init(_:)(a1, a2);
}

uint64_t sub_233483EEC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t OrderedDateFormatter.init(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233168580(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
}

uint64_t OrderedDateFormatter.format(_:now:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t (**v45)();
  uint64_t (**v46)();
  uint64_t (**v47)();
  uint64_t (**v48)();
  uint64_t (**v49)();
  uint64_t (**v50)();
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  id v72;
  __int128 v73;
  void (*v74)(unint64_t, uint64_t, uint64_t);
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;

  v94 = a2;
  v4 = sub_23361D208();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23361D8A4();
  v91 = *(_QWORD *)(v7 - 8);
  v92 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v93 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_23361D73C();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v90 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256056160);
  MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256044960);
  MEMORY[0x24BDAC7A8](v12);
  v83 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23361D508();
  v85 = *(_QWORD *)(v14 - 8);
  v86 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v84 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23361D850();
  v98 = *(_QWORD *)(v16 - 8);
  v99 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v82 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23361D748();
  v80 = *(_QWORD *)(v18 - 8);
  v81 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v79 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23361D868();
  v95 = *(_QWORD *)(v20 - 8);
  v96 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v97 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for WeekdayCustomFormatter();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23361CD40();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for FormatterConfiguration();
  v29 = v2 + *(int *)(v78 + 20);
  if ((sub_23361D76C() & 1) != 0)
  {
    if (qword_2542450A8 == -1)
      goto LABEL_6;
    goto LABEL_21;
  }
  if ((sub_23361D7B4() & 1) != 0)
  {
    if (qword_2542450A8 == -1)
    {
LABEL_6:
      v30 = (void *)qword_2542450A0;
      v31 = (void *)sub_23361E12C();
      v32 = (void *)sub_23361E12C();
      v33 = (void *)sub_23361E12C();
      v34 = objc_msgSend(v30, sel_localizedStringForKey_value_table_, v31, v32, v33);

      v35 = sub_23361E150();
      return v35;
    }
LABEL_21:
    swift_once();
    goto LABEL_6;
  }
  v76 = v24;
  v75 = v6;
  v77 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
  v37 = v98;
  v38 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  v39 = swift_allocObject();
  v73 = xmmword_233623D60;
  *(_OWORD *)(v39 + 16) = xmmword_233623D60;
  v40 = *MEMORY[0x24BDCF220];
  v74 = *(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 104);
  v74(v39 + v38, v40, v99);
  sub_2333EF4B0(v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_23361D784();
  swift_bridgeObjectRelease();
  v41 = sub_23361CC98();
  LOBYTE(v38) = v42;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  if ((v38 & 1) != 0 || (unint64_t)(v41 + 1) < 0xFFFFFFFFFFFFFFFALL)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v73;
    v60 = v83;
    sub_23361D418();
    v61 = sub_23361D43C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
    v62 = sub_23361D424();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v88, 1, 1, v62);
    v63 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v90, v77, v89);
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v97, v29, v96);
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v93, v63 + *(int *)(v78 + 24), v92);
    sub_23361D1FC();
    v64 = v84;
    sub_23361D454();
    v65 = sub_23361D4F0();
    v67 = v66;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v64, v86);
    *(_QWORD *)(v59 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v59 + 64) = sub_2331683F0();
    *(_QWORD *)(v59 + 32) = v65;
    *(_QWORD *)(v59 + 40) = v67;
    if (qword_2542450A8 != -1)
      swift_once();
    v68 = (void *)qword_2542450A0;
    v69 = (void *)sub_23361E12C();
    v70 = (void *)sub_23361E12C();
    v71 = (void *)sub_23361E12C();
    v72 = objc_msgSend(v68, sel_localizedStringForKey_value_table_, v69, v70, v71);

    sub_23361E150();
    v35 = sub_23361E180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = (uint64_t)v76;
    sub_23332DC20(v77, (uint64_t)v76);
    v44 = (uint64_t (**)())(v43 + v22[5]);
    *v44 = sub_233484940;
    v44[1] = 0;
    v93 = (char *)v44;
    v94 = a1;
    v45 = (uint64_t (**)())(v43 + v22[6]);
    *v45 = sub_233484A34;
    v45[1] = 0;
    v46 = (uint64_t (**)())(v43 + v22[7]);
    *v46 = sub_233484B28;
    v46[1] = 0;
    v47 = (uint64_t (**)())(v43 + v22[8]);
    *v47 = sub_233484C1C;
    v47[1] = 0;
    v48 = (uint64_t (**)())(v43 + v22[9]);
    *v48 = sub_233484D10;
    v48[1] = 0;
    v49 = (uint64_t (**)())(v43 + v22[10]);
    *v49 = sub_233484E04;
    v49[1] = 0;
    v50 = (uint64_t (**)())(v43 + v22[11]);
    *v50 = sub_233484EF8;
    v50[1] = 0;
    v51 = v79;
    v52 = v80;
    v53 = v81;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v79, *MEMORY[0x24BDCEF50], v81);
    v54 = v97;
    sub_23361D754();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    v55 = v82;
    v56 = v99;
    v74((unint64_t)v82, *MEMORY[0x24BDCF278], v99);
    v57 = sub_23361D85C();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v55, v56);
    v58 = (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v54, v96);
    switch(v57)
    {
      case 1:
        v45 = (uint64_t (**)())v93;
        break;
      case 2:
        break;
      case 3:
        v45 = v46;
        break;
      case 4:
        v45 = v47;
        break;
      case 5:
        v45 = v48;
        break;
      case 6:
        v45 = v49;
        break;
      case 7:
        v45 = v50;
        break;
      default:
        sub_23361EF24();
        __break(1u);
        JUMPOUT(0x233484924);
    }
    v35 = ((uint64_t (*)(uint64_t))*v45)(v58);
    sub_233485764((uint64_t)v76);
  }
  return v35;
}

uint64_t sub_233484940()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t sub_233484A34()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t sub_233484B28()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t sub_233484C1C()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t sub_233484D10()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t sub_233484E04()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t sub_233484EF8()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_2542450A8 != -1)
    swift_once();
  v0 = (void *)qword_2542450A0;
  v1 = (void *)sub_23361E12C();
  v2 = (void *)sub_23361E12C();
  v3 = (void *)sub_23361E12C();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_23361E150();
  return v5;
}

uint64_t OrderedDateFormatter.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

BOOL static OrderedDateFormatter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0
      && (MEMORY[0x234931BFC](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_233485150()
{
  sub_2334857A0();
  return sub_23361F428();
}

uint64_t sub_233485178()
{
  sub_2334857A0();
  return sub_23361F434();
}

uint64_t OrderedDateFormatter.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560516D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334857A0();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t OrderedDateFormatter.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t OrderedDateFormatter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560516E0);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OrderedDateFormatter();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334857A0();
  sub_23361F3EC();
  if (!v2)
  {
    sub_233167C58(&qword_2560437D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
    sub_23361F068();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_233168580(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
    sub_233168580((uint64_t)v11, v13, (uint64_t (*)(_QWORD))type metadata accessor for OrderedDateFormatter);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233485580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = OrderedDateFormatter.format(_:now:)(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2334855A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23361D634();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23361D5F8();
  v8 = OrderedDateFormatter.format(_:now:)(a1, (uint64_t)v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_233485640@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OrderedDateFormatter.init(from:)(a1, a2);
}

uint64_t sub_233485654(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2560516D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2334857A0();
  sub_23361F410();
  type metadata accessor for FormatterConfiguration();
  sub_233167C58((unint64_t *)&unk_256056190, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
  sub_23361F17C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_233485764(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeekdayCustomFormatter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2334857A0()
{
  unint64_t result;

  result = qword_2560516D8;
  if (!qword_2560516D8)
  {
    result = MEMORY[0x234934494](&unk_233650108, &type metadata for OrderedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560516D8);
  }
  return result;
}

uint64_t type metadata accessor for OrderedDateFormatter()
{
  uint64_t result;

  result = qword_256051768;
  if (!qword_256051768)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233485820(uint64_t a1)
{
  uint64_t result;

  result = sub_233167C58(&qword_2560516E8, (uint64_t (*)(uint64_t))type metadata accessor for OrderedDateFormatter, (uint64_t)&protocol conformance descriptor for OrderedDateFormatter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23348585C()
{
  return sub_233167C58(&qword_2560516F0, (uint64_t (*)(uint64_t))type metadata accessor for OrderedDateFormatter, (uint64_t)&protocol conformance descriptor for OrderedDateFormatter);
}

uint64_t sub_233485888()
{
  return sub_233167C58(&qword_2560516F8, (uint64_t (*)(uint64_t))type metadata accessor for OrderedDateFormatter, (uint64_t)&protocol conformance descriptor for OrderedDateFormatter);
}

uint64_t sub_2334858B4()
{
  return sub_233167C58(&qword_256051700, (uint64_t (*)(uint64_t))type metadata accessor for OrderedDateFormatter, (uint64_t)&protocol conformance descriptor for OrderedDateFormatter);
}

uint64_t sub_2334858E0()
{
  return sub_233167C58(&qword_256051708, (uint64_t (*)(uint64_t))type metadata accessor for OrderedDateFormatter, (uint64_t)&protocol conformance descriptor for OrderedDateFormatter);
}

uint64_t getEnumTagSinglePayload for OrderedDateFormatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233485918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OrderedDateFormatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233485960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatterConfiguration();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OrderedDateFormatter.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2334859E0 + 4 * byte_23364FEF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233485A00 + 4 * byte_23364FEF5[v4]))();
}

_BYTE *sub_2334859E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233485A00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233485A08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233485A10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233485A18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233485A20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OrderedDateFormatter.CodingKeys()
{
  return &type metadata for OrderedDateFormatter.CodingKeys;
}

unint64_t sub_233485A40()
{
  unint64_t result;

  result = qword_2560517A0;
  if (!qword_2560517A0)
  {
    result = MEMORY[0x234934494](&unk_2336500E0, &type metadata for OrderedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560517A0);
  }
  return result;
}

unint64_t sub_233485A88()
{
  unint64_t result;

  result = qword_2560517A8;
  if (!qword_2560517A8)
  {
    result = MEMORY[0x234934494](&unk_233650050, &type metadata for OrderedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560517A8);
  }
  return result;
}

unint64_t sub_233485AD0()
{
  unint64_t result;

  result = qword_2560517B0;
  if (!qword_2560517B0)
  {
    result = MEMORY[0x234934494](&unk_233650078, &type metadata for OrderedDateFormatter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2560517B0);
  }
  return result;
}

FinanceKit::BankConnectWebServicePassDetails __swiftcall BankConnectWebServicePassDetails.init(fpanId:accountIdentifier:)(Swift::String fpanId, Swift::String accountIdentifier)
{
  Swift::String *v2;
  FinanceKit::BankConnectWebServicePassDetails result;

  *v2 = fpanId;
  v2[1] = accountIdentifier;
  result.accountIdentifier = accountIdentifier;
  result.fpanId = fpanId;
  return result;
}

uint64_t BankConnectWebServicePassLinkingRequest.init(consent:passDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_233485B4C(a1, a2, type metadata accessor for BankConnectWebServicePassLinkingRequest, a3);
}

uint64_t type metadata accessor for BankConnectWebServicePassLinkingRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_256051880);
}

uint64_t BankConnectWebServicePassUnlinkRequest.init(consent:passDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_233485B4C(a1, a2, type metadata accessor for BankConnectWebServicePassUnlinkRequest, a3);
}

uint64_t sub_233485B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  sub_233193A5C(a1, a4);
  result = a3(0);
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for BankConnectWebServicePassUnlinkRequest(uint64_t a1)
{
  return sub_233177414(a1, qword_256051910);
}

uint64_t (*BankConnectWebServicePassLinkingRequest.consent.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServicePassLinkingRequest.passDetails.getter()
{
  return sub_233485C88((void (*)(_QWORD))type metadata accessor for BankConnectWebServicePassLinkingRequest);
}

uint64_t BankConnectWebServicePassLinkingRequest.passDetails.setter(uint64_t a1)
{
  return sub_233485CB8(a1, type metadata accessor for BankConnectWebServicePassLinkingRequest);
}

uint64_t (*BankConnectWebServicePassLinkingRequest.passDetails.modify())(_QWORD)
{
  type metadata accessor for BankConnectWebServicePassLinkingRequest(0);
  return nullsub_1;
}

void *BankConnectWebServicePassLinkingRequest.pathComponents.getter()
{
  return &unk_250467BB8;
}

uint64_t BankConnectWebServicePassLinkingRequest.jsonBody.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_233485D34(type metadata accessor for BankConnectWebServicePassLinkingRequest, a1);
}

_QWORD *BankConnectWebServicePassLinkingRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_2331AC150();
}

_QWORD *sub_233485C24()
{
  return BankConnectWebServicePassUnlinkRequest.makeAdditionalHTTPHeaderFields()();
}

void *sub_233485C38()
{
  return &unk_250467BB8;
}

void static BankConnectWebServicePassLinkingResponse.parse(urlResponse:)(void *a1)
{
  sub_233485E88(a1);
}

uint64_t BankConnectWebServicePassUnlinkRequest.consent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2331925D8(v1, a1);
}

uint64_t BankConnectWebServicePassUnlinkRequest.consent.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23319261C(a1, v1);
}

uint64_t (*BankConnectWebServicePassUnlinkRequest.consent.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServicePassUnlinkRequest.passDetails.getter()
{
  return sub_233485C88((void (*)(_QWORD))type metadata accessor for BankConnectWebServicePassUnlinkRequest);
}

uint64_t sub_233485C88(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t BankConnectWebServicePassUnlinkRequest.passDetails.setter(uint64_t a1)
{
  return sub_233485CB8(a1, type metadata accessor for BankConnectWebServicePassUnlinkRequest);
}

uint64_t sub_233485CB8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2(0) + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*BankConnectWebServicePassUnlinkRequest.passDetails.modify())(_QWORD)
{
  type metadata accessor for BankConnectWebServicePassUnlinkRequest(0);
  return nullsub_1;
}

void *BankConnectWebServicePassUnlinkRequest.pathComponents.getter()
{
  return &unk_250467B68;
}

uint64_t BankConnectWebServicePassUnlinkRequest.jsonBody.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_233485D34(type metadata accessor for BankConnectWebServicePassUnlinkRequest, a1);
}

uint64_t sub_233485D34@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  result = a1(0);
  v5 = *(_QWORD *)(v2 + *(int *)(result + 20));
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v16 = a2;
    v17 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_233273A24(0, v6, 0);
    v7 = v17;
    v8 = (uint64_t *)(v5 + 56);
    do
    {
      v10 = *(v8 - 3);
      v9 = *(v8 - 2);
      v12 = *(v8 - 1);
      v11 = *v8;
      v13 = *(_QWORD *)(v17 + 16);
      v14 = *(_QWORD *)(v17 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= v14 >> 1)
        sub_233273A24(v14 > 1, v13 + 1, 1);
      v8 += 4;
      *(_QWORD *)(v17 + 16) = v13 + 1;
      v15 = (_QWORD *)(v17 + 32 * v13);
      v15[4] = v10;
      v15[5] = v9;
      v15[6] = v12;
      v15[7] = v11;
      --v6;
    }
    while (v6);
    result = swift_bridgeObjectRelease();
    a2 = v16;
  }
  *a2 = v7;
  return result;
}

void BankConnectWebServicePassUnlinkRequest.httpMethod.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

_QWORD *BankConnectWebServicePassUnlinkRequest.makeAdditionalHTTPHeaderFields()()
{
  return sub_2331AC150();
}

void *sub_233485E68()
{
  return &unk_250467B68;
}

void static BankConnectWebServicePassUnlinkResponse.parse(urlResponse:)(void *a1)
{
  sub_233485E88(a1);
}

void sub_233485E88(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  id v10;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = objc_msgSend(v3, sel_statusCode);
    if (v5 != (id)204)
    {
      v6 = v5;
      type metadata accessor for FinanceNetworkError();
      sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
      swift_allocError();
      *v7 = v6;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }

  }
  else
  {
    type metadata accessor for FinanceNetworkError();
    sub_233167C58((unint64_t *)&qword_256051070, (uint64_t (*)(uint64_t))type metadata accessor for FinanceNetworkError, (uint64_t)&protocol conformance descriptor for FinanceNetworkError);
    swift_allocError();
    v9 = v8;
    *v8 = sub_233168668(0, (unint64_t *)&unk_256049A60);
    v9[4] = sub_233168668(0, (unint64_t *)&unk_256051080);
    v9[1] = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
    swift_willThrow();
  }
}

uint64_t BankConnectWebServicePassDetails.fpanId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServicePassDetails.fpanId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BankConnectWebServicePassDetails.fpanId.modify())()
{
  return nullsub_1;
}

uint64_t BankConnectWebServicePassDetails.accountIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BankConnectWebServicePassDetails.accountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BankConnectWebServicePassDetails.accountIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServicePassLinkingRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServicePassLinkingRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for BankConnectWebServicePassLinkingResponse()
{
  return &type metadata for BankConnectWebServicePassLinkingResponse;
}

uint64_t getEnumTagSinglePayload for BankConnectWebServicePassUnlinkRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BankConnectConsent();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectWebServicePassUnlinkRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BankConnectConsent();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for BankConnectWebServicePassUnlinkResponse()
{
  return &type metadata for BankConnectWebServicePassUnlinkResponse;
}

ValueMetadata *type metadata accessor for BankConnectWebServicePassDetails()
{
  return &type metadata for BankConnectWebServicePassDetails;
}

void sub_233486268(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_lastUpdatedAt);
  sub_23361D5EC();

}

void sub_2334862B4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setLastUpdatedAt_, v3);

}

id static ManagedInternalAccountBalance.fetchRequest()()
{
  id v0;
  void *v1;
  objc_super v3;

  v3.receiver = (id)swift_getObjCClassFromMetadata();
  v3.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  v0 = objc_msgSendSuper2(&v3, sel_fetchRequest);
  v1 = (void *)sub_23361E3D8();
  objc_msgSend(v0, sel_setRelationshipKeyPathsForPrefetching_, v1);

  return v0;
}

id static ManagedInternalAccountBalance.fetchRequest(for:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v9 = *a1;
  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v13.receiver = (id)swift_getObjCClassFromMetadata();
  v13.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  v3 = objc_msgSendSuper2(&v13, sel_fetchRequest);
  v4 = (void *)sub_23361E3D8();
  objc_msgSend(v3, sel_setRelationshipKeyPathsForPrefetching_, v4);

  v10 = v9;
  v11 = v1;
  v12 = v2;
  v5 = _s10FinanceKit29ManagedInternalAccountBalanceC012predicateForE8Balances3forSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0((uint64_t *)&v10);
  objc_msgSend(v3, sel_setPredicate_, v5);

  objc_msgSend(v3, sel_setReturnsObjectsAsFaults_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233625CF0;
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  swift_getKeyPath();
  *(_QWORD *)(v6 + 32) = sub_23361E7EC();
  *(_QWORD *)&v10 = v6;
  sub_23361E408();
  v7 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSortDescriptors_, v7);

  return v3;
}

unint64_t static ManagedInternalAccountBalance.existingAccountBalance(withID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t result;
  unint64_t v10;
  id v11;
  objc_super v12;

  v12.receiver = (id)swift_getObjCClassFromMetadata();
  v12.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  v4 = objc_msgSendSuper2(&v12, sel_fetchRequest);
  v5 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = sub_23361D658();
  *(_QWORD *)(v6 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v6 + 64) = sub_2331B372C();
  *(_QWORD *)(v6 + 32) = v7;
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v8);

  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v10 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x234933120](0, v10);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
LABEL_8:
    a2 = (uint64_t)v11;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInternalAccountBalance.predicateForAccountBalance(withID:)()
{
  return sub_233486A5C();
}

unint64_t static ManagedInternalAccountBalance.latestAccountBalance(forAccountID:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t result;
  unint64_t v15;
  id v16;
  objc_super v17;

  v17.receiver = (id)swift_getObjCClassFromMetadata();
  v17.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  v4 = objc_msgSendSuper2(&v17, sel_fetchRequest);
  v5 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = sub_23361D658();
  *(_QWORD *)(v6 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v6 + 64) = sub_2331B372C();
  *(_QWORD *)(v6 + 32) = v7;
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v8);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233625CF0;
  v10 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v11 = (void *)sub_23361E12C();
  v12 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 0);

  *(_QWORD *)(v9 + 32) = v12;
  sub_23361E408();
  sub_233168668(0, (unint64_t *)&qword_2560446E0);
  v13 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v13);

  objc_msgSend(v4, sel_setFetchLimit_, 1);
  objc_msgSend(v4, sel_setReturnsObjectsAsFaults_, 0);
  result = sub_23361E984();
  if (v2)
  {

    return a2;
  }
  v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a2 = sub_23361EF30();
    result = swift_bridgeObjectRelease();
    if (!a2)
      goto LABEL_9;
  }
  else
  {
    a2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a2;
    }
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x234933120](0, v15);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
LABEL_8:
    a2 = (uint64_t)v16;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t static ManagedInternalAccountBalance.predicateForAccountBalances(forAccountID:)()
{
  return sub_233486A5C();
}

uint64_t sub_233486A5C()
{
  uint64_t v0;
  uint64_t v1;

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_233623D60;
  v1 = sub_23361D658();
  *(_QWORD *)(v0 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v0 + 64) = sub_2331B372C();
  *(_QWORD *)(v0 + 32) = v1;
  return sub_23361E6B4();
}

void static ManagedInternalAccountBalance.deleteAccountBalance(withID:in:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  v16.receiver = (id)swift_getObjCClassFromMetadata();
  v16.super_class = (Class)&OBJC_METACLASS____TtC10FinanceKit29ManagedInternalAccountBalance;
  v4 = objc_msgSendSuper2(&v16, sel_fetchRequest);
  v5 = (void *)sub_23361E3D8();
  objc_msgSend(v4, sel_setRelationshipKeyPathsForPrefetching_, v5);

  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = sub_23361D658();
  *(_QWORD *)(v6 + 56) = sub_233168668(0, &qword_2560436E0);
  *(_QWORD *)(v6 + 64) = sub_2331B372C();
  *(_QWORD *)(v6 + 32) = v7;
  v8 = (void *)sub_23361E6B4();
  objc_msgSend(v4, sel_setPredicate_, v8);

  objc_msgSend(v4, sel_setIncludesPropertyValues_, 0);
  v9 = sub_23361E984();
  if (v2)
  {

    return;
  }
  v10 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_23361EF30();
    swift_bridgeObjectRelease();
    if (v14 <= 1)
    {
      swift_bridgeObjectRetain();
      v15 = sub_23361EF30();
      swift_bridgeObjectRelease();
      if (v15)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    sub_23361EF24();
    __break(1u);
    return;
  }
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 > 1)
    goto LABEL_16;
  if (v11)
  {
LABEL_6:
    if ((v10 & 0xC000000000000001) != 0)
    {
      v12 = (id)MEMORY[0x234933120](0, v10);
      goto LABEL_9;
    }
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(id *)(v10 + 32);
LABEL_9:
      v13 = v12;
      swift_bridgeObjectRelease();
      objc_msgSend(a2, sel_deleteObject_, v13);

      return;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_12:

  swift_bridgeObjectRelease();
}

id _s10FinanceKit29ManagedInternalAccountBalanceC012predicateForE8Balances3forSo11NSPredicateCAA014FullyQualifiedE10IdentifierV_tFZ_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254248760);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_233626360;
  sub_233168668(0, (unint64_t *)&qword_254247FB0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DB0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_233623D60;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v8 = sub_2331683F0();
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 32) = sub_23361E6B4();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_233623D60;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = v8;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v5 + 40) = sub_23361E6B4();
  sub_23361E408();
  v10 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v10);

  return v11;
}

void sub_233486F94(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_23361D5B0();
  objc_msgSend(v2, sel_setLastUpdatedAt_, v3);

}

id static MapsInsightsServiceConfiguration.serviceInterface.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D4978);
  sub_23335BC7C();
  return v0;
}

unint64_t static MapsInsightsServiceConfiguration.extensionPointIdentifier.getter()
{
  return 0xD000000000000022;
}

unint64_t sub_233487048()
{
  return 0xD000000000000022;
}

id sub_233487064()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2560D4978);
  sub_23335BC7C();
  return v0;
}

ValueMetadata *type metadata accessor for MapsInsightsServiceConfiguration()
{
  return &type metadata for MapsInsightsServiceConfiguration;
}

uint64_t MapsBrand.muid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MapsBrand.muid.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MapsBrand.muid.modify())()
{
  return nullsub_1;
}

unint64_t MapsBrand.resultProviderIdentifier.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t MapsBrand.resultProviderIdentifier.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MapsBrand.resultProviderIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MapsBrand.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MapsBrand.name.modify())()
{
  return nullsub_1;
}

uint64_t MapsBrand.phoneNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MapsBrand.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t MapsBrand.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_2331686A0(v1 + *(int *)(v3 + 32), a1, &qword_254248700);
}

uint64_t type metadata accessor for MapsBrand()
{
  uint64_t result;

  result = qword_2560519E0;
  if (!qword_2560519E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MapsBrand.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 32), &qword_254248700);
}

uint64_t (*MapsBrand.url.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.heroImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_2331686A0(v1 + *(int *)(v3 + 36), a1, &qword_254248700);
}

uint64_t MapsBrand.heroImageURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 36), &qword_254248700);
}

uint64_t (*MapsBrand.heroImageURL.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.heroImageAttributionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsBrand() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.heroImageAttributionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MapsBrand() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsBrand.heroImageAttributionName.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.walletCategory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int16 *v4;
  __int16 v5;

  result = type metadata accessor for MapsBrand();
  v4 = (__int16 *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 2);
  *(_WORD *)a1 = v5;
  *(_BYTE *)(a1 + 2) = (_BYTE)v4;
  return result;
}

uint64_t MapsBrand.walletCategory.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 2);
  result = type metadata accessor for MapsBrand();
  v5 = v1 + *(int *)(result + 44);
  *(_WORD *)v5 = v2;
  *(_BYTE *)(v5 + 2) = v3;
  return result;
}

uint64_t (*MapsBrand.walletCategory.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.mapsCategoryIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MapsBrand() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MapsBrand.mapsCategoryIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MapsBrand() + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MapsBrand.mapsCategoryIdentifier.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.encodedStylingInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MapsBrand() + 52);
  v2 = *(_QWORD *)v1;
  sub_2331D4424(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MapsBrand.encodedStylingInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for MapsBrand() + 52);
  result = sub_2331B04E8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*MapsBrand.encodedStylingInfo.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.businessChatURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_2331686A0(v1 + *(int *)(v3 + 56), a1, &qword_254248700);
}

uint64_t MapsBrand.businessChatURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 56), &qword_254248700);
}

uint64_t (*MapsBrand.businessChatURL.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.lastProcessedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_2331686A0(v1 + *(int *)(v3 + 60), a1, (uint64_t *)&unk_254247DA0);
}

uint64_t MapsBrand.lastProcessedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 60), (uint64_t *)&unk_254247DA0);
}

uint64_t (*MapsBrand.lastProcessedDate.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.logoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_2331686A0(v1 + *(int *)(v3 + 64), a1, &qword_254248700);
}

uint64_t MapsBrand.logoURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsBrand();
  return sub_233170B8C(a1, v1 + *(int *)(v3 + 64), &qword_254248700);
}

uint64_t (*MapsBrand.logoURL.modify())(_QWORD)
{
  type metadata accessor for MapsBrand();
  return nullsub_1;
}

uint64_t MapsBrand.init(muid:resultProviderIdentifier:name:phoneNumber:url:heroImageURL:heroImageAttributionName:walletCategory:mapsCategoryIdentifier:encodedStylingInfo:businessChatURL:lastProcessedDate:logoURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __int16 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char v41;
  __int16 v42;

  v41 = *((_BYTE *)a12 + 2);
  v42 = *a12;
  v20 = (int *)type metadata accessor for MapsBrand();
  v21 = a9 + v20[8];
  v33 = v21;
  v22 = sub_23361D340();
  v23 = *(void (**)(void))(*(_QWORD *)(v22 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v21, 1, 1, v22);
  v24 = a9 + v20[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v24, 1, 1, v22);
  v25 = (_QWORD *)(a9 + v20[10]);
  *v25 = 0;
  v25[1] = 0;
  v26 = a9 + v20[11];
  *(_WORD *)v26 = 0;
  *(_BYTE *)(v26 + 2) = 1;
  v27 = (_QWORD *)(a9 + v20[12]);
  *v27 = 0;
  v27[1] = 0;
  v28 = a9 + v20[13];
  *(_OWORD *)v28 = xmmword_23362B360;
  v34 = a9 + v20[14];
  v23();
  v29 = a9 + v20[15];
  v30 = sub_23361D634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = a9 + v20[16];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v31, 1, 1, v22);
  *(_QWORD *)a9 = a1;
  *(_DWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 12) = BYTE4(a2) & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  sub_233170B8C(a7, v33, &qword_254248700);
  sub_233170B8C(a8, v24, &qword_254248700);
  swift_bridgeObjectRelease();
  *v25 = a10;
  v25[1] = a11;
  *(_WORD *)v26 = v42;
  *(_BYTE *)(v26 + 2) = v41;
  swift_bridgeObjectRelease();
  *v27 = a13;
  v27[1] = a14;
  sub_2331B04E8(*(_QWORD *)v28, *(_QWORD *)(v28 + 8));
  *(_QWORD *)v28 = a15;
  *(_QWORD *)(v28 + 8) = a16;
  sub_233170B8C(a17, v34, &qword_254248700);
  sub_233170B8C(a18, v29, (uint64_t *)&unk_254247DA0);
  return sub_233170B8C(a19, v31, &qword_254248700);
}

uint64_t sub_233487A80(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233487AAC + 4 * aL[a1]))(1684632941, 0xE400000000000000);
}

unint64_t sub_233487AAC()
{
  return 0xD000000000000018;
}

uint64_t sub_233487B30()
{
  return 0x614374656C6C6177;
}

unint64_t sub_233487B54()
{
  return 0xD000000000000016;
}

uint64_t sub_233487BC8()
{
  return 0x4C52556F676F6CLL;
}

uint64_t sub_233487BE0()
{
  unsigned __int8 *v0;

  return sub_233487A80(*v0);
}

uint64_t sub_233487BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23348B268(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233487C0C()
{
  sub_23348987C();
  return sub_23361F428();
}

uint64_t sub_233487C34()
{
  sub_23348987C();
  return sub_23361F434();
}

uint64_t MapsBrand.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  int *v10;
  __int16 *v11;
  __int16 v12;
  _QWORD v14[2];
  __int128 v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051970);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23348987C();
  sub_23361F410();
  LOBYTE(v15) = 0;
  sub_23361F1A0();
  if (!v2)
  {
    v9 = *(_BYTE *)(v3 + 12);
    LOBYTE(v15) = 1;
    v16 = v9;
    sub_23361F128();
    LOBYTE(v15) = 2;
    sub_23361F0E0();
    LOBYTE(v15) = 3;
    sub_23361F0E0();
    v10 = (int *)type metadata accessor for MapsBrand();
    LOBYTE(v15) = 4;
    sub_23361D340();
    sub_233167C58((unint64_t *)&unk_256042310, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23361F110();
    LOBYTE(v15) = 5;
    sub_23361F110();
    LOBYTE(v15) = 6;
    sub_23361F0E0();
    v11 = (__int16 *)(v3 + v10[11]);
    v12 = *v11;
    LOBYTE(v11) = *((_BYTE *)v11 + 2);
    LOWORD(v15) = v12;
    BYTE2(v15) = (_BYTE)v11;
    v16 = 7;
    sub_2333FECAC();
    sub_23361F110();
    LOBYTE(v15) = 8;
    sub_23361F0E0();
    v15 = *(_OWORD *)(v3 + v10[13]);
    v16 = 9;
    sub_2331A6BA8();
    sub_23361F110();
    LOBYTE(v15) = 10;
    sub_23361F110();
    v14[1] = v3 + v10[15];
    LOBYTE(v15) = 11;
    sub_23361D634();
    sub_233167C58(&qword_254245180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23361F110();
    LOBYTE(v15) = 12;
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MapsBrand.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(void);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (uint64_t)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v60 = (uint64_t)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v62 = (uint64_t)v58 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)v58 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v65 = (uint64_t)v58 - v12;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051980);
  v64 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v14 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for MapsBrand();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_DWORD *)v18 + 2) = 0;
  v18[12] = 1;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  v19 = &v18[*(int *)(v16 + 32)];
  v20 = sub_23361D340();
  v21 = *(void (**)(void))(*(_QWORD *)(v20 - 8) + 56);
  v76 = (uint64_t)v19;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v19, 1, 1, v20);
  v75 = &v18[v15[9]];
  v21();
  v22 = &v18[v15[10]];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v77 = v22;
  v23 = &v18[v15[11]];
  *(_WORD *)v23 = 0;
  v23[2] = 1;
  v24 = &v18[v15[12]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v74 = v24;
  v25 = &v18[v15[13]];
  *(_OWORD *)v25 = xmmword_23362B360;
  v72 = &v18[v15[14]];
  v73 = v25;
  v21();
  v26 = (uint64_t)&v18[v15[15]];
  v27 = sub_23361D634();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v71 = v26;
  v28(v26, 1, 1, v27);
  v70 = &v18[v15[16]];
  v21();
  v29 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_23348987C();
  v66 = v14;
  v30 = v69;
  sub_23361F3EC();
  if (v30)
  {
    v32 = (uint64_t)v75;
    v31 = v76;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_233168608(v31, &qword_254248700);
    sub_233168608(v32, &qword_254248700);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2331B04E8(*(_QWORD *)v73, *((_QWORD *)v73 + 1));
    sub_233168608((uint64_t)v72, &qword_254248700);
    sub_233168608(v71, (uint64_t *)&unk_254247DA0);
    return sub_233168608((uint64_t)v70, &qword_254248700);
  }
  else
  {
    v58[1] = v20;
    v33 = v64;
    LOBYTE(v78) = 0;
    v34 = sub_23361F08C();
    v36 = (uint64_t)v75;
    v35 = v76;
    *(_QWORD *)v18 = v34;
    LOBYTE(v78) = 1;
    v37 = sub_23361F014();
    *((_DWORD *)v18 + 2) = v37;
    v18[12] = BYTE4(v37) & 1;
    LOBYTE(v78) = 2;
    *((_QWORD *)v18 + 2) = sub_23361EFCC();
    *((_QWORD *)v18 + 3) = v38;
    LOBYTE(v78) = 3;
    *((_QWORD *)v18 + 4) = sub_23361EFCC();
    *((_QWORD *)v18 + 5) = v39;
    LOBYTE(v78) = 4;
    v40 = sub_233167C58(&qword_256042340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_23361EFFC();
    sub_233170B8C(v65, v35, &qword_254248700);
    LOBYTE(v78) = 5;
    sub_23361EFFC();
    sub_233170B8C(v63, v36, &qword_254248700);
    LOBYTE(v78) = 6;
    v41 = sub_23361EFCC();
    v65 = v40;
    v42 = v77;
    v69 = v41;
    v44 = v43;
    swift_bridgeObjectRelease();
    *v42 = v69;
    v42[1] = v44;
    v80 = 7;
    sub_2333FECF0();
    sub_23361EFFC();
    v45 = BYTE2(v78);
    *(_WORD *)v23 = v78;
    v23[2] = v45;
    LOBYTE(v78) = 8;
    v46 = sub_23361EFCC();
    v69 = v47;
    v49 = v46;
    v50 = v74;
    swift_bridgeObjectRelease();
    v51 = v69;
    *v50 = v49;
    v50[1] = v51;
    v80 = 9;
    sub_2331A6B08();
    sub_23361EFFC();
    v52 = v78;
    v53 = v79;
    v54 = v73;
    sub_2331B04E8(*(_QWORD *)v73, *((_QWORD *)v73 + 1));
    *(_QWORD *)v54 = v52;
    *((_QWORD *)v54 + 1) = v53;
    LOBYTE(v78) = 10;
    sub_23361EFFC();
    sub_233170B8C(v62, (uint64_t)v72, &qword_254248700);
    LOBYTE(v78) = 11;
    sub_233167C58(&qword_254244F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23361EFFC();
    sub_233170B8C(v61, v71, (uint64_t *)&unk_254247DA0);
    LOBYTE(v78) = 12;
    v56 = v66;
    v55 = v67;
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v56, v55);
    v57 = (uint64_t)v68;
    sub_233170B8C(v60, (uint64_t)v70, &qword_254248700);
    sub_2331995E0((uint64_t)v18, v59);
    __swift_destroy_boxed_opaque_existential_0(v57);
    return sub_2332AFF88((uint64_t)v18);
  }
}

uint64_t sub_233488788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MapsBrand.init(from:)(a1, a2);
}

uint64_t sub_23348879C(_QWORD *a1)
{
  return MapsBrand.encode(to:)(a1);
}

BOOL _s10FinanceKit9MapsBrandV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  _BOOL8 result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  void (*v79)(_BYTE *, uint64_t);
  uint64_t v80;
  int *v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  void (*v88)(_BYTE *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  unsigned __int16 *v99;
  char v100;
  unsigned __int16 *v101;
  int v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  char v128;
  void (*v129)(_BYTE *, uint64_t);
  int *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  unsigned int (*v135)(uint64_t, uint64_t, uint64_t);
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  _BYTE *v141;
  char v142;
  void (*v143)(_BYTE *, uint64_t);
  int *v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  void (*v156)(_BYTE *, uint64_t);
  _BYTE v157[4];
  int v158;
  _BYTE *v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _BYTE *v172;
  _BYTE *v173;
  _BYTE *v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE *v177;
  _BYTE *v178;
  _BYTE *v179;
  _BYTE *v180;
  _BYTE *v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;

  v3 = sub_23361D634();
  v176 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v172 = &v157[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256042DA0);
  MEMORY[0x24BDAC7A8](v175);
  v179 = &v157[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v174 = &v157[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v177 = &v157[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v178 = &v157[-v11];
  v12 = sub_23361D340();
  v184 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v181 = &v157[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256045948);
  v14 = MEMORY[0x24BDAC7A8](v183);
  v173 = &v157[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v180 = &v157[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v182 = &v157[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v157[-v20];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
  v23 = MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](&v157[-v24]);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = &v157[-v27];
  v29 = MEMORY[0x24BDAC7A8](v26);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = &v157[-v33];
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = &v157[-v36];
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = &v157[-v39];
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = &v157[-v42];
  v44 = MEMORY[0x24BDAC7A8](v41);
  v52 = &v157[-v51];
  if (*(_QWORD *)v48 != *(_QWORD *)a2)
    return 0;
  v53 = *(_BYTE *)(a2 + 12);
  if ((*(_BYTE *)(v48 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(v48 + 8) != *(_DWORD *)(a2 + 8))
      v53 = 1;
    if ((v53 & 1) != 0)
      return 0;
  }
  v54 = *(_QWORD *)(v48 + 24);
  v55 = *(_QWORD *)(a2 + 24);
  if (!v54)
  {
    v169 = v50;
    v170 = v45;
    v167 = v49;
    v168 = v44;
    if (v55)
      return 0;
    goto LABEL_15;
  }
  if (!v55)
    return 0;
  v169 = v50;
  v170 = v45;
  v167 = v49;
  v168 = v44;
  if (*(_QWORD *)(v48 + 16) == *(_QWORD *)(a2 + 16) && v54 == v55)
    goto LABEL_15;
  v165 = v3;
  v166 = v46;
  v171 = a2;
  v56 = v48;
  v57 = v47;
  v58 = sub_23361F224();
  v47 = v57;
  v48 = v56;
  v3 = v165;
  v46 = v166;
  a2 = v171;
  v59 = v58;
  result = 0;
  if ((v59 & 1) != 0)
  {
LABEL_15:
    v61 = *(_QWORD *)(v48 + 40);
    v62 = *(_QWORD *)(a2 + 40);
    if (v61)
    {
      if (!v62)
        return 0;
      if (*(_QWORD *)(v48 + 32) != *(_QWORD *)(a2 + 32) || v61 != v62)
      {
        v165 = v3;
        v166 = v46;
        v171 = a2;
        v63 = v48;
        v64 = v47;
        v65 = sub_23361F224();
        v47 = v64;
        v48 = v63;
        v3 = v165;
        v46 = v166;
        a2 = v171;
        v66 = v65;
        result = 0;
        if ((v66 & 1) == 0)
          return result;
      }
    }
    else if (v62)
    {
      return 0;
    }
    v160 = v47;
    v166 = v46;
    v159 = v28;
    v165 = v3;
    v67 = v48;
    v68 = type metadata accessor for MapsBrand();
    v69 = *(int *)(v68 + 32);
    v162 = v67;
    v163 = v12;
    sub_2331686A0(v67 + v69, (uint64_t)v52, &qword_254248700);
    v161 = (int *)v68;
    v70 = *(int *)(v68 + 32);
    v171 = a2;
    sub_2331686A0(a2 + v70, (uint64_t)v43, &qword_254248700);
    v71 = v183;
    v72 = (uint64_t)&v21[*(int *)(v183 + 48)];
    sub_2331686A0((uint64_t)v52, (uint64_t)v21, &qword_254248700);
    v73 = v163;
    sub_2331686A0((uint64_t)v43, v72, &qword_254248700);
    v164 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48);
    if (v164((uint64_t)v21, 1, v73) == 1)
    {
      sub_233168608((uint64_t)v43, &qword_254248700);
      v74 = v163;
      sub_233168608((uint64_t)v52, &qword_254248700);
      if (v164(v72, 1, v74) == 1)
      {
        sub_233168608((uint64_t)v21, &qword_254248700);
        goto LABEL_29;
      }
    }
    else
    {
      sub_2331686A0((uint64_t)v21, (uint64_t)v40, &qword_254248700);
      if (v164(v72, 1, v73) != 1)
      {
        v77 = v181;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v184 + 32))(v181, v72, v73);
        sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        v78 = v73;
        v158 = sub_23361E108();
        v79 = *(void (**)(_BYTE *, uint64_t))(v184 + 8);
        v79(v77, v78);
        v80 = (uint64_t)v43;
        v74 = v78;
        sub_233168608(v80, &qword_254248700);
        sub_233168608((uint64_t)v52, &qword_254248700);
        v79(v40, v78);
        sub_233168608((uint64_t)v21, &qword_254248700);
        if ((v158 & 1) == 0)
          return 0;
LABEL_29:
        v81 = v161;
        sub_2331686A0(v162 + v161[9], (uint64_t)v37, &qword_254248700);
        sub_2331686A0(v171 + v81[9], (uint64_t)v34, &qword_254248700);
        v82 = *(int *)(v71 + 48);
        v83 = v182;
        v84 = (uint64_t)&v182[v82];
        sub_2331686A0((uint64_t)v37, (uint64_t)v182, &qword_254248700);
        sub_2331686A0((uint64_t)v34, v84, &qword_254248700);
        if (v164((uint64_t)v83, 1, v74) == 1)
        {
          sub_233168608((uint64_t)v34, &qword_254248700);
          sub_233168608((uint64_t)v37, &qword_254248700);
          if (v164(v84, 1, v74) == 1)
          {
            sub_233168608((uint64_t)v83, &qword_254248700);
            goto LABEL_38;
          }
        }
        else
        {
          v85 = v160;
          sub_2331686A0((uint64_t)v83, v160, &qword_254248700);
          if (v164(v84, 1, v74) != 1)
          {
            v86 = v184;
            v87 = v181;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v184 + 32))(v181, v84, v74);
            sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
            v158 = sub_23361E108();
            v88 = *(void (**)(_BYTE *, uint64_t))(v86 + 8);
            v88(v87, v74);
            sub_233168608((uint64_t)v34, &qword_254248700);
            sub_233168608((uint64_t)v37, &qword_254248700);
            v88((_BYTE *)v85, v74);
            sub_233168608((uint64_t)v83, &qword_254248700);
            if ((v158 & 1) == 0)
              return 0;
LABEL_38:
            v89 = v81[10];
            v90 = v162;
            v91 = (_QWORD *)(v162 + v89);
            v92 = *(_QWORD *)(v162 + v89 + 8);
            v93 = v171;
            v94 = (_QWORD *)(v171 + v89);
            v95 = v94[1];
            if (v92)
            {
              if (!v95)
                return 0;
              if (*v91 != *v94 || v92 != v95)
              {
                v96 = sub_23361F224();
                v90 = v162;
                v93 = v171;
                v97 = v96;
                result = 0;
                if ((v97 & 1) == 0)
                  return result;
              }
            }
            else if (v95)
            {
              return 0;
            }
            v98 = v81[11];
            v99 = (unsigned __int16 *)(v90 + v98);
            v100 = *(_BYTE *)(v90 + v98 + 2);
            v101 = (unsigned __int16 *)(v93 + v98);
            v102 = *(unsigned __int8 *)(v93 + v98 + 2);
            if ((v100 & 1) != 0)
            {
              if (!v102)
                return 0;
            }
            else
            {
              if (*v99 != *v101)
                LOBYTE(v102) = 1;
              if ((v102 & 1) != 0)
                return 0;
            }
            v103 = v81[12];
            v104 = (_QWORD *)(v90 + v103);
            v105 = *(_QWORD *)(v90 + v103 + 8);
            v106 = (_QWORD *)(v93 + v103);
            v107 = v106[1];
            if (v105)
            {
              if (!v107)
                return 0;
              if (*v104 != *v106 || v105 != v107)
              {
                v108 = sub_23361F224();
                v90 = v162;
                v93 = v171;
                v109 = v108;
                result = 0;
                if ((v109 & 1) == 0)
                  return result;
              }
            }
            else if (v107)
            {
              return 0;
            }
            v110 = v81[13];
            v111 = *(_QWORD *)(v90 + v110);
            v112 = *(_QWORD *)(v90 + v110 + 8);
            v113 = (uint64_t *)(v93 + v110);
            v114 = *v113;
            v115 = v113[1];
            if (v112 >> 60 == 15)
            {
              if (v115 >> 60 == 15)
                goto LABEL_64;
            }
            else if (v115 >> 60 != 15)
            {
              sub_2331D4424(v111, v112);
              sub_2331D4424(v114, v115);
              sub_2334C71D4(v111, v112);
              v117 = v116;
              sub_2331B04E8(v114, v115);
              sub_2331B04E8(v111, v112);
              v90 = v162;
              if ((v117 & 1) == 0)
                return 0;
LABEL_64:
              v118 = v170;
              sub_2331686A0(v90 + v81[14], v170, &qword_254248700);
              v119 = v166;
              sub_2331686A0(v171 + v81[14], v166, &qword_254248700);
              v120 = v180;
              v121 = (uint64_t)&v180[*(int *)(v183 + 48)];
              v122 = v118;
              sub_2331686A0(v118, (uint64_t)v180, &qword_254248700);
              sub_2331686A0(v119, v121, &qword_254248700);
              v123 = v163;
              if (v164((uint64_t)v120, 1, v163) == 1)
              {
                sub_233168608(v166, &qword_254248700);
                sub_233168608(v118, &qword_254248700);
                v124 = v164;
                if (v164(v121, 1, v123) == 1)
                {
                  sub_233168608((uint64_t)v120, &qword_254248700);
LABEL_71:
                  v130 = v161;
                  v131 = v178;
                  sub_2331686A0(v162 + v161[15], (uint64_t)v178, (uint64_t *)&unk_254247DA0);
                  v132 = v177;
                  sub_2331686A0(v171 + v130[15], (uint64_t)v177, (uint64_t *)&unk_254247DA0);
                  v133 = v179;
                  v134 = (uint64_t)&v179[*(int *)(v175 + 48)];
                  sub_2331686A0((uint64_t)v131, (uint64_t)v179, (uint64_t *)&unk_254247DA0);
                  sub_2331686A0((uint64_t)v132, v134, (uint64_t *)&unk_254247DA0);
                  v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48);
                  v136 = v133;
                  v137 = v165;
                  if (v135((uint64_t)v136, 1, v165) == 1)
                  {
                    sub_233168608((uint64_t)v177, (uint64_t *)&unk_254247DA0);
                    sub_233168608((uint64_t)v178, (uint64_t *)&unk_254247DA0);
                    if (v135(v134, 1, v137) == 1)
                    {
                      sub_233168608((uint64_t)v179, (uint64_t *)&unk_254247DA0);
LABEL_78:
                      v144 = v161;
                      v145 = v169;
                      sub_2331686A0(v162 + v161[16], v169, &qword_254248700);
                      v146 = v168;
                      sub_2331686A0(v171 + v144[16], v168, &qword_254248700);
                      v147 = v173;
                      v148 = (uint64_t)&v173[*(int *)(v183 + 48)];
                      v149 = v145;
                      sub_2331686A0(v145, (uint64_t)v173, &qword_254248700);
                      v150 = v146;
                      sub_2331686A0(v146, v148, &qword_254248700);
                      if (v124((uint64_t)v147, 1, v163) == 1)
                      {
                        sub_233168608(v146, &qword_254248700);
                        sub_233168608(v145, &qword_254248700);
                        if (v124(v148, 1, v163) == 1)
                        {
                          sub_233168608((uint64_t)v173, &qword_254248700);
                          return 1;
                        }
                        goto LABEL_83;
                      }
                      sub_2331686A0((uint64_t)v173, v167, &qword_254248700);
                      if (v124(v148, 1, v163) == 1)
                      {
                        sub_233168608(v146, &qword_254248700);
                        sub_233168608(v145, &qword_254248700);
                        (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v167, v163);
LABEL_83:
                        v75 = &qword_256045948;
                        v76 = v173;
                        goto LABEL_35;
                      }
                      v151 = v184;
                      v152 = v181;
                      v153 = v163;
                      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v184 + 32))(v181, v148, v163);
                      sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
                      v154 = v167;
                      v155 = sub_23361E108();
                      v156 = *(void (**)(_BYTE *, uint64_t))(v151 + 8);
                      v156(v152, v153);
                      sub_233168608(v150, &qword_254248700);
                      sub_233168608(v149, &qword_254248700);
                      v156((_BYTE *)v154, v153);
                      sub_233168608((uint64_t)v173, &qword_254248700);
                      return (v155 & 1) != 0;
                    }
                  }
                  else
                  {
                    sub_2331686A0((uint64_t)v179, (uint64_t)v174, (uint64_t *)&unk_254247DA0);
                    if (v135(v134, 1, v137) != 1)
                    {
                      v138 = v176;
                      v139 = v172;
                      v140 = v165;
                      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v176 + 32))(v172, v134, v165);
                      sub_233167C58(&qword_2560426C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
                      v141 = v174;
                      v142 = sub_23361E108();
                      v143 = *(void (**)(_BYTE *, uint64_t))(v138 + 8);
                      v143(v139, v140);
                      sub_233168608((uint64_t)v177, (uint64_t *)&unk_254247DA0);
                      sub_233168608((uint64_t)v178, (uint64_t *)&unk_254247DA0);
                      v143(v141, v140);
                      sub_233168608((uint64_t)v179, (uint64_t *)&unk_254247DA0);
                      if ((v142 & 1) == 0)
                        return 0;
                      goto LABEL_78;
                    }
                    sub_233168608((uint64_t)v177, (uint64_t *)&unk_254247DA0);
                    sub_233168608((uint64_t)v178, (uint64_t *)&unk_254247DA0);
                    (*(void (**)(_BYTE *, uint64_t))(v176 + 8))(v174, v165);
                  }
                  v75 = &qword_256042DA0;
                  v76 = v179;
LABEL_35:
                  sub_233168608((uint64_t)v76, v75);
                  return 0;
                }
              }
              else
              {
                v125 = (uint64_t)v159;
                sub_2331686A0((uint64_t)v120, (uint64_t)v159, &qword_254248700);
                v124 = v164;
                if (v164(v121, 1, v123) != 1)
                {
                  v126 = v184;
                  v127 = v181;
                  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v184 + 32))(v181, v121, v123);
                  sub_233167C58(&qword_256045950, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
                  v128 = sub_23361E108();
                  v129 = *(void (**)(_BYTE *, uint64_t))(v126 + 8);
                  v129(v127, v123);
                  sub_233168608(v166, &qword_254248700);
                  sub_233168608(v122, &qword_254248700);
                  v129((_BYTE *)v125, v123);
                  sub_233168608((uint64_t)v180, &qword_254248700);
                  if ((v128 & 1) == 0)
                    return 0;
                  goto LABEL_71;
                }
                sub_233168608(v166, &qword_254248700);
                sub_233168608(v118, &qword_254248700);
                (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v125, v123);
                v120 = v180;
              }
              v75 = &qword_256045948;
              v76 = v120;
              goto LABEL_35;
            }
            sub_2331D4424(v111, v112);
            sub_2331D4424(v114, v115);
            sub_2331B04E8(v111, v112);
            sub_2331B04E8(v114, v115);
            return 0;
          }
          sub_233168608((uint64_t)v34, &qword_254248700);
          sub_233168608((uint64_t)v37, &qword_254248700);
          (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v85, v74);
        }
        v75 = &qword_256045948;
        v76 = v83;
        goto LABEL_35;
      }
      sub_233168608((uint64_t)v43, &qword_254248700);
      sub_233168608((uint64_t)v52, &qword_254248700);
      (*(void (**)(_BYTE *, uint64_t))(v184 + 8))(v40, v73);
    }
    v75 = &qword_256045948;
    v76 = v21;
    goto LABEL_35;
  }
  return result;
}

unint64_t sub_23348987C()
{
  unint64_t result;

  result = qword_256051978;
  if (!qword_256051978)
  {
    result = MEMORY[0x234934494](&unk_233650594, &type metadata for MapsBrand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051978);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MapsBrand(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    v9 = a3[8];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v12 = sub_23361D340();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[9];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    if (v14((char *)a2 + v17, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    v21 = a3[10];
    v22 = a3[11];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)v4 + v22;
    v27 = (uint64_t)a2 + v22;
    v26[2] = *(_BYTE *)(v27 + 2);
    *(_WORD *)v26 = *(_WORD *)v27;
    v28 = a3[12];
    v29 = a3[13];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (char *)v4 + v29;
    v34 = (uint64_t *)((char *)a2 + v29);
    v35 = *(uint64_t *)((char *)a2 + v29 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    else
    {
      v36 = *v34;
      sub_2331D1374(*v34, v35);
      *(_QWORD *)v33 = v36;
      *((_QWORD *)v33 + 1) = v35;
    }
    v37 = a3[14];
    v38 = (char *)v4 + v37;
    v39 = (char *)a2 + v37;
    if (v14((char *)a2 + v37, 1, v12))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
    }
    v41 = a3[15];
    v42 = (char *)v4 + v41;
    v43 = (char *)a2 + v41;
    v44 = sub_23361D634();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = a3[16];
    v48 = (char *)v4 + v47;
    v49 = (char *)a2 + v47;
    if (v14(v49, 1, v12))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v48, v49, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v48, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for MapsBrand(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_23361D340();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[9];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[13]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_23316BEA4(*v9, v10);
  v11 = a1 + a2[14];
  if (!v7(v11, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  v12 = a1 + a2[15];
  v13 = sub_23361D634();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = a1 + a2[16];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v15, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  return result;
}

uint64_t initializeWithCopy for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[9];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[10];
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 2) = *(_BYTE *)(v25 + 2);
  *(_WORD *)v24 = *(_WORD *)v25;
  v26 = a3[12];
  v27 = a3[13];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = (uint64_t *)(a2 + v27);
  v33 = *(_QWORD *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 >> 60 == 15)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  else
  {
    v34 = *v32;
    sub_2331D1374(*v32, v33);
    *(_QWORD *)v31 = v34;
    *(_QWORD *)(v31 + 8) = v33;
  }
  v35 = a3[14];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  if (v13((const void *)(a2 + v35), 1, v11))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v36, v37, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v36, 0, 1, v11);
  }
  v39 = a3[15];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = sub_23361D634();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = a3[16];
  v46 = (void *)(a1 + v45);
  v47 = (const void *)(a2 + v45);
  if (v13(v47, 1, v11))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v46, v47, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v46, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int16 *v27;
  __int16 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  uint64_t v63;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = (__int16 *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 2) = *((_BYTE *)v27 + 2);
  *(_WORD *)v26 = v28;
  v29 = a3[12];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[13];
  v33 = (uint64_t *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v35 = *(_QWORD *)(a2 + v32 + 8);
  if (*(_QWORD *)(a1 + v32 + 8) >> 60 == 15)
  {
    if (v35 >> 60 != 15)
    {
      v36 = *v34;
      sub_2331D1374(v36, v35);
      *v33 = v36;
      v33[1] = v35;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v35 >> 60 == 15)
  {
    sub_2331EC9CC((uint64_t)v33);
LABEL_18:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_20;
  }
  v37 = *v34;
  sub_2331D1374(v37, v35);
  v38 = *v33;
  v39 = v33[1];
  *v33 = v37;
  v33[1] = v35;
  sub_23316BEA4(v38, v39);
LABEL_20:
  v40 = a3[14];
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  v43 = v12((void *)(a1 + v40), 1, v10);
  v44 = v12(v42, 1, v10);
  v62 = v12;
  v63 = v11;
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v41, v10);
LABEL_25:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v41, v42, v10);
LABEL_26:
  v46 = a3[15];
  v47 = (void *)(a1 + v46);
  v48 = (void *)(a2 + v46);
  v49 = sub_23361D634();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
LABEL_31:
    v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
LABEL_32:
  v55 = a3[16];
  v56 = (void *)(a1 + v55);
  v57 = (void *)(a2 + v55);
  v58 = v62((void *)(a1 + v55), 1, v10);
  v59 = v62(v57, 1, v10);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 24))(v56, v57, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v56, v10);
    goto LABEL_37;
  }
  if (v59)
  {
LABEL_37:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 16))(v56, v57, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v56, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23361D340();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[9];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_WORD *)v19 = *(_WORD *)v20;
  *(_BYTE *)(v19 + 2) = *(_BYTE *)(v20 + 2);
  v21 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v22 = a3[14];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  if (v12((const void *)(a2 + v22), 1, v10))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v23, v24, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  v26 = a3[15];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = sub_23361D634();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[16];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v12(v34, 1, v10))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v33, v34, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for MapsBrand(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t (*v64)(void *, uint64_t, uint64_t);
  uint64_t v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23361D340();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[9];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = v13((void *)(a1 + v17), 1, v11);
  v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = a3[12];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_WORD *)v30 = *(_WORD *)v31;
  *(_BYTE *)(v30 + 2) = *(_BYTE *)(v31 + 2);
  v32 = (_QWORD *)(a1 + v29);
  v33 = (uint64_t *)(a2 + v29);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a1 + v36 + 8);
  if (v39 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)v37 = *(_OWORD *)v38;
    goto LABEL_18;
  }
  v40 = *(_QWORD *)(v38 + 8);
  if (v40 >> 60 == 15)
  {
    sub_2331EC9CC(v37);
    goto LABEL_16;
  }
  v41 = *(_QWORD *)v37;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(v37 + 8) = v40;
  sub_23316BEA4(v41, v39);
LABEL_18:
  v42 = a3[14];
  v43 = (void *)(a1 + v42);
  v44 = (void *)(a2 + v42);
  v45 = v13((void *)(a1 + v42), 1, v11);
  v46 = v13(v44, 1, v11);
  v64 = v13;
  v65 = v12;
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v43, v44, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v43, 0, 1, v11);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v43, v11);
LABEL_23:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v43, v44, v11);
LABEL_24:
  v48 = a3[15];
  v49 = (void *)(a1 + v48);
  v50 = (void *)(a2 + v48);
  v51 = sub_23361D634();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 1, v51);
  v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v49, v50, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
LABEL_29:
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v49, v50, v51);
LABEL_30:
  v57 = a3[16];
  v58 = (void *)(a1 + v57);
  v59 = (void *)(a2 + v57);
  v60 = v64((void *)(a1 + v57), 1, v11);
  v61 = v64(v59, 1, v11);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 40))(v58, v59, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v65 + 8))(v58, v11);
    goto LABEL_35;
  }
  if (v61)
  {
LABEL_35:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v58, v59, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v58, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapsBrand()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23348AE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 32);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MapsBrand()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23348AF34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254248700);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23348AFD8()
{
  unint64_t v0;
  unint64_t v1;

  sub_233176020(319, (unint64_t *)&qword_254247FA0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_233176020(319, (unint64_t *)&qword_254248110, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for MapsBrand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_23348B110 + 4 * byte_23365037A[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_23348B144 + 4 * byte_233650375[v4]))();
}

uint64_t sub_23348B144(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23348B14C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23348B154);
  return result;
}

uint64_t sub_23348B160(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23348B168);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_23348B16C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23348B174(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsBrand.CodingKeys()
{
  return &type metadata for MapsBrand.CodingKeys;
}

unint64_t sub_23348B194()
{
  unint64_t result;

  result = qword_256051A48;
  if (!qword_256051A48)
  {
    result = MEMORY[0x234934494](&unk_23365056C, &type metadata for MapsBrand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051A48);
  }
  return result;
}

unint64_t sub_23348B1DC()
{
  unint64_t result;

  result = qword_256051A50;
  if (!qword_256051A50)
  {
    result = MEMORY[0x234934494](&unk_2336504DC, &type metadata for MapsBrand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051A50);
  }
  return result;
}

unint64_t sub_23348B224()
{
  unint64_t result;

  result = qword_256051A58;
  if (!qword_256051A58)
  {
    result = MEMORY[0x234934494](&unk_233650504, &type metadata for MapsBrand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051A58);
  }
  return result;
}

uint64_t sub_23348B268(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632941 && a2 == 0xE400000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233676DE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x67616D496F726568 && a2 == 0xEC0000004C525565 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233673D80 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x614374656C6C6177 && a2 == 0xEE0079726F676574 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233673DC0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233673DE0 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7373656E69737562 && a2 == 0xEF4C525574616843 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233673E00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x4C52556F676F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

id PendingApplePayOrderImporter.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PendingApplePayOrderImporter.init(store:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for PendingApplePayOrderImporter();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for PendingApplePayOrderImporter()
{
  return objc_opt_self();
}

id sub_23348B8BC()
{
  return sub_23348C8D4();
}

void sub_23348B940(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  _QWORD v45[2];
  int v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  uint64_t v56[2];

  v2 = v1;
  v4 = sub_23361D340();
  v52 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_orderTypeIdentifier);
  v8 = sub_23361E150();

  v9 = objc_msgSend(a1, sel_orderIdentifier);
  v10 = sub_23361E150();

  if (qword_254246760 != -1)
    swift_once();
  v11 = sub_23361DB80();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_254246748);
  v13 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = v13;
  v53 = v12;
  v15 = sub_23361DB68();
  v16 = sub_23361E750();
  v17 = v16;
  v18 = os_log_type_enabled(v15, v16);
  v50 = v8;
  v51 = v10;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v49 = v2;
    v20 = v19;
    v21 = swift_slowAlloc();
    v48 = v21;
    *(_DWORD *)v20 = 136315651;
    v45[1] = v20 + 4;
    v54 = 0;
    v55 = 0xE000000000000000;
    v56[0] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = v15;
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v54 = (id)0xD000000000000016;
    v55 = 0x8000000233672160;
    swift_bridgeObjectRetain();
    v46 = v17;
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = (id)sub_233164DCC((uint64_t)v54, v55, v56);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v22 = objc_msgSend(v14, sel_webServiceBaseURL);
    sub_23361D2D4();

    sub_2333E9744();
    v23 = sub_23361F1D0();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v4);
    v54 = (id)sub_233164DCC(v23, v25, v56);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2085;
    v26 = objc_msgSend(v14, sel_authenticationToken);
    v27 = sub_23361E150();
    v29 = v28;

    v54 = (id)sub_233164DCC(v27, v29, v56);
    sub_23361EBC4();

    swift_bridgeObjectRelease();
    v30 = v47;
    _os_log_impl(&dword_233151000, v47, (os_log_type_t)v46, "Saving pending Apple Pay order %s with webServiceURL=%s, authenticationToken=%{sensitive}s", (uint8_t *)v20, 0x20u);
    v31 = v48;
    swift_arrayDestroy();
    MEMORY[0x234934590](v31, -1, -1);
    v32 = v20;
    v2 = v49;
    MEMORY[0x234934590](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v33 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store) + 16), sel_newBackgroundContext);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v45[-2] = v34;
  v45[-1] = v14;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v45[-4] = sub_23348C9C8;
  v45[-3] = v36;
  v45[-2] = v35;
  sub_23324F034();
  sub_23361E960();

  v37 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = v37;
  v39 = sub_23361DB68();
  v40 = sub_23361E750();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = (_QWORD *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    *(_DWORD *)v41 = 136315394;
    v53 = v41 + 4;
    v54 = 0;
    v55 = 0xE000000000000000;
    v56[0] = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23361ED98();
    swift_bridgeObjectRelease();
    v54 = (id)0xD000000000000016;
    v55 = 0x8000000233672160;
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRetain();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    sub_23361E27C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = (id)sub_233164DCC((uint64_t)v54, v55, v56);
    sub_23361EBC4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2112;
    v54 = v38;
    v44 = v38;
    sub_23361EBC4();
    *v42 = v38;

    _os_log_impl(&dword_233151000, v39, v40, "Saved pending Apple Pay order %s with ID %@", (uint8_t *)v41, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
    swift_arrayDestroy();
    MEMORY[0x234934590](v42, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x234934590](v43, -1, -1);
    MEMORY[0x234934590](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

void sub_23348C3F4()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store) + 16), sel_newBackgroundContext);
  sub_23324F034();
  sub_23361E960();

}

void sub_23348C498(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  char *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35[2];

  v32 = a3;
  v35[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = sub_23361D340();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ManagedPendingApplePayOrder();
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  v10 = objc_msgSend(a2, sel_transactionIdentifier);
  if (!v10)
  {
    sub_23361E150();
    v10 = (id)sub_23361E12C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_setTransactionIdentifier_, v10);

  v11 = objc_msgSend(a2, sel_orderTypeIdentifier);
  v12 = sub_23361E150();
  v14 = v13;

  v15 = sub_2333757B8(v12, v14, (uint64_t)a1);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = v8;
    if (v15)
    {
      v16 = (id)v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for ManagedOrderType();
      v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
      v17 = (void *)sub_23361E12C();
      objc_msgSend(v16, sel_setOrderTypeIdentifier_, v17);
      swift_bridgeObjectRelease();

    }
    v31 = v16;
    objc_msgSend(v9, sel_setOrderType_, v16);
    v18 = objc_msgSend(a2, sel_orderTypeIdentifier);
    if (!v18)
    {
      sub_23361E150();
      v18 = (id)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v9, sel_setOrderTypeIdentifier_, v18);

    v19 = objc_msgSend(a2, sel_orderIdentifier);
    v20 = (uint64_t)v30;
    if (!v19)
    {
      sub_23361E150();
      v19 = (id)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v9, sel_setOrderIdentifier_, v19);

    v21 = objc_msgSend(a2, sel_authenticationToken);
    v22 = v31;
    if (!v21)
    {
      sub_23361E150();
      v21 = (id)sub_23361E12C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v9, sel_setAuthenticationToken_, v21);

    v23 = objc_msgSend(a2, sel_webServiceBaseURL);
    sub_23361D2D4();

    v24 = sub_23337F514(v22, v20, (uint64_t)a1);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v20, v34);
    objc_msgSend(v9, sel_setOrderWebService_, v24);

    v35[0] = 0;
    if ((objc_msgSend(a1, sel_save_, v35) & 1) != 0)
    {
      v25 = v35[0];
      v26 = v9;
      v27 = objc_msgSend(v26, sel_objectID);

      *v32 = v27;
    }
    else
    {
      v28 = v35[0];
      sub_23361D1B4();

      swift_willThrow();
    }
  }
}

id PendingApplePayOrderImporter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PendingApplePayOrderImporter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23348C8D4()
{
  uint64_t v0;
  uint64_t *v1;
  os_unfair_lock_s *v2;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  objc_super v8;
  uint64_t v9;

  if (qword_254246A38 != -1)
    swift_once();
  v1 = (uint64_t *)(qword_254246B20 + 16);
  v2 = (os_unfair_lock_s *)(qword_254246B20 + 24);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_233432294(v1, &v9);
  os_unfair_lock_unlock(v2);
  if (v0)
    return (id)swift_release();
  v4 = v9;
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  swift_retain();
  swift_release();
  v6 = (objc_class *)type metadata accessor for PendingApplePayOrderImporter();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10FinanceKit28PendingApplePayOrderImporter_store] = v5;
  v8.receiver = v7;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_init);
}

void sub_23348C9C8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23348C498(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_23348C9E0(_QWORD *a1@<X8>)
{
  sub_23348C9F4(a1);
}

void sub_23348C9F4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_233164110(*(void (**)(uint64_t *__return_ptr))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
  if (!v2)
    *a1 = v4;
}

uint64_t method lookup function for PendingApplePayOrderImporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PendingApplePayOrderImporter.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static PendingApplePayOrderImporter.makeImporter()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PendingApplePayOrderImporter.insertOrUpdatePendingApplePayOrder(orderDetails:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PendingApplePayOrderImporter.insertPendingApplePayOrder(orderDetails:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

void sub_23348CA98(_QWORD *a1@<X8>)
{
  sub_23348C9C8(a1);
}

id static InternalTransactionQuery.predicateFor(account:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;
  void *v5;
  void *v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D50;
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0xD000000000000024;
  *(_QWORD *)(v2 + 40) = 0x8000000233677E60;
  v3 = sub_23361D6A0();
  *(_QWORD *)(v2 + 88) = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, a1, v3);
  v5 = (void *)sub_23361E12C();
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v5, v6);

  return v7;
}

uint64_t sub_23348CBC4(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for FinanceXPCSession.SessionType(319, a1[10], a1[11], a1[12]);
  if (v2 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id *sub_23348CC58()
{
  id *v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;

  v1 = (uint64_t *)*v0;

  swift_release();
  v2 = (char *)v0 + *((_QWORD *)*v0 + 15);
  v3 = type metadata accessor for FinanceXPCSession.SessionType(0, v1[10], v1[11], v1[12]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_233166944(*(uint64_t *)((char *)v0 + *((_QWORD *)*v0 + 16)));
  return v0;
}

uint64_t sub_23348CCD4()
{
  sub_23348CC58();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FinanceXPCSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceXPCSession);
}

uint64_t type metadata accessor for FinanceXPCSession.SessionType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FinanceXPCSession.SessionType);
}

uint64_t sub_23348CD10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23361DBEC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23348CD7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_23361DBEC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23348CE2C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_23361DBEC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_23348CE74(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23361DBEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23348CEFC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v6 = sub_23361DBEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_23348CF9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23361DBEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23348D024(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v6 = sub_23361DBEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

id static Query.predicateFor(id:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;
  void *v5;
  void *v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D50;
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 25705;
  *(_QWORD *)(v2 + 40) = 0xE200000000000000;
  v3 = sub_23361D6A0();
  *(_QWORD *)(v2 + 88) = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, a1, v3);
  v5 = (void *)sub_23361E12C();
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v5, v6);

  return v7;
}

id static Query.predicateFor(ids:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v2 + 16) = xmmword_233623D50;
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 32) = 25705;
  *(_QWORD *)(v2 + 40) = 0xE200000000000000;
  *(_QWORD *)(v2 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D970);
  *(_QWORD *)(v2 + 64) = a1;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_23361E12C();
  v5 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v4, v5);

  return v6;
}

id static InternalAccountQuery.predicateFor(id:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_0;
  void *v5;
  void *v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D50;
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0xD000000000000016;
  *(_QWORD *)(v2 + 40) = 0x8000000233677EE0;
  v3 = sub_23361D6A0();
  *(_QWORD *)(v2 + 88) = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, a1, v3);
  v5 = (void *)sub_23361E12C();
  v6 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v5, v6);

  return v7;
}

id static InternalAccountQuery.predicateFor(ids:)(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254248770);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_233623D50;
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0xD000000000000016;
  *(_QWORD *)(v2 + 40) = 0x8000000233677EE0;
  *(_QWORD *)(v2 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_25604D970);
  *(_QWORD *)(v2 + 64) = a1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_23361E12C();
  v4 = (void *)sub_23361E3D8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_predicateWithFormat_argumentArray_, v3, v4);

  return v5;
}

uint64_t FormatterConfiguration.init(locale:calendar:timeZone:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for FormatterConfiguration();
  v10 = a4 + *(int *)(v9 + 20);
  v11 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  v12 = a4 + *(int *)(v9 + 24);
  v13 = sub_23361D8A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a3, v13);
}

uint64_t type metadata accessor for FormatterConfiguration()
{
  uint64_t result;

  result = qword_256051B38;
  if (!qword_256051B38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static FormatterConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((MEMORY[0x234931A40]() & 1) != 0)
  {
    v4 = type metadata accessor for FormatterConfiguration();
    if ((MEMORY[0x234931B48](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0)
      JUMPOUT(0x234931BFCLL);
  }
  return 0;
}

uint64_t FormatterConfiguration.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D73C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FormatterConfiguration.locale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23361D73C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FormatterConfiguration.locale.modify())()
{
  return nullsub_1;
}

uint64_t FormatterConfiguration.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 20);
  v4 = sub_23361D868();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatterConfiguration.calendar.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 20);
  v4 = sub_23361D868();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FormatterConfiguration.calendar.modify())(_QWORD)
{
  type metadata accessor for FormatterConfiguration();
  return nullsub_1;
}

uint64_t FormatterConfiguration.timeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 24);
  v4 = sub_23361D8A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatterConfiguration.timeZone.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatterConfiguration() + 24);
  v4 = sub_23361D8A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*FormatterConfiguration.timeZone.modify())(_QWORD)
{
  type metadata accessor for FormatterConfiguration();
  return nullsub_1;
}

uint64_t FormatterConfiguration.hash(into:)()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

uint64_t sub_23348D91C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7261646E656C6163;
  if (*v0 != 1)
    v1 = 0x656E6F5A656D6974;
  if (*v0)
    return v1;
  else
    return 0x656C61636F6CLL;
}

uint64_t sub_23348D974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23348EC54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23348D998()
{
  sub_23348DBD0();
  return sub_23361F428();
}

uint64_t sub_23348D9C0()
{
  sub_23348DBD0();
  return sub_23361F434();
}

uint64_t FormatterConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051A90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23348DBD0();
  sub_23361F410();
  v8[15] = 0;
  sub_23361D73C();
  sub_233167C58(&qword_256051AA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
  sub_23361F17C();
  if (!v1)
  {
    type metadata accessor for FormatterConfiguration();
    v8[14] = 1;
    sub_23361D868();
    sub_233167C58(&qword_256051AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF2F8]);
    sub_23361F17C();
    v8[13] = 2;
    sub_23361D8A4();
    sub_233167C58(&qword_256051AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF528]);
    sub_23361F17C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23348DBD0()
{
  unint64_t result;

  result = qword_256051A98;
  if (!qword_256051A98)
  {
    result = MEMORY[0x234934494](&unk_23365089C, &type metadata for FormatterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051A98);
  }
  return result;
}

uint64_t FormatterConfiguration.hashValue.getter()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  type metadata accessor for FormatterConfiguration();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t FormatterConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;

  v30 = a2;
  v31 = sub_23361D8A4();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v32 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23361D868();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23361D73C();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051AB8);
  v8 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatterConfiguration();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23348DBD0();
  v39 = v10;
  v14 = (uint64_t)v40;
  sub_23361F3EC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v27 = v6;
  v28 = v11;
  v15 = v13;
  v40 = a1;
  v16 = v35;
  v43 = 0;
  sub_233167C58(&qword_256051AC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v17 = v36;
  v18 = v37;
  sub_23361F068();
  v19 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v26 = (uint64_t)v15;
  v19(v15, v17, v18);
  v42 = 1;
  sub_233167C58(&qword_256051AC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF310]);
  v20 = v33;
  sub_23361F068();
  v21 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v26 + *(int *)(v28 + 20), v20, v16);
  v41 = 2;
  sub_233167C58(&qword_256051AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF540]);
  v23 = v31;
  v22 = v32;
  sub_23361F068();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v39, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v21 + *(int *)(v28 + 24), v22, v23);
  sub_23332DC20(v21, v30);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return sub_2333DDC40(v21);
}

uint64_t sub_23348E100@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_23348E114(_QWORD *a1)
{
  return FormatterConfiguration.encode(to:)(a1);
}

uint64_t sub_23348E128()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_23348E224()
{
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_23361E090();
}

uint64_t sub_23348E310()
{
  sub_23361F350();
  sub_23361D73C();
  sub_233167C58(&qword_2560437A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23361E090();
  sub_23361D868();
  sub_233167C58((unint64_t *)&unk_256056170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF300]);
  sub_23361E090();
  sub_23361D8A4();
  sub_233167C58(&qword_2560437B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_23361E090();
  return sub_23361F3A4();
}

uint64_t sub_23348E408()
{
  return sub_233167C58(&qword_256051AD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatterConfiguration, (uint64_t)&protocol conformance descriptor for FormatterConfiguration);
}

uint64_t sub_23348E434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x234931A40]() & 1) != 0
    && (MEMORY[0x234931B48](a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    JUMPOUT(0x234931BFCLL);
  }
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatterConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23361D73C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23361D868();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23361D8A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for FormatterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_23361D8A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatterConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23361D73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23361D868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23361D8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatterConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23348E8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23361D73C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_23361D868();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_23361D8A4();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FormatterConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23348E970(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23361D73C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_23361D868();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_23361D8A4();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23348EA10()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23361D73C();
  if (v1 <= 0x3F)
  {
    result = sub_23361D868();
    if (v2 <= 0x3F)
    {
      result = sub_23361D8A4();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatterConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23348EAFC + 4 * byte_2336506E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23348EB30 + 4 * byte_2336506E0[v4]))();
}

uint64_t sub_23348EB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23348EB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23348EB40);
  return result;
}

uint64_t sub_23348EB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23348EB54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23348EB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23348EB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatterConfiguration.CodingKeys()
{
  return &type metadata for FormatterConfiguration.CodingKeys;
}

unint64_t sub_23348EB80()
{
  unint64_t result;

  result = qword_256051B78;
  if (!qword_256051B78)
  {
    result = MEMORY[0x234934494](&unk_233650874, &type metadata for FormatterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051B78);
  }
  return result;
}

unint64_t sub_23348EBC8()
{
  unint64_t result;

  result = qword_256051B80;
  if (!qword_256051B80)
  {
    result = MEMORY[0x234934494](&unk_2336507E4, &type metadata for FormatterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051B80);
  }
  return result;
}

unint64_t sub_23348EC10()
{
  unint64_t result;

  result = qword_256051B88;
  if (!qword_256051B88)
  {
    result = MEMORY[0x234934494](&unk_23365080C, &type metadata for FormatterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051B88);
  }
  return result;
}

uint64_t sub_23348EC54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t TransactionMerchantInformation.merchantCategoryCode.getter()
{
  unsigned __int16 *v0;

  return *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
}

uint64_t TransactionMerchantInformation.merchantCategoryCode.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)v1 = result;
  *(_BYTE *)(v1 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t (*TransactionMerchantInformation.merchantCategoryCode.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.standardIndustrialClassificationCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.standardIndustrialClassificationCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.standardIndustrialClassificationCode.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.categoryDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.categoryDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.categoryDescription.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.merchantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.merchantName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.merchantName.modify())()
{
  return nullsub_1;
}

uint64_t TransactionMerchantInformation.merchantNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionMerchantInformation.merchantNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*TransactionMerchantInformation.merchantNumber.modify())()
{
  return nullsub_1;
}

void *TransactionMerchantInformation.merchantAddress.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  return v1;
}

void TransactionMerchantInformation.merchantAddress.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
}

void (*TransactionMerchantInformation.merchantAddress.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + 72);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_23348F01C;
}

void sub_23348F01C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v4 = *(void **)(v3 + 72);
    v5 = v2;

    *(_QWORD *)(v3 + 72) = v2;
  }
  else
  {

    *(_QWORD *)(v3 + 72) = v2;
  }
}

uint64_t TransactionMerchantInformation.init(merchantCategoryCode:standardIndustrialClassificationCode:categoryDescription:merchantName:merchantNumber:merchantAddress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(_WORD *)a9 = result;
  *(_BYTE *)(a9 + 2) = BYTE2(result) & 1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

void TransactionMerchantInformation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(id *)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  if (*(_BYTE *)(v0 + 2) == 1)
  {
    sub_23361F368();
    if (v1)
      goto LABEL_3;
  }
  else
  {
    v7 = *(id *)(v0 + 64);
    sub_23361F368();
    v4 = v7;
    sub_23361F374();
    if (v1)
    {
LABEL_3:
      sub_23361F368();
      swift_bridgeObjectRetain();
      sub_23361E0A8();
      swift_bridgeObjectRelease();
      if (v2)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  sub_23361F368();
  if (v2)
  {
LABEL_4:
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  sub_23361F368();
  if (v3)
  {
LABEL_5:
    sub_23361F368();
    swift_bridgeObjectRetain();
    sub_23361E0A8();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_6;
LABEL_12:
    sub_23361F368();
    if (v5)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_11:
  sub_23361F368();
  if (!v4)
    goto LABEL_12;
LABEL_6:
  sub_23361F368();
  swift_bridgeObjectRetain();
  sub_23361E0A8();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_7:
    sub_23361F368();
    v6 = v5;
    sub_23361EA20();

    return;
  }
LABEL_13:
  sub_23361F368();
}

uint64_t sub_23348F298(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23348F2D4 + 4 * byte_2336508F0[a1]))(0xD000000000000014, 0x8000000233677F00);
}

uint64_t sub_23348F2D4()
{
  uint64_t v0;

  return v0 + 17;
}

uint64_t sub_23348F34C()
{
  unsigned __int8 *v0;

  return sub_23348F298(*v0);
}

uint64_t sub_23348F354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233491750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23348F378()
{
  sub_233491128();
  return sub_23361F428();
}

uint64_t sub_23348F3A0()
{
  sub_233491128();
  return sub_23361F434();
}

uint64_t TransactionMerchantInformation.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051B90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[1];
  v21 = v1[2];
  v22 = v7;
  v8 = v1[3];
  v19 = v1[4];
  v20 = v8;
  v9 = v1[5];
  v17 = v1[6];
  v18 = v9;
  v10 = v1[8];
  v15 = v1[7];
  v16 = v10;
  v14 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233491128();
  sub_23361F410();
  v30 = 0;
  v11 = v23;
  sub_23361F11C();
  if (!v11)
  {
    v29 = 1;
    sub_23361F0E0();
    v28 = 2;
    sub_23361F0E0();
    v27 = 3;
    sub_23361F0E0();
    v26 = 4;
    sub_23361F0E0();
    v24 = v14;
    v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F428);
    sub_2334229A0(&qword_25604F430, (uint64_t)&protocol conformance descriptor for CodableWrapper<A>);
    sub_23361F110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TransactionMerchantInformation.hashValue.getter()
{
  sub_23361F350();
  TransactionMerchantInformation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t TransactionMerchantInformation.init(from:)@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  _WORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _WORD *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051BA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233491128();
  sub_23361F3EC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v41 = 0;
    v9 = sub_23361F008();
    v40 = 1;
    v10 = sub_23361EFCC();
    v13 = v12;
    v33 = v10;
    v39 = 2;
    swift_bridgeObjectRetain();
    v34 = v13;
    v14 = sub_23361EFCC();
    v16 = v15;
    v31 = v14;
    v32 = v9;
    v38 = 3;
    swift_bridgeObjectRetain();
    v17 = sub_23361EFCC();
    v19 = v18;
    v29 = v17;
    v30 = a2;
    v37 = 4;
    swift_bridgeObjectRetain();
    v20 = sub_23361EFCC();
    v22 = v21;
    v28 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25604F428);
    v36 = 5;
    sub_2334229A0(&qword_25604F440, (uint64_t)&protocol conformance descriptor for CodableWrapper<A>);
    swift_bridgeObjectRetain();
    sub_23361EFFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v23 = v35;
    v24 = v35;
    v25 = v30;
    v26 = BYTE2(v32);
    *v30 = v32;
    *((_BYTE *)v25 + 2) = v26 & 1;
    v27 = v34;
    *((_QWORD *)v25 + 1) = v33;
    *((_QWORD *)v25 + 2) = v27;
    *((_QWORD *)v25 + 3) = v31;
    *((_QWORD *)v25 + 4) = v16;
    *((_QWORD *)v25 + 5) = v29;
    *((_QWORD *)v25 + 6) = v19;
    *((_QWORD *)v25 + 7) = v28;
    *((_QWORD *)v25 + 8) = v22;
    *((_QWORD *)v25 + 9) = v23;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23348FA18@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  return TransactionMerchantInformation.init(from:)(a1, a2);
}

uint64_t sub_23348FA2C(_QWORD *a1)
{
  return TransactionMerchantInformation.encode(to:)(a1);
}

uint64_t sub_23348FA40()
{
  sub_23361F350();
  TransactionMerchantInformation.hash(into:)();
  return sub_23361F3A4();
}

uint64_t sub_23348FABC()
{
  sub_23361F350();
  TransactionMerchantInformation.hash(into:)();
  return sub_23361F3A4();
}

__int128 *TransactionMerchantInformation.init(_:)@<X0>(__int128 *result@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  __int16 v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;

  v3 = result[7];
  v71 = result[6];
  v72 = v3;
  v4 = result[9];
  v73 = result[8];
  v74 = v4;
  v5 = result[3];
  v67 = result[2];
  v68 = v5;
  v6 = result[5];
  v69 = result[4];
  v70 = v6;
  v7 = result[1];
  v65 = *result;
  v66 = v7;
  if (!*((_QWORD *)&v65 + 1)
    || ((v8 = HIBYTE(*((_QWORD *)&v65 + 1)) & 0xFLL,
         v9 = v65 & 0xFFFFFFFFFFFFLL,
         (*((_QWORD *)&v65 + 1) & 0x2000000000000000) != 0)
      ? (v10 = HIBYTE(*((_QWORD *)&v65 + 1)) & 0xFLL)
      : (v10 = v65 & 0xFFFFFFFFFFFFLL),
        !v10))
  {
    v14 = 0;
    LOBYTE(v13) = 1;
    goto LABEL_49;
  }
  if ((*((_QWORD *)&v65 + 1) & 0x1000000000000000) == 0)
  {
    if ((*((_QWORD *)&v65 + 1) & 0x2000000000000000) == 0)
    {
      if ((v65 & 0x1000000000000000) != 0)
        v11 = (unsigned __int8 *)((*((_QWORD *)&v65 + 1) & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v11 = (unsigned __int8 *)sub_23361EE34();
      v12 = sub_233490754(v11, v9, 10);
      LODWORD(v13) = HIWORD(v12) & 1;
      goto LABEL_46;
    }
    v55 = v65;
    v56 = *((_QWORD *)&v65 + 1) & 0xFFFFFFFFFFFFFFLL;
    if (v65 == 43)
    {
      if (!v8)
        goto LABEL_62;
      if (v8 == 1)
        goto LABEL_33;
      v12 = (BYTE1(v65) - 48);
      if (v12 > 9)
        goto LABEL_33;
      if (v8 != 2)
      {
        if ((BYTE2(v65) - 48) > 9u)
          goto LABEL_33;
        LOWORD(v12) = 10 * v12 + (BYTE2(v65) - 48);
        v16 = v8 - 3;
        if (v16)
        {
          v17 = (unsigned __int8 *)&v55 + 3;
          while (1)
          {
            v18 = *v17 - 48;
            if (v18 > 9)
              goto LABEL_33;
            v19 = (__int16)(10 * v12);
            if (v19 != 10 * (__int16)v12)
              goto LABEL_33;
            v12 = v19 + v18;
            if ((__int16)(v19 + v18) != v12)
              goto LABEL_33;
            LODWORD(v13) = 0;
            ++v17;
            if (!--v16)
              goto LABEL_46;
          }
        }
      }
    }
    else
    {
      if (v65 == 45)
      {
        if (v8)
        {
          if (v8 != 1)
          {
            v15 = (BYTE1(v65) - 48);
            if (v15 <= 9)
            {
              if (v8 == 2)
              {
                LODWORD(v13) = 0;
                v12 = -v15;
                goto LABEL_46;
              }
              if ((BYTE2(v65) - 48) <= 9u)
              {
                LOWORD(v12) = -10 * v15 - (BYTE2(v65) - 48);
                v24 = v8 - 3;
                if (!v24)
                  goto LABEL_45;
                v40 = (unsigned __int8 *)&v55 + 3;
                while (1)
                {
                  v41 = *v40 - 48;
                  if (v41 > 9)
                    break;
                  v42 = (__int16)(10 * v12);
                  if (v42 != 10 * (__int16)v12)
                    break;
                  v12 = v42 - v41;
                  if ((__int16)(v42 - v41) != v12)
                    break;
                  LODWORD(v13) = 0;
                  ++v40;
                  if (!--v24)
                    goto LABEL_46;
                }
              }
            }
          }
LABEL_33:
          LOWORD(v12) = 0;
          LODWORD(v13) = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      if (!v8)
        goto LABEL_33;
      v12 = (v65 - 48);
      if (v12 > 9)
        goto LABEL_33;
      if (v8 != 1)
      {
        if ((BYTE1(v65) - 48) > 9u)
          goto LABEL_33;
        LOWORD(v12) = 10 * v12 + (BYTE1(v65) - 48);
        v20 = v8 - 2;
        if (v20)
        {
          v21 = (unsigned __int8 *)&v55 + 2;
          while (1)
          {
            v22 = *v21 - 48;
            if (v22 > 9)
              goto LABEL_33;
            v23 = (__int16)(10 * v12);
            if (v23 != 10 * (__int16)v12)
              goto LABEL_33;
            v12 = v23 + v22;
            if ((__int16)(v23 + v22) != v12)
              goto LABEL_33;
            LODWORD(v13) = 0;
            ++v21;
            if (!--v20)
              goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    LODWORD(v13) = 0;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  v12 = sub_2334903FC(v65, *((uint64_t *)&v65 + 1), 10);
  swift_bridgeObjectRelease();
  LODWORD(v13) = HIWORD(v12) & 1;
LABEL_46:
  if ((_DWORD)v13)
    v14 = 0;
  else
    v14 = v12;
LABEL_49:
  v25 = *((_QWORD *)&v66 + 1);
  v26 = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *((_QWORD *)&v67 + 1);
  v54 = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)&v68 + 1);
  v53 = v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)&v69 + 1);
  v52 = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *((_QWORD *)&v70 + 1);
  if (*((_QWORD *)&v70 + 1) == 1)
  {
    result = (__int128 *)sub_23349116C((uint64_t)&v65);
    v31 = 0;
  }
  else
  {
    v49 = v14;
    v50 = v13;
    v47 = v29;
    v48 = v26;
    v32 = v74;
    v51 = a2;
    v44 = *((_QWORD *)&v73 + 1);
    v45 = *((_QWORD *)&v74 + 1);
    v33 = v73;
    v43 = *((_QWORD *)&v72 + 1);
    v34 = v28;
    v35 = v27;
    v36 = v25;
    v38 = *((_QWORD *)&v71 + 1);
    v37 = v72;
    v39 = v71;
    v13 = v70;
    v46 = v70;
    sub_233168668(0, (unint64_t *)&qword_256045B60);
    v55 = v13;
    v56 = v30;
    v57 = v39;
    v58 = v38;
    v59 = v37;
    v25 = v36;
    v27 = v35;
    v28 = v34;
    v60 = v43;
    v61 = v33;
    v62 = v44;
    v63 = v32;
    v64 = v45;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v31 = sub_23349000C(&v55);
    sub_23349116C((uint64_t)&v65);
    v14 = v49;
    LOBYTE(v13) = v50;
    v29 = v47;
    v26 = v48;
    a2 = v51;
    result = (__int128 *)sub_2332705EC(v46, v30);
  }
  *(_WORD *)a2 = v14;
  *(_BYTE *)(a2 + 2) = v13;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v54;
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v53;
  *(_QWORD *)(a2 + 48) = v28;
  *(_QWORD *)(a2 + 56) = v52;
  *(_QWORD *)(a2 + 64) = v29;
  *(_QWORD *)(a2 + 72) = v31;
  return result;
}

void *sub_23349000C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v1 = a1[1];
  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[9];
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = v6;
  if (v1)
  {
    v8 = v6;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setStreet_, v9);

    if (!v2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v14 = v6;
  if (v2)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    v10 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setCity_, v10);

  }
LABEL_4:
  if (v3)
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setState_, v11);

  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    v12 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setPostalCode_, v12);

  }
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = (void *)sub_23361E12C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setISOCountryCode_, v13);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

_QWORD *sub_233490214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254246960);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_233490278(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23361E2DC();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23493261C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_2334902F0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_2334904D8(a1, a2, a3);
}

unsigned __int8 *sub_233490304(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_233490754(a1, a2, a3);
}

unsigned __int8 *sub_233490318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23361E300();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_233490A08();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23361EE34();
  }
LABEL_7:
  v11 = sub_2334904D8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_2334903FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23361E300();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_233490A08();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23361EE34();
  }
LABEL_7:
  v11 = sub_233490754(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FFFF;
}

unsigned __int8 *sub_2334904D8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_233490754(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int16 v12;
  int v13;
  int v14;
  __int16 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  int v23;
  __int16 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  int v28;
  unsigned int v29;
  char v30;
  int v31;
  __int16 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (__int16)v8 * (__int16)a3;
            v24 = v23;
            if ((__int16)v23 != v23)
              goto LABEL_72;
            v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8)
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (__int16)v28 * (__int16)a3;
            v32 = v31;
            if ((__int16)v31 != v31)
              goto LABEL_72;
            v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (__int16)v8 * (__int16)a3;
            v15 = v14;
            if ((__int16)v14 != v14)
              goto LABEL_72;
            v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_233490A08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_23361E30C();
  v4 = sub_233490A84(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_233490A84(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_233490BC8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_233490214(v9, 0);
      v12 = sub_233490CB4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x234932580](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x234932580);
LABEL_9:
      sub_23361EE34();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x234932580]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_233490BC8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_233490278(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_233490278(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_23361E2C4();
  }
  __break(1u);
  return result;
}

unint64_t sub_233490CB4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_233490278(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_23361E2D0();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_23361EE34();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_233490278(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_23361E2AC();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

BOOL _s10FinanceKit30TransactionMerchantInformationV2eeoiySbAC_ACtFZ_0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  _BOOL8 result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  void *v40;
  char v41;
  char v42;
  void *v43;
  id v44;
  id v45;
  char v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;

  v4 = *((_BYTE *)a1 + 2);
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 3);
  v9 = *((_QWORD *)a1 + 4);
  v8 = *((_QWORD *)a1 + 5);
  v11 = *((_QWORD *)a1 + 6);
  v10 = *((_QWORD *)a1 + 7);
  v13 = *((_QWORD *)a1 + 8);
  v12 = (void *)*((_QWORD *)a1 + 9);
  v14 = *((_QWORD *)a2 + 2);
  v16 = *((_QWORD *)a2 + 3);
  v15 = *((_QWORD *)a2 + 4);
  v18 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)a2 + 6);
  v20 = *((_QWORD *)a2 + 7);
  v19 = *((_QWORD *)a2 + 8);
  v21 = (void *)*((_QWORD *)a2 + 9);
  if ((v4 & 1) != 0)
  {
    if (!*((_BYTE *)a2 + 2))
      return 0;
  }
  else
  {
    if (*a1 == *a2)
      v22 = *((_BYTE *)a2 + 2);
    else
      v22 = 1;
    if ((v22 & 1) != 0)
      return 0;
  }
  if (!v6)
  {
    if (v14)
      return 0;
    goto LABEL_15;
  }
  if (!v14)
    return 0;
  if (v5 == *((_QWORD *)a2 + 1) && v6 == v14)
    goto LABEL_15;
  v49 = (void *)*((_QWORD *)a2 + 9);
  v50 = v10;
  v47 = v12;
  v48 = *((_QWORD *)a2 + 8);
  v23 = v13;
  v24 = *((_QWORD *)a2 + 7);
  v25 = sub_23361F224();
  v20 = v24;
  v12 = v47;
  v19 = v48;
  v13 = v23;
  v21 = v49;
  v10 = v50;
  v26 = v25;
  result = 0;
  if ((v26 & 1) != 0)
  {
LABEL_15:
    if (v9)
    {
      if (!v15)
        return 0;
      if (v7 != v16 || v9 != v15)
      {
        v28 = v12;
        v29 = v13;
        v30 = v19;
        v31 = v20;
        v32 = sub_23361F224();
        v20 = v31;
        v19 = v30;
        v13 = v29;
        v12 = v28;
        v33 = v32;
        result = 0;
        if ((v33 & 1) == 0)
          return result;
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v11)
    {
      if (!v17)
        return 0;
      if (v8 != v18 || v11 != v17)
      {
        v34 = v12;
        v35 = v13;
        v36 = v19;
        v37 = v20;
        v38 = sub_23361F224();
        v20 = v37;
        v19 = v36;
        v13 = v35;
        v12 = v34;
        v39 = v38;
        result = 0;
        if ((v39 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v13)
    {
      if (!v19)
        return 0;
      if (v10 != v20 || v13 != v19)
      {
        v40 = v12;
        v41 = sub_23361F224();
        v12 = v40;
        v42 = v41;
        result = 0;
        if ((v42 & 1) == 0)
          return result;
      }
    }
    else if (v19)
    {
      return 0;
    }
    if (v12)
    {
      if (!v21)
        return 0;
      v43 = v12;
      sub_233168668(0, (unint64_t *)&qword_254247F98);
      v44 = v43;
      v45 = v21;
      v46 = sub_23361EA14();

      return (v46 & 1) != 0;
    }
    return !v21;
  }
  return result;
}

unint64_t sub_233491128()
{
  unint64_t result;

  result = qword_256051B98;
  if (!qword_256051B98)
  {
    result = MEMORY[0x234934494](&unk_233650AB4, &type metadata for TransactionMerchantInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051B98);
  }
  return result;
}

uint64_t sub_23349116C(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2332705EC(v4, v3);
  return a1;
}

unint64_t sub_233491234()
{
  unint64_t result;

  result = qword_256051BA8;
  if (!qword_256051BA8)
  {
    result = MEMORY[0x234934494](&protocol conformance descriptor for TransactionMerchantInformation, &type metadata for TransactionMerchantInformation);
    atomic_store(result, (unint64_t *)&qword_256051BA8);
  }
  return result;
}

id sub_233491278@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(a1 + 72);
  *a2 = v2;
  return v2;
}

void sub_233491284(id *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *(void **)(a2 + 72);
  v5 = *a1;

  *(_QWORD *)(a2 + 72) = v3;
}

void destroy for TransactionMerchantInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for TransactionMerchantInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = v7;
  return a1;
}

uint64_t assignWithCopy for TransactionMerchantInformation(uint64_t a1, __int16 *a2)
{
  __int16 v4;
  void *v5;
  void *v6;
  id v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 72);
  v6 = (void *)*((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = v6;

  return a1;
}

uint64_t assignWithTake for TransactionMerchantInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionMerchantInformation(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionMerchantInformation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionMerchantInformation()
{
  return &type metadata for TransactionMerchantInformation;
}

uint64_t storeEnumTagSinglePayload for TransactionMerchantInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2334915F8 + 4 * byte_2336508FB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23349162C + 4 * byte_2336508F6[v4]))();
}

uint64_t sub_23349162C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233491634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23349163CLL);
  return result;
}

uint64_t sub_233491648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233491650);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233491654(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23349165C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionMerchantInformation.CodingKeys()
{
  return &type metadata for TransactionMerchantInformation.CodingKeys;
}

unint64_t sub_23349167C()
{
  unint64_t result;

  result = qword_256051BB0;
  if (!qword_256051BB0)
  {
    result = MEMORY[0x234934494](&unk_233650A8C, &type metadata for TransactionMerchantInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BB0);
  }
  return result;
}

unint64_t sub_2334916C4()
{
  unint64_t result;

  result = qword_256051BB8;
  if (!qword_256051BB8)
  {
    result = MEMORY[0x234934494](&unk_2336509FC, &type metadata for TransactionMerchantInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BB8);
  }
  return result;
}

unint64_t sub_23349170C()
{
  unint64_t result;

  result = qword_256051BC0;
  if (!qword_256051BC0)
  {
    result = MEMORY[0x234934494](&unk_233650A24, &type metadata for TransactionMerchantInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BC0);
  }
  return result;
}

uint64_t sub_233491750(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000233677F00 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x8000000233677F20 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233677F50 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEC000000656D614ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEE007265626D754ELL || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233677F70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

FinanceKit::BankConnectOfflineLab::SharingPreference __swiftcall BankConnectOfflineLab.SharingPreference.init(permission:visibility:)(Swift::Bool permission, Swift::Bool visibility)
{
  Swift::Bool *v2;
  FinanceKit::BankConnectOfflineLab::SharingPreference result;

  *v2 = permission;
  v2[1] = visibility;
  result.permission = permission;
  return result;
}

uint64_t sub_2334919E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x696C696269736976;
  else
    return 0x697373696D726570;
}

uint64_t sub_233491A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2334920A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233491A4C()
{
  sub_233491BBC();
  return sub_23361F428();
}

uint64_t sub_233491A74()
{
  sub_233491BBC();
  return sub_23361F434();
}

uint64_t BankConnectOfflineLab.SharingPreference.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051BC8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233491BBC();
  sub_23361F410();
  v12 = 0;
  sub_23361F14C();
  if (!v2)
  {
    v11 = 1;
    sub_23361F14C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_233491BBC()
{
  unint64_t result;

  result = qword_256051BD0;
  if (!qword_256051BD0)
  {
    result = MEMORY[0x234934494](&unk_233650C78, &type metadata for BankConnectOfflineLab.SharingPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BD0);
  }
  return result;
}

uint64_t BankConnectOfflineLab.SharingPreference.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256051BD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233491BBC();
  sub_23361F3EC();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_23361F038();
    v13 = 1;
    v10 = sub_23361F038();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
    a2[1] = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_233491D54@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return BankConnectOfflineLab.SharingPreference.init(from:)(a1, a2);
}

uint64_t sub_233491D68(_QWORD *a1)
{
  return BankConnectOfflineLab.SharingPreference.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab()
{
  return &type metadata for BankConnectOfflineLab;
}

uint64_t getEnumTagSinglePayload for BankConnectOfflineLab.SharingPreference(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BankConnectOfflineLab.SharingPreference(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233491E7C + 4 * byte_233650B15[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_233491EB0 + 4 * byte_233650B10[v4]))();
}

uint64_t sub_233491EB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_233491EB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x233491EC0);
  return result;
}

uint64_t sub_233491ECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x233491ED4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233491ED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_233491EE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab.SharingPreference()
{
  return &type metadata for BankConnectOfflineLab.SharingPreference;
}

uint64_t storeEnumTagSinglePayload for BankConnectOfflineLab.SharingPreference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233491F48 + 4 * byte_233650B1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233491F7C + 4 * byte_233650B1A[v4]))();
}

uint64_t sub_233491F7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233491F84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233491F8CLL);
  return result;
}

uint64_t sub_233491F98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233491FA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233491FA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233491FAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BankConnectOfflineLab.SharingPreference.CodingKeys()
{
  return &type metadata for BankConnectOfflineLab.SharingPreference.CodingKeys;
}

unint64_t sub_233491FCC()
{
  unint64_t result;

  result = qword_256051BE0;
  if (!qword_256051BE0)
  {
    result = MEMORY[0x234934494](&unk_233650C50, &type metadata for BankConnectOfflineLab.SharingPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BE0);
  }
  return result;
}

unint64_t sub_233492014()
{
  unint64_t result;

  result = qword_256051BE8;
  if (!qword_256051BE8)
  {
    result = MEMORY[0x234934494](&unk_233650BC0, &type metadata for BankConnectOfflineLab.SharingPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BE8);
  }
  return result;
}

unint64_t sub_23349205C()
{
  unint64_t result;

  result = qword_256051BF0;
  if (!qword_256051BF0)
  {
    result = MEMORY[0x234934494](&unk_233650BE8, &type metadata for BankConnectOfflineLab.SharingPreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256051BF0);
  }
  return result;
}

uint64_t sub_2334920A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697373696D726570 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_23361F224() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23361F224();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of Query.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2334921F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x23493465C](v1);
}

uint64_t sub_233492288()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2334922E0(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x23493465C](v5);
  return sub_2333B2350;
}

id sub_233492350(uint64_t a1, uint64_t a2)
{
  return sub_233495030(a1, a2, 10);
}

id sub_2334923DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;
  uint64_t v18;
  char *v19;
  char *v20;
  id v21;
  objc_super v24;

  swift_unknownObjectWeakInit();
  v18 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactions] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_monthlyTransactionGroups] = v18;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_yearlyTransactionGroups] = v18;
  v19 = &v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_store] = a3;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context] = a4;
  sub_23332DC20(a5, (uint64_t)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_formatterConfiguration]);
  v20 = &v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_now];
  *(_QWORD *)v20 = a6;
  *((_QWORD *)v20 + 1) = a7;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_fixedNumberOfLatestTransactions] = a8;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionExporter] = a9;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionChangesObserver] = a10;
  v24.receiver = v10;
  v24.super_class = (Class)type metadata accessor for TransactionsAndGroupsProvider();
  v21 = objc_msgSendSuper2(&v24, sel_init);
  sub_233168500(a5, (uint64_t (*)(_QWORD))type metadata accessor for FormatterConfiguration);
  return v21;
}

void sub_233492528()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  _QWORD v7[6];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_transactionChangesObserver];
  *(_QWORD *)(v1 + 32) = &off_25048B540;
  swift_unknownObjectWeakAssign();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v1, sel_contextDidMergeChangesObjectIDsNotificationWithNotification_, *MEMORY[0x24BDBB450], *(_QWORD *)(v1 + 16));

  v3 = *(void **)&v0[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  v7[4] = sub_233495250;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2331C9ED4;
  v7[3] = &block_descriptor_18;
  v5 = _Block_copy(v7);
  v6 = v0;
  swift_release();
  objc_msgSend(v3, sel_performBlock_, v5);
  _Block_release(v5);
}

id TransactionsAndGroupsProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TransactionsAndGroupsProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TransactionsAndGroupsProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransactionsAndGroupsProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_233492810()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  _QWORD v5[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v5[4] = sub_2334962DC;
  v5[5] = v2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_2331C9ED4;
  v5[3] = &block_descriptor_7_0;
  v3 = _Block_copy(v5);
  v4 = v0;
  swift_release();
  objc_msgSend(v1, sel_performBlock_, v3);
  _Block_release(v3);
}

void sub_2334928CC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, _QWORD, uint64_t);
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  id v48;
  void *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  id v91[2];

  v91[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254247DA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_23361D634();
  v8 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23361CD40();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)&a1[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_context];
  v16 = objc_msgSend((id)objc_opt_self(), sel_currentQueryGenerationToken);
  v91[0] = 0;
  v89 = v15;
  LODWORD(v15) = objc_msgSend(v15, sel_setQueryGenerationFromToken_error_, v16, v91);

  v17 = v91[0];
  if ((_DWORD)v15)
  {
    v84 = v4;
    v85 = v7;
    v87 = v12;
    v88 = v11;
    v18 = &a1[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_formatterConfiguration];
    v86 = &v18[*(int *)(type metadata accessor for FormatterConfiguration() + 20)];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256051CF0);
    v19 = sub_23361D850();
    v20 = a1;
    v21 = *(_QWORD *)(v19 - 8);
    v22 = *(_QWORD *)(v21 + 72);
    v23 = v14;
    v24 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_233623D50;
    v26 = v25 + v24;
    v27 = *(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 104);
    v27(v26, *MEMORY[0x24BDCF240], v19);
    v27(v26 + v22, *MEMORY[0x24BDCF250], v19);
    v28 = v17;
    sub_2333EF4B0(v25);
    swift_setDeallocating();
    v29 = v23;
    swift_arrayDestroy();
    v30 = swift_deallocClassInstance();
    v31 = (uint64_t)v20;
    (*(void (**)(uint64_t))&v20[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_now])(v30);
    sub_23361D790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v90);
    v32 = sub_23361CCEC();
    if ((v33 & 1) != 0 || (v34 = v32, v35 = sub_23361CCD4(), (v36 & 1) != 0))
    {
      if (qword_256041CA0 != -1)
        swift_once();
      v50 = sub_23361DB80();
      __swift_project_value_buffer(v50, (uint64_t)qword_2560495B0);
      v51 = sub_23361DB68();
      v52 = sub_23361E768();
      v53 = os_log_type_enabled(v51, v52);
      v55 = v87;
      v54 = v88;
      if (v53)
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        MEMORY[0x234934590](v56, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v54);
      v57 = v31;
    }
    else
    {
      v90 = v35;
      type metadata accessor for ManagedInternalTransaction();
      v37 = *(_QWORD *)&v20[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier];
      v38 = *(_QWORD *)&v20[OBJC_IVAR____TtC10FinanceKit29TransactionsAndGroupsProvider_primaryAccountIdentifier + 8];
      LOBYTE(v91[0]) = 1;
      static ManagedInternalTransaction.latestTransactionDate(externalAccountId:source:in:)(v37, v38, v91, (uint64_t)v85);
      v86 = (char *)v38;
      v58 = v90;
      v83 = sub_233493380(v34, v90, (uint64_t)v85);
      v59 = (uint64_t)v86;
      v60 = (void *)sub_2334957B8(v37, (uint64_t)v86, v34, v58, (uint64_t)v85);
      v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256044950);
      v62 = sub_23361E984();
      v63 = sub_2331D073C(v62);
      v90 = v61;
      v64 = v59;
      v65 = v63;
      swift_bridgeObjectRelease();
      if (!v65)
        v65 = MEMORY[0x24BEE4AF8];
      v66 = v20;
      v67 = sub_233494C64(v65);
      swift_bridgeObjectRelease();

      v68 = sub_233495CE0(v37, v64, (uint64_t)v85);
      v69 = sub_23361E984();
      v70 = sub_2331D073C(v69);
      swift_bridgeObjectRelease();
      if (!v70)
        v70 = MEMORY[0x24BEE4AF8];
      v71 = v66;
      v72 = sub_233494E64(v70);
      swift_bridgeObjectRelease();

      v73 = sub_23361E534();
      v74 = v67;
      v75 = (uint64_t)v84;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v84, 1, 1, v73);
      sub_23361E4F8();
      v76 = v29;
      v77 = v71;
      v78 = sub_23361E4EC();
      v79 = (_QWORD *)swift_allocObject();
      v80 = MEMORY[0x24BEE6930];
      v79[2] = v78;
      v79[3] = v80;
      v81 = v83;
      v79[4] = v77;
      v79[5] = v81;
      v79[6] = v74;
      v79[7] = v72;
      sub_2333B205C(v75, (uint64_t)&unk_256051D08, (uint64_t)v79);
      swift_release();
      sub_2331D0F20((uint64_t)v85);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v76, v88);
      v57 = (uint64_t)v77;
    }
    sub_23349311C(v57);
  }
  else
  {
    v39 = v91[0];
    v40 = (void *)sub_23361D1B4();

    swift_willThrow();
    if (qword_256041CA0 != -1)
      swift_once();
    v41 = sub_23361DB80();
    __swift_project_value_buffer(v41, (uint64_t)qword_2560495B0);
    v42 = v40;
    v43 = v40;
    v44 = sub_23361DB68();
    v45 = sub_23361E768();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v46 = 138412290;
      v48 = v40;
      v49 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v91[0] = v49;
      sub_23361EBC4();
      *v47 = v49;

      _os_log_impl(&dword_233151000, v44, v45, "Failed to fetch latest transactions: %@.", v46, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25604C770);
      swift_arrayDestroy();
      MEMORY[0x234934590](v47, -1, -1);
      MEMORY[0x234934590](v46, -1, -1);

    }
    else
    {

    }
  }
}

